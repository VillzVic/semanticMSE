('sequence alignment', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('sequence alignment', 'photoshop', {'weight': 0.6})
('sequence alignment', 'sequence alignment', {'weight': 1})
('sequence alignment', 'flow network', {'weight': 0.6})
('sequence alignment', 'ellipsoid method', {'weight': 0.6})
('sequence alignment', 'chain matrix multiplication', {'weight': 0.6})
('sequence alignment', 'ieee', {'weight': 0.6})
('sequence alignment', 'backtracking', {'weight': 0.6})
('sequence alignment', 'nonlinear conjugate gradient method', {'weight': 0.6})
('sequence alignment', 'dynamic problem', {'weight': 0.6})
('sequence alignment', 'trust region', {'weight': 0.6})
('sequence alignment', 'function (mathematics)', {'weight': 0.6})
('sequence alignment', 'minimum spanning tree', {'weight': 0.6})
('sequence alignment', 'context-free grammar', {'weight': 0.6})
('sequence alignment', 'sequence mining', {'weight': 0.7})
('sequence alignment', 'branch and cut', {'weight': 0.6})
('sequence alignment', 'state variable', {'weight': 0.6})
('sequence alignment', 'associative array', {'weight': 0.6})
('sequence alignment', 'treewidth', {'weight': 0.6})
('sequence alignment', 'overlapping subproblem', {'weight': 0.6})
('sequence alignment', 'taylor & francis', {'weight': 0.6})
('sequence alignment', 'cutting-plane method', {'weight': 0.6})
('sequence alignment', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('sequence alignment', 'method of undetermined coefficients', {'weight': 0.6})
('sequence alignment', 'combinatorial optimization', {'weight': 0.6})
('sequence alignment', "newton's method in optimization", {'weight': 0.6})
('sequence alignment', 'blast', {'weight': 0.7})
('sequence alignment', 'matrix chain multiplication', {'weight': 0.6})
('sequence alignment', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('sequence alignment', 'dynamic time warping', {'weight': 0.6})
('sequence alignment', 'dynamic programming language', {'weight': 0.6})
('sequence alignment', 'call-by-need', {'weight': 0.6})
('sequence alignment', 'big-o notation', {'weight': 0.6})
('sequence alignment', 'comparison of optimization software', {'weight': 0.6})
('sequence alignment', 'quadratic programming', {'weight': 0.6})
('sequence alignment', 'common lisp', {'weight': 0.6})
('sequence alignment', 'sequence alignment algorithms', {'weight': 0.5})
('sequence alignment', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('sequence alignment', 'gradient descent', {'weight': 0.6})
('sequence alignment', 'patricia selinger', {'weight': 0.6})
('sequence alignment', 'discounting', {'weight': 0.6})
('sequence alignment', 'alignment-free sequence analysis', {'weight': 0.7})
('sequence alignment', 'ronald l. rivest', {'weight': 0.6})
('sequence alignment', 'iterative method', {'weight': 0.6})
('sequence alignment', 'limited-memory bfgs', {'weight': 0.6})
('sequence alignment', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('sequence alignment', 'longest common substring problem', {'weight': 0.6})
('sequence alignment', 'clifford stein', {'weight': 0.6})
('sequence alignment', 'computer chess', {'weight': 0.6})
('sequence alignment', 'linear programming', {'weight': 0.6})
('sequence alignment', 'bitonic tour', {'weight': 0.6})
('sequence alignment', 'linear search problem', {'weight': 0.6})
('sequence alignment', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('sequence alignment', 'systems analysis', {'weight': 0.6})
('sequence alignment', 'capital (economics)', {'weight': 0.6})
('sequence alignment', 'levenshtein distance', {'weight': 0.6})
('sequence alignment', 'barrier function', {'weight': 0.6})
('sequence alignment', 'nonlinear programming', {'weight': 0.6})
('sequence alignment', 'computational complexity of mathematical operations', {'weight': 0.6})
('sequence alignment', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('sequence alignment', 'gradient', {'weight': 0.6})
('sequence alignment', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('sequence alignment', 'bulletin of the american mathematical society', {'weight': 0.6})
('sequence alignment', 'u.s. english', {'weight': 0.6})
('sequence alignment', 'refutation table', {'weight': 0.6})
('sequence alignment', 'heuristic algorithm', {'weight': 0.6})
('sequence alignment', 'successive linear programming', {'weight': 0.6})
('sequence alignment', 'optimal substructure', {'weight': 0.6})
('sequence alignment', 'programming language', {'weight': 0.6})
('sequence alignment', 'mergesort', {'weight': 0.6})
('sequence alignment', "dijkstra's algorithm", {'weight': 0.6})
('sequence alignment', 'subgradient method', {'weight': 0.6})
('sequence alignment', 'call-by-name', {'weight': 0.6})
('sequence alignment', 'longest increasing subsequence problem', {'weight': 0.6})
('sequence alignment', 'edward prescott', {'weight': 0.6})
('sequence alignment', 'exponential time', {'weight': 0.6})
('sequence alignment', 'string searching algorithm', {'weight': 0.7})
('sequence alignment', 'principle of optimality', {'weight': 0.6})
('sequence alignment', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('sequence alignment', 'mathematical game', {'weight': 0.6})
('sequence alignment', 'nancy stokey', {'weight': 0.6})
('sequence alignment', 'approximation algorithm', {'weight': 0.6})
('sequence alignment', 'discrete-time', {'weight': 0.6})
('sequence alignment', 'cyk algorithm', {'weight': 0.6})
('sequence alignment', 'markov decision process', {'weight': 0.6})
('sequence alignment', "powell's method", {'weight': 0.6})
('sequence alignment', 'wolfe conditions', {'weight': 0.6})
('sequence alignment', 'convexity in economics', {'weight': 0.6})
('sequence alignment', 'transposition table', {'weight': 0.6})
('sequence alignment', 'economics', {'weight': 0.6})
('sequence alignment', 'backward induction', {'weight': 0.6})
('sequence alignment', 'golden section search', {'weight': 0.6})
('sequence alignment', 'edit distance', {'weight': 0.6})
('sequence alignment', 'tree structure', {'weight': 0.6})
('sequence alignment', 'exchange algorithm', {'weight': 0.6})
('sequence alignment', 'dover publications', {'weight': 0.6})
('sequence alignment', 'seam carving', {'weight': 0.6})
('sequence alignment', 'recursive least squares', {'weight': 0.6})
('sequence alignment', 'metaheuristic', {'weight': 0.6})
('sequence alignment', 'quasi-newton method', {'weight': 0.6})
('sequence alignment', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('sequence alignment', 'robert e. lucas', {'weight': 0.6})
('sequence alignment', 'non-convexity (economics)', {'weight': 0.6})
('sequence alignment', 'sr1 formula', {'weight': 0.6})
('sequence alignment', 'mathematical reviews', {'weight': 0.6})
('sequence alignment', 'puzzle', {'weight': 0.6})
('sequence alignment', 'computational phylogenetics', {'weight': 0.5})
('sequence alignment', 'shortest path problem', {'weight': 0.6})
('sequence alignment', 'dynamic algorithm', {'weight': 0.6})
('sequence alignment', 'augmented lagrangian method', {'weight': 0.6})
('sequence alignment', 'charles delisi', {'weight': 0.6})
('sequence alignment', 'greedy algorithm', {'weight': 0.6})
('sequence alignment', "karmarkar's algorithm", {'weight': 0.6})
('sequence alignment', 'lattice models', {'weight': 0.6})
('sequence alignment', 'utility', {'weight': 0.6})
('sequence alignment', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('sequence alignment', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('sequence alignment', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('sequence alignment', 'international standard book number', {'weight': 0.6})
('sequence alignment', 'undirected graph', {'weight': 0.6})
('sequence alignment', 'scheme (programming language)', {'weight': 0.6})
('sequence alignment', 'rna structure', {'weight': 0.6})
('sequence alignment', 'hanoi', {'weight': 0.6})
('sequence alignment', 'perl', {'weight': 0.6})
('sequence alignment', 'digital object identifier', {'weight': 0.6})
('sequence alignment', 'sequential quadratic programming', {'weight': 0.6})
('sequence alignment', "dinic's algorithm", {'weight': 0.6})
('sequence alignment', 'pseudo-polynomial time', {'weight': 0.6})
('sequence alignment', 'ugene', {'weight': 0.7})
('sequence alignment', 'partition problem', {'weight': 0.6})
('sequence alignment', 'stochastic programming', {'weight': 0.6})
('sequence alignment', 'hill climbing', {'weight': 0.6})
('sequence alignment', 'top-down', {'weight': 0.6})
('sequence alignment', 'de boor algorithm', {'weight': 0.6})
('sequence alignment', 'optimization algorithm', {'weight': 0.6})
('sequence alignment', "kruskal's algorithm", {'weight': 0.6})
('sequence alignment', 'jacques philippe marie binet', {'weight': 0.6})
('sequence alignment', 'tabu search', {'weight': 0.6})
('sequence alignment', 'divide and conquer algorithm', {'weight': 0.6})
('sequence alignment', "johnson's algorithm", {'weight': 0.6})
('sequence alignment', 'evolutionary algorithm', {'weight': 0.6})
('sequence alignment', 'clique-width', {'weight': 0.6})
('sequence alignment', 'dynamic programming', {'weight': 0.6})
('sequence alignment', 'subroutine', {'weight': 0.6})
('sequence alignment', 'simulated annealing', {'weight': 0.6})
('sequence alignment', 'tower of hanoi', {'weight': 0.6})
('sequence alignment', 'branch and bound', {'weight': 0.6})
('sequence alignment', 'engineering', {'weight': 0.6})
('sequence alignment', 'matroid', {'weight': 0.6})
('sequence alignment', 'viterbi algorithm', {'weight': 0.6})
('sequence alignment', "lemke's algorithm", {'weight': 0.6})
('sequence alignment', 'simplex algorithm', {'weight': 0.6})
('sequence alignment', 'local search (optimization)', {'weight': 0.6})
('sequence alignment', 'hessian matrix', {'weight': 0.6})
('sequence alignment', 'ibm system r', {'weight': 0.6})
('sequence alignment', 'penalty method', {'weight': 0.6})
('sequence alignment', 'prolog', {'weight': 0.6})
('sequence alignment', 'time-invariant system', {'weight': 0.6})
('sequence alignment', 'criss-cross algorithm', {'weight': 0.6})
('sequence alignment', 'revised simplex algorithm', {'weight': 0.6})
('sequence alignment', 'the mathematical association of america', {'weight': 0.6})
('sequence alignment', 'line search', {'weight': 0.6})
('sequence alignment', 'j (programming language)', {'weight': 0.6})
('sequence alignment', 'word wrap', {'weight': 0.6})
('sequence alignment', 'subset sum problem', {'weight': 0.6})
('sequence alignment', 'integer programming', {'weight': 0.6})
('sequence alignment', 'nucleosome', {'weight': 0.6})
('sequence alignment', 'earley algorithm', {'weight': 0.6})
('sequence alignment', 'referential transparency (computer science)', {'weight': 0.6})
('sequence alignment', 'recursion', {'weight': 0.6})
('sequence alignment', 'mathematica', {'weight': 0.6})
('sequence alignment', 'quicksort', {'weight': 0.6})
('sequence alignment', 'recursion (computer science)', {'weight': 0.6})
('sequence alignment', 'checkerboard', {'weight': 0.6})
('sequence alignment', 'computer science', {'weight': 0.6})
('sequence alignment', 'brute-force search', {'weight': 0.6})
('sequence alignment', 'mathematics', {'weight': 0.6})
('sequence alignment', 'depth-first search', {'weight': 0.6})
('sequence alignment', 'top-down and bottom-up design', {'weight': 0.6})
('sequence alignment', 'correspondence problem', {'weight': 0.6})
('sequence alignment', 'transcription factor', {'weight': 0.6})
('sequence alignment', 'tree decomposition', {'weight': 0.6})
('sequence alignment', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('sequence alignment', 'structural alignment', {'weight': 0.6})
('sequence alignment', 'local convergence', {'weight': 0.6})
('sequence alignment', 'knapsack problem', {'weight': 0.6})
('sequence alignment', 'graph algorithm', {'weight': 0.6})
('sequence alignment', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('sequence alignment', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.7})
('sequence alignment', 'hidden markov model', {'weight': 0.6})
('sequence alignment', 'string (computer science)', {'weight': 0.6})
('sequence alignment', 'bioinformatics', {'weight': 0.6})
('sequence alignment', 'genetics', {'weight': 0.6})
('sequence alignment', 'mathematical optimization', {'weight': 0.6})
('sequence alignment', 'artificial neural networks', {'weight': 0.6})
('sequence alignment', 'introduction to algorithms', {'weight': 0.6})
('sequence alignment', 'thomas h. cormen', {'weight': 0.6})
('sequence alignment', 'geneious', {'weight': 0.7})
('sequence alignment', 'music information retrieval', {'weight': 0.6})
('sequence alignment', 'beat (music)', {'weight': 0.6})
('sequence alignment', 'longest common subsequence problem', {'weight': 0.6})
('sequence alignment', 'convex minimization', {'weight': 0.6})
('sequence alignment', 'successive parabolic interpolation', {'weight': 0.6})
('sequence alignment', 'fibonacci sequence', {'weight': 0.6})
('sequence alignment', 'maximum subarray problem', {'weight': 0.6})
('sequence alignment', 'convex optimization', {'weight': 0.6})
('sequence alignment', 'memoization', {'weight': 0.6})
('sequence alignment', 'richard bellman', {'weight': 0.6})
('sequence alignment', 'exponential growth', {'weight': 0.6})
('sequence alignment', 'charles e. leiserson', {'weight': 0.6})
('sequence alignment', 'charles erwin wilson', {'weight': 0.6})
('sequence alignment', 'interval scheduling', {'weight': 0.6})
('sequence alignment', 'chart parser', {'weight': 0.6})
('sequence alignment', 'travelling salesman problem', {'weight': 0.6})
('sequence alignment', 'bellman equation', {'weight': 0.6})
('dover publications', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('dover publications', 'photoshop', {'weight': 0.6})
('dover publications', 'sequence alignment', {'weight': 0.6})
('dover publications', 'flow network', {'weight': 0.6})
('dover publications', 'ellipsoid method', {'weight': 0.6})
('dover publications', 'chain matrix multiplication', {'weight': 0.6})
('dover publications', 'ieee', {'weight': 0.6})
('dover publications', 'backtracking', {'weight': 0.6})
('dover publications', 'nonlinear conjugate gradient method', {'weight': 0.6})
('dover publications', 'dynamic problem', {'weight': 0.6})
('dover publications', 'trust region', {'weight': 0.6})
('dover publications', 'function (mathematics)', {'weight': 0.6})
('dover publications', 'minimum spanning tree', {'weight': 0.6})
('dover publications', 'context-free grammar', {'weight': 0.6})
('dover publications', 'branch and cut', {'weight': 0.6})
('dover publications', 'state variable', {'weight': 0.6})
('dover publications', 'treewidth', {'weight': 0.6})
('dover publications', 'overlapping subproblem', {'weight': 0.6})
('dover publications', 'taylor & francis', {'weight': 0.6})
('dover publications', 'cutting-plane method', {'weight': 0.6})
('dover publications', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('dover publications', 'method of undetermined coefficients', {'weight': 0.6})
('dover publications', 'combinatorial optimization', {'weight': 0.6})
('dover publications', "newton's method in optimization", {'weight': 0.6})
('dover publications', 'matrix chain multiplication', {'weight': 0.6})
('dover publications', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('dover publications', 'dynamic time warping', {'weight': 0.6})
('dover publications', 'dynamic programming language', {'weight': 0.6})
('dover publications', 'call-by-need', {'weight': 0.6})
('dover publications', 'big-o notation', {'weight': 0.6})
('dover publications', 'comparison of optimization software', {'weight': 0.6})
('dover publications', 'quadratic programming', {'weight': 0.6})
('dover publications', 'common lisp', {'weight': 0.6})
('dover publications', 'barrier function', {'weight': 0.6})
('dover publications', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('dover publications', 'gradient descent', {'weight': 0.6})
('dover publications', 'patricia selinger', {'weight': 0.6})
('dover publications', 'discounting', {'weight': 0.6})
('dover publications', 'ronald l. rivest', {'weight': 0.6})
('dover publications', 'iterative method', {'weight': 0.6})
('dover publications', 'limited-memory bfgs', {'weight': 0.6})
('dover publications', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('dover publications', 'longest common substring problem', {'weight': 0.6})
('dover publications', 'clifford stein', {'weight': 0.6})
('dover publications', 'computer chess', {'weight': 0.6})
('dover publications', 'linear programming', {'weight': 0.6})
('dover publications', 'bitonic tour', {'weight': 0.6})
('dover publications', 'linear search problem', {'weight': 0.6})
('dover publications', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('dover publications', 'systems analysis', {'weight': 0.6})
('dover publications', 'capital (economics)', {'weight': 0.6})
('dover publications', 'levenshtein distance', {'weight': 0.6})
('dover publications', 'nonlinear programming', {'weight': 0.6})
('dover publications', 'computational complexity of mathematical operations', {'weight': 0.6})
('dover publications', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('dover publications', 'gradient', {'weight': 0.6})
('dover publications', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('dover publications', 'bulletin of the american mathematical society', {'weight': 0.6})
('dover publications', 'u.s. english', {'weight': 0.6})
('dover publications', 'refutation table', {'weight': 0.6})
('dover publications', 'heuristic algorithm', {'weight': 0.6})
('dover publications', 'successive linear programming', {'weight': 0.6})
('dover publications', 'optimal substructure', {'weight': 0.6})
('dover publications', 'programming language', {'weight': 0.6})
('dover publications', 'mergesort', {'weight': 0.6})
('dover publications', "dijkstra's algorithm", {'weight': 0.6})
('dover publications', 'subgradient method', {'weight': 0.6})
('dover publications', 'call-by-name', {'weight': 0.6})
('dover publications', 'longest increasing subsequence problem', {'weight': 0.6})
('dover publications', 'edward prescott', {'weight': 0.6})
('dover publications', 'exponential time', {'weight': 0.6})
('dover publications', 'principle of optimality', {'weight': 0.6})
('dover publications', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('dover publications', 'mathematical game', {'weight': 0.6})
('dover publications', 'nancy stokey', {'weight': 0.6})
('dover publications', 'approximation algorithm', {'weight': 0.6})
('dover publications', 'discrete-time', {'weight': 0.6})
('dover publications', 'cyk algorithm', {'weight': 0.6})
('dover publications', 'markov decision process', {'weight': 0.6})
('dover publications', "powell's method", {'weight': 0.6})
('dover publications', 'wolfe conditions', {'weight': 0.6})
('dover publications', 'convexity in economics', {'weight': 0.6})
('dover publications', 'transposition table', {'weight': 0.6})
('dover publications', 'economics', {'weight': 0.6})
('dover publications', 'backward induction', {'weight': 0.6})
('dover publications', 'golden section search', {'weight': 0.6})
('dover publications', 'edit distance', {'weight': 0.6})
('dover publications', 'tree structure', {'weight': 0.6})
('dover publications', 'exchange algorithm', {'weight': 0.6})
('dover publications', 'dover publications', {'weight': 1})
('dover publications', 'seam carving', {'weight': 0.6})
('dover publications', 'recursive least squares', {'weight': 0.6})
('dover publications', 'metaheuristic', {'weight': 0.6})
('dover publications', 'quasi-newton method', {'weight': 0.6})
('dover publications', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('dover publications', 'robert e. lucas', {'weight': 0.6})
('dover publications', 'non-convexity (economics)', {'weight': 0.6})
('dover publications', 'sr1 formula', {'weight': 0.6})
('dover publications', 'mathematical reviews', {'weight': 0.6})
('dover publications', 'puzzle', {'weight': 0.6})
('dover publications', 'associative array', {'weight': 0.6})
('dover publications', 'shortest path problem', {'weight': 0.6})
('dover publications', 'dynamic algorithm', {'weight': 0.6})
('dover publications', 'augmented lagrangian method', {'weight': 0.6})
('dover publications', 'charles delisi', {'weight': 0.6})
('dover publications', 'greedy algorithm', {'weight': 0.6})
('dover publications', "karmarkar's algorithm", {'weight': 0.6})
('dover publications', 'lattice models', {'weight': 0.6})
('dover publications', 'utility', {'weight': 0.6})
('dover publications', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('dover publications', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('dover publications', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('dover publications', 'international standard book number', {'weight': 0.6})
('dover publications', 'undirected graph', {'weight': 0.6})
('dover publications', 'scheme (programming language)', {'weight': 0.6})
('dover publications', 'rna structure', {'weight': 0.6})
('dover publications', 'hanoi', {'weight': 0.6})
('dover publications', 'perl', {'weight': 0.6})
('dover publications', 'digital object identifier', {'weight': 0.6})
('dover publications', 'sequential quadratic programming', {'weight': 0.6})
('dover publications', "dinic's algorithm", {'weight': 0.6})
('dover publications', 'pseudo-polynomial time', {'weight': 0.6})
('dover publications', 'partition problem', {'weight': 0.6})
('dover publications', 'stochastic programming', {'weight': 0.6})
('dover publications', 'hill climbing', {'weight': 0.6})
('dover publications', 'top-down', {'weight': 0.6})
('dover publications', 'de boor algorithm', {'weight': 0.6})
('dover publications', 'optimization algorithm', {'weight': 0.6})
('dover publications', "kruskal's algorithm", {'weight': 0.6})
('dover publications', 'jacques philippe marie binet', {'weight': 0.6})
('dover publications', 'tabu search', {'weight': 0.6})
('dover publications', 'divide and conquer algorithm', {'weight': 0.6})
('dover publications', "johnson's algorithm", {'weight': 0.6})
('dover publications', 'evolutionary algorithm', {'weight': 0.6})
('dover publications', 'clique-width', {'weight': 0.6})
('dover publications', 'dynamic programming', {'weight': 0.6})
('dover publications', 'subroutine', {'weight': 0.6})
('dover publications', 'simulated annealing', {'weight': 0.6})
('dover publications', 'tower of hanoi', {'weight': 0.6})
('dover publications', 'branch and bound', {'weight': 0.6})
('dover publications', 'engineering', {'weight': 0.6})
('dover publications', 'matroid', {'weight': 0.6})
('dover publications', 'viterbi algorithm', {'weight': 0.6})
('dover publications', "lemke's algorithm", {'weight': 0.6})
('dover publications', 'simplex algorithm', {'weight': 0.6})
('dover publications', 'local search (optimization)', {'weight': 0.6})
('dover publications', 'hessian matrix', {'weight': 0.6})
('dover publications', 'ibm system r', {'weight': 0.6})
('dover publications', 'penalty method', {'weight': 0.6})
('dover publications', 'prolog', {'weight': 0.6})
('dover publications', 'time-invariant system', {'weight': 0.6})
('dover publications', 'criss-cross algorithm', {'weight': 0.6})
('dover publications', 'revised simplex algorithm', {'weight': 0.6})
('dover publications', 'the mathematical association of america', {'weight': 0.6})
('dover publications', 'line search', {'weight': 0.6})
('dover publications', 'j (programming language)', {'weight': 0.6})
('dover publications', 'word wrap', {'weight': 0.6})
('dover publications', 'subset sum problem', {'weight': 0.6})
('dover publications', 'integer programming', {'weight': 0.6})
('dover publications', 'nucleosome', {'weight': 0.6})
('dover publications', 'earley algorithm', {'weight': 0.6})
('dover publications', 'referential transparency (computer science)', {'weight': 0.6})
('dover publications', 'recursion', {'weight': 0.6})
('dover publications', 'mathematica', {'weight': 0.6})
('dover publications', 'quicksort', {'weight': 0.6})
('dover publications', 'recursion (computer science)', {'weight': 0.6})
('dover publications', 'checkerboard', {'weight': 0.6})
('dover publications', 'computer science', {'weight': 0.6})
('dover publications', 'brute-force search', {'weight': 0.6})
('dover publications', 'mathematics', {'weight': 0.6})
('dover publications', 'depth-first search', {'weight': 0.6})
('dover publications', 'top-down and bottom-up design', {'weight': 0.6})
('dover publications', 'correspondence problem', {'weight': 0.6})
('dover publications', 'transcription factor', {'weight': 0.6})
('dover publications', 'tree decomposition', {'weight': 0.6})
('dover publications', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('dover publications', 'structural alignment', {'weight': 0.6})
('dover publications', 'local convergence', {'weight': 0.6})
('dover publications', 'knapsack problem', {'weight': 0.6})
('dover publications', 'graph algorithm', {'weight': 0.6})
('dover publications', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('dover publications', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('dover publications', 'hidden markov model', {'weight': 0.6})
('dover publications', 'string (computer science)', {'weight': 0.6})
('dover publications', 'bioinformatics', {'weight': 0.6})
('dover publications', 'genetics', {'weight': 0.6})
('dover publications', 'mathematical optimization', {'weight': 0.6})
('dover publications', 'artificial neural networks', {'weight': 0.6})
('dover publications', 'introduction to algorithms', {'weight': 0.6})
('dover publications', 'thomas h. cormen', {'weight': 0.6})
('dover publications', 'music information retrieval', {'weight': 0.6})
('dover publications', 'beat (music)', {'weight': 0.6})
('dover publications', 'longest common subsequence problem', {'weight': 0.6})
('dover publications', 'convex minimization', {'weight': 0.6})
('dover publications', 'successive parabolic interpolation', {'weight': 0.6})
('dover publications', 'fibonacci sequence', {'weight': 0.6})
('dover publications', 'maximum subarray problem', {'weight': 0.6})
('dover publications', 'convex optimization', {'weight': 0.6})
('dover publications', 'memoization', {'weight': 0.6})
('dover publications', 'richard bellman', {'weight': 0.6})
('dover publications', 'exponential growth', {'weight': 0.6})
('dover publications', 'charles e. leiserson', {'weight': 0.6})
('dover publications', 'charles erwin wilson', {'weight': 0.6})
('dover publications', 'interval scheduling', {'weight': 0.6})
('dover publications', 'chart parser', {'weight': 0.6})
('dover publications', 'travelling salesman problem', {'weight': 0.6})
('dover publications', 'bellman equation', {'weight': 0.6})
("dijkstra's algorithm", 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
("dijkstra's algorithm", 'photoshop', {'weight': 0.6})
("dijkstra's algorithm", 'sequence alignment', {'weight': 0.6})
("dijkstra's algorithm", 'flood fill', {'weight': 0.7})
("dijkstra's algorithm", 'ellipsoid method', {'weight': 0.6})
("dijkstra's algorithm", 'chain matrix multiplication', {'weight': 0.6})
("dijkstra's algorithm", 'ieee', {'weight': 0.6})
("dijkstra's algorithm", 'backtracking', {'weight': 0.6})
("dijkstra's algorithm", 'nonlinear conjugate gradient method', {'weight': 0.6})
("dijkstra's algorithm", 'dynamic problem', {'weight': 0.6})
("dijkstra's algorithm", 'trust region', {'weight': 0.6})
("dijkstra's algorithm", 'function (mathematics)', {'weight': 0.6})
("dijkstra's algorithm", 'euclidean shortest path', {'weight': 0.7})
("dijkstra's algorithm", 'minimum spanning tree', {'weight': 0.6})
("dijkstra's algorithm", 'context-free grammar', {'weight': 0.6})
("dijkstra's algorithm", 'branch and cut', {'weight': 0.6})
("dijkstra's algorithm", 'state variable', {'weight': 0.6})
("dijkstra's algorithm", 'treewidth', {'weight': 0.6})
("dijkstra's algorithm", 'overlapping subproblem', {'weight': 0.6})
("dijkstra's algorithm", 'refutation table', {'weight': 0.6})
("dijkstra's algorithm", 'longest path problem', {'weight': 0.7})
("dijkstra's algorithm", 'cutting-plane method', {'weight': 0.6})
("dijkstra's algorithm", 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.7})
("dijkstra's algorithm", 'method of undetermined coefficients', {'weight': 0.6})
("dijkstra's algorithm", 'flow network', {'weight': 0.6})
("dijkstra's algorithm", "newton's method in optimization", {'weight': 0.6})
("dijkstra's algorithm", 'matrix chain multiplication', {'weight': 0.6})
("dijkstra's algorithm", 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
("dijkstra's algorithm", 'dynamic time warping', {'weight': 0.6})
("dijkstra's algorithm", 'dynamic programming language', {'weight': 0.6})
("dijkstra's algorithm", 'call-by-need', {'weight': 0.6})
("dijkstra's algorithm", 'big-o notation', {'weight': 0.6})
("dijkstra's algorithm", 'graph algorithms', {'weight': 0.5})
("dijkstra's algorithm", 'comparison of optimization software', {'weight': 0.6})
("dijkstra's algorithm", 'quadratic programming', {'weight': 0.6})
("dijkstra's algorithm", 'common lisp', {'weight': 0.6})
("dijkstra's algorithm", 'barrier function', {'weight': 0.6})
("dijkstra's algorithm", 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
("dijkstra's algorithm", 'gradient descent', {'weight': 0.6})
("dijkstra's algorithm", 'patricia selinger', {'weight': 0.6})
("dijkstra's algorithm", 'discounting', {'weight': 0.6})
("dijkstra's algorithm", 'ronald l. rivest', {'weight': 0.6})
("dijkstra's algorithm", 'iterative method', {'weight': 0.6})
("dijkstra's algorithm", 'limited-memory bfgs', {'weight': 0.6})
("dijkstra's algorithm", '1959 in computer science', {'weight': 0.5})
("dijkstra's algorithm", 'longest common substring problem', {'weight': 0.6})
("dijkstra's algorithm", 'clifford stein', {'weight': 0.6})
("dijkstra's algorithm", 'computer chess', {'weight': 0.6})
("dijkstra's algorithm", 'linear programming', {'weight': 0.6})
("dijkstra's algorithm", 'bitonic tour', {'weight': 0.6})
("dijkstra's algorithm", 'linear search problem', {'weight': 0.6})
("dijkstra's algorithm", 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
("dijkstra's algorithm", 'systems analysis', {'weight': 0.6})
("dijkstra's algorithm", 'capital (economics)', {'weight': 0.6})
("dijkstra's algorithm", 'levenshtein distance', {'weight': 0.6})
("dijkstra's algorithm", 'nonlinear programming', {'weight': 0.6})
("dijkstra's algorithm", 'computational complexity of mathematical operations', {'weight': 0.6})
("dijkstra's algorithm", 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
("dijkstra's algorithm", 'gradient', {'weight': 0.6})
("dijkstra's algorithm", 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.7})
("dijkstra's algorithm", 'bulletin of the american mathematical society', {'weight': 0.6})
("dijkstra's algorithm", 'u.s. english', {'weight': 0.6})
("dijkstra's algorithm", 'longest increasing subsequence problem', {'weight': 0.6})
("dijkstra's algorithm", 'heuristic algorithm', {'weight': 0.6})
("dijkstra's algorithm", 'successive linear programming', {'weight': 0.6})
("dijkstra's algorithm", 'optimal substructure', {'weight': 0.6})
("dijkstra's algorithm", 'taylor & francis', {'weight': 0.6})
("dijkstra's algorithm", 'programming language', {'weight': 0.6})
("dijkstra's algorithm", 'mergesort', {'weight': 0.6})
("dijkstra's algorithm", "dijkstra's algorithm", {'weight': 1})
("dijkstra's algorithm", 'subgradient method', {'weight': 0.6})
("dijkstra's algorithm", 'call-by-name', {'weight': 0.6})
("dijkstra's algorithm", 'combinatorial optimization', {'weight': 0.6})
("dijkstra's algorithm", 'edward prescott', {'weight': 0.6})
("dijkstra's algorithm", 'exponential time', {'weight': 0.6})
("dijkstra's algorithm", 'principle of optimality', {'weight': 0.6})
("dijkstra's algorithm", "bor\xe5\xafvka's algorithm", {'weight': 0.6})
("dijkstra's algorithm", 'mathematical game', {'weight': 0.6})
("dijkstra's algorithm", 'nancy stokey', {'weight': 0.6})
("dijkstra's algorithm", 'approximation algorithm', {'weight': 0.6})
("dijkstra's algorithm", 'dutch inventions', {'weight': 0.5})
("dijkstra's algorithm", 'discrete-time', {'weight': 0.6})
("dijkstra's algorithm", 'cyk algorithm', {'weight': 0.6})
("dijkstra's algorithm", 'markov decision process', {'weight': 0.6})
("dijkstra's algorithm", "powell's method", {'weight': 0.6})
("dijkstra's algorithm", 'wolfe conditions', {'weight': 0.6})
("dijkstra's algorithm", 'convexity in economics', {'weight': 0.6})
("dijkstra's algorithm", 'transposition table', {'weight': 0.6})
("dijkstra's algorithm", 'economics', {'weight': 0.6})
("dijkstra's algorithm", 'backward induction', {'weight': 0.6})
("dijkstra's algorithm", 'routing algorithms', {'weight': 0.5})
("dijkstra's algorithm", 'golden section search', {'weight': 0.6})
("dijkstra's algorithm", 'edit distance', {'weight': 0.6})
("dijkstra's algorithm", 'tree structure', {'weight': 0.6})
("dijkstra's algorithm", 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
("dijkstra's algorithm", 'dover publications', {'weight': 0.6})
("dijkstra's algorithm", 'seam carving', {'weight': 0.6})
("dijkstra's algorithm", 'recursive least squares', {'weight': 0.6})
("dijkstra's algorithm", 'metaheuristic', {'weight': 0.6})
("dijkstra's algorithm", 'quasi-newton method', {'weight': 0.6})
("dijkstra's algorithm", 'on-line encyclopedia of integer sequences', {'weight': 0.6})
("dijkstra's algorithm", 'robert e. lucas', {'weight': 0.6})
("dijkstra's algorithm", 'non-convexity (economics)', {'weight': 0.6})
("dijkstra's algorithm", 'search algorithms', {'weight': 0.5})
("dijkstra's algorithm", 'sr1 formula', {'weight': 0.6})
("dijkstra's algorithm", 'mathematical reviews', {'weight': 0.6})
("dijkstra's algorithm", 'puzzle', {'weight': 0.6})
("dijkstra's algorithm", 'associative array', {'weight': 0.6})
("dijkstra's algorithm", 'exchange algorithm', {'weight': 0.6})
("dijkstra's algorithm", 'shortest path problem', {'weight': 0.6})
("dijkstra's algorithm", 'dynamic algorithm', {'weight': 0.6})
("dijkstra's algorithm", 'augmented lagrangian method', {'weight': 0.6})
("dijkstra's algorithm", 'charles delisi', {'weight': 0.6})
("dijkstra's algorithm", 'greedy algorithm', {'weight': 0.6})
("dijkstra's algorithm", "karmarkar's algorithm", {'weight': 0.6})
("dijkstra's algorithm", 'lattice models', {'weight': 0.6})
("dijkstra's algorithm", 'utility', {'weight': 0.6})
("dijkstra's algorithm", 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
("dijkstra's algorithm", 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
("dijkstra's algorithm", 'push-relabel maximum flow algorithm', {'weight': 0.6})
("dijkstra's algorithm", 'international standard book number', {'weight': 0.6})
("dijkstra's algorithm", 'undirected graph', {'weight': 0.6})
("dijkstra's algorithm", 'scheme (programming language)', {'weight': 0.6})
("dijkstra's algorithm", 'rna structure', {'weight': 0.6})
("dijkstra's algorithm", 'hanoi', {'weight': 0.6})
("dijkstra's algorithm", 'perl', {'weight': 0.6})
("dijkstra's algorithm", 'digital object identifier', {'weight': 0.6})
("dijkstra's algorithm", 'sequential quadratic programming', {'weight': 0.6})
("dijkstra's algorithm", "dinic's algorithm", {'weight': 0.6})
("dijkstra's algorithm", 'pseudo-polynomial time', {'weight': 0.6})
("dijkstra's algorithm", 'partition problem', {'weight': 0.6})
("dijkstra's algorithm", 'stochastic programming', {'weight': 0.6})
("dijkstra's algorithm", 'hill climbing', {'weight': 0.6})
("dijkstra's algorithm", 'top-down', {'weight': 0.6})
("dijkstra's algorithm", 'de boor algorithm', {'weight': 0.6})
("dijkstra's algorithm", 'optimization algorithm', {'weight': 0.6})
("dijkstra's algorithm", "kruskal's algorithm", {'weight': 0.6})
("dijkstra's algorithm", 'jacques philippe marie binet', {'weight': 0.6})
("dijkstra's algorithm", 'tabu search', {'weight': 0.6})
("dijkstra's algorithm", 'computer science portal', {'weight': 0.7})
("dijkstra's algorithm", 'divide and conquer algorithm', {'weight': 0.6})
("dijkstra's algorithm", "johnson's algorithm", {'weight': 0.7})
("dijkstra's algorithm", 'evolutionary algorithm', {'weight': 0.6})
("dijkstra's algorithm", 'clique-width', {'weight': 0.6})
("dijkstra's algorithm", 'dynamic programming', {'weight': 0.6})
("dijkstra's algorithm", 'subroutine', {'weight': 0.6})
("dijkstra's algorithm", 'simulated annealing', {'weight': 0.6})
("dijkstra's algorithm", 'tower of hanoi', {'weight': 0.6})
("dijkstra's algorithm", 'branch and bound', {'weight': 0.6})
("dijkstra's algorithm", 'engineering', {'weight': 0.6})
("dijkstra's algorithm", 'matroid', {'weight': 0.6})
("dijkstra's algorithm", 'viterbi algorithm', {'weight': 0.6})
("dijkstra's algorithm", "lemke's algorithm", {'weight': 0.6})
("dijkstra's algorithm", 'simplex algorithm', {'weight': 0.6})
("dijkstra's algorithm", 'local search (optimization)', {'weight': 0.6})
("dijkstra's algorithm", 'hessian matrix', {'weight': 0.6})
("dijkstra's algorithm", 'ibm system r', {'weight': 0.6})
("dijkstra's algorithm", 'penalty method', {'weight': 0.6})
("dijkstra's algorithm", 'a* search algorithm', {'weight': 0.7})
("dijkstra's algorithm", 'prolog', {'weight': 0.6})
("dijkstra's algorithm", 'time-invariant system', {'weight': 0.6})
("dijkstra's algorithm", 'criss-cross algorithm', {'weight': 0.6})
("dijkstra's algorithm", 'revised simplex algorithm', {'weight': 0.6})
("dijkstra's algorithm", 'the mathematical association of america', {'weight': 0.6})
("dijkstra's algorithm", 'line search', {'weight': 0.6})
("dijkstra's algorithm", 'j (programming language)', {'weight': 0.6})
("dijkstra's algorithm", 'word wrap', {'weight': 0.6})
("dijkstra's algorithm", 'subset sum problem', {'weight': 0.6})
("dijkstra's algorithm", 'integer programming', {'weight': 0.6})
("dijkstra's algorithm", 'nucleosome', {'weight': 0.6})
("dijkstra's algorithm", 'earley algorithm', {'weight': 0.6})
("dijkstra's algorithm", 'referential transparency (computer science)', {'weight': 0.6})
("dijkstra's algorithm", 'recursion', {'weight': 0.6})
("dijkstra's algorithm", 'mathematica', {'weight': 0.6})
("dijkstra's algorithm", 'quicksort', {'weight': 0.6})
("dijkstra's algorithm", 'recursion (computer science)', {'weight': 0.6})
("dijkstra's algorithm", 'checkerboard', {'weight': 0.6})
("dijkstra's algorithm", 'computer science', {'weight': 0.6})
("dijkstra's algorithm", 'brute-force search', {'weight': 0.6})
("dijkstra's algorithm", 'mathematics', {'weight': 0.6})
("dijkstra's algorithm", 'depth-first search', {'weight': 0.6})
("dijkstra's algorithm", 'top-down and bottom-up design', {'weight': 0.6})
("dijkstra's algorithm", 'correspondence problem', {'weight': 0.6})
("dijkstra's algorithm", 'transcription factor', {'weight': 0.6})
("dijkstra's algorithm", 'tree decomposition', {'weight': 0.6})
("dijkstra's algorithm", 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
("dijkstra's algorithm", 'structural alignment', {'weight': 0.6})
("dijkstra's algorithm", 'local convergence', {'weight': 0.6})
("dijkstra's algorithm", 'knapsack problem', {'weight': 0.6})
("dijkstra's algorithm", 'graph algorithm', {'weight': 0.6})
("dijkstra's algorithm", 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
("dijkstra's algorithm", 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
("dijkstra's algorithm", 'hidden markov model', {'weight': 0.6})
("dijkstra's algorithm", 'string (computer science)', {'weight': 0.6})
("dijkstra's algorithm", 'bioinformatics', {'weight': 0.6})
("dijkstra's algorithm", 'genetics', {'weight': 0.6})
("dijkstra's algorithm", 'mathematical optimization', {'weight': 0.6})
("dijkstra's algorithm", 'artificial neural networks', {'weight': 0.6})
("dijkstra's algorithm", 'introduction to algorithms', {'weight': 0.6})
("dijkstra's algorithm", 'thomas h. cormen', {'weight': 0.6})
("dijkstra's algorithm", 'music information retrieval', {'weight': 0.6})
("dijkstra's algorithm", 'beat (music)', {'weight': 0.6})
("dijkstra's algorithm", 'longest common subsequence problem', {'weight': 0.6})
("dijkstra's algorithm", 'convex minimization', {'weight': 0.6})
("dijkstra's algorithm", 'successive parabolic interpolation', {'weight': 0.6})
("dijkstra's algorithm", 'fibonacci sequence', {'weight': 0.6})
("dijkstra's algorithm", 'maximum subarray problem', {'weight': 0.6})
("dijkstra's algorithm", 'convex optimization', {'weight': 0.6})
("dijkstra's algorithm", 'memoization', {'weight': 0.6})
("dijkstra's algorithm", 'richard bellman', {'weight': 0.6})
("dijkstra's algorithm", 'exponential growth', {'weight': 0.6})
("dijkstra's algorithm", 'charles e. leiserson', {'weight': 0.6})
("dijkstra's algorithm", 'charles erwin wilson', {'weight': 0.6})
("dijkstra's algorithm", 'interval scheduling', {'weight': 0.6})
("dijkstra's algorithm", 'chart parser', {'weight': 0.6})
("dijkstra's algorithm", 'travelling salesman problem', {'weight': 0.6})
("dijkstra's algorithm", 'bellman equation', {'weight': 0.6})
('flow network', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('flow network', 'photoshop', {'weight': 0.6})
('flow network', 'sequence alignment', {'weight': 0.6})
('flow network', 'flow network', {'weight': 1})
('flow network', 'ellipsoid method', {'weight': 0.6})
('flow network', 'chain matrix multiplication', {'weight': 0.6})
('flow network', 'ieee', {'weight': 0.6})
('flow network', 'backtracking', {'weight': 0.6})
('flow network', 'nonlinear conjugate gradient method', {'weight': 0.6})
('flow network', 'max-flow min-cut theorem', {'weight': 0.7})
('flow network', 'dynamic problem', {'weight': 0.6})
('flow network', 'trust region', {'weight': 0.6})
('flow network', 'function (mathematics)', {'weight': 0.6})
('flow network', 'minimum spanning tree', {'weight': 0.6})
('flow network', 'context-free grammar', {'weight': 0.6})
('flow network', 'branch and cut', {'weight': 0.6})
('flow network', 'state variable', {'weight': 0.6})
('flow network', 'treewidth', {'weight': 0.6})
('flow network', 'overlapping subproblem', {'weight': 0.6})
('flow network', 'taylor & francis', {'weight': 0.6})
('flow network', 'cutting-plane method', {'weight': 0.6})
('flow network', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('flow network', 'method of undetermined coefficients', {'weight': 0.6})
('flow network', 'combinatorial optimization', {'weight': 0.6})
('flow network', "newton's method in optimization", {'weight': 0.6})
('flow network', 'matrix chain multiplication', {'weight': 0.6})
('flow network', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('flow network', 'dynamic time warping', {'weight': 0.6})
('flow network', 'dynamic programming language', {'weight': 0.6})
('flow network', 'call-by-need', {'weight': 0.6})
('flow network', 'big-o notation', {'weight': 0.6})
('flow network', 'graph algorithms', {'weight': 0.5})
('flow network', 'comparison of optimization software', {'weight': 0.6})
('flow network', 'quadratic programming', {'weight': 0.6})
('flow network', 'common lisp', {'weight': 0.6})
('flow network', 'barrier function', {'weight': 0.6})
('flow network', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('flow network', 'gradient descent', {'weight': 0.6})
('flow network', 'patricia selinger', {'weight': 0.6})
('flow network', 'discounting', {'weight': 0.6})
('flow network', 'ronald l. rivest', {'weight': 0.6})
('flow network', 'iterative method', {'weight': 0.6})
('flow network', 'limited-memory bfgs', {'weight': 0.6})
('flow network', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('flow network', 'longest common substring problem', {'weight': 0.6})
('flow network', 'clifford stein', {'weight': 0.6})
('flow network', 'network flow', {'weight': 0.5})
('flow network', 'computer chess', {'weight': 0.6})
('flow network', 'linear programming', {'weight': 0.6})
('flow network', 'bitonic tour', {'weight': 0.6})
('flow network', 'linear search problem', {'weight': 0.6})
('flow network', 'flow graph', {'weight': 0.7})
('flow network', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('flow network', 'systems analysis', {'weight': 0.6})
('flow network', 'capital (economics)', {'weight': 0.6})
('flow network', 'levenshtein distance', {'weight': 0.6})
('flow network', 'nonlinear programming', {'weight': 0.6})
('flow network', 'computational complexity of mathematical operations', {'weight': 0.6})
('flow network', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.7})
('flow network', 'gradient', {'weight': 0.6})
('flow network', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('flow network', 'bulletin of the american mathematical society', {'weight': 0.6})
('flow network', 'u.s. english', {'weight': 0.6})
('flow network', 'refutation table', {'weight': 0.6})
('flow network', 'heuristic algorithm', {'weight': 0.6})
('flow network', 'successive linear programming', {'weight': 0.6})
('flow network', 'optimal substructure', {'weight': 0.6})
('flow network', 'programming language', {'weight': 0.6})
('flow network', 'mergesort', {'weight': 0.6})
('flow network', "dijkstra's algorithm", {'weight': 0.6})
('flow network', 'subgradient method', {'weight': 0.6})
('flow network', 'call-by-name', {'weight': 0.6})
('flow network', 'longest increasing subsequence problem', {'weight': 0.6})
('flow network', 'edward prescott', {'weight': 0.6})
('flow network', 'exponential time', {'weight': 0.6})
('flow network', 'principle of optimality', {'weight': 0.6})
('flow network', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('flow network', 'mathematical game', {'weight': 0.6})
('flow network', 'nancy stokey', {'weight': 0.6})
('flow network', 'approximation algorithm', {'weight': 0.6})
('flow network', 'discrete-time', {'weight': 0.6})
('flow network', 'cyk algorithm', {'weight': 0.6})
('flow network', 'markov decision process', {'weight': 0.6})
('flow network', "powell's method", {'weight': 0.6})
('flow network', 'wolfe conditions', {'weight': 0.6})
('flow network', 'convexity in economics', {'weight': 0.6})
('flow network', 'transposition table', {'weight': 0.6})
('flow network', 'economics', {'weight': 0.6})
('flow network', 'backward induction', {'weight': 0.6})
('flow network', 'golden section search', {'weight': 0.6})
('flow network', 'edit distance', {'weight': 0.6})
('flow network', 'tree structure', {'weight': 0.6})
('flow network', 'exchange algorithm', {'weight': 0.6})
('flow network', 'dover publications', {'weight': 0.6})
('flow network', 'seam carving', {'weight': 0.6})
('flow network', 'recursive least squares', {'weight': 0.6})
('flow network', 'metaheuristic', {'weight': 0.6})
('flow network', 'quasi-newton method', {'weight': 0.6})
('flow network', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('flow network', 'robert e. lucas', {'weight': 0.6})
('flow network', 'non-convexity (economics)', {'weight': 0.6})
('flow network', 'sr1 formula', {'weight': 0.6})
('flow network', 'mathematical reviews', {'weight': 0.6})
('flow network', 'puzzle', {'weight': 0.6})
('flow network', 'associative array', {'weight': 0.6})
('flow network', 'shortest path problem', {'weight': 0.7})
('flow network', 'dynamic algorithm', {'weight': 0.6})
('flow network', 'augmented lagrangian method', {'weight': 0.6})
('flow network', 'charles delisi', {'weight': 0.6})
('flow network', 'greedy algorithm', {'weight': 0.6})
('flow network', "karmarkar's algorithm", {'weight': 0.6})
('flow network', 'centrality', {'weight': 0.7})
('flow network', 'lattice models', {'weight': 0.6})
('flow network', 'utility', {'weight': 0.6})
('flow network', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('flow network', 'constructal theory', {'weight': 0.7})
('flow network', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('flow network', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('flow network', 'international standard book number', {'weight': 0.6})
('flow network', 'undirected graph', {'weight': 0.6})
('flow network', 'scheme (programming language)', {'weight': 0.6})
('flow network', 'rna structure', {'weight': 0.6})
('flow network', 'hanoi', {'weight': 0.6})
('flow network', 'perl', {'weight': 0.6})
('flow network', 'digital object identifier', {'weight': 0.6})
('flow network', 'sequential quadratic programming', {'weight': 0.6})
('flow network', "dinic's algorithm", {'weight': 0.7})
('flow network', 'pseudo-polynomial time', {'weight': 0.6})
('flow network', 'partition problem', {'weight': 0.6})
('flow network', 'operations research', {'weight': 0.5})
('flow network', 'hill climbing', {'weight': 0.6})
('flow network', 'top-down', {'weight': 0.6})
('flow network', 'de boor algorithm', {'weight': 0.6})
('flow network', 'optimization algorithm', {'weight': 0.6})
('flow network', "kruskal's algorithm", {'weight': 0.6})
('flow network', 'flow (computer networking)', {'weight': 0.7})
('flow network', 'jacques philippe marie binet', {'weight': 0.6})
('flow network', 'tabu search', {'weight': 0.6})
('flow network', 'divide and conquer algorithm', {'weight': 0.6})
('flow network', "johnson's algorithm", {'weight': 0.6})
('flow network', 'evolutionary algorithm', {'weight': 0.6})
('flow network', 'clique-width', {'weight': 0.6})
('flow network', 'dynamic programming', {'weight': 0.6})
('flow network', 'subroutine', {'weight': 0.6})
('flow network', 'simulated annealing', {'weight': 0.6})
('flow network', 'tower of hanoi', {'weight': 0.6})
('flow network', 'branch and bound', {'weight': 0.6})
('flow network', 'engineering', {'weight': 0.6})
('flow network', 'matroid', {'weight': 0.6})
('flow network', 'directed graphs', {'weight': 0.5})
('flow network', 'viterbi algorithm', {'weight': 0.6})
('flow network', "lemke's algorithm", {'weight': 0.6})
('flow network', 'simplex algorithm', {'weight': 0.6})
('flow network', 'stochastic programming', {'weight': 0.6})
('flow network', 'hessian matrix', {'weight': 0.6})
('flow network', 'ibm system r', {'weight': 0.6})
('flow network', 'penalty method', {'weight': 0.6})
('flow network', 'prolog', {'weight': 0.6})
('flow network', 'time-invariant system', {'weight': 0.6})
('flow network', 'criss-cross algorithm', {'weight': 0.6})
('flow network', 'revised simplex algorithm', {'weight': 0.6})
('flow network', 'the mathematical association of america', {'weight': 0.6})
('flow network', 'line search', {'weight': 0.6})
('flow network', 'j (programming language)', {'weight': 0.6})
('flow network', 'word wrap', {'weight': 0.6})
('flow network', 'subset sum problem', {'weight': 0.6})
('flow network', 'integer programming', {'weight': 0.6})
('flow network', 'nucleosome', {'weight': 0.6})
('flow network', 'earley algorithm', {'weight': 0.6})
('flow network', 'referential transparency (computer science)', {'weight': 0.6})
('flow network', 'recursion', {'weight': 0.6})
('flow network', 'mathematica', {'weight': 0.6})
('flow network', 'quicksort', {'weight': 0.6})
('flow network', 'recursion (computer science)', {'weight': 0.6})
('flow network', 'checkerboard', {'weight': 0.6})
('flow network', 'computer science', {'weight': 0.6})
('flow network', 'brute-force search', {'weight': 0.6})
('flow network', 'mathematics', {'weight': 0.6})
('flow network', 'depth-first search', {'weight': 0.6})
('flow network', 'top-down and bottom-up design', {'weight': 0.6})
('flow network', 'correspondence problem', {'weight': 0.6})
('flow network', 'transcription factor', {'weight': 0.6})
('flow network', 'tree decomposition', {'weight': 0.6})
('flow network', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('flow network', 'structural alignment', {'weight': 0.6})
('flow network', 'local convergence', {'weight': 0.6})
('flow network', 'knapsack problem', {'weight': 0.6})
('flow network', 'graph algorithm', {'weight': 0.6})
('flow network', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('flow network', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('flow network', 'hidden markov model', {'weight': 0.6})
('flow network', 'oriented matroid', {'weight': 0.7})
('flow network', 'string (computer science)', {'weight': 0.6})
('flow network', 'bioinformatics', {'weight': 0.6})
('flow network', 'genetics', {'weight': 0.6})
('flow network', 'mathematical optimization', {'weight': 0.6})
('flow network', 'local search (optimization)', {'weight': 0.6})
('flow network', 'artificial neural networks', {'weight': 0.6})
('flow network', 'introduction to algorithms', {'weight': 0.6})
('flow network', 'thomas h. cormen', {'weight': 0.6})
('flow network', 'music information retrieval', {'weight': 0.6})
('flow network', 'beat (music)', {'weight': 0.6})
('flow network', 'longest common subsequence problem', {'weight': 0.6})
('flow network', 'convex minimization', {'weight': 0.6})
('flow network', 'successive parabolic interpolation', {'weight': 0.6})
('flow network', 'fibonacci sequence', {'weight': 0.6})
('flow network', 'maximum subarray problem', {'weight': 0.6})
('flow network', 'convex optimization', {'weight': 0.6})
('flow network', 'memoization', {'weight': 0.6})
('flow network', 'richard bellman', {'weight': 0.6})
('flow network', 'exponential growth', {'weight': 0.6})
('flow network', 'charles e. leiserson', {'weight': 0.6})
('flow network', 'charles erwin wilson', {'weight': 0.6})
('flow network', 'interval scheduling', {'weight': 0.6})
('flow network', 'chart parser', {'weight': 0.6})
('flow network', 'travelling salesman problem', {'weight': 0.6})
('flow network', 'bellman equation', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'photoshop', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'sequence alignment', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'flow network', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'ellipsoid method', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'chain matrix multiplication', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'ieee', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'backtracking', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'nonlinear conjugate gradient method', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'dynamic problem', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'trust region', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'function (mathematics)', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'minimum spanning tree', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'context-free grammar', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'branch and cut', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'state variable', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'treewidth', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'overlapping subproblem', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'taylor & francis', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'cutting-plane method', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'method of undetermined coefficients', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'combinatorial optimization', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', "newton's method in optimization", {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'matrix chain multiplication', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'gauss\xe2\x80\x93newton algorithm', {'weight': 1})
('gauss\xe2\x80\x93newton algorithm', 'dynamic time warping', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'dynamic programming language', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'call-by-need', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'big-o notation', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'comparison of optimization software', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'quadratic programming', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'common lisp', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'barrier function', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'gradient descent', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'patricia selinger', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'discounting', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'ronald l. rivest', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'iterative method', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'limited-memory bfgs', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'longest common substring problem', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'clifford stein', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'computer chess', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'linear programming', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'bitonic tour', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'linear search problem', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'systems analysis', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'capital (economics)', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'levenshtein distance', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'nonlinear programming', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'computational complexity of mathematical operations', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'gradient', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'bulletin of the american mathematical society', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'u.s. english', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'refutation table', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'heuristic algorithm', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'successive linear programming', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'optimal substructure', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'programming language', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'mergesort', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', "dijkstra's algorithm", {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'subgradient method', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'call-by-name', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'longest increasing subsequence problem', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'edward prescott', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'exponential time', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'principle of optimality', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'mathematical game', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'nancy stokey', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'approximation algorithm', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'discrete-time', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'cyk algorithm', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'markov decision process', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', "powell's method", {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'wolfe conditions', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'convexity in economics', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'transposition table', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'economics', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'backward induction', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'golden section search', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'edit distance', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'tree structure', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'exchange algorithm', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'dover publications', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'seam carving', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'recursive least squares', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'metaheuristic', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'quasi-newton method', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'robert e. lucas', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'non-convexity (economics)', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'sr1 formula', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'mathematical reviews', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'puzzle', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'associative array', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'shortest path problem', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'dynamic algorithm', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'augmented lagrangian method', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'charles delisi', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'greedy algorithm', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', "karmarkar's algorithm", {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'lattice models', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'utility', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'international standard book number', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'undirected graph', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'scheme (programming language)', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'rna structure', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'hanoi', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'perl', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'digital object identifier', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'sequential quadratic programming', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', "dinic's algorithm", {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'pseudo-polynomial time', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'partition problem', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'stochastic programming', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'hill climbing', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'top-down', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'de boor algorithm', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'optimization algorithm', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', "kruskal's algorithm", {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'jacques philippe marie binet', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'tabu search', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'divide and conquer algorithm', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', "johnson's algorithm", {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'evolutionary algorithm', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'clique-width', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'dynamic programming', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'subroutine', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'simulated annealing', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'tower of hanoi', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'branch and bound', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'engineering', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'matroid', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'viterbi algorithm', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', "lemke's algorithm", {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'simplex algorithm', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'local search (optimization)', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'hessian matrix', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'ibm system r', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'penalty method', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'prolog', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'time-invariant system', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'criss-cross algorithm', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'revised simplex algorithm', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'the mathematical association of america', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'line search', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'j (programming language)', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'word wrap', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'subset sum problem', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'integer programming', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'nucleosome', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'earley algorithm', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'referential transparency (computer science)', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'recursion', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'mathematica', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'quicksort', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'recursion (computer science)', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'checkerboard', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'computer science', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'brute-force search', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'mathematics', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'depth-first search', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'top-down and bottom-up design', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'correspondence problem', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'transcription factor', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'tree decomposition', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'structural alignment', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'local convergence', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'knapsack problem', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'graph algorithm', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'hidden markov model', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'string (computer science)', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'bioinformatics', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'genetics', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'mathematical optimization', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'artificial neural networks', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'introduction to algorithms', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'thomas h. cormen', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'music information retrieval', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'beat (music)', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'longest common subsequence problem', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'convex minimization', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'successive parabolic interpolation', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'fibonacci sequence', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'maximum subarray problem', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'convex optimization', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'memoization', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'richard bellman', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'exponential growth', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'charles e. leiserson', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'charles erwin wilson', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'interval scheduling', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'chart parser', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'travelling salesman problem', {'weight': 0.6})
('gauss\xe2\x80\x93newton algorithm', 'bellman equation', {'weight': 0.6})
('common lisp', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('common lisp', 'photoshop', {'weight': 0.6})
('common lisp', 'sequence alignment', {'weight': 0.6})
('common lisp', 'flow network', {'weight': 0.6})
('common lisp', 'common lisp the language', {'weight': 0.7})
('common lisp', 'charles erwin wilson', {'weight': 0.6})
('common lisp', 'ellipsoid method', {'weight': 0.6})
('common lisp', 'chain matrix multiplication', {'weight': 0.6})
('common lisp', 'ieee', {'weight': 0.6})
('common lisp', 'backtracking', {'weight': 0.6})
('common lisp', 'nonlinear conjugate gradient method', {'weight': 0.6})
('common lisp', 'dynamic problem', {'weight': 0.6})
('common lisp', 'trust region', {'weight': 0.6})
('common lisp', 'lisp (programming language)', {'weight': 0.5})
('common lisp', 'minimum spanning tree', {'weight': 0.6})
('common lisp', 'lisp programming language family', {'weight': 0.5})
('common lisp', 'context-free grammar', {'weight': 0.6})
('common lisp', 'recursive least squares', {'weight': 0.6})
('common lisp', 'branch and cut', {'weight': 0.6})
('common lisp', 'state variable', {'weight': 0.6})
('common lisp', 'class-based programming languages', {'weight': 0.5})
('common lisp', 'evolutionary algorithm', {'weight': 0.6})
('common lisp', 'treewidth', {'weight': 0.6})
('common lisp', 'overlapping subproblem', {'weight': 0.6})
('common lisp', 'taylor & francis', {'weight': 0.6})
('common lisp', 'cutting-plane method', {'weight': 0.6})
('common lisp', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('common lisp', "dijkstra's algorithm", {'weight': 0.6})
('common lisp', 'combinatorial optimization', {'weight': 0.6})
('common lisp', "newton's method in optimization", {'weight': 0.6})
('common lisp', 'matrix chain multiplication', {'weight': 0.6})
('common lisp', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('common lisp', 'dynamic time warping', {'weight': 0.6})
('common lisp', 'dynamic programming language', {'weight': 0.6})
('common lisp', 'call-by-need', {'weight': 0.6})
('common lisp', 'big-o notation', {'weight': 0.6})
('common lisp', 'programming languages created in 1984', {'weight': 0.5})
('common lisp', 'comparison of optimization software', {'weight': 0.6})
('common lisp', 'quadratic programming', {'weight': 0.6})
('common lisp', 'common lisp', {'weight': 1})
('common lisp', 'barrier function', {'weight': 0.6})
('common lisp', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('common lisp', 'gradient descent', {'weight': 0.6})
('common lisp', 'patricia selinger', {'weight': 0.6})
('common lisp', 'discounting', {'weight': 0.6})
('common lisp', 'ronald l. rivest', {'weight': 0.6})
('common lisp', 'iterative method', {'weight': 0.6})
('common lisp', 'limited-memory bfgs', {'weight': 0.6})
('common lisp', 'cross-platform free software', {'weight': 0.5})
('common lisp', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('common lisp', 'longest common substring problem', {'weight': 0.6})
('common lisp', 'clifford stein', {'weight': 0.6})
('common lisp', 'computer chess', {'weight': 0.6})
('common lisp', 'linear programming', {'weight': 0.6})
('common lisp', 'bitonic tour', {'weight': 0.6})
('common lisp', 'linear search problem', {'weight': 0.6})
('common lisp', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('common lisp', 'systems analysis', {'weight': 0.6})
('common lisp', 'extensible syntax programming languages', {'weight': 0.5})
('common lisp', 'dynamic programming languages', {'weight': 0.5})
('common lisp', 'levenshtein distance', {'weight': 0.6})
('common lisp', 'nonlinear programming', {'weight': 0.6})
('common lisp', 'cross-platform software', {'weight': 0.5})
('common lisp', 'procedural programming languages', {'weight': 0.5})
('common lisp', 'computational complexity of mathematical operations', {'weight': 0.6})
('common lisp', 'structural alignment', {'weight': 0.6})
('common lisp', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('common lisp', 'gradient', {'weight': 0.6})
('common lisp', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('common lisp', 'multi-paradigm programming languages', {'weight': 0.5})
('common lisp', 'bulletin of the american mathematical society', {'weight': 0.6})
('common lisp', 'robert e. lucas', {'weight': 0.6})
('common lisp', 'lattice models', {'weight': 0.6})
('common lisp', 'refutation table', {'weight': 0.6})
('common lisp', 'heuristic algorithm', {'weight': 0.6})
('common lisp', 'successive linear programming', {'weight': 0.6})
('common lisp', 'optimal substructure', {'weight': 0.6})
('common lisp', 'programming language', {'weight': 0.6})
('common lisp', 'mergesort', {'weight': 0.6})
('common lisp', 'simulated annealing', {'weight': 0.6})
('common lisp', 'subgradient method', {'weight': 0.6})
('common lisp', 'call-by-name', {'weight': 0.6})
('common lisp', 'longest increasing subsequence problem', {'weight': 0.6})
('common lisp', 'edward prescott', {'weight': 0.6})
('common lisp', 'exponential time', {'weight': 0.6})
('common lisp', 'principle of optimality', {'weight': 0.6})
('common lisp', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('common lisp', 'mathematical game', {'weight': 0.6})
('common lisp', 'nancy stokey', {'weight': 0.6})
('common lisp', 'approximation algorithm', {'weight': 0.6})
('common lisp', 'discrete-time', {'weight': 0.6})
('common lisp', 'cyk algorithm', {'weight': 0.6})
('common lisp', 'markov decision process', {'weight': 0.6})
('common lisp', 'method of undetermined coefficients', {'weight': 0.6})
('common lisp', "powell's method", {'weight': 0.6})
('common lisp', 'wolfe conditions', {'weight': 0.6})
('common lisp', 'convexity in economics', {'weight': 0.6})
('common lisp', 'transposition table', {'weight': 0.6})
('common lisp', 'economics', {'weight': 0.6})
('common lisp', 'backward induction', {'weight': 0.6})
('common lisp', 'golden section search', {'weight': 0.6})
('common lisp', 'edit distance', {'weight': 0.6})
('common lisp', 'tree structure', {'weight': 0.6})
('common lisp', 'exchange algorithm', {'weight': 0.6})
('common lisp', 'dover publications', {'weight': 0.6})
('common lisp', 'seam carving', {'weight': 0.6})
('common lisp', 'hidden markov model', {'weight': 0.6})
('common lisp', 'metaheuristic', {'weight': 0.6})
('common lisp', 'quasi-newton method', {'weight': 0.6})
('common lisp', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('common lisp', 'object-oriented programming languages', {'weight': 0.5})
('common lisp', 'non-convexity (economics)', {'weight': 0.6})
('common lisp', 'sr1 formula', {'weight': 0.6})
('common lisp', 'mathematical reviews', {'weight': 0.6})
('common lisp', 'puzzle', {'weight': 0.6})
('common lisp', 'associative array', {'weight': 0.6})
('common lisp', 'shortest path problem', {'weight': 0.6})
('common lisp', 'dynamic algorithm', {'weight': 0.6})
('common lisp', 'augmented lagrangian method', {'weight': 0.6})
('common lisp', 'charles delisi', {'weight': 0.6})
('common lisp', 'greedy algorithm', {'weight': 0.6})
('common lisp', "karmarkar's algorithm", {'weight': 0.6})
('common lisp', 'u.s. english', {'weight': 0.6})
('common lisp', 'utility', {'weight': 0.6})
('common lisp', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('common lisp', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('common lisp', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('common lisp', 'international standard book number', {'weight': 0.6})
('common lisp', 'undirected graph', {'weight': 0.6})
('common lisp', 'scheme (programming language)', {'weight': 0.6})
('common lisp', 'rna structure', {'weight': 0.6})
('common lisp', 'hanoi', {'weight': 0.6})
('common lisp', 'perl', {'weight': 0.6})
('common lisp', 'digital object identifier', {'weight': 0.6})
('common lisp', 'sequential quadratic programming', {'weight': 0.6})
('common lisp', "dinic's algorithm", {'weight': 0.6})
('common lisp', 'pseudo-polynomial time', {'weight': 0.6})
('common lisp', 'partition problem', {'weight': 0.6})
('common lisp', 'stochastic programming', {'weight': 0.6})
('common lisp', 'hill climbing', {'weight': 0.6})
('common lisp', 'top-down', {'weight': 0.6})
('common lisp', 'de boor algorithm', {'weight': 0.6})
('common lisp', 'computer programming portal', {'weight': 0.7})
('common lisp', 'optimization algorithm', {'weight': 0.6})
('common lisp', "kruskal's algorithm", {'weight': 0.6})
('common lisp', 'jacques philippe marie binet', {'weight': 0.6})
('common lisp', 'tabu search', {'weight': 0.6})
('common lisp', 'computer science portal', {'weight': 0.7})
('common lisp', 'divide and conquer algorithm', {'weight': 0.6})
('common lisp', "johnson's algorithm", {'weight': 0.6})
('common lisp', 'articles with example lisp code', {'weight': 0.5})
('common lisp', 'clique-width', {'weight': 0.6})
('common lisp', 'dynamic programming', {'weight': 0.6})
('common lisp', 'subroutine', {'weight': 0.6})
('common lisp', 'tower of hanoi', {'weight': 0.6})
('common lisp', 'branch and bound', {'weight': 0.6})
('common lisp', 'engineering', {'weight': 0.6})
('common lisp', 'matroid', {'weight': 0.6})
('common lisp', 'viterbi algorithm', {'weight': 0.6})
('common lisp', "lemke's algorithm", {'weight': 0.6})
('common lisp', 'simplex algorithm', {'weight': 0.6})
('common lisp', 'local search (optimization)', {'weight': 0.6})
('common lisp', 'hessian matrix', {'weight': 0.6})
('common lisp', 'capital (economics)', {'weight': 0.6})
('common lisp', 'ibm system r', {'weight': 0.6})
('common lisp', 'penalty method', {'weight': 0.6})
('common lisp', 'prolog', {'weight': 0.6})
('common lisp', 'time-invariant system', {'weight': 0.6})
('common lisp', 'criss-cross algorithm', {'weight': 0.6})
('common lisp', 'revised simplex algorithm', {'weight': 0.6})
('common lisp', 'the mathematical association of america', {'weight': 0.6})
('common lisp', 'line search', {'weight': 0.6})
('common lisp', 'j (programming language)', {'weight': 0.6})
('common lisp', 'word wrap', {'weight': 0.6})
('common lisp', 'function (mathematics)', {'weight': 0.6})
('common lisp', 'subset sum problem', {'weight': 0.6})
('common lisp', 'integer programming', {'weight': 0.6})
('common lisp', 'nucleosome', {'weight': 0.6})
('common lisp', 'earley algorithm', {'weight': 0.6})
('common lisp', 'referential transparency (computer science)', {'weight': 0.6})
('common lisp', 'practical common lisp', {'weight': 0.7})
('common lisp', 'recursion', {'weight': 0.6})
('common lisp', 'mathematica', {'weight': 0.6})
('common lisp', 'quicksort', {'weight': 0.6})
('common lisp', 'recursion (computer science)', {'weight': 0.6})
('common lisp', 'computer science', {'weight': 0.6})
('common lisp', 'brute-force search', {'weight': 0.6})
('common lisp', 'mathematics', {'weight': 0.6})
('common lisp', 'depth-first search', {'weight': 0.6})
('common lisp', 'top-down and bottom-up design', {'weight': 0.6})
('common lisp', 'correspondence problem', {'weight': 0.6})
('common lisp', 'transcription factor', {'weight': 0.6})
('common lisp', 'tree decomposition', {'weight': 0.6})
('common lisp', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('common lisp', 'functional languages', {'weight': 0.5})
('common lisp', 'local convergence', {'weight': 0.6})
('common lisp', 'knapsack problem', {'weight': 0.6})
('common lisp', 'graph algorithm', {'weight': 0.6})
('common lisp', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('common lisp', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('common lisp', 'dynamically typed programming languages', {'weight': 0.5})
('common lisp', 'string (computer science)', {'weight': 0.6})
('common lisp', 'bioinformatics', {'weight': 0.6})
('common lisp', 'genetics', {'weight': 0.6})
('common lisp', 'mathematical optimization', {'weight': 0.6})
('common lisp', 'artificial neural networks', {'weight': 0.6})
('common lisp', 'introduction to algorithms', {'weight': 0.6})
('common lisp', 'thomas h. cormen', {'weight': 0.6})
('common lisp', 'music information retrieval', {'weight': 0.6})
('common lisp', 'beat (music)', {'weight': 0.6})
('common lisp', 'longest common subsequence problem', {'weight': 0.6})
('common lisp', 'convex minimization', {'weight': 0.6})
('common lisp', 'successive parabolic interpolation', {'weight': 0.6})
('common lisp', 'fibonacci sequence', {'weight': 0.6})
('common lisp', 'maximum subarray problem', {'weight': 0.6})
('common lisp', 'convex optimization', {'weight': 0.6})
('common lisp', 'memoization', {'weight': 0.6})
('common lisp', 'richard bellman', {'weight': 0.6})
('common lisp', 'exponential growth', {'weight': 0.6})
('common lisp', 'charles e. leiserson', {'weight': 0.6})
('common lisp', 'on lisp', {'weight': 0.7})
('common lisp', 'checkerboard', {'weight': 0.6})
('common lisp', 'interval scheduling', {'weight': 0.6})
('common lisp', 'chart parser', {'weight': 0.6})
('common lisp', 'travelling salesman problem', {'weight': 0.6})
('common lisp', 'bellman equation', {'weight': 0.6})
('barrier function', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('barrier function', 'photoshop', {'weight': 0.6})
('barrier function', 'sequence alignment', {'weight': 0.6})
('barrier function', 'flow network', {'weight': 0.6})
('barrier function', 'international standard book number', {'weight': 0.6})
('barrier function', 'ellipsoid method', {'weight': 0.6})
('barrier function', 'chain matrix multiplication', {'weight': 0.6})
('barrier function', 'ieee', {'weight': 0.6})
('barrier function', 'backtracking', {'weight': 0.6})
('barrier function', 'nonlinear conjugate gradient method', {'weight': 0.6})
('barrier function', 'dynamic problem', {'weight': 0.6})
('barrier function', 'trust region', {'weight': 0.6})
('barrier function', 'function (mathematics)', {'weight': 0.6})
('barrier function', 'minimum spanning tree', {'weight': 0.6})
('barrier function', 'context-free grammar', {'weight': 0.6})
('barrier function', 'branch and cut', {'weight': 0.6})
('barrier function', 'state variable', {'weight': 0.6})
('barrier function', 'treewidth', {'weight': 0.6})
('barrier function', 'overlapping subproblem', {'weight': 0.6})
('barrier function', 'taylor & francis', {'weight': 0.6})
('barrier function', 'cutting-plane method', {'weight': 0.6})
('barrier function', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('barrier function', 'method of undetermined coefficients', {'weight': 0.6})
('barrier function', 'combinatorial optimization', {'weight': 0.6})
('barrier function', "newton's method in optimization", {'weight': 0.6})
('barrier function', 'matrix chain multiplication', {'weight': 0.6})
('barrier function', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('barrier function', 'dynamic time warping', {'weight': 0.6})
('barrier function', 'dynamic programming language', {'weight': 0.6})
('barrier function', 'call-by-need', {'weight': 0.6})
('barrier function', 'big-o notation', {'weight': 0.6})
('barrier function', 'comparison of optimization software', {'weight': 0.6})
('barrier function', 'quadratic programming', {'weight': 0.6})
('barrier function', 'common lisp', {'weight': 0.6})
('barrier function', 'barrier function', {'weight': 1})
('barrier function', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('barrier function', 'gradient descent', {'weight': 0.6})
('barrier function', 'patricia selinger', {'weight': 0.6})
('barrier function', 'discounting', {'weight': 0.6})
('barrier function', 'ronald l. rivest', {'weight': 0.6})
('barrier function', 'iterative method', {'weight': 0.6})
('barrier function', 'limited-memory bfgs', {'weight': 0.6})
('barrier function', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('barrier function', 'longest common substring problem', {'weight': 0.6})
('barrier function', 'clifford stein', {'weight': 0.6})
('barrier function', 'computer chess', {'weight': 0.6})
('barrier function', 'linear programming', {'weight': 0.6})
('barrier function', 'bitonic tour', {'weight': 0.6})
('barrier function', 'linear search problem', {'weight': 0.6})
('barrier function', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('barrier function', 'systems analysis', {'weight': 0.6})
('barrier function', 'capital (economics)', {'weight': 0.6})
('barrier function', 'levenshtein distance', {'weight': 0.6})
('barrier function', 'applied mathematics stubs', {'weight': 0.5})
('barrier function', 'nonlinear programming', {'weight': 0.6})
('barrier function', 'computational complexity of mathematical operations', {'weight': 0.6})
('barrier function', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('barrier function', 'gradient', {'weight': 0.6})
('barrier function', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('barrier function', 'bulletin of the american mathematical society', {'weight': 0.6})
('barrier function', 'u.s. english', {'weight': 0.6})
('barrier function', 'refutation table', {'weight': 0.6})
('barrier function', 'heuristic algorithm', {'weight': 0.6})
('barrier function', 'successive linear programming', {'weight': 0.6})
('barrier function', 'optimal substructure', {'weight': 0.6})
('barrier function', 'programming language', {'weight': 0.6})
('barrier function', 'mergesort', {'weight': 0.6})
('barrier function', "dijkstra's algorithm", {'weight': 0.6})
('barrier function', 'subgradient method', {'weight': 0.6})
('barrier function', 'call-by-name', {'weight': 0.6})
('barrier function', 'longest increasing subsequence problem', {'weight': 0.6})
('barrier function', 'edward prescott', {'weight': 0.6})
('barrier function', 'exponential time', {'weight': 0.6})
('barrier function', 'principle of optimality', {'weight': 0.6})
('barrier function', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('barrier function', 'mathematical game', {'weight': 0.6})
('barrier function', 'nancy stokey', {'weight': 0.6})
('barrier function', 'approximation algorithm', {'weight': 0.6})
('barrier function', 'discrete-time', {'weight': 0.6})
('barrier function', 'cyk algorithm', {'weight': 0.6})
('barrier function', 'markov decision process', {'weight': 0.6})
('barrier function', "powell's method", {'weight': 0.6})
('barrier function', 'wolfe conditions', {'weight': 0.6})
('barrier function', 'convexity in economics', {'weight': 0.6})
('barrier function', 'transposition table', {'weight': 0.6})
('barrier function', 'economics', {'weight': 0.6})
('barrier function', 'backward induction', {'weight': 0.6})
('barrier function', 'golden section search', {'weight': 0.6})
('barrier function', 'edit distance', {'weight': 0.6})
('barrier function', 'tree structure', {'weight': 0.6})
('barrier function', 'exchange algorithm', {'weight': 0.6})
('barrier function', 'dover publications', {'weight': 0.6})
('barrier function', 'seam carving', {'weight': 0.6})
('barrier function', 'recursive least squares', {'weight': 0.6})
('barrier function', 'metaheuristic', {'weight': 0.6})
('barrier function', 'quasi-newton method', {'weight': 0.6})
('barrier function', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('barrier function', 'robert e. lucas', {'weight': 0.6})
('barrier function', 'non-convexity (economics)', {'weight': 0.6})
('barrier function', 'sr1 formula', {'weight': 0.6})
('barrier function', 'mathematical reviews', {'weight': 0.6})
('barrier function', 'puzzle', {'weight': 0.6})
('barrier function', 'associative array', {'weight': 0.6})
('barrier function', 'shortest path problem', {'weight': 0.6})
('barrier function', 'dynamic algorithm', {'weight': 0.6})
('barrier function', 'augmented lagrangian method', {'weight': 0.6})
('barrier function', 'charles delisi', {'weight': 0.6})
('barrier function', 'greedy algorithm', {'weight': 0.6})
('barrier function', "karmarkar's algorithm", {'weight': 0.6})
('barrier function', 'lattice models', {'weight': 0.6})
('barrier function', 'utility', {'weight': 0.6})
('barrier function', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('barrier function', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('barrier function', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('barrier function', 'types of functions', {'weight': 0.5})
('barrier function', 'undirected graph', {'weight': 0.6})
('barrier function', 'scheme (programming language)', {'weight': 0.6})
('barrier function', 'rna structure', {'weight': 0.6})
('barrier function', 'hanoi', {'weight': 0.6})
('barrier function', 'perl', {'weight': 0.6})
('barrier function', 'digital object identifier', {'weight': 0.6})
('barrier function', 'sequential quadratic programming', {'weight': 0.6})
('barrier function', "dinic's algorithm", {'weight': 0.6})
('barrier function', 'pseudo-polynomial time', {'weight': 0.6})
('barrier function', 'partition problem', {'weight': 0.6})
('barrier function', 'stochastic programming', {'weight': 0.6})
('barrier function', 'hill climbing', {'weight': 0.6})
('barrier function', 'top-down', {'weight': 0.6})
('barrier function', 'de boor algorithm', {'weight': 0.6})
('barrier function', 'optimization algorithm', {'weight': 0.6})
('barrier function', "kruskal's algorithm", {'weight': 0.6})
('barrier function', 'jacques philippe marie binet', {'weight': 0.6})
('barrier function', 'tabu search', {'weight': 0.6})
('barrier function', 'divide and conquer algorithm', {'weight': 0.6})
('barrier function', "johnson's algorithm", {'weight': 0.6})
('barrier function', 'evolutionary algorithm', {'weight': 0.6})
('barrier function', 'clique-width', {'weight': 0.6})
('barrier function', 'dynamic programming', {'weight': 0.6})
('barrier function', 'subroutine', {'weight': 0.6})
('barrier function', 'simulated annealing', {'weight': 0.6})
('barrier function', 'tower of hanoi', {'weight': 0.6})
('barrier function', 'branch and bound', {'weight': 0.6})
('barrier function', 'constraint programming', {'weight': 0.5})
('barrier function', 'engineering', {'weight': 0.6})
('barrier function', 'matroid', {'weight': 0.6})
('barrier function', 'viterbi algorithm', {'weight': 0.6})
('barrier function', "lemke's algorithm", {'weight': 0.6})
('barrier function', 'simplex algorithm', {'weight': 0.6})
('barrier function', 'local search (optimization)', {'weight': 0.6})
('barrier function', 'hessian matrix', {'weight': 0.6})
('barrier function', 'ibm system r', {'weight': 0.6})
('barrier function', 'penalty method', {'weight': 0.6})
('barrier function', 'prolog', {'weight': 0.6})
('barrier function', 'time-invariant system', {'weight': 0.6})
('barrier function', 'criss-cross algorithm', {'weight': 0.6})
('barrier function', 'revised simplex algorithm', {'weight': 0.6})
('barrier function', 'the mathematical association of america', {'weight': 0.6})
('barrier function', 'line search', {'weight': 0.6})
('barrier function', 'j (programming language)', {'weight': 0.6})
('barrier function', 'word wrap', {'weight': 0.6})
('barrier function', 'subset sum problem', {'weight': 0.6})
('barrier function', 'integer programming', {'weight': 0.6})
('barrier function', 'nucleosome', {'weight': 0.6})
('barrier function', 'earley algorithm', {'weight': 0.6})
('barrier function', 'referential transparency (computer science)', {'weight': 0.6})
('barrier function', 'recursion', {'weight': 0.6})
('barrier function', 'mathematica', {'weight': 0.6})
('barrier function', 'quicksort', {'weight': 0.6})
('barrier function', 'recursion (computer science)', {'weight': 0.6})
('barrier function', 'checkerboard', {'weight': 0.6})
('barrier function', 'computer science', {'weight': 0.6})
('barrier function', 'brute-force search', {'weight': 0.6})
('barrier function', 'mathematics', {'weight': 0.6})
('barrier function', 'depth-first search', {'weight': 0.6})
('barrier function', 'top-down and bottom-up design', {'weight': 0.6})
('barrier function', 'correspondence problem', {'weight': 0.6})
('barrier function', 'transcription factor', {'weight': 0.6})
('barrier function', 'tree decomposition', {'weight': 0.6})
('barrier function', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('barrier function', 'structural alignment', {'weight': 0.6})
('barrier function', 'local convergence', {'weight': 0.6})
('barrier function', 'knapsack problem', {'weight': 0.6})
('barrier function', 'graph algorithm', {'weight': 0.6})
('barrier function', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('barrier function', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('barrier function', 'hidden markov model', {'weight': 0.6})
('barrier function', 'string (computer science)', {'weight': 0.6})
('barrier function', 'bioinformatics', {'weight': 0.6})
('barrier function', 'genetics', {'weight': 0.6})
('barrier function', 'mathematical optimization', {'weight': 0.6})
('barrier function', 'artificial neural networks', {'weight': 0.6})
('barrier function', 'introduction to algorithms', {'weight': 0.6})
('barrier function', 'thomas h. cormen', {'weight': 0.6})
('barrier function', 'music information retrieval', {'weight': 0.6})
('barrier function', 'beat (music)', {'weight': 0.6})
('barrier function', 'longest common subsequence problem', {'weight': 0.6})
('barrier function', 'convex minimization', {'weight': 0.6})
('barrier function', 'successive parabolic interpolation', {'weight': 0.6})
('barrier function', 'fibonacci sequence', {'weight': 0.6})
('barrier function', 'maximum subarray problem', {'weight': 0.6})
('barrier function', 'convex optimization', {'weight': 0.6})
('barrier function', 'memoization', {'weight': 0.6})
('barrier function', 'richard bellman', {'weight': 0.6})
('barrier function', 'exponential growth', {'weight': 0.6})
('barrier function', 'charles e. leiserson', {'weight': 0.6})
('barrier function', 'charles erwin wilson', {'weight': 0.6})
('barrier function', 'interval scheduling', {'weight': 0.6})
('barrier function', 'chart parser', {'weight': 0.6})
('barrier function', 'travelling salesman problem', {'weight': 0.6})
('barrier function', 'bellman equation', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'photoshop', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'sequence alignment', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'flow network', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'ellipsoid method', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'chain matrix multiplication', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'ieee', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'backtracking', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'nonlinear conjugate gradient method', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'dynamic problem', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'trust region', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'function (mathematics)', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'minimum spanning tree', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'context-free grammar', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'branch and cut', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'state variable', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'treewidth', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'overlapping subproblem', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'taylor & francis', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'cutting-plane method', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'method of undetermined coefficients', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'combinatorial optimization', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', "newton's method in optimization", {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'matrix chain multiplication', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'dynamic time warping', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'dynamic programming language', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'call-by-need', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'big-o notation', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'comparison of optimization software', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'quadratic programming', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'common lisp', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'barrier function', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 1})
('edmonds\xe2\x80\x93karp algorithm', 'gradient descent', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'patricia selinger', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'discounting', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'ronald l. rivest', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'iterative method', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'limited-memory bfgs', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'longest common substring problem', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'clifford stein', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'computer chess', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'linear programming', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'bitonic tour', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'linear search problem', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'systems analysis', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'capital (economics)', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'levenshtein distance', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'nonlinear programming', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'computational complexity of mathematical operations', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'gradient', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'bulletin of the american mathematical society', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'u.s. english', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'refutation table', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'heuristic algorithm', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'successive linear programming', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'optimal substructure', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'programming language', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'mergesort', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', "dijkstra's algorithm", {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'subgradient method', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'call-by-name', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'longest increasing subsequence problem', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'edward prescott', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'exponential time', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'principle of optimality', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'mathematical game', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'nancy stokey', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'approximation algorithm', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'discrete-time', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'cyk algorithm', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'markov decision process', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', "powell's method", {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'wolfe conditions', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'convexity in economics', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'transposition table', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'economics', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'backward induction', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'golden section search', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'edit distance', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'tree structure', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'exchange algorithm', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'dover publications', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'seam carving', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'recursive least squares', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'metaheuristic', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'quasi-newton method', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'robert e. lucas', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'non-convexity (economics)', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'sr1 formula', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'mathematical reviews', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'puzzle', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'associative array', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'shortest path problem', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'dynamic algorithm', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'augmented lagrangian method', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'charles delisi', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'greedy algorithm', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', "karmarkar's algorithm", {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'lattice models', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'utility', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'international standard book number', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'undirected graph', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'scheme (programming language)', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'rna structure', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'hanoi', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'perl', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'digital object identifier', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'sequential quadratic programming', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', "dinic's algorithm", {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'pseudo-polynomial time', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'partition problem', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'stochastic programming', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'hill climbing', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'top-down', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'de boor algorithm', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'optimization algorithm', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', "kruskal's algorithm", {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'jacques philippe marie binet', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'tabu search', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'divide and conquer algorithm', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', "johnson's algorithm", {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'evolutionary algorithm', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'clique-width', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'dynamic programming', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'subroutine', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'simulated annealing', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'tower of hanoi', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'branch and bound', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'engineering', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'matroid', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'viterbi algorithm', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', "lemke's algorithm", {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'simplex algorithm', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'local search (optimization)', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'hessian matrix', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'ibm system r', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'penalty method', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'prolog', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'time-invariant system', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'criss-cross algorithm', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'revised simplex algorithm', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'the mathematical association of america', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'line search', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'j (programming language)', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'word wrap', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'subset sum problem', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'integer programming', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'nucleosome', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'earley algorithm', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'referential transparency (computer science)', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'recursion', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'mathematica', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'quicksort', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'recursion (computer science)', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'checkerboard', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'computer science', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'brute-force search', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'mathematics', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'depth-first search', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'top-down and bottom-up design', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'correspondence problem', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'transcription factor', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'tree decomposition', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'structural alignment', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'local convergence', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'knapsack problem', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'graph algorithm', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'hidden markov model', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'string (computer science)', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'bioinformatics', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'genetics', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'mathematical optimization', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'artificial neural networks', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'introduction to algorithms', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'thomas h. cormen', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'music information retrieval', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'beat (music)', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'longest common subsequence problem', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'convex minimization', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'successive parabolic interpolation', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'fibonacci sequence', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'maximum subarray problem', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'convex optimization', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'memoization', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'richard bellman', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'exponential growth', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'charles e. leiserson', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'charles erwin wilson', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'interval scheduling', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'chart parser', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'travelling salesman problem', {'weight': 0.6})
('edmonds\xe2\x80\x93karp algorithm', 'bellman equation', {'weight': 0.6})
('discounting', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('discounting', 'photoshop', {'weight': 0.6})
('discounting', 'sequence alignment', {'weight': 0.6})
('discounting', 'flow network', {'weight': 0.6})
('discounting', 'ellipsoid method', {'weight': 0.6})
('discounting', 'chain matrix multiplication', {'weight': 0.6})
('discounting', 'ieee', {'weight': 0.6})
('discounting', 'backtracking', {'weight': 0.6})
('discounting', 'nonlinear conjugate gradient method', {'weight': 0.6})
('discounting', 'dynamic problem', {'weight': 0.6})
('discounting', 'trust region', {'weight': 0.6})
('discounting', 'function (mathematics)', {'weight': 0.6})
('discounting', 'minimum spanning tree', {'weight': 0.6})
('discounting', 'context-free grammar', {'weight': 0.6})
('discounting', 'branch and cut', {'weight': 0.6})
('discounting', 'state variable', {'weight': 0.6})
('discounting', 'treewidth', {'weight': 0.6})
('discounting', 'overlapping subproblem', {'weight': 0.6})
('discounting', 'refutation table', {'weight': 0.6})
('discounting', 'cutting-plane method', {'weight': 0.6})
('discounting', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('discounting', 'method of undetermined coefficients', {'weight': 0.6})
('discounting', 'combinatorial optimization', {'weight': 0.6})
('discounting', "newton's method in optimization", {'weight': 0.6})
('discounting', 'matrix chain multiplication', {'weight': 0.6})
('discounting', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('discounting', 'dynamic time warping', {'weight': 0.6})
('discounting', 'dynamic programming language', {'weight': 0.6})
('discounting', 'call-by-need', {'weight': 0.6})
('discounting', 'big-o notation', {'weight': 0.6})
('discounting', 'high-low pricing', {'weight': 0.7})
('discounting', 'comparison of optimization software', {'weight': 0.6})
('discounting', 'quadratic programming', {'weight': 0.6})
('discounting', 'common lisp', {'weight': 0.6})
('discounting', 'barrier function', {'weight': 0.6})
('discounting', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('discounting', 'gradient descent', {'weight': 0.6})
('discounting', 'patricia selinger', {'weight': 0.6})
('discounting', 'discounting', {'weight': 1})
('discounting', 'ronald l. rivest', {'weight': 0.6})
('discounting', 'iterative method', {'weight': 0.6})
('discounting', 'limited-memory bfgs', {'weight': 0.6})
('discounting', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('discounting', 'longest common substring problem', {'weight': 0.6})
('discounting', 'basic financial concepts', {'weight': 0.5})
('discounting', 'coupon (bond)', {'weight': 0.7})
('discounting', 'clifford stein', {'weight': 0.6})
('discounting', 'computer chess', {'weight': 0.6})
('discounting', 'linear programming', {'weight': 0.6})
('discounting', 'bitonic tour', {'weight': 0.6})
('discounting', 'actuarial science', {'weight': 0.5})
('discounting', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('discounting', 'systems analysis', {'weight': 0.6})
('discounting', 'capital (economics)', {'weight': 0.6})
('discounting', 'levenshtein distance', {'weight': 0.6})
('discounting', 'nonlinear programming', {'weight': 0.6})
('discounting', 'computational complexity of mathematical operations', {'weight': 0.6})
('discounting', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('discounting', 'gradient', {'weight': 0.6})
('discounting', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('discounting', 'bulletin of the american mathematical society', {'weight': 0.6})
('discounting', 'u.s. english', {'weight': 0.6})
('discounting', 'marketing', {'weight': 0.5})
('discounting', 'heuristic algorithm', {'weight': 0.6})
('discounting', 'successive linear programming', {'weight': 0.6})
('discounting', 'optimal substructure', {'weight': 0.6})
('discounting', 'taylor & francis', {'weight': 0.6})
('discounting', 'programming language', {'weight': 0.6})
('discounting', 'mergesort', {'weight': 0.6})
('discounting', "dijkstra's algorithm", {'weight': 0.6})
('discounting', 'subgradient method', {'weight': 0.6})
('discounting', 'call-by-name', {'weight': 0.6})
('discounting', 'longest increasing subsequence problem', {'weight': 0.6})
('discounting', 'edward prescott', {'weight': 0.6})
('discounting', 'exponential time', {'weight': 0.6})
('discounting', 'principle of optimality', {'weight': 0.6})
('discounting', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('discounting', 'mathematical game', {'weight': 0.6})
('discounting', 'nancy stokey', {'weight': 0.6})
('discounting', 'approximation algorithm', {'weight': 0.6})
('discounting', 'discrete-time', {'weight': 0.6})
('discounting', 'cyk algorithm', {'weight': 0.6})
('discounting', 'markov decision process', {'weight': 0.6})
('discounting', "powell's method", {'weight': 0.6})
('discounting', 'wolfe conditions', {'weight': 0.6})
('discounting', 'convexity in economics', {'weight': 0.6})
('discounting', 'transposition table', {'weight': 0.6})
('discounting', 'economics', {'weight': 0.6})
('discounting', 'backward induction', {'weight': 0.6})
('discounting', 'golden section search', {'weight': 0.6})
('discounting', 'edit distance', {'weight': 0.6})
('discounting', 'tree structure', {'weight': 0.6})
('discounting', 'exchange algorithm', {'weight': 0.6})
('discounting', 'dover publications', {'weight': 0.6})
('discounting', 'seam carving', {'weight': 0.6})
('discounting', 'recursive least squares', {'weight': 0.6})
('discounting', 'metaheuristic', {'weight': 0.6})
('discounting', 'quasi-newton method', {'weight': 0.6})
('discounting', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('discounting', 'robert e. lucas', {'weight': 0.6})
('discounting', 'non-convexity (economics)', {'weight': 0.6})
('discounting', 'sr1 formula', {'weight': 0.6})
('discounting', 'mathematical reviews', {'weight': 0.6})
('discounting', 'coupon', {'weight': 0.7})
('discounting', 'puzzle', {'weight': 0.6})
('discounting', 'associative array', {'weight': 0.6})
('discounting', 'shortest path problem', {'weight': 0.6})
('discounting', 'dynamic algorithm', {'weight': 0.6})
('discounting', 'augmented lagrangian method', {'weight': 0.6})
('discounting', 'charles delisi', {'weight': 0.6})
('discounting', 'greedy algorithm', {'weight': 0.6})
('discounting', "karmarkar's algorithm", {'weight': 0.6})
('discounting', 'lattice models', {'weight': 0.6})
('discounting', 'utility', {'weight': 0.6})
('discounting', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('discounting', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('discounting', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('discounting', 'international standard book number', {'weight': 0.6})
('discounting', 'undirected graph', {'weight': 0.6})
('discounting', 'scheme (programming language)', {'weight': 0.6})
('discounting', 'rna structure', {'weight': 0.6})
('discounting', 'hanoi', {'weight': 0.6})
('discounting', 'perl', {'weight': 0.6})
('discounting', 'digital object identifier', {'weight': 0.6})
('discounting', 'sequential quadratic programming', {'weight': 0.6})
('discounting', "dinic's algorithm", {'weight': 0.6})
('discounting', 'pseudo-polynomial time', {'weight': 0.6})
('discounting', 'partition problem', {'weight': 0.6})
('discounting', 'stochastic programming', {'weight': 0.6})
('discounting', 'hill climbing', {'weight': 0.6})
('discounting', 'top-down', {'weight': 0.6})
('discounting', 'de boor algorithm', {'weight': 0.6})
('discounting', 'optimization algorithm', {'weight': 0.6})
('discounting', "kruskal's algorithm", {'weight': 0.6})
('discounting', 'linear search problem', {'weight': 0.6})
('discounting', 'jacques philippe marie binet', {'weight': 0.6})
('discounting', 'tabu search', {'weight': 0.6})
('discounting', 'divide and conquer algorithm', {'weight': 0.6})
('discounting', "johnson's algorithm", {'weight': 0.6})
('discounting', 'evolutionary algorithm', {'weight': 0.6})
('discounting', 'clique-width', {'weight': 0.6})
('discounting', 'dynamic programming', {'weight': 0.6})
('discounting', 'subroutine', {'weight': 0.6})
('discounting', 'simulated annealing', {'weight': 0.6})
('discounting', 'tower of hanoi', {'weight': 0.6})
('discounting', 'branch and bound', {'weight': 0.6})
('discounting', 'engineering', {'weight': 0.6})
('discounting', 'matroid', {'weight': 0.6})
('discounting', 'viterbi algorithm', {'weight': 0.6})
('discounting', "lemke's algorithm", {'weight': 0.6})
('discounting', 'simplex algorithm', {'weight': 0.6})
('discounting', 'local search (optimization)', {'weight': 0.6})
('discounting', 'hessian matrix', {'weight': 0.6})
('discounting', 'ibm system r', {'weight': 0.6})
('discounting', 'penalty method', {'weight': 0.6})
('discounting', 'prolog', {'weight': 0.6})
('discounting', 'time-invariant system', {'weight': 0.6})
('discounting', 'criss-cross algorithm', {'weight': 0.6})
('discounting', 'revised simplex algorithm', {'weight': 0.6})
('discounting', 'the mathematical association of america', {'weight': 0.6})
('discounting', 'line search', {'weight': 0.6})
('discounting', 'j (programming language)', {'weight': 0.6})
('discounting', 'word wrap', {'weight': 0.6})
('discounting', 'subset sum problem', {'weight': 0.6})
('discounting', 'integer programming', {'weight': 0.6})
('discounting', 'nucleosome', {'weight': 0.6})
('discounting', 'earley algorithm', {'weight': 0.6})
('discounting', 'referential transparency (computer science)', {'weight': 0.6})
('discounting', 'recursion', {'weight': 0.6})
('discounting', 'mathematica', {'weight': 0.6})
('discounting', 'quicksort', {'weight': 0.6})
('discounting', 'hyperbolic discounting', {'weight': 0.7})
('discounting', 'recursion (computer science)', {'weight': 0.6})
('discounting', 'checkerboard', {'weight': 0.6})
('discounting', 'computer science', {'weight': 0.6})
('discounting', 'brute-force search', {'weight': 0.6})
('discounting', 'mathematics', {'weight': 0.6})
('discounting', 'depth-first search', {'weight': 0.6})
('discounting', 'top-down and bottom-up design', {'weight': 0.6})
('discounting', 'correspondence problem', {'weight': 0.6})
('discounting', 'transcription factor', {'weight': 0.6})
('discounting', 'tree decomposition', {'weight': 0.6})
('discounting', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('discounting', 'structural alignment', {'weight': 0.6})
('discounting', 'local convergence', {'weight': 0.6})
('discounting', 'knapsack problem', {'weight': 0.6})
('discounting', 'graph algorithm', {'weight': 0.6})
('discounting', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('discounting', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('discounting', 'hidden markov model', {'weight': 0.6})
('discounting', 'string (computer science)', {'weight': 0.6})
('discounting', 'bioinformatics', {'weight': 0.6})
('discounting', 'genetics', {'weight': 0.6})
('discounting', 'mathematical optimization', {'weight': 0.6})
('discounting', 'artificial neural networks', {'weight': 0.6})
('discounting', 'introduction to algorithms', {'weight': 0.6})
('discounting', 'thomas h. cormen', {'weight': 0.6})
('discounting', 'music information retrieval', {'weight': 0.6})
('discounting', 'beat (music)', {'weight': 0.6})
('discounting', 'longest common subsequence problem', {'weight': 0.6})
('discounting', 'convex minimization', {'weight': 0.6})
('discounting', 'successive parabolic interpolation', {'weight': 0.6})
('discounting', 'fibonacci sequence', {'weight': 0.6})
('discounting', 'maximum subarray problem', {'weight': 0.6})
('discounting', 'convex optimization', {'weight': 0.6})
('discounting', 'memoization', {'weight': 0.6})
('discounting', 'richard bellman', {'weight': 0.6})
('discounting', 'exponential growth', {'weight': 0.6})
('discounting', 'charles e. leiserson', {'weight': 0.6})
('discounting', 'charles erwin wilson', {'weight': 0.6})
('discounting', 'interval scheduling', {'weight': 0.6})
('discounting', 'chart parser', {'weight': 0.6})
('discounting', 'travelling salesman problem', {'weight': 0.6})
('discounting', 'bellman equation', {'weight': 0.6})
('exchange algorithm', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('exchange algorithm', 'photoshop', {'weight': 0.6})
('exchange algorithm', 'sequence alignment', {'weight': 0.6})
('exchange algorithm', 'flow network', {'weight': 0.6})
('exchange algorithm', 'ellipsoid method', {'weight': 0.6})
('exchange algorithm', 'chain matrix multiplication', {'weight': 0.6})
('exchange algorithm', 'ieee', {'weight': 0.6})
('exchange algorithm', 'backtracking', {'weight': 0.6})
('exchange algorithm', 'exchange algorithms', {'weight': 0.5})
('exchange algorithm', 'dynamic problem', {'weight': 0.6})
('exchange algorithm', 'approximation algorithm', {'weight': 0.6})
('exchange algorithm', 'trust region', {'weight': 0.6})
('exchange algorithm', 'function (mathematics)', {'weight': 0.6})
('exchange algorithm', 'minimum spanning tree', {'weight': 0.6})
('exchange algorithm', 'context-free grammar', {'weight': 0.6})
('exchange algorithm', 'branch and cut', {'weight': 0.6})
('exchange algorithm', 'state variable', {'weight': 0.6})
('exchange algorithm', 'treewidth', {'weight': 0.6})
('exchange algorithm', 'optimization algorithms and methods', {'weight': 0.5})
('exchange algorithm', 'overlapping subproblem', {'weight': 0.6})
('exchange algorithm', 'taylor & francis', {'weight': 0.6})
('exchange algorithm', 'cutting-plane method', {'weight': 0.6})
('exchange algorithm', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('exchange algorithm', 'method of undetermined coefficients', {'weight': 0.6})
('exchange algorithm', 'combinatorial optimization', {'weight': 0.6})
('exchange algorithm', "newton's method in optimization", {'weight': 0.6})
('exchange algorithm', 'matrix chain multiplication', {'weight': 0.6})
('exchange algorithm', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('exchange algorithm', 'dynamic time warping', {'weight': 0.6})
('exchange algorithm', 'dynamic programming language', {'weight': 0.6})
('exchange algorithm', 'call-by-need', {'weight': 0.6})
('exchange algorithm', 'big-o notation', {'weight': 0.6})
('exchange algorithm', 'comparison of optimization software', {'weight': 0.6})
('exchange algorithm', 'quadratic programming', {'weight': 0.6})
('exchange algorithm', 'common lisp', {'weight': 0.6})
('exchange algorithm', 'barrier function', {'weight': 0.6})
('exchange algorithm', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('exchange algorithm', 'gradient descent', {'weight': 0.6})
('exchange algorithm', 'patricia selinger', {'weight': 0.6})
('exchange algorithm', 'discounting', {'weight': 0.6})
('exchange algorithm', 'ronald l. rivest', {'weight': 0.6})
('exchange algorithm', 'iterative method', {'weight': 0.6})
('exchange algorithm', 'limited-memory bfgs', {'weight': 0.6})
('exchange algorithm', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('exchange algorithm', 'longest common substring problem', {'weight': 0.6})
('exchange algorithm', 'clifford stein', {'weight': 0.6})
('exchange algorithm', 'computer chess', {'weight': 0.6})
('exchange algorithm', 'linear programming', {'weight': 0.6})
('exchange algorithm', 'bitonic tour', {'weight': 0.6})
('exchange algorithm', 'linear search problem', {'weight': 0.6})
('exchange algorithm', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('exchange algorithm', 'systems analysis', {'weight': 0.6})
('exchange algorithm', 'capital (economics)', {'weight': 0.6})
('exchange algorithm', 'levenshtein distance', {'weight': 0.6})
('exchange algorithm', 'nonlinear programming', {'weight': 0.6})
('exchange algorithm', 'genetics', {'weight': 0.6})
('exchange algorithm', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('exchange algorithm', 'gradient', {'weight': 0.6})
('exchange algorithm', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('exchange algorithm', 'bulletin of the american mathematical society', {'weight': 0.6})
('exchange algorithm', 'u.s. english', {'weight': 0.6})
('exchange algorithm', 'refutation table', {'weight': 0.6})
('exchange algorithm', 'heuristic algorithm', {'weight': 0.6})
('exchange algorithm', 'successive linear programming', {'weight': 0.6})
('exchange algorithm', 'optimal substructure', {'weight': 0.6})
('exchange algorithm', 'mathematics portal', {'weight': 0.7})
('exchange algorithm', 'programming language', {'weight': 0.6})
('exchange algorithm', 'mergesort', {'weight': 0.6})
('exchange algorithm', "dijkstra's algorithm", {'weight': 0.6})
('exchange algorithm', 'subgradient method', {'weight': 0.6})
('exchange algorithm', 'call-by-name', {'weight': 0.6})
('exchange algorithm', 'longest increasing subsequence problem', {'weight': 0.6})
('exchange algorithm', 'edward prescott', {'weight': 0.6})
('exchange algorithm', 'exponential time', {'weight': 0.6})
('exchange algorithm', 'principle of optimality', {'weight': 0.6})
('exchange algorithm', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('exchange algorithm', 'mathematical game', {'weight': 0.6})
('exchange algorithm', 'nancy stokey', {'weight': 0.6})
('exchange algorithm', 'nonlinear conjugate gradient method', {'weight': 0.6})
('exchange algorithm', 'discrete-time', {'weight': 0.6})
('exchange algorithm', 'cyk algorithm', {'weight': 0.6})
('exchange algorithm', 'markov decision process', {'weight': 0.6})
('exchange algorithm', "powell's method", {'weight': 0.6})
('exchange algorithm', 'matroid theory', {'weight': 0.5})
('exchange algorithm', 'convexity in economics', {'weight': 0.6})
('exchange algorithm', 'transposition table', {'weight': 0.6})
('exchange algorithm', 'economics', {'weight': 0.6})
('exchange algorithm', 'backward induction', {'weight': 0.6})
('exchange algorithm', 'golden section search', {'weight': 0.6})
('exchange algorithm', 'edit distance', {'weight': 0.6})
('exchange algorithm', 'tree structure', {'weight': 0.6})
('exchange algorithm', 'exchange algorithm', {'weight': 1})
('exchange algorithm', 'dover publications', {'weight': 0.6})
('exchange algorithm', 'seam carving', {'weight': 0.6})
('exchange algorithm', 'recursive least squares', {'weight': 0.6})
('exchange algorithm', 'metaheuristic', {'weight': 0.6})
('exchange algorithm', 'quasi-newton method', {'weight': 0.6})
('exchange algorithm', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('exchange algorithm', 'robert e. lucas', {'weight': 0.6})
('exchange algorithm', 'non-convexity (economics)', {'weight': 0.6})
('exchange algorithm', 'sr1 formula', {'weight': 0.6})
('exchange algorithm', 'mathematical reviews', {'weight': 0.6})
('exchange algorithm', 'puzzle', {'weight': 0.6})
('exchange algorithm', 'associative array', {'weight': 0.6})
('exchange algorithm', 'shortest path problem', {'weight': 0.6})
('exchange algorithm', 'dynamic algorithm', {'weight': 0.6})
('exchange algorithm', 'greedy algorithm for egyptian fractions', {'weight': 0.7})
('exchange algorithm', 'augmented lagrangian method', {'weight': 0.6})
('exchange algorithm', 'charles delisi', {'weight': 0.6})
('exchange algorithm', 'greedy algorithm', {'weight': 0.6})
('exchange algorithm', "karmarkar's algorithm", {'weight': 0.6})
('exchange algorithm', 'lattice models', {'weight': 0.6})
('exchange algorithm', 'utility', {'weight': 0.6})
('exchange algorithm', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('exchange algorithm', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('exchange algorithm', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('exchange algorithm', 'international standard book number', {'weight': 0.6})
('exchange algorithm', 'undirected graph', {'weight': 0.6})
('exchange algorithm', 'scheme (programming language)', {'weight': 0.6})
('exchange algorithm', 'rna structure', {'weight': 0.6})
('exchange algorithm', 'hanoi', {'weight': 0.6})
('exchange algorithm', 'perl', {'weight': 0.6})
('exchange algorithm', 'digital object identifier', {'weight': 0.6})
('exchange algorithm', 'sequential quadratic programming', {'weight': 0.6})
('exchange algorithm', "dinic's algorithm", {'weight': 0.6})
('exchange algorithm', 'pseudo-polynomial time', {'weight': 0.6})
('exchange algorithm', 'partition problem', {'weight': 0.6})
('exchange algorithm', 'stochastic programming', {'weight': 0.6})
('exchange algorithm', 'hill climbing', {'weight': 0.6})
('exchange algorithm', 'top-down', {'weight': 0.6})
('exchange algorithm', 'de boor algorithm', {'weight': 0.6})
('exchange algorithm', 'optimization algorithm', {'weight': 0.6})
('exchange algorithm', "kruskal's algorithm", {'weight': 0.6})
('exchange algorithm', 'combinatorial algorithms', {'weight': 0.5})
('exchange algorithm', 'jacques philippe marie binet', {'weight': 0.6})
('exchange algorithm', 'tabu search', {'weight': 0.6})
('exchange algorithm', 'computer science portal', {'weight': 0.7})
('exchange algorithm', 'divide and conquer algorithm', {'weight': 0.6})
('exchange algorithm', "johnson's algorithm", {'weight': 0.6})
('exchange algorithm', 'evolutionary algorithm', {'weight': 0.6})
('exchange algorithm', 'clique-width', {'weight': 0.6})
('exchange algorithm', 'wolfe conditions', {'weight': 0.6})
('exchange algorithm', 'dynamic programming', {'weight': 0.6})
('exchange algorithm', 'subroutine', {'weight': 0.6})
('exchange algorithm', 'simulated annealing', {'weight': 0.6})
('exchange algorithm', 'tower of hanoi', {'weight': 0.6})
('exchange algorithm', 'branch and bound', {'weight': 0.6})
('exchange algorithm', 'engineering', {'weight': 0.6})
('exchange algorithm', 'greedy source', {'weight': 0.7})
('exchange algorithm', 'matroid', {'weight': 0.7})
('exchange algorithm', 'viterbi algorithm', {'weight': 0.6})
('exchange algorithm', "lemke's algorithm", {'weight': 0.6})
('exchange algorithm', 'simplex algorithm', {'weight': 0.6})
('exchange algorithm', 'local search (optimization)', {'weight': 0.6})
('exchange algorithm', 'hessian matrix', {'weight': 0.6})
('exchange algorithm', 'ibm system r', {'weight': 0.6})
('exchange algorithm', 'penalty method', {'weight': 0.6})
('exchange algorithm', 'prolog', {'weight': 0.6})
('exchange algorithm', 'time-invariant system', {'weight': 0.6})
('exchange algorithm', 'criss-cross algorithm', {'weight': 0.6})
('exchange algorithm', 'revised simplex algorithm', {'weight': 0.6})
('exchange algorithm', 'the mathematical association of america', {'weight': 0.6})
('exchange algorithm', 'line search', {'weight': 0.6})
('exchange algorithm', 'j (programming language)', {'weight': 0.6})
('exchange algorithm', 'word wrap', {'weight': 0.6})
('exchange algorithm', 'epsilon-greedy strategy', {'weight': 0.7})
('exchange algorithm', 'subset sum problem', {'weight': 0.6})
('exchange algorithm', 'integer programming', {'weight': 0.6})
('exchange algorithm', 'nucleosome', {'weight': 0.6})
('exchange algorithm', 'earley algorithm', {'weight': 0.6})
('exchange algorithm', 'referential transparency (computer science)', {'weight': 0.6})
('exchange algorithm', 'recursion', {'weight': 0.6})
('exchange algorithm', 'mathematica', {'weight': 0.6})
('exchange algorithm', 'quicksort', {'weight': 0.6})
('exchange algorithm', 'recursion (computer science)', {'weight': 0.6})
('exchange algorithm', 'checkerboard', {'weight': 0.6})
('exchange algorithm', 'computer science', {'weight': 0.6})
('exchange algorithm', 'brute-force search', {'weight': 0.6})
('exchange algorithm', 'mathematics', {'weight': 0.6})
('exchange algorithm', 'depth-first search', {'weight': 0.6})
('exchange algorithm', 'top-down and bottom-up design', {'weight': 0.6})
('exchange algorithm', 'correspondence problem', {'weight': 0.6})
('exchange algorithm', 'transcription factor', {'weight': 0.6})
('exchange algorithm', 'tree decomposition', {'weight': 0.6})
('exchange algorithm', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('exchange algorithm', 'structural alignment', {'weight': 0.6})
('exchange algorithm', 'local convergence', {'weight': 0.6})
('exchange algorithm', 'knapsack problem', {'weight': 0.6})
('exchange algorithm', 'graph algorithm', {'weight': 0.6})
('exchange algorithm', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('exchange algorithm', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('exchange algorithm', 'hidden markov model', {'weight': 0.6})
('exchange algorithm', 'string (computer science)', {'weight': 0.6})
('exchange algorithm', 'bioinformatics', {'weight': 0.6})
('exchange algorithm', 'computational complexity of mathematical operations', {'weight': 0.6})
('exchange algorithm', 'mathematical optimization', {'weight': 0.6})
('exchange algorithm', 'artificial neural networks', {'weight': 0.6})
('exchange algorithm', 'introduction to algorithms', {'weight': 0.6})
('exchange algorithm', 'thomas h. cormen', {'weight': 0.6})
('exchange algorithm', 'music information retrieval', {'weight': 0.6})
('exchange algorithm', 'beat (music)', {'weight': 0.6})
('exchange algorithm', 'longest common subsequence problem', {'weight': 0.6})
('exchange algorithm', 'convex minimization', {'weight': 0.6})
('exchange algorithm', 'successive parabolic interpolation', {'weight': 0.6})
('exchange algorithm', 'fibonacci sequence', {'weight': 0.6})
('exchange algorithm', 'maximum subarray problem', {'weight': 0.6})
('exchange algorithm', 'convex optimization', {'weight': 0.6})
('exchange algorithm', 'memoization', {'weight': 0.6})
('exchange algorithm', 'richard bellman', {'weight': 0.6})
('exchange algorithm', 'exponential growth', {'weight': 0.6})
('exchange algorithm', 'charles e. leiserson', {'weight': 0.6})
('exchange algorithm', 'charles erwin wilson', {'weight': 0.6})
('exchange algorithm', 'interval scheduling', {'weight': 0.6})
('exchange algorithm', 'chart parser', {'weight': 0.6})
('exchange algorithm', 'travelling salesman problem', {'weight': 0.6})
('exchange algorithm', 'bellman equation', {'weight': 0.6})
('partition problem', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('partition problem', 'photoshop', {'weight': 0.6})
('partition problem', 'sequence alignment', {'weight': 0.6})
('partition problem', 'flow network', {'weight': 0.6})
('partition problem', 'ellipsoid method', {'weight': 0.6})
('partition problem', 'chain matrix multiplication', {'weight': 0.6})
('partition problem', 'ieee', {'weight': 0.6})
('partition problem', 'backtracking', {'weight': 0.6})
('partition problem', 'sr1 formula', {'weight': 0.6})
('partition problem', 'nonlinear conjugate gradient method', {'weight': 0.6})
('partition problem', 'dynamic problem', {'weight': 0.6})
('partition problem', 'trust region', {'weight': 0.6})
('partition problem', 'function (mathematics)', {'weight': 0.6})
('partition problem', 'minimum spanning tree', {'weight': 0.6})
('partition problem', 'context-free grammar', {'weight': 0.6})
('partition problem', 'branch and cut', {'weight': 0.6})
('partition problem', 'state variable', {'weight': 0.6})
('partition problem', 'treewidth', {'weight': 0.6})
('partition problem', 'overlapping subproblem', {'weight': 0.6})
('partition problem', 'taylor & francis', {'weight': 0.6})
('partition problem', 'cutting-plane method', {'weight': 0.6})
('partition problem', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('partition problem', 'method of undetermined coefficients', {'weight': 0.6})
('partition problem', 'combinatorial optimization', {'weight': 0.6})
('partition problem', "newton's method in optimization", {'weight': 0.6})
('partition problem', 'matrix chain multiplication', {'weight': 0.6})
('partition problem', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('partition problem', 'dynamic time warping', {'weight': 0.6})
('partition problem', 'dynamic programming language', {'weight': 0.6})
('partition problem', 'call-by-need', {'weight': 0.6})
('partition problem', 'big-o notation', {'weight': 0.6})
('partition problem', 'comparison of optimization software', {'weight': 0.6})
('partition problem', 'quadratic programming', {'weight': 0.6})
('partition problem', 'common lisp', {'weight': 0.6})
('partition problem', 'barrier function', {'weight': 0.6})
('partition problem', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('partition problem', 'gradient descent', {'weight': 0.6})
('partition problem', 'patricia selinger', {'weight': 0.6})
('partition problem', 'discounting', {'weight': 0.6})
('partition problem', 'ronald l. rivest', {'weight': 0.6})
('partition problem', 'iterative method', {'weight': 0.6})
('partition problem', 'limited-memory bfgs', {'weight': 0.6})
('partition problem', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('partition problem', 'longest common substring problem', {'weight': 0.6})
('partition problem', 'clifford stein', {'weight': 0.6})
('partition problem', 'computer chess', {'weight': 0.6})
('partition problem', 'linear programming', {'weight': 0.6})
('partition problem', 'bitonic tour', {'weight': 0.6})
('partition problem', 'linear search problem', {'weight': 0.6})
('partition problem', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('partition problem', 'systems analysis', {'weight': 0.6})
('partition problem', 'capital (economics)', {'weight': 0.6})
('partition problem', 'levenshtein distance', {'weight': 0.6})
('partition problem', 'nonlinear programming', {'weight': 0.6})
('partition problem', 'computational complexity of mathematical operations', {'weight': 0.6})
('partition problem', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('partition problem', 'gradient', {'weight': 0.6})
('partition problem', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('partition problem', 'bulletin of the american mathematical society', {'weight': 0.6})
('partition problem', 'u.s. english', {'weight': 0.6})
('partition problem', 'refutation table', {'weight': 0.6})
('partition problem', 'heuristic algorithm', {'weight': 0.6})
('partition problem', 'successive linear programming', {'weight': 0.6})
('partition problem', 'optimal substructure', {'weight': 0.6})
('partition problem', 'programming language', {'weight': 0.6})
('partition problem', 'mergesort', {'weight': 0.6})
('partition problem', "dijkstra's algorithm", {'weight': 0.6})
('partition problem', 'subgradient method', {'weight': 0.6})
('partition problem', 'call-by-name', {'weight': 0.6})
('partition problem', 'longest increasing subsequence problem', {'weight': 0.6})
('partition problem', 'edward prescott', {'weight': 0.6})
('partition problem', 'exponential time', {'weight': 0.6})
('partition problem', 'principle of optimality', {'weight': 0.6})
('partition problem', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('partition problem', 'mathematical game', {'weight': 0.6})
('partition problem', 'nancy stokey', {'weight': 0.6})
('partition problem', 'approximation algorithm', {'weight': 0.6})
('partition problem', 'discrete-time', {'weight': 0.6})
('partition problem', 'cyk algorithm', {'weight': 0.6})
('partition problem', 'markov decision process', {'weight': 0.6})
('partition problem', "powell's method", {'weight': 0.6})
('partition problem', 'wolfe conditions', {'weight': 0.6})
('partition problem', 'convexity in economics', {'weight': 0.6})
('partition problem', 'transposition table', {'weight': 0.6})
('partition problem', 'economics', {'weight': 0.6})
('partition problem', 'backward induction', {'weight': 0.6})
('partition problem', 'golden section search', {'weight': 0.6})
('partition problem', 'edit distance', {'weight': 0.6})
('partition problem', 'tree structure', {'weight': 0.6})
('partition problem', 'exchange algorithm', {'weight': 0.6})
('partition problem', 'dover publications', {'weight': 0.6})
('partition problem', 'seam carving', {'weight': 0.6})
('partition problem', 'recursive least squares', {'weight': 0.6})
('partition problem', 'metaheuristic', {'weight': 0.6})
('partition problem', 'quasi-newton method', {'weight': 0.6})
('partition problem', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('partition problem', 'robert e. lucas', {'weight': 0.6})
('partition problem', 'non-convexity (economics)', {'weight': 0.6})
('partition problem', 'np-complete problems', {'weight': 0.5})
('partition problem', 'mathematical reviews', {'weight': 0.6})
('partition problem', 'puzzle', {'weight': 0.6})
('partition problem', 'associative array', {'weight': 0.6})
('partition problem', 'shortest path problem', {'weight': 0.6})
('partition problem', 'dynamic algorithm', {'weight': 0.6})
('partition problem', 'augmented lagrangian method', {'weight': 0.6})
('partition problem', 'charles delisi', {'weight': 0.6})
('partition problem', 'greedy algorithm', {'weight': 0.6})
('partition problem', "karmarkar's algorithm", {'weight': 0.6})
('partition problem', 'lattice models', {'weight': 0.6})
('partition problem', 'utility', {'weight': 0.6})
('partition problem', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('partition problem', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('partition problem', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('partition problem', 'international standard book number', {'weight': 0.6})
('partition problem', 'undirected graph', {'weight': 0.6})
('partition problem', 'scheme (programming language)', {'weight': 0.6})
('partition problem', 'rna structure', {'weight': 0.6})
('partition problem', 'hanoi', {'weight': 0.6})
('partition problem', 'perl', {'weight': 0.6})
('partition problem', 'digital object identifier', {'weight': 0.6})
('partition problem', 'sequential quadratic programming', {'weight': 0.6})
('partition problem', "dinic's algorithm", {'weight': 0.6})
('partition problem', 'pseudo-polynomial time', {'weight': 0.6})
('partition problem', 'partition problem', {'weight': 1})
('partition problem', 'stochastic programming', {'weight': 0.6})
('partition problem', 'hill climbing', {'weight': 0.6})
('partition problem', 'top-down', {'weight': 0.6})
('partition problem', 'de boor algorithm', {'weight': 0.6})
('partition problem', 'optimization algorithm', {'weight': 0.6})
('partition problem', "kruskal's algorithm", {'weight': 0.6})
('partition problem', 'jacques philippe marie binet', {'weight': 0.6})
('partition problem', 'tabu search', {'weight': 0.6})
('partition problem', 'divide and conquer algorithm', {'weight': 0.6})
('partition problem', "johnson's algorithm", {'weight': 0.6})
('partition problem', 'evolutionary algorithm', {'weight': 0.6})
('partition problem', 'clique-width', {'weight': 0.6})
('partition problem', 'weakly np-complete problems', {'weight': 0.5})
('partition problem', 'dynamic programming', {'weight': 0.6})
('partition problem', 'subroutine', {'weight': 0.6})
('partition problem', 'simulated annealing', {'weight': 0.6})
('partition problem', 'tower of hanoi', {'weight': 0.6})
('partition problem', 'branch and bound', {'weight': 0.6})
('partition problem', 'engineering', {'weight': 0.6})
('partition problem', 'matroid', {'weight': 0.6})
('partition problem', 'viterbi algorithm', {'weight': 0.6})
('partition problem', "lemke's algorithm", {'weight': 0.6})
('partition problem', 'simplex algorithm', {'weight': 0.6})
('partition problem', 'local search (optimization)', {'weight': 0.6})
('partition problem', 'hessian matrix', {'weight': 0.6})
('partition problem', 'ibm system r', {'weight': 0.6})
('partition problem', 'penalty method', {'weight': 0.6})
('partition problem', 'prolog', {'weight': 0.6})
('partition problem', 'time-invariant system', {'weight': 0.6})
('partition problem', 'criss-cross algorithm', {'weight': 0.6})
('partition problem', 'revised simplex algorithm', {'weight': 0.6})
('partition problem', 'the mathematical association of america', {'weight': 0.6})
('partition problem', 'line search', {'weight': 0.6})
('partition problem', 'j (programming language)', {'weight': 0.6})
('partition problem', 'word wrap', {'weight': 0.6})
('partition problem', 'subset sum problem', {'weight': 0.7})
('partition problem', 'integer programming', {'weight': 0.6})
('partition problem', 'nucleosome', {'weight': 0.6})
('partition problem', 'earley algorithm', {'weight': 0.6})
('partition problem', 'referential transparency (computer science)', {'weight': 0.6})
('partition problem', 'recursion', {'weight': 0.6})
('partition problem', 'mathematica', {'weight': 0.6})
('partition problem', 'quicksort', {'weight': 0.6})
('partition problem', 'recursion (computer science)', {'weight': 0.6})
('partition problem', 'checkerboard', {'weight': 0.6})
('partition problem', 'computer science', {'weight': 0.6})
('partition problem', 'brute-force search', {'weight': 0.6})
('partition problem', 'mathematics', {'weight': 0.6})
('partition problem', 'depth-first search', {'weight': 0.6})
('partition problem', 'top-down and bottom-up design', {'weight': 0.6})
('partition problem', 'correspondence problem', {'weight': 0.6})
('partition problem', 'transcription factor', {'weight': 0.6})
('partition problem', 'tree decomposition', {'weight': 0.6})
('partition problem', 'bin packing problem', {'weight': 0.7})
('partition problem', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('partition problem', 'structural alignment', {'weight': 0.6})
('partition problem', 'local convergence', {'weight': 0.6})
('partition problem', 'knapsack problem', {'weight': 0.6})
('partition problem', 'graph algorithm', {'weight': 0.6})
('partition problem', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('partition problem', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('partition problem', 'hidden markov model', {'weight': 0.6})
('partition problem', 'string (computer science)', {'weight': 0.6})
('partition problem', 'bioinformatics', {'weight': 0.6})
('partition problem', 'genetics', {'weight': 0.6})
('partition problem', 'mathematical optimization', {'weight': 0.6})
('partition problem', 'artificial neural networks', {'weight': 0.6})
('partition problem', 'introduction to algorithms', {'weight': 0.6})
('partition problem', 'thomas h. cormen', {'weight': 0.6})
('partition problem', 'music information retrieval', {'weight': 0.6})
('partition problem', 'beat (music)', {'weight': 0.6})
('partition problem', 'longest common subsequence problem', {'weight': 0.6})
('partition problem', 'convex minimization', {'weight': 0.6})
('partition problem', 'successive parabolic interpolation', {'weight': 0.6})
('partition problem', 'fibonacci sequence', {'weight': 0.6})
('partition problem', 'maximum subarray problem', {'weight': 0.6})
('partition problem', 'convex optimization', {'weight': 0.6})
('partition problem', 'memoization', {'weight': 0.6})
('partition problem', 'richard bellman', {'weight': 0.6})
('partition problem', 'exponential growth', {'weight': 0.6})
('partition problem', 'charles e. leiserson', {'weight': 0.6})
('partition problem', 'charles erwin wilson', {'weight': 0.6})
('partition problem', 'interval scheduling', {'weight': 0.6})
('partition problem', 'chart parser', {'weight': 0.6})
('partition problem', 'travelling salesman problem', {'weight': 0.6})
('partition problem', 'bellman equation', {'weight': 0.6})
('systems analysis', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('systems analysis', 'photoshop', {'weight': 0.6})
('systems analysis', 'sequence alignment', {'weight': 0.6})
('systems analysis', 'flow network', {'weight': 0.6})
('systems analysis', 'gregory bateson', {'weight': 0.7})
('systems analysis', 'policy analysis', {'weight': 0.7})
('systems analysis', 'russell l. ackoff', {'weight': 0.7})
('systems analysis', 'ellipsoid method', {'weight': 0.6})
('systems analysis', 'chain matrix multiplication', {'weight': 0.6})
('systems analysis', 'ieee', {'weight': 0.6})
('systems analysis', 'backtracking', {'weight': 0.6})
('systems analysis', 'software architecture', {'weight': 0.7})
('systems analysis', 'nonlinear conjugate gradient method', {'weight': 0.6})
('systems analysis', 'dynamic problem', {'weight': 0.6})
('systems analysis', 'trust region', {'weight': 0.6})
('systems analysis', 'systems theory', {'weight': 0.7})
('systems analysis', 'minimum spanning tree', {'weight': 0.6})
('systems analysis', 'howard t. odum', {'weight': 0.7})
('systems analysis', 'morphological analysis', {'weight': 0.7})
('systems analysis', 'context-free grammar', {'weight': 0.6})
('systems analysis', 'branch and cut', {'weight': 0.6})
('systems analysis', 'state variable', {'weight': 0.6})
('systems analysis', 'financial analysts', {'weight': 0.5})
('systems analysis', 'treewidth', {'weight': 0.6})
('systems analysis', 'gordon pask', {'weight': 0.7})
('systems analysis', 'overlapping subproblem', {'weight': 0.6})
('systems analysis', 'taylor & francis', {'weight': 0.6})
('systems analysis', 'cutting-plane method', {'weight': 0.6})
('systems analysis', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('systems analysis', 'method of undetermined coefficients', {'weight': 0.6})
('systems analysis', 'combinatorial optimization', {'weight': 0.6})
('systems analysis', "newton's method in optimization", {'weight': 0.6})
('systems analysis', 'matrix chain multiplication', {'weight': 0.6})
('systems analysis', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('systems analysis', 'dynamic time warping', {'weight': 0.6})
('systems analysis', 'ronald l. rivest', {'weight': 0.6})
('systems analysis', 'dynamic programming language', {'weight': 0.6})
('systems analysis', 'call-by-need', {'weight': 0.6})
('systems analysis', 'logico-linguistic modeling', {'weight': 0.7})
('systems analysis', 'accident analysis', {'weight': 0.7})
('systems analysis', 'big-o notation', {'weight': 0.6})
('systems analysis', 'robert s. mcnamara', {'weight': 0.7})
('systems analysis', 'comparison of optimization software', {'weight': 0.6})
('systems analysis', 'quadratic programming', {'weight': 0.6})
('systems analysis', 'common lisp', {'weight': 0.6})
('systems analysis', 'barrier function', {'weight': 0.6})
('systems analysis', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('systems analysis', 'gradient descent', {'weight': 0.6})
('systems analysis', 'patricia selinger', {'weight': 0.6})
('systems analysis', 'discounting', {'weight': 0.6})
('systems analysis', 'technology assessment', {'weight': 0.5})
('systems analysis', 'iterative method', {'weight': 0.6})
('systems analysis', 'cybernetics', {'weight': 0.7})
('systems analysis', 'stewart brand', {'weight': 0.7})
('systems analysis', 'limited-memory bfgs', {'weight': 0.6})
('systems analysis', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('systems analysis', 'longest common substring problem', {'weight': 0.6})
('systems analysis', 'soft systems methodology', {'weight': 0.7})
('systems analysis', 'clifford stein', {'weight': 0.6})
('systems analysis', 'computer chess', {'weight': 0.6})
('systems analysis', 'linear programming', {'weight': 0.6})
('systems analysis', 'bitonic tour', {'weight': 0.6})
('systems analysis', 'linear search problem', {'weight': 0.6})
('systems analysis', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('systems analysis', 'systems analysis', {'weight': 1})
('systems analysis', 'capital (economics)', {'weight': 0.6})
('systems analysis', 'levenshtein distance', {'weight': 0.6})
('systems analysis', 'program designer', {'weight': 0.7})
('systems analysis', 'nonlinear programming', {'weight': 0.6})
('systems analysis', 'computational complexity of mathematical operations', {'weight': 0.6})
('systems analysis', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('systems analysis', 'gradient', {'weight': 0.6})
('systems analysis', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('systems analysis', 'bulletin of the american mathematical society', {'weight': 0.6})
('systems analysis', 'u.s. english', {'weight': 0.6})
('systems analysis', 'refutation table', {'weight': 0.6})
('systems analysis', 'heuristic algorithm', {'weight': 0.6})
('systems analysis', 'successive linear programming', {'weight': 0.6})
('systems analysis', 'optimal substructure', {'weight': 0.6})
('systems analysis', 'programming language', {'weight': 0.6})
('systems analysis', 'mergesort', {'weight': 0.6})
('systems analysis', "dijkstra's algorithm", {'weight': 0.6})
('systems analysis', 'subgradient method', {'weight': 0.6})
('systems analysis', 'call-by-name', {'weight': 0.6})
('systems analysis', 'longest increasing subsequence problem', {'weight': 0.6})
('systems analysis', 'edward prescott', {'weight': 0.6})
('systems analysis', 'exponential time', {'weight': 0.6})
('systems analysis', 'principle of optimality', {'weight': 0.6})
('systems analysis', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('systems analysis', 'mathematical game', {'weight': 0.6})
('systems analysis', 'nancy stokey', {'weight': 0.6})
('systems analysis', 'donella meadows', {'weight': 0.7})
('systems analysis', 'approximation algorithm', {'weight': 0.6})
('systems analysis', 'discrete-time', {'weight': 0.6})
('systems analysis', 'cyk algorithm', {'weight': 0.6})
('systems analysis', 'markov decision process', {'weight': 0.6})
('systems analysis', "powell's method", {'weight': 0.6})
('systems analysis', 'wolfe conditions', {'weight': 0.6})
('systems analysis', 'convexity in economics', {'weight': 0.6})
('systems analysis', 'jay forrester', {'weight': 0.7})
('systems analysis', 'transposition table', {'weight': 0.6})
('systems analysis', 'economics', {'weight': 0.6})
('systems analysis', 'backward induction', {'weight': 0.6})
('systems analysis', 'golden section search', {'weight': 0.6})
('systems analysis', 'edit distance', {'weight': 0.6})
('systems analysis', 'tree structure', {'weight': 0.6})
('systems analysis', 'waterfall model', {'weight': 0.7})
('systems analysis', 'exchange algorithm', {'weight': 0.6})
('systems analysis', 'dover publications', {'weight': 0.6})
('systems analysis', 'seam carving', {'weight': 0.6})
('systems analysis', 'recursive least squares', {'weight': 0.6})
('systems analysis', 'metaheuristic', {'weight': 0.6})
('systems analysis', 'quasi-newton method', {'weight': 0.6})
('systems analysis', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('systems analysis', 'robert e. lucas', {'weight': 0.6})
('systems analysis', 'non-convexity (economics)', {'weight': 0.6})
('systems analysis', 'sr1 formula', {'weight': 0.6})
('systems analysis', 'mathematical reviews', {'weight': 0.6})
('systems analysis', 'puzzle', {'weight': 0.6})
('systems analysis', 'associative array', {'weight': 0.6})
('systems analysis', 'shortest path problem', {'weight': 0.6})
('systems analysis', 'dynamic algorithm', {'weight': 0.6})
('systems analysis', 'systems design', {'weight': 0.7})
('systems analysis', 'systems analyst', {'weight': 0.7})
('systems analysis', 'augmented lagrangian method', {'weight': 0.6})
('systems analysis', 'charles delisi', {'weight': 0.6})
('systems analysis', 'greedy algorithm', {'weight': 0.6})
('systems analysis', "karmarkar's algorithm", {'weight': 0.6})
('systems analysis', 'lattice models', {'weight': 0.6})
('systems analysis', 'utility', {'weight': 0.6})
('systems analysis', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('systems analysis', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('systems analysis', 'management', {'weight': 0.5})
('systems analysis', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('systems analysis', 'international standard book number', {'weight': 0.6})
('systems analysis', 'undirected graph', {'weight': 0.6})
('systems analysis', 'scheme (programming language)', {'weight': 0.6})
('systems analysis', 'rna structure', {'weight': 0.6})
('systems analysis', 'hanoi', {'weight': 0.6})
('systems analysis', 'perl', {'weight': 0.6})
('systems analysis', 'enterprise architecture', {'weight': 0.7})
('systems analysis', 'digital object identifier', {'weight': 0.6})
('systems analysis', 'sequential quadratic programming', {'weight': 0.6})
('systems analysis', 'software prototyping', {'weight': 0.7})
('systems analysis', "dinic's algorithm", {'weight': 0.6})
('systems analysis', 'pseudo-polynomial time', {'weight': 0.6})
('systems analysis', 'partition problem', {'weight': 0.6})
('systems analysis', 'stochastic programming', {'weight': 0.6})
('systems analysis', 'systems engineering', {'weight': 0.5})
('systems analysis', 'henry paynter', {'weight': 0.7})
('systems analysis', 'hill climbing', {'weight': 0.6})
('systems analysis', 'business analysis', {'weight': 0.7})
('systems analysis', 'top-down', {'weight': 0.6})
('systems analysis', 'de boor algorithm', {'weight': 0.6})
('systems analysis', 'optimization algorithm', {'weight': 0.6})
('systems analysis', "kruskal's algorithm", {'weight': 0.6})
('systems analysis', 'spiral model', {'weight': 0.7})
('systems analysis', 'jacques philippe marie binet', {'weight': 0.6})
('systems analysis', 'tabu search', {'weight': 0.6})
('systems analysis', 'divide and conquer algorithm', {'weight': 0.6})
('systems analysis', "johnson's algorithm", {'weight': 0.6})
('systems analysis', 'evolutionary algorithm', {'weight': 0.6})
('systems analysis', 'clique-width', {'weight': 0.6})
('systems analysis', 'dynamic programming', {'weight': 0.6})
('systems analysis', 'subroutine', {'weight': 0.6})
('systems analysis', 'simulated annealing', {'weight': 0.6})
('systems analysis', 'tower of hanoi', {'weight': 0.6})
('systems analysis', 'futurology', {'weight': 0.5})
('systems analysis', 'branch and bound', {'weight': 0.6})
('systems analysis', 'engineering', {'weight': 0.6})
('systems analysis', 'matroid', {'weight': 0.6})
('systems analysis', 'viterbi algorithm', {'weight': 0.6})
('systems analysis', "lemke's algorithm", {'weight': 0.6})
('systems analysis', 'simplex algorithm', {'weight': 0.6})
('systems analysis', 'local search (optimization)', {'weight': 0.6})
('systems analysis', 'hessian matrix', {'weight': 0.6})
('systems analysis', 'ibm system r', {'weight': 0.6})
('systems analysis', 'penalty method', {'weight': 0.6})
('systems analysis', 'prolog', {'weight': 0.6})
('systems analysis', 'time-invariant system', {'weight': 0.6})
('systems analysis', 'criss-cross algorithm', {'weight': 0.6})
('systems analysis', 'ludwig von bertalanffy', {'weight': 0.7})
('systems analysis', 'revised simplex algorithm', {'weight': 0.6})
('systems analysis', 'the mathematical association of america', {'weight': 0.6})
('systems analysis', 'line search', {'weight': 0.6})
('systems analysis', 'j (programming language)', {'weight': 0.6})
('systems analysis', 'word wrap', {'weight': 0.6})
('systems analysis', 'stafford beer', {'weight': 0.7})
('systems analysis', 'function (mathematics)', {'weight': 0.6})
('systems analysis', 'subset sum problem', {'weight': 0.6})
('systems analysis', 'integer programming', {'weight': 0.6})
('systems analysis', 'nucleosome', {'weight': 0.6})
('systems analysis', 'earley algorithm', {'weight': 0.6})
('systems analysis', 'referential transparency (computer science)', {'weight': 0.6})
('systems analysis', 'recursion', {'weight': 0.6})
('systems analysis', 'mathematica', {'weight': 0.6})
('systems analysis', 'quicksort', {'weight': 0.6})
('systems analysis', 'system architecture', {'weight': 0.7})
('systems analysis', 'recursion (computer science)', {'weight': 0.6})
('systems analysis', 'checkerboard', {'weight': 0.6})
('systems analysis', 'computer science', {'weight': 0.6})
('systems analysis', 'brute-force search', {'weight': 0.6})
('systems analysis', 'mathematics', {'weight': 0.6})
('systems analysis', 'depth-first search', {'weight': 0.6})
('systems analysis', 'top-down and bottom-up design', {'weight': 0.6})
('systems analysis', 'correspondence problem', {'weight': 0.6})
('systems analysis', 'transcription factor', {'weight': 0.6})
('systems analysis', 'tree decomposition', {'weight': 0.6})
('systems analysis', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('systems analysis', 'structural alignment', {'weight': 0.6})
('systems analysis', 'local convergence', {'weight': 0.6})
('systems analysis', 'buckminster fuller', {'weight': 0.7})
('systems analysis', 'knapsack problem', {'weight': 0.6})
('systems analysis', 'graph algorithm', {'weight': 0.6})
('systems analysis', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('systems analysis', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('systems analysis', 'hidden markov model', {'weight': 0.6})
('systems analysis', 'string (computer science)', {'weight': 0.6})
('systems analysis', 'bioinformatics', {'weight': 0.6})
('systems analysis', 'genetics', {'weight': 0.6})
('systems analysis', 'mathematical optimization', {'weight': 0.6})
('systems analysis', 'artificial neural networks', {'weight': 0.6})
('systems analysis', 'introduction to algorithms', {'weight': 0.6})
('systems analysis', 'thomas h. cormen', {'weight': 0.6})
('systems analysis', 'music information retrieval', {'weight': 0.6})
('systems analysis', 'beat (music)', {'weight': 0.6})
('systems analysis', 'longest common subsequence problem', {'weight': 0.6})
('systems analysis', 'convex minimization', {'weight': 0.6})
('systems analysis', 'successive parabolic interpolation', {'weight': 0.6})
('systems analysis', 'fibonacci sequence', {'weight': 0.6})
('systems analysis', 'maximum subarray problem', {'weight': 0.6})
('systems analysis', 'convex optimization', {'weight': 0.6})
('systems analysis', 'memoization', {'weight': 0.6})
('systems analysis', 'richard bellman', {'weight': 0.6})
('systems analysis', 'exponential growth', {'weight': 0.6})
('systems analysis', 'charles e. leiserson', {'weight': 0.6})
('systems analysis', 'charles erwin wilson', {'weight': 0.6})
('systems analysis', 'interval scheduling', {'weight': 0.6})
('systems analysis', 'chart parser', {'weight': 0.6})
('systems analysis', 'travelling salesman problem', {'weight': 0.6})
('systems analysis', 'bellman equation', {'weight': 0.6})
('nonlinear programming', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('nonlinear programming', 'photoshop', {'weight': 0.6})
('nonlinear programming', 'sequence alignment', {'weight': 0.6})
('nonlinear programming', 'flow network', {'weight': 0.6})
('nonlinear programming', 'ellipsoid method', {'weight': 0.6})
('nonlinear programming', 'chain matrix multiplication', {'weight': 0.6})
('nonlinear programming', 'ieee', {'weight': 0.6})
('nonlinear programming', 'backtracking', {'weight': 0.6})
('nonlinear programming', 'nonlinear conjugate gradient method', {'weight': 0.6})
('nonlinear programming', 'dynamic problem', {'weight': 0.6})
('nonlinear programming', 'trust region', {'weight': 0.6})
('nonlinear programming', 'function (mathematics)', {'weight': 0.6})
('nonlinear programming', 'minimum spanning tree', {'weight': 0.6})
('nonlinear programming', 'context-free grammar', {'weight': 0.6})
('nonlinear programming', 'branch and cut', {'weight': 0.6})
('nonlinear programming', 'state variable', {'weight': 0.6})
('nonlinear programming', 'least squares', {'weight': 0.7})
('nonlinear programming', 'treewidth', {'weight': 0.6})
('nonlinear programming', 'optimization algorithms and methods', {'weight': 0.5})
('nonlinear programming', 'overlapping subproblem', {'weight': 0.6})
('nonlinear programming', 'taylor & francis', {'weight': 0.6})
('nonlinear programming', 'cutting-plane method', {'weight': 0.6})
('nonlinear programming', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('nonlinear programming', 'method of undetermined coefficients', {'weight': 0.6})
('nonlinear programming', 'combinatorial optimization', {'weight': 0.6})
('nonlinear programming', "newton's method in optimization", {'weight': 0.6})
('nonlinear programming', 'matrix chain multiplication', {'weight': 0.6})
('nonlinear programming', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('nonlinear programming', 'dynamic time warping', {'weight': 0.6})
('nonlinear programming', 'dynamic programming language', {'weight': 0.6})
('nonlinear programming', 'call-by-need', {'weight': 0.6})
('nonlinear programming', 'big-o notation', {'weight': 0.6})
('nonlinear programming', 'comparison of optimization software', {'weight': 0.6})
('nonlinear programming', 'quadratic programming', {'weight': 0.6})
('nonlinear programming', 'common lisp', {'weight': 0.6})
('nonlinear programming', 'barrier function', {'weight': 0.6})
('nonlinear programming', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('nonlinear programming', 'list of optimization software', {'weight': 0.7})
('nonlinear programming', 'gradient descent', {'weight': 0.6})
('nonlinear programming', 'patricia selinger', {'weight': 0.6})
('nonlinear programming', 'discounting', {'weight': 0.6})
('nonlinear programming', 'ronald l. rivest', {'weight': 0.6})
('nonlinear programming', 'iterative method', {'weight': 0.6})
('nonlinear programming', 'limited-memory bfgs', {'weight': 0.6})
('nonlinear programming', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('nonlinear programming', 'longest common substring problem', {'weight': 0.6})
('nonlinear programming', 'clifford stein', {'weight': 0.6})
('nonlinear programming', 'computer chess', {'weight': 0.6})
('nonlinear programming', 'linear programming', {'weight': 0.7})
('nonlinear programming', 'bitonic tour', {'weight': 0.6})
('nonlinear programming', 'linear search problem', {'weight': 0.6})
('nonlinear programming', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('nonlinear programming', 'systems analysis', {'weight': 0.6})
('nonlinear programming', 'capital (economics)', {'weight': 0.6})
('nonlinear programming', 'levenshtein distance', {'weight': 0.6})
('nonlinear programming', 'nonlinear programming', {'weight': 1})
('nonlinear programming', 'computational complexity of mathematical operations', {'weight': 0.6})
('nonlinear programming', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('nonlinear programming', 'gradient', {'weight': 0.6})
('nonlinear programming', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('nonlinear programming', 'bulletin of the american mathematical society', {'weight': 0.6})
('nonlinear programming', 'u.s. english', {'weight': 0.6})
('nonlinear programming', 'refutation table', {'weight': 0.6})
('nonlinear programming', 'heuristic algorithm', {'weight': 0.6})
('nonlinear programming', 'successive linear programming', {'weight': 0.6})
('nonlinear programming', 'optimal substructure', {'weight': 0.6})
('nonlinear programming', 'programming language', {'weight': 0.6})
('nonlinear programming', 'mergesort', {'weight': 0.6})
('nonlinear programming', "dijkstra's algorithm", {'weight': 0.6})
('nonlinear programming', 'subgradient method', {'weight': 0.6})
('nonlinear programming', 'call-by-name', {'weight': 0.6})
('nonlinear programming', 'longest increasing subsequence problem', {'weight': 0.6})
('nonlinear programming', 'edward prescott', {'weight': 0.6})
('nonlinear programming', 'exponential time', {'weight': 0.6})
('nonlinear programming', 'principle of optimality', {'weight': 0.6})
('nonlinear programming', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('nonlinear programming', 'mathematical game', {'weight': 0.6})
('nonlinear programming', 'nancy stokey', {'weight': 0.6})
('nonlinear programming', 'approximation algorithm', {'weight': 0.6})
('nonlinear programming', 'discrete-time', {'weight': 0.6})
('nonlinear programming', 'cyk algorithm', {'weight': 0.6})
('nonlinear programming', 'markov decision process', {'weight': 0.6})
('nonlinear programming', "powell's method", {'weight': 0.6})
('nonlinear programming', 'wolfe conditions', {'weight': 0.6})
('nonlinear programming', 'convexity in economics', {'weight': 0.6})
('nonlinear programming', 'transposition table', {'weight': 0.6})
('nonlinear programming', 'economics', {'weight': 0.6})
('nonlinear programming', 'backward induction', {'weight': 0.6})
('nonlinear programming', 'golden section search', {'weight': 0.6})
('nonlinear programming', 'edit distance', {'weight': 0.6})
('nonlinear programming', 'tree structure', {'weight': 0.6})
('nonlinear programming', 'exchange algorithm', {'weight': 0.6})
('nonlinear programming', 'dover publications', {'weight': 0.6})
('nonlinear programming', 'seam carving', {'weight': 0.6})
('nonlinear programming', 'recursive least squares', {'weight': 0.6})
('nonlinear programming', 'metaheuristic', {'weight': 0.6})
('nonlinear programming', 'quasi-newton method', {'weight': 0.6})
('nonlinear programming', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('nonlinear programming', 'robert e. lucas', {'weight': 0.6})
('nonlinear programming', 'non-convexity (economics)', {'weight': 0.6})
('nonlinear programming', 'sr1 formula', {'weight': 0.6})
('nonlinear programming', 'mathematical reviews', {'weight': 0.6})
('nonlinear programming', 'puzzle', {'weight': 0.6})
('nonlinear programming', 'associative array', {'weight': 0.6})
('nonlinear programming', 'shortest path problem', {'weight': 0.6})
('nonlinear programming', 'dynamic algorithm', {'weight': 0.6})
('nonlinear programming', 'augmented lagrangian method', {'weight': 0.6})
('nonlinear programming', 'charles delisi', {'weight': 0.6})
('nonlinear programming', 'greedy algorithm', {'weight': 0.6})
('nonlinear programming', "karmarkar's algorithm", {'weight': 0.6})
('nonlinear programming', 'lattice models', {'weight': 0.6})
('nonlinear programming', 'utility', {'weight': 0.6})
('nonlinear programming', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('nonlinear programming', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('nonlinear programming', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('nonlinear programming', 'international standard book number', {'weight': 0.6})
('nonlinear programming', 'undirected graph', {'weight': 0.6})
('nonlinear programming', 'scheme (programming language)', {'weight': 0.6})
('nonlinear programming', 'rna structure', {'weight': 0.6})
('nonlinear programming', 'hanoi', {'weight': 0.6})
('nonlinear programming', 'perl', {'weight': 0.6})
('nonlinear programming', 'digital object identifier', {'weight': 0.6})
('nonlinear programming', 'sequential quadratic programming', {'weight': 0.6})
('nonlinear programming', "dinic's algorithm", {'weight': 0.6})
('nonlinear programming', 'pseudo-polynomial time', {'weight': 0.6})
('nonlinear programming', 'partition problem', {'weight': 0.6})
('nonlinear programming', 'stochastic programming', {'weight': 0.6})
('nonlinear programming', 'hill climbing', {'weight': 0.6})
('nonlinear programming', 'top-down', {'weight': 0.6})
('nonlinear programming', 'de boor algorithm', {'weight': 0.6})
('nonlinear programming', 'optimization algorithm', {'weight': 0.6})
('nonlinear programming', "kruskal's algorithm", {'weight': 0.6})
('nonlinear programming', 'jacques philippe marie binet', {'weight': 0.6})
('nonlinear programming', 'tabu search', {'weight': 0.6})
('nonlinear programming', 'divide and conquer algorithm', {'weight': 0.6})
('nonlinear programming', "johnson's algorithm", {'weight': 0.6})
('nonlinear programming', 'evolutionary algorithm', {'weight': 0.6})
('nonlinear programming', 'clique-width', {'weight': 0.6})
('nonlinear programming', 'dynamic programming', {'weight': 0.6})
('nonlinear programming', 'subroutine', {'weight': 0.6})
('nonlinear programming', 'simulated annealing', {'weight': 0.6})
('nonlinear programming', 'tower of hanoi', {'weight': 0.6})
('nonlinear programming', 'branch and bound', {'weight': 0.6})
('nonlinear programming', 'engineering', {'weight': 0.6})
('nonlinear programming', 'matroid', {'weight': 0.6})
('nonlinear programming', 'viterbi algorithm', {'weight': 0.6})
('nonlinear programming', "lemke's algorithm", {'weight': 0.6})
('nonlinear programming', 'simplex algorithm', {'weight': 0.6})
('nonlinear programming', 'local search (optimization)', {'weight': 0.6})
('nonlinear programming', 'hessian matrix', {'weight': 0.6})
('nonlinear programming', 'ibm system r', {'weight': 0.6})
('nonlinear programming', 'penalty method', {'weight': 0.6})
('nonlinear programming', 'prolog', {'weight': 0.6})
('nonlinear programming', 'time-invariant system', {'weight': 0.6})
('nonlinear programming', 'criss-cross algorithm', {'weight': 0.6})
('nonlinear programming', 'revised simplex algorithm', {'weight': 0.6})
('nonlinear programming', 'the mathematical association of america', {'weight': 0.6})
('nonlinear programming', 'line search', {'weight': 0.6})
('nonlinear programming', 'j (programming language)', {'weight': 0.6})
('nonlinear programming', 'word wrap', {'weight': 0.6})
('nonlinear programming', 'subset sum problem', {'weight': 0.6})
('nonlinear programming', 'integer programming', {'weight': 0.6})
('nonlinear programming', 'nucleosome', {'weight': 0.6})
('nonlinear programming', 'earley algorithm', {'weight': 0.6})
('nonlinear programming', 'referential transparency (computer science)', {'weight': 0.6})
('nonlinear programming', 'recursion', {'weight': 0.6})
('nonlinear programming', 'mathematica', {'weight': 0.6})
('nonlinear programming', 'quicksort', {'weight': 0.6})
('nonlinear programming', 'recursion (computer science)', {'weight': 0.6})
('nonlinear programming', 'checkerboard', {'weight': 0.6})
('nonlinear programming', 'computer science', {'weight': 0.6})
('nonlinear programming', 'brute-force search', {'weight': 0.6})
('nonlinear programming', 'mathematics', {'weight': 0.6})
('nonlinear programming', 'nl (format)', {'weight': 0.7})
('nonlinear programming', 'depth-first search', {'weight': 0.6})
('nonlinear programming', 'top-down and bottom-up design', {'weight': 0.6})
('nonlinear programming', 'correspondence problem', {'weight': 0.6})
('nonlinear programming', 'transcription factor', {'weight': 0.6})
('nonlinear programming', 'werner fenchel', {'weight': 0.7})
('nonlinear programming', 'tree decomposition', {'weight': 0.6})
('nonlinear programming', 'curve fitting', {'weight': 0.7})
('nonlinear programming', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('nonlinear programming', 'structural alignment', {'weight': 0.6})
('nonlinear programming', 'local convergence', {'weight': 0.6})
('nonlinear programming', 'knapsack problem', {'weight': 0.6})
('nonlinear programming', 'graph algorithm', {'weight': 0.6})
('nonlinear programming', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('nonlinear programming', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('nonlinear programming', 'hidden markov model', {'weight': 0.6})
('nonlinear programming', 'string (computer science)', {'weight': 0.6})
('nonlinear programming', 'bioinformatics', {'weight': 0.6})
('nonlinear programming', 'genetics', {'weight': 0.6})
('nonlinear programming', 'mathematical optimization', {'weight': 0.7})
('nonlinear programming', 'artificial neural networks', {'weight': 0.6})
('nonlinear programming', 'introduction to algorithms', {'weight': 0.6})
('nonlinear programming', 'thomas h. cormen', {'weight': 0.6})
('nonlinear programming', 'music information retrieval', {'weight': 0.6})
('nonlinear programming', 'beat (music)', {'weight': 0.6})
('nonlinear programming', 'longest common subsequence problem', {'weight': 0.6})
('nonlinear programming', 'convex minimization', {'weight': 0.6})
('nonlinear programming', 'successive parabolic interpolation', {'weight': 0.6})
('nonlinear programming', 'fibonacci sequence', {'weight': 0.6})
('nonlinear programming', 'maximum subarray problem', {'weight': 0.6})
('nonlinear programming', 'convex optimization', {'weight': 0.6})
('nonlinear programming', 'memoization', {'weight': 0.6})
('nonlinear programming', 'richard bellman', {'weight': 0.6})
('nonlinear programming', 'exponential growth', {'weight': 0.6})
('nonlinear programming', 'charles e. leiserson', {'weight': 0.6})
('nonlinear programming', 'charles erwin wilson', {'weight': 0.6})
('nonlinear programming', 'interval scheduling', {'weight': 0.6})
('nonlinear programming', 'chart parser', {'weight': 0.6})
('nonlinear programming', 'travelling salesman problem', {'weight': 0.6})
('nonlinear programming', 'bellman equation', {'weight': 0.6})
('computational complexity of mathematical operations', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('computational complexity of mathematical operations', 'photoshop', {'weight': 0.6})
('computational complexity of mathematical operations', 'sequence alignment', {'weight': 0.6})
('computational complexity of mathematical operations', 'flow network', {'weight': 0.6})
('computational complexity of mathematical operations', 'ellipsoid method', {'weight': 0.6})
('computational complexity of mathematical operations', 'chain matrix multiplication', {'weight': 0.6})
('computational complexity of mathematical operations', 'ieee', {'weight': 0.6})
('computational complexity of mathematical operations', 'backtracking', {'weight': 0.6})
('computational complexity of mathematical operations', 'sr1 formula', {'weight': 0.6})
('computational complexity of mathematical operations', 'nonlinear conjugate gradient method', {'weight': 0.6})
('computational complexity of mathematical operations', 'dynamic problem', {'weight': 0.6})
('computational complexity of mathematical operations', 'trust region', {'weight': 0.6})
('computational complexity of mathematical operations', 'function (mathematics)', {'weight': 0.6})
('computational complexity of mathematical operations', 'minimum spanning tree', {'weight': 0.6})
('computational complexity of mathematical operations', 'context-free grammar', {'weight': 0.6})
('computational complexity of mathematical operations', 'branch and cut', {'weight': 0.6})
('computational complexity of mathematical operations', 'state variable', {'weight': 0.6})
('computational complexity of mathematical operations', 'treewidth', {'weight': 0.6})
('computational complexity of mathematical operations', 'overlapping subproblem', {'weight': 0.6})
('computational complexity of mathematical operations', 'taylor & francis', {'weight': 0.6})
('computational complexity of mathematical operations', 'cutting-plane method', {'weight': 0.6})
('computational complexity of mathematical operations', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('computational complexity of mathematical operations', 'method of undetermined coefficients', {'weight': 0.6})
('computational complexity of mathematical operations', 'combinatorial optimization', {'weight': 0.6})
('computational complexity of mathematical operations', "newton's method in optimization", {'weight': 0.6})
('computational complexity of mathematical operations', 'matrix chain multiplication', {'weight': 0.6})
('computational complexity of mathematical operations', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('computational complexity of mathematical operations', 'dynamic time warping', {'weight': 0.6})
('computational complexity of mathematical operations', 'dynamic programming language', {'weight': 0.6})
('computational complexity of mathematical operations', 'call-by-need', {'weight': 0.6})
('computational complexity of mathematical operations', 'big-o notation', {'weight': 0.6})
('computational complexity of mathematical operations', 'comparison of optimization software', {'weight': 0.6})
('computational complexity of mathematical operations', 'quadratic programming', {'weight': 0.6})
('computational complexity of mathematical operations', 'common lisp', {'weight': 0.6})
('computational complexity of mathematical operations', 'barrier function', {'weight': 0.6})
('computational complexity of mathematical operations', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('computational complexity of mathematical operations', 'gradient descent', {'weight': 0.6})
('computational complexity of mathematical operations', 'patricia selinger', {'weight': 0.6})
('computational complexity of mathematical operations', 'discounting', {'weight': 0.6})
('computational complexity of mathematical operations', 'ronald l. rivest', {'weight': 0.6})
('computational complexity of mathematical operations', 'iterative method', {'weight': 0.6})
('computational complexity of mathematical operations', 'limited-memory bfgs', {'weight': 0.6})
('computational complexity of mathematical operations', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('computational complexity of mathematical operations', 'longest common substring problem', {'weight': 0.6})
('computational complexity of mathematical operations', 'clifford stein', {'weight': 0.6})
('computational complexity of mathematical operations', 'computer chess', {'weight': 0.6})
('computational complexity of mathematical operations', 'linear programming', {'weight': 0.6})
('computational complexity of mathematical operations', 'bitonic tour', {'weight': 0.6})
('computational complexity of mathematical operations', 'linear search problem', {'weight': 0.6})
('computational complexity of mathematical operations', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('computational complexity of mathematical operations', 'systems analysis', {'weight': 0.6})
('computational complexity of mathematical operations', 'capital (economics)', {'weight': 0.6})
('computational complexity of mathematical operations', 'levenshtein distance', {'weight': 0.6})
('computational complexity of mathematical operations', 'matroid', {'weight': 0.6})
('computational complexity of mathematical operations', 'nonlinear programming', {'weight': 0.6})
('computational complexity of mathematical operations', 'computational complexity of mathematical operations', {'weight': 1})
('computational complexity of mathematical operations', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('computational complexity of mathematical operations', 'gradient', {'weight': 0.6})
('computational complexity of mathematical operations', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('computational complexity of mathematical operations', 'convex minimization', {'weight': 0.6})
('computational complexity of mathematical operations', 'bulletin of the american mathematical society', {'weight': 0.6})
('computational complexity of mathematical operations', 'u.s. english', {'weight': 0.6})
('computational complexity of mathematical operations', 'refutation table', {'weight': 0.6})
('computational complexity of mathematical operations', 'heuristic algorithm', {'weight': 0.6})
('computational complexity of mathematical operations', 'successive linear programming', {'weight': 0.6})
('computational complexity of mathematical operations', 'optimal substructure', {'weight': 0.6})
('computational complexity of mathematical operations', 'programming language', {'weight': 0.6})
('computational complexity of mathematical operations', 'mergesort', {'weight': 0.6})
('computational complexity of mathematical operations', "dijkstra's algorithm", {'weight': 0.6})
('computational complexity of mathematical operations', 'subgradient method', {'weight': 0.6})
('computational complexity of mathematical operations', 'call-by-name', {'weight': 0.6})
('computational complexity of mathematical operations', 'longest increasing subsequence problem', {'weight': 0.6})
('computational complexity of mathematical operations', 'edward prescott', {'weight': 0.6})
('computational complexity of mathematical operations', 'exponential time', {'weight': 0.6})
('computational complexity of mathematical operations', 'principle of optimality', {'weight': 0.6})
('computational complexity of mathematical operations', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('computational complexity of mathematical operations', 'mathematical game', {'weight': 0.6})
('computational complexity of mathematical operations', 'nancy stokey', {'weight': 0.6})
('computational complexity of mathematical operations', 'approximation algorithm', {'weight': 0.6})
('computational complexity of mathematical operations', 'discrete-time', {'weight': 0.6})
('computational complexity of mathematical operations', 'cyk algorithm', {'weight': 0.6})
('computational complexity of mathematical operations', 'markov decision process', {'weight': 0.6})
('computational complexity of mathematical operations', "powell's method", {'weight': 0.6})
('computational complexity of mathematical operations', 'wolfe conditions', {'weight': 0.6})
('computational complexity of mathematical operations', 'convexity in economics', {'weight': 0.6})
('computational complexity of mathematical operations', 'transposition table', {'weight': 0.6})
('computational complexity of mathematical operations', 'economics', {'weight': 0.6})
('computational complexity of mathematical operations', 'backward induction', {'weight': 0.6})
('computational complexity of mathematical operations', 'golden section search', {'weight': 0.6})
('computational complexity of mathematical operations', 'edit distance', {'weight': 0.6})
('computational complexity of mathematical operations', 'tree structure', {'weight': 0.6})
('computational complexity of mathematical operations', 'exchange algorithm', {'weight': 0.6})
('computational complexity of mathematical operations', 'dover publications', {'weight': 0.6})
('computational complexity of mathematical operations', 'seam carving', {'weight': 0.6})
('computational complexity of mathematical operations', 'recursive least squares', {'weight': 0.6})
('computational complexity of mathematical operations', 'metaheuristic', {'weight': 0.6})
('computational complexity of mathematical operations', 'quasi-newton method', {'weight': 0.6})
('computational complexity of mathematical operations', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('computational complexity of mathematical operations', 'robert e. lucas', {'weight': 0.6})
('computational complexity of mathematical operations', 'non-convexity (economics)', {'weight': 0.6})
('computational complexity of mathematical operations', 'computational complexity theory', {'weight': 0.5})
('computational complexity of mathematical operations', 'mathematical reviews', {'weight': 0.6})
('computational complexity of mathematical operations', 'puzzle', {'weight': 0.6})
('computational complexity of mathematical operations', 'associative array', {'weight': 0.6})
('computational complexity of mathematical operations', 'shortest path problem', {'weight': 0.6})
('computational complexity of mathematical operations', 'dynamic algorithm', {'weight': 0.6})
('computational complexity of mathematical operations', 'augmented lagrangian method', {'weight': 0.6})
('computational complexity of mathematical operations', 'charles delisi', {'weight': 0.6})
('computational complexity of mathematical operations', 'greedy algorithm', {'weight': 0.6})
('computational complexity of mathematical operations', "karmarkar's algorithm", {'weight': 0.6})
('computational complexity of mathematical operations', 'lattice models', {'weight': 0.6})
('computational complexity of mathematical operations', 'utility', {'weight': 0.6})
('computational complexity of mathematical operations', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('computational complexity of mathematical operations', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('computational complexity of mathematical operations', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('computational complexity of mathematical operations', 'international standard book number', {'weight': 0.6})
('computational complexity of mathematical operations', 'undirected graph', {'weight': 0.6})
('computational complexity of mathematical operations', 'scheme (programming language)', {'weight': 0.6})
('computational complexity of mathematical operations', 'rna structure', {'weight': 0.6})
('computational complexity of mathematical operations', 'hanoi', {'weight': 0.6})
('computational complexity of mathematical operations', 'mathematics-related lists', {'weight': 0.5})
('computational complexity of mathematical operations', 'perl', {'weight': 0.6})
('computational complexity of mathematical operations', 'digital object identifier', {'weight': 0.6})
('computational complexity of mathematical operations', 'sequential quadratic programming', {'weight': 0.6})
('computational complexity of mathematical operations', "dinic's algorithm", {'weight': 0.6})
('computational complexity of mathematical operations', 'pseudo-polynomial time', {'weight': 0.6})
('computational complexity of mathematical operations', 'partition problem', {'weight': 0.6})
('computational complexity of mathematical operations', 'stochastic programming', {'weight': 0.6})
('computational complexity of mathematical operations', 'hill climbing', {'weight': 0.6})
('computational complexity of mathematical operations', 'top-down', {'weight': 0.6})
('computational complexity of mathematical operations', 'de boor algorithm', {'weight': 0.6})
('computational complexity of mathematical operations', 'optimization algorithm', {'weight': 0.6})
('computational complexity of mathematical operations', "kruskal's algorithm", {'weight': 0.6})
('computational complexity of mathematical operations', 'jacques philippe marie binet', {'weight': 0.6})
('computational complexity of mathematical operations', 'tabu search', {'weight': 0.6})
('computational complexity of mathematical operations', 'divide and conquer algorithm', {'weight': 0.6})
('computational complexity of mathematical operations', "johnson's algorithm", {'weight': 0.6})
('computational complexity of mathematical operations', 'evolutionary algorithm', {'weight': 0.6})
('computational complexity of mathematical operations', 'clique-width', {'weight': 0.6})
('computational complexity of mathematical operations', 'dynamic programming', {'weight': 0.6})
('computational complexity of mathematical operations', 'subroutine', {'weight': 0.6})
('computational complexity of mathematical operations', 'simulated annealing', {'weight': 0.6})
('computational complexity of mathematical operations', 'tower of hanoi', {'weight': 0.6})
('computational complexity of mathematical operations', 'branch and bound', {'weight': 0.6})
('computational complexity of mathematical operations', 'engineering', {'weight': 0.6})
('computational complexity of mathematical operations', 'number theoretic algorithms', {'weight': 0.5})
('computational complexity of mathematical operations', 'viterbi algorithm', {'weight': 0.6})
('computational complexity of mathematical operations', "lemke's algorithm", {'weight': 0.6})
('computational complexity of mathematical operations', 'simplex algorithm', {'weight': 0.6})
('computational complexity of mathematical operations', 'local search (optimization)', {'weight': 0.6})
('computational complexity of mathematical operations', 'hessian matrix', {'weight': 0.6})
('computational complexity of mathematical operations', 'ibm system r', {'weight': 0.6})
('computational complexity of mathematical operations', 'penalty method', {'weight': 0.6})
('computational complexity of mathematical operations', 'prolog', {'weight': 0.6})
('computational complexity of mathematical operations', 'time-invariant system', {'weight': 0.6})
('computational complexity of mathematical operations', 'criss-cross algorithm', {'weight': 0.6})
('computational complexity of mathematical operations', 'revised simplex algorithm', {'weight': 0.6})
('computational complexity of mathematical operations', 'the mathematical association of america', {'weight': 0.6})
('computational complexity of mathematical operations', 'line search', {'weight': 0.6})
('computational complexity of mathematical operations', 'j (programming language)', {'weight': 0.6})
('computational complexity of mathematical operations', 'word wrap', {'weight': 0.6})
('computational complexity of mathematical operations', 'computer arithmetic algorithms', {'weight': 0.5})
('computational complexity of mathematical operations', 'subset sum problem', {'weight': 0.6})
('computational complexity of mathematical operations', 'integer programming', {'weight': 0.6})
('computational complexity of mathematical operations', 'nucleosome', {'weight': 0.6})
('computational complexity of mathematical operations', 'earley algorithm', {'weight': 0.6})
('computational complexity of mathematical operations', 'referential transparency (computer science)', {'weight': 0.6})
('computational complexity of mathematical operations', 'recursion', {'weight': 0.6})
('computational complexity of mathematical operations', 'mathematica', {'weight': 0.6})
('computational complexity of mathematical operations', 'quicksort', {'weight': 0.6})
('computational complexity of mathematical operations', 'recursion (computer science)', {'weight': 0.6})
('computational complexity of mathematical operations', 'checkerboard', {'weight': 0.6})
('computational complexity of mathematical operations', 'computer science', {'weight': 0.6})
('computational complexity of mathematical operations', 'brute-force search', {'weight': 0.6})
('computational complexity of mathematical operations', 'mathematics', {'weight': 0.6})
('computational complexity of mathematical operations', 'depth-first search', {'weight': 0.6})
('computational complexity of mathematical operations', 'top-down and bottom-up design', {'weight': 0.6})
('computational complexity of mathematical operations', 'correspondence problem', {'weight': 0.6})
('computational complexity of mathematical operations', 'transcription factor', {'weight': 0.6})
('computational complexity of mathematical operations', 'tree decomposition', {'weight': 0.6})
('computational complexity of mathematical operations', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('computational complexity of mathematical operations', 'structural alignment', {'weight': 0.6})
('computational complexity of mathematical operations', 'local convergence', {'weight': 0.6})
('computational complexity of mathematical operations', 'knapsack problem', {'weight': 0.6})
('computational complexity of mathematical operations', 'graph algorithm', {'weight': 0.6})
('computational complexity of mathematical operations', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('computational complexity of mathematical operations', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('computational complexity of mathematical operations', 'hidden markov model', {'weight': 0.6})
('computational complexity of mathematical operations', 'string (computer science)', {'weight': 0.6})
('computational complexity of mathematical operations', 'bioinformatics', {'weight': 0.6})
('computational complexity of mathematical operations', 'genetics', {'weight': 0.6})
('computational complexity of mathematical operations', 'mathematical optimization', {'weight': 0.6})
('computational complexity of mathematical operations', 'artificial neural networks', {'weight': 0.6})
('computational complexity of mathematical operations', 'introduction to algorithms', {'weight': 0.6})
('computational complexity of mathematical operations', 'thomas h. cormen', {'weight': 0.6})
('computational complexity of mathematical operations', 'music information retrieval', {'weight': 0.6})
('computational complexity of mathematical operations', 'beat (music)', {'weight': 0.6})
('computational complexity of mathematical operations', 'longest common subsequence problem', {'weight': 0.6})
('computational complexity of mathematical operations', 'unsolved problems in computer science', {'weight': 0.5})
('computational complexity of mathematical operations', 'successive parabolic interpolation', {'weight': 0.6})
('computational complexity of mathematical operations', 'fibonacci sequence', {'weight': 0.6})
('computational complexity of mathematical operations', 'maximum subarray problem', {'weight': 0.6})
('computational complexity of mathematical operations', 'convex optimization', {'weight': 0.6})
('computational complexity of mathematical operations', 'memoization', {'weight': 0.6})
('computational complexity of mathematical operations', 'richard bellman', {'weight': 0.6})
('computational complexity of mathematical operations', 'exponential growth', {'weight': 0.6})
('computational complexity of mathematical operations', 'charles e. leiserson', {'weight': 0.6})
('computational complexity of mathematical operations', 'charles erwin wilson', {'weight': 0.6})
('computational complexity of mathematical operations', 'interval scheduling', {'weight': 0.6})
('computational complexity of mathematical operations', 'chart parser', {'weight': 0.6})
('computational complexity of mathematical operations', 'travelling salesman problem', {'weight': 0.6})
('computational complexity of mathematical operations', 'bellman equation', {'weight': 0.6})
('taylor & francis', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('taylor & francis', 'photoshop', {'weight': 0.6})
('taylor & francis', 'sequence alignment', {'weight': 0.6})
('taylor & francis', 'flow network', {'weight': 0.6})
('taylor & francis', 'ellipsoid method', {'weight': 0.6})
('taylor & francis', 'chain matrix multiplication', {'weight': 0.6})
('taylor & francis', 'ieee', {'weight': 0.6})
('taylor & francis', 'backtracking', {'weight': 0.6})
('taylor & francis', 'nonlinear conjugate gradient method', {'weight': 0.6})
('taylor & francis', 'dynamic problem', {'weight': 0.6})
('taylor & francis', 'trust region', {'weight': 0.6})
('taylor & francis', 'function (mathematics)', {'weight': 0.6})
('taylor & francis', 'minimum spanning tree', {'weight': 0.6})
('taylor & francis', 'context-free grammar', {'weight': 0.6})
('taylor & francis', 'branch and cut', {'weight': 0.6})
('taylor & francis', 'state variable', {'weight': 0.6})
('taylor & francis', 'treewidth', {'weight': 0.6})
('taylor & francis', 'overlapping subproblem', {'weight': 0.6})
('taylor & francis', 'taylor & francis', {'weight': 1})
('taylor & francis', 'cutting-plane method', {'weight': 0.6})
('taylor & francis', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('taylor & francis', 'method of undetermined coefficients', {'weight': 0.6})
('taylor & francis', 'combinatorial optimization', {'weight': 0.6})
('taylor & francis', "newton's method in optimization", {'weight': 0.6})
('taylor & francis', 'matrix chain multiplication', {'weight': 0.6})
('taylor & francis', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('taylor & francis', 'dynamic time warping', {'weight': 0.6})
('taylor & francis', 'dynamic programming language', {'weight': 0.6})
('taylor & francis', 'call-by-need', {'weight': 0.6})
('taylor & francis', 'big-o notation', {'weight': 0.6})
('taylor & francis', 'comparison of optimization software', {'weight': 0.6})
('taylor & francis', 'quadratic programming', {'weight': 0.6})
('taylor & francis', 'common lisp', {'weight': 0.6})
('taylor & francis', 'barrier function', {'weight': 0.6})
('taylor & francis', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('taylor & francis', 'gradient descent', {'weight': 0.6})
('taylor & francis', 'patricia selinger', {'weight': 0.6})
('taylor & francis', 'discounting', {'weight': 0.6})
('taylor & francis', 'ronald l. rivest', {'weight': 0.6})
('taylor & francis', 'iterative method', {'weight': 0.6})
('taylor & francis', 'limited-memory bfgs', {'weight': 0.6})
('taylor & francis', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('taylor & francis', 'longest common substring problem', {'weight': 0.6})
('taylor & francis', 'clifford stein', {'weight': 0.6})
('taylor & francis', 'computer chess', {'weight': 0.6})
('taylor & francis', 'linear programming', {'weight': 0.6})
('taylor & francis', 'bitonic tour', {'weight': 0.6})
('taylor & francis', 'linear search problem', {'weight': 0.6})
('taylor & francis', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('taylor & francis', 'systems analysis', {'weight': 0.6})
('taylor & francis', 'capital (economics)', {'weight': 0.6})
('taylor & francis', 'levenshtein distance', {'weight': 0.6})
('taylor & francis', 'nonlinear programming', {'weight': 0.6})
('taylor & francis', 'computational complexity of mathematical operations', {'weight': 0.6})
('taylor & francis', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('taylor & francis', 'gradient', {'weight': 0.6})
('taylor & francis', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('taylor & francis', 'bulletin of the american mathematical society', {'weight': 0.6})
('taylor & francis', 'u.s. english', {'weight': 0.6})
('taylor & francis', 'refutation table', {'weight': 0.6})
('taylor & francis', 'heuristic algorithm', {'weight': 0.6})
('taylor & francis', 'successive linear programming', {'weight': 0.6})
('taylor & francis', 'optimal substructure', {'weight': 0.6})
('taylor & francis', 'programming language', {'weight': 0.6})
('taylor & francis', 'mergesort', {'weight': 0.6})
('taylor & francis', "dijkstra's algorithm", {'weight': 0.6})
('taylor & francis', 'subgradient method', {'weight': 0.6})
('taylor & francis', 'call-by-name', {'weight': 0.6})
('taylor & francis', 'longest increasing subsequence problem', {'weight': 0.6})
('taylor & francis', 'edward prescott', {'weight': 0.6})
('taylor & francis', 'exponential time', {'weight': 0.6})
('taylor & francis', 'principle of optimality', {'weight': 0.6})
('taylor & francis', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('taylor & francis', 'mathematical game', {'weight': 0.6})
('taylor & francis', 'nancy stokey', {'weight': 0.6})
('taylor & francis', 'approximation algorithm', {'weight': 0.6})
('taylor & francis', 'discrete-time', {'weight': 0.6})
('taylor & francis', 'cyk algorithm', {'weight': 0.6})
('taylor & francis', 'markov decision process', {'weight': 0.6})
('taylor & francis', "powell's method", {'weight': 0.6})
('taylor & francis', 'wolfe conditions', {'weight': 0.6})
('taylor & francis', 'convexity in economics', {'weight': 0.6})
('taylor & francis', 'transposition table', {'weight': 0.6})
('taylor & francis', 'economics', {'weight': 0.6})
('taylor & francis', 'backward induction', {'weight': 0.6})
('taylor & francis', 'golden section search', {'weight': 0.6})
('taylor & francis', 'edit distance', {'weight': 0.6})
('taylor & francis', 'tree structure', {'weight': 0.6})
('taylor & francis', 'exchange algorithm', {'weight': 0.6})
('taylor & francis', 'dover publications', {'weight': 0.6})
('taylor & francis', 'seam carving', {'weight': 0.6})
('taylor & francis', 'recursive least squares', {'weight': 0.6})
('taylor & francis', 'metaheuristic', {'weight': 0.6})
('taylor & francis', 'quasi-newton method', {'weight': 0.6})
('taylor & francis', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('taylor & francis', 'robert e. lucas', {'weight': 0.6})
('taylor & francis', 'non-convexity (economics)', {'weight': 0.6})
('taylor & francis', 'sr1 formula', {'weight': 0.6})
('taylor & francis', 'mathematical reviews', {'weight': 0.6})
('taylor & francis', 'puzzle', {'weight': 0.6})
('taylor & francis', 'associative array', {'weight': 0.6})
('taylor & francis', 'shortest path problem', {'weight': 0.6})
('taylor & francis', 'dynamic algorithm', {'weight': 0.6})
('taylor & francis', 'augmented lagrangian method', {'weight': 0.6})
('taylor & francis', 'charles delisi', {'weight': 0.6})
('taylor & francis', 'greedy algorithm', {'weight': 0.6})
('taylor & francis', "karmarkar's algorithm", {'weight': 0.6})
('taylor & francis', 'lattice models', {'weight': 0.6})
('taylor & francis', 'utility', {'weight': 0.6})
('taylor & francis', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('taylor & francis', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('taylor & francis', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('taylor & francis', 'international standard book number', {'weight': 0.6})
('taylor & francis', 'undirected graph', {'weight': 0.6})
('taylor & francis', 'scheme (programming language)', {'weight': 0.6})
('taylor & francis', 'rna structure', {'weight': 0.6})
('taylor & francis', 'hanoi', {'weight': 0.6})
('taylor & francis', 'perl', {'weight': 0.6})
('taylor & francis', 'digital object identifier', {'weight': 0.6})
('taylor & francis', 'sequential quadratic programming', {'weight': 0.6})
('taylor & francis', "dinic's algorithm", {'weight': 0.6})
('taylor & francis', 'pseudo-polynomial time', {'weight': 0.6})
('taylor & francis', 'partition problem', {'weight': 0.6})
('taylor & francis', 'stochastic programming', {'weight': 0.6})
('taylor & francis', 'hill climbing', {'weight': 0.6})
('taylor & francis', 'top-down', {'weight': 0.6})
('taylor & francis', 'de boor algorithm', {'weight': 0.6})
('taylor & francis', 'optimization algorithm', {'weight': 0.6})
('taylor & francis', "kruskal's algorithm", {'weight': 0.6})
('taylor & francis', 'jacques philippe marie binet', {'weight': 0.6})
('taylor & francis', 'tabu search', {'weight': 0.6})
('taylor & francis', 'divide and conquer algorithm', {'weight': 0.6})
('taylor & francis', "johnson's algorithm", {'weight': 0.6})
('taylor & francis', 'evolutionary algorithm', {'weight': 0.6})
('taylor & francis', 'clique-width', {'weight': 0.6})
('taylor & francis', 'dynamic programming', {'weight': 0.6})
('taylor & francis', 'subroutine', {'weight': 0.6})
('taylor & francis', 'simulated annealing', {'weight': 0.6})
('taylor & francis', 'tower of hanoi', {'weight': 0.6})
('taylor & francis', 'branch and bound', {'weight': 0.6})
('taylor & francis', 'engineering', {'weight': 0.6})
('taylor & francis', 'matroid', {'weight': 0.6})
('taylor & francis', 'viterbi algorithm', {'weight': 0.6})
('taylor & francis', "lemke's algorithm", {'weight': 0.6})
('taylor & francis', 'simplex algorithm', {'weight': 0.6})
('taylor & francis', 'local search (optimization)', {'weight': 0.6})
('taylor & francis', 'hessian matrix', {'weight': 0.6})
('taylor & francis', 'ibm system r', {'weight': 0.6})
('taylor & francis', 'penalty method', {'weight': 0.6})
('taylor & francis', 'prolog', {'weight': 0.6})
('taylor & francis', 'time-invariant system', {'weight': 0.6})
('taylor & francis', 'criss-cross algorithm', {'weight': 0.6})
('taylor & francis', 'revised simplex algorithm', {'weight': 0.6})
('taylor & francis', 'the mathematical association of america', {'weight': 0.6})
('taylor & francis', 'line search', {'weight': 0.6})
('taylor & francis', 'j (programming language)', {'weight': 0.6})
('taylor & francis', 'word wrap', {'weight': 0.6})
('taylor & francis', 'subset sum problem', {'weight': 0.6})
('taylor & francis', 'integer programming', {'weight': 0.6})
('taylor & francis', 'nucleosome', {'weight': 0.6})
('taylor & francis', 'earley algorithm', {'weight': 0.6})
('taylor & francis', 'referential transparency (computer science)', {'weight': 0.6})
('taylor & francis', 'recursion', {'weight': 0.6})
('taylor & francis', 'mathematica', {'weight': 0.6})
('taylor & francis', 'quicksort', {'weight': 0.6})
('taylor & francis', 'recursion (computer science)', {'weight': 0.6})
('taylor & francis', 'checkerboard', {'weight': 0.6})
('taylor & francis', 'computer science', {'weight': 0.6})
('taylor & francis', 'brute-force search', {'weight': 0.6})
('taylor & francis', 'mathematics', {'weight': 0.6})
('taylor & francis', 'depth-first search', {'weight': 0.6})
('taylor & francis', 'top-down and bottom-up design', {'weight': 0.6})
('taylor & francis', 'correspondence problem', {'weight': 0.6})
('taylor & francis', 'transcription factor', {'weight': 0.6})
('taylor & francis', 'tree decomposition', {'weight': 0.6})
('taylor & francis', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('taylor & francis', 'structural alignment', {'weight': 0.6})
('taylor & francis', 'local convergence', {'weight': 0.6})
('taylor & francis', 'knapsack problem', {'weight': 0.6})
('taylor & francis', 'graph algorithm', {'weight': 0.6})
('taylor & francis', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('taylor & francis', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('taylor & francis', 'hidden markov model', {'weight': 0.6})
('taylor & francis', 'string (computer science)', {'weight': 0.6})
('taylor & francis', 'bioinformatics', {'weight': 0.6})
('taylor & francis', 'genetics', {'weight': 0.6})
('taylor & francis', 'mathematical optimization', {'weight': 0.6})
('taylor & francis', 'artificial neural networks', {'weight': 0.6})
('taylor & francis', 'introduction to algorithms', {'weight': 0.6})
('taylor & francis', 'thomas h. cormen', {'weight': 0.6})
('taylor & francis', 'music information retrieval', {'weight': 0.6})
('taylor & francis', 'beat (music)', {'weight': 0.6})
('taylor & francis', 'longest common subsequence problem', {'weight': 0.6})
('taylor & francis', 'convex minimization', {'weight': 0.6})
('taylor & francis', 'successive parabolic interpolation', {'weight': 0.6})
('taylor & francis', 'fibonacci sequence', {'weight': 0.6})
('taylor & francis', 'maximum subarray problem', {'weight': 0.6})
('taylor & francis', 'convex optimization', {'weight': 0.6})
('taylor & francis', 'memoization', {'weight': 0.6})
('taylor & francis', 'richard bellman', {'weight': 0.6})
('taylor & francis', 'exponential growth', {'weight': 0.6})
('taylor & francis', 'charles e. leiserson', {'weight': 0.6})
('taylor & francis', 'charles erwin wilson', {'weight': 0.6})
('taylor & francis', 'interval scheduling', {'weight': 0.6})
('taylor & francis', 'chart parser', {'weight': 0.6})
('taylor & francis', 'travelling salesman problem', {'weight': 0.6})
('taylor & francis', 'bellman equation', {'weight': 0.6})
("newton's method in optimization", 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
("newton's method in optimization", 'photoshop', {'weight': 0.6})
("newton's method in optimization", 'sequence alignment', {'weight': 0.6})
("newton's method in optimization", 'flow network', {'weight': 0.6})
("newton's method in optimization", 'ellipsoid method', {'weight': 0.6})
("newton's method in optimization", 'chain matrix multiplication', {'weight': 0.6})
("newton's method in optimization", 'ieee', {'weight': 0.6})
("newton's method in optimization", 'backtracking', {'weight': 0.6})
("newton's method in optimization", 'nonlinear conjugate gradient method', {'weight': 0.6})
("newton's method in optimization", 'dynamic problem', {'weight': 0.6})
("newton's method in optimization", 'trust region', {'weight': 0.7})
("newton's method in optimization", 'function (mathematics)', {'weight': 0.6})
("newton's method in optimization", 'minimum spanning tree', {'weight': 0.6})
("newton's method in optimization", 'context-free grammar', {'weight': 0.6})
("newton's method in optimization", 'branch and cut', {'weight': 0.6})
("newton's method in optimization", 'state variable', {'weight': 0.6})
("newton's method in optimization", 'treewidth', {'weight': 0.6})
("newton's method in optimization", 'optimization algorithms and methods', {'weight': 0.5})
("newton's method in optimization", 'overlapping subproblem', {'weight': 0.6})
("newton's method in optimization", 'taylor & francis', {'weight': 0.6})
("newton's method in optimization", 'cutting-plane method', {'weight': 0.6})
("newton's method in optimization", 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
("newton's method in optimization", 'method of undetermined coefficients', {'weight': 0.6})
("newton's method in optimization", 'combinatorial optimization', {'weight': 0.6})
("newton's method in optimization", "newton's method in optimization", {'weight': 1})
("newton's method in optimization", 'matrix chain multiplication', {'weight': 0.6})
("newton's method in optimization", 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.7})
("newton's method in optimization", 'dynamic time warping', {'weight': 0.6})
("newton's method in optimization", 'dynamic programming language', {'weight': 0.6})
("newton's method in optimization", 'call-by-need', {'weight': 0.6})
("newton's method in optimization", 'big-o notation', {'weight': 0.6})
("newton's method in optimization", 'comparison of optimization software', {'weight': 0.6})
("newton's method in optimization", 'quadratic programming', {'weight': 0.6})
("newton's method in optimization", 'common lisp', {'weight': 0.6})
("newton's method in optimization", 'barrier function', {'weight': 0.6})
("newton's method in optimization", 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
("newton's method in optimization", 'gradient descent', {'weight': 0.7})
("newton's method in optimization", 'patricia selinger', {'weight': 0.6})
("newton's method in optimization", 'discounting', {'weight': 0.6})
("newton's method in optimization", 'ronald l. rivest', {'weight': 0.6})
("newton's method in optimization", 'iterative method', {'weight': 0.6})
("newton's method in optimization", 'limited-memory bfgs', {'weight': 0.6})
("newton's method in optimization", 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
("newton's method in optimization", 'longest common substring problem', {'weight': 0.6})
("newton's method in optimization", 'clifford stein', {'weight': 0.6})
("newton's method in optimization", 'computer chess', {'weight': 0.6})
("newton's method in optimization", 'linear programming', {'weight': 0.6})
("newton's method in optimization", 'bitonic tour', {'weight': 0.6})
("newton's method in optimization", 'linear search problem', {'weight': 0.6})
("newton's method in optimization", 'nelder\xe2\x80\x93mead method', {'weight': 0.7})
("newton's method in optimization", 'systems analysis', {'weight': 0.6})
("newton's method in optimization", 'capital (economics)', {'weight': 0.6})
("newton's method in optimization", 'levenshtein distance', {'weight': 0.6})
("newton's method in optimization", 'nonlinear programming', {'weight': 0.6})
("newton's method in optimization", 'computational complexity of mathematical operations', {'weight': 0.6})
("newton's method in optimization", 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
("newton's method in optimization", 'gradient', {'weight': 0.6})
("newton's method in optimization", 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
("newton's method in optimization", 'bulletin of the american mathematical society', {'weight': 0.6})
("newton's method in optimization", 'u.s. english', {'weight': 0.6})
("newton's method in optimization", 'refutation table', {'weight': 0.6})
("newton's method in optimization", 'heuristic algorithm', {'weight': 0.6})
("newton's method in optimization", 'successive linear programming', {'weight': 0.6})
("newton's method in optimization", 'optimal substructure', {'weight': 0.6})
("newton's method in optimization", 'programming language', {'weight': 0.6})
("newton's method in optimization", 'mergesort', {'weight': 0.6})
("newton's method in optimization", "dijkstra's algorithm", {'weight': 0.6})
("newton's method in optimization", 'subgradient method', {'weight': 0.6})
("newton's method in optimization", 'call-by-name', {'weight': 0.6})
("newton's method in optimization", 'longest increasing subsequence problem', {'weight': 0.6})
("newton's method in optimization", 'edward prescott', {'weight': 0.6})
("newton's method in optimization", 'exponential time', {'weight': 0.6})
("newton's method in optimization", 'principle of optimality', {'weight': 0.6})
("newton's method in optimization", "bor\xe5\xafvka's algorithm", {'weight': 0.6})
("newton's method in optimization", 'mathematical game', {'weight': 0.6})
("newton's method in optimization", 'nancy stokey', {'weight': 0.6})
("newton's method in optimization", 'approximation algorithm', {'weight': 0.6})
("newton's method in optimization", 'discrete-time', {'weight': 0.6})
("newton's method in optimization", 'cyk algorithm', {'weight': 0.6})
("newton's method in optimization", 'markov decision process', {'weight': 0.6})
("newton's method in optimization", "powell's method", {'weight': 0.6})
("newton's method in optimization", 'wolfe conditions', {'weight': 0.6})
("newton's method in optimization", 'convexity in economics', {'weight': 0.6})
("newton's method in optimization", 'transposition table', {'weight': 0.6})
("newton's method in optimization", 'economics', {'weight': 0.6})
("newton's method in optimization", 'backward induction', {'weight': 0.6})
("newton's method in optimization", 'golden section search', {'weight': 0.6})
("newton's method in optimization", 'edit distance', {'weight': 0.6})
("newton's method in optimization", 'tree structure', {'weight': 0.6})
("newton's method in optimization", 'exchange algorithm', {'weight': 0.6})
("newton's method in optimization", 'dover publications', {'weight': 0.6})
("newton's method in optimization", 'seam carving', {'weight': 0.6})
("newton's method in optimization", 'recursive least squares', {'weight': 0.6})
("newton's method in optimization", 'metaheuristic', {'weight': 0.6})
("newton's method in optimization", 'quasi-newton method', {'weight': 0.7})
("newton's method in optimization", 'on-line encyclopedia of integer sequences', {'weight': 0.6})
("newton's method in optimization", 'robert e. lucas', {'weight': 0.6})
("newton's method in optimization", 'non-convexity (economics)', {'weight': 0.6})
("newton's method in optimization", 'sr1 formula', {'weight': 0.6})
("newton's method in optimization", 'mathematical reviews', {'weight': 0.6})
("newton's method in optimization", 'puzzle', {'weight': 0.6})
("newton's method in optimization", 'associative array', {'weight': 0.6})
("newton's method in optimization", 'shortest path problem', {'weight': 0.6})
("newton's method in optimization", 'dynamic algorithm', {'weight': 0.6})
("newton's method in optimization", 'augmented lagrangian method', {'weight': 0.6})
("newton's method in optimization", 'charles delisi', {'weight': 0.6})
("newton's method in optimization", 'greedy algorithm', {'weight': 0.6})
("newton's method in optimization", "karmarkar's algorithm", {'weight': 0.6})
("newton's method in optimization", 'lattice models', {'weight': 0.6})
("newton's method in optimization", 'utility', {'weight': 0.6})
("newton's method in optimization", 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
("newton's method in optimization", 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
("newton's method in optimization", 'push-relabel maximum flow algorithm', {'weight': 0.6})
("newton's method in optimization", 'international standard book number', {'weight': 0.6})
("newton's method in optimization", 'undirected graph', {'weight': 0.6})
("newton's method in optimization", 'scheme (programming language)', {'weight': 0.6})
("newton's method in optimization", 'rna structure', {'weight': 0.6})
("newton's method in optimization", 'hanoi', {'weight': 0.6})
("newton's method in optimization", 'perl', {'weight': 0.6})
("newton's method in optimization", 'digital object identifier', {'weight': 0.6})
("newton's method in optimization", 'sequential quadratic programming', {'weight': 0.6})
("newton's method in optimization", "dinic's algorithm", {'weight': 0.6})
("newton's method in optimization", 'pseudo-polynomial time', {'weight': 0.6})
("newton's method in optimization", 'partition problem', {'weight': 0.6})
("newton's method in optimization", 'stochastic programming', {'weight': 0.6})
("newton's method in optimization", 'hill climbing', {'weight': 0.6})
("newton's method in optimization", 'top-down', {'weight': 0.6})
("newton's method in optimization", 'de boor algorithm', {'weight': 0.6})
("newton's method in optimization", 'optimization algorithm', {'weight': 0.6})
("newton's method in optimization", "kruskal's algorithm", {'weight': 0.6})
("newton's method in optimization", 'jacques philippe marie binet', {'weight': 0.6})
("newton's method in optimization", 'tabu search', {'weight': 0.6})
("newton's method in optimization", 'divide and conquer algorithm', {'weight': 0.6})
("newton's method in optimization", "johnson's algorithm", {'weight': 0.6})
("newton's method in optimization", 'evolutionary algorithm', {'weight': 0.6})
("newton's method in optimization", 'clique-width', {'weight': 0.6})
("newton's method in optimization", 'dynamic programming', {'weight': 0.6})
("newton's method in optimization", 'subroutine', {'weight': 0.6})
("newton's method in optimization", 'simulated annealing', {'weight': 0.6})
("newton's method in optimization", 'tower of hanoi', {'weight': 0.6})
("newton's method in optimization", 'branch and bound', {'weight': 0.6})
("newton's method in optimization", 'engineering', {'weight': 0.6})
("newton's method in optimization", 'matroid', {'weight': 0.6})
("newton's method in optimization", 'viterbi algorithm', {'weight': 0.6})
("newton's method in optimization", "lemke's algorithm", {'weight': 0.6})
("newton's method in optimization", 'optimization', {'weight': 0.7})
("newton's method in optimization", 'simplex algorithm', {'weight': 0.6})
("newton's method in optimization", 'local search (optimization)', {'weight': 0.6})
("newton's method in optimization", 'hessian matrix', {'weight': 0.6})
("newton's method in optimization", 'ibm system r', {'weight': 0.6})
("newton's method in optimization", 'penalty method', {'weight': 0.6})
("newton's method in optimization", 'prolog', {'weight': 0.6})
("newton's method in optimization", 'time-invariant system', {'weight': 0.6})
("newton's method in optimization", 'criss-cross algorithm', {'weight': 0.6})
("newton's method in optimization", 'revised simplex algorithm', {'weight': 0.6})
("newton's method in optimization", 'the mathematical association of america', {'weight': 0.6})
("newton's method in optimization", 'line search', {'weight': 0.6})
("newton's method in optimization", 'j (programming language)', {'weight': 0.6})
("newton's method in optimization", 'word wrap', {'weight': 0.6})
("newton's method in optimization", 'subset sum problem', {'weight': 0.6})
("newton's method in optimization", 'integer programming', {'weight': 0.6})
("newton's method in optimization", 'nucleosome', {'weight': 0.6})
("newton's method in optimization", 'earley algorithm', {'weight': 0.6})
("newton's method in optimization", 'referential transparency (computer science)', {'weight': 0.6})
("newton's method in optimization", 'recursion', {'weight': 0.6})
("newton's method in optimization", 'mathematica', {'weight': 0.6})
("newton's method in optimization", 'quicksort', {'weight': 0.6})
("newton's method in optimization", 'recursion (computer science)', {'weight': 0.6})
("newton's method in optimization", 'checkerboard', {'weight': 0.6})
("newton's method in optimization", 'computer science', {'weight': 0.6})
("newton's method in optimization", 'brute-force search', {'weight': 0.6})
("newton's method in optimization", 'mathematics', {'weight': 0.6})
("newton's method in optimization", 'depth-first search', {'weight': 0.6})
("newton's method in optimization", 'top-down and bottom-up design', {'weight': 0.6})
("newton's method in optimization", 'correspondence problem', {'weight': 0.6})
("newton's method in optimization", 'transcription factor', {'weight': 0.6})
("newton's method in optimization", 'tree decomposition', {'weight': 0.6})
("newton's method in optimization", 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
("newton's method in optimization", 'structural alignment', {'weight': 0.6})
("newton's method in optimization", 'local convergence', {'weight': 0.6})
("newton's method in optimization", 'knapsack problem', {'weight': 0.6})
("newton's method in optimization", 'graph algorithm', {'weight': 0.6})
("newton's method in optimization", 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.7})
("newton's method in optimization", 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
("newton's method in optimization", 'hidden markov model', {'weight': 0.6})
("newton's method in optimization", 'string (computer science)', {'weight': 0.6})
("newton's method in optimization", 'bioinformatics', {'weight': 0.6})
("newton's method in optimization", 'genetics', {'weight': 0.6})
("newton's method in optimization", 'mathematical optimization', {'weight': 0.6})
("newton's method in optimization", 'artificial neural networks', {'weight': 0.6})
("newton's method in optimization", 'introduction to algorithms', {'weight': 0.6})
("newton's method in optimization", 'thomas h. cormen', {'weight': 0.6})
("newton's method in optimization", 'music information retrieval', {'weight': 0.6})
("newton's method in optimization", 'beat (music)', {'weight': 0.6})
("newton's method in optimization", 'longest common subsequence problem', {'weight': 0.6})
("newton's method in optimization", 'convex minimization', {'weight': 0.6})
("newton's method in optimization", 'successive parabolic interpolation', {'weight': 0.6})
("newton's method in optimization", 'fibonacci sequence', {'weight': 0.6})
("newton's method in optimization", 'maximum subarray problem', {'weight': 0.6})
("newton's method in optimization", 'convex optimization', {'weight': 0.6})
("newton's method in optimization", 'memoization', {'weight': 0.6})
("newton's method in optimization", 'richard bellman', {'weight': 0.6})
("newton's method in optimization", 'exponential growth', {'weight': 0.6})
("newton's method in optimization", 'charles e. leiserson', {'weight': 0.6})
("newton's method in optimization", 'charles erwin wilson', {'weight': 0.6})
("newton's method in optimization", 'interval scheduling', {'weight': 0.6})
("newton's method in optimization", 'chart parser', {'weight': 0.6})
("newton's method in optimization", 'travelling salesman problem', {'weight': 0.6})
("newton's method in optimization", 'bellman equation', {'weight': 0.6})
('successive linear programming', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('successive linear programming', 'photoshop', {'weight': 0.6})
('successive linear programming', 'sequence alignment', {'weight': 0.6})
('successive linear programming', 'flow network', {'weight': 0.6})
('successive linear programming', 'ellipsoid method', {'weight': 0.6})
('successive linear programming', 'chain matrix multiplication', {'weight': 0.6})
('successive linear programming', 'ieee', {'weight': 0.6})
('successive linear programming', 'backtracking', {'weight': 0.6})
('successive linear programming', 'nonlinear conjugate gradient method', {'weight': 0.6})
('successive linear programming', 'dynamic problem', {'weight': 0.6})
('successive linear programming', 'trust region', {'weight': 0.6})
('successive linear programming', 'function (mathematics)', {'weight': 0.6})
('successive linear programming', 'minimum spanning tree', {'weight': 0.6})
('successive linear programming', 'context-free grammar', {'weight': 0.6})
('successive linear programming', 'branch and cut', {'weight': 0.6})
('successive linear programming', 'state variable', {'weight': 0.6})
('successive linear programming', 'algorithms and data structures stubs', {'weight': 0.5})
('successive linear programming', 'treewidth', {'weight': 0.6})
('successive linear programming', 'overlapping subproblem', {'weight': 0.6})
('successive linear programming', 'taylor & francis', {'weight': 0.6})
('successive linear programming', 'brute-force search', {'weight': 0.6})
('successive linear programming', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('successive linear programming', 'method of undetermined coefficients', {'weight': 0.6})
('successive linear programming', 'combinatorial optimization', {'weight': 0.6})
('successive linear programming', "newton's method in optimization", {'weight': 0.6})
('successive linear programming', 'matrix chain multiplication', {'weight': 0.6})
('successive linear programming', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('successive linear programming', 'dynamic time warping', {'weight': 0.6})
('successive linear programming', 'dynamic programming language', {'weight': 0.6})
('successive linear programming', 'call-by-need', {'weight': 0.6})
('successive linear programming', 'big-o notation', {'weight': 0.6})
('successive linear programming', 'comparison of optimization software', {'weight': 0.6})
('successive linear programming', 'quadratic programming', {'weight': 0.6})
('successive linear programming', 'common lisp', {'weight': 0.6})
('successive linear programming', 'barrier function', {'weight': 0.6})
('successive linear programming', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('successive linear programming', 'gradient descent', {'weight': 0.6})
('successive linear programming', 'patricia selinger', {'weight': 0.6})
('successive linear programming', 'discounting', {'weight': 0.6})
('successive linear programming', 'ronald l. rivest', {'weight': 0.6})
('successive linear programming', 'iterative method', {'weight': 0.6})
('successive linear programming', 'limited-memory bfgs', {'weight': 0.6})
('successive linear programming', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('successive linear programming', 'longest common substring problem', {'weight': 0.6})
('successive linear programming', 'clifford stein', {'weight': 0.6})
('successive linear programming', 'computer chess', {'weight': 0.6})
('successive linear programming', 'linear programming', {'weight': 0.6})
('successive linear programming', 'bitonic tour', {'weight': 0.6})
('successive linear programming', 'linear search problem', {'weight': 0.6})
('successive linear programming', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('successive linear programming', 'systems analysis', {'weight': 0.6})
('successive linear programming', 'cutting-plane method', {'weight': 0.6})
('successive linear programming', 'capital (economics)', {'weight': 0.6})
('successive linear programming', 'levenshtein distance', {'weight': 0.6})
('successive linear programming', 'nonlinear programming', {'weight': 0.6})
('successive linear programming', 'computational complexity of mathematical operations', {'weight': 0.6})
('successive linear programming', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('successive linear programming', 'gradient', {'weight': 0.6})
('successive linear programming', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('successive linear programming', 'bulletin of the american mathematical society', {'weight': 0.6})
('successive linear programming', 'u.s. english', {'weight': 0.6})
('successive linear programming', 'refutation table', {'weight': 0.6})
('successive linear programming', 'heuristic algorithm', {'weight': 0.6})
('successive linear programming', 'successive linear programming', {'weight': 1})
('successive linear programming', 'optimal substructure', {'weight': 0.6})
('successive linear programming', 'programming language', {'weight': 0.6})
('successive linear programming', 'mergesort', {'weight': 0.6})
('successive linear programming', "dijkstra's algorithm", {'weight': 0.6})
('successive linear programming', 'subgradient method', {'weight': 0.6})
('successive linear programming', 'call-by-name', {'weight': 0.6})
('successive linear programming', 'longest increasing subsequence problem', {'weight': 0.6})
('successive linear programming', 'edward prescott', {'weight': 0.6})
('successive linear programming', 'exponential time', {'weight': 0.6})
('successive linear programming', 'principle of optimality', {'weight': 0.6})
('successive linear programming', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('successive linear programming', 'mathematical game', {'weight': 0.6})
('successive linear programming', 'nancy stokey', {'weight': 0.6})
('successive linear programming', 'approximation algorithm', {'weight': 0.6})
('successive linear programming', 'discrete-time', {'weight': 0.6})
('successive linear programming', 'cyk algorithm', {'weight': 0.6})
('successive linear programming', 'markov decision process', {'weight': 0.6})
('successive linear programming', "powell's method", {'weight': 0.6})
('successive linear programming', 'wolfe conditions', {'weight': 0.6})
('successive linear programming', 'convexity in economics', {'weight': 0.6})
('successive linear programming', 'transposition table', {'weight': 0.6})
('successive linear programming', 'economics', {'weight': 0.6})
('successive linear programming', 'backward induction', {'weight': 0.6})
('successive linear programming', 'golden section search', {'weight': 0.6})
('successive linear programming', 'edit distance', {'weight': 0.6})
('successive linear programming', 'tree structure', {'weight': 0.6})
('successive linear programming', 'exchange algorithm', {'weight': 0.6})
('successive linear programming', 'dover publications', {'weight': 0.6})
('successive linear programming', 'seam carving', {'weight': 0.6})
('successive linear programming', 'recursive least squares', {'weight': 0.6})
('successive linear programming', 'metaheuristic', {'weight': 0.6})
('successive linear programming', 'quasi-newton method', {'weight': 0.6})
('successive linear programming', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('successive linear programming', 'robert e. lucas', {'weight': 0.6})
('successive linear programming', 'non-convexity (economics)', {'weight': 0.6})
('successive linear programming', 'sr1 formula', {'weight': 0.6})
('successive linear programming', 'mathematical reviews', {'weight': 0.6})
('successive linear programming', 'puzzle', {'weight': 0.6})
('successive linear programming', 'associative array', {'weight': 0.6})
('successive linear programming', 'shortest path problem', {'weight': 0.6})
('successive linear programming', 'dynamic algorithm', {'weight': 0.6})
('successive linear programming', 'augmented lagrangian method', {'weight': 0.6})
('successive linear programming', 'charles delisi', {'weight': 0.6})
('successive linear programming', 'greedy algorithm', {'weight': 0.6})
('successive linear programming', "karmarkar's algorithm", {'weight': 0.6})
('successive linear programming', 'lattice models', {'weight': 0.6})
('successive linear programming', 'utility', {'weight': 0.6})
('successive linear programming', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('successive linear programming', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('successive linear programming', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('successive linear programming', 'international standard book number', {'weight': 0.6})
('successive linear programming', 'undirected graph', {'weight': 0.6})
('successive linear programming', 'scheme (programming language)', {'weight': 0.6})
('successive linear programming', 'rna structure', {'weight': 0.6})
('successive linear programming', 'hanoi', {'weight': 0.6})
('successive linear programming', 'perl', {'weight': 0.6})
('successive linear programming', 'digital object identifier', {'weight': 0.6})
('successive linear programming', 'sequential quadratic programming', {'weight': 0.6})
('successive linear programming', "dinic's algorithm", {'weight': 0.6})
('successive linear programming', 'pseudo-polynomial time', {'weight': 0.6})
('successive linear programming', 'partition problem', {'weight': 0.6})
('successive linear programming', 'stochastic programming', {'weight': 0.6})
('successive linear programming', 'hill climbing', {'weight': 0.6})
('successive linear programming', 'top-down', {'weight': 0.6})
('successive linear programming', 'de boor algorithm', {'weight': 0.6})
('successive linear programming', 'optimization algorithm', {'weight': 0.6})
('successive linear programming', "kruskal's algorithm", {'weight': 0.6})
('successive linear programming', 'jacques philippe marie binet', {'weight': 0.6})
('successive linear programming', 'tabu search', {'weight': 0.6})
('successive linear programming', 'divide and conquer algorithm', {'weight': 0.6})
('successive linear programming', "johnson's algorithm", {'weight': 0.6})
('successive linear programming', 'evolutionary algorithm', {'weight': 0.6})
('successive linear programming', 'clique-width', {'weight': 0.6})
('successive linear programming', 'dynamic programming', {'weight': 0.6})
('successive linear programming', 'subroutine', {'weight': 0.6})
('successive linear programming', 'simulated annealing', {'weight': 0.6})
('successive linear programming', 'tower of hanoi', {'weight': 0.6})
('successive linear programming', 'branch and bound', {'weight': 0.6})
('successive linear programming', 'engineering', {'weight': 0.6})
('successive linear programming', 'matroid', {'weight': 0.6})
('successive linear programming', 'viterbi algorithm', {'weight': 0.6})
('successive linear programming', "lemke's algorithm", {'weight': 0.6})
('successive linear programming', 'simplex algorithm', {'weight': 0.6})
('successive linear programming', 'local search (optimization)', {'weight': 0.6})
('successive linear programming', 'hessian matrix', {'weight': 0.6})
('successive linear programming', 'ibm system r', {'weight': 0.6})
('successive linear programming', 'penalty method', {'weight': 0.6})
('successive linear programming', 'prolog', {'weight': 0.6})
('successive linear programming', 'time-invariant system', {'weight': 0.6})
('successive linear programming', 'criss-cross algorithm', {'weight': 0.6})
('successive linear programming', 'revised simplex algorithm', {'weight': 0.6})
('successive linear programming', 'the mathematical association of america', {'weight': 0.6})
('successive linear programming', 'line search', {'weight': 0.6})
('successive linear programming', 'j (programming language)', {'weight': 0.6})
('successive linear programming', 'word wrap', {'weight': 0.6})
('successive linear programming', 'subset sum problem', {'weight': 0.6})
('successive linear programming', 'integer programming', {'weight': 0.6})
('successive linear programming', 'nucleosome', {'weight': 0.6})
('successive linear programming', 'earley algorithm', {'weight': 0.6})
('successive linear programming', 'referential transparency (computer science)', {'weight': 0.6})
('successive linear programming', 'recursion', {'weight': 0.6})
('successive linear programming', 'mathematica', {'weight': 0.6})
('successive linear programming', 'quicksort', {'weight': 0.6})
('successive linear programming', 'recursion (computer science)', {'weight': 0.6})
('successive linear programming', 'checkerboard', {'weight': 0.6})
('successive linear programming', 'computer science', {'weight': 0.6})
('successive linear programming', 'computer science stubs', {'weight': 0.5})
('successive linear programming', 'mathematics', {'weight': 0.6})
('successive linear programming', 'depth-first search', {'weight': 0.6})
('successive linear programming', 'top-down and bottom-up design', {'weight': 0.6})
('successive linear programming', 'correspondence problem', {'weight': 0.6})
('successive linear programming', 'transcription factor', {'weight': 0.6})
('successive linear programming', 'tree decomposition', {'weight': 0.6})
('successive linear programming', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('successive linear programming', 'structural alignment', {'weight': 0.6})
('successive linear programming', 'local convergence', {'weight': 0.6})
('successive linear programming', 'knapsack problem', {'weight': 0.6})
('successive linear programming', 'graph algorithm', {'weight': 0.6})
('successive linear programming', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('successive linear programming', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('successive linear programming', 'hidden markov model', {'weight': 0.6})
('successive linear programming', 'string (computer science)', {'weight': 0.6})
('successive linear programming', 'bioinformatics', {'weight': 0.6})
('successive linear programming', 'genetics', {'weight': 0.6})
('successive linear programming', 'mathematical optimization', {'weight': 0.6})
('successive linear programming', 'artificial neural networks', {'weight': 0.6})
('successive linear programming', 'introduction to algorithms', {'weight': 0.6})
('successive linear programming', 'thomas h. cormen', {'weight': 0.6})
('successive linear programming', 'music information retrieval', {'weight': 0.6})
('successive linear programming', 'beat (music)', {'weight': 0.6})
('successive linear programming', 'longest common subsequence problem', {'weight': 0.6})
('successive linear programming', 'convex minimization', {'weight': 0.6})
('successive linear programming', 'successive parabolic interpolation', {'weight': 0.6})
('successive linear programming', 'fibonacci sequence', {'weight': 0.6})
('successive linear programming', 'maximum subarray problem', {'weight': 0.6})
('successive linear programming', 'convex optimization', {'weight': 0.6})
('successive linear programming', 'memoization', {'weight': 0.6})
('successive linear programming', 'richard bellman', {'weight': 0.6})
('successive linear programming', 'exponential growth', {'weight': 0.6})
('successive linear programming', 'charles e. leiserson', {'weight': 0.6})
('successive linear programming', 'charles erwin wilson', {'weight': 0.6})
('successive linear programming', 'interval scheduling', {'weight': 0.6})
('successive linear programming', 'chart parser', {'weight': 0.6})
('successive linear programming', 'travelling salesman problem', {'weight': 0.6})
('successive linear programming', 'bellman equation', {'weight': 0.6})
('mergesort', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('mergesort', 'photoshop', {'weight': 0.6})
('mergesort', 'sequence alignment', {'weight': 0.6})
('mergesort', 'flow network', {'weight': 0.6})
('mergesort', 'ellipsoid method', {'weight': 0.6})
('mergesort', 'chain matrix multiplication', {'weight': 0.6})
('mergesort', 'ieee', {'weight': 0.6})
('mergesort', 'backtracking', {'weight': 0.6})
('mergesort', 'nonlinear conjugate gradient method', {'weight': 0.6})
('mergesort', 'dynamic problem', {'weight': 0.6})
('mergesort', 'trust region', {'weight': 0.6})
('mergesort', 'function (mathematics)', {'weight': 0.6})
('mergesort', 'minimum spanning tree', {'weight': 0.6})
('mergesort', 'context-free grammar', {'weight': 0.6})
('mergesort', 'branch and cut', {'weight': 0.6})
('mergesort', 'state variable', {'weight': 0.6})
('mergesort', 'treewidth', {'weight': 0.6})
('mergesort', 'overlapping subproblem', {'weight': 0.6})
('mergesort', 'taylor & francis', {'weight': 0.6})
('mergesort', 'cutting-plane method', {'weight': 0.6})
('mergesort', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('mergesort', 'method of undetermined coefficients', {'weight': 0.6})
('mergesort', 'combinatorial optimization', {'weight': 0.6})
('mergesort', "newton's method in optimization", {'weight': 0.6})
('mergesort', 'matrix chain multiplication', {'weight': 0.6})
('mergesort', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('mergesort', 'dynamic time warping', {'weight': 0.6})
('mergesort', 'dynamic programming language', {'weight': 0.6})
('mergesort', 'call-by-need', {'weight': 0.6})
('mergesort', 'big-o notation', {'weight': 0.6})
('mergesort', 'comparison of optimization software', {'weight': 0.6})
('mergesort', 'quadratic programming', {'weight': 0.6})
('mergesort', 'common lisp', {'weight': 0.6})
('mergesort', 'barrier function', {'weight': 0.6})
('mergesort', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('mergesort', 'gradient descent', {'weight': 0.6})
('mergesort', 'patricia selinger', {'weight': 0.6})
('mergesort', 'discounting', {'weight': 0.6})
('mergesort', 'ronald l. rivest', {'weight': 0.6})
('mergesort', 'iterative method', {'weight': 0.6})
('mergesort', 'limited-memory bfgs', {'weight': 0.6})
('mergesort', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('mergesort', 'longest common substring problem', {'weight': 0.6})
('mergesort', 'clifford stein', {'weight': 0.6})
('mergesort', 'computer chess', {'weight': 0.6})
('mergesort', 'linear programming', {'weight': 0.6})
('mergesort', 'bitonic tour', {'weight': 0.6})
('mergesort', 'linear search problem', {'weight': 0.6})
('mergesort', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('mergesort', 'systems analysis', {'weight': 0.6})
('mergesort', 'capital (economics)', {'weight': 0.6})
('mergesort', 'levenshtein distance', {'weight': 0.6})
('mergesort', 'nonlinear programming', {'weight': 0.6})
('mergesort', 'computational complexity of mathematical operations', {'weight': 0.6})
('mergesort', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('mergesort', 'gradient', {'weight': 0.6})
('mergesort', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('mergesort', 'bulletin of the american mathematical society', {'weight': 0.6})
('mergesort', 'u.s. english', {'weight': 0.6})
('mergesort', 'refutation table', {'weight': 0.6})
('mergesort', 'heuristic algorithm', {'weight': 0.6})
('mergesort', 'successive linear programming', {'weight': 0.6})
('mergesort', 'optimal substructure', {'weight': 0.6})
('mergesort', 'programming language', {'weight': 0.6})
('mergesort', 'mergesort', {'weight': 1})
('mergesort', "dijkstra's algorithm", {'weight': 0.6})
('mergesort', 'subgradient method', {'weight': 0.6})
('mergesort', 'call-by-name', {'weight': 0.6})
('mergesort', 'longest increasing subsequence problem', {'weight': 0.6})
('mergesort', 'edward prescott', {'weight': 0.6})
('mergesort', 'exponential time', {'weight': 0.6})
('mergesort', 'principle of optimality', {'weight': 0.6})
('mergesort', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('mergesort', 'mathematical game', {'weight': 0.6})
('mergesort', 'nancy stokey', {'weight': 0.6})
('mergesort', 'approximation algorithm', {'weight': 0.6})
('mergesort', 'discrete-time', {'weight': 0.6})
('mergesort', 'cyk algorithm', {'weight': 0.6})
('mergesort', 'markov decision process', {'weight': 0.6})
('mergesort', "powell's method", {'weight': 0.6})
('mergesort', 'wolfe conditions', {'weight': 0.6})
('mergesort', 'convexity in economics', {'weight': 0.6})
('mergesort', 'transposition table', {'weight': 0.6})
('mergesort', 'economics', {'weight': 0.6})
('mergesort', 'backward induction', {'weight': 0.6})
('mergesort', 'golden section search', {'weight': 0.6})
('mergesort', 'edit distance', {'weight': 0.6})
('mergesort', 'tree structure', {'weight': 0.6})
('mergesort', 'exchange algorithm', {'weight': 0.6})
('mergesort', 'dover publications', {'weight': 0.6})
('mergesort', 'seam carving', {'weight': 0.6})
('mergesort', 'recursive least squares', {'weight': 0.6})
('mergesort', 'metaheuristic', {'weight': 0.6})
('mergesort', 'quasi-newton method', {'weight': 0.6})
('mergesort', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('mergesort', 'robert e. lucas', {'weight': 0.6})
('mergesort', 'non-convexity (economics)', {'weight': 0.6})
('mergesort', 'sr1 formula', {'weight': 0.6})
('mergesort', 'mathematical reviews', {'weight': 0.6})
('mergesort', 'puzzle', {'weight': 0.6})
('mergesort', 'associative array', {'weight': 0.6})
('mergesort', 'shortest path problem', {'weight': 0.6})
('mergesort', 'dynamic algorithm', {'weight': 0.6})
('mergesort', 'augmented lagrangian method', {'weight': 0.6})
('mergesort', 'charles delisi', {'weight': 0.6})
('mergesort', 'greedy algorithm', {'weight': 0.6})
('mergesort', "karmarkar's algorithm", {'weight': 0.6})
('mergesort', 'lattice models', {'weight': 0.6})
('mergesort', 'utility', {'weight': 0.6})
('mergesort', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('mergesort', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('mergesort', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('mergesort', 'international standard book number', {'weight': 0.6})
('mergesort', 'undirected graph', {'weight': 0.6})
('mergesort', 'scheme (programming language)', {'weight': 0.6})
('mergesort', 'rna structure', {'weight': 0.6})
('mergesort', 'hanoi', {'weight': 0.6})
('mergesort', 'perl', {'weight': 0.6})
('mergesort', 'digital object identifier', {'weight': 0.6})
('mergesort', 'sequential quadratic programming', {'weight': 0.6})
('mergesort', "dinic's algorithm", {'weight': 0.6})
('mergesort', 'pseudo-polynomial time', {'weight': 0.6})
('mergesort', 'partition problem', {'weight': 0.6})
('mergesort', 'stochastic programming', {'weight': 0.6})
('mergesort', 'hill climbing', {'weight': 0.6})
('mergesort', 'top-down', {'weight': 0.6})
('mergesort', 'de boor algorithm', {'weight': 0.6})
('mergesort', 'comparison sorts', {'weight': 0.5})
('mergesort', 'optimization algorithm', {'weight': 0.6})
('mergesort', "kruskal's algorithm", {'weight': 0.6})
('mergesort', 'jacques philippe marie binet', {'weight': 0.6})
('mergesort', 'tabu search', {'weight': 0.6})
('mergesort', 'divide and conquer algorithm', {'weight': 0.6})
('mergesort', 'stable sorts', {'weight': 0.5})
('mergesort', "johnson's algorithm", {'weight': 0.6})
('mergesort', 'evolutionary algorithm', {'weight': 0.6})
('mergesort', 'clique-width', {'weight': 0.6})
('mergesort', 'dynamic programming', {'weight': 0.6})
('mergesort', 'subroutine', {'weight': 0.6})
('mergesort', 'simulated annealing', {'weight': 0.6})
('mergesort', 'tower of hanoi', {'weight': 0.6})
('mergesort', 'branch and bound', {'weight': 0.6})
('mergesort', 'engineering', {'weight': 0.6})
('mergesort', 'matroid', {'weight': 0.6})
('mergesort', 'viterbi algorithm', {'weight': 0.6})
('mergesort', "lemke's algorithm", {'weight': 0.6})
('mergesort', 'simplex algorithm', {'weight': 0.6})
('mergesort', 'local search (optimization)', {'weight': 0.6})
('mergesort', 'hessian matrix', {'weight': 0.6})
('mergesort', 'ibm system r', {'weight': 0.6})
('mergesort', 'penalty method', {'weight': 0.6})
('mergesort', 'prolog', {'weight': 0.6})
('mergesort', 'sorting algorithms', {'weight': 0.5})
('mergesort', 'time-invariant system', {'weight': 0.6})
('mergesort', 'criss-cross algorithm', {'weight': 0.6})
('mergesort', 'revised simplex algorithm', {'weight': 0.6})
('mergesort', 'the mathematical association of america', {'weight': 0.6})
('mergesort', 'line search', {'weight': 0.6})
('mergesort', 'j (programming language)', {'weight': 0.6})
('mergesort', 'word wrap', {'weight': 0.6})
('mergesort', 'subset sum problem', {'weight': 0.6})
('mergesort', 'integer programming', {'weight': 0.6})
('mergesort', 'nucleosome', {'weight': 0.6})
('mergesort', 'earley algorithm', {'weight': 0.6})
('mergesort', 'referential transparency (computer science)', {'weight': 0.6})
('mergesort', 'recursion', {'weight': 0.6})
('mergesort', 'mathematica', {'weight': 0.6})
('mergesort', 'quicksort', {'weight': 0.6})
('mergesort', 'recursion (computer science)', {'weight': 0.6})
('mergesort', 'checkerboard', {'weight': 0.6})
('mergesort', 'computer science', {'weight': 0.6})
('mergesort', 'brute-force search', {'weight': 0.6})
('mergesort', 'mathematics', {'weight': 0.6})
('mergesort', 'depth-first search', {'weight': 0.6})
('mergesort', 'top-down and bottom-up design', {'weight': 0.6})
('mergesort', 'correspondence problem', {'weight': 0.6})
('mergesort', 'transcription factor', {'weight': 0.6})
('mergesort', 'tree decomposition', {'weight': 0.6})
('mergesort', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('mergesort', 'structural alignment', {'weight': 0.6})
('mergesort', 'local convergence', {'weight': 0.6})
('mergesort', 'knapsack problem', {'weight': 0.6})
('mergesort', 'graph algorithm', {'weight': 0.6})
('mergesort', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('mergesort', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('mergesort', 'hidden markov model', {'weight': 0.6})
('mergesort', 'string (computer science)', {'weight': 0.6})
('mergesort', 'bioinformatics', {'weight': 0.6})
('mergesort', 'genetics', {'weight': 0.6})
('mergesort', 'mathematical optimization', {'weight': 0.6})
('mergesort', 'artificial neural networks', {'weight': 0.6})
('mergesort', 'introduction to algorithms', {'weight': 0.6})
('mergesort', 'thomas h. cormen', {'weight': 0.6})
('mergesort', 'music information retrieval', {'weight': 0.6})
('mergesort', 'beat (music)', {'weight': 0.6})
('mergesort', 'longest common subsequence problem', {'weight': 0.6})
('mergesort', 'convex minimization', {'weight': 0.6})
('mergesort', 'successive parabolic interpolation', {'weight': 0.6})
('mergesort', 'fibonacci sequence', {'weight': 0.6})
('mergesort', 'maximum subarray problem', {'weight': 0.6})
('mergesort', 'convex optimization', {'weight': 0.6})
('mergesort', 'memoization', {'weight': 0.6})
('mergesort', 'richard bellman', {'weight': 0.6})
('mergesort', 'exponential growth', {'weight': 0.6})
('mergesort', 'charles e. leiserson', {'weight': 0.6})
('mergesort', 'charles erwin wilson', {'weight': 0.6})
('mergesort', 'interval scheduling', {'weight': 0.6})
('mergesort', 'chart parser', {'weight': 0.6})
('mergesort', 'travelling salesman problem', {'weight': 0.6})
('mergesort', 'bellman equation', {'weight': 0.6})
('call-by-name', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('call-by-name', 'photoshop', {'weight': 0.6})
('call-by-name', 'sequence alignment', {'weight': 0.6})
('call-by-name', 'flow network', {'weight': 0.6})
('call-by-name', 'lambda calculus', {'weight': 0.7})
('call-by-name', 'programming language topics', {'weight': 0.5})
('call-by-name', 'ellipsoid method', {'weight': 0.6})
('call-by-name', 'chain matrix multiplication', {'weight': 0.6})
('call-by-name', 'ieee', {'weight': 0.6})
('call-by-name', 'backtracking', {'weight': 0.6})
('call-by-name', 'comparison of programming languages', {'weight': 0.7})
('call-by-name', 'nonlinear conjugate gradient method', {'weight': 0.6})
('call-by-name', 'dynamic problem', {'weight': 0.6})
('call-by-name', 'trust region', {'weight': 0.6})
('call-by-name', 'function (mathematics)', {'weight': 0.6})
('call-by-name', 'minimum spanning tree', {'weight': 0.6})
('call-by-name', 'context-free grammar', {'weight': 0.6})
('call-by-name', 'branch and cut', {'weight': 0.6})
('call-by-name', 'state variable', {'weight': 0.6})
('call-by-name', 'treewidth', {'weight': 0.6})
('call-by-name', 'overlapping subproblem', {'weight': 0.6})
('call-by-name', 'taylor & francis', {'weight': 0.6})
('call-by-name', 'cutting-plane method', {'weight': 0.6})
('call-by-name', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('call-by-name', 'method of undetermined coefficients', {'weight': 0.6})
('call-by-name', 'combinatorial optimization', {'weight': 0.6})
('call-by-name', "newton's method in optimization", {'weight': 0.6})
('call-by-name', 'matrix chain multiplication', {'weight': 0.6})
('call-by-name', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('call-by-name', 'dynamic time warping', {'weight': 0.6})
('call-by-name', 'dynamic programming language', {'weight': 0.6})
('call-by-name', 'call-by-need', {'weight': 0.6})
('call-by-name', 'big-o notation', {'weight': 0.6})
('call-by-name', 'comparison of optimization software', {'weight': 0.6})
('call-by-name', 'quadratic programming', {'weight': 0.6})
('call-by-name', 'common lisp', {'weight': 0.6})
('call-by-name', 'barrier function', {'weight': 0.6})
('call-by-name', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('call-by-name', 'gradient descent', {'weight': 0.6})
('call-by-name', 'patricia selinger', {'weight': 0.6})
('call-by-name', 'discounting', {'weight': 0.6})
('call-by-name', 'ronald l. rivest', {'weight': 0.6})
('call-by-name', 'iterative method', {'weight': 0.6})
('call-by-name', 'limited-memory bfgs', {'weight': 0.6})
('call-by-name', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('call-by-name', 'longest common substring problem', {'weight': 0.6})
('call-by-name', 'clifford stein', {'weight': 0.6})
('call-by-name', 'computer chess', {'weight': 0.6})
('call-by-name', 'linear programming', {'weight': 0.6})
('call-by-name', 'bitonic tour', {'weight': 0.6})
('call-by-name', 'linear search problem', {'weight': 0.6})
('call-by-name', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('call-by-name', 'systems analysis', {'weight': 0.6})
('call-by-name', 'capital (economics)', {'weight': 0.6})
('call-by-name', 'levenshtein distance', {'weight': 0.6})
('call-by-name', 'nonlinear programming', {'weight': 0.6})
('call-by-name', 'parameter (computer science)', {'weight': 0.7})
('call-by-name', 'computational complexity of mathematical operations', {'weight': 0.6})
('call-by-name', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('call-by-name', 'gradient', {'weight': 0.6})
('call-by-name', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('call-by-name', 'bulletin of the american mathematical society', {'weight': 0.6})
('call-by-name', 'u.s. english', {'weight': 0.6})
('call-by-name', 'refutation table', {'weight': 0.6})
('call-by-name', 'heuristic algorithm', {'weight': 0.6})
('call-by-name', 'successive linear programming', {'weight': 0.6})
('call-by-name', 'optimal substructure', {'weight': 0.6})
('call-by-name', 'programming language', {'weight': 0.6})
('call-by-name', 'mergesort', {'weight': 0.6})
('call-by-name', "dijkstra's algorithm", {'weight': 0.6})
('call-by-name', 'subgradient method', {'weight': 0.6})
('call-by-name', 'call-by-name', {'weight': 1})
('call-by-name', 'longest increasing subsequence problem', {'weight': 0.6})
('call-by-name', 'edward prescott', {'weight': 0.6})
('call-by-name', 'exponential time', {'weight': 0.6})
('call-by-name', 'principle of optimality', {'weight': 0.6})
('call-by-name', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('call-by-name', 'mathematical game', {'weight': 0.6})
('call-by-name', 'nancy stokey', {'weight': 0.6})
('call-by-name', 'approximation algorithm', {'weight': 0.6})
('call-by-name', 'discrete-time', {'weight': 0.6})
('call-by-name', 'cyk algorithm', {'weight': 0.6})
('call-by-name', 'markov decision process', {'weight': 0.6})
('call-by-name', "powell's method", {'weight': 0.6})
('call-by-name', 'wolfe conditions', {'weight': 0.6})
('call-by-name', 'convexity in economics', {'weight': 0.6})
('call-by-name', 'transposition table', {'weight': 0.6})
('call-by-name', 'economics', {'weight': 0.6})
('call-by-name', 'backward induction', {'weight': 0.6})
('call-by-name', 'golden section search', {'weight': 0.6})
('call-by-name', 'edit distance', {'weight': 0.6})
('call-by-name', 'tree structure', {'weight': 0.6})
('call-by-name', 'exchange algorithm', {'weight': 0.6})
('call-by-name', 'evaluation strategy', {'weight': 0.5})
('call-by-name', 'dover publications', {'weight': 0.6})
('call-by-name', 'seam carving', {'weight': 0.6})
('call-by-name', 'recursive least squares', {'weight': 0.6})
('call-by-name', 'metaheuristic', {'weight': 0.6})
('call-by-name', 'quasi-newton method', {'weight': 0.6})
('call-by-name', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('call-by-name', 'robert e. lucas', {'weight': 0.6})
('call-by-name', 'non-convexity (economics)', {'weight': 0.6})
('call-by-name', 'sr1 formula', {'weight': 0.6})
('call-by-name', 'mathematical reviews', {'weight': 0.6})
('call-by-name', 'puzzle', {'weight': 0.6})
('call-by-name', 'associative array', {'weight': 0.6})
('call-by-name', 'shortest path problem', {'weight': 0.6})
('call-by-name', 'dynamic algorithm', {'weight': 0.6})
('call-by-name', 'augmented lagrangian method', {'weight': 0.6})
('call-by-name', 'charles delisi', {'weight': 0.6})
('call-by-name', 'greedy algorithm', {'weight': 0.6})
('call-by-name', "karmarkar's algorithm", {'weight': 0.6})
('call-by-name', 'lattice models', {'weight': 0.6})
('call-by-name', 'utility', {'weight': 0.6})
('call-by-name', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('call-by-name', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('call-by-name', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('call-by-name', 'international standard book number', {'weight': 0.6})
('call-by-name', 'undirected graph', {'weight': 0.6})
('call-by-name', 'scheme (programming language)', {'weight': 0.6})
('call-by-name', 'rna structure', {'weight': 0.6})
('call-by-name', 'hanoi', {'weight': 0.6})
('call-by-name', 'perl', {'weight': 0.6})
('call-by-name', 'digital object identifier', {'weight': 0.6})
('call-by-name', 'sequential quadratic programming', {'weight': 0.6})
('call-by-name', 'eval()', {'weight': 0.7})
('call-by-name', "dinic's algorithm", {'weight': 0.6})
('call-by-name', 'pseudo-polynomial time', {'weight': 0.6})
('call-by-name', 'partition problem', {'weight': 0.6})
('call-by-name', 'stochastic programming', {'weight': 0.6})
('call-by-name', 'hill climbing', {'weight': 0.6})
('call-by-name', 'top-down', {'weight': 0.6})
('call-by-name', 'de boor algorithm', {'weight': 0.6})
('call-by-name', 'optimization algorithm', {'weight': 0.6})
('call-by-name', "kruskal's algorithm", {'weight': 0.6})
('call-by-name', 'jacques philippe marie binet', {'weight': 0.6})
('call-by-name', 'tabu search', {'weight': 0.6})
('call-by-name', 'divide and conquer algorithm', {'weight': 0.6})
('call-by-name', "johnson's algorithm", {'weight': 0.6})
('call-by-name', 'evolutionary algorithm', {'weight': 0.6})
('call-by-name', 'clique-width', {'weight': 0.6})
('call-by-name', 'dynamic programming', {'weight': 0.6})
('call-by-name', 'subroutine', {'weight': 0.6})
('call-by-name', 'simulated annealing', {'weight': 0.6})
('call-by-name', 'tower of hanoi', {'weight': 0.6})
('call-by-name', 'branch and bound', {'weight': 0.6})
('call-by-name', 'engineering', {'weight': 0.6})
('call-by-name', 'matroid', {'weight': 0.6})
('call-by-name', 'viterbi algorithm', {'weight': 0.6})
('call-by-name', "lemke's algorithm", {'weight': 0.6})
('call-by-name', 'simplex algorithm', {'weight': 0.6})
('call-by-name', 'local search (optimization)', {'weight': 0.6})
('call-by-name', 'hessian matrix', {'weight': 0.6})
('call-by-name', 'ibm system r', {'weight': 0.6})
('call-by-name', 'penalty method', {'weight': 0.6})
('call-by-name', 'prolog', {'weight': 0.6})
('call-by-name', 'time-invariant system', {'weight': 0.6})
('call-by-name', 'criss-cross algorithm', {'weight': 0.6})
('call-by-name', 'revised simplex algorithm', {'weight': 0.6})
('call-by-name', 'the mathematical association of america', {'weight': 0.6})
('call-by-name', 'line search', {'weight': 0.6})
('call-by-name', 'j (programming language)', {'weight': 0.6})
('call-by-name', 'word wrap', {'weight': 0.6})
('call-by-name', 'subset sum problem', {'weight': 0.6})
('call-by-name', 'integer programming', {'weight': 0.6})
('call-by-name', 'nucleosome', {'weight': 0.6})
('call-by-name', 'earley algorithm', {'weight': 0.6})
('call-by-name', 'referential transparency (computer science)', {'weight': 0.6})
('call-by-name', 'beta normal form', {'weight': 0.7})
('call-by-name', 'recursion', {'weight': 0.6})
('call-by-name', 'mathematica', {'weight': 0.6})
('call-by-name', 'quicksort', {'weight': 0.6})
('call-by-name', 'recursion (computer science)', {'weight': 0.6})
('call-by-name', 'checkerboard', {'weight': 0.6})
('call-by-name', 'computer science', {'weight': 0.6})
('call-by-name', 'brute-force search', {'weight': 0.6})
('call-by-name', 'mathematics', {'weight': 0.6})
('call-by-name', 'depth-first search', {'weight': 0.6})
('call-by-name', 'top-down and bottom-up design', {'weight': 0.6})
('call-by-name', 'correspondence problem', {'weight': 0.6})
('call-by-name', 'transcription factor', {'weight': 0.6})
('call-by-name', 'tree decomposition', {'weight': 0.6})
('call-by-name', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('call-by-name', 'structural alignment', {'weight': 0.6})
('call-by-name', 'local convergence', {'weight': 0.6})
('call-by-name', 'knapsack problem', {'weight': 0.6})
('call-by-name', 'graph algorithm', {'weight': 0.6})
('call-by-name', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('call-by-name', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('call-by-name', 'hidden markov model', {'weight': 0.6})
('call-by-name', 'string (computer science)', {'weight': 0.6})
('call-by-name', 'bioinformatics', {'weight': 0.6})
('call-by-name', 'genetics', {'weight': 0.6})
('call-by-name', 'mathematical optimization', {'weight': 0.6})
('call-by-name', 'artificial neural networks', {'weight': 0.6})
('call-by-name', 'introduction to algorithms', {'weight': 0.6})
('call-by-name', 'thomas h. cormen', {'weight': 0.6})
('call-by-name', 'music information retrieval', {'weight': 0.6})
('call-by-name', 'beat (music)', {'weight': 0.6})
('call-by-name', 'longest common subsequence problem', {'weight': 0.6})
('call-by-name', 'convex minimization', {'weight': 0.6})
('call-by-name', 'successive parabolic interpolation', {'weight': 0.6})
('call-by-name', 'fibonacci sequence', {'weight': 0.6})
('call-by-name', 'maximum subarray problem', {'weight': 0.6})
('call-by-name', 'convex optimization', {'weight': 0.6})
('call-by-name', 'memoization', {'weight': 0.6})
('call-by-name', 'richard bellman', {'weight': 0.6})
('call-by-name', 'exponential growth', {'weight': 0.6})
('call-by-name', 'charles e. leiserson', {'weight': 0.6})
('call-by-name', 'charles erwin wilson', {'weight': 0.6})
('call-by-name', 'interval scheduling', {'weight': 0.6})
('call-by-name', 'chart parser', {'weight': 0.6})
('call-by-name', 'travelling salesman problem', {'weight': 0.6})
('call-by-name', 'bellman equation', {'weight': 0.6})
('discrete-time', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('discrete-time', 'photoshop', {'weight': 0.6})
('discrete-time', 'sequence alignment', {'weight': 0.6})
('discrete-time', 'flow network', {'weight': 0.6})
('discrete-time', 'ellipsoid method', {'weight': 0.6})
('discrete-time', 'chain matrix multiplication', {'weight': 0.6})
('discrete-time', 'ieee', {'weight': 0.6})
('discrete-time', 'backtracking', {'weight': 0.6})
('discrete-time', 'chart parser', {'weight': 0.6})
('discrete-time', 'nonlinear conjugate gradient method', {'weight': 0.6})
('discrete-time', 'dynamic problem', {'weight': 0.6})
('discrete-time', 'trust region', {'weight': 0.6})
('discrete-time', 'function (mathematics)', {'weight': 0.6})
('discrete-time', 'minimum spanning tree', {'weight': 0.6})
('discrete-time', 'context-free grammar', {'weight': 0.6})
('discrete-time', 'branch and cut', {'weight': 0.6})
('discrete-time', 'state variable', {'weight': 0.6})
('discrete-time', 'treewidth', {'weight': 0.6})
('discrete-time', 'overlapping subproblem', {'weight': 0.6})
('discrete-time', 'taylor & francis', {'weight': 0.6})
('discrete-time', 'cutting-plane method', {'weight': 0.6})
('discrete-time', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('discrete-time', 'method of undetermined coefficients', {'weight': 0.6})
('discrete-time', 'combinatorial optimization', {'weight': 0.6})
('discrete-time', "newton's method in optimization", {'weight': 0.6})
('discrete-time', 'matrix chain multiplication', {'weight': 0.6})
('discrete-time', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('discrete-time', 'dynamic time warping', {'weight': 0.6})
('discrete-time', 'dynamic programming language', {'weight': 0.6})
('discrete-time', 'call-by-need', {'weight': 0.6})
('discrete-time', 'big-o notation', {'weight': 0.6})
('discrete-time', 'comparison of optimization software', {'weight': 0.6})
('discrete-time', 'quadratic programming', {'weight': 0.6})
('discrete-time', 'common lisp', {'weight': 0.6})
('discrete-time', 'barrier function', {'weight': 0.6})
('discrete-time', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('discrete-time', 'gradient descent', {'weight': 0.6})
('discrete-time', 'patricia selinger', {'weight': 0.6})
('discrete-time', 'discounting', {'weight': 0.6})
('discrete-time', 'ronald l. rivest', {'weight': 0.6})
('discrete-time', 'iterative method', {'weight': 0.6})
('discrete-time', 'limited-memory bfgs', {'weight': 0.6})
('discrete-time', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('discrete-time', 'longest common substring problem', {'weight': 0.6})
('discrete-time', 'clifford stein', {'weight': 0.6})
('discrete-time', 'computer chess', {'weight': 0.6})
('discrete-time', 'linear programming', {'weight': 0.6})
('discrete-time', 'bitonic tour', {'weight': 0.6})
('discrete-time', 'linear search problem', {'weight': 0.6})
('discrete-time', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('discrete-time', 'systems analysis', {'weight': 0.6})
('discrete-time', 'capital (economics)', {'weight': 0.6})
('discrete-time', 'levenshtein distance', {'weight': 0.6})
('discrete-time', 'nonlinear programming', {'weight': 0.6})
('discrete-time', 'discrete calculus', {'weight': 0.7})
('discrete-time', 'computational complexity of mathematical operations', {'weight': 0.6})
('discrete-time', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('discrete-time', 'gradient', {'weight': 0.6})
('discrete-time', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('discrete-time', 'bulletin of the american mathematical society', {'weight': 0.6})
('discrete-time', 'u.s. english', {'weight': 0.6})
('discrete-time', 'refutation table', {'weight': 0.6})
('discrete-time', 'heuristic algorithm', {'weight': 0.6})
('discrete-time', 'successive linear programming', {'weight': 0.6})
('discrete-time', 'optimal substructure', {'weight': 0.6})
('discrete-time', 'programming language', {'weight': 0.6})
('discrete-time', 'mergesort', {'weight': 0.6})
('discrete-time', "dijkstra's algorithm", {'weight': 0.6})
('discrete-time', 'subgradient method', {'weight': 0.6})
('discrete-time', 'call-by-name', {'weight': 0.6})
('discrete-time', 'longest increasing subsequence problem', {'weight': 0.6})
('discrete-time', 'edward prescott', {'weight': 0.6})
('discrete-time', 'exponential time', {'weight': 0.6})
('discrete-time', 'principle of optimality', {'weight': 0.6})
('discrete-time', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('discrete-time', 'mathematical game', {'weight': 0.6})
('discrete-time', 'nancy stokey', {'weight': 0.6})
('discrete-time', 'approximation algorithm', {'weight': 0.6})
('discrete-time', 'discrete-time', {'weight': 1})
('discrete-time', 'cyk algorithm', {'weight': 0.6})
('discrete-time', 'markov decision process', {'weight': 0.6})
('discrete-time', "powell's method", {'weight': 0.6})
('discrete-time', 'wolfe conditions', {'weight': 0.6})
('discrete-time', 'convexity in economics', {'weight': 0.6})
('discrete-time', 'time-scale calculus', {'weight': 0.7})
('discrete-time', 'transposition table', {'weight': 0.6})
('discrete-time', 'economics', {'weight': 0.6})
('discrete-time', 'backward induction', {'weight': 0.6})
('discrete-time', 'golden section search', {'weight': 0.6})
('discrete-time', 'edit distance', {'weight': 0.6})
('discrete-time', 'tree structure', {'weight': 0.6})
('discrete-time', 'exchange algorithm', {'weight': 0.6})
('discrete-time', 'dover publications', {'weight': 0.6})
('discrete-time', 'seam carving', {'weight': 0.6})
('discrete-time', 'recursive least squares', {'weight': 0.6})
('discrete-time', 'metaheuristic', {'weight': 0.6})
('discrete-time', 'quasi-newton method', {'weight': 0.6})
('discrete-time', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('discrete-time', 'robert e. lucas', {'weight': 0.6})
('discrete-time', 'non-convexity (economics)', {'weight': 0.6})
('discrete-time', 'sr1 formula', {'weight': 0.6})
('discrete-time', 'mathematical reviews', {'weight': 0.6})
('discrete-time', 'puzzle', {'weight': 0.6})
('discrete-time', 'associative array', {'weight': 0.6})
('discrete-time', 'shortest path problem', {'weight': 0.6})
('discrete-time', 'dynamic algorithm', {'weight': 0.6})
('discrete-time', 'augmented lagrangian method', {'weight': 0.6})
('discrete-time', 'charles delisi', {'weight': 0.6})
('discrete-time', 'greedy algorithm', {'weight': 0.6})
('discrete-time', "karmarkar's algorithm", {'weight': 0.6})
('discrete-time', 'lattice models', {'weight': 0.6})
('discrete-time', 'utility', {'weight': 0.6})
('discrete-time', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('discrete-time', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('discrete-time', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('discrete-time', 'international standard book number', {'weight': 0.6})
('discrete-time', 'undirected graph', {'weight': 0.6})
('discrete-time', 'scheme (programming language)', {'weight': 0.6})
('discrete-time', 'rna structure', {'weight': 0.6})
('discrete-time', 'hanoi', {'weight': 0.6})
('discrete-time', 'perl', {'weight': 0.6})
('discrete-time', 'digital object identifier', {'weight': 0.6})
('discrete-time', 'sequential quadratic programming', {'weight': 0.6})
('discrete-time', "dinic's algorithm", {'weight': 0.6})
('discrete-time', 'pseudo-polynomial time', {'weight': 0.6})
('discrete-time', 'partition problem', {'weight': 0.6})
('discrete-time', 'stochastic programming', {'weight': 0.6})
('discrete-time', 'hill climbing', {'weight': 0.6})
('discrete-time', 'top-down', {'weight': 0.6})
('discrete-time', 'de boor algorithm', {'weight': 0.6})
('discrete-time', 'optimization algorithm', {'weight': 0.6})
('discrete-time', "kruskal's algorithm", {'weight': 0.6})
('discrete-time', 'jacques philippe marie binet', {'weight': 0.6})
('discrete-time', 'tabu search', {'weight': 0.6})
('discrete-time', 'divide and conquer algorithm', {'weight': 0.6})
('discrete-time', "johnson's algorithm", {'weight': 0.6})
('discrete-time', 'evolutionary algorithm', {'weight': 0.6})
('discrete-time', 'clique-width', {'weight': 0.6})
('discrete-time', 'dynamic programming', {'weight': 0.6})
('discrete-time', 'subroutine', {'weight': 0.6})
('discrete-time', 'simulated annealing', {'weight': 0.6})
('discrete-time', 'tower of hanoi', {'weight': 0.6})
('discrete-time', 'branch and bound', {'weight': 0.6})
('discrete-time', 'engineering', {'weight': 0.6})
('discrete-time', 'matroid', {'weight': 0.6})
('discrete-time', 'viterbi algorithm', {'weight': 0.6})
('discrete-time', "lemke's algorithm", {'weight': 0.6})
('discrete-time', 'simplex algorithm', {'weight': 0.6})
('discrete-time', 'local search (optimization)', {'weight': 0.6})
('discrete-time', 'hessian matrix', {'weight': 0.6})
('discrete-time', 'ibm system r', {'weight': 0.6})
('discrete-time', 'penalty method', {'weight': 0.6})
('discrete-time', 'prolog', {'weight': 0.6})
('discrete-time', 'time-invariant system', {'weight': 0.6})
('discrete-time', 'criss-cross algorithm', {'weight': 0.6})
('discrete-time', 'dynamical systems', {'weight': 0.5})
('discrete-time', 'revised simplex algorithm', {'weight': 0.6})
('discrete-time', 'the mathematical association of america', {'weight': 0.6})
('discrete-time', 'line search', {'weight': 0.6})
('discrete-time', 'j (programming language)', {'weight': 0.6})
('discrete-time', 'word wrap', {'weight': 0.6})
('discrete-time', 'subset sum problem', {'weight': 0.6})
('discrete-time', 'integer programming', {'weight': 0.6})
('discrete-time', 'nucleosome', {'weight': 0.6})
('discrete-time', 'earley algorithm', {'weight': 0.6})
('discrete-time', 'referential transparency (computer science)', {'weight': 0.6})
('discrete-time', 'recursion', {'weight': 0.6})
('discrete-time', 'mathematica', {'weight': 0.6})
('discrete-time', 'quicksort', {'weight': 0.6})
('discrete-time', 'recursion (computer science)', {'weight': 0.6})
('discrete-time', 'checkerboard', {'weight': 0.6})
('discrete-time', 'computer science', {'weight': 0.6})
('discrete-time', 'brute-force search', {'weight': 0.6})
('discrete-time', 'mathematics', {'weight': 0.6})
('discrete-time', 'depth-first search', {'weight': 0.6})
('discrete-time', 'top-down and bottom-up design', {'weight': 0.6})
('discrete-time', 'correspondence problem', {'weight': 0.6})
('discrete-time', 'transcription factor', {'weight': 0.6})
('discrete-time', 'tree decomposition', {'weight': 0.6})
('discrete-time', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('discrete-time', 'structural alignment', {'weight': 0.6})
('discrete-time', 'local convergence', {'weight': 0.6})
('discrete-time', 'knapsack problem', {'weight': 0.6})
('discrete-time', 'graph algorithm', {'weight': 0.6})
('discrete-time', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('discrete-time', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('discrete-time', 'hidden markov model', {'weight': 0.6})
('discrete-time', 'string (computer science)', {'weight': 0.6})
('discrete-time', 'bioinformatics', {'weight': 0.6})
('discrete-time', 'genetics', {'weight': 0.6})
('discrete-time', 'mathematical optimization', {'weight': 0.6})
('discrete-time', 'artificial neural networks', {'weight': 0.6})
('discrete-time', 'introduction to algorithms', {'weight': 0.6})
('discrete-time', 'thomas h. cormen', {'weight': 0.6})
('discrete-time', 'music information retrieval', {'weight': 0.6})
('discrete-time', 'beat (music)', {'weight': 0.6})
('discrete-time', 'longest common subsequence problem', {'weight': 0.6})
('discrete-time', 'convex minimization', {'weight': 0.6})
('discrete-time', 'successive parabolic interpolation', {'weight': 0.6})
('discrete-time', 'fibonacci sequence', {'weight': 0.6})
('discrete-time', 'maximum subarray problem', {'weight': 0.6})
('discrete-time', 'convex optimization', {'weight': 0.6})
('discrete-time', 'memoization', {'weight': 0.6})
('discrete-time', 'richard bellman', {'weight': 0.6})
('discrete-time', 'exponential growth', {'weight': 0.6})
('discrete-time', 'charles e. leiserson', {'weight': 0.6})
('discrete-time', 'charles erwin wilson', {'weight': 0.6})
('discrete-time', 'interval scheduling', {'weight': 0.6})
('discrete-time', 'time', {'weight': 0.5})
('discrete-time', 'travelling salesman problem', {'weight': 0.6})
('discrete-time', 'bellman equation', {'weight': 0.6})
('economics', 'convexity in economics', {'weight': 0.6})
('economics', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('economics', 'sequence alignment', {'weight': 0.6})
('economics', 'flow network', {'weight': 0.6})
('economics', 'photoshop', {'weight': 0.6})
('economics', 'bellman equation', {'weight': 0.6})
('economics', 'charles erwin wilson', {'weight': 0.6})
('economics', 'ellipsoid method', {'weight': 0.6})
('economics', 'chain matrix multiplication', {'weight': 0.6})
('economics', 'ieee', {'weight': 0.6})
('economics', 'backtracking', {'weight': 0.6})
('economics', 'nonlinear conjugate gradient method', {'weight': 0.6})
('economics', 'dynamic problem', {'weight': 0.6})
('economics', 'trust region', {'weight': 0.6})
('economics', 'function (mathematics)', {'weight': 0.6})
('economics', 'minimum spanning tree', {'weight': 0.6})
('economics', 'context-free grammar', {'weight': 0.6})
('economics', 'branch and cut', {'weight': 0.6})
('economics', 'state variable', {'weight': 0.6})
('economics', 'treewidth', {'weight': 0.6})
('economics', 'overlapping subproblem', {'weight': 0.6})
('economics', 'taylor & francis', {'weight': 0.6})
('economics', 'cutting-plane method', {'weight': 0.6})
('economics', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('economics', 'method of undetermined coefficients', {'weight': 0.6})
('economics', 'combinatorial optimization', {'weight': 0.6})
('economics', "newton's method in optimization", {'weight': 0.6})
('economics', 'mathematical and quantitative methods (economics)', {'weight': 0.5})
('economics', 'matrix chain multiplication', {'weight': 0.6})
('economics', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('economics', 'dynamic time warping', {'weight': 0.6})
('economics', 'dynamic programming language', {'weight': 0.6})
('economics', 'call-by-need', {'weight': 0.6})
('economics', 'big-o notation', {'weight': 0.6})
('economics', 'convex geometry', {'weight': 0.5})
('economics', 'comparison of optimization software', {'weight': 0.6})
('economics', 'quadratic programming', {'weight': 0.6})
('economics', 'common lisp', {'weight': 0.6})
('economics', 'barrier function', {'weight': 0.6})
('economics', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('economics', 'gradient descent', {'weight': 0.6})
('economics', 'patricia selinger', {'weight': 0.6})
('economics', 'discounting', {'weight': 0.6})
('economics', 'ronald l. rivest', {'weight': 0.6})
('economics', 'iterative method', {'weight': 0.6})
('economics', 'limited-memory bfgs', {'weight': 0.6})
('economics', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('economics', 'longest common substring problem', {'weight': 0.6})
('economics', 'clifford stein', {'weight': 0.6})
('economics', 'computer chess', {'weight': 0.6})
('economics', 'linear programming', {'weight': 0.6})
('economics', 'bitonic tour', {'weight': 0.6})
('economics', 'linear search problem', {'weight': 0.6})
('economics', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('economics', 'mathematical economics', {'weight': 0.5})
('economics', 'capital (economics)', {'weight': 0.6})
('economics', 'levenshtein distance', {'weight': 0.6})
('economics', 'nonlinear programming', {'weight': 0.6})
('economics', 'computational complexity of mathematical operations', {'weight': 0.6})
('economics', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('economics', 'gradient', {'weight': 0.6})
('economics', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('economics', 'bulletin of the american mathematical society', {'weight': 0.6})
('economics', 'u.s. english', {'weight': 0.6})
('economics', 'refutation table', {'weight': 0.6})
('economics', 'heuristic algorithm', {'weight': 0.6})
('economics', 'successive linear programming', {'weight': 0.6})
('economics', 'optimal substructure', {'weight': 0.6})
('economics', 'programming language', {'weight': 0.6})
('economics', 'mergesort', {'weight': 0.6})
('economics', "dijkstra's algorithm", {'weight': 0.6})
('economics', 'subgradient method', {'weight': 0.6})
('economics', 'call-by-name', {'weight': 0.6})
('economics', 'longest increasing subsequence problem', {'weight': 0.6})
('economics', 'edward prescott', {'weight': 0.6})
('economics', 'exponential time', {'weight': 0.6})
('economics', 'principle of optimality', {'weight': 0.6})
('economics', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('economics', 'mathematical game', {'weight': 0.6})
('economics', 'nancy stokey', {'weight': 0.6})
('economics', 'approximation algorithm', {'weight': 0.6})
('economics', 'discrete-time', {'weight': 0.6})
('economics', 'cyk algorithm', {'weight': 0.6})
('economics', 'markov decision process', {'weight': 0.6})
('economics', "powell's method", {'weight': 0.6})
('economics', 'wolfe conditions', {'weight': 0.6})
('economics', 'transposition table', {'weight': 0.6})
('economics', 'economics', {'weight': 1})
('economics', 'backward induction', {'weight': 0.6})
('economics', 'golden section search', {'weight': 0.6})
('economics', 'edit distance', {'weight': 0.6})
('economics', 'tree structure', {'weight': 0.6})
('economics', 'exchange algorithm', {'weight': 0.6})
('economics', 'dover publications', {'weight': 0.6})
('economics', 'seam carving', {'weight': 0.6})
('economics', 'recursive least squares', {'weight': 0.6})
('economics', 'metaheuristic', {'weight': 0.6})
('economics', 'quasi-newton method', {'weight': 0.6})
('economics', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('economics', 'robert e. lucas', {'weight': 0.6})
('economics', 'non-convexity (economics)', {'weight': 0.6})
('economics', 'sr1 formula', {'weight': 0.6})
('economics', 'mathematical reviews', {'weight': 0.6})
('economics', 'puzzle', {'weight': 0.6})
('economics', 'associative array', {'weight': 0.6})
('economics', 'shortest path problem', {'weight': 0.6})
('economics', 'dynamic algorithm', {'weight': 0.6})
('economics', 'augmented lagrangian method', {'weight': 0.6})
('economics', 'charles delisi', {'weight': 0.6})
('economics', 'greedy algorithm', {'weight': 0.6})
('economics', "karmarkar's algorithm", {'weight': 0.6})
('economics', 'lattice models', {'weight': 0.6})
('economics', 'utility', {'weight': 0.6})
('economics', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('economics', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('economics', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('economics', 'international standard book number', {'weight': 0.6})
('economics', 'undirected graph', {'weight': 0.6})
('economics', 'scheme (programming language)', {'weight': 0.6})
('economics', 'rna structure', {'weight': 0.6})
('economics', 'hanoi', {'weight': 0.6})
('economics', 'perl', {'weight': 0.6})
('economics', 'digital object identifier', {'weight': 0.6})
('economics', 'sequential quadratic programming', {'weight': 0.6})
('economics', "dinic's algorithm", {'weight': 0.6})
('economics', 'pseudo-polynomial time', {'weight': 0.6})
('economics', 'partition problem', {'weight': 0.6})
('economics', 'stochastic programming', {'weight': 0.6})
('economics', 'hill climbing', {'weight': 0.6})
('economics', 'top-down', {'weight': 0.6})
('economics', 'de boor algorithm', {'weight': 0.6})
('economics', 'optimization algorithm', {'weight': 0.6})
('economics', "kruskal's algorithm", {'weight': 0.6})
('economics', 'jacques philippe marie binet', {'weight': 0.6})
('economics', 'tabu search', {'weight': 0.6})
('economics', 'divide and conquer algorithm', {'weight': 0.6})
('economics', "johnson's algorithm", {'weight': 0.6})
('economics', 'evolutionary algorithm', {'weight': 0.6})
('economics', 'clique-width', {'weight': 0.6})
('economics', 'systems analysis', {'weight': 0.6})
('economics', 'dynamic programming', {'weight': 0.6})
('economics', 'subroutine', {'weight': 0.6})
('economics', 'simulated annealing', {'weight': 0.6})
('economics', 'tower of hanoi', {'weight': 0.6})
('economics', 'branch and bound', {'weight': 0.6})
('economics', 'engineering', {'weight': 0.6})
('economics', 'matroid', {'weight': 0.6})
('economics', 'viterbi algorithm', {'weight': 0.6})
('economics', "lemke's algorithm", {'weight': 0.6})
('economics', 'simplex algorithm', {'weight': 0.6})
('economics', 'local search (optimization)', {'weight': 0.6})
('economics', 'hessian matrix', {'weight': 0.6})
('economics', 'ibm system r', {'weight': 0.6})
('economics', 'penalty method', {'weight': 0.6})
('economics', 'prolog', {'weight': 0.6})
('economics', 'time-invariant system', {'weight': 0.6})
('economics', 'criss-cross algorithm', {'weight': 0.6})
('economics', 'revised simplex algorithm', {'weight': 0.6})
('economics', 'the mathematical association of america', {'weight': 0.6})
('economics', 'line search', {'weight': 0.6})
('economics', 'j (programming language)', {'weight': 0.6})
('economics', 'word wrap', {'weight': 0.6})
('economics', 'subset sum problem', {'weight': 0.6})
('economics', 'integer programming', {'weight': 0.6})
('economics', 'nucleosome', {'weight': 0.6})
('economics', 'earley algorithm', {'weight': 0.6})
('economics', 'referential transparency (computer science)', {'weight': 0.6})
('economics', 'recursion', {'weight': 0.6})
('economics', 'mathematica', {'weight': 0.6})
('economics', 'quicksort', {'weight': 0.6})
('economics', 'recursion (computer science)', {'weight': 0.6})
('economics', 'computer science', {'weight': 0.6})
('economics', 'brute-force search', {'weight': 0.6})
('economics', 'mathematics', {'weight': 0.6})
('economics', 'depth-first search', {'weight': 0.6})
('economics', 'top-down and bottom-up design', {'weight': 0.6})
('economics', 'correspondence problem', {'weight': 0.6})
('economics', 'transcription factor', {'weight': 0.6})
('economics', 'tree decomposition', {'weight': 0.6})
('economics', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('economics', 'structural alignment', {'weight': 0.6})
('economics', 'local convergence', {'weight': 0.6})
('economics', 'knapsack problem', {'weight': 0.6})
('economics', 'graph algorithm', {'weight': 0.6})
('economics', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('economics', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('economics', 'hidden markov model', {'weight': 0.6})
('economics', 'string (computer science)', {'weight': 0.6})
('economics', 'bioinformatics', {'weight': 0.6})
('economics', 'genetics', {'weight': 0.6})
('economics', 'mathematical optimization', {'weight': 0.6})
('economics', 'artificial neural networks', {'weight': 0.6})
('economics', 'introduction to algorithms', {'weight': 0.6})
('economics', 'thomas h. cormen', {'weight': 0.6})
('economics', 'general equilibrium and disequilibrium', {'weight': 0.5})
('economics', 'music information retrieval', {'weight': 0.6})
('economics', 'beat (music)', {'weight': 0.6})
('economics', 'longest common subsequence problem', {'weight': 0.6})
('economics', 'convex minimization', {'weight': 0.6})
('economics', 'successive parabolic interpolation', {'weight': 0.6})
('economics', 'fibonacci sequence', {'weight': 0.6})
('economics', 'maximum subarray problem', {'weight': 0.6})
('economics', 'convex optimization', {'weight': 0.6})
('economics', 'memoization', {'weight': 0.6})
('economics', 'richard bellman', {'weight': 0.6})
('economics', 'exponential growth', {'weight': 0.6})
('economics', 'charles e. leiserson', {'weight': 0.6})
('economics', 'checkerboard', {'weight': 0.6})
('economics', 'interval scheduling', {'weight': 0.6})
('economics', 'chart parser', {'weight': 0.6})
('economics', 'travelling salesman problem', {'weight': 0.6})
('economics', 'convex hulls', {'weight': 0.5})
('backward induction', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('backward induction', 'photoshop', {'weight': 0.6})
('backward induction', 'sequence alignment', {'weight': 0.6})
('backward induction', 'flow network', {'weight': 0.6})
('backward induction', 'ellipsoid method', {'weight': 0.6})
('backward induction', 'chain matrix multiplication', {'weight': 0.6})
('backward induction', 'ieee', {'weight': 0.6})
('backward induction', 'backtracking', {'weight': 0.6})
('backward induction', 'nonlinear conjugate gradient method', {'weight': 0.6})
('backward induction', 'dynamic problem', {'weight': 0.6})
('backward induction', 'trust region', {'weight': 0.6})
('backward induction', 'function (mathematics)', {'weight': 0.6})
('backward induction', 'minimum spanning tree', {'weight': 0.6})
('backward induction', 'context-free grammar', {'weight': 0.6})
('backward induction', 'branch and cut', {'weight': 0.6})
('backward induction', 'state variable', {'weight': 0.6})
('backward induction', 'treewidth', {'weight': 0.6})
('backward induction', 'overlapping subproblem', {'weight': 0.6})
('backward induction', 'taylor & francis', {'weight': 0.6})
('backward induction', 'cutting-plane method', {'weight': 0.6})
('backward induction', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('backward induction', 'method of undetermined coefficients', {'weight': 0.6})
('backward induction', 'combinatorial optimization', {'weight': 0.6})
('backward induction', "newton's method in optimization", {'weight': 0.6})
('backward induction', 'matrix chain multiplication', {'weight': 0.6})
('backward induction', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('backward induction', 'dynamic time warping', {'weight': 0.6})
('backward induction', 'dynamic programming language', {'weight': 0.6})
('backward induction', 'call-by-need', {'weight': 0.6})
('backward induction', 'big-o notation', {'weight': 0.6})
('backward induction', 'comparison of optimization software', {'weight': 0.6})
('backward induction', 'quadratic programming', {'weight': 0.6})
('backward induction', 'common lisp', {'weight': 0.6})
('backward induction', 'barrier function', {'weight': 0.6})
('backward induction', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('backward induction', 'gradient descent', {'weight': 0.6})
('backward induction', 'patricia selinger', {'weight': 0.6})
('backward induction', 'discounting', {'weight': 0.6})
('backward induction', 'ronald l. rivest', {'weight': 0.6})
('backward induction', 'iterative method', {'weight': 0.6})
('backward induction', 'limited-memory bfgs', {'weight': 0.6})
('backward induction', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('backward induction', 'longest common substring problem', {'weight': 0.6})
('backward induction', 'clifford stein', {'weight': 0.6})
('backward induction', 'computer chess', {'weight': 0.6})
('backward induction', 'linear programming', {'weight': 0.6})
('backward induction', 'bitonic tour', {'weight': 0.6})
('backward induction', 'linear search problem', {'weight': 0.6})
('backward induction', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('backward induction', 'systems analysis', {'weight': 0.6})
('backward induction', 'capital (economics)', {'weight': 0.6})
('backward induction', 'levenshtein distance', {'weight': 0.6})
('backward induction', 'nonlinear programming', {'weight': 0.6})
('backward induction', 'computational complexity of mathematical operations', {'weight': 0.6})
('backward induction', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('backward induction', 'gradient', {'weight': 0.6})
('backward induction', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('backward induction', 'bulletin of the american mathematical society', {'weight': 0.6})
('backward induction', 'u.s. english', {'weight': 0.6})
('backward induction', 'refutation table', {'weight': 0.6})
('backward induction', 'heuristic algorithm', {'weight': 0.6})
('backward induction', 'successive linear programming', {'weight': 0.6})
('backward induction', 'optimal substructure', {'weight': 0.6})
('backward induction', 'programming language', {'weight': 0.6})
('backward induction', 'mergesort', {'weight': 0.6})
('backward induction', "dijkstra's algorithm", {'weight': 0.6})
('backward induction', 'subgradient method', {'weight': 0.6})
('backward induction', 'call-by-name', {'weight': 0.6})
('backward induction', 'longest increasing subsequence problem', {'weight': 0.6})
('backward induction', 'edward prescott', {'weight': 0.6})
('backward induction', 'exponential time', {'weight': 0.6})
('backward induction', 'principle of optimality', {'weight': 0.6})
('backward induction', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('backward induction', 'mathematical game', {'weight': 0.6})
('backward induction', 'nancy stokey', {'weight': 0.6})
('backward induction', 'approximation algorithm', {'weight': 0.6})
('backward induction', 'discrete-time', {'weight': 0.6})
('backward induction', 'cyk algorithm', {'weight': 0.6})
('backward induction', 'markov decision process', {'weight': 0.6})
('backward induction', "powell's method", {'weight': 0.6})
('backward induction', 'wolfe conditions', {'weight': 0.6})
('backward induction', 'convexity in economics', {'weight': 0.6})
('backward induction', 'transposition table', {'weight': 0.6})
('backward induction', 'economics', {'weight': 0.6})
('backward induction', 'backward induction', {'weight': 1})
('backward induction', 'golden section search', {'weight': 0.6})
('backward induction', 'edit distance', {'weight': 0.6})
('backward induction', 'tree structure', {'weight': 0.6})
('backward induction', 'exchange algorithm', {'weight': 0.6})
('backward induction', 'dover publications', {'weight': 0.6})
('backward induction', 'seam carving', {'weight': 0.6})
('backward induction', 'recursive least squares', {'weight': 0.6})
('backward induction', 'metaheuristic', {'weight': 0.6})
('backward induction', 'quasi-newton method', {'weight': 0.6})
('backward induction', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('backward induction', 'robert e. lucas', {'weight': 0.6})
('backward induction', 'non-convexity (economics)', {'weight': 0.6})
('backward induction', 'sr1 formula', {'weight': 0.6})
('backward induction', 'mathematical reviews', {'weight': 0.6})
('backward induction', 'puzzle', {'weight': 0.6})
('backward induction', 'associative array', {'weight': 0.6})
('backward induction', 'shortest path problem', {'weight': 0.6})
('backward induction', 'dynamic algorithm', {'weight': 0.6})
('backward induction', 'augmented lagrangian method', {'weight': 0.6})
('backward induction', 'charles delisi', {'weight': 0.6})
('backward induction', 'greedy algorithm', {'weight': 0.6})
('backward induction', "karmarkar's algorithm", {'weight': 0.6})
('backward induction', 'lattice models', {'weight': 0.6})
('backward induction', 'utility', {'weight': 0.6})
('backward induction', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('backward induction', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('backward induction', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('backward induction', 'international standard book number', {'weight': 0.6})
('backward induction', 'undirected graph', {'weight': 0.6})
('backward induction', 'scheme (programming language)', {'weight': 0.6})
('backward induction', 'rna structure', {'weight': 0.6})
('backward induction', 'hanoi', {'weight': 0.6})
('backward induction', 'perl', {'weight': 0.6})
('backward induction', 'digital object identifier', {'weight': 0.6})
('backward induction', 'sequential quadratic programming', {'weight': 0.6})
('backward induction', "dinic's algorithm", {'weight': 0.6})
('backward induction', 'pseudo-polynomial time', {'weight': 0.6})
('backward induction', 'partition problem', {'weight': 0.6})
('backward induction', 'stochastic programming', {'weight': 0.6})
('backward induction', 'hill climbing', {'weight': 0.6})
('backward induction', 'top-down', {'weight': 0.6})
('backward induction', 'de boor algorithm', {'weight': 0.6})
('backward induction', 'optimization algorithm', {'weight': 0.6})
('backward induction', "kruskal's algorithm", {'weight': 0.6})
('backward induction', 'jacques philippe marie binet', {'weight': 0.6})
('backward induction', 'tabu search', {'weight': 0.6})
('backward induction', 'divide and conquer algorithm', {'weight': 0.6})
('backward induction', "johnson's algorithm", {'weight': 0.6})
('backward induction', 'evolutionary algorithm', {'weight': 0.6})
('backward induction', 'clique-width', {'weight': 0.6})
('backward induction', 'dynamic programming', {'weight': 0.6})
('backward induction', 'subroutine', {'weight': 0.6})
('backward induction', 'simulated annealing', {'weight': 0.6})
('backward induction', 'tower of hanoi', {'weight': 0.6})
('backward induction', 'branch and bound', {'weight': 0.6})
('backward induction', 'engineering', {'weight': 0.6})
('backward induction', 'matroid', {'weight': 0.6})
('backward induction', 'viterbi algorithm', {'weight': 0.6})
('backward induction', "lemke's algorithm", {'weight': 0.6})
('backward induction', 'simplex algorithm', {'weight': 0.6})
('backward induction', 'local search (optimization)', {'weight': 0.6})
('backward induction', 'hessian matrix', {'weight': 0.6})
('backward induction', 'ibm system r', {'weight': 0.6})
('backward induction', 'penalty method', {'weight': 0.6})
('backward induction', 'game theory', {'weight': 0.5})
('backward induction', 'prolog', {'weight': 0.6})
('backward induction', 'time-invariant system', {'weight': 0.6})
('backward induction', 'criss-cross algorithm', {'weight': 0.6})
('backward induction', 'revised simplex algorithm', {'weight': 0.6})
('backward induction', 'the mathematical association of america', {'weight': 0.6})
('backward induction', 'line search', {'weight': 0.6})
('backward induction', 'j (programming language)', {'weight': 0.6})
('backward induction', 'word wrap', {'weight': 0.6})
('backward induction', 'subset sum problem', {'weight': 0.6})
('backward induction', 'integer programming', {'weight': 0.6})
('backward induction', 'nucleosome', {'weight': 0.6})
('backward induction', 'inductive reasoning', {'weight': 0.5})
('backward induction', 'referential transparency (computer science)', {'weight': 0.6})
('backward induction', 'recursion', {'weight': 0.6})
('backward induction', 'mathematica', {'weight': 0.6})
('backward induction', 'quicksort', {'weight': 0.6})
('backward induction', 'recursion (computer science)', {'weight': 0.6})
('backward induction', 'checkerboard', {'weight': 0.6})
('backward induction', 'computer science', {'weight': 0.6})
('backward induction', 'brute-force search', {'weight': 0.6})
('backward induction', 'mathematics', {'weight': 0.6})
('backward induction', 'depth-first search', {'weight': 0.6})
('backward induction', 'top-down and bottom-up design', {'weight': 0.6})
('backward induction', 'correspondence problem', {'weight': 0.6})
('backward induction', 'transcription factor', {'weight': 0.6})
('backward induction', 'tree decomposition', {'weight': 0.6})
('backward induction', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('backward induction', 'structural alignment', {'weight': 0.6})
('backward induction', 'local convergence', {'weight': 0.6})
('backward induction', 'knapsack problem', {'weight': 0.6})
('backward induction', 'graph algorithm', {'weight': 0.6})
('backward induction', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('backward induction', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('backward induction', 'hidden markov model', {'weight': 0.6})
('backward induction', 'string (computer science)', {'weight': 0.6})
('backward induction', 'bioinformatics', {'weight': 0.6})
('backward induction', 'genetics', {'weight': 0.6})
('backward induction', 'mathematical optimization', {'weight': 0.6})
('backward induction', 'artificial neural networks', {'weight': 0.6})
('backward induction', 'introduction to algorithms', {'weight': 0.6})
('backward induction', 'thomas h. cormen', {'weight': 0.6})
('backward induction', 'earley algorithm', {'weight': 0.6})
('backward induction', 'music information retrieval', {'weight': 0.6})
('backward induction', 'beat (music)', {'weight': 0.6})
('backward induction', 'longest common subsequence problem', {'weight': 0.6})
('backward induction', 'convex minimization', {'weight': 0.6})
('backward induction', 'successive parabolic interpolation', {'weight': 0.6})
('backward induction', 'fibonacci sequence', {'weight': 0.6})
('backward induction', 'maximum subarray problem', {'weight': 0.6})
('backward induction', 'convex optimization', {'weight': 0.6})
('backward induction', 'memoization', {'weight': 0.6})
('backward induction', 'richard bellman', {'weight': 0.6})
('backward induction', 'exponential growth', {'weight': 0.6})
('backward induction', 'charles e. leiserson', {'weight': 0.6})
('backward induction', 'charles erwin wilson', {'weight': 0.6})
('backward induction', 'interval scheduling', {'weight': 0.6})
('backward induction', 'chart parser', {'weight': 0.6})
('backward induction', 'travelling salesman problem', {'weight': 0.6})
('backward induction', 'bellman equation', {'weight': 0.6})
('golden section search', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('golden section search', 'photoshop', {'weight': 0.6})
('golden section search', 'sequence alignment', {'weight': 0.6})
('golden section search', 'flow network', {'weight': 0.6})
('golden section search', 'ellipsoid method', {'weight': 0.6})
('golden section search', 'chain matrix multiplication', {'weight': 0.6})
('golden section search', 'ieee', {'weight': 0.6})
('golden section search', 'backtracking', {'weight': 0.6})
('golden section search', 'nonlinear conjugate gradient method', {'weight': 0.6})
('golden section search', 'dynamic problem', {'weight': 0.6})
('golden section search', 'trust region', {'weight': 0.6})
('golden section search', 'function (mathematics)', {'weight': 0.6})
('golden section search', 'minimum spanning tree', {'weight': 0.6})
('golden section search', 'context-free grammar', {'weight': 0.6})
('golden section search', 'branch and cut', {'weight': 0.6})
('golden section search', 'state variable', {'weight': 0.6})
('golden section search', 'treewidth', {'weight': 0.6})
('golden section search', 'optimization algorithms and methods', {'weight': 0.5})
('golden section search', 'overlapping subproblem', {'weight': 0.6})
('golden section search', 'taylor & francis', {'weight': 0.6})
('golden section search', 'cutting-plane method', {'weight': 0.6})
('golden section search', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('golden section search', 'method of undetermined coefficients', {'weight': 0.6})
('golden section search', 'combinatorial optimization', {'weight': 0.6})
('golden section search', "newton's method in optimization", {'weight': 0.6})
('golden section search', "brent's method", {'weight': 0.7})
('golden section search', 'matrix chain multiplication', {'weight': 0.6})
('golden section search', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('golden section search', 'dynamic time warping', {'weight': 0.6})
('golden section search', 'dynamic programming language', {'weight': 0.6})
('golden section search', 'call-by-need', {'weight': 0.6})
('golden section search', 'big-o notation', {'weight': 0.6})
('golden section search', 'comparison of optimization software', {'weight': 0.6})
('golden section search', 'quadratic programming', {'weight': 0.6})
('golden section search', 'common lisp', {'weight': 0.6})
('golden section search', 'barrier function', {'weight': 0.6})
('golden section search', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('golden section search', 'gradient descent', {'weight': 0.6})
('golden section search', 'patricia selinger', {'weight': 0.6})
('golden section search', 'discounting', {'weight': 0.6})
('golden section search', 'ronald l. rivest', {'weight': 0.6})
('golden section search', 'iterative method', {'weight': 0.6})
('golden section search', 'limited-memory bfgs', {'weight': 0.6})
('golden section search', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('golden section search', 'longest common substring problem', {'weight': 0.6})
('golden section search', 'clifford stein', {'weight': 0.6})
('golden section search', 'computer chess', {'weight': 0.6})
('golden section search', 'linear programming', {'weight': 0.6})
('golden section search', 'bitonic tour', {'weight': 0.6})
('golden section search', 'linear search problem', {'weight': 0.6})
('golden section search', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('golden section search', 'systems analysis', {'weight': 0.6})
('golden section search', 'capital (economics)', {'weight': 0.6})
('golden section search', 'levenshtein distance', {'weight': 0.6})
('golden section search', 'nonlinear programming', {'weight': 0.6})
('golden section search', 'fibonacci numbers', {'weight': 0.5})
('golden section search', 'computational complexity of mathematical operations', {'weight': 0.6})
('golden section search', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('golden section search', 'gradient', {'weight': 0.6})
('golden section search', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('golden section search', 'bulletin of the american mathematical society', {'weight': 0.6})
('golden section search', 'u.s. english', {'weight': 0.6})
('golden section search', 'refutation table', {'weight': 0.6})
('golden section search', 'heuristic algorithm', {'weight': 0.6})
('golden section search', 'successive linear programming', {'weight': 0.6})
('golden section search', 'optimal substructure', {'weight': 0.6})
('golden section search', 'programming language', {'weight': 0.6})
('golden section search', 'mergesort', {'weight': 0.6})
('golden section search', "dijkstra's algorithm", {'weight': 0.6})
('golden section search', 'subgradient method', {'weight': 0.6})
('golden section search', 'call-by-name', {'weight': 0.6})
('golden section search', 'longest increasing subsequence problem', {'weight': 0.6})
('golden section search', 'edward prescott', {'weight': 0.6})
('golden section search', 'exponential time', {'weight': 0.6})
('golden section search', 'principle of optimality', {'weight': 0.6})
('golden section search', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('golden section search', 'mathematical game', {'weight': 0.6})
('golden section search', 'nancy stokey', {'weight': 0.6})
('golden section search', 'approximation algorithm', {'weight': 0.6})
('golden section search', 'discrete-time', {'weight': 0.6})
('golden section search', 'cyk algorithm', {'weight': 0.6})
('golden section search', 'markov decision process', {'weight': 0.6})
('golden section search', "powell's method", {'weight': 0.6})
('golden section search', 'wolfe conditions', {'weight': 0.6})
('golden section search', 'convexity in economics', {'weight': 0.6})
('golden section search', 'transposition table', {'weight': 0.6})
('golden section search', 'economics', {'weight': 0.6})
('golden section search', 'backward induction', {'weight': 0.6})
('golden section search', 'golden section search', {'weight': 1})
('golden section search', 'edit distance', {'weight': 0.6})
('golden section search', 'tree structure', {'weight': 0.6})
('golden section search', 'exchange algorithm', {'weight': 0.6})
('golden section search', 'dover publications', {'weight': 0.6})
('golden section search', 'seam carving', {'weight': 0.6})
('golden section search', 'recursive least squares', {'weight': 0.6})
('golden section search', 'metaheuristic', {'weight': 0.6})
('golden section search', 'quasi-newton method', {'weight': 0.6})
('golden section search', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('golden section search', 'robert e. lucas', {'weight': 0.6})
('golden section search', 'non-convexity (economics)', {'weight': 0.6})
('golden section search', 'sr1 formula', {'weight': 0.6})
('golden section search', 'mathematical reviews', {'weight': 0.6})
('golden section search', 'puzzle', {'weight': 0.6})
('golden section search', 'associative array', {'weight': 0.6})
('golden section search', 'shortest path problem', {'weight': 0.6})
('golden section search', 'dynamic algorithm', {'weight': 0.6})
('golden section search', 'golden ratio', {'weight': 0.5})
('golden section search', 'augmented lagrangian method', {'weight': 0.6})
('golden section search', 'charles delisi', {'weight': 0.6})
('golden section search', 'greedy algorithm', {'weight': 0.6})
('golden section search', "karmarkar's algorithm", {'weight': 0.6})
('golden section search', 'lattice models', {'weight': 0.6})
('golden section search', 'utility', {'weight': 0.6})
('golden section search', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('golden section search', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('golden section search', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('golden section search', 'international standard book number', {'weight': 0.6})
('golden section search', 'undirected graph', {'weight': 0.6})
('golden section search', 'scheme (programming language)', {'weight': 0.6})
('golden section search', 'rna structure', {'weight': 0.6})
('golden section search', 'hanoi', {'weight': 0.6})
('golden section search', 'perl', {'weight': 0.6})
('golden section search', 'digital object identifier', {'weight': 0.6})
('golden section search', 'sequential quadratic programming', {'weight': 0.6})
('golden section search', "dinic's algorithm", {'weight': 0.6})
('golden section search', 'pseudo-polynomial time', {'weight': 0.6})
('golden section search', 'partition problem', {'weight': 0.6})
('golden section search', 'stochastic programming', {'weight': 0.6})
('golden section search', 'hill climbing', {'weight': 0.6})
('golden section search', 'top-down', {'weight': 0.6})
('golden section search', 'de boor algorithm', {'weight': 0.6})
('golden section search', 'fibonacci search technique', {'weight': 0.7})
('golden section search', 'optimization algorithm', {'weight': 0.6})
('golden section search', "kruskal's algorithm", {'weight': 0.6})
('golden section search', 'jacques philippe marie binet', {'weight': 0.6})
('golden section search', 'tabu search', {'weight': 0.6})
('golden section search', 'divide and conquer algorithm', {'weight': 0.6})
('golden section search', "johnson's algorithm", {'weight': 0.6})
('golden section search', 'evolutionary algorithm', {'weight': 0.6})
('golden section search', 'clique-width', {'weight': 0.6})
('golden section search', 'dynamic programming', {'weight': 0.6})
('golden section search', 'subroutine', {'weight': 0.6})
('golden section search', 'simulated annealing', {'weight': 0.6})
('golden section search', 'tower of hanoi', {'weight': 0.6})
('golden section search', 'branch and bound', {'weight': 0.6})
('golden section search', 'engineering', {'weight': 0.6})
('golden section search', 'matroid', {'weight': 0.6})
('golden section search', 'viterbi algorithm', {'weight': 0.6})
('golden section search', "lemke's algorithm", {'weight': 0.6})
('golden section search', 'simplex algorithm', {'weight': 0.6})
('golden section search', 'local search (optimization)', {'weight': 0.6})
('golden section search', 'hessian matrix', {'weight': 0.6})
('golden section search', 'ibm system r', {'weight': 0.6})
('golden section search', 'penalty method', {'weight': 0.6})
('golden section search', 'prolog', {'weight': 0.6})
('golden section search', 'time-invariant system', {'weight': 0.6})
('golden section search', 'criss-cross algorithm', {'weight': 0.6})
('golden section search', 'revised simplex algorithm', {'weight': 0.6})
('golden section search', 'the mathematical association of america', {'weight': 0.6})
('golden section search', 'line search', {'weight': 0.6})
('golden section search', 'j (programming language)', {'weight': 0.6})
('golden section search', 'word wrap', {'weight': 0.6})
('golden section search', 'subset sum problem', {'weight': 0.6})
('golden section search', 'integer programming', {'weight': 0.6})
('golden section search', 'nucleosome', {'weight': 0.6})
('golden section search', 'earley algorithm', {'weight': 0.6})
('golden section search', 'referential transparency (computer science)', {'weight': 0.6})
('golden section search', 'recursion', {'weight': 0.6})
('golden section search', 'mathematica', {'weight': 0.6})
('golden section search', 'quicksort', {'weight': 0.6})
('golden section search', 'recursion (computer science)', {'weight': 0.6})
('golden section search', 'checkerboard', {'weight': 0.6})
('golden section search', 'computer science', {'weight': 0.6})
('golden section search', 'brute-force search', {'weight': 0.6})
('golden section search', 'mathematics', {'weight': 0.6})
('golden section search', 'depth-first search', {'weight': 0.6})
('golden section search', 'top-down and bottom-up design', {'weight': 0.6})
('golden section search', 'correspondence problem', {'weight': 0.6})
('golden section search', 'transcription factor', {'weight': 0.6})
('golden section search', 'tree decomposition', {'weight': 0.6})
('golden section search', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('golden section search', 'structural alignment', {'weight': 0.6})
('golden section search', 'local convergence', {'weight': 0.6})
('golden section search', 'knapsack problem', {'weight': 0.6})
('golden section search', 'graph algorithm', {'weight': 0.6})
('golden section search', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('golden section search', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('golden section search', 'hidden markov model', {'weight': 0.6})
('golden section search', 'string (computer science)', {'weight': 0.6})
('golden section search', 'bioinformatics', {'weight': 0.6})
('golden section search', 'genetics', {'weight': 0.6})
('golden section search', 'mathematical optimization', {'weight': 0.6})
('golden section search', 'artificial neural networks', {'weight': 0.6})
('golden section search', 'introduction to algorithms', {'weight': 0.6})
('golden section search', 'thomas h. cormen', {'weight': 0.6})
('golden section search', 'music information retrieval', {'weight': 0.6})
('golden section search', 'beat (music)', {'weight': 0.6})
('golden section search', 'longest common subsequence problem', {'weight': 0.6})
('golden section search', 'convex minimization', {'weight': 0.6})
('golden section search', 'successive parabolic interpolation', {'weight': 0.6})
('golden section search', 'fibonacci sequence', {'weight': 0.6})
('golden section search', 'maximum subarray problem', {'weight': 0.6})
('golden section search', 'convex optimization', {'weight': 0.6})
('golden section search', 'memoization', {'weight': 0.6})
('golden section search', 'richard bellman', {'weight': 0.6})
('golden section search', 'exponential growth', {'weight': 0.6})
('golden section search', 'charles e. leiserson', {'weight': 0.6})
('golden section search', 'charles erwin wilson', {'weight': 0.6})
('golden section search', 'interval scheduling', {'weight': 0.6})
('golden section search', 'chart parser', {'weight': 0.6})
('golden section search', 'binary search', {'weight': 0.7})
('golden section search', 'travelling salesman problem', {'weight': 0.6})
('golden section search', 'bellman equation', {'weight': 0.6})
('tree structure', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('tree structure', 'photoshop', {'weight': 0.6})
('tree structure', 'sequence alignment', {'weight': 0.6})
('tree structure', 'flow network', {'weight': 0.6})
('tree structure', 'query', {'weight': 0.7})
('tree structure', 'ellipsoid method', {'weight': 0.6})
('tree structure', 'chain matrix multiplication', {'weight': 0.6})
('tree structure', 'ieee', {'weight': 0.6})
('tree structure', 'backtracking', {'weight': 0.6})
('tree structure', 'left child-right sibling binary tree', {'weight': 0.7})
('tree structure', 'nonlinear conjugate gradient method', {'weight': 0.6})
('tree structure', 'dynamic problem', {'weight': 0.6})
('tree structure', 'trust region', {'weight': 0.6})
('tree structure', 'function (mathematics)', {'weight': 0.6})
('tree structure', 'minimum spanning tree', {'weight': 0.6})
('tree structure', 'context-free grammar', {'weight': 0.6})
('tree structure', 'branch and cut', {'weight': 0.6})
('tree structure', 'state variable', {'weight': 0.6})
('tree structure', 'treewidth', {'weight': 0.6})
('tree structure', 'overlapping subproblem', {'weight': 0.6})
('tree structure', 'taylor & francis', {'weight': 0.6})
('tree structure', 'cutting-plane method', {'weight': 0.6})
('tree structure', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('tree structure', 'method of undetermined coefficients', {'weight': 0.6})
('tree structure', 'combinatorial optimization', {'weight': 0.6})
('tree structure', "newton's method in optimization", {'weight': 0.6})
('tree structure', 'matrix chain multiplication', {'weight': 0.6})
('tree structure', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('tree structure', 'dynamic time warping', {'weight': 0.6})
('tree structure', 'dynamic programming language', {'weight': 0.6})
('tree structure', 'call-by-need', {'weight': 0.6})
('tree structure', 'big-o notation', {'weight': 0.6})
('tree structure', 'comparison of optimization software', {'weight': 0.6})
('tree structure', 'quadratic programming', {'weight': 0.6})
('tree structure', 'common lisp', {'weight': 0.6})
('tree structure', 'barrier function', {'weight': 0.6})
('tree structure', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('tree structure', 'gradient descent', {'weight': 0.6})
('tree structure', 'patricia selinger', {'weight': 0.6})
('tree structure', 'discounting', {'weight': 0.6})
('tree structure', 'ronald l. rivest', {'weight': 0.6})
('tree structure', 'iterative method', {'weight': 0.6})
('tree structure', 'limited-memory bfgs', {'weight': 0.6})
('tree structure', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('tree structure', 'clustering', {'weight': 0.7})
('tree structure', 'longest common substring problem', {'weight': 0.6})
('tree structure', 'clifford stein', {'weight': 0.6})
('tree structure', 'computer chess', {'weight': 0.6})
('tree structure', 'linear programming', {'weight': 0.6})
('tree structure', 'bitonic tour', {'weight': 0.6})
('tree structure', 'linear search problem', {'weight': 0.6})
('tree structure', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('tree structure', 'systems analysis', {'weight': 0.6})
('tree structure', 'capital (economics)', {'weight': 0.6})
('tree structure', 'levenshtein distance', {'weight': 0.6})
('tree structure', 'nonlinear programming', {'weight': 0.6})
('tree structure', 'computational complexity of mathematical operations', {'weight': 0.6})
('tree structure', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('tree structure', 'gradient', {'weight': 0.6})
('tree structure', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('tree structure', 'bulletin of the american mathematical society', {'weight': 0.6})
('tree structure', 'u.s. english', {'weight': 0.6})
('tree structure', 'refutation table', {'weight': 0.6})
('tree structure', 'data drilling', {'weight': 0.7})
('tree structure', 'heuristic algorithm', {'weight': 0.6})
('tree structure', 'successive linear programming', {'weight': 0.6})
('tree structure', 'optimal substructure', {'weight': 0.6})
('tree structure', 'programming language', {'weight': 0.6})
('tree structure', 'mergesort', {'weight': 0.6})
('tree structure', "dijkstra's algorithm", {'weight': 0.6})
('tree structure', 'subgradient method', {'weight': 0.6})
('tree structure', 'call-by-name', {'weight': 0.6})
('tree structure', 'longest increasing subsequence problem', {'weight': 0.6})
('tree structure', 'edward prescott', {'weight': 0.6})
('tree structure', 'exponential time', {'weight': 0.6})
('tree structure', 'principle of optimality', {'weight': 0.6})
('tree structure', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('tree structure', 'mathematical game', {'weight': 0.6})
('tree structure', 'nancy stokey', {'weight': 0.6})
('tree structure', 'tree testing (information architecture)', {'weight': 0.7})
('tree structure', 'approximation algorithm', {'weight': 0.6})
('tree structure', 'discrete-time', {'weight': 0.6})
('tree structure', 'cyk algorithm', {'weight': 0.6})
('tree structure', 'markov decision process', {'weight': 0.6})
('tree structure', 'ibm system r', {'weight': 0.6})
('tree structure', 'wolfe conditions', {'weight': 0.6})
('tree structure', 'convexity in economics', {'weight': 0.6})
('tree structure', 'transposition table', {'weight': 0.6})
('tree structure', 'economics', {'weight': 0.6})
('tree structure', 'backward induction', {'weight': 0.6})
('tree structure', 'golden section search', {'weight': 0.6})
('tree structure', 'edit distance', {'weight': 0.6})
('tree structure', 'tree structure', {'weight': 1})
('tree structure', 'exchange algorithm', {'weight': 0.6})
('tree structure', 'dover publications', {'weight': 0.6})
('tree structure', 'seam carving', {'weight': 0.6})
('tree structure', 'recursive least squares', {'weight': 0.6})
('tree structure', 'metaheuristic', {'weight': 0.6})
('tree structure', 'quasi-newton method', {'weight': 0.6})
('tree structure', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('tree structure', 'robert e. lucas', {'weight': 0.6})
('tree structure', 'non-convexity (economics)', {'weight': 0.6})
('tree structure', 'sr1 formula', {'weight': 0.6})
('tree structure', 'dancing trees', {'weight': 0.7})
('tree structure', 'mathematical reviews', {'weight': 0.6})
('tree structure', 'puzzle', {'weight': 0.6})
('tree structure', 'associative array', {'weight': 0.6})
('tree structure', 'shortest path problem', {'weight': 0.6})
('tree structure', 'dynamic algorithm', {'weight': 0.6})
('tree structure', 'augmented lagrangian method', {'weight': 0.6})
('tree structure', 'charles delisi', {'weight': 0.6})
('tree structure', 'greedy algorithm', {'weight': 0.6})
('tree structure', "karmarkar's algorithm", {'weight': 0.6})
('tree structure', 'lattice models', {'weight': 0.6})
('tree structure', 'utility', {'weight': 0.6})
('tree structure', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('tree structure', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('tree structure', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('tree structure', 'international standard book number', {'weight': 0.6})
('tree structure', 'undirected graph', {'weight': 0.6})
('tree structure', 'scheme (programming language)', {'weight': 0.6})
('tree structure', 'rna structure', {'weight': 0.6})
('tree structure', 'hanoi', {'weight': 0.6})
('tree structure', 'perl', {'weight': 0.6})
('tree structure', 'digital object identifier', {'weight': 0.6})
('tree structure', 'sequential quadratic programming', {'weight': 0.6})
('tree structure', "dinic's algorithm", {'weight': 0.6})
('tree structure', 'pseudo-polynomial time', {'weight': 0.6})
('tree structure', 'partition problem', {'weight': 0.6})
('tree structure', 'stochastic programming', {'weight': 0.6})
('tree structure', 'hill climbing', {'weight': 0.6})
('tree structure', 'top-down', {'weight': 0.6})
('tree structure', 'de boor algorithm', {'weight': 0.6})
('tree structure', 'optimization algorithm', {'weight': 0.6})
('tree structure', "kruskal's algorithm", {'weight': 0.6})
('tree structure', 'jacques philippe marie binet', {'weight': 0.6})
('tree structure', 'tabu search', {'weight': 0.6})
('tree structure', 'divide and conquer algorithm', {'weight': 0.6})
('tree structure', "johnson's algorithm", {'weight': 0.6})
('tree structure', 'evolutionary algorithm', {'weight': 0.6})
('tree structure', 'clique-width', {'weight': 0.6})
('tree structure', 'b-tree', {'weight': 0.7})
('tree structure', 'dynamic programming', {'weight': 0.6})
('tree structure', 'subroutine', {'weight': 0.6})
('tree structure', 'simulated annealing', {'weight': 0.6})
('tree structure', 'tower of hanoi', {'weight': 0.6})
('tree structure', 'branch and bound', {'weight': 0.6})
('tree structure', 'engineering', {'weight': 0.6})
('tree structure', 'matroid', {'weight': 0.6})
('tree structure', 'viterbi algorithm', {'weight': 0.6})
('tree structure', "lemke's algorithm", {'weight': 0.6})
('tree structure', 'simplex algorithm', {'weight': 0.6})
('tree structure', 'local search (optimization)', {'weight': 0.6})
('tree structure', 'hessian matrix', {'weight': 0.6})
('tree structure', 'tree (graph theory)', {'weight': 0.7})
('tree structure', 'trees (data structures)', {'weight': 0.5})
('tree structure', 'penalty method', {'weight': 0.6})
('tree structure', 'prolog', {'weight': 0.6})
('tree structure', 'time-invariant system', {'weight': 0.6})
('tree structure', 'criss-cross algorithm', {'weight': 0.6})
('tree structure', 'decision tree', {'weight': 0.7})
('tree structure', 'revised simplex algorithm', {'weight': 0.6})
('tree structure', 'the mathematical association of america', {'weight': 0.6})
('tree structure', 'line search', {'weight': 0.6})
('tree structure', 'j (programming language)', {'weight': 0.6})
('tree structure', 'word wrap', {'weight': 0.6})
('tree structure', "powell's method", {'weight': 0.6})
('tree structure', 'subset sum problem', {'weight': 0.6})
('tree structure', 'integer programming', {'weight': 0.6})
('tree structure', 'nucleosome', {'weight': 0.6})
('tree structure', 'earley algorithm', {'weight': 0.6})
('tree structure', 'referential transparency (computer science)', {'weight': 0.6})
('tree structure', 'tree (data structure)', {'weight': 0.7})
('tree structure', 'recursion', {'weight': 0.6})
('tree structure', 'mathematica', {'weight': 0.6})
('tree structure', 'quicksort', {'weight': 0.6})
('tree structure', 'tree (set theory)', {'weight': 0.7})
('tree structure', 'recursion (computer science)', {'weight': 0.6})
('tree structure', 'checkerboard', {'weight': 0.6})
('tree structure', 'computer science', {'weight': 0.6})
('tree structure', 'brute-force search', {'weight': 0.6})
('tree structure', 'mathematics', {'weight': 0.6})
('tree structure', 'depth-first search', {'weight': 0.6})
('tree structure', 'top-down and bottom-up design', {'weight': 0.6})
('tree structure', 'correspondence problem', {'weight': 0.6})
('tree structure', 'transcription factor', {'weight': 0.6})
('tree structure', 'tree decomposition', {'weight': 0.6})
('tree structure', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('tree structure', 'structural alignment', {'weight': 0.6})
('tree structure', 'local convergence', {'weight': 0.6})
('tree structure', 'knapsack problem', {'weight': 0.6})
('tree structure', 'graph algorithm', {'weight': 0.6})
('tree structure', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('tree structure', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('tree structure', 'hidden markov model', {'weight': 0.6})
('tree structure', 'string (computer science)', {'weight': 0.6})
('tree structure', 'bioinformatics', {'weight': 0.6})
('tree structure', 'genetics', {'weight': 0.6})
('tree structure', 'mathematical optimization', {'weight': 0.6})
('tree structure', 'artificial neural networks', {'weight': 0.6})
('tree structure', 'introduction to algorithms', {'weight': 0.6})
('tree structure', 'thomas h. cormen', {'weight': 0.6})
('tree structure', 'music information retrieval', {'weight': 0.6})
('tree structure', 'beat (music)', {'weight': 0.6})
('tree structure', 'longest common subsequence problem', {'weight': 0.6})
('tree structure', 'convex minimization', {'weight': 0.6})
('tree structure', 'successive parabolic interpolation', {'weight': 0.6})
('tree structure', 'fibonacci sequence', {'weight': 0.6})
('tree structure', 'maximum subarray problem', {'weight': 0.6})
('tree structure', 'convex optimization', {'weight': 0.6})
('tree structure', 'memoization', {'weight': 0.6})
('tree structure', 'hierarchical model', {'weight': 0.7})
('tree structure', 'richard bellman', {'weight': 0.6})
('tree structure', 'exponential growth', {'weight': 0.6})
('tree structure', 'charles e. leiserson', {'weight': 0.6})
('tree structure', 'charles erwin wilson', {'weight': 0.6})
('tree structure', 'interval scheduling', {'weight': 0.6})
('tree structure', 'chart parser', {'weight': 0.6})
('tree structure', 'travelling salesman problem', {'weight': 0.6})
('tree structure', 'bellman equation', {'weight': 0.6})
('sr1 formula', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('sr1 formula', 'photoshop', {'weight': 0.6})
('sr1 formula', 'sequence alignment', {'weight': 0.6})
('sr1 formula', 'flow network', {'weight': 0.6})
('sr1 formula', 'ellipsoid method', {'weight': 0.6})
('sr1 formula', 'chain matrix multiplication', {'weight': 0.6})
('sr1 formula', 'ieee', {'weight': 0.6})
('sr1 formula', 'backtracking', {'weight': 0.6})
('sr1 formula', 'nonlinear conjugate gradient method', {'weight': 0.6})
('sr1 formula', 'dynamic problem', {'weight': 0.6})
('sr1 formula', 'trust region', {'weight': 0.6})
('sr1 formula', 'function (mathematics)', {'weight': 0.6})
('sr1 formula', 'minimum spanning tree', {'weight': 0.6})
('sr1 formula', 'context-free grammar', {'weight': 0.6})
('sr1 formula', 'branch and cut', {'weight': 0.6})
('sr1 formula', 'state variable', {'weight': 0.6})
('sr1 formula', 'treewidth', {'weight': 0.6})
('sr1 formula', 'overlapping subproblem', {'weight': 0.6})
('sr1 formula', 'taylor & francis', {'weight': 0.6})
('sr1 formula', 'cutting-plane method', {'weight': 0.6})
('sr1 formula', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('sr1 formula', 'method of undetermined coefficients', {'weight': 0.6})
('sr1 formula', 'combinatorial optimization', {'weight': 0.6})
('sr1 formula', "newton's method in optimization", {'weight': 0.6})
('sr1 formula', 'matrix chain multiplication', {'weight': 0.6})
('sr1 formula', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('sr1 formula', 'dynamic time warping', {'weight': 0.6})
('sr1 formula', 'dynamic programming language', {'weight': 0.6})
('sr1 formula', 'call-by-need', {'weight': 0.6})
('sr1 formula', 'big-o notation', {'weight': 0.6})
('sr1 formula', 'comparison of optimization software', {'weight': 0.6})
('sr1 formula', 'quadratic programming', {'weight': 0.6})
('sr1 formula', 'common lisp', {'weight': 0.6})
('sr1 formula', 'barrier function', {'weight': 0.6})
('sr1 formula', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('sr1 formula', 'gradient descent', {'weight': 0.6})
('sr1 formula', 'patricia selinger', {'weight': 0.6})
('sr1 formula', 'discounting', {'weight': 0.6})
('sr1 formula', 'ronald l. rivest', {'weight': 0.6})
('sr1 formula', 'iterative method', {'weight': 0.6})
('sr1 formula', 'limited-memory bfgs', {'weight': 0.6})
('sr1 formula', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('sr1 formula', 'longest common substring problem', {'weight': 0.6})
('sr1 formula', 'clifford stein', {'weight': 0.6})
('sr1 formula', 'computer chess', {'weight': 0.6})
('sr1 formula', 'linear programming', {'weight': 0.6})
('sr1 formula', 'bitonic tour', {'weight': 0.6})
('sr1 formula', 'linear search problem', {'weight': 0.6})
('sr1 formula', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('sr1 formula', 'systems analysis', {'weight': 0.6})
('sr1 formula', 'capital (economics)', {'weight': 0.6})
('sr1 formula', 'levenshtein distance', {'weight': 0.6})
('sr1 formula', 'nonlinear programming', {'weight': 0.6})
('sr1 formula', 'computational complexity of mathematical operations', {'weight': 0.6})
('sr1 formula', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('sr1 formula', 'gradient', {'weight': 0.6})
('sr1 formula', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('sr1 formula', 'bulletin of the american mathematical society', {'weight': 0.6})
('sr1 formula', 'u.s. english', {'weight': 0.6})
('sr1 formula', 'refutation table', {'weight': 0.6})
('sr1 formula', 'heuristic algorithm', {'weight': 0.6})
('sr1 formula', 'successive linear programming', {'weight': 0.6})
('sr1 formula', 'optimal substructure', {'weight': 0.6})
('sr1 formula', 'programming language', {'weight': 0.6})
('sr1 formula', 'mergesort', {'weight': 0.6})
('sr1 formula', "dijkstra's algorithm", {'weight': 0.6})
('sr1 formula', 'subgradient method', {'weight': 0.6})
('sr1 formula', 'call-by-name', {'weight': 0.6})
('sr1 formula', 'longest increasing subsequence problem', {'weight': 0.6})
('sr1 formula', 'edward prescott', {'weight': 0.6})
('sr1 formula', 'exponential time', {'weight': 0.6})
('sr1 formula', 'principle of optimality', {'weight': 0.6})
('sr1 formula', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('sr1 formula', 'mathematical game', {'weight': 0.6})
('sr1 formula', 'nancy stokey', {'weight': 0.6})
('sr1 formula', 'approximation algorithm', {'weight': 0.6})
('sr1 formula', 'discrete-time', {'weight': 0.6})
('sr1 formula', 'cyk algorithm', {'weight': 0.6})
('sr1 formula', 'markov decision process', {'weight': 0.6})
('sr1 formula', "powell's method", {'weight': 0.6})
('sr1 formula', 'wolfe conditions', {'weight': 0.6})
('sr1 formula', 'convexity in economics', {'weight': 0.6})
('sr1 formula', 'transposition table', {'weight': 0.6})
('sr1 formula', 'economics', {'weight': 0.6})
('sr1 formula', 'backward induction', {'weight': 0.6})
('sr1 formula', 'golden section search', {'weight': 0.6})
('sr1 formula', 'edit distance', {'weight': 0.6})
('sr1 formula', 'tree structure', {'weight': 0.6})
('sr1 formula', 'exchange algorithm', {'weight': 0.6})
('sr1 formula', 'dover publications', {'weight': 0.6})
('sr1 formula', 'seam carving', {'weight': 0.6})
('sr1 formula', 'recursive least squares', {'weight': 0.6})
('sr1 formula', 'metaheuristic', {'weight': 0.6})
('sr1 formula', 'quasi-newton method', {'weight': 0.6})
('sr1 formula', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('sr1 formula', 'robert e. lucas', {'weight': 0.6})
('sr1 formula', 'non-convexity (economics)', {'weight': 0.6})
('sr1 formula', 'sr1 formula', {'weight': 1})
('sr1 formula', 'mathematical reviews', {'weight': 0.6})
('sr1 formula', 'puzzle', {'weight': 0.6})
('sr1 formula', 'associative array', {'weight': 0.6})
('sr1 formula', 'shortest path problem', {'weight': 0.6})
('sr1 formula', 'dynamic algorithm', {'weight': 0.6})
('sr1 formula', 'augmented lagrangian method', {'weight': 0.6})
('sr1 formula', 'charles delisi', {'weight': 0.6})
('sr1 formula', 'greedy algorithm', {'weight': 0.6})
('sr1 formula', "karmarkar's algorithm", {'weight': 0.6})
('sr1 formula', 'lattice models', {'weight': 0.6})
('sr1 formula', 'utility', {'weight': 0.6})
('sr1 formula', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('sr1 formula', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('sr1 formula', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('sr1 formula', 'international standard book number', {'weight': 0.6})
('sr1 formula', 'undirected graph', {'weight': 0.6})
('sr1 formula', 'scheme (programming language)', {'weight': 0.6})
('sr1 formula', 'rna structure', {'weight': 0.6})
('sr1 formula', 'hanoi', {'weight': 0.6})
('sr1 formula', 'perl', {'weight': 0.6})
('sr1 formula', 'digital object identifier', {'weight': 0.6})
('sr1 formula', 'sequential quadratic programming', {'weight': 0.6})
('sr1 formula', "dinic's algorithm", {'weight': 0.6})
('sr1 formula', 'pseudo-polynomial time', {'weight': 0.6})
('sr1 formula', 'partition problem', {'weight': 0.6})
('sr1 formula', 'stochastic programming', {'weight': 0.6})
('sr1 formula', 'hill climbing', {'weight': 0.6})
('sr1 formula', 'top-down', {'weight': 0.6})
('sr1 formula', 'de boor algorithm', {'weight': 0.6})
('sr1 formula', 'optimization algorithm', {'weight': 0.6})
('sr1 formula', "kruskal's algorithm", {'weight': 0.6})
('sr1 formula', 'jacques philippe marie binet', {'weight': 0.6})
('sr1 formula', 'tabu search', {'weight': 0.6})
('sr1 formula', 'divide and conquer algorithm', {'weight': 0.6})
('sr1 formula', "johnson's algorithm", {'weight': 0.6})
('sr1 formula', 'evolutionary algorithm', {'weight': 0.6})
('sr1 formula', 'clique-width', {'weight': 0.6})
('sr1 formula', 'dynamic programming', {'weight': 0.6})
('sr1 formula', 'subroutine', {'weight': 0.6})
('sr1 formula', 'simulated annealing', {'weight': 0.6})
('sr1 formula', 'tower of hanoi', {'weight': 0.6})
('sr1 formula', 'branch and bound', {'weight': 0.6})
('sr1 formula', 'engineering', {'weight': 0.6})
('sr1 formula', 'matroid', {'weight': 0.6})
('sr1 formula', 'viterbi algorithm', {'weight': 0.6})
('sr1 formula', "lemke's algorithm", {'weight': 0.6})
('sr1 formula', 'simplex algorithm', {'weight': 0.6})
('sr1 formula', 'local search (optimization)', {'weight': 0.6})
('sr1 formula', 'hessian matrix', {'weight': 0.6})
('sr1 formula', 'ibm system r', {'weight': 0.6})
('sr1 formula', 'penalty method', {'weight': 0.6})
('sr1 formula', 'prolog', {'weight': 0.6})
('sr1 formula', 'time-invariant system', {'weight': 0.6})
('sr1 formula', 'criss-cross algorithm', {'weight': 0.6})
('sr1 formula', 'revised simplex algorithm', {'weight': 0.6})
('sr1 formula', 'the mathematical association of america', {'weight': 0.6})
('sr1 formula', 'line search', {'weight': 0.6})
('sr1 formula', 'j (programming language)', {'weight': 0.6})
('sr1 formula', 'word wrap', {'weight': 0.6})
('sr1 formula', 'subset sum problem', {'weight': 0.6})
('sr1 formula', 'integer programming', {'weight': 0.6})
('sr1 formula', 'nucleosome', {'weight': 0.6})
('sr1 formula', 'earley algorithm', {'weight': 0.6})
('sr1 formula', 'referential transparency (computer science)', {'weight': 0.6})
('sr1 formula', 'recursion', {'weight': 0.6})
('sr1 formula', 'mathematica', {'weight': 0.6})
('sr1 formula', 'quicksort', {'weight': 0.6})
('sr1 formula', 'recursion (computer science)', {'weight': 0.6})
('sr1 formula', 'checkerboard', {'weight': 0.6})
('sr1 formula', 'computer science', {'weight': 0.6})
('sr1 formula', 'brute-force search', {'weight': 0.6})
('sr1 formula', 'mathematics', {'weight': 0.6})
('sr1 formula', 'depth-first search', {'weight': 0.6})
('sr1 formula', 'top-down and bottom-up design', {'weight': 0.6})
('sr1 formula', 'correspondence problem', {'weight': 0.6})
('sr1 formula', 'transcription factor', {'weight': 0.6})
('sr1 formula', 'tree decomposition', {'weight': 0.6})
('sr1 formula', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('sr1 formula', 'structural alignment', {'weight': 0.6})
('sr1 formula', 'local convergence', {'weight': 0.6})
('sr1 formula', 'knapsack problem', {'weight': 0.6})
('sr1 formula', 'graph algorithm', {'weight': 0.6})
('sr1 formula', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('sr1 formula', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('sr1 formula', 'hidden markov model', {'weight': 0.6})
('sr1 formula', 'string (computer science)', {'weight': 0.6})
('sr1 formula', 'bioinformatics', {'weight': 0.6})
('sr1 formula', 'genetics', {'weight': 0.6})
('sr1 formula', 'mathematical optimization', {'weight': 0.6})
('sr1 formula', 'artificial neural networks', {'weight': 0.6})
('sr1 formula', 'introduction to algorithms', {'weight': 0.6})
('sr1 formula', 'thomas h. cormen', {'weight': 0.6})
('sr1 formula', 'music information retrieval', {'weight': 0.6})
('sr1 formula', 'beat (music)', {'weight': 0.6})
('sr1 formula', 'longest common subsequence problem', {'weight': 0.6})
('sr1 formula', 'convex minimization', {'weight': 0.6})
('sr1 formula', 'successive parabolic interpolation', {'weight': 0.6})
('sr1 formula', 'fibonacci sequence', {'weight': 0.6})
('sr1 formula', 'maximum subarray problem', {'weight': 0.6})
('sr1 formula', 'convex optimization', {'weight': 0.6})
('sr1 formula', 'memoization', {'weight': 0.6})
('sr1 formula', 'richard bellman', {'weight': 0.6})
('sr1 formula', 'exponential growth', {'weight': 0.6})
('sr1 formula', 'charles e. leiserson', {'weight': 0.6})
('sr1 formula', 'charles erwin wilson', {'weight': 0.6})
('sr1 formula', 'interval scheduling', {'weight': 0.6})
('sr1 formula', 'chart parser', {'weight': 0.6})
('sr1 formula', 'travelling salesman problem', {'weight': 0.6})
('sr1 formula', 'bellman equation', {'weight': 0.6})
('augmented lagrangian method', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('augmented lagrangian method', 'photoshop', {'weight': 0.6})
('augmented lagrangian method', 'sequence alignment', {'weight': 0.6})
('augmented lagrangian method', 'flow network', {'weight': 0.6})
('augmented lagrangian method', 'ellipsoid method', {'weight': 0.6})
('augmented lagrangian method', 'chain matrix multiplication', {'weight': 0.6})
('augmented lagrangian method', 'ieee', {'weight': 0.6})
('augmented lagrangian method', 'backtracking', {'weight': 0.6})
('augmented lagrangian method', 'nonlinear conjugate gradient method', {'weight': 0.6})
('augmented lagrangian method', 'dynamic problem', {'weight': 0.6})
('augmented lagrangian method', 'trust region', {'weight': 0.6})
('augmented lagrangian method', 'function (mathematics)', {'weight': 0.6})
('augmented lagrangian method', 'minimum spanning tree', {'weight': 0.6})
('augmented lagrangian method', 'context-free grammar', {'weight': 0.6})
('augmented lagrangian method', 'branch and cut', {'weight': 0.6})
('augmented lagrangian method', 'state variable', {'weight': 0.6})
('augmented lagrangian method', 'treewidth', {'weight': 0.6})
('augmented lagrangian method', 'overlapping subproblem', {'weight': 0.6})
('augmented lagrangian method', 'taylor & francis', {'weight': 0.6})
('augmented lagrangian method', 'cutting-plane method', {'weight': 0.6})
('augmented lagrangian method', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('augmented lagrangian method', 'method of undetermined coefficients', {'weight': 0.6})
('augmented lagrangian method', 'combinatorial optimization', {'weight': 0.6})
('augmented lagrangian method', "newton's method in optimization", {'weight': 0.6})
('augmented lagrangian method', 'matrix chain multiplication', {'weight': 0.6})
('augmented lagrangian method', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('augmented lagrangian method', 'dynamic time warping', {'weight': 0.6})
('augmented lagrangian method', 'dynamic programming language', {'weight': 0.6})
('augmented lagrangian method', 'call-by-need', {'weight': 0.6})
('augmented lagrangian method', 'big-o notation', {'weight': 0.6})
('augmented lagrangian method', 'comparison of optimization software', {'weight': 0.6})
('augmented lagrangian method', 'quadratic programming', {'weight': 0.6})
('augmented lagrangian method', 'common lisp', {'weight': 0.6})
('augmented lagrangian method', 'barrier function', {'weight': 0.6})
('augmented lagrangian method', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('augmented lagrangian method', 'gradient descent', {'weight': 0.6})
('augmented lagrangian method', 'patricia selinger', {'weight': 0.6})
('augmented lagrangian method', 'discounting', {'weight': 0.6})
('augmented lagrangian method', 'ronald l. rivest', {'weight': 0.6})
('augmented lagrangian method', 'iterative method', {'weight': 0.6})
('augmented lagrangian method', 'limited-memory bfgs', {'weight': 0.6})
('augmented lagrangian method', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('augmented lagrangian method', 'longest common substring problem', {'weight': 0.6})
('augmented lagrangian method', 'clifford stein', {'weight': 0.6})
('augmented lagrangian method', 'computer chess', {'weight': 0.6})
('augmented lagrangian method', 'linear programming', {'weight': 0.6})
('augmented lagrangian method', 'bitonic tour', {'weight': 0.6})
('augmented lagrangian method', 'linear search problem', {'weight': 0.6})
('augmented lagrangian method', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('augmented lagrangian method', 'systems analysis', {'weight': 0.6})
('augmented lagrangian method', 'capital (economics)', {'weight': 0.6})
('augmented lagrangian method', 'levenshtein distance', {'weight': 0.6})
('augmented lagrangian method', 'nonlinear programming', {'weight': 0.6})
('augmented lagrangian method', 'computational complexity of mathematical operations', {'weight': 0.6})
('augmented lagrangian method', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('augmented lagrangian method', 'gradient', {'weight': 0.6})
('augmented lagrangian method', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('augmented lagrangian method', 'bulletin of the american mathematical society', {'weight': 0.6})
('augmented lagrangian method', 'u.s. english', {'weight': 0.6})
('augmented lagrangian method', 'refutation table', {'weight': 0.6})
('augmented lagrangian method', 'heuristic algorithm', {'weight': 0.6})
('augmented lagrangian method', 'successive linear programming', {'weight': 0.6})
('augmented lagrangian method', 'optimal substructure', {'weight': 0.6})
('augmented lagrangian method', 'programming language', {'weight': 0.6})
('augmented lagrangian method', 'mergesort', {'weight': 0.6})
('augmented lagrangian method', "dijkstra's algorithm", {'weight': 0.6})
('augmented lagrangian method', 'subgradient method', {'weight': 0.6})
('augmented lagrangian method', 'call-by-name', {'weight': 0.6})
('augmented lagrangian method', 'longest increasing subsequence problem', {'weight': 0.6})
('augmented lagrangian method', 'edward prescott', {'weight': 0.6})
('augmented lagrangian method', 'exponential time', {'weight': 0.6})
('augmented lagrangian method', 'principle of optimality', {'weight': 0.6})
('augmented lagrangian method', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('augmented lagrangian method', 'mathematical game', {'weight': 0.6})
('augmented lagrangian method', 'nancy stokey', {'weight': 0.6})
('augmented lagrangian method', 'approximation algorithm', {'weight': 0.6})
('augmented lagrangian method', 'discrete-time', {'weight': 0.6})
('augmented lagrangian method', 'cyk algorithm', {'weight': 0.6})
('augmented lagrangian method', 'markov decision process', {'weight': 0.6})
('augmented lagrangian method', "powell's method", {'weight': 0.6})
('augmented lagrangian method', 'wolfe conditions', {'weight': 0.6})
('augmented lagrangian method', 'convexity in economics', {'weight': 0.6})
('augmented lagrangian method', 'transposition table', {'weight': 0.6})
('augmented lagrangian method', 'economics', {'weight': 0.6})
('augmented lagrangian method', 'backward induction', {'weight': 0.6})
('augmented lagrangian method', 'golden section search', {'weight': 0.6})
('augmented lagrangian method', 'edit distance', {'weight': 0.6})
('augmented lagrangian method', 'tree structure', {'weight': 0.6})
('augmented lagrangian method', 'exchange algorithm', {'weight': 0.6})
('augmented lagrangian method', 'dover publications', {'weight': 0.6})
('augmented lagrangian method', 'seam carving', {'weight': 0.6})
('augmented lagrangian method', 'recursive least squares', {'weight': 0.6})
('augmented lagrangian method', 'metaheuristic', {'weight': 0.6})
('augmented lagrangian method', 'quasi-newton method', {'weight': 0.6})
('augmented lagrangian method', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('augmented lagrangian method', 'robert e. lucas', {'weight': 0.6})
('augmented lagrangian method', 'non-convexity (economics)', {'weight': 0.6})
('augmented lagrangian method', 'sr1 formula', {'weight': 0.6})
('augmented lagrangian method', 'mathematical reviews', {'weight': 0.6})
('augmented lagrangian method', 'puzzle', {'weight': 0.6})
('augmented lagrangian method', 'associative array', {'weight': 0.6})
('augmented lagrangian method', 'shortest path problem', {'weight': 0.6})
('augmented lagrangian method', 'dynamic algorithm', {'weight': 0.6})
('augmented lagrangian method', 'augmented lagrangian method', {'weight': 1})
('augmented lagrangian method', 'charles delisi', {'weight': 0.6})
('augmented lagrangian method', 'greedy algorithm', {'weight': 0.6})
('augmented lagrangian method', "karmarkar's algorithm", {'weight': 0.6})
('augmented lagrangian method', 'lattice models', {'weight': 0.6})
('augmented lagrangian method', 'utility', {'weight': 0.6})
('augmented lagrangian method', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('augmented lagrangian method', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('augmented lagrangian method', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('augmented lagrangian method', 'international standard book number', {'weight': 0.6})
('augmented lagrangian method', 'undirected graph', {'weight': 0.6})
('augmented lagrangian method', 'scheme (programming language)', {'weight': 0.6})
('augmented lagrangian method', 'rna structure', {'weight': 0.6})
('augmented lagrangian method', 'hanoi', {'weight': 0.6})
('augmented lagrangian method', 'perl', {'weight': 0.6})
('augmented lagrangian method', 'digital object identifier', {'weight': 0.6})
('augmented lagrangian method', 'sequential quadratic programming', {'weight': 0.6})
('augmented lagrangian method', "dinic's algorithm", {'weight': 0.6})
('augmented lagrangian method', 'pseudo-polynomial time', {'weight': 0.6})
('augmented lagrangian method', 'partition problem', {'weight': 0.6})
('augmented lagrangian method', 'stochastic programming', {'weight': 0.6})
('augmented lagrangian method', 'hill climbing', {'weight': 0.6})
('augmented lagrangian method', 'top-down', {'weight': 0.6})
('augmented lagrangian method', 'de boor algorithm', {'weight': 0.6})
('augmented lagrangian method', 'optimization algorithm', {'weight': 0.6})
('augmented lagrangian method', "kruskal's algorithm", {'weight': 0.6})
('augmented lagrangian method', 'jacques philippe marie binet', {'weight': 0.6})
('augmented lagrangian method', 'tabu search', {'weight': 0.6})
('augmented lagrangian method', 'divide and conquer algorithm', {'weight': 0.6})
('augmented lagrangian method', "johnson's algorithm", {'weight': 0.6})
('augmented lagrangian method', 'evolutionary algorithm', {'weight': 0.6})
('augmented lagrangian method', 'clique-width', {'weight': 0.6})
('augmented lagrangian method', 'dynamic programming', {'weight': 0.6})
('augmented lagrangian method', 'subroutine', {'weight': 0.6})
('augmented lagrangian method', 'simulated annealing', {'weight': 0.6})
('augmented lagrangian method', 'tower of hanoi', {'weight': 0.6})
('augmented lagrangian method', 'branch and bound', {'weight': 0.6})
('augmented lagrangian method', 'engineering', {'weight': 0.6})
('augmented lagrangian method', 'matroid', {'weight': 0.6})
('augmented lagrangian method', 'viterbi algorithm', {'weight': 0.6})
('augmented lagrangian method', "lemke's algorithm", {'weight': 0.6})
('augmented lagrangian method', 'simplex algorithm', {'weight': 0.6})
('augmented lagrangian method', 'local search (optimization)', {'weight': 0.6})
('augmented lagrangian method', 'hessian matrix', {'weight': 0.6})
('augmented lagrangian method', 'ibm system r', {'weight': 0.6})
('augmented lagrangian method', 'penalty method', {'weight': 0.6})
('augmented lagrangian method', 'prolog', {'weight': 0.6})
('augmented lagrangian method', 'time-invariant system', {'weight': 0.6})
('augmented lagrangian method', 'criss-cross algorithm', {'weight': 0.6})
('augmented lagrangian method', 'revised simplex algorithm', {'weight': 0.6})
('augmented lagrangian method', 'the mathematical association of america', {'weight': 0.6})
('augmented lagrangian method', 'line search', {'weight': 0.6})
('augmented lagrangian method', 'j (programming language)', {'weight': 0.6})
('augmented lagrangian method', 'word wrap', {'weight': 0.6})
('augmented lagrangian method', 'subset sum problem', {'weight': 0.6})
('augmented lagrangian method', 'integer programming', {'weight': 0.6})
('augmented lagrangian method', 'nucleosome', {'weight': 0.6})
('augmented lagrangian method', 'earley algorithm', {'weight': 0.6})
('augmented lagrangian method', 'referential transparency (computer science)', {'weight': 0.6})
('augmented lagrangian method', 'recursion', {'weight': 0.6})
('augmented lagrangian method', 'mathematica', {'weight': 0.6})
('augmented lagrangian method', 'quicksort', {'weight': 0.6})
('augmented lagrangian method', 'recursion (computer science)', {'weight': 0.6})
('augmented lagrangian method', 'checkerboard', {'weight': 0.6})
('augmented lagrangian method', 'computer science', {'weight': 0.6})
('augmented lagrangian method', 'brute-force search', {'weight': 0.6})
('augmented lagrangian method', 'mathematics', {'weight': 0.6})
('augmented lagrangian method', 'depth-first search', {'weight': 0.6})
('augmented lagrangian method', 'top-down and bottom-up design', {'weight': 0.6})
('augmented lagrangian method', 'correspondence problem', {'weight': 0.6})
('augmented lagrangian method', 'transcription factor', {'weight': 0.6})
('augmented lagrangian method', 'tree decomposition', {'weight': 0.6})
('augmented lagrangian method', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('augmented lagrangian method', 'structural alignment', {'weight': 0.6})
('augmented lagrangian method', 'local convergence', {'weight': 0.6})
('augmented lagrangian method', 'knapsack problem', {'weight': 0.6})
('augmented lagrangian method', 'graph algorithm', {'weight': 0.6})
('augmented lagrangian method', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('augmented lagrangian method', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('augmented lagrangian method', 'hidden markov model', {'weight': 0.6})
('augmented lagrangian method', 'string (computer science)', {'weight': 0.6})
('augmented lagrangian method', 'bioinformatics', {'weight': 0.6})
('augmented lagrangian method', 'genetics', {'weight': 0.6})
('augmented lagrangian method', 'mathematical optimization', {'weight': 0.6})
('augmented lagrangian method', 'artificial neural networks', {'weight': 0.6})
('augmented lagrangian method', 'introduction to algorithms', {'weight': 0.6})
('augmented lagrangian method', 'thomas h. cormen', {'weight': 0.6})
('augmented lagrangian method', 'music information retrieval', {'weight': 0.6})
('augmented lagrangian method', 'beat (music)', {'weight': 0.6})
('augmented lagrangian method', 'longest common subsequence problem', {'weight': 0.6})
('augmented lagrangian method', 'convex minimization', {'weight': 0.6})
('augmented lagrangian method', 'successive parabolic interpolation', {'weight': 0.6})
('augmented lagrangian method', 'fibonacci sequence', {'weight': 0.6})
('augmented lagrangian method', 'maximum subarray problem', {'weight': 0.6})
('augmented lagrangian method', 'convex optimization', {'weight': 0.6})
('augmented lagrangian method', 'memoization', {'weight': 0.6})
('augmented lagrangian method', 'richard bellman', {'weight': 0.6})
('augmented lagrangian method', 'exponential growth', {'weight': 0.6})
('augmented lagrangian method', 'charles e. leiserson', {'weight': 0.6})
('augmented lagrangian method', 'charles erwin wilson', {'weight': 0.6})
('augmented lagrangian method', 'interval scheduling', {'weight': 0.6})
('augmented lagrangian method', 'chart parser', {'weight': 0.6})
('augmented lagrangian method', 'travelling salesman problem', {'weight': 0.6})
('augmented lagrangian method', 'bellman equation', {'weight': 0.6})
('optimal substructure', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('optimal substructure', 'photoshop', {'weight': 0.6})
('optimal substructure', 'sequence alignment', {'weight': 0.6})
('optimal substructure', 'flow network', {'weight': 0.6})
('optimal substructure', 'ellipsoid method', {'weight': 0.6})
('optimal substructure', 'chain matrix multiplication', {'weight': 0.6})
('optimal substructure', 'ieee', {'weight': 0.6})
('optimal substructure', 'backtracking', {'weight': 0.6})
('optimal substructure', 'nonlinear conjugate gradient method', {'weight': 0.6})
('optimal substructure', 'dynamic problem', {'weight': 0.6})
('optimal substructure', 'trust region', {'weight': 0.6})
('optimal substructure', 'function (mathematics)', {'weight': 0.6})
('optimal substructure', 'minimum spanning tree', {'weight': 0.6})
('optimal substructure', 'context-free grammar', {'weight': 0.6})
('optimal substructure', 'branch and cut', {'weight': 0.6})
('optimal substructure', 'state variable', {'weight': 0.6})
('optimal substructure', 'treewidth', {'weight': 0.6})
('optimal substructure', 'overlapping subproblem', {'weight': 0.6})
('optimal substructure', 'taylor & francis', {'weight': 0.6})
('optimal substructure', 'cutting-plane method', {'weight': 0.6})
('optimal substructure', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('optimal substructure', 'method of undetermined coefficients', {'weight': 0.6})
('optimal substructure', 'combinatorial optimization', {'weight': 0.6})
('optimal substructure', "newton's method in optimization", {'weight': 0.6})
('optimal substructure', 'matrix chain multiplication', {'weight': 0.6})
('optimal substructure', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('optimal substructure', 'dynamic time warping', {'weight': 0.6})
('optimal substructure', 'dynamic programming language', {'weight': 0.6})
('optimal substructure', 'call-by-need', {'weight': 0.6})
('optimal substructure', 'big-o notation', {'weight': 0.6})
('optimal substructure', 'comparison of optimization software', {'weight': 0.6})
('optimal substructure', 'quadratic programming', {'weight': 0.6})
('optimal substructure', 'common lisp', {'weight': 0.6})
('optimal substructure', 'barrier function', {'weight': 0.6})
('optimal substructure', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('optimal substructure', 'gradient descent', {'weight': 0.6})
('optimal substructure', 'patricia selinger', {'weight': 0.6})
('optimal substructure', 'discounting', {'weight': 0.6})
('optimal substructure', 'ronald l. rivest', {'weight': 0.6})
('optimal substructure', 'iterative method', {'weight': 0.6})
('optimal substructure', 'limited-memory bfgs', {'weight': 0.6})
('optimal substructure', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('optimal substructure', 'longest common substring problem', {'weight': 0.6})
('optimal substructure', 'clifford stein', {'weight': 0.6})
('optimal substructure', 'computer chess', {'weight': 0.6})
('optimal substructure', 'linear programming', {'weight': 0.6})
('optimal substructure', 'bitonic tour', {'weight': 0.6})
('optimal substructure', 'linear search problem', {'weight': 0.6})
('optimal substructure', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('optimal substructure', 'systems analysis', {'weight': 0.6})
('optimal substructure', 'capital (economics)', {'weight': 0.6})
('optimal substructure', 'levenshtein distance', {'weight': 0.6})
('optimal substructure', 'nonlinear programming', {'weight': 0.6})
('optimal substructure', 'computational complexity of mathematical operations', {'weight': 0.6})
('optimal substructure', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('optimal substructure', 'gradient', {'weight': 0.6})
('optimal substructure', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('optimal substructure', 'bulletin of the american mathematical society', {'weight': 0.6})
('optimal substructure', 'u.s. english', {'weight': 0.6})
('optimal substructure', 'refutation table', {'weight': 0.6})
('optimal substructure', 'heuristic algorithm', {'weight': 0.6})
('optimal substructure', 'successive linear programming', {'weight': 0.6})
('optimal substructure', 'optimal substructure', {'weight': 1})
('optimal substructure', 'programming language', {'weight': 0.6})
('optimal substructure', 'mergesort', {'weight': 0.6})
('optimal substructure', "dijkstra's algorithm", {'weight': 0.6})
('optimal substructure', 'subgradient method', {'weight': 0.6})
('optimal substructure', 'call-by-name', {'weight': 0.6})
('optimal substructure', 'longest increasing subsequence problem', {'weight': 0.6})
('optimal substructure', 'edward prescott', {'weight': 0.6})
('optimal substructure', 'exponential time', {'weight': 0.6})
('optimal substructure', 'principle of optimality', {'weight': 0.7})
('optimal substructure', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('optimal substructure', 'mathematical game', {'weight': 0.6})
('optimal substructure', 'nancy stokey', {'weight': 0.6})
('optimal substructure', 'approximation algorithm', {'weight': 0.6})
('optimal substructure', 'discrete-time', {'weight': 0.6})
('optimal substructure', 'cyk algorithm', {'weight': 0.6})
('optimal substructure', 'markov decision process', {'weight': 0.6})
('optimal substructure', "powell's method", {'weight': 0.6})
('optimal substructure', 'wolfe conditions', {'weight': 0.6})
('optimal substructure', 'convexity in economics', {'weight': 0.6})
('optimal substructure', 'transposition table', {'weight': 0.6})
('optimal substructure', 'economics', {'weight': 0.6})
('optimal substructure', 'backward induction', {'weight': 0.6})
('optimal substructure', 'golden section search', {'weight': 0.6})
('optimal substructure', 'edit distance', {'weight': 0.6})
('optimal substructure', 'tree structure', {'weight': 0.6})
('optimal substructure', 'exchange algorithm', {'weight': 0.6})
('optimal substructure', 'dover publications', {'weight': 0.6})
('optimal substructure', 'seam carving', {'weight': 0.6})
('optimal substructure', 'recursive least squares', {'weight': 0.6})
('optimal substructure', 'metaheuristic', {'weight': 0.6})
('optimal substructure', 'quasi-newton method', {'weight': 0.6})
('optimal substructure', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('optimal substructure', 'robert e. lucas', {'weight': 0.6})
('optimal substructure', 'non-convexity (economics)', {'weight': 0.6})
('optimal substructure', 'sr1 formula', {'weight': 0.6})
('optimal substructure', 'mathematical reviews', {'weight': 0.6})
('optimal substructure', 'puzzle', {'weight': 0.6})
('optimal substructure', 'associative array', {'weight': 0.6})
('optimal substructure', 'shortest path problem', {'weight': 0.6})
('optimal substructure', 'dynamic algorithm', {'weight': 0.6})
('optimal substructure', 'augmented lagrangian method', {'weight': 0.6})
('optimal substructure', 'charles delisi', {'weight': 0.6})
('optimal substructure', 'greedy algorithm', {'weight': 0.6})
('optimal substructure', "karmarkar's algorithm", {'weight': 0.6})
('optimal substructure', 'lattice models', {'weight': 0.6})
('optimal substructure', 'utility', {'weight': 0.6})
('optimal substructure', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('optimal substructure', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('optimal substructure', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('optimal substructure', 'international standard book number', {'weight': 0.6})
('optimal substructure', 'undirected graph', {'weight': 0.6})
('optimal substructure', 'scheme (programming language)', {'weight': 0.6})
('optimal substructure', 'rna structure', {'weight': 0.6})
('optimal substructure', 'hanoi', {'weight': 0.6})
('optimal substructure', 'perl', {'weight': 0.6})
('optimal substructure', 'digital object identifier', {'weight': 0.6})
('optimal substructure', 'sequential quadratic programming', {'weight': 0.6})
('optimal substructure', "dinic's algorithm", {'weight': 0.6})
('optimal substructure', 'pseudo-polynomial time', {'weight': 0.6})
('optimal substructure', 'partition problem', {'weight': 0.6})
('optimal substructure', 'stochastic programming', {'weight': 0.6})
('optimal substructure', 'hill climbing', {'weight': 0.6})
('optimal substructure', 'top-down', {'weight': 0.6})
('optimal substructure', 'de boor algorithm', {'weight': 0.6})
('optimal substructure', 'optimization algorithm', {'weight': 0.6})
('optimal substructure', "kruskal's algorithm", {'weight': 0.6})
('optimal substructure', 'jacques philippe marie binet', {'weight': 0.6})
('optimal substructure', 'tabu search', {'weight': 0.6})
('optimal substructure', 'divide and conquer algorithm', {'weight': 0.6})
('optimal substructure', "johnson's algorithm", {'weight': 0.6})
('optimal substructure', 'evolutionary algorithm', {'weight': 0.6})
('optimal substructure', 'clique-width', {'weight': 0.6})
('optimal substructure', 'dynamic programming', {'weight': 0.7})
('optimal substructure', 'subroutine', {'weight': 0.6})
('optimal substructure', 'simulated annealing', {'weight': 0.6})
('optimal substructure', 'tower of hanoi', {'weight': 0.6})
('optimal substructure', 'branch and bound', {'weight': 0.6})
('optimal substructure', 'engineering', {'weight': 0.6})
('optimal substructure', 'matroid', {'weight': 0.6})
('optimal substructure', 'viterbi algorithm', {'weight': 0.6})
('optimal substructure', "lemke's algorithm", {'weight': 0.6})
('optimal substructure', 'simplex algorithm', {'weight': 0.6})
('optimal substructure', 'local search (optimization)', {'weight': 0.6})
('optimal substructure', 'hessian matrix', {'weight': 0.6})
('optimal substructure', 'ibm system r', {'weight': 0.6})
('optimal substructure', 'penalty method', {'weight': 0.6})
('optimal substructure', 'prolog', {'weight': 0.6})
('optimal substructure', 'time-invariant system', {'weight': 0.6})
('optimal substructure', 'criss-cross algorithm', {'weight': 0.6})
('optimal substructure', 'revised simplex algorithm', {'weight': 0.6})
('optimal substructure', 'the mathematical association of america', {'weight': 0.6})
('optimal substructure', 'line search', {'weight': 0.6})
('optimal substructure', 'j (programming language)', {'weight': 0.6})
('optimal substructure', 'word wrap', {'weight': 0.6})
('optimal substructure', 'subset sum problem', {'weight': 0.6})
('optimal substructure', 'integer programming', {'weight': 0.6})
('optimal substructure', 'nucleosome', {'weight': 0.6})
('optimal substructure', 'earley algorithm', {'weight': 0.6})
('optimal substructure', 'referential transparency (computer science)', {'weight': 0.6})
('optimal substructure', 'recursion', {'weight': 0.6})
('optimal substructure', 'mathematica', {'weight': 0.6})
('optimal substructure', 'quicksort', {'weight': 0.6})
('optimal substructure', 'recursion (computer science)', {'weight': 0.6})
('optimal substructure', 'checkerboard', {'weight': 0.6})
('optimal substructure', 'computer science', {'weight': 0.6})
('optimal substructure', 'brute-force search', {'weight': 0.6})
('optimal substructure', 'mathematics', {'weight': 0.6})
('optimal substructure', 'depth-first search', {'weight': 0.6})
('optimal substructure', 'top-down and bottom-up design', {'weight': 0.6})
('optimal substructure', 'correspondence problem', {'weight': 0.6})
('optimal substructure', 'transcription factor', {'weight': 0.6})
('optimal substructure', 'tree decomposition', {'weight': 0.6})
('optimal substructure', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('optimal substructure', 'structural alignment', {'weight': 0.6})
('optimal substructure', 'local convergence', {'weight': 0.6})
('optimal substructure', 'knapsack problem', {'weight': 0.6})
('optimal substructure', 'graph algorithm', {'weight': 0.6})
('optimal substructure', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('optimal substructure', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('optimal substructure', 'hidden markov model', {'weight': 0.6})
('optimal substructure', 'string (computer science)', {'weight': 0.6})
('optimal substructure', 'bioinformatics', {'weight': 0.6})
('optimal substructure', 'genetics', {'weight': 0.6})
('optimal substructure', 'mathematical optimization', {'weight': 0.6})
('optimal substructure', 'artificial neural networks', {'weight': 0.6})
('optimal substructure', 'introduction to algorithms', {'weight': 0.6})
('optimal substructure', 'thomas h. cormen', {'weight': 0.6})
('optimal substructure', 'music information retrieval', {'weight': 0.6})
('optimal substructure', 'beat (music)', {'weight': 0.6})
('optimal substructure', 'longest common subsequence problem', {'weight': 0.6})
('optimal substructure', 'convex minimization', {'weight': 0.6})
('optimal substructure', 'successive parabolic interpolation', {'weight': 0.6})
('optimal substructure', 'fibonacci sequence', {'weight': 0.6})
('optimal substructure', 'maximum subarray problem', {'weight': 0.6})
('optimal substructure', 'convex optimization', {'weight': 0.6})
('optimal substructure', 'memoization', {'weight': 0.6})
('optimal substructure', 'richard bellman', {'weight': 0.6})
('optimal substructure', 'exponential growth', {'weight': 0.6})
('optimal substructure', 'charles e. leiserson', {'weight': 0.6})
('optimal substructure', 'charles erwin wilson', {'weight': 0.6})
('optimal substructure', 'interval scheduling', {'weight': 0.6})
('optimal substructure', 'chart parser', {'weight': 0.6})
('optimal substructure', 'travelling salesman problem', {'weight': 0.6})
('optimal substructure', 'bellman equation', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'photoshop', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'sequence alignment', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'flow network', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'ellipsoid method', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'chain matrix multiplication', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'ieee', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'backtracking', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'nonlinear conjugate gradient method', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'dynamic problem', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'trust region', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'function (mathematics)', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'minimum spanning tree', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'context-free grammar', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'branch and cut', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'state variable', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'treewidth', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'overlapping subproblem', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'taylor & francis', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'cutting-plane method', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'method of undetermined coefficients', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'combinatorial optimization', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', "newton's method in optimization", {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'matrix chain multiplication', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'dynamic time warping', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'dynamic programming language', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'call-by-need', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'big-o notation', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'comparison of optimization software', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'quadratic programming', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'common lisp', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'barrier function', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'gradient descent', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'patricia selinger', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'discounting', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'ronald l. rivest', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'iterative method', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'limited-memory bfgs', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'longest common substring problem', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'clifford stein', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'computer chess', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'linear programming', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'bitonic tour', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'linear search problem', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'systems analysis', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'capital (economics)', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'levenshtein distance', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'nonlinear programming', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'computational complexity of mathematical operations', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'gradient', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'bulletin of the american mathematical society', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'u.s. english', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'refutation table', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'heuristic algorithm', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'successive linear programming', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'optimal substructure', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'programming language', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'mergesort', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', "dijkstra's algorithm", {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'subgradient method', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'call-by-name', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'longest increasing subsequence problem', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'edward prescott', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'exponential time', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'principle of optimality', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'mathematical game', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'nancy stokey', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'approximation algorithm', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'discrete-time', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'cyk algorithm', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'markov decision process', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', "powell's method", {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'wolfe conditions', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'convexity in economics', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'transposition table', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'economics', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'backward induction', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'golden section search', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'edit distance', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'tree structure', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'exchange algorithm', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'dover publications', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'seam carving', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'recursive least squares', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'metaheuristic', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'quasi-newton method', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'robert e. lucas', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'non-convexity (economics)', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'sr1 formula', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'mathematical reviews', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'puzzle', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'associative array', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'shortest path problem', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'dynamic algorithm', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'augmented lagrangian method', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'charles delisi', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'greedy algorithm', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', "karmarkar's algorithm", {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'lattice models', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'utility', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 1})
('frank\xe2\x80\x93wolfe algorithm', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'international standard book number', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'undirected graph', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'scheme (programming language)', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'rna structure', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'hanoi', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'perl', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'digital object identifier', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'sequential quadratic programming', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', "dinic's algorithm", {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'pseudo-polynomial time', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'partition problem', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'stochastic programming', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'hill climbing', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'top-down', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'de boor algorithm', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'optimization algorithm', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', "kruskal's algorithm", {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'jacques philippe marie binet', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'tabu search', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'divide and conquer algorithm', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', "johnson's algorithm", {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'evolutionary algorithm', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'clique-width', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'dynamic programming', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'subroutine', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'simulated annealing', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'tower of hanoi', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'branch and bound', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'engineering', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'matroid', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'viterbi algorithm', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', "lemke's algorithm", {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'simplex algorithm', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'local search (optimization)', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'hessian matrix', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'ibm system r', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'penalty method', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'prolog', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'time-invariant system', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'criss-cross algorithm', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'revised simplex algorithm', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'the mathematical association of america', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'line search', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'j (programming language)', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'word wrap', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'subset sum problem', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'integer programming', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'nucleosome', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'earley algorithm', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'referential transparency (computer science)', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'recursion', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'mathematica', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'quicksort', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'recursion (computer science)', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'checkerboard', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'computer science', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'brute-force search', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'mathematics', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'depth-first search', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'top-down and bottom-up design', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'correspondence problem', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'transcription factor', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'tree decomposition', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'structural alignment', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'local convergence', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'knapsack problem', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'graph algorithm', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'hidden markov model', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'string (computer science)', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'bioinformatics', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'genetics', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'mathematical optimization', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'artificial neural networks', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'introduction to algorithms', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'thomas h. cormen', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'music information retrieval', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'beat (music)', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'longest common subsequence problem', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'convex minimization', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'successive parabolic interpolation', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'fibonacci sequence', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'maximum subarray problem', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'convex optimization', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'memoization', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'richard bellman', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'exponential growth', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'charles e. leiserson', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'charles erwin wilson', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'interval scheduling', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'chart parser', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'travelling salesman problem', {'weight': 0.6})
('frank\xe2\x80\x93wolfe algorithm', 'bellman equation', {'weight': 0.6})
('rna structure', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('rna structure', 'photoshop', {'weight': 0.6})
('rna structure', 'sequence alignment', {'weight': 0.6})
('rna structure', 'flow network', {'weight': 0.6})
('rna structure', 'ellipsoid method', {'weight': 0.6})
('rna structure', 'chain matrix multiplication', {'weight': 0.6})
('rna structure', 'ieee', {'weight': 0.6})
('rna structure', 'backtracking', {'weight': 0.6})
('rna structure', 'nonlinear conjugate gradient method', {'weight': 0.6})
('rna structure', 'dynamic problem', {'weight': 0.6})
('rna structure', 'trust region', {'weight': 0.6})
('rna structure', 'function (mathematics)', {'weight': 0.6})
('rna structure', 'minimum spanning tree', {'weight': 0.6})
('rna structure', 'context-free grammar', {'weight': 0.6})
('rna structure', 'branch and cut', {'weight': 0.6})
('rna structure', 'state variable', {'weight': 0.6})
('rna structure', 'treewidth', {'weight': 0.6})
('rna structure', 'overlapping subproblem', {'weight': 0.6})
('rna structure', 'taylor & francis', {'weight': 0.6})
('rna structure', 'cutting-plane method', {'weight': 0.6})
('rna structure', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('rna structure', 'method of undetermined coefficients', {'weight': 0.6})
('rna structure', 'combinatorial optimization', {'weight': 0.6})
('rna structure', "newton's method in optimization", {'weight': 0.6})
('rna structure', 'matrix chain multiplication', {'weight': 0.6})
('rna structure', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('rna structure', 'dynamic time warping', {'weight': 0.6})
('rna structure', 'dynamic programming language', {'weight': 0.6})
('rna structure', 'call-by-need', {'weight': 0.6})
('rna structure', 'big-o notation', {'weight': 0.6})
('rna structure', 'comparison of optimization software', {'weight': 0.6})
('rna structure', 'quadratic programming', {'weight': 0.6})
('rna structure', 'common lisp', {'weight': 0.6})
('rna structure', 'barrier function', {'weight': 0.6})
('rna structure', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('rna structure', 'gradient descent', {'weight': 0.6})
('rna structure', 'patricia selinger', {'weight': 0.6})
('rna structure', 'discounting', {'weight': 0.6})
('rna structure', 'ronald l. rivest', {'weight': 0.6})
('rna structure', 'iterative method', {'weight': 0.6})
('rna structure', 'limited-memory bfgs', {'weight': 0.6})
('rna structure', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('rna structure', 'longest common substring problem', {'weight': 0.6})
('rna structure', 'clifford stein', {'weight': 0.6})
('rna structure', 'computer chess', {'weight': 0.6})
('rna structure', 'linear programming', {'weight': 0.6})
('rna structure', 'bitonic tour', {'weight': 0.6})
('rna structure', 'linear search problem', {'weight': 0.6})
('rna structure', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('rna structure', 'systems analysis', {'weight': 0.6})
('rna structure', 'capital (economics)', {'weight': 0.6})
('rna structure', 'levenshtein distance', {'weight': 0.6})
('rna structure', 'nonlinear programming', {'weight': 0.6})
('rna structure', 'computational complexity of mathematical operations', {'weight': 0.6})
('rna structure', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('rna structure', 'gradient', {'weight': 0.6})
('rna structure', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('rna structure', 'bulletin of the american mathematical society', {'weight': 0.6})
('rna structure', 'u.s. english', {'weight': 0.6})
('rna structure', 'refutation table', {'weight': 0.6})
('rna structure', 'heuristic algorithm', {'weight': 0.6})
('rna structure', 'successive linear programming', {'weight': 0.6})
('rna structure', 'optimal substructure', {'weight': 0.6})
('rna structure', 'programming language', {'weight': 0.6})
('rna structure', 'mergesort', {'weight': 0.6})
('rna structure', "dijkstra's algorithm", {'weight': 0.6})
('rna structure', 'subgradient method', {'weight': 0.6})
('rna structure', 'call-by-name', {'weight': 0.6})
('rna structure', 'longest increasing subsequence problem', {'weight': 0.6})
('rna structure', 'edward prescott', {'weight': 0.6})
('rna structure', 'exponential time', {'weight': 0.6})
('rna structure', 'principle of optimality', {'weight': 0.6})
('rna structure', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('rna structure', 'mathematical game', {'weight': 0.6})
('rna structure', 'nancy stokey', {'weight': 0.6})
('rna structure', 'approximation algorithm', {'weight': 0.6})
('rna structure', 'discrete-time', {'weight': 0.6})
('rna structure', 'cyk algorithm', {'weight': 0.6})
('rna structure', 'markov decision process', {'weight': 0.6})
('rna structure', "powell's method", {'weight': 0.6})
('rna structure', 'wolfe conditions', {'weight': 0.6})
('rna structure', 'convexity in economics', {'weight': 0.6})
('rna structure', 'transposition table', {'weight': 0.6})
('rna structure', 'economics', {'weight': 0.6})
('rna structure', 'backward induction', {'weight': 0.6})
('rna structure', 'golden section search', {'weight': 0.6})
('rna structure', 'edit distance', {'weight': 0.6})
('rna structure', 'tree structure', {'weight': 0.6})
('rna structure', 'exchange algorithm', {'weight': 0.6})
('rna structure', 'dover publications', {'weight': 0.6})
('rna structure', 'seam carving', {'weight': 0.6})
('rna structure', 'recursive least squares', {'weight': 0.6})
('rna structure', 'metaheuristic', {'weight': 0.6})
('rna structure', 'quasi-newton method', {'weight': 0.6})
('rna structure', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('rna structure', 'robert e. lucas', {'weight': 0.6})
('rna structure', 'non-convexity (economics)', {'weight': 0.6})
('rna structure', 'sr1 formula', {'weight': 0.6})
('rna structure', 'mathematical reviews', {'weight': 0.6})
('rna structure', 'puzzle', {'weight': 0.6})
('rna structure', 'associative array', {'weight': 0.6})
('rna structure', 'shortest path problem', {'weight': 0.6})
('rna structure', 'dynamic algorithm', {'weight': 0.6})
('rna structure', 'augmented lagrangian method', {'weight': 0.6})
('rna structure', 'charles delisi', {'weight': 0.6})
('rna structure', 'greedy algorithm', {'weight': 0.6})
('rna structure', "karmarkar's algorithm", {'weight': 0.6})
('rna structure', 'lattice models', {'weight': 0.6})
('rna structure', 'utility', {'weight': 0.6})
('rna structure', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('rna structure', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('rna structure', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('rna structure', 'international standard book number', {'weight': 0.6})
('rna structure', 'undirected graph', {'weight': 0.6})
('rna structure', 'scheme (programming language)', {'weight': 0.6})
('rna structure', 'rna structure', {'weight': 1})
('rna structure', 'hanoi', {'weight': 0.6})
('rna structure', 'perl', {'weight': 0.6})
('rna structure', 'digital object identifier', {'weight': 0.6})
('rna structure', 'sequential quadratic programming', {'weight': 0.6})
('rna structure', "dinic's algorithm", {'weight': 0.6})
('rna structure', 'pseudo-polynomial time', {'weight': 0.6})
('rna structure', 'partition problem', {'weight': 0.6})
('rna structure', 'stochastic programming', {'weight': 0.6})
('rna structure', 'hill climbing', {'weight': 0.6})
('rna structure', 'top-down', {'weight': 0.6})
('rna structure', 'de boor algorithm', {'weight': 0.6})
('rna structure', 'optimization algorithm', {'weight': 0.6})
('rna structure', "kruskal's algorithm", {'weight': 0.6})
('rna structure', 'jacques philippe marie binet', {'weight': 0.6})
('rna structure', 'tabu search', {'weight': 0.6})
('rna structure', 'divide and conquer algorithm', {'weight': 0.6})
('rna structure', "johnson's algorithm", {'weight': 0.6})
('rna structure', 'evolutionary algorithm', {'weight': 0.6})
('rna structure', 'clique-width', {'weight': 0.6})
('rna structure', 'dynamic programming', {'weight': 0.6})
('rna structure', 'subroutine', {'weight': 0.6})
('rna structure', 'simulated annealing', {'weight': 0.6})
('rna structure', 'tower of hanoi', {'weight': 0.6})
('rna structure', 'branch and bound', {'weight': 0.6})
('rna structure', 'engineering', {'weight': 0.6})
('rna structure', 'matroid', {'weight': 0.6})
('rna structure', 'viterbi algorithm', {'weight': 0.6})
('rna structure', "lemke's algorithm", {'weight': 0.6})
('rna structure', 'simplex algorithm', {'weight': 0.6})
('rna structure', 'local search (optimization)', {'weight': 0.6})
('rna structure', 'hessian matrix', {'weight': 0.6})
('rna structure', 'ibm system r', {'weight': 0.6})
('rna structure', 'penalty method', {'weight': 0.6})
('rna structure', 'prolog', {'weight': 0.6})
('rna structure', 'time-invariant system', {'weight': 0.6})
('rna structure', 'criss-cross algorithm', {'weight': 0.6})
('rna structure', 'revised simplex algorithm', {'weight': 0.6})
('rna structure', 'the mathematical association of america', {'weight': 0.6})
('rna structure', 'line search', {'weight': 0.6})
('rna structure', 'j (programming language)', {'weight': 0.6})
('rna structure', 'word wrap', {'weight': 0.6})
('rna structure', 'subset sum problem', {'weight': 0.6})
('rna structure', 'integer programming', {'weight': 0.6})
('rna structure', 'nucleosome', {'weight': 0.6})
('rna structure', 'earley algorithm', {'weight': 0.6})
('rna structure', 'referential transparency (computer science)', {'weight': 0.6})
('rna structure', 'recursion', {'weight': 0.6})
('rna structure', 'mathematica', {'weight': 0.6})
('rna structure', 'quicksort', {'weight': 0.6})
('rna structure', 'recursion (computer science)', {'weight': 0.6})
('rna structure', 'checkerboard', {'weight': 0.6})
('rna structure', 'computer science', {'weight': 0.6})
('rna structure', 'brute-force search', {'weight': 0.6})
('rna structure', 'mathematics', {'weight': 0.6})
('rna structure', 'depth-first search', {'weight': 0.6})
('rna structure', 'top-down and bottom-up design', {'weight': 0.6})
('rna structure', 'correspondence problem', {'weight': 0.6})
('rna structure', 'transcription factor', {'weight': 0.6})
('rna structure', 'tree decomposition', {'weight': 0.6})
('rna structure', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('rna structure', 'structural alignment', {'weight': 0.6})
('rna structure', 'local convergence', {'weight': 0.6})
('rna structure', 'knapsack problem', {'weight': 0.6})
('rna structure', 'graph algorithm', {'weight': 0.6})
('rna structure', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('rna structure', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('rna structure', 'hidden markov model', {'weight': 0.6})
('rna structure', 'string (computer science)', {'weight': 0.6})
('rna structure', 'bioinformatics', {'weight': 0.6})
('rna structure', 'genetics', {'weight': 0.6})
('rna structure', 'mathematical optimization', {'weight': 0.6})
('rna structure', 'artificial neural networks', {'weight': 0.6})
('rna structure', 'introduction to algorithms', {'weight': 0.6})
('rna structure', 'thomas h. cormen', {'weight': 0.6})
('rna structure', 'music information retrieval', {'weight': 0.6})
('rna structure', 'beat (music)', {'weight': 0.6})
('rna structure', 'longest common subsequence problem', {'weight': 0.6})
('rna structure', 'convex minimization', {'weight': 0.6})
('rna structure', 'successive parabolic interpolation', {'weight': 0.6})
('rna structure', 'fibonacci sequence', {'weight': 0.6})
('rna structure', 'maximum subarray problem', {'weight': 0.6})
('rna structure', 'convex optimization', {'weight': 0.6})
('rna structure', 'memoization', {'weight': 0.6})
('rna structure', 'richard bellman', {'weight': 0.6})
('rna structure', 'exponential growth', {'weight': 0.6})
('rna structure', 'charles e. leiserson', {'weight': 0.6})
('rna structure', 'charles erwin wilson', {'weight': 0.6})
('rna structure', 'interval scheduling', {'weight': 0.6})
('rna structure', 'chart parser', {'weight': 0.6})
('rna structure', 'travelling salesman problem', {'weight': 0.6})
('rna structure', 'bellman equation', {'weight': 0.6})
('hanoi', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('hanoi', 'photoshop', {'weight': 0.6})
('hanoi', 'sequence alignment', {'weight': 0.6})
('hanoi', 'flow network', {'weight': 0.6})
('hanoi', 'mechanical puzzles', {'weight': 0.5})
('hanoi', 'ellipsoid method', {'weight': 0.6})
('hanoi', 'chain matrix multiplication', {'weight': 0.6})
('hanoi', 'ieee', {'weight': 0.6})
('hanoi', 'backtracking', {'weight': 0.6})
('hanoi', 'nonlinear conjugate gradient method', {'weight': 0.6})
('hanoi', 'dynamic problem', {'weight': 0.6})
('hanoi', 'trust region', {'weight': 0.6})
('hanoi', 'function (mathematics)', {'weight': 0.6})
('hanoi', 'minimum spanning tree', {'weight': 0.6})
('hanoi', 'context-free grammar', {'weight': 0.6})
('hanoi', 'branch and cut', {'weight': 0.6})
('hanoi', 'state variable', {'weight': 0.6})
('hanoi', 'treewidth', {'weight': 0.6})
('hanoi', 'overlapping subproblem', {'weight': 0.6})
('hanoi', 'taylor & francis', {'weight': 0.6})
('hanoi', 'cutting-plane method', {'weight': 0.6})
('hanoi', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('hanoi', 'method of undetermined coefficients', {'weight': 0.6})
('hanoi', 'combinatorial optimization', {'weight': 0.6})
('hanoi', "newton's method in optimization", {'weight': 0.6})
('hanoi', 'matrix chain multiplication', {'weight': 0.6})
('hanoi', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('hanoi', 'dynamic time warping', {'weight': 0.6})
('hanoi', 'dynamic programming language', {'weight': 0.6})
('hanoi', 'call-by-need', {'weight': 0.6})
('hanoi', 'big-o notation', {'weight': 0.6})
('hanoi', 'comparison of optimization software', {'weight': 0.6})
('hanoi', 'quadratic programming', {'weight': 0.6})
('hanoi', 'common lisp', {'weight': 0.6})
('hanoi', 'barrier function', {'weight': 0.6})
('hanoi', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('hanoi', 'gradient descent', {'weight': 0.6})
('hanoi', 'patricia selinger', {'weight': 0.6})
('hanoi', 'discounting', {'weight': 0.6})
('hanoi', 'ronald l. rivest', {'weight': 0.6})
('hanoi', 'iterative method', {'weight': 0.6})
('hanoi', 'limited-memory bfgs', {'weight': 0.6})
('hanoi', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('hanoi', 'longest common substring problem', {'weight': 0.6})
('hanoi', 'clifford stein', {'weight': 0.6})
('hanoi', 'computer chess', {'weight': 0.6})
('hanoi', 'linear programming', {'weight': 0.6})
('hanoi', 'bitonic tour', {'weight': 0.6})
('hanoi', 'linear search problem', {'weight': 0.6})
('hanoi', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('hanoi', 'systems analysis', {'weight': 0.6})
('hanoi', 'capital (economics)', {'weight': 0.6})
('hanoi', 'levenshtein distance', {'weight': 0.6})
('hanoi', 'nonlinear programming', {'weight': 0.6})
('hanoi', 'computational complexity of mathematical operations', {'weight': 0.6})
('hanoi', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('hanoi', 'gradient', {'weight': 0.6})
('hanoi', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('hanoi', 'bulletin of the american mathematical society', {'weight': 0.6})
('hanoi', 'u.s. english', {'weight': 0.6})
('hanoi', 'refutation table', {'weight': 0.6})
('hanoi', 'heuristic algorithm', {'weight': 0.6})
('hanoi', 'successive linear programming', {'weight': 0.6})
('hanoi', 'optimal substructure', {'weight': 0.6})
('hanoi', 'programming language', {'weight': 0.6})
('hanoi', 'mergesort', {'weight': 0.6})
('hanoi', "dijkstra's algorithm", {'weight': 0.6})
('hanoi', 'subgradient method', {'weight': 0.6})
('hanoi', 'call-by-name', {'weight': 0.6})
('hanoi', 'longest increasing subsequence problem', {'weight': 0.6})
('hanoi', 'edward prescott', {'weight': 0.6})
('hanoi', 'exponential time', {'weight': 0.6})
('hanoi', 'principle of optimality', {'weight': 0.6})
('hanoi', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('hanoi', 'mathematical game', {'weight': 0.6})
('hanoi', 'nancy stokey', {'weight': 0.6})
('hanoi', 'approximation algorithm', {'weight': 0.6})
('hanoi', 'discrete-time', {'weight': 0.6})
('hanoi', 'cyk algorithm', {'weight': 0.6})
('hanoi', 'markov decision process', {'weight': 0.6})
('hanoi', "powell's method", {'weight': 0.6})
('hanoi', 'wolfe conditions', {'weight': 0.6})
('hanoi', 'convexity in economics', {'weight': 0.6})
('hanoi', 'transposition table', {'weight': 0.6})
('hanoi', 'economics', {'weight': 0.6})
('hanoi', 'backward induction', {'weight': 0.6})
('hanoi', 'golden section search', {'weight': 0.6})
('hanoi', 'edit distance', {'weight': 0.6})
('hanoi', 'tree structure', {'weight': 0.6})
('hanoi', 'backup rotation scheme', {'weight': 0.7})
('hanoi', 'exchange algorithm', {'weight': 0.6})
('hanoi', 'dover publications', {'weight': 0.6})
('hanoi', 'seam carving', {'weight': 0.6})
('hanoi', 'recursive least squares', {'weight': 0.6})
('hanoi', 'metaheuristic', {'weight': 0.6})
('hanoi', 'quasi-newton method', {'weight': 0.6})
('hanoi', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('hanoi', 'robert e. lucas', {'weight': 0.6})
('hanoi', 'non-convexity (economics)', {'weight': 0.6})
('hanoi', 'sr1 formula', {'weight': 0.6})
('hanoi', 'mathematical reviews', {'weight': 0.6})
('hanoi', 'puzzle', {'weight': 0.6})
('hanoi', 'associative array', {'weight': 0.6})
('hanoi', 'baguenaudier', {'weight': 0.7})
('hanoi', 'shortest path problem', {'weight': 0.6})
('hanoi', 'dynamic algorithm', {'weight': 0.6})
('hanoi', 'augmented lagrangian method', {'weight': 0.6})
('hanoi', 'charles delisi', {'weight': 0.6})
('hanoi', 'greedy algorithm', {'weight': 0.6})
('hanoi', "karmarkar's algorithm", {'weight': 0.6})
('hanoi', 'lattice models', {'weight': 0.6})
('hanoi', 'utility', {'weight': 0.6})
('hanoi', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('hanoi', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('hanoi', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('hanoi', 'international standard book number', {'weight': 0.6})
('hanoi', 'undirected graph', {'weight': 0.6})
('hanoi', 'scheme (programming language)', {'weight': 0.6})
('hanoi', 'rna structure', {'weight': 0.6})
('hanoi', 'hanoi', {'weight': 1})
('hanoi', 'perl', {'weight': 0.6})
('hanoi', 'digital object identifier', {'weight': 0.6})
('hanoi', 'sequential quadratic programming', {'weight': 0.6})
('hanoi', "dinic's algorithm", {'weight': 0.6})
('hanoi', 'pseudo-polynomial time', {'weight': 0.6})
('hanoi', 'partition problem', {'weight': 0.6})
('hanoi', 'stochastic programming', {'weight': 0.6})
('hanoi', 'hill climbing', {'weight': 0.6})
('hanoi', 'top-down', {'weight': 0.6})
('hanoi', 'de boor algorithm', {'weight': 0.6})
('hanoi', 'optimization algorithm', {'weight': 0.6})
('hanoi', "kruskal's algorithm", {'weight': 0.6})
('hanoi', 'jacques philippe marie binet', {'weight': 0.6})
('hanoi', 'tabu search', {'weight': 0.6})
('hanoi', 'divide and conquer algorithm', {'weight': 0.6})
('hanoi', "johnson's algorithm", {'weight': 0.6})
('hanoi', 'evolutionary algorithm', {'weight': 0.6})
('hanoi', 'clique-width', {'weight': 0.6})
('hanoi', 'dynamic programming', {'weight': 0.6})
('hanoi', 'subroutine', {'weight': 0.6})
('hanoi', 'simulated annealing', {'weight': 0.6})
('hanoi', 'tower of hanoi', {'weight': 0.6})
('hanoi', 'branch and bound', {'weight': 0.6})
('hanoi', 'engineering', {'weight': 0.6})
('hanoi', 'matroid', {'weight': 0.6})
('hanoi', 'viterbi algorithm', {'weight': 0.6})
('hanoi', "lemke's algorithm", {'weight': 0.6})
('hanoi', 'simplex algorithm', {'weight': 0.6})
('hanoi', 'local search (optimization)', {'weight': 0.6})
('hanoi', 'hessian matrix', {'weight': 0.6})
('hanoi', 'ibm system r', {'weight': 0.6})
('hanoi', 'penalty method', {'weight': 0.6})
('hanoi', 'prolog', {'weight': 0.6})
('hanoi', 'time-invariant system', {'weight': 0.6})
('hanoi', 'criss-cross algorithm', {'weight': 0.6})
('hanoi', 'revised simplex algorithm', {'weight': 0.6})
('hanoi', 'the mathematical association of america', {'weight': 0.6})
('hanoi', 'line search', {'weight': 0.6})
('hanoi', 'j (programming language)', {'weight': 0.6})
('hanoi', 'word wrap', {'weight': 0.6})
('hanoi', 'subset sum problem', {'weight': 0.6})
('hanoi', 'integer programming', {'weight': 0.6})
('hanoi', 'nucleosome', {'weight': 0.6})
('hanoi', 'earley algorithm', {'weight': 0.6})
('hanoi', 'referential transparency (computer science)', {'weight': 0.6})
('hanoi', 'recursion', {'weight': 0.6})
('hanoi', 'mathematica', {'weight': 0.6})
('hanoi', 'quicksort', {'weight': 0.6})
('hanoi', 'recursion (computer science)', {'weight': 0.7})
('hanoi', 'checkerboard', {'weight': 0.6})
('hanoi', 'computer science', {'weight': 0.6})
('hanoi', 'brute-force search', {'weight': 0.6})
('hanoi', 'mathematics', {'weight': 0.6})
('hanoi', 'depth-first search', {'weight': 0.6})
('hanoi', 'top-down and bottom-up design', {'weight': 0.6})
('hanoi', 'correspondence problem', {'weight': 0.6})
('hanoi', 'transcription factor', {'weight': 0.6})
('hanoi', 'tree decomposition', {'weight': 0.6})
('hanoi', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('hanoi', 'structural alignment', {'weight': 0.6})
('hanoi', 'local convergence', {'weight': 0.6})
('hanoi', 'knapsack problem', {'weight': 0.6})
('hanoi', 'graph algorithm', {'weight': 0.6})
('hanoi', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('hanoi', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('hanoi', 'hidden markov model', {'weight': 0.6})
('hanoi', 'string (computer science)', {'weight': 0.6})
('hanoi', 'bioinformatics', {'weight': 0.6})
('hanoi', 'genetics', {'weight': 0.6})
('hanoi', 'mathematical optimization', {'weight': 0.6})
('hanoi', 'artificial neural networks', {'weight': 0.6})
('hanoi', 'introduction to algorithms', {'weight': 0.6})
('hanoi', 'thomas h. cormen', {'weight': 0.6})
('hanoi', 'music information retrieval', {'weight': 0.6})
('hanoi', 'beat (music)', {'weight': 0.6})
('hanoi', 'longest common subsequence problem', {'weight': 0.6})
('hanoi', 'convex minimization', {'weight': 0.6})
('hanoi', 'successive parabolic interpolation', {'weight': 0.6})
('hanoi', 'fibonacci sequence', {'weight': 0.6})
('hanoi', 'maximum subarray problem', {'weight': 0.6})
('hanoi', 'convex optimization', {'weight': 0.6})
('hanoi', 'memoization', {'weight': 0.6})
('hanoi', 'richard bellman', {'weight': 0.6})
('hanoi', 'exponential growth', {'weight': 0.6})
('hanoi', 'charles e. leiserson', {'weight': 0.6})
('hanoi', 'charles erwin wilson', {'weight': 0.6})
('hanoi', 'interval scheduling', {'weight': 0.6})
('hanoi', 'chart parser', {'weight': 0.6})
('hanoi', 'travelling salesman problem', {'weight': 0.6})
('hanoi', 'bellman equation', {'weight': 0.6})
('perl', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('perl', 'photoshop', {'weight': 0.6})
('perl', 'sequence alignment', {'weight': 0.6})
('perl', 'flow network', {'weight': 0.6})
('perl', 'charles erwin wilson', {'weight': 0.6})
('perl', 'ellipsoid method', {'weight': 0.6})
('perl', 'chain matrix multiplication', {'weight': 0.6})
('perl', 'ieee', {'weight': 0.6})
('perl', 'backtracking', {'weight': 0.6})
('perl', 'nonlinear conjugate gradient method', {'weight': 0.6})
('perl', 'dynamic problem', {'weight': 0.6})
('perl', 'trust region', {'weight': 0.6})
('perl', 'function (mathematics)', {'weight': 0.6})
('perl', 'minimum spanning tree', {'weight': 0.6})
('perl', 'free software programmed in c', {'weight': 0.5})
('perl', 'context-free grammar', {'weight': 0.6})
('perl', 'recursive least squares', {'weight': 0.6})
('perl', 'outline of perl', {'weight': 0.7})
('perl', 'branch and cut', {'weight': 0.6})
('perl', 'state variable', {'weight': 0.6})
('perl', 'treewidth', {'weight': 0.6})
('perl', 'overlapping subproblem', {'weight': 0.6})
('perl', 'taylor & francis', {'weight': 0.6})
('perl', 'scripting languages', {'weight': 0.5})
('perl', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('perl', "dijkstra's algorithm", {'weight': 0.6})
('perl', 'combinatorial optimization', {'weight': 0.6})
('perl', "newton's method in optimization", {'weight': 0.6})
('perl', 'metaheuristic', {'weight': 0.6})
('perl', 'matrix chain multiplication', {'weight': 0.6})
('perl', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('perl', 'dynamic time warping', {'weight': 0.6})
('perl', 'dynamic programming language', {'weight': 0.6})
('perl', 'text-oriented programming languages', {'weight': 0.5})
('perl', 'big-o notation', {'weight': 0.6})
('perl', 'programming languages created in 1987', {'weight': 0.5})
('perl', 'comparison of optimization software', {'weight': 0.6})
('perl', 'quadratic programming', {'weight': 0.6})
('perl', 'common lisp', {'weight': 0.6})
('perl', 'barrier function', {'weight': 0.6})
('perl', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('perl', 'gradient descent', {'weight': 0.6})
('perl', 'patricia selinger', {'weight': 0.6})
('perl', 'discounting', {'weight': 0.6})
('perl', 'ronald l. rivest', {'weight': 0.6})
('perl', 'iterative method', {'weight': 0.6})
('perl', 'limited-memory bfgs', {'weight': 0.6})
('perl', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('perl', 'longest common substring problem', {'weight': 0.6})
('perl', 'clifford stein', {'weight': 0.6})
('perl', 'computer chess', {'weight': 0.6})
('perl', 'linear programming', {'weight': 0.6})
('perl', 'bitonic tour', {'weight': 0.6})
('perl', 'linear search problem', {'weight': 0.6})
('perl', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('perl', 'systems analysis', {'weight': 0.6})
('perl', 'cutting-plane method', {'weight': 0.6})
('perl', 'dynamic programming languages', {'weight': 0.5})
('perl', 'levenshtein distance', {'weight': 0.6})
('perl', 'nonlinear programming', {'weight': 0.6})
('perl', 'cross-platform software', {'weight': 0.5})
('perl', 'procedural programming languages', {'weight': 0.5})
('perl', 'computational complexity of mathematical operations', {'weight': 0.6})
('perl', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('perl', 'gradient', {'weight': 0.6})
('perl', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('perl', 'c programming language family', {'weight': 0.5})
('perl', 'convex minimization', {'weight': 0.6})
('perl', 'bulletin of the american mathematical society', {'weight': 0.6})
('perl', 'robert e. lucas', {'weight': 0.6})
('perl', 'lattice models', {'weight': 0.6})
('perl', 'refutation table', {'weight': 0.6})
('perl', 'heuristic algorithm', {'weight': 0.6})
('perl', 'successive linear programming', {'weight': 0.6})
('perl', 'optimal substructure', {'weight': 0.6})
('perl', 'programming language', {'weight': 0.6})
('perl', 'mergesort', {'weight': 0.6})
('perl', 'simulated annealing', {'weight': 0.6})
('perl', 'subgradient method', {'weight': 0.6})
('perl', 'call-by-name', {'weight': 0.6})
('perl', 'longest increasing subsequence problem', {'weight': 0.6})
('perl', 'edward prescott', {'weight': 0.6})
('perl', 'exponential time', {'weight': 0.6})
('perl', 'principle of optimality', {'weight': 0.6})
('perl', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('perl', 'mathematical game', {'weight': 0.6})
('perl', 'nancy stokey', {'weight': 0.6})
('perl', 'approximation algorithm', {'weight': 0.6})
('perl', 'discrete-time', {'weight': 0.6})
('perl', 'cyk algorithm', {'weight': 0.6})
('perl', 'markov decision process', {'weight': 0.6})
('perl', 'high-level programming languages', {'weight': 0.5})
('perl', 'method of undetermined coefficients', {'weight': 0.6})
('perl', "powell's method", {'weight': 0.6})
('perl', 'wolfe conditions', {'weight': 0.6})
('perl', 'convexity in economics', {'weight': 0.6})
('perl', 'criss-cross algorithm', {'weight': 0.6})
('perl', 'transposition table', {'weight': 0.6})
('perl', 'free compilers and interpreters', {'weight': 0.5})
('perl', 'backward induction', {'weight': 0.6})
('perl', 'golden section search', {'weight': 0.6})
('perl', 'edit distance', {'weight': 0.6})
('perl', 'tree structure', {'weight': 0.6})
('perl', 'exchange algorithm', {'weight': 0.6})
('perl', 'dover publications', {'weight': 0.6})
('perl', 'seam carving', {'weight': 0.6})
('perl', 'hidden markov model', {'weight': 0.6})
('perl', 'unix programming tools', {'weight': 0.5})
('perl', 'quasi-newton method', {'weight': 0.6})
('perl', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('perl', 'object-oriented programming languages', {'weight': 0.5})
('perl', 'non-convexity (economics)', {'weight': 0.6})
('perl', 'sr1 formula', {'weight': 0.6})
('perl', 'mathematical reviews', {'weight': 0.6})
('perl', 'puzzle', {'weight': 0.6})
('perl', 'associative array', {'weight': 0.6})
('perl', 'shortest path problem', {'weight': 0.6})
('perl', 'dynamic algorithm', {'weight': 0.6})
('perl', 'augmented lagrangian method', {'weight': 0.6})
('perl', 'charles delisi', {'weight': 0.6})
('perl', 'greedy algorithm', {'weight': 0.6})
('perl', "karmarkar's algorithm", {'weight': 0.6})
('perl', 'perl data language', {'weight': 0.7})
('perl', 'u.s. english', {'weight': 0.6})
('perl', 'utility', {'weight': 0.6})
('perl', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('perl', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('perl', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('perl', 'international standard book number', {'weight': 0.6})
('perl', 'undirected graph', {'weight': 0.6})
('perl', 'scheme (programming language)', {'weight': 0.6})
('perl', 'rna structure', {'weight': 0.6})
('perl', 'hanoi', {'weight': 0.6})
('perl', 'perl', {'weight': 1})
('perl', 'digital object identifier', {'weight': 0.6})
('perl', 'sequential quadratic programming', {'weight': 0.6})
('perl', "dinic's algorithm", {'weight': 0.6})
('perl', 'pseudo-polynomial time', {'weight': 0.6})
('perl', 'partition problem', {'weight': 0.6})
('perl', 'stochastic programming', {'weight': 0.6})
('perl', 'hill climbing', {'weight': 0.6})
('perl', 'top-down', {'weight': 0.6})
('perl', 'de boor algorithm', {'weight': 0.6})
('perl', 'computer programming portal', {'weight': 0.7})
('perl', 'optimization algorithm', {'weight': 0.6})
('perl', "kruskal's algorithm", {'weight': 0.6})
('perl', 'jacques philippe marie binet', {'weight': 0.6})
('perl', 'tabu search', {'weight': 0.6})
('perl', 'divide and conquer algorithm', {'weight': 0.6})
('perl', "johnson's algorithm", {'weight': 0.6})
('perl', 'evolutionary algorithm', {'weight': 0.6})
('perl', 'clique-width', {'weight': 0.6})
('perl', 'dynamic programming', {'weight': 0.6})
('perl', 'subroutine', {'weight': 0.6})
('perl', 'tower of hanoi', {'weight': 0.6})
('perl', 'branch and bound', {'weight': 0.6})
('perl', 'engineering', {'weight': 0.6})
('perl', 'matroid', {'weight': 0.6})
('perl', 'viterbi algorithm', {'weight': 0.6})
('perl', "lemke's algorithm", {'weight': 0.6})
('perl', 'simplex algorithm', {'weight': 0.6})
('perl', 'local search (optimization)', {'weight': 0.6})
('perl', 'hessian matrix', {'weight': 0.6})
('perl', 'capital (economics)', {'weight': 0.6})
('perl', 'ibm system r', {'weight': 0.6})
('perl', 'penalty method', {'weight': 0.6})
('perl', 'prolog', {'weight': 0.6})
('perl', 'time-invariant system', {'weight': 0.6})
('perl', 'economics', {'weight': 0.6})
('perl', 'revised simplex algorithm', {'weight': 0.6})
('perl', 'the mathematical association of america', {'weight': 0.6})
('perl', 'line search', {'weight': 0.6})
('perl', 'j (programming language)', {'weight': 0.6})
('perl', 'word wrap', {'weight': 0.6})
('perl', 'subset sum problem', {'weight': 0.6})
('perl', 'free software portal', {'weight': 0.7})
('perl', 'integer programming', {'weight': 0.6})
('perl', 'nucleosome', {'weight': 0.6})
('perl', 'american inventions', {'weight': 0.5})
('perl', 'earley algorithm', {'weight': 0.6})
('perl', 'referential transparency (computer science)', {'weight': 0.6})
('perl', 'software using the artistic license', {'weight': 0.5})
('perl', 'recursion', {'weight': 0.6})
('perl', 'mathematica', {'weight': 0.6})
('perl', 'quicksort', {'weight': 0.6})
('perl', 'recursion (computer science)', {'weight': 0.6})
('perl', 'computer science', {'weight': 0.6})
('perl', 'brute-force search', {'weight': 0.6})
('perl', 'mathematics', {'weight': 0.6})
('perl', 'depth-first search', {'weight': 0.6})
('perl', 'plain old documentation', {'weight': 0.7})
('perl', 'top-down and bottom-up design', {'weight': 0.6})
('perl', 'correspondence problem', {'weight': 0.6})
('perl', 'transcription factor', {'weight': 0.6})
('perl', 'tree decomposition', {'weight': 0.6})
('perl', 'perl object environment', {'weight': 0.7})
('perl', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('perl', 'structural alignment', {'weight': 0.6})
('perl', 'local convergence', {'weight': 0.6})
('perl', 'knapsack problem', {'weight': 0.6})
('perl', 'graph algorithm', {'weight': 0.6})
('perl', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('perl', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('perl', 'dynamically typed programming languages', {'weight': 0.5})
('perl', 'string (computer science)', {'weight': 0.6})
('perl', 'bioinformatics', {'weight': 0.6})
('perl', 'genetics', {'weight': 0.6})
('perl', 'mathematical optimization', {'weight': 0.6})
('perl', 'artificial neural networks', {'weight': 0.6})
('perl', 'introduction to algorithms', {'weight': 0.6})
('perl', 'thomas h. cormen', {'weight': 0.6})
('perl', 'music information retrieval', {'weight': 0.6})
('perl', 'beat (music)', {'weight': 0.6})
('perl', 'longest common subsequence problem', {'weight': 0.6})
('perl', 'call-by-need', {'weight': 0.6})
('perl', 'successive parabolic interpolation', {'weight': 0.6})
('perl', 'fibonacci sequence', {'weight': 0.6})
('perl', 'maximum subarray problem', {'weight': 0.6})
('perl', 'convex optimization', {'weight': 0.6})
('perl', 'memoization', {'weight': 0.6})
('perl', 'richard bellman', {'weight': 0.6})
('perl', 'exponential growth', {'weight': 0.6})
('perl', 'charles e. leiserson', {'weight': 0.6})
('perl', 'checkerboard', {'weight': 0.6})
('perl', 'interval scheduling', {'weight': 0.6})
('perl', 'chart parser', {'weight': 0.6})
('perl', 'travelling salesman problem', {'weight': 0.6})
('perl', 'bellman equation', {'weight': 0.6})
('pseudo-polynomial time', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('pseudo-polynomial time', 'photoshop', {'weight': 0.6})
('pseudo-polynomial time', 'sequence alignment', {'weight': 0.6})
('pseudo-polynomial time', 'flow network', {'weight': 0.6})
('pseudo-polynomial time', 'ellipsoid method', {'weight': 0.6})
('pseudo-polynomial time', 'chain matrix multiplication', {'weight': 0.6})
('pseudo-polynomial time', 'ieee', {'weight': 0.6})
('pseudo-polynomial time', 'backtracking', {'weight': 0.6})
('pseudo-polynomial time', 'sr1 formula', {'weight': 0.6})
('pseudo-polynomial time', 'nonlinear conjugate gradient method', {'weight': 0.6})
('pseudo-polynomial time', 'dynamic problem', {'weight': 0.6})
('pseudo-polynomial time', 'quasi-polynomial time', {'weight': 0.7})
('pseudo-polynomial time', 'trust region', {'weight': 0.6})
('pseudo-polynomial time', 'function (mathematics)', {'weight': 0.6})
('pseudo-polynomial time', 'minimum spanning tree', {'weight': 0.6})
('pseudo-polynomial time', 'context-free grammar', {'weight': 0.6})
('pseudo-polynomial time', 'branch and cut', {'weight': 0.6})
('pseudo-polynomial time', 'state variable', {'weight': 0.6})
('pseudo-polynomial time', "johnson's algorithm", {'weight': 0.6})
('pseudo-polynomial time', 'treewidth', {'weight': 0.6})
('pseudo-polynomial time', 'overlapping subproblem', {'weight': 0.6})
('pseudo-polynomial time', 'taylor & francis', {'weight': 0.6})
('pseudo-polynomial time', 'strongly np-complete', {'weight': 0.7})
('pseudo-polynomial time', 'cutting-plane method', {'weight': 0.6})
('pseudo-polynomial time', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('pseudo-polynomial time', 'method of undetermined coefficients', {'weight': 0.6})
('pseudo-polynomial time', 'combinatorial optimization', {'weight': 0.6})
('pseudo-polynomial time', "newton's method in optimization", {'weight': 0.6})
('pseudo-polynomial time', 'matrix chain multiplication', {'weight': 0.6})
('pseudo-polynomial time', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('pseudo-polynomial time', 'dynamic time warping', {'weight': 0.6})
('pseudo-polynomial time', 'dynamic programming language', {'weight': 0.6})
('pseudo-polynomial time', 'call-by-need', {'weight': 0.6})
('pseudo-polynomial time', 'big-o notation', {'weight': 0.6})
('pseudo-polynomial time', 'comparison of optimization software', {'weight': 0.6})
('pseudo-polynomial time', 'quadratic programming', {'weight': 0.6})
('pseudo-polynomial time', 'common lisp', {'weight': 0.6})
('pseudo-polynomial time', 'barrier function', {'weight': 0.6})
('pseudo-polynomial time', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('pseudo-polynomial time', 'gradient descent', {'weight': 0.6})
('pseudo-polynomial time', 'patricia selinger', {'weight': 0.6})
('pseudo-polynomial time', 'discounting', {'weight': 0.6})
('pseudo-polynomial time', 'ronald l. rivest', {'weight': 0.6})
('pseudo-polynomial time', 'iterative method', {'weight': 0.6})
('pseudo-polynomial time', 'limited-memory bfgs', {'weight': 0.6})
('pseudo-polynomial time', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('pseudo-polynomial time', 'longest common substring problem', {'weight': 0.6})
('pseudo-polynomial time', 'clifford stein', {'weight': 0.6})
('pseudo-polynomial time', 'computer chess', {'weight': 0.6})
('pseudo-polynomial time', 'linear programming', {'weight': 0.6})
('pseudo-polynomial time', 'bitonic tour', {'weight': 0.6})
('pseudo-polynomial time', 'linear search problem', {'weight': 0.6})
('pseudo-polynomial time', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('pseudo-polynomial time', 'systems analysis', {'weight': 0.6})
('pseudo-polynomial time', 'capital (economics)', {'weight': 0.6})
('pseudo-polynomial time', 'levenshtein distance', {'weight': 0.6})
('pseudo-polynomial time', 'nonlinear programming', {'weight': 0.6})
('pseudo-polynomial time', 'computational complexity of mathematical operations', {'weight': 0.6})
('pseudo-polynomial time', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('pseudo-polynomial time', 'gradient', {'weight': 0.6})
('pseudo-polynomial time', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('pseudo-polynomial time', 'bulletin of the american mathematical society', {'weight': 0.6})
('pseudo-polynomial time', 'u.s. english', {'weight': 0.6})
('pseudo-polynomial time', 'refutation table', {'weight': 0.6})
('pseudo-polynomial time', 'heuristic algorithm', {'weight': 0.6})
('pseudo-polynomial time', 'successive linear programming', {'weight': 0.6})
('pseudo-polynomial time', 'optimal substructure', {'weight': 0.6})
('pseudo-polynomial time', 'programming language', {'weight': 0.6})
('pseudo-polynomial time', 'mergesort', {'weight': 0.6})
('pseudo-polynomial time', "dijkstra's algorithm", {'weight': 0.6})
('pseudo-polynomial time', 'subgradient method', {'weight': 0.6})
('pseudo-polynomial time', 'call-by-name', {'weight': 0.6})
('pseudo-polynomial time', 'longest increasing subsequence problem', {'weight': 0.6})
('pseudo-polynomial time', 'edward prescott', {'weight': 0.6})
('pseudo-polynomial time', 'exponential time', {'weight': 0.6})
('pseudo-polynomial time', 'principle of optimality', {'weight': 0.6})
('pseudo-polynomial time', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('pseudo-polynomial time', 'mathematical game', {'weight': 0.6})
('pseudo-polynomial time', 'nancy stokey', {'weight': 0.6})
('pseudo-polynomial time', 'approximation algorithm', {'weight': 0.6})
('pseudo-polynomial time', 'discrete-time', {'weight': 0.6})
('pseudo-polynomial time', 'cyk algorithm', {'weight': 0.6})
('pseudo-polynomial time', 'markov decision process', {'weight': 0.6})
('pseudo-polynomial time', "powell's method", {'weight': 0.6})
('pseudo-polynomial time', 'wolfe conditions', {'weight': 0.6})
('pseudo-polynomial time', 'convexity in economics', {'weight': 0.6})
('pseudo-polynomial time', 'transposition table', {'weight': 0.6})
('pseudo-polynomial time', 'economics', {'weight': 0.6})
('pseudo-polynomial time', 'backward induction', {'weight': 0.6})
('pseudo-polynomial time', 'golden section search', {'weight': 0.6})
('pseudo-polynomial time', 'edit distance', {'weight': 0.6})
('pseudo-polynomial time', 'tree structure', {'weight': 0.6})
('pseudo-polynomial time', 'exchange algorithm', {'weight': 0.6})
('pseudo-polynomial time', 'dover publications', {'weight': 0.6})
('pseudo-polynomial time', 'seam carving', {'weight': 0.6})
('pseudo-polynomial time', 'recursive least squares', {'weight': 0.6})
('pseudo-polynomial time', 'metaheuristic', {'weight': 0.6})
('pseudo-polynomial time', 'quasi-newton method', {'weight': 0.6})
('pseudo-polynomial time', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('pseudo-polynomial time', 'robert e. lucas', {'weight': 0.6})
('pseudo-polynomial time', 'non-convexity (economics)', {'weight': 0.6})
('pseudo-polynomial time', 'computational complexity theory', {'weight': 0.5})
('pseudo-polynomial time', 'mathematical reviews', {'weight': 0.6})
('pseudo-polynomial time', 'puzzle', {'weight': 0.6})
('pseudo-polynomial time', 'associative array', {'weight': 0.6})
('pseudo-polynomial time', 'complexity classes', {'weight': 0.5})
('pseudo-polynomial time', 'shortest path problem', {'weight': 0.6})
('pseudo-polynomial time', 'dynamic algorithm', {'weight': 0.6})
('pseudo-polynomial time', 'augmented lagrangian method', {'weight': 0.6})
('pseudo-polynomial time', 'charles delisi', {'weight': 0.6})
('pseudo-polynomial time', 'greedy algorithm', {'weight': 0.6})
('pseudo-polynomial time', "karmarkar's algorithm", {'weight': 0.6})
('pseudo-polynomial time', 'lattice models', {'weight': 0.6})
('pseudo-polynomial time', 'utility', {'weight': 0.6})
('pseudo-polynomial time', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('pseudo-polynomial time', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('pseudo-polynomial time', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('pseudo-polynomial time', 'international standard book number', {'weight': 0.6})
('pseudo-polynomial time', 'undirected graph', {'weight': 0.6})
('pseudo-polynomial time', 'scheme (programming language)', {'weight': 0.6})
('pseudo-polynomial time', 'rna structure', {'weight': 0.6})
('pseudo-polynomial time', 'hanoi', {'weight': 0.6})
('pseudo-polynomial time', 'perl', {'weight': 0.6})
('pseudo-polynomial time', 'digital object identifier', {'weight': 0.6})
('pseudo-polynomial time', 'sequential quadratic programming', {'weight': 0.6})
('pseudo-polynomial time', "dinic's algorithm", {'weight': 0.6})
('pseudo-polynomial time', 'pseudo-polynomial time', {'weight': 1})
('pseudo-polynomial time', 'partition problem', {'weight': 0.6})
('pseudo-polynomial time', 'stochastic programming', {'weight': 0.6})
('pseudo-polynomial time', 'analysis of algorithms', {'weight': 0.5})
('pseudo-polynomial time', 'hill climbing', {'weight': 0.6})
('pseudo-polynomial time', 'top-down', {'weight': 0.6})
('pseudo-polynomial time', 'de boor algorithm', {'weight': 0.6})
('pseudo-polynomial time', 'optimization algorithm', {'weight': 0.6})
('pseudo-polynomial time', "kruskal's algorithm", {'weight': 0.6})
('pseudo-polynomial time', 'jacques philippe marie binet', {'weight': 0.6})
('pseudo-polynomial time', 'tabu search', {'weight': 0.6})
('pseudo-polynomial time', 'divide and conquer algorithm', {'weight': 0.6})
('pseudo-polynomial time', 'pseudo-polynomial time algorithms', {'weight': 0.5})
('pseudo-polynomial time', 'evolutionary algorithm', {'weight': 0.6})
('pseudo-polynomial time', 'clique-width', {'weight': 0.6})
('pseudo-polynomial time', 'dynamic programming', {'weight': 0.6})
('pseudo-polynomial time', 'subroutine', {'weight': 0.6})
('pseudo-polynomial time', 'simulated annealing', {'weight': 0.6})
('pseudo-polynomial time', 'tower of hanoi', {'weight': 0.6})
('pseudo-polynomial time', 'branch and bound', {'weight': 0.6})
('pseudo-polynomial time', 'engineering', {'weight': 0.6})
('pseudo-polynomial time', 'matroid', {'weight': 0.6})
('pseudo-polynomial time', 'viterbi algorithm', {'weight': 0.6})
('pseudo-polynomial time', "lemke's algorithm", {'weight': 0.6})
('pseudo-polynomial time', 'simplex algorithm', {'weight': 0.6})
('pseudo-polynomial time', 'local search (optimization)', {'weight': 0.6})
('pseudo-polynomial time', 'hessian matrix', {'weight': 0.6})
('pseudo-polynomial time', 'ibm system r', {'weight': 0.6})
('pseudo-polynomial time', 'penalty method', {'weight': 0.6})
('pseudo-polynomial time', 'prolog', {'weight': 0.6})
('pseudo-polynomial time', 'time-invariant system', {'weight': 0.6})
('pseudo-polynomial time', 'criss-cross algorithm', {'weight': 0.6})
('pseudo-polynomial time', 'revised simplex algorithm', {'weight': 0.6})
('pseudo-polynomial time', 'the mathematical association of america', {'weight': 0.6})
('pseudo-polynomial time', 'line search', {'weight': 0.6})
('pseudo-polynomial time', 'j (programming language)', {'weight': 0.6})
('pseudo-polynomial time', 'word wrap', {'weight': 0.6})
('pseudo-polynomial time', 'subset sum problem', {'weight': 0.6})
('pseudo-polynomial time', 'integer programming', {'weight': 0.6})
('pseudo-polynomial time', 'nucleosome', {'weight': 0.6})
('pseudo-polynomial time', 'earley algorithm', {'weight': 0.6})
('pseudo-polynomial time', 'referential transparency (computer science)', {'weight': 0.6})
('pseudo-polynomial time', 'recursion', {'weight': 0.6})
('pseudo-polynomial time', 'mathematica', {'weight': 0.6})
('pseudo-polynomial time', 'quicksort', {'weight': 0.6})
('pseudo-polynomial time', 'recursion (computer science)', {'weight': 0.6})
('pseudo-polynomial time', 'checkerboard', {'weight': 0.6})
('pseudo-polynomial time', 'computer science', {'weight': 0.6})
('pseudo-polynomial time', 'brute-force search', {'weight': 0.6})
('pseudo-polynomial time', 'mathematics', {'weight': 0.6})
('pseudo-polynomial time', 'depth-first search', {'weight': 0.6})
('pseudo-polynomial time', 'top-down and bottom-up design', {'weight': 0.6})
('pseudo-polynomial time', 'correspondence problem', {'weight': 0.6})
('pseudo-polynomial time', 'transcription factor', {'weight': 0.6})
('pseudo-polynomial time', 'tree decomposition', {'weight': 0.6})
('pseudo-polynomial time', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('pseudo-polynomial time', 'structural alignment', {'weight': 0.6})
('pseudo-polynomial time', 'local convergence', {'weight': 0.6})
('pseudo-polynomial time', 'knapsack problem', {'weight': 0.6})
('pseudo-polynomial time', 'graph algorithm', {'weight': 0.6})
('pseudo-polynomial time', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('pseudo-polynomial time', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('pseudo-polynomial time', 'hidden markov model', {'weight': 0.6})
('pseudo-polynomial time', 'string (computer science)', {'weight': 0.6})
('pseudo-polynomial time', 'bioinformatics', {'weight': 0.6})
('pseudo-polynomial time', 'genetics', {'weight': 0.6})
('pseudo-polynomial time', 'mathematical optimization', {'weight': 0.6})
('pseudo-polynomial time', 'artificial neural networks', {'weight': 0.6})
('pseudo-polynomial time', 'introduction to algorithms', {'weight': 0.6})
('pseudo-polynomial time', 'thomas h. cormen', {'weight': 0.6})
('pseudo-polynomial time', 'music information retrieval', {'weight': 0.6})
('pseudo-polynomial time', 'beat (music)', {'weight': 0.6})
('pseudo-polynomial time', 'longest common subsequence problem', {'weight': 0.6})
('pseudo-polynomial time', 'convex minimization', {'weight': 0.6})
('pseudo-polynomial time', 'successive parabolic interpolation', {'weight': 0.6})
('pseudo-polynomial time', 'fibonacci sequence', {'weight': 0.6})
('pseudo-polynomial time', 'maximum subarray problem', {'weight': 0.6})
('pseudo-polynomial time', 'convex optimization', {'weight': 0.6})
('pseudo-polynomial time', 'memoization', {'weight': 0.6})
('pseudo-polynomial time', 'richard bellman', {'weight': 0.6})
('pseudo-polynomial time', 'exponential growth', {'weight': 0.6})
('pseudo-polynomial time', 'charles e. leiserson', {'weight': 0.6})
('pseudo-polynomial time', 'charles erwin wilson', {'weight': 0.6})
('pseudo-polynomial time', 'interval scheduling', {'weight': 0.6})
('pseudo-polynomial time', 'chart parser', {'weight': 0.6})
('pseudo-polynomial time', 'travelling salesman problem', {'weight': 0.6})
('pseudo-polynomial time', 'bellman equation', {'weight': 0.6})
('divide and conquer algorithm', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('divide and conquer algorithm', 'photoshop', {'weight': 0.6})
('divide and conquer algorithm', 'sequence alignment', {'weight': 0.6})
('divide and conquer algorithm', 'flow network', {'weight': 0.6})
('divide and conquer algorithm', 'divide and rule', {'weight': 0.7})
('divide and conquer algorithm', 'ellipsoid method', {'weight': 0.6})
('divide and conquer algorithm', 'chain matrix multiplication', {'weight': 0.6})
('divide and conquer algorithm', 'ieee', {'weight': 0.6})
('divide and conquer algorithm', 'backtracking', {'weight': 0.6})
('divide and conquer algorithm', 'nonlinear conjugate gradient method', {'weight': 0.6})
('divide and conquer algorithm', 'dynamic problem', {'weight': 0.6})
('divide and conquer algorithm', 'trust region', {'weight': 0.6})
('divide and conquer algorithm', 'function (mathematics)', {'weight': 0.6})
('divide and conquer algorithm', 'minimum spanning tree', {'weight': 0.6})
('divide and conquer algorithm', 'context-free grammar', {'weight': 0.6})
('divide and conquer algorithm', 'branch and cut', {'weight': 0.6})
('divide and conquer algorithm', 'state variable', {'weight': 0.6})
('divide and conquer algorithm', 'treewidth', {'weight': 0.6})
('divide and conquer algorithm', 'mathematical induction', {'weight': 0.7})
('divide and conquer algorithm', 'optimization algorithms and methods', {'weight': 0.5})
('divide and conquer algorithm', 'overlapping subproblem', {'weight': 0.6})
('divide and conquer algorithm', 'taylor & francis', {'weight': 0.6})
('divide and conquer algorithm', 'cutting-plane method', {'weight': 0.6})
('divide and conquer algorithm', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('divide and conquer algorithm', 'method of undetermined coefficients', {'weight': 0.6})
('divide and conquer algorithm', 'combinatorial optimization', {'weight': 0.6})
('divide and conquer algorithm', "newton's method in optimization", {'weight': 0.6})
('divide and conquer algorithm', 'matrix chain multiplication', {'weight': 0.6})
('divide and conquer algorithm', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('divide and conquer algorithm', 'dynamic time warping', {'weight': 0.6})
('divide and conquer algorithm', 'dynamic programming language', {'weight': 0.6})
('divide and conquer algorithm', 'call-by-need', {'weight': 0.6})
('divide and conquer algorithm', 'big-o notation', {'weight': 0.6})
('divide and conquer algorithm', 'comparison of optimization software', {'weight': 0.6})
('divide and conquer algorithm', 'quadratic programming', {'weight': 0.6})
('divide and conquer algorithm', 'mapreduce', {'weight': 0.7})
('divide and conquer algorithm', 'common lisp', {'weight': 0.6})
('divide and conquer algorithm', 'barrier function', {'weight': 0.6})
('divide and conquer algorithm', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('divide and conquer algorithm', 'gradient descent', {'weight': 0.6})
('divide and conquer algorithm', 'patricia selinger', {'weight': 0.6})
('divide and conquer algorithm', 'discounting', {'weight': 0.6})
('divide and conquer algorithm', 'ronald l. rivest', {'weight': 0.6})
('divide and conquer algorithm', 'iterative method', {'weight': 0.6})
('divide and conquer algorithm', 'limited-memory bfgs', {'weight': 0.6})
('divide and conquer algorithm', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('divide and conquer algorithm', 'longest common substring problem', {'weight': 0.6})
('divide and conquer algorithm', 'clifford stein', {'weight': 0.6})
('divide and conquer algorithm', 'computer chess', {'weight': 0.6})
('divide and conquer algorithm', 'linear programming', {'weight': 0.6})
('divide and conquer algorithm', 'bitonic tour', {'weight': 0.6})
('divide and conquer algorithm', 'linear search problem', {'weight': 0.6})
('divide and conquer algorithm', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('divide and conquer algorithm', 'systems analysis', {'weight': 0.6})
('divide and conquer algorithm', 'capital (economics)', {'weight': 0.6})
('divide and conquer algorithm', 'levenshtein distance', {'weight': 0.6})
('divide and conquer algorithm', 'nonlinear programming', {'weight': 0.6})
('divide and conquer algorithm', 'computational complexity of mathematical operations', {'weight': 0.6})
('divide and conquer algorithm', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('divide and conquer algorithm', 'gradient', {'weight': 0.6})
('divide and conquer algorithm', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('divide and conquer algorithm', 'fork\xe2\x80\x93join model', {'weight': 0.7})
('divide and conquer algorithm', 'bulletin of the american mathematical society', {'weight': 0.6})
('divide and conquer algorithm', 'u.s. english', {'weight': 0.6})
('divide and conquer algorithm', 'refutation table', {'weight': 0.6})
('divide and conquer algorithm', 'heuristic algorithm', {'weight': 0.6})
('divide and conquer algorithm', 'successive linear programming', {'weight': 0.6})
('divide and conquer algorithm', 'optimal substructure', {'weight': 0.6})
('divide and conquer algorithm', 'programming language', {'weight': 0.6})
('divide and conquer algorithm', 'mergesort', {'weight': 0.6})
('divide and conquer algorithm', "dijkstra's algorithm", {'weight': 0.6})
('divide and conquer algorithm', 'subgradient method', {'weight': 0.6})
('divide and conquer algorithm', 'call-by-name', {'weight': 0.6})
('divide and conquer algorithm', 'longest increasing subsequence problem', {'weight': 0.6})
('divide and conquer algorithm', 'edward prescott', {'weight': 0.6})
('divide and conquer algorithm', 'exponential time', {'weight': 0.6})
('divide and conquer algorithm', 'principle of optimality', {'weight': 0.6})
('divide and conquer algorithm', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('divide and conquer algorithm', 'mathematical game', {'weight': 0.6})
('divide and conquer algorithm', 'nancy stokey', {'weight': 0.6})
('divide and conquer algorithm', 'approximation algorithm', {'weight': 0.6})
('divide and conquer algorithm', 'discrete-time', {'weight': 0.6})
('divide and conquer algorithm', 'cyk algorithm', {'weight': 0.6})
('divide and conquer algorithm', 'markov decision process', {'weight': 0.6})
('divide and conquer algorithm', "powell's method", {'weight': 0.6})
('divide and conquer algorithm', 'wolfe conditions', {'weight': 0.6})
('divide and conquer algorithm', 'convexity in economics', {'weight': 0.6})
('divide and conquer algorithm', 'transposition table', {'weight': 0.6})
('divide and conquer algorithm', 'economics', {'weight': 0.6})
('divide and conquer algorithm', 'backward induction', {'weight': 0.6})
('divide and conquer algorithm', 'golden section search', {'weight': 0.6})
('divide and conquer algorithm', 'edit distance', {'weight': 0.6})
('divide and conquer algorithm', 'tree structure', {'weight': 0.6})
('divide and conquer algorithm', 'exchange algorithm', {'weight': 0.6})
('divide and conquer algorithm', 'dover publications', {'weight': 0.6})
('divide and conquer algorithm', 'seam carving', {'weight': 0.6})
('divide and conquer algorithm', 'recursive least squares', {'weight': 0.6})
('divide and conquer algorithm', 'metaheuristic', {'weight': 0.6})
('divide and conquer algorithm', 'quasi-newton method', {'weight': 0.6})
('divide and conquer algorithm', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('divide and conquer algorithm', 'robert e. lucas', {'weight': 0.6})
('divide and conquer algorithm', 'non-convexity (economics)', {'weight': 0.6})
('divide and conquer algorithm', 'sr1 formula', {'weight': 0.6})
('divide and conquer algorithm', 'mathematical reviews', {'weight': 0.6})
('divide and conquer algorithm', 'puzzle', {'weight': 0.6})
('divide and conquer algorithm', 'associative array', {'weight': 0.6})
('divide and conquer algorithm', 'shortest path problem', {'weight': 0.6})
('divide and conquer algorithm', 'dynamic algorithm', {'weight': 0.6})
('divide and conquer algorithm', 'augmented lagrangian method', {'weight': 0.6})
('divide and conquer algorithm', 'charles delisi', {'weight': 0.6})
('divide and conquer algorithm', 'greedy algorithm', {'weight': 0.6})
('divide and conquer algorithm', "karmarkar's algorithm", {'weight': 0.6})
('divide and conquer algorithm', 'interval scheduling', {'weight': 0.6})
('divide and conquer algorithm', 'lattice models', {'weight': 0.6})
('divide and conquer algorithm', 'utility', {'weight': 0.6})
('divide and conquer algorithm', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('divide and conquer algorithm', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('divide and conquer algorithm', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('divide and conquer algorithm', 'international standard book number', {'weight': 0.6})
('divide and conquer algorithm', 'undirected graph', {'weight': 0.6})
('divide and conquer algorithm', 'scheme (programming language)', {'weight': 0.6})
('divide and conquer algorithm', 'rna structure', {'weight': 0.6})
('divide and conquer algorithm', 'hanoi', {'weight': 0.6})
('divide and conquer algorithm', 'perl', {'weight': 0.6})
('divide and conquer algorithm', 'digital object identifier', {'weight': 0.6})
('divide and conquer algorithm', 'sequential quadratic programming', {'weight': 0.6})
('divide and conquer algorithm', "dinic's algorithm", {'weight': 0.6})
('divide and conquer algorithm', 'pseudo-polynomial time', {'weight': 0.6})
('divide and conquer algorithm', 'partition problem', {'weight': 0.6})
('divide and conquer algorithm', 'operations research', {'weight': 0.5})
('divide and conquer algorithm', 'hill climbing', {'weight': 0.6})
('divide and conquer algorithm', 'top-down', {'weight': 0.6})
('divide and conquer algorithm', 'de boor algorithm', {'weight': 0.6})
('divide and conquer algorithm', 'optimization algorithm', {'weight': 0.6})
('divide and conquer algorithm', "kruskal's algorithm", {'weight': 0.6})
('divide and conquer algorithm', 'jacques philippe marie binet', {'weight': 0.6})
('divide and conquer algorithm', 'tabu search', {'weight': 0.6})
('divide and conquer algorithm', 'computer science portal', {'weight': 0.7})
('divide and conquer algorithm', 'divide and conquer algorithm', {'weight': 1})
('divide and conquer algorithm', "johnson's algorithm", {'weight': 0.6})
('divide and conquer algorithm', 'evolutionary algorithm', {'weight': 0.6})
('divide and conquer algorithm', 'clique-width', {'weight': 0.6})
('divide and conquer algorithm', 'dynamic programming', {'weight': 0.6})
('divide and conquer algorithm', 'subroutine', {'weight': 0.6})
('divide and conquer algorithm', 'simulated annealing', {'weight': 0.6})
('divide and conquer algorithm', 'tower of hanoi', {'weight': 0.6})
('divide and conquer algorithm', 'branch and bound', {'weight': 0.6})
('divide and conquer algorithm', 'engineering', {'weight': 0.6})
('divide and conquer algorithm', 'matroid', {'weight': 0.6})
('divide and conquer algorithm', 'akra\xe2\x80\x93bazzi method', {'weight': 0.7})
('divide and conquer algorithm', 'viterbi algorithm', {'weight': 0.6})
('divide and conquer algorithm', "lemke's algorithm", {'weight': 0.6})
('divide and conquer algorithm', 'simplex algorithm', {'weight': 0.6})
('divide and conquer algorithm', 'stochastic programming', {'weight': 0.6})
('divide and conquer algorithm', 'hessian matrix', {'weight': 0.6})
('divide and conquer algorithm', 'master theorem', {'weight': 0.7})
('divide and conquer algorithm', 'ibm system r', {'weight': 0.6})
('divide and conquer algorithm', 'penalty method', {'weight': 0.6})
('divide and conquer algorithm', 'prolog', {'weight': 0.6})
('divide and conquer algorithm', 'time-invariant system', {'weight': 0.6})
('divide and conquer algorithm', 'criss-cross algorithm', {'weight': 0.6})
('divide and conquer algorithm', 'revised simplex algorithm', {'weight': 0.6})
('divide and conquer algorithm', 'the mathematical association of america', {'weight': 0.6})
('divide and conquer algorithm', 'line search', {'weight': 0.6})
('divide and conquer algorithm', 'j (programming language)', {'weight': 0.6})
('divide and conquer algorithm', 'word wrap', {'weight': 0.6})
('divide and conquer algorithm', 'subset sum problem', {'weight': 0.6})
('divide and conquer algorithm', 'integer programming', {'weight': 0.6})
('divide and conquer algorithm', 'nucleosome', {'weight': 0.6})
('divide and conquer algorithm', 'earley algorithm', {'weight': 0.6})
('divide and conquer algorithm', 'referential transparency (computer science)', {'weight': 0.6})
('divide and conquer algorithm', 'recursion', {'weight': 0.6})
('divide and conquer algorithm', 'mathematica', {'weight': 0.6})
('divide and conquer algorithm', 'quicksort', {'weight': 0.6})
('divide and conquer algorithm', 'recursion (computer science)', {'weight': 0.6})
('divide and conquer algorithm', 'checkerboard', {'weight': 0.6})
('divide and conquer algorithm', 'computer science', {'weight': 0.6})
('divide and conquer algorithm', 'brute-force search', {'weight': 0.6})
('divide and conquer algorithm', 'mathematics', {'weight': 0.6})
('divide and conquer algorithm', 'heuristic (computer science)', {'weight': 0.7})
('divide and conquer algorithm', 'depth-first search', {'weight': 0.6})
('divide and conquer algorithm', 'top-down and bottom-up design', {'weight': 0.6})
('divide and conquer algorithm', 'correspondence problem', {'weight': 0.6})
('divide and conquer algorithm', 'transcription factor', {'weight': 0.6})
('divide and conquer algorithm', 'tree decomposition', {'weight': 0.6})
('divide and conquer algorithm', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('divide and conquer algorithm', 'structural alignment', {'weight': 0.6})
('divide and conquer algorithm', 'local convergence', {'weight': 0.6})
('divide and conquer algorithm', 'knapsack problem', {'weight': 0.6})
('divide and conquer algorithm', 'graph algorithm', {'weight': 0.6})
('divide and conquer algorithm', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('divide and conquer algorithm', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('divide and conquer algorithm', 'hidden markov model', {'weight': 0.6})
('divide and conquer algorithm', 'string (computer science)', {'weight': 0.6})
('divide and conquer algorithm', 'bioinformatics', {'weight': 0.6})
('divide and conquer algorithm', 'genetics', {'weight': 0.6})
('divide and conquer algorithm', 'mathematical optimization', {'weight': 0.6})
('divide and conquer algorithm', 'local search (optimization)', {'weight': 0.6})
('divide and conquer algorithm', 'artificial neural networks', {'weight': 0.6})
('divide and conquer algorithm', 'introduction to algorithms', {'weight': 0.6})
('divide and conquer algorithm', 'thomas h. cormen', {'weight': 0.6})
('divide and conquer algorithm', 'music information retrieval', {'weight': 0.6})
('divide and conquer algorithm', 'beat (music)', {'weight': 0.6})
('divide and conquer algorithm', 'longest common subsequence problem', {'weight': 0.6})
('divide and conquer algorithm', 'convex minimization', {'weight': 0.6})
('divide and conquer algorithm', 'successive parabolic interpolation', {'weight': 0.6})
('divide and conquer algorithm', 'fibonacci sequence', {'weight': 0.6})
('divide and conquer algorithm', 'maximum subarray problem', {'weight': 0.6})
('divide and conquer algorithm', 'convex optimization', {'weight': 0.6})
('divide and conquer algorithm', 'memoization', {'weight': 0.6})
('divide and conquer algorithm', 'richard bellman', {'weight': 0.6})
('divide and conquer algorithm', 'exponential growth', {'weight': 0.6})
('divide and conquer algorithm', 'charles e. leiserson', {'weight': 0.6})
('divide and conquer algorithm', 'charles erwin wilson', {'weight': 0.6})
('divide and conquer algorithm', 'algorithms', {'weight': 0.5})
('divide and conquer algorithm', 'chart parser', {'weight': 0.6})
('divide and conquer algorithm', 'travelling salesman problem', {'weight': 0.6})
('divide and conquer algorithm', 'bellman equation', {'weight': 0.6})
('clique-width', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('clique-width', 'photoshop', {'weight': 0.6})
('clique-width', 'sequence alignment', {'weight': 0.6})
('clique-width', 'flow network', {'weight': 0.6})
('clique-width', 'ellipsoid method', {'weight': 0.6})
('clique-width', 'chain matrix multiplication', {'weight': 0.6})
('clique-width', 'ieee', {'weight': 0.6})
('clique-width', 'backtracking', {'weight': 0.6})
('clique-width', 'nonlinear conjugate gradient method', {'weight': 0.6})
('clique-width', 'dynamic problem', {'weight': 0.6})
('clique-width', 'trust region', {'weight': 0.6})
('clique-width', 'function (mathematics)', {'weight': 0.6})
('clique-width', 'minimum spanning tree', {'weight': 0.6})
('clique-width', 'context-free grammar', {'weight': 0.6})
('clique-width', 'branch and cut', {'weight': 0.6})
('clique-width', 'state variable', {'weight': 0.6})
('clique-width', 'treewidth', {'weight': 0.6})
('clique-width', 'overlapping subproblem', {'weight': 0.6})
('clique-width', 'taylor & francis', {'weight': 0.6})
('clique-width', 'cutting-plane method', {'weight': 0.6})
('clique-width', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('clique-width', 'method of undetermined coefficients', {'weight': 0.6})
('clique-width', 'combinatorial optimization', {'weight': 0.6})
('clique-width', "newton's method in optimization", {'weight': 0.6})
('clique-width', 'matrix chain multiplication', {'weight': 0.6})
('clique-width', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('clique-width', 'dynamic time warping', {'weight': 0.6})
('clique-width', 'dynamic programming language', {'weight': 0.6})
('clique-width', 'call-by-need', {'weight': 0.6})
('clique-width', 'big-o notation', {'weight': 0.6})
('clique-width', 'comparison of optimization software', {'weight': 0.6})
('clique-width', 'quadratic programming', {'weight': 0.6})
('clique-width', 'common lisp', {'weight': 0.6})
('clique-width', 'barrier function', {'weight': 0.6})
('clique-width', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('clique-width', 'gradient descent', {'weight': 0.6})
('clique-width', 'patricia selinger', {'weight': 0.6})
('clique-width', 'discounting', {'weight': 0.6})
('clique-width', 'ronald l. rivest', {'weight': 0.6})
('clique-width', 'iterative method', {'weight': 0.6})
('clique-width', 'limited-memory bfgs', {'weight': 0.6})
('clique-width', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('clique-width', 'longest common substring problem', {'weight': 0.6})
('clique-width', 'clifford stein', {'weight': 0.6})
('clique-width', 'computer chess', {'weight': 0.6})
('clique-width', 'linear programming', {'weight': 0.6})
('clique-width', 'bitonic tour', {'weight': 0.6})
('clique-width', 'linear search problem', {'weight': 0.6})
('clique-width', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('clique-width', 'systems analysis', {'weight': 0.6})
('clique-width', 'capital (economics)', {'weight': 0.6})
('clique-width', 'levenshtein distance', {'weight': 0.6})
('clique-width', 'nonlinear programming', {'weight': 0.6})
('clique-width', 'computational complexity of mathematical operations', {'weight': 0.6})
('clique-width', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('clique-width', 'gradient', {'weight': 0.6})
('clique-width', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('clique-width', 'bulletin of the american mathematical society', {'weight': 0.6})
('clique-width', 'u.s. english', {'weight': 0.6})
('clique-width', 'refutation table', {'weight': 0.6})
('clique-width', 'heuristic algorithm', {'weight': 0.6})
('clique-width', 'successive linear programming', {'weight': 0.6})
('clique-width', 'optimal substructure', {'weight': 0.6})
('clique-width', 'programming language', {'weight': 0.6})
('clique-width', 'mergesort', {'weight': 0.6})
('clique-width', "dijkstra's algorithm", {'weight': 0.6})
('clique-width', 'subgradient method', {'weight': 0.6})
('clique-width', 'call-by-name', {'weight': 0.6})
('clique-width', 'longest increasing subsequence problem', {'weight': 0.6})
('clique-width', 'edward prescott', {'weight': 0.6})
('clique-width', 'exponential time', {'weight': 0.6})
('clique-width', 'principle of optimality', {'weight': 0.6})
('clique-width', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('clique-width', 'mathematical game', {'weight': 0.6})
('clique-width', 'nancy stokey', {'weight': 0.6})
('clique-width', 'approximation algorithm', {'weight': 0.6})
('clique-width', 'discrete-time', {'weight': 0.6})
('clique-width', 'cyk algorithm', {'weight': 0.6})
('clique-width', 'markov decision process', {'weight': 0.6})
('clique-width', "powell's method", {'weight': 0.6})
('clique-width', 'wolfe conditions', {'weight': 0.6})
('clique-width', 'convexity in economics', {'weight': 0.6})
('clique-width', 'transposition table', {'weight': 0.6})
('clique-width', 'economics', {'weight': 0.6})
('clique-width', 'backward induction', {'weight': 0.6})
('clique-width', 'golden section search', {'weight': 0.6})
('clique-width', 'edit distance', {'weight': 0.6})
('clique-width', 'tree structure', {'weight': 0.6})
('clique-width', 'exchange algorithm', {'weight': 0.6})
('clique-width', 'dover publications', {'weight': 0.6})
('clique-width', 'seam carving', {'weight': 0.6})
('clique-width', 'recursive least squares', {'weight': 0.6})
('clique-width', 'metaheuristic', {'weight': 0.6})
('clique-width', 'quasi-newton method', {'weight': 0.6})
('clique-width', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('clique-width', 'robert e. lucas', {'weight': 0.6})
('clique-width', 'non-convexity (economics)', {'weight': 0.6})
('clique-width', 'sr1 formula', {'weight': 0.6})
('clique-width', 'mathematical reviews', {'weight': 0.6})
('clique-width', 'puzzle', {'weight': 0.6})
('clique-width', 'associative array', {'weight': 0.6})
('clique-width', 'shortest path problem', {'weight': 0.6})
('clique-width', 'dynamic algorithm', {'weight': 0.6})
('clique-width', 'augmented lagrangian method', {'weight': 0.6})
('clique-width', 'charles delisi', {'weight': 0.6})
('clique-width', 'greedy algorithm', {'weight': 0.6})
('clique-width', "karmarkar's algorithm", {'weight': 0.6})
('clique-width', 'lattice models', {'weight': 0.6})
('clique-width', 'utility', {'weight': 0.6})
('clique-width', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('clique-width', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('clique-width', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('clique-width', 'international standard book number', {'weight': 0.6})
('clique-width', 'undirected graph', {'weight': 0.6})
('clique-width', 'scheme (programming language)', {'weight': 0.6})
('clique-width', 'rna structure', {'weight': 0.6})
('clique-width', 'hanoi', {'weight': 0.6})
('clique-width', 'perl', {'weight': 0.6})
('clique-width', 'digital object identifier', {'weight': 0.6})
('clique-width', 'sequential quadratic programming', {'weight': 0.6})
('clique-width', "dinic's algorithm", {'weight': 0.6})
('clique-width', 'pseudo-polynomial time', {'weight': 0.6})
('clique-width', 'partition problem', {'weight': 0.6})
('clique-width', 'stochastic programming', {'weight': 0.6})
('clique-width', 'hill climbing', {'weight': 0.6})
('clique-width', 'top-down', {'weight': 0.6})
('clique-width', 'de boor algorithm', {'weight': 0.6})
('clique-width', 'optimization algorithm', {'weight': 0.6})
('clique-width', "kruskal's algorithm", {'weight': 0.6})
('clique-width', 'jacques philippe marie binet', {'weight': 0.6})
('clique-width', 'tabu search', {'weight': 0.6})
('clique-width', 'graph invariants', {'weight': 0.5})
('clique-width', 'divide and conquer algorithm', {'weight': 0.6})
('clique-width', "johnson's algorithm", {'weight': 0.6})
('clique-width', 'evolutionary algorithm', {'weight': 0.6})
('clique-width', 'clique-width', {'weight': 1})
('clique-width', 'dynamic programming', {'weight': 0.6})
('clique-width', 'subroutine', {'weight': 0.6})
('clique-width', 'simulated annealing', {'weight': 0.6})
('clique-width', 'tower of hanoi', {'weight': 0.6})
('clique-width', 'branch and bound', {'weight': 0.6})
('clique-width', 'engineering', {'weight': 0.6})
('clique-width', 'matroid', {'weight': 0.6})
('clique-width', 'viterbi algorithm', {'weight': 0.6})
('clique-width', "lemke's algorithm", {'weight': 0.6})
('clique-width', 'simplex algorithm', {'weight': 0.6})
('clique-width', 'local search (optimization)', {'weight': 0.6})
('clique-width', 'hessian matrix', {'weight': 0.6})
('clique-width', 'ibm system r', {'weight': 0.6})
('clique-width', 'penalty method', {'weight': 0.6})
('clique-width', 'prolog', {'weight': 0.6})
('clique-width', 'time-invariant system', {'weight': 0.6})
('clique-width', 'criss-cross algorithm', {'weight': 0.6})
('clique-width', 'revised simplex algorithm', {'weight': 0.6})
('clique-width', 'the mathematical association of america', {'weight': 0.6})
('clique-width', 'line search', {'weight': 0.6})
('clique-width', 'j (programming language)', {'weight': 0.6})
('clique-width', 'word wrap', {'weight': 0.6})
('clique-width', 'subset sum problem', {'weight': 0.6})
('clique-width', 'integer programming', {'weight': 0.6})
('clique-width', 'nucleosome', {'weight': 0.6})
('clique-width', 'earley algorithm', {'weight': 0.6})
('clique-width', 'referential transparency (computer science)', {'weight': 0.6})
('clique-width', 'recursion', {'weight': 0.6})
('clique-width', 'mathematica', {'weight': 0.6})
('clique-width', 'quicksort', {'weight': 0.6})
('clique-width', 'recursion (computer science)', {'weight': 0.6})
('clique-width', 'checkerboard', {'weight': 0.6})
('clique-width', 'computer science', {'weight': 0.6})
('clique-width', 'brute-force search', {'weight': 0.6})
('clique-width', 'mathematics', {'weight': 0.6})
('clique-width', 'depth-first search', {'weight': 0.6})
('clique-width', 'top-down and bottom-up design', {'weight': 0.6})
('clique-width', 'correspondence problem', {'weight': 0.6})
('clique-width', 'transcription factor', {'weight': 0.6})
('clique-width', 'tree decomposition', {'weight': 0.6})
('clique-width', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('clique-width', 'structural alignment', {'weight': 0.6})
('clique-width', 'local convergence', {'weight': 0.6})
('clique-width', 'knapsack problem', {'weight': 0.6})
('clique-width', 'graph algorithm', {'weight': 0.6})
('clique-width', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('clique-width', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('clique-width', 'hidden markov model', {'weight': 0.6})
('clique-width', 'string (computer science)', {'weight': 0.6})
('clique-width', 'bioinformatics', {'weight': 0.6})
('clique-width', 'genetics', {'weight': 0.6})
('clique-width', 'mathematical optimization', {'weight': 0.6})
('clique-width', 'artificial neural networks', {'weight': 0.6})
('clique-width', 'introduction to algorithms', {'weight': 0.6})
('clique-width', 'thomas h. cormen', {'weight': 0.6})
('clique-width', 'music information retrieval', {'weight': 0.6})
('clique-width', 'beat (music)', {'weight': 0.6})
('clique-width', 'longest common subsequence problem', {'weight': 0.6})
('clique-width', 'convex minimization', {'weight': 0.6})
('clique-width', 'successive parabolic interpolation', {'weight': 0.6})
('clique-width', 'fibonacci sequence', {'weight': 0.6})
('clique-width', 'maximum subarray problem', {'weight': 0.6})
('clique-width', 'convex optimization', {'weight': 0.6})
('clique-width', 'memoization', {'weight': 0.6})
('clique-width', 'richard bellman', {'weight': 0.6})
('clique-width', 'exponential growth', {'weight': 0.6})
('clique-width', 'charles e. leiserson', {'weight': 0.6})
('clique-width', 'charles erwin wilson', {'weight': 0.6})
('clique-width', 'interval scheduling', {'weight': 0.6})
('clique-width', 'chart parser', {'weight': 0.6})
('clique-width', 'travelling salesman problem', {'weight': 0.6})
('clique-width', 'bellman equation', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'photoshop', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'sequence alignment', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'flow network', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'ellipsoid method', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'chain matrix multiplication', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'ieee', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'backtracking', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'nonlinear conjugate gradient method', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'dynamic problem', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'trust region', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'function (mathematics)', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'minimum spanning tree', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'context-free grammar', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'branch and cut', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'state variable', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'treewidth', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'overlapping subproblem', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'taylor & francis', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'cutting-plane method', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'method of undetermined coefficients', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'combinatorial optimization', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', "newton's method in optimization", {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'matrix chain multiplication', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'dynamic time warping', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'dynamic programming language', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'call-by-need', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'big-o notation', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'comparison of optimization software', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'quadratic programming', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'common lisp', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'barrier function', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'gradient descent', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'patricia selinger', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'discounting', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'ronald l. rivest', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'iterative method', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'limited-memory bfgs', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'longest common substring problem', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'clifford stein', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'computer chess', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'linear programming', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'bitonic tour', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'linear search problem', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'nelder\xe2\x80\x93mead method', {'weight': 1})
('nelder\xe2\x80\x93mead method', 'systems analysis', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'capital (economics)', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'levenshtein distance', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'nonlinear programming', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'computational complexity of mathematical operations', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'gradient', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'bulletin of the american mathematical society', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'u.s. english', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'refutation table', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'heuristic algorithm', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'successive linear programming', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'optimal substructure', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'programming language', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'mergesort', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', "dijkstra's algorithm", {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'subgradient method', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'call-by-name', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'longest increasing subsequence problem', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'edward prescott', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'exponential time', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'principle of optimality', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'mathematical game', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'nancy stokey', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'approximation algorithm', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'discrete-time', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'cyk algorithm', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'markov decision process', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', "powell's method", {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'wolfe conditions', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'convexity in economics', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'transposition table', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'economics', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'backward induction', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'golden section search', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'edit distance', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'tree structure', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'exchange algorithm', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'dover publications', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'seam carving', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'recursive least squares', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'metaheuristic', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'quasi-newton method', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'robert e. lucas', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'non-convexity (economics)', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'sr1 formula', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'mathematical reviews', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'puzzle', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'associative array', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'shortest path problem', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'dynamic algorithm', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'augmented lagrangian method', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'charles delisi', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'greedy algorithm', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', "karmarkar's algorithm", {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'lattice models', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'utility', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'international standard book number', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'undirected graph', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'scheme (programming language)', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'rna structure', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'hanoi', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'perl', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'digital object identifier', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'sequential quadratic programming', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', "dinic's algorithm", {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'pseudo-polynomial time', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'partition problem', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'stochastic programming', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'hill climbing', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'top-down', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'de boor algorithm', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'optimization algorithm', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', "kruskal's algorithm", {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'jacques philippe marie binet', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'tabu search', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'divide and conquer algorithm', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', "johnson's algorithm", {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'evolutionary algorithm', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'clique-width', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'dynamic programming', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'subroutine', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'simulated annealing', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'tower of hanoi', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'branch and bound', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'engineering', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'matroid', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'viterbi algorithm', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', "lemke's algorithm", {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'simplex algorithm', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'local search (optimization)', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'hessian matrix', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'ibm system r', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'penalty method', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'prolog', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'time-invariant system', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'criss-cross algorithm', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'revised simplex algorithm', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'the mathematical association of america', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'line search', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'j (programming language)', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'word wrap', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'subset sum problem', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'integer programming', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'nucleosome', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'earley algorithm', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'referential transparency (computer science)', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'recursion', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'mathematica', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'quicksort', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'recursion (computer science)', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'checkerboard', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'computer science', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'brute-force search', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'mathematics', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'depth-first search', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'top-down and bottom-up design', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'correspondence problem', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'transcription factor', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'tree decomposition', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'structural alignment', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'local convergence', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'knapsack problem', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'graph algorithm', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'hidden markov model', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'string (computer science)', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'bioinformatics', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'genetics', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'mathematical optimization', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'artificial neural networks', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'introduction to algorithms', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'thomas h. cormen', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'music information retrieval', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'beat (music)', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'longest common subsequence problem', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'convex minimization', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'successive parabolic interpolation', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'fibonacci sequence', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'maximum subarray problem', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'convex optimization', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'memoization', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'richard bellman', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'exponential growth', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'charles e. leiserson', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'charles erwin wilson', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'interval scheduling', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'chart parser', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'travelling salesman problem', {'weight': 0.6})
('nelder\xe2\x80\x93mead method', 'bellman equation', {'weight': 0.6})
('matroid', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('matroid', 'photoshop', {'weight': 0.6})
('matroid', 'sequence alignment', {'weight': 0.6})
('matroid', 'flow network', {'weight': 0.6})
('matroid', 'polymatroid', {'weight': 0.7})
('matroid', 'ellipsoid method', {'weight': 0.6})
('matroid', 'chain matrix multiplication', {'weight': 0.6})
('matroid', 'ieee', {'weight': 0.6})
('matroid', 'backtracking', {'weight': 0.6})
('matroid', 'nonlinear conjugate gradient method', {'weight': 0.6})
('matroid', 'dynamic problem', {'weight': 0.6})
('matroid', 'trust region', {'weight': 0.6})
('matroid', 'function (mathematics)', {'weight': 0.6})
('matroid', 'minimum spanning tree', {'weight': 0.6})
('matroid', 'context-free grammar', {'weight': 0.6})
('matroid', 'branch and cut', {'weight': 0.6})
('matroid', 'state variable', {'weight': 0.6})
('matroid', 'treewidth', {'weight': 0.6})
('matroid', 'overlapping subproblem', {'weight': 0.6})
('matroid', 'taylor & francis', {'weight': 0.6})
('matroid', 'cutting-plane method', {'weight': 0.6})
('matroid', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('matroid', 'method of undetermined coefficients', {'weight': 0.6})
('matroid', 'combinatorial optimization', {'weight': 0.6})
('matroid', "newton's method in optimization", {'weight': 0.6})
('matroid', 'matrix chain multiplication', {'weight': 0.6})
('matroid', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('matroid', 'dynamic time warping', {'weight': 0.6})
('matroid', 'dynamic programming language', {'weight': 0.6})
('matroid', 'call-by-need', {'weight': 0.6})
('matroid', 'big-o notation', {'weight': 0.6})
('matroid', 'comparison of optimization software', {'weight': 0.6})
('matroid', 'quadratic programming', {'weight': 0.6})
('matroid', 'common lisp', {'weight': 0.6})
('matroid', 'barrier function', {'weight': 0.6})
('matroid', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('matroid', 'gradient descent', {'weight': 0.6})
('matroid', 'patricia selinger', {'weight': 0.6})
('matroid', 'discounting', {'weight': 0.6})
('matroid', 'greedoid', {'weight': 0.7})
('matroid', 'ronald l. rivest', {'weight': 0.6})
('matroid', 'iterative method', {'weight': 0.6})
('matroid', 'limited-memory bfgs', {'weight': 0.6})
('matroid', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('matroid', 'longest common substring problem', {'weight': 0.6})
('matroid', 'clifford stein', {'weight': 0.6})
('matroid', 'computer chess', {'weight': 0.6})
('matroid', 'linear programming', {'weight': 0.6})
('matroid', 'bitonic tour', {'weight': 0.6})
('matroid', 'linear search problem', {'weight': 0.6})
('matroid', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('matroid', 'systems analysis', {'weight': 0.6})
('matroid', 'capital (economics)', {'weight': 0.6})
('matroid', 'levenshtein distance', {'weight': 0.6})
('matroid', 'nonlinear programming', {'weight': 0.6})
('matroid', 'computational complexity of mathematical operations', {'weight': 0.6})
('matroid', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('matroid', 'gradient', {'weight': 0.6})
('matroid', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('matroid', 'coxeter matroid', {'weight': 0.7})
('matroid', 'bulletin of the american mathematical society', {'weight': 0.6})
('matroid', 'u.s. english', {'weight': 0.6})
('matroid', 'refutation table', {'weight': 0.6})
('matroid', 'heuristic algorithm', {'weight': 0.6})
('matroid', 'successive linear programming', {'weight': 0.6})
('matroid', 'optimal substructure', {'weight': 0.6})
('matroid', 'programming language', {'weight': 0.6})
('matroid', 'mergesort', {'weight': 0.6})
('matroid', "dijkstra's algorithm", {'weight': 0.6})
('matroid', 'subgradient method', {'weight': 0.6})
('matroid', 'call-by-name', {'weight': 0.6})
('matroid', 'longest increasing subsequence problem', {'weight': 0.6})
('matroid', 'edward prescott', {'weight': 0.6})
('matroid', 'exponential time', {'weight': 0.6})
('matroid', 'principle of optimality', {'weight': 0.6})
('matroid', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('matroid', 'mathematical game', {'weight': 0.6})
('matroid', 'nancy stokey', {'weight': 0.6})
('matroid', 'approximation algorithm', {'weight': 0.6})
('matroid', 'discrete-time', {'weight': 0.6})
('matroid', 'cyk algorithm', {'weight': 0.6})
('matroid', 'markov decision process', {'weight': 0.6})
('matroid', 'set families', {'weight': 0.5})
('matroid', "powell's method", {'weight': 0.6})
('matroid', 'matroid theory', {'weight': 0.5})
('matroid', 'convexity in economics', {'weight': 0.6})
('matroid', 'transposition table', {'weight': 0.6})
('matroid', 'economics', {'weight': 0.6})
('matroid', 'backward induction', {'weight': 0.6})
('matroid', 'golden section search', {'weight': 0.6})
('matroid', 'edit distance', {'weight': 0.6})
('matroid', 'tree structure', {'weight': 0.6})
('matroid', 'antimatroid', {'weight': 0.7})
('matroid', 'exchange algorithm', {'weight': 0.6})
('matroid', 'dover publications', {'weight': 0.6})
('matroid', 'seam carving', {'weight': 0.6})
('matroid', 'recursive least squares', {'weight': 0.6})
('matroid', 'metaheuristic', {'weight': 0.6})
('matroid', 'quasi-newton method', {'weight': 0.6})
('matroid', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('matroid', 'robert e. lucas', {'weight': 0.6})
('matroid', 'non-convexity (economics)', {'weight': 0.6})
('matroid', 'sr1 formula', {'weight': 0.6})
('matroid', 'mathematical reviews', {'weight': 0.6})
('matroid', 'puzzle', {'weight': 0.6})
('matroid', 'associative array', {'weight': 0.6})
('matroid', 'shortest path problem', {'weight': 0.6})
('matroid', 'dynamic algorithm', {'weight': 0.6})
('matroid', 'augmented lagrangian method', {'weight': 0.6})
('matroid', 'charles delisi', {'weight': 0.6})
('matroid', 'greedy algorithm', {'weight': 0.6})
('matroid', "karmarkar's algorithm", {'weight': 0.6})
('matroid', 'lattice models', {'weight': 0.6})
('matroid', 'utility', {'weight': 0.6})
('matroid', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('matroid', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('matroid', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('matroid', 'international standard book number', {'weight': 0.6})
('matroid', 'undirected graph', {'weight': 0.6})
('matroid', 'scheme (programming language)', {'weight': 0.6})
('matroid', 'rna structure', {'weight': 0.6})
('matroid', 'hanoi', {'weight': 0.6})
('matroid', 'perl', {'weight': 0.6})
('matroid', 'digital object identifier', {'weight': 0.6})
('matroid', 'sequential quadratic programming', {'weight': 0.6})
('matroid', "dinic's algorithm", {'weight': 0.6})
('matroid', 'pseudo-polynomial time', {'weight': 0.6})
('matroid', 'partition problem', {'weight': 0.6})
('matroid', 'stochastic programming', {'weight': 0.6})
('matroid', 'hill climbing', {'weight': 0.6})
('matroid', 'top-down', {'weight': 0.6})
('matroid', 'de boor algorithm', {'weight': 0.6})
('matroid', 'optimization algorithm', {'weight': 0.6})
('matroid', "kruskal's algorithm", {'weight': 0.6})
('matroid', 'jacques philippe marie binet', {'weight': 0.6})
('matroid', 'tabu search', {'weight': 0.6})
('matroid', 'divide and conquer algorithm', {'weight': 0.6})
('matroid', 'pregeometry (model theory)', {'weight': 0.7})
('matroid', "johnson's algorithm", {'weight': 0.6})
('matroid', 'evolutionary algorithm', {'weight': 0.6})
('matroid', 'clique-width', {'weight': 0.6})
('matroid', 'wolfe conditions', {'weight': 0.6})
('matroid', 'dynamic programming', {'weight': 0.6})
('matroid', 'subroutine', {'weight': 0.6})
('matroid', 'simulated annealing', {'weight': 0.6})
('matroid', 'tower of hanoi', {'weight': 0.6})
('matroid', 'branch and bound', {'weight': 0.6})
('matroid', 'engineering', {'weight': 0.6})
('matroid', 'matroid', {'weight': 1})
('matroid', 'viterbi algorithm', {'weight': 0.6})
('matroid', "lemke's algorithm", {'weight': 0.6})
('matroid', 'simplex algorithm', {'weight': 0.6})
('matroid', 'local search (optimization)', {'weight': 0.6})
('matroid', 'hessian matrix', {'weight': 0.6})
('matroid', 'ibm system r', {'weight': 0.6})
('matroid', 'penalty method', {'weight': 0.6})
('matroid', 'prolog', {'weight': 0.6})
('matroid', 'time-invariant system', {'weight': 0.6})
('matroid', 'criss-cross algorithm', {'weight': 0.6})
('matroid', 'revised simplex algorithm', {'weight': 0.6})
('matroid', 'the mathematical association of america', {'weight': 0.6})
('matroid', 'line search', {'weight': 0.6})
('matroid', 'j (programming language)', {'weight': 0.6})
('matroid', 'word wrap', {'weight': 0.6})
('matroid', 'subset sum problem', {'weight': 0.6})
('matroid', 'integer programming', {'weight': 0.6})
('matroid', 'nucleosome', {'weight': 0.6})
('matroid', 'earley algorithm', {'weight': 0.6})
('matroid', 'referential transparency (computer science)', {'weight': 0.6})
('matroid', 'recursion', {'weight': 0.6})
('matroid', 'mathematica', {'weight': 0.6})
('matroid', 'quicksort', {'weight': 0.6})
('matroid', 'recursion (computer science)', {'weight': 0.6})
('matroid', 'checkerboard', {'weight': 0.6})
('matroid', 'computer science', {'weight': 0.6})
('matroid', 'brute-force search', {'weight': 0.6})
('matroid', 'mathematics', {'weight': 0.6})
('matroid', 'depth-first search', {'weight': 0.6})
('matroid', 'closure operators', {'weight': 0.5})
('matroid', 'top-down and bottom-up design', {'weight': 0.6})
('matroid', 'correspondence problem', {'weight': 0.6})
('matroid', 'transcription factor', {'weight': 0.6})
('matroid', 'tree decomposition', {'weight': 0.6})
('matroid', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('matroid', 'structural alignment', {'weight': 0.6})
('matroid', 'local convergence', {'weight': 0.6})
('matroid', 'knapsack problem', {'weight': 0.6})
('matroid', 'graph algorithm', {'weight': 0.6})
('matroid', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('matroid', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('matroid', 'hidden markov model', {'weight': 0.6})
('matroid', 'oriented matroid', {'weight': 0.7})
('matroid', 'string (computer science)', {'weight': 0.6})
('matroid', 'bioinformatics', {'weight': 0.6})
('matroid', 'genetics', {'weight': 0.6})
('matroid', 'mathematical optimization', {'weight': 0.6})
('matroid', 'artificial neural networks', {'weight': 0.6})
('matroid', 'introduction to algorithms', {'weight': 0.6})
('matroid', 'thomas h. cormen', {'weight': 0.6})
('matroid', 'music information retrieval', {'weight': 0.6})
('matroid', 'beat (music)', {'weight': 0.6})
('matroid', 'longest common subsequence problem', {'weight': 0.6})
('matroid', 'convex minimization', {'weight': 0.6})
('matroid', 'successive parabolic interpolation', {'weight': 0.6})
('matroid', 'fibonacci sequence', {'weight': 0.6})
('matroid', 'maximum subarray problem', {'weight': 0.6})
('matroid', 'convex optimization', {'weight': 0.6})
('matroid', 'memoization', {'weight': 0.6})
('matroid', 'richard bellman', {'weight': 0.6})
('matroid', 'exponential growth', {'weight': 0.6})
('matroid', 'charles e. leiserson', {'weight': 0.6})
('matroid', 'charles erwin wilson', {'weight': 0.6})
('matroid', 'interval scheduling', {'weight': 0.6})
('matroid', 'chart parser', {'weight': 0.6})
('matroid', 'travelling salesman problem', {'weight': 0.6})
('matroid', 'bellman equation', {'weight': 0.6})
('simplex algorithm', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('simplex algorithm', 'photoshop', {'weight': 0.6})
('simplex algorithm', 'sequence alignment', {'weight': 0.6})
('simplex algorithm', 'flow network', {'weight': 0.6})
('simplex algorithm', 'ellipsoid method', {'weight': 0.6})
('simplex algorithm', 'chain matrix multiplication', {'weight': 0.6})
('simplex algorithm', 'ieee', {'weight': 0.6})
('simplex algorithm', 'backtracking', {'weight': 0.6})
('simplex algorithm', 'exchange algorithms', {'weight': 0.5})
('simplex algorithm', 'dynamic problem', {'weight': 0.6})
('simplex algorithm', 'approximation algorithm', {'weight': 0.6})
('simplex algorithm', 'trust region', {'weight': 0.6})
('simplex algorithm', 'function (mathematics)', {'weight': 0.6})
('simplex algorithm', 'minimum spanning tree', {'weight': 0.6})
('simplex algorithm', 'context-free grammar', {'weight': 0.6})
('simplex algorithm', 'branch and cut', {'weight': 0.6})
('simplex algorithm', 'state variable', {'weight': 0.6})
('simplex algorithm', 'treewidth', {'weight': 0.6})
('simplex algorithm', 'optimization algorithms and methods', {'weight': 0.5})
('simplex algorithm', 'overlapping subproblem', {'weight': 0.6})
('simplex algorithm', 'taylor & francis', {'weight': 0.6})
('simplex algorithm', 'nelder\xe2\x80\x93mead simplicial heuristic', {'weight': 0.7})
('simplex algorithm', 'cutting-plane method', {'weight': 0.6})
('simplex algorithm', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('simplex algorithm', 'method of undetermined coefficients', {'weight': 0.6})
('simplex algorithm', 'combinatorial optimization', {'weight': 0.6})
('simplex algorithm', "newton's method in optimization", {'weight': 0.6})
('simplex algorithm', 'matrix chain multiplication', {'weight': 0.6})
('simplex algorithm', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('simplex algorithm', 'dynamic time warping', {'weight': 0.6})
('simplex algorithm', 'dynamic programming language', {'weight': 0.6})
('simplex algorithm', 'call-by-need', {'weight': 0.6})
('simplex algorithm', 'big-o notation', {'weight': 0.6})
('simplex algorithm', 'comparison of optimization software', {'weight': 0.6})
('simplex algorithm', 'quadratic programming', {'weight': 0.6})
('simplex algorithm', 'common lisp', {'weight': 0.6})
('simplex algorithm', 'barrier function', {'weight': 0.6})
('simplex algorithm', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('simplex algorithm', 'gradient descent', {'weight': 0.6})
('simplex algorithm', 'patricia selinger', {'weight': 0.6})
('simplex algorithm', 'discounting', {'weight': 0.6})
('simplex algorithm', 'ronald l. rivest', {'weight': 0.6})
('simplex algorithm', 'iterative method', {'weight': 0.6})
('simplex algorithm', 'limited-memory bfgs', {'weight': 0.6})
('simplex algorithm', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('simplex algorithm', 'longest common substring problem', {'weight': 0.6})
('simplex algorithm', 'clifford stein', {'weight': 0.6})
('simplex algorithm', 'computer chess', {'weight': 0.6})
('simplex algorithm', 'linear programming', {'weight': 0.6})
('simplex algorithm', 'bitonic tour', {'weight': 0.6})
('simplex algorithm', 'linear search problem', {'weight': 0.6})
('simplex algorithm', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('simplex algorithm', 'systems analysis', {'weight': 0.6})
('simplex algorithm', 'capital (economics)', {'weight': 0.6})
('simplex algorithm', 'levenshtein distance', {'weight': 0.6})
('simplex algorithm', 'nonlinear programming', {'weight': 0.6})
('simplex algorithm', 'genetics', {'weight': 0.6})
('simplex algorithm', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('simplex algorithm', 'gradient', {'weight': 0.6})
('simplex algorithm', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('simplex algorithm', 'bulletin of the american mathematical society', {'weight': 0.6})
('simplex algorithm', 'u.s. english', {'weight': 0.6})
('simplex algorithm', 'refutation table', {'weight': 0.6})
('simplex algorithm', 'heuristic algorithm', {'weight': 0.6})
('simplex algorithm', 'successive linear programming', {'weight': 0.6})
('simplex algorithm', 'optimal substructure', {'weight': 0.6})
('simplex algorithm', 'programming language', {'weight': 0.6})
('simplex algorithm', 'mergesort', {'weight': 0.6})
('simplex algorithm', "dijkstra's algorithm", {'weight': 0.6})
('simplex algorithm', 'subgradient method', {'weight': 0.6})
('simplex algorithm', 'call-by-name', {'weight': 0.6})
('simplex algorithm', 'longest increasing subsequence problem', {'weight': 0.6})
('simplex algorithm', 'edward prescott', {'weight': 0.6})
('simplex algorithm', 'exponential time', {'weight': 0.6})
('simplex algorithm', 'principle of optimality', {'weight': 0.6})
('simplex algorithm', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('simplex algorithm', 'mathematical game', {'weight': 0.6})
('simplex algorithm', 'nancy stokey', {'weight': 0.6})
('simplex algorithm', 'nonlinear conjugate gradient method', {'weight': 0.6})
('simplex algorithm', 'discrete-time', {'weight': 0.6})
('simplex algorithm', 'cyk algorithm', {'weight': 0.6})
('simplex algorithm', 'markov decision process', {'weight': 0.6})
('simplex algorithm', "powell's method", {'weight': 0.6})
('simplex algorithm', 'wolfe conditions', {'weight': 0.6})
('simplex algorithm', 'convexity in economics', {'weight': 0.6})
('simplex algorithm', 'criss-cross algorithm', {'weight': 0.7})
('simplex algorithm', 'transposition table', {'weight': 0.6})
('simplex algorithm', '1947 in computer science', {'weight': 0.5})
('simplex algorithm', 'backward induction', {'weight': 0.6})
('simplex algorithm', 'golden section search', {'weight': 0.6})
('simplex algorithm', 'edit distance', {'weight': 0.6})
('simplex algorithm', 'tree structure', {'weight': 0.6})
('simplex algorithm', 'exchange algorithm', {'weight': 0.6})
('simplex algorithm', 'dover publications', {'weight': 0.6})
('simplex algorithm', 'seam carving', {'weight': 0.6})
('simplex algorithm', 'recursive least squares', {'weight': 0.6})
('simplex algorithm', 'metaheuristic', {'weight': 0.6})
('simplex algorithm', 'quasi-newton method', {'weight': 0.6})
('simplex algorithm', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('simplex algorithm', 'robert e. lucas', {'weight': 0.6})
('simplex algorithm', 'non-convexity (economics)', {'weight': 0.6})
('simplex algorithm', 'sr1 formula', {'weight': 0.6})
('simplex algorithm', 'mathematical reviews', {'weight': 0.6})
('simplex algorithm', 'puzzle', {'weight': 0.6})
('simplex algorithm', 'associative array', {'weight': 0.6})
('simplex algorithm', 'shortest path problem', {'weight': 0.6})
('simplex algorithm', 'dynamic algorithm', {'weight': 0.6})
('simplex algorithm', 'augmented lagrangian method', {'weight': 0.6})
('simplex algorithm', 'charles delisi', {'weight': 0.6})
('simplex algorithm', 'greedy algorithm', {'weight': 0.6})
('simplex algorithm', "karmarkar's algorithm", {'weight': 0.7})
('simplex algorithm', 'lattice models', {'weight': 0.6})
('simplex algorithm', 'utility', {'weight': 0.6})
('simplex algorithm', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('simplex algorithm', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('simplex algorithm', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('simplex algorithm', 'international standard book number', {'weight': 0.6})
('simplex algorithm', 'undirected graph', {'weight': 0.6})
('simplex algorithm', 'scheme (programming language)', {'weight': 0.6})
('simplex algorithm', 'rna structure', {'weight': 0.6})
('simplex algorithm', 'hanoi', {'weight': 0.6})
('simplex algorithm', 'perl', {'weight': 0.6})
('simplex algorithm', 'digital object identifier', {'weight': 0.6})
('simplex algorithm', 'sequential quadratic programming', {'weight': 0.6})
('simplex algorithm', "dinic's algorithm", {'weight': 0.6})
('simplex algorithm', 'pseudo-polynomial time', {'weight': 0.6})
('simplex algorithm', 'partition problem', {'weight': 0.6})
('simplex algorithm', 'operations research', {'weight': 0.5})
('simplex algorithm', 'hill climbing', {'weight': 0.6})
('simplex algorithm', 'top-down', {'weight': 0.6})
('simplex algorithm', 'de boor algorithm', {'weight': 0.6})
('simplex algorithm', 'optimization algorithm', {'weight': 0.6})
('simplex algorithm', "kruskal's algorithm", {'weight': 0.6})
('simplex algorithm', 'jacques philippe marie binet', {'weight': 0.6})
('simplex algorithm', 'tabu search', {'weight': 0.6})
('simplex algorithm', 'divide and conquer algorithm', {'weight': 0.6})
('simplex algorithm', "johnson's algorithm", {'weight': 0.6})
('simplex algorithm', 'evolutionary algorithm', {'weight': 0.6})
('simplex algorithm', 'clique-width', {'weight': 0.6})
('simplex algorithm', 'dynamic programming', {'weight': 0.6})
('simplex algorithm', 'subroutine', {'weight': 0.6})
('simplex algorithm', 'fourier\xe2\x80\x93motzkin elimination', {'weight': 0.7})
('simplex algorithm', 'simulated annealing', {'weight': 0.6})
('simplex algorithm', 'tower of hanoi', {'weight': 0.6})
('simplex algorithm', 'branch and bound', {'weight': 0.6})
('simplex algorithm', 'engineering', {'weight': 0.6})
('simplex algorithm', 'matroid', {'weight': 0.6})
('simplex algorithm', 'viterbi algorithm', {'weight': 0.6})
('simplex algorithm', "lemke's algorithm", {'weight': 0.6})
('simplex algorithm', 'simplex algorithm', {'weight': 1})
('simplex algorithm', 'stochastic programming', {'weight': 0.6})
('simplex algorithm', 'hessian matrix', {'weight': 0.6})
('simplex algorithm', 'ibm system r', {'weight': 0.6})
('simplex algorithm', 'penalty method', {'weight': 0.6})
('simplex algorithm', 'prolog', {'weight': 0.6})
('simplex algorithm', 'time-invariant system', {'weight': 0.6})
('simplex algorithm', 'economics', {'weight': 0.6})
('simplex algorithm', 'revised simplex algorithm', {'weight': 0.6})
('simplex algorithm', 'the mathematical association of america', {'weight': 0.6})
('simplex algorithm', 'pivoting rule of bland', {'weight': 0.7})
('simplex algorithm', 'line search', {'weight': 0.6})
('simplex algorithm', 'j (programming language)', {'weight': 0.6})
('simplex algorithm', 'word wrap', {'weight': 0.6})
('simplex algorithm', 'subset sum problem', {'weight': 0.6})
('simplex algorithm', 'integer programming', {'weight': 0.6})
('simplex algorithm', 'nucleosome', {'weight': 0.6})
('simplex algorithm', 'earley algorithm', {'weight': 0.6})
('simplex algorithm', 'referential transparency (computer science)', {'weight': 0.6})
('simplex algorithm', 'recursion', {'weight': 0.6})
('simplex algorithm', 'mathematica', {'weight': 0.6})
('simplex algorithm', 'quicksort', {'weight': 0.6})
('simplex algorithm', 'recursion (computer science)', {'weight': 0.6})
('simplex algorithm', 'checkerboard', {'weight': 0.6})
('simplex algorithm', 'computer science', {'weight': 0.6})
('simplex algorithm', 'brute-force search', {'weight': 0.6})
('simplex algorithm', 'mathematics', {'weight': 0.6})
('simplex algorithm', 'depth-first search', {'weight': 0.6})
('simplex algorithm', 'top-down and bottom-up design', {'weight': 0.6})
('simplex algorithm', 'correspondence problem', {'weight': 0.6})
('simplex algorithm', 'transcription factor', {'weight': 0.6})
('simplex algorithm', 'tree decomposition', {'weight': 0.6})
('simplex algorithm', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('simplex algorithm', 'structural alignment', {'weight': 0.6})
('simplex algorithm', 'local convergence', {'weight': 0.6})
('simplex algorithm', 'knapsack problem', {'weight': 0.6})
('simplex algorithm', 'graph algorithm', {'weight': 0.6})
('simplex algorithm', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('simplex algorithm', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('simplex algorithm', 'hidden markov model', {'weight': 0.6})
('simplex algorithm', 'string (computer science)', {'weight': 0.6})
('simplex algorithm', 'bioinformatics', {'weight': 0.6})
('simplex algorithm', 'computational complexity of mathematical operations', {'weight': 0.6})
('simplex algorithm', 'mathematical optimization', {'weight': 0.6})
('simplex algorithm', 'local search (optimization)', {'weight': 0.6})
('simplex algorithm', 'artificial neural networks', {'weight': 0.6})
('simplex algorithm', 'introduction to algorithms', {'weight': 0.6})
('simplex algorithm', 'thomas h. cormen', {'weight': 0.6})
('simplex algorithm', 'music information retrieval', {'weight': 0.6})
('simplex algorithm', 'beat (music)', {'weight': 0.6})
('simplex algorithm', 'longest common subsequence problem', {'weight': 0.6})
('simplex algorithm', 'convex minimization', {'weight': 0.6})
('simplex algorithm', 'successive parabolic interpolation', {'weight': 0.6})
('simplex algorithm', 'fibonacci sequence', {'weight': 0.6})
('simplex algorithm', 'maximum subarray problem', {'weight': 0.6})
('simplex algorithm', 'convex optimization', {'weight': 0.6})
('simplex algorithm', 'memoization', {'weight': 0.6})
('simplex algorithm', 'richard bellman', {'weight': 0.6})
('simplex algorithm', 'exponential growth', {'weight': 0.6})
('simplex algorithm', 'charles e. leiserson', {'weight': 0.6})
('simplex algorithm', 'charles erwin wilson', {'weight': 0.6})
('simplex algorithm', 'interval scheduling', {'weight': 0.6})
('simplex algorithm', 'chart parser', {'weight': 0.6})
('simplex algorithm', 'travelling salesman problem', {'weight': 0.6})
('simplex algorithm', 'bellman equation', {'weight': 0.6})
('hessian matrix', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('hessian matrix', 'photoshop', {'weight': 0.6})
('hessian matrix', 'sequence alignment', {'weight': 0.6})
('hessian matrix', 'flow network', {'weight': 0.6})
('hessian matrix', 'scale space', {'weight': 0.7})
('hessian matrix', 'charles erwin wilson', {'weight': 0.6})
('hessian matrix', 'ellipsoid method', {'weight': 0.6})
('hessian matrix', 'chain matrix multiplication', {'weight': 0.6})
('hessian matrix', 'ieee', {'weight': 0.6})
('hessian matrix', 'backtracking', {'weight': 0.6})
('hessian matrix', 'nonlinear conjugate gradient method', {'weight': 0.6})
('hessian matrix', 'dynamic problem', {'weight': 0.6})
('hessian matrix', 'trust region', {'weight': 0.6})
('hessian matrix', 'function (mathematics)', {'weight': 0.6})
('hessian matrix', 'minimum spanning tree', {'weight': 0.6})
('hessian matrix', 'context-free grammar', {'weight': 0.6})
('hessian matrix', 'branch and cut', {'weight': 0.6})
('hessian matrix', 'state variable', {'weight': 0.6})
('hessian matrix', 'treewidth', {'weight': 0.6})
('hessian matrix', 'overlapping subproblem', {'weight': 0.6})
('hessian matrix', 'taylor & francis', {'weight': 0.6})
('hessian matrix', 'cutting-plane method', {'weight': 0.6})
('hessian matrix', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('hessian matrix', 'method of undetermined coefficients', {'weight': 0.6})
('hessian matrix', 'hessian equations', {'weight': 0.7})
('hessian matrix', 'combinatorial optimization', {'weight': 0.6})
('hessian matrix', "newton's method in optimization", {'weight': 0.6})
('hessian matrix', 'matrices', {'weight': 0.5})
('hessian matrix', 'matrix chain multiplication', {'weight': 0.6})
('hessian matrix', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('hessian matrix', 'dynamic time warping', {'weight': 0.6})
('hessian matrix', 'dynamic programming language', {'weight': 0.6})
('hessian matrix', 'call-by-need', {'weight': 0.6})
('hessian matrix', 'big-o notation', {'weight': 0.6})
('hessian matrix', 'comparison of optimization software', {'weight': 0.6})
('hessian matrix', 'quadratic programming', {'weight': 0.6})
('hessian matrix', 'common lisp', {'weight': 0.6})
('hessian matrix', 'barrier function', {'weight': 0.6})
('hessian matrix', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('hessian matrix', 'jacobian matrix', {'weight': 0.7})
('hessian matrix', 'gradient descent', {'weight': 0.6})
('hessian matrix', 'patricia selinger', {'weight': 0.6})
('hessian matrix', 'discounting', {'weight': 0.6})
('hessian matrix', 'ronald l. rivest', {'weight': 0.6})
('hessian matrix', 'iterative method', {'weight': 0.6})
('hessian matrix', 'limited-memory bfgs', {'weight': 0.6})
('hessian matrix', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('hessian matrix', 'longest common substring problem', {'weight': 0.6})
('hessian matrix', 'clifford stein', {'weight': 0.6})
('hessian matrix', 'laplacian of gaussian (log) blob detector', {'weight': 0.7})
('hessian matrix', 'computer chess', {'weight': 0.6})
('hessian matrix', 'linear programming', {'weight': 0.6})
('hessian matrix', 'bitonic tour', {'weight': 0.6})
('hessian matrix', 'linear search problem', {'weight': 0.6})
('hessian matrix', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('hessian matrix', 'systems analysis', {'weight': 0.6})
('hessian matrix', 'capital (economics)', {'weight': 0.6})
('hessian matrix', 'levenshtein distance', {'weight': 0.6})
('hessian matrix', 'nonlinear programming', {'weight': 0.6})
('hessian matrix', 'genetics', {'weight': 0.6})
('hessian matrix', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('hessian matrix', 'gradient', {'weight': 0.6})
('hessian matrix', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('hessian matrix', 'invariant of a binary form', {'weight': 0.7})
('hessian matrix', 'bulletin of the american mathematical society', {'weight': 0.6})
('hessian matrix', 'u.s. english', {'weight': 0.6})
('hessian matrix', 'refutation table', {'weight': 0.6})
('hessian matrix', 'heuristic algorithm', {'weight': 0.6})
('hessian matrix', 'successive linear programming', {'weight': 0.6})
('hessian matrix', 'optimal substructure', {'weight': 0.6})
('hessian matrix', 'programming language', {'weight': 0.6})
('hessian matrix', 'mergesort', {'weight': 0.6})
('hessian matrix', "dijkstra's algorithm", {'weight': 0.6})
('hessian matrix', 'subgradient method', {'weight': 0.6})
('hessian matrix', 'call-by-name', {'weight': 0.6})
('hessian matrix', 'longest increasing subsequence problem', {'weight': 0.6})
('hessian matrix', 'edward prescott', {'weight': 0.6})
('hessian matrix', 'exponential time', {'weight': 0.6})
('hessian matrix', 'principle of optimality', {'weight': 0.6})
('hessian matrix', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('hessian matrix', 'mathematical game', {'weight': 0.6})
('hessian matrix', 'nancy stokey', {'weight': 0.6})
('hessian matrix', 'approximation algorithm', {'weight': 0.6})
('hessian matrix', 'discrete-time', {'weight': 0.6})
('hessian matrix', 'cyk algorithm', {'weight': 0.6})
('hessian matrix', 'markov decision process', {'weight': 0.6})
('hessian matrix', "powell's method", {'weight': 0.6})
('hessian matrix', 'wolfe conditions', {'weight': 0.6})
('hessian matrix', 'convexity in economics', {'weight': 0.6})
('hessian matrix', 'transposition table', {'weight': 0.6})
('hessian matrix', 'economics', {'weight': 0.6})
('hessian matrix', 'backward induction', {'weight': 0.6})
('hessian matrix', 'golden section search', {'weight': 0.6})
('hessian matrix', 'edit distance', {'weight': 0.6})
('hessian matrix', 'tree structure', {'weight': 0.6})
('hessian matrix', 'exchange algorithm', {'weight': 0.6})
('hessian matrix', 'dover publications', {'weight': 0.6})
('hessian matrix', 'seam carving', {'weight': 0.6})
('hessian matrix', 'recursive least squares', {'weight': 0.6})
('hessian matrix', 'metaheuristic', {'weight': 0.6})
('hessian matrix', 'quasi-newton method', {'weight': 0.6})
('hessian matrix', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('hessian matrix', 'robert e. lucas', {'weight': 0.6})
('hessian matrix', 'non-convexity (economics)', {'weight': 0.6})
('hessian matrix', 'sr1 formula', {'weight': 0.6})
('hessian matrix', 'mathematical reviews', {'weight': 0.6})
('hessian matrix', 'puzzle', {'weight': 0.6})
('hessian matrix', 'associative array', {'weight': 0.6})
('hessian matrix', 'shortest path problem', {'weight': 0.6})
('hessian matrix', 'dynamic algorithm', {'weight': 0.6})
('hessian matrix', 'augmented lagrangian method', {'weight': 0.6})
('hessian matrix', 'charles delisi', {'weight': 0.6})
('hessian matrix', 'greedy algorithm', {'weight': 0.6})
('hessian matrix', "karmarkar's algorithm", {'weight': 0.6})
('hessian matrix', 'image processing', {'weight': 0.7})
('hessian matrix', 'morse theory', {'weight': 0.5})
('hessian matrix', 'lattice models', {'weight': 0.6})
('hessian matrix', 'utility', {'weight': 0.6})
('hessian matrix', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('hessian matrix', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('hessian matrix', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('hessian matrix', 'international standard book number', {'weight': 0.6})
('hessian matrix', 'undirected graph', {'weight': 0.6})
('hessian matrix', 'scheme (programming language)', {'weight': 0.6})
('hessian matrix', 'rna structure', {'weight': 0.6})
('hessian matrix', 'hanoi', {'weight': 0.6})
('hessian matrix', 'perl', {'weight': 0.6})
('hessian matrix', 'digital object identifier', {'weight': 0.6})
('hessian matrix', 'multivariable calculus', {'weight': 0.5})
('hessian matrix', 'sequential quadratic programming', {'weight': 0.6})
('hessian matrix', "dinic's algorithm", {'weight': 0.6})
('hessian matrix', 'pseudo-polynomial time', {'weight': 0.6})
('hessian matrix', 'partition problem', {'weight': 0.6})
('hessian matrix', 'stochastic programming', {'weight': 0.6})
('hessian matrix', 'hill climbing', {'weight': 0.6})
('hessian matrix', 'top-down', {'weight': 0.6})
('hessian matrix', 'de boor algorithm', {'weight': 0.6})
('hessian matrix', 'optimization algorithm', {'weight': 0.6})
('hessian matrix', "kruskal's algorithm", {'weight': 0.6})
('hessian matrix', 'jacques philippe marie binet', {'weight': 0.6})
('hessian matrix', 'tabu search', {'weight': 0.6})
('hessian matrix', 'divide and conquer algorithm', {'weight': 0.6})
('hessian matrix', "johnson's algorithm", {'weight': 0.6})
('hessian matrix', 'evolutionary algorithm', {'weight': 0.6})
('hessian matrix', 'clique-width', {'weight': 0.6})
('hessian matrix', 'dynamic programming', {'weight': 0.6})
('hessian matrix', 'subroutine', {'weight': 0.6})
('hessian matrix', 'polarization identity', {'weight': 0.7})
('hessian matrix', 'simulated annealing', {'weight': 0.6})
('hessian matrix', 'tower of hanoi', {'weight': 0.6})
('hessian matrix', 'branch and bound', {'weight': 0.6})
('hessian matrix', 'engineering', {'weight': 0.6})
('hessian matrix', 'matroid', {'weight': 0.6})
('hessian matrix', 'viterbi algorithm', {'weight': 0.6})
('hessian matrix', "lemke's algorithm", {'weight': 0.6})
('hessian matrix', 'simplex algorithm', {'weight': 0.6})
('hessian matrix', 'local search (optimization)', {'weight': 0.6})
('hessian matrix', 'hessian matrix', {'weight': 1})
('hessian matrix', 'ibm system r', {'weight': 0.6})
('hessian matrix', 'penalty method', {'weight': 0.6})
('hessian matrix', 'prolog', {'weight': 0.6})
('hessian matrix', 'time-invariant system', {'weight': 0.6})
('hessian matrix', 'criss-cross algorithm', {'weight': 0.6})
('hessian matrix', 'revised simplex algorithm', {'weight': 0.6})
('hessian matrix', 'the mathematical association of america', {'weight': 0.6})
('hessian matrix', 'line search', {'weight': 0.6})
('hessian matrix', 'j (programming language)', {'weight': 0.6})
('hessian matrix', 'word wrap', {'weight': 0.6})
('hessian matrix', 'subset sum problem', {'weight': 0.6})
('hessian matrix', 'integer programming', {'weight': 0.6})
('hessian matrix', 'nucleosome', {'weight': 0.6})
('hessian matrix', 'earley algorithm', {'weight': 0.6})
('hessian matrix', 'referential transparency (computer science)', {'weight': 0.6})
('hessian matrix', 'recursion', {'weight': 0.6})
('hessian matrix', 'mathematica', {'weight': 0.6})
('hessian matrix', 'quicksort', {'weight': 0.6})
('hessian matrix', 'recursion (computer science)', {'weight': 0.6})
('hessian matrix', 'computer science', {'weight': 0.6})
('hessian matrix', 'brute-force search', {'weight': 0.6})
('hessian matrix', 'mathematics', {'weight': 0.6})
('hessian matrix', 'differential operators', {'weight': 0.5})
('hessian matrix', 'depth-first search', {'weight': 0.6})
('hessian matrix', 'top-down and bottom-up design', {'weight': 0.6})
('hessian matrix', 'correspondence problem', {'weight': 0.6})
('hessian matrix', 'transcription factor', {'weight': 0.6})
('hessian matrix', 'tree decomposition', {'weight': 0.6})
('hessian matrix', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('hessian matrix', 'structural alignment', {'weight': 0.6})
('hessian matrix', 'local convergence', {'weight': 0.6})
('hessian matrix', 'computer vision', {'weight': 0.7})
('hessian matrix', 'knapsack problem', {'weight': 0.6})
('hessian matrix', 'graph algorithm', {'weight': 0.6})
('hessian matrix', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('hessian matrix', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('hessian matrix', 'hidden markov model', {'weight': 0.6})
('hessian matrix', 'string (computer science)', {'weight': 0.6})
('hessian matrix', 'bioinformatics', {'weight': 0.6})
('hessian matrix', 'computational complexity of mathematical operations', {'weight': 0.6})
('hessian matrix', 'mathematical optimization', {'weight': 0.6})
('hessian matrix', 'artificial neural networks', {'weight': 0.6})
('hessian matrix', 'introduction to algorithms', {'weight': 0.6})
('hessian matrix', 'thomas h. cormen', {'weight': 0.6})
('hessian matrix', 'the determinant of hessian (doh) blob detector', {'weight': 0.7})
('hessian matrix', 'music information retrieval', {'weight': 0.6})
('hessian matrix', 'beat (music)', {'weight': 0.6})
('hessian matrix', 'longest common subsequence problem', {'weight': 0.6})
('hessian matrix', 'convex minimization', {'weight': 0.6})
('hessian matrix', 'successive parabolic interpolation', {'weight': 0.6})
('hessian matrix', 'fibonacci sequence', {'weight': 0.6})
('hessian matrix', 'maximum subarray problem', {'weight': 0.6})
('hessian matrix', 'convex optimization', {'weight': 0.6})
('hessian matrix', 'memoization', {'weight': 0.6})
('hessian matrix', 'richard bellman', {'weight': 0.6})
('hessian matrix', 'exponential growth', {'weight': 0.6})
('hessian matrix', 'charles e. leiserson', {'weight': 0.6})
('hessian matrix', 'checkerboard', {'weight': 0.6})
('hessian matrix', 'interval scheduling', {'weight': 0.6})
('hessian matrix', 'chart parser', {'weight': 0.6})
('hessian matrix', 'travelling salesman problem', {'weight': 0.6})
('hessian matrix', 'bellman equation', {'weight': 0.6})
("powell's method", 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
("powell's method", 'photoshop', {'weight': 0.6})
("powell's method", 'sequence alignment', {'weight': 0.6})
("powell's method", 'flow network', {'weight': 0.6})
("powell's method", 'ellipsoid method', {'weight': 0.6})
("powell's method", 'chain matrix multiplication', {'weight': 0.6})
("powell's method", 'ieee', {'weight': 0.6})
("powell's method", 'backtracking', {'weight': 0.6})
("powell's method", 'nonlinear conjugate gradient method', {'weight': 0.6})
("powell's method", 'dynamic problem', {'weight': 0.6})
("powell's method", 'trust region', {'weight': 0.6})
("powell's method", 'function (mathematics)', {'weight': 0.6})
("powell's method", 'minimum spanning tree', {'weight': 0.6})
("powell's method", 'context-free grammar', {'weight': 0.6})
("powell's method", 'branch and cut', {'weight': 0.6})
("powell's method", 'state variable', {'weight': 0.6})
("powell's method", 'treewidth', {'weight': 0.6})
("powell's method", 'optimization algorithms and methods', {'weight': 0.5})
("powell's method", 'overlapping subproblem', {'weight': 0.6})
("powell's method", 'taylor & francis', {'weight': 0.6})
("powell's method", 'cutting-plane method', {'weight': 0.6})
("powell's method", 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
("powell's method", 'method of undetermined coefficients', {'weight': 0.6})
("powell's method", 'combinatorial optimization', {'weight': 0.6})
("powell's method", "newton's method in optimization", {'weight': 0.6})
("powell's method", 'matrix chain multiplication', {'weight': 0.6})
("powell's method", 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
("powell's method", 'dynamic time warping', {'weight': 0.6})
("powell's method", 'dynamic programming language', {'weight': 0.6})
("powell's method", 'call-by-need', {'weight': 0.6})
("powell's method", 'big-o notation', {'weight': 0.6})
("powell's method", 'comparison of optimization software', {'weight': 0.6})
("powell's method", 'quadratic programming', {'weight': 0.6})
("powell's method", 'common lisp', {'weight': 0.6})
("powell's method", 'barrier function', {'weight': 0.6})
("powell's method", 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
("powell's method", 'gradient descent', {'weight': 0.6})
("powell's method", 'patricia selinger', {'weight': 0.6})
("powell's method", 'discounting', {'weight': 0.6})
("powell's method", 'ronald l. rivest', {'weight': 0.6})
("powell's method", 'iterative method', {'weight': 0.6})
("powell's method", 'limited-memory bfgs', {'weight': 0.6})
("powell's method", 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
("powell's method", 'longest common substring problem', {'weight': 0.6})
("powell's method", 'clifford stein', {'weight': 0.6})
("powell's method", 'computer chess', {'weight': 0.6})
("powell's method", 'linear programming', {'weight': 0.6})
("powell's method", 'bitonic tour', {'weight': 0.6})
("powell's method", 'linear search problem', {'weight': 0.6})
("powell's method", 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
("powell's method", 'systems analysis', {'weight': 0.6})
("powell's method", 'capital (economics)', {'weight': 0.6})
("powell's method", 'levenshtein distance', {'weight': 0.6})
("powell's method", 'nonlinear programming', {'weight': 0.6})
("powell's method", 'computational complexity of mathematical operations', {'weight': 0.6})
("powell's method", 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
("powell's method", 'gradient', {'weight': 0.6})
("powell's method", 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
("powell's method", 'bulletin of the american mathematical society', {'weight': 0.6})
("powell's method", 'u.s. english', {'weight': 0.6})
("powell's method", 'refutation table', {'weight': 0.6})
("powell's method", 'heuristic algorithm', {'weight': 0.6})
("powell's method", 'successive linear programming', {'weight': 0.6})
("powell's method", 'optimal substructure', {'weight': 0.6})
("powell's method", 'programming language', {'weight': 0.6})
("powell's method", 'mergesort', {'weight': 0.6})
("powell's method", "dijkstra's algorithm", {'weight': 0.6})
("powell's method", 'subgradient method', {'weight': 0.6})
("powell's method", 'call-by-name', {'weight': 0.6})
("powell's method", 'longest increasing subsequence problem', {'weight': 0.6})
("powell's method", 'edward prescott', {'weight': 0.6})
("powell's method", 'exponential time', {'weight': 0.6})
("powell's method", 'principle of optimality', {'weight': 0.6})
("powell's method", "bor\xe5\xafvka's algorithm", {'weight': 0.6})
("powell's method", 'mathematical game', {'weight': 0.6})
("powell's method", 'nancy stokey', {'weight': 0.6})
("powell's method", 'approximation algorithm', {'weight': 0.6})
("powell's method", 'discrete-time', {'weight': 0.6})
("powell's method", 'cyk algorithm', {'weight': 0.6})
("powell's method", 'markov decision process', {'weight': 0.6})
("powell's method", "powell's method", {'weight': 1})
("powell's method", 'wolfe conditions', {'weight': 0.6})
("powell's method", 'convexity in economics', {'weight': 0.6})
("powell's method", 'transposition table', {'weight': 0.6})
("powell's method", 'economics', {'weight': 0.6})
("powell's method", 'backward induction', {'weight': 0.6})
("powell's method", 'golden section search', {'weight': 0.6})
("powell's method", 'edit distance', {'weight': 0.6})
("powell's method", 'tree structure', {'weight': 0.6})
("powell's method", 'exchange algorithm', {'weight': 0.6})
("powell's method", 'dover publications', {'weight': 0.6})
("powell's method", 'seam carving', {'weight': 0.6})
("powell's method", 'recursive least squares', {'weight': 0.6})
("powell's method", 'metaheuristic', {'weight': 0.6})
("powell's method", 'quasi-newton method', {'weight': 0.6})
("powell's method", 'on-line encyclopedia of integer sequences', {'weight': 0.6})
("powell's method", 'robert e. lucas', {'weight': 0.6})
("powell's method", 'non-convexity (economics)', {'weight': 0.6})
("powell's method", 'sr1 formula', {'weight': 0.6})
("powell's method", 'mathematical reviews', {'weight': 0.6})
("powell's method", 'puzzle', {'weight': 0.6})
("powell's method", 'associative array', {'weight': 0.6})
("powell's method", 'shortest path problem', {'weight': 0.6})
("powell's method", 'dynamic algorithm', {'weight': 0.6})
("powell's method", 'augmented lagrangian method', {'weight': 0.6})
("powell's method", 'charles delisi', {'weight': 0.6})
("powell's method", 'greedy algorithm', {'weight': 0.6})
("powell's method", "karmarkar's algorithm", {'weight': 0.6})
("powell's method", 'lattice models', {'weight': 0.6})
("powell's method", 'utility', {'weight': 0.6})
("powell's method", 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
("powell's method", 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
("powell's method", 'push-relabel maximum flow algorithm', {'weight': 0.6})
("powell's method", 'international standard book number', {'weight': 0.6})
("powell's method", 'undirected graph', {'weight': 0.6})
("powell's method", 'scheme (programming language)', {'weight': 0.6})
("powell's method", 'rna structure', {'weight': 0.6})
("powell's method", 'hanoi', {'weight': 0.6})
("powell's method", 'perl', {'weight': 0.6})
("powell's method", 'digital object identifier', {'weight': 0.6})
("powell's method", 'sequential quadratic programming', {'weight': 0.6})
("powell's method", "dinic's algorithm", {'weight': 0.6})
("powell's method", 'pseudo-polynomial time', {'weight': 0.6})
("powell's method", 'partition problem', {'weight': 0.6})
("powell's method", 'stochastic programming', {'weight': 0.6})
("powell's method", 'hill climbing', {'weight': 0.6})
("powell's method", 'top-down', {'weight': 0.6})
("powell's method", 'de boor algorithm', {'weight': 0.6})
("powell's method", 'optimization algorithm', {'weight': 0.6})
("powell's method", "kruskal's algorithm", {'weight': 0.6})
("powell's method", 'jacques philippe marie binet', {'weight': 0.6})
("powell's method", 'tabu search', {'weight': 0.6})
("powell's method", 'divide and conquer algorithm', {'weight': 0.6})
("powell's method", "johnson's algorithm", {'weight': 0.6})
("powell's method", 'evolutionary algorithm', {'weight': 0.6})
("powell's method", 'clique-width', {'weight': 0.6})
("powell's method", 'dynamic programming', {'weight': 0.6})
("powell's method", 'subroutine', {'weight': 0.6})
("powell's method", 'simulated annealing', {'weight': 0.6})
("powell's method", 'tower of hanoi', {'weight': 0.6})
("powell's method", 'branch and bound', {'weight': 0.6})
("powell's method", 'engineering', {'weight': 0.6})
("powell's method", 'matroid', {'weight': 0.6})
("powell's method", 'viterbi algorithm', {'weight': 0.6})
("powell's method", "lemke's algorithm", {'weight': 0.6})
("powell's method", 'simplex algorithm', {'weight': 0.6})
("powell's method", 'local search (optimization)', {'weight': 0.6})
("powell's method", 'hessian matrix', {'weight': 0.6})
("powell's method", 'ibm system r', {'weight': 0.6})
("powell's method", 'penalty method', {'weight': 0.6})
("powell's method", 'prolog', {'weight': 0.6})
("powell's method", 'time-invariant system', {'weight': 0.6})
("powell's method", 'criss-cross algorithm', {'weight': 0.6})
("powell's method", 'revised simplex algorithm', {'weight': 0.6})
("powell's method", 'the mathematical association of america', {'weight': 0.6})
("powell's method", 'line search', {'weight': 0.6})
("powell's method", 'j (programming language)', {'weight': 0.6})
("powell's method", 'word wrap', {'weight': 0.6})
("powell's method", 'subset sum problem', {'weight': 0.6})
("powell's method", 'integer programming', {'weight': 0.6})
("powell's method", 'nucleosome', {'weight': 0.6})
("powell's method", 'earley algorithm', {'weight': 0.6})
("powell's method", 'referential transparency (computer science)', {'weight': 0.6})
("powell's method", 'recursion', {'weight': 0.6})
("powell's method", 'mathematica', {'weight': 0.6})
("powell's method", 'quicksort', {'weight': 0.6})
("powell's method", 'recursion (computer science)', {'weight': 0.6})
("powell's method", 'checkerboard', {'weight': 0.6})
("powell's method", 'computer science', {'weight': 0.6})
("powell's method", 'brute-force search', {'weight': 0.6})
("powell's method", 'mathematics', {'weight': 0.6})
("powell's method", 'depth-first search', {'weight': 0.6})
("powell's method", 'top-down and bottom-up design', {'weight': 0.6})
("powell's method", 'correspondence problem', {'weight': 0.6})
("powell's method", 'transcription factor', {'weight': 0.6})
("powell's method", 'tree decomposition', {'weight': 0.6})
("powell's method", 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
("powell's method", 'structural alignment', {'weight': 0.6})
("powell's method", 'local convergence', {'weight': 0.6})
("powell's method", 'knapsack problem', {'weight': 0.6})
("powell's method", 'graph algorithm', {'weight': 0.6})
("powell's method", 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
("powell's method", 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
("powell's method", 'hidden markov model', {'weight': 0.6})
("powell's method", 'string (computer science)', {'weight': 0.6})
("powell's method", 'bioinformatics', {'weight': 0.6})
("powell's method", 'genetics', {'weight': 0.6})
("powell's method", 'mathematical optimization', {'weight': 0.6})
("powell's method", 'artificial neural networks', {'weight': 0.6})
("powell's method", 'introduction to algorithms', {'weight': 0.6})
("powell's method", 'thomas h. cormen', {'weight': 0.6})
("powell's method", 'music information retrieval', {'weight': 0.6})
("powell's method", 'beat (music)', {'weight': 0.6})
("powell's method", 'longest common subsequence problem', {'weight': 0.6})
("powell's method", 'convex minimization', {'weight': 0.6})
("powell's method", 'successive parabolic interpolation', {'weight': 0.6})
("powell's method", 'fibonacci sequence', {'weight': 0.6})
("powell's method", 'maximum subarray problem', {'weight': 0.6})
("powell's method", 'convex optimization', {'weight': 0.6})
("powell's method", 'memoization', {'weight': 0.6})
("powell's method", 'richard bellman', {'weight': 0.6})
("powell's method", 'exponential growth', {'weight': 0.6})
("powell's method", 'charles e. leiserson', {'weight': 0.6})
("powell's method", 'charles erwin wilson', {'weight': 0.6})
("powell's method", 'interval scheduling', {'weight': 0.6})
("powell's method", 'chart parser', {'weight': 0.6})
("powell's method", 'travelling salesman problem', {'weight': 0.6})
("powell's method", 'bellman equation', {'weight': 0.6})
('the mathematical association of america', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('the mathematical association of america', 'photoshop', {'weight': 0.6})
('the mathematical association of america', 'sequence alignment', {'weight': 0.6})
('the mathematical association of america', 'flow network', {'weight': 0.6})
('the mathematical association of america', 'ellipsoid method', {'weight': 0.6})
('the mathematical association of america', 'chain matrix multiplication', {'weight': 0.6})
('the mathematical association of america', 'ieee', {'weight': 0.6})
('the mathematical association of america', 'backtracking', {'weight': 0.6})
('the mathematical association of america', 'nonlinear conjugate gradient method', {'weight': 0.6})
('the mathematical association of america', 'dynamic problem', {'weight': 0.6})
('the mathematical association of america', 'trust region', {'weight': 0.6})
('the mathematical association of america', 'function (mathematics)', {'weight': 0.6})
('the mathematical association of america', 'minimum spanning tree', {'weight': 0.6})
('the mathematical association of america', 'context-free grammar', {'weight': 0.6})
('the mathematical association of america', 'branch and cut', {'weight': 0.6})
('the mathematical association of america', 'state variable', {'weight': 0.6})
('the mathematical association of america', 'treewidth', {'weight': 0.6})
('the mathematical association of america', 'overlapping subproblem', {'weight': 0.6})
('the mathematical association of america', 'taylor & francis', {'weight': 0.6})
('the mathematical association of america', 'cutting-plane method', {'weight': 0.6})
('the mathematical association of america', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('the mathematical association of america', 'method of undetermined coefficients', {'weight': 0.6})
('the mathematical association of america', 'combinatorial optimization', {'weight': 0.6})
('the mathematical association of america', "newton's method in optimization", {'weight': 0.6})
('the mathematical association of america', 'matrix chain multiplication', {'weight': 0.6})
('the mathematical association of america', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('the mathematical association of america', 'dynamic time warping', {'weight': 0.6})
('the mathematical association of america', 'dynamic programming language', {'weight': 0.6})
('the mathematical association of america', 'call-by-need', {'weight': 0.6})
('the mathematical association of america', 'big-o notation', {'weight': 0.6})
('the mathematical association of america', 'comparison of optimization software', {'weight': 0.6})
('the mathematical association of america', 'quadratic programming', {'weight': 0.6})
('the mathematical association of america', 'common lisp', {'weight': 0.6})
('the mathematical association of america', 'barrier function', {'weight': 0.6})
('the mathematical association of america', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('the mathematical association of america', 'gradient descent', {'weight': 0.6})
('the mathematical association of america', 'patricia selinger', {'weight': 0.6})
('the mathematical association of america', 'discounting', {'weight': 0.6})
('the mathematical association of america', 'ronald l. rivest', {'weight': 0.6})
('the mathematical association of america', 'iterative method', {'weight': 0.6})
('the mathematical association of america', 'limited-memory bfgs', {'weight': 0.6})
('the mathematical association of america', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('the mathematical association of america', 'longest common substring problem', {'weight': 0.6})
('the mathematical association of america', 'clifford stein', {'weight': 0.6})
('the mathematical association of america', 'computer chess', {'weight': 0.6})
('the mathematical association of america', 'linear programming', {'weight': 0.6})
('the mathematical association of america', 'bitonic tour', {'weight': 0.6})
('the mathematical association of america', 'linear search problem', {'weight': 0.6})
('the mathematical association of america', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('the mathematical association of america', 'systems analysis', {'weight': 0.6})
('the mathematical association of america', 'capital (economics)', {'weight': 0.6})
('the mathematical association of america', 'levenshtein distance', {'weight': 0.6})
('the mathematical association of america', 'nonlinear programming', {'weight': 0.6})
('the mathematical association of america', 'computational complexity of mathematical operations', {'weight': 0.6})
('the mathematical association of america', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('the mathematical association of america', 'gradient', {'weight': 0.6})
('the mathematical association of america', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('the mathematical association of america', 'bulletin of the american mathematical society', {'weight': 0.6})
('the mathematical association of america', 'u.s. english', {'weight': 0.6})
('the mathematical association of america', 'refutation table', {'weight': 0.6})
('the mathematical association of america', 'heuristic algorithm', {'weight': 0.6})
('the mathematical association of america', 'successive linear programming', {'weight': 0.6})
('the mathematical association of america', 'optimal substructure', {'weight': 0.6})
('the mathematical association of america', 'programming language', {'weight': 0.6})
('the mathematical association of america', 'mergesort', {'weight': 0.6})
('the mathematical association of america', "dijkstra's algorithm", {'weight': 0.6})
('the mathematical association of america', 'subgradient method', {'weight': 0.6})
('the mathematical association of america', 'call-by-name', {'weight': 0.6})
('the mathematical association of america', 'longest increasing subsequence problem', {'weight': 0.6})
('the mathematical association of america', 'edward prescott', {'weight': 0.6})
('the mathematical association of america', 'exponential time', {'weight': 0.6})
('the mathematical association of america', 'principle of optimality', {'weight': 0.6})
('the mathematical association of america', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('the mathematical association of america', 'mathematical game', {'weight': 0.6})
('the mathematical association of america', 'nancy stokey', {'weight': 0.6})
('the mathematical association of america', 'approximation algorithm', {'weight': 0.6})
('the mathematical association of america', 'discrete-time', {'weight': 0.6})
('the mathematical association of america', 'cyk algorithm', {'weight': 0.6})
('the mathematical association of america', 'markov decision process', {'weight': 0.6})
('the mathematical association of america', "powell's method", {'weight': 0.6})
('the mathematical association of america', 'wolfe conditions', {'weight': 0.6})
('the mathematical association of america', 'convexity in economics', {'weight': 0.6})
('the mathematical association of america', 'transposition table', {'weight': 0.6})
('the mathematical association of america', 'economics', {'weight': 0.6})
('the mathematical association of america', 'backward induction', {'weight': 0.6})
('the mathematical association of america', 'golden section search', {'weight': 0.6})
('the mathematical association of america', 'edit distance', {'weight': 0.6})
('the mathematical association of america', 'tree structure', {'weight': 0.6})
('the mathematical association of america', 'exchange algorithm', {'weight': 0.6})
('the mathematical association of america', 'dover publications', {'weight': 0.6})
('the mathematical association of america', 'seam carving', {'weight': 0.6})
('the mathematical association of america', 'recursive least squares', {'weight': 0.6})
('the mathematical association of america', 'metaheuristic', {'weight': 0.6})
('the mathematical association of america', 'quasi-newton method', {'weight': 0.6})
('the mathematical association of america', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('the mathematical association of america', 'robert e. lucas', {'weight': 0.6})
('the mathematical association of america', 'non-convexity (economics)', {'weight': 0.6})
('the mathematical association of america', 'sr1 formula', {'weight': 0.6})
('the mathematical association of america', 'mathematical reviews', {'weight': 0.6})
('the mathematical association of america', 'puzzle', {'weight': 0.6})
('the mathematical association of america', 'associative array', {'weight': 0.6})
('the mathematical association of america', 'shortest path problem', {'weight': 0.6})
('the mathematical association of america', 'dynamic algorithm', {'weight': 0.6})
('the mathematical association of america', 'augmented lagrangian method', {'weight': 0.6})
('the mathematical association of america', 'charles delisi', {'weight': 0.6})
('the mathematical association of america', 'greedy algorithm', {'weight': 0.6})
('the mathematical association of america', "karmarkar's algorithm", {'weight': 0.6})
('the mathematical association of america', 'lattice models', {'weight': 0.6})
('the mathematical association of america', 'utility', {'weight': 0.6})
('the mathematical association of america', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('the mathematical association of america', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('the mathematical association of america', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('the mathematical association of america', 'international standard book number', {'weight': 0.6})
('the mathematical association of america', 'undirected graph', {'weight': 0.6})
('the mathematical association of america', 'scheme (programming language)', {'weight': 0.6})
('the mathematical association of america', 'rna structure', {'weight': 0.6})
('the mathematical association of america', 'hanoi', {'weight': 0.6})
('the mathematical association of america', 'perl', {'weight': 0.6})
('the mathematical association of america', 'digital object identifier', {'weight': 0.6})
('the mathematical association of america', 'sequential quadratic programming', {'weight': 0.6})
('the mathematical association of america', "dinic's algorithm", {'weight': 0.6})
('the mathematical association of america', 'pseudo-polynomial time', {'weight': 0.6})
('the mathematical association of america', 'partition problem', {'weight': 0.6})
('the mathematical association of america', 'stochastic programming', {'weight': 0.6})
('the mathematical association of america', 'hill climbing', {'weight': 0.6})
('the mathematical association of america', 'top-down', {'weight': 0.6})
('the mathematical association of america', 'de boor algorithm', {'weight': 0.6})
('the mathematical association of america', 'optimization algorithm', {'weight': 0.6})
('the mathematical association of america', "kruskal's algorithm", {'weight': 0.6})
('the mathematical association of america', 'jacques philippe marie binet', {'weight': 0.6})
('the mathematical association of america', 'tabu search', {'weight': 0.6})
('the mathematical association of america', 'divide and conquer algorithm', {'weight': 0.6})
('the mathematical association of america', "johnson's algorithm", {'weight': 0.6})
('the mathematical association of america', 'evolutionary algorithm', {'weight': 0.6})
('the mathematical association of america', 'clique-width', {'weight': 0.6})
('the mathematical association of america', 'dynamic programming', {'weight': 0.6})
('the mathematical association of america', 'subroutine', {'weight': 0.6})
('the mathematical association of america', 'simulated annealing', {'weight': 0.6})
('the mathematical association of america', 'tower of hanoi', {'weight': 0.6})
('the mathematical association of america', 'branch and bound', {'weight': 0.6})
('the mathematical association of america', 'engineering', {'weight': 0.6})
('the mathematical association of america', 'matroid', {'weight': 0.6})
('the mathematical association of america', 'viterbi algorithm', {'weight': 0.6})
('the mathematical association of america', "lemke's algorithm", {'weight': 0.6})
('the mathematical association of america', 'simplex algorithm', {'weight': 0.6})
('the mathematical association of america', 'local search (optimization)', {'weight': 0.6})
('the mathematical association of america', 'hessian matrix', {'weight': 0.6})
('the mathematical association of america', 'ibm system r', {'weight': 0.6})
('the mathematical association of america', 'penalty method', {'weight': 0.6})
('the mathematical association of america', 'prolog', {'weight': 0.6})
('the mathematical association of america', 'time-invariant system', {'weight': 0.6})
('the mathematical association of america', 'criss-cross algorithm', {'weight': 0.6})
('the mathematical association of america', 'revised simplex algorithm', {'weight': 0.6})
('the mathematical association of america', 'the mathematical association of america', {'weight': 1})
('the mathematical association of america', 'line search', {'weight': 0.6})
('the mathematical association of america', 'j (programming language)', {'weight': 0.6})
('the mathematical association of america', 'word wrap', {'weight': 0.6})
('the mathematical association of america', 'subset sum problem', {'weight': 0.6})
('the mathematical association of america', 'integer programming', {'weight': 0.6})
('the mathematical association of america', 'nucleosome', {'weight': 0.6})
('the mathematical association of america', 'earley algorithm', {'weight': 0.6})
('the mathematical association of america', 'referential transparency (computer science)', {'weight': 0.6})
('the mathematical association of america', 'recursion', {'weight': 0.6})
('the mathematical association of america', 'mathematica', {'weight': 0.6})
('the mathematical association of america', 'quicksort', {'weight': 0.6})
('the mathematical association of america', 'recursion (computer science)', {'weight': 0.6})
('the mathematical association of america', 'checkerboard', {'weight': 0.6})
('the mathematical association of america', 'computer science', {'weight': 0.6})
('the mathematical association of america', 'brute-force search', {'weight': 0.6})
('the mathematical association of america', 'mathematics', {'weight': 0.6})
('the mathematical association of america', 'depth-first search', {'weight': 0.6})
('the mathematical association of america', 'top-down and bottom-up design', {'weight': 0.6})
('the mathematical association of america', 'correspondence problem', {'weight': 0.6})
('the mathematical association of america', 'transcription factor', {'weight': 0.6})
('the mathematical association of america', 'tree decomposition', {'weight': 0.6})
('the mathematical association of america', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('the mathematical association of america', 'structural alignment', {'weight': 0.6})
('the mathematical association of america', 'local convergence', {'weight': 0.6})
('the mathematical association of america', 'knapsack problem', {'weight': 0.6})
('the mathematical association of america', 'graph algorithm', {'weight': 0.6})
('the mathematical association of america', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('the mathematical association of america', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('the mathematical association of america', 'hidden markov model', {'weight': 0.6})
('the mathematical association of america', 'string (computer science)', {'weight': 0.6})
('the mathematical association of america', 'bioinformatics', {'weight': 0.6})
('the mathematical association of america', 'genetics', {'weight': 0.6})
('the mathematical association of america', 'mathematical optimization', {'weight': 0.6})
('the mathematical association of america', 'artificial neural networks', {'weight': 0.6})
('the mathematical association of america', 'introduction to algorithms', {'weight': 0.6})
('the mathematical association of america', 'thomas h. cormen', {'weight': 0.6})
('the mathematical association of america', 'music information retrieval', {'weight': 0.6})
('the mathematical association of america', 'beat (music)', {'weight': 0.6})
('the mathematical association of america', 'longest common subsequence problem', {'weight': 0.6})
('the mathematical association of america', 'convex minimization', {'weight': 0.6})
('the mathematical association of america', 'successive parabolic interpolation', {'weight': 0.6})
('the mathematical association of america', 'fibonacci sequence', {'weight': 0.6})
('the mathematical association of america', 'maximum subarray problem', {'weight': 0.6})
('the mathematical association of america', 'convex optimization', {'weight': 0.6})
('the mathematical association of america', 'memoization', {'weight': 0.6})
('the mathematical association of america', 'richard bellman', {'weight': 0.6})
('the mathematical association of america', 'exponential growth', {'weight': 0.6})
('the mathematical association of america', 'charles e. leiserson', {'weight': 0.6})
('the mathematical association of america', 'charles erwin wilson', {'weight': 0.6})
('the mathematical association of america', 'interval scheduling', {'weight': 0.6})
('the mathematical association of america', 'chart parser', {'weight': 0.6})
('the mathematical association of america', 'travelling salesman problem', {'weight': 0.6})
('the mathematical association of america', 'bellman equation', {'weight': 0.6})
('convex minimization', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('convex minimization', 'photoshop', {'weight': 0.6})
('convex minimization', 'sequence alignment', {'weight': 0.6})
('convex minimization', 'flow network', {'weight': 0.6})
('convex minimization', 'ellipsoid method', {'weight': 0.6})
('convex minimization', 'chain matrix multiplication', {'weight': 0.6})
('convex minimization', 'ieee', {'weight': 0.6})
('convex minimization', 'backtracking', {'weight': 0.6})
('convex minimization', 'nonlinear conjugate gradient method', {'weight': 0.6})
('convex minimization', 'dynamic problem', {'weight': 0.6})
('convex minimization', 'trust region', {'weight': 0.6})
('convex minimization', 'function (mathematics)', {'weight': 0.6})
('convex minimization', 'minimum spanning tree', {'weight': 0.6})
('convex minimization', 'context-free grammar', {'weight': 0.6})
('convex minimization', 'branch and cut', {'weight': 0.6})
('convex minimization', 'state variable', {'weight': 0.6})
('convex minimization', 'treewidth', {'weight': 0.6})
('convex minimization', 'overlapping subproblem', {'weight': 0.6})
('convex minimization', 'taylor & francis', {'weight': 0.6})
('convex minimization', 'cutting-plane method', {'weight': 0.6})
('convex minimization', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('convex minimization', 'method of undetermined coefficients', {'weight': 0.6})
('convex minimization', 'combinatorial optimization', {'weight': 0.6})
('convex minimization', "newton's method in optimization", {'weight': 0.6})
('convex minimization', 'matrix chain multiplication', {'weight': 0.6})
('convex minimization', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('convex minimization', 'dynamic time warping', {'weight': 0.6})
('convex minimization', 'dynamic programming language', {'weight': 0.6})
('convex minimization', 'call-by-need', {'weight': 0.6})
('convex minimization', 'big-o notation', {'weight': 0.6})
('convex minimization', 'comparison of optimization software', {'weight': 0.6})
('convex minimization', 'quadratic programming', {'weight': 0.6})
('convex minimization', 'common lisp', {'weight': 0.6})
('convex minimization', 'barrier function', {'weight': 0.6})
('convex minimization', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('convex minimization', 'gradient descent', {'weight': 0.6})
('convex minimization', 'patricia selinger', {'weight': 0.6})
('convex minimization', 'discounting', {'weight': 0.6})
('convex minimization', 'ronald l. rivest', {'weight': 0.6})
('convex minimization', 'iterative method', {'weight': 0.6})
('convex minimization', 'limited-memory bfgs', {'weight': 0.6})
('convex minimization', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('convex minimization', 'longest common substring problem', {'weight': 0.6})
('convex minimization', 'clifford stein', {'weight': 0.6})
('convex minimization', 'computer chess', {'weight': 0.6})
('convex minimization', 'linear programming', {'weight': 0.6})
('convex minimization', 'bitonic tour', {'weight': 0.6})
('convex minimization', 'linear search problem', {'weight': 0.6})
('convex minimization', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('convex minimization', 'systems analysis', {'weight': 0.6})
('convex minimization', 'capital (economics)', {'weight': 0.6})
('convex minimization', 'levenshtein distance', {'weight': 0.6})
('convex minimization', 'nonlinear programming', {'weight': 0.6})
('convex minimization', 'convex analysis', {'weight': 0.5})
('convex minimization', 'computational complexity of mathematical operations', {'weight': 0.6})
('convex minimization', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('convex minimization', 'gradient', {'weight': 0.6})
('convex minimization', 'proximal gradient method', {'weight': 0.7})
('convex minimization', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('convex minimization', 'bulletin of the american mathematical society', {'weight': 0.6})
('convex minimization', 'u.s. english', {'weight': 0.6})
('convex minimization', 'refutation table', {'weight': 0.6})
('convex minimization', 'heuristic algorithm', {'weight': 0.6})
('convex minimization', 'successive linear programming', {'weight': 0.6})
('convex minimization', 'optimal substructure', {'weight': 0.6})
('convex minimization', 'programming language', {'weight': 0.6})
('convex minimization', 'mergesort', {'weight': 0.6})
('convex minimization', "dijkstra's algorithm", {'weight': 0.6})
('convex minimization', 'subgradient method', {'weight': 0.6})
('convex minimization', 'call-by-name', {'weight': 0.6})
('convex minimization', 'longest increasing subsequence problem', {'weight': 0.6})
('convex minimization', 'edward prescott', {'weight': 0.6})
('convex minimization', 'exponential time', {'weight': 0.6})
('convex minimization', 'karush\xe2\x80\x93kuhn\xe2\x80\x93tucker conditions', {'weight': 0.7})
('convex minimization', 'principle of optimality', {'weight': 0.6})
('convex minimization', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('convex minimization', 'mathematical game', {'weight': 0.6})
('convex minimization', 'nancy stokey', {'weight': 0.6})
('convex minimization', 'optimization problem', {'weight': 0.7})
('convex minimization', 'approximation algorithm', {'weight': 0.6})
('convex minimization', 'discrete-time', {'weight': 0.6})
('convex minimization', 'cyk algorithm', {'weight': 0.6})
('convex minimization', 'markov decision process', {'weight': 0.6})
('convex minimization', "powell's method", {'weight': 0.6})
('convex minimization', 'wolfe conditions', {'weight': 0.6})
('convex minimization', 'convexity in economics', {'weight': 0.6})
('convex minimization', 'transposition table', {'weight': 0.6})
('convex minimization', 'economics', {'weight': 0.6})
('convex minimization', 'backward induction', {'weight': 0.6})
('convex minimization', 'golden section search', {'weight': 0.6})
('convex minimization', 'edit distance', {'weight': 0.6})
('convex minimization', 'tree structure', {'weight': 0.6})
('convex minimization', 'exchange algorithm', {'weight': 0.6})
('convex minimization', 'dover publications', {'weight': 0.6})
('convex minimization', 'seam carving', {'weight': 0.6})
('convex minimization', 'recursive least squares', {'weight': 0.6})
('convex minimization', 'metaheuristic', {'weight': 0.6})
('convex minimization', 'quasi-newton method', {'weight': 0.6})
('convex minimization', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('convex minimization', 'robert e. lucas', {'weight': 0.6})
('convex minimization', 'non-convexity (economics)', {'weight': 0.6})
('convex minimization', 'sr1 formula', {'weight': 0.6})
('convex minimization', 'mathematical reviews', {'weight': 0.6})
('convex minimization', 'puzzle', {'weight': 0.6})
('convex minimization', 'associative array', {'weight': 0.6})
('convex minimization', 'shortest path problem', {'weight': 0.6})
('convex minimization', 'dynamic algorithm', {'weight': 0.6})
('convex minimization', 'augmented lagrangian method', {'weight': 0.6})
('convex minimization', 'charles delisi', {'weight': 0.6})
('convex minimization', 'greedy algorithm', {'weight': 0.6})
('convex minimization', "karmarkar's algorithm", {'weight': 0.6})
('convex minimization', 'lattice models', {'weight': 0.6})
('convex minimization', 'utility', {'weight': 0.6})
('convex minimization', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('convex minimization', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('convex minimization', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('convex minimization', 'international standard book number', {'weight': 0.6})
('convex minimization', 'undirected graph', {'weight': 0.6})
('convex minimization', 'scheme (programming language)', {'weight': 0.6})
('convex minimization', 'rna structure', {'weight': 0.6})
('convex minimization', 'hanoi', {'weight': 0.6})
('convex minimization', 'perl', {'weight': 0.6})
('convex minimization', 'digital object identifier', {'weight': 0.6})
('convex minimization', 'sequential quadratic programming', {'weight': 0.6})
('convex minimization', "dinic's algorithm", {'weight': 0.6})
('convex minimization', 'pseudo-polynomial time', {'weight': 0.6})
('convex minimization', 'partition problem', {'weight': 0.6})
('convex minimization', 'stochastic programming', {'weight': 0.6})
('convex minimization', 'hill climbing', {'weight': 0.6})
('convex minimization', 'duality', {'weight': 0.7})
('convex minimization', 'top-down', {'weight': 0.6})
('convex minimization', 'de boor algorithm', {'weight': 0.6})
('convex minimization', 'optimization algorithm', {'weight': 0.6})
('convex minimization', "kruskal's algorithm", {'weight': 0.6})
('convex minimization', 'jacques philippe marie binet', {'weight': 0.6})
('convex minimization', 'tabu search', {'weight': 0.6})
('convex minimization', 'divide and conquer algorithm', {'weight': 0.6})
('convex minimization', "johnson's algorithm", {'weight': 0.6})
('convex minimization', 'evolutionary algorithm', {'weight': 0.6})
('convex minimization', 'clique-width', {'weight': 0.6})
('convex minimization', 'dynamic programming', {'weight': 0.6})
('convex minimization', 'subroutine', {'weight': 0.6})
('convex minimization', 'simulated annealing', {'weight': 0.6})
('convex minimization', 'tower of hanoi', {'weight': 0.6})
('convex minimization', 'branch and bound', {'weight': 0.6})
('convex minimization', 'engineering', {'weight': 0.6})
('convex minimization', 'matroid', {'weight': 0.6})
('convex minimization', 'viterbi algorithm', {'weight': 0.6})
('convex minimization', "lemke's algorithm", {'weight': 0.6})
('convex minimization', 'simplex algorithm', {'weight': 0.6})
('convex minimization', 'local search (optimization)', {'weight': 0.6})
('convex minimization', 'hessian matrix', {'weight': 0.6})
('convex minimization', 'ibm system r', {'weight': 0.6})
('convex minimization', 'penalty method', {'weight': 0.6})
('convex minimization', 'prolog', {'weight': 0.6})
('convex minimization', 'time-invariant system', {'weight': 0.6})
('convex minimization', 'criss-cross algorithm', {'weight': 0.6})
('convex minimization', 'revised simplex algorithm', {'weight': 0.6})
('convex minimization', 'the mathematical association of america', {'weight': 0.6})
('convex minimization', 'line search', {'weight': 0.6})
('convex minimization', 'j (programming language)', {'weight': 0.6})
('convex minimization', 'word wrap', {'weight': 0.6})
('convex minimization', 'subset sum problem', {'weight': 0.6})
('convex minimization', 'integer programming', {'weight': 0.6})
('convex minimization', 'nucleosome', {'weight': 0.6})
('convex minimization', 'earley algorithm', {'weight': 0.6})
('convex minimization', 'referential transparency (computer science)', {'weight': 0.6})
('convex minimization', 'recursion', {'weight': 0.6})
('convex minimization', 'mathematica', {'weight': 0.6})
('convex minimization', 'quicksort', {'weight': 0.6})
('convex minimization', 'recursion (computer science)', {'weight': 0.6})
('convex minimization', 'checkerboard', {'weight': 0.6})
('convex minimization', 'computer science', {'weight': 0.6})
('convex minimization', 'brute-force search', {'weight': 0.6})
('convex minimization', 'mathematics', {'weight': 0.6})
('convex minimization', 'depth-first search', {'weight': 0.6})
('convex minimization', 'top-down and bottom-up design', {'weight': 0.6})
('convex minimization', 'correspondence problem', {'weight': 0.6})
('convex minimization', 'transcription factor', {'weight': 0.6})
('convex minimization', 'tree decomposition', {'weight': 0.6})
('convex minimization', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('convex minimization', 'structural alignment', {'weight': 0.6})
('convex minimization', 'local convergence', {'weight': 0.6})
('convex minimization', 'knapsack problem', {'weight': 0.6})
('convex minimization', 'graph algorithm', {'weight': 0.6})
('convex minimization', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('convex minimization', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('convex minimization', 'hidden markov model', {'weight': 0.6})
('convex minimization', 'string (computer science)', {'weight': 0.6})
('convex minimization', 'bioinformatics', {'weight': 0.6})
('convex minimization', 'genetics', {'weight': 0.6})
('convex minimization', 'mathematical optimization', {'weight': 0.6})
('convex minimization', 'artificial neural networks', {'weight': 0.6})
('convex minimization', 'introduction to algorithms', {'weight': 0.6})
('convex minimization', 'thomas h. cormen', {'weight': 0.6})
('convex minimization', 'music information retrieval', {'weight': 0.6})
('convex minimization', 'beat (music)', {'weight': 0.6})
('convex minimization', 'longest common subsequence problem', {'weight': 0.6})
('convex minimization', 'convex minimization', {'weight': 1})
('convex minimization', 'successive parabolic interpolation', {'weight': 0.6})
('convex minimization', 'fibonacci sequence', {'weight': 0.6})
('convex minimization', 'maximum subarray problem', {'weight': 0.6})
('convex minimization', 'convex optimization', {'weight': 0.6})
('convex minimization', 'memoization', {'weight': 0.6})
('convex minimization', 'richard bellman', {'weight': 0.6})
('convex minimization', 'exponential growth', {'weight': 0.6})
('convex minimization', 'charles e. leiserson', {'weight': 0.6})
('convex minimization', 'charles erwin wilson', {'weight': 0.6})
('convex minimization', 'interval scheduling', {'weight': 0.6})
('convex minimization', 'chart parser', {'weight': 0.6})
('convex minimization', 'travelling salesman problem', {'weight': 0.6})
('convex minimization', 'bellman equation', {'weight': 0.6})
('chart parser', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('chart parser', 'photoshop', {'weight': 0.6})
('chart parser', 'sequence alignment', {'weight': 0.6})
('chart parser', 'flow network', {'weight': 0.6})
('chart parser', 'ellipsoid method', {'weight': 0.6})
('chart parser', 'chain matrix multiplication', {'weight': 0.6})
('chart parser', 'ieee', {'weight': 0.6})
('chart parser', 'backtracking', {'weight': 0.6})
('chart parser', 'nonlinear conjugate gradient method', {'weight': 0.6})
('chart parser', 'dynamic problem', {'weight': 0.6})
('chart parser', 'trust region', {'weight': 0.6})
('chart parser', 'function (mathematics)', {'weight': 0.6})
('chart parser', 'minimum spanning tree', {'weight': 0.6})
('chart parser', 'context-free grammar', {'weight': 0.6})
('chart parser', 'branch and cut', {'weight': 0.6})
('chart parser', 'state variable', {'weight': 0.6})
('chart parser', 'treewidth', {'weight': 0.6})
('chart parser', 'overlapping subproblem', {'weight': 0.6})
('chart parser', 'taylor & francis', {'weight': 0.6})
('chart parser', 'cutting-plane method', {'weight': 0.6})
('chart parser', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('chart parser', 'method of undetermined coefficients', {'weight': 0.6})
('chart parser', 'combinatorial optimization', {'weight': 0.6})
('chart parser', "newton's method in optimization", {'weight': 0.6})
('chart parser', 'matrix chain multiplication', {'weight': 0.6})
('chart parser', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('chart parser', 'dynamic time warping', {'weight': 0.6})
('chart parser', 'dynamic programming language', {'weight': 0.6})
('chart parser', 'call-by-need', {'weight': 0.6})
('chart parser', 'big-o notation', {'weight': 0.6})
('chart parser', 'comparison of optimization software', {'weight': 0.6})
('chart parser', 'quadratic programming', {'weight': 0.6})
('chart parser', 'common lisp', {'weight': 0.6})
('chart parser', 'barrier function', {'weight': 0.6})
('chart parser', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('chart parser', 'gradient descent', {'weight': 0.6})
('chart parser', 'patricia selinger', {'weight': 0.6})
('chart parser', 'discounting', {'weight': 0.6})
('chart parser', 'ronald l. rivest', {'weight': 0.6})
('chart parser', 'iterative method', {'weight': 0.6})
('chart parser', 'limited-memory bfgs', {'weight': 0.6})
('chart parser', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('chart parser', 'longest common substring problem', {'weight': 0.6})
('chart parser', 'clifford stein', {'weight': 0.6})
('chart parser', 'computer chess', {'weight': 0.6})
('chart parser', 'linear programming', {'weight': 0.6})
('chart parser', 'bitonic tour', {'weight': 0.6})
('chart parser', 'linear search problem', {'weight': 0.6})
('chart parser', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('chart parser', 'systems analysis', {'weight': 0.6})
('chart parser', 'capital (economics)', {'weight': 0.6})
('chart parser', 'levenshtein distance', {'weight': 0.6})
('chart parser', 'nonlinear programming', {'weight': 0.6})
('chart parser', 'computational complexity of mathematical operations', {'weight': 0.6})
('chart parser', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('chart parser', 'gradient', {'weight': 0.6})
('chart parser', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('chart parser', 'bulletin of the american mathematical society', {'weight': 0.6})
('chart parser', 'u.s. english', {'weight': 0.6})
('chart parser', 'refutation table', {'weight': 0.6})
('chart parser', 'parsing algorithms', {'weight': 0.5})
('chart parser', 'successive linear programming', {'weight': 0.6})
('chart parser', 'optimal substructure', {'weight': 0.6})
('chart parser', 'programming language', {'weight': 0.6})
('chart parser', 'mergesort', {'weight': 0.6})
('chart parser', "dijkstra's algorithm", {'weight': 0.6})
('chart parser', 'subgradient method', {'weight': 0.6})
('chart parser', 'call-by-name', {'weight': 0.6})
('chart parser', 'longest increasing subsequence problem', {'weight': 0.6})
('chart parser', 'edward prescott', {'weight': 0.6})
('chart parser', 'exponential time', {'weight': 0.6})
('chart parser', 'principle of optimality', {'weight': 0.6})
('chart parser', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('chart parser', 'mathematical game', {'weight': 0.6})
('chart parser', 'nancy stokey', {'weight': 0.6})
('chart parser', 'approximation algorithm', {'weight': 0.6})
('chart parser', 'discrete-time', {'weight': 0.6})
('chart parser', 'cyk algorithm', {'weight': 0.6})
('chart parser', 'markov decision process', {'weight': 0.6})
('chart parser', "powell's method", {'weight': 0.6})
('chart parser', 'wolfe conditions', {'weight': 0.6})
('chart parser', 'convexity in economics', {'weight': 0.6})
('chart parser', 'transposition table', {'weight': 0.6})
('chart parser', 'economics', {'weight': 0.6})
('chart parser', 'backward induction', {'weight': 0.6})
('chart parser', 'golden section search', {'weight': 0.6})
('chart parser', 'edit distance', {'weight': 0.6})
('chart parser', 'tree structure', {'weight': 0.6})
('chart parser', 'exchange algorithm', {'weight': 0.6})
('chart parser', 'dover publications', {'weight': 0.6})
('chart parser', 'seam carving', {'weight': 0.6})
('chart parser', 'recursive least squares', {'weight': 0.6})
('chart parser', 'metaheuristic', {'weight': 0.6})
('chart parser', 'quasi-newton method', {'weight': 0.6})
('chart parser', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('chart parser', 'robert e. lucas', {'weight': 0.6})
('chart parser', 'non-convexity (economics)', {'weight': 0.6})
('chart parser', 'sr1 formula', {'weight': 0.6})
('chart parser', 'mathematical reviews', {'weight': 0.6})
('chart parser', 'puzzle', {'weight': 0.6})
('chart parser', 'associative array', {'weight': 0.6})
('chart parser', 'shortest path problem', {'weight': 0.6})
('chart parser', 'dynamic algorithm', {'weight': 0.6})
('chart parser', 'augmented lagrangian method', {'weight': 0.6})
('chart parser', 'charles delisi', {'weight': 0.6})
('chart parser', 'greedy algorithm', {'weight': 0.6})
('chart parser', "karmarkar's algorithm", {'weight': 0.6})
('chart parser', 'lattice models', {'weight': 0.6})
('chart parser', 'utility', {'weight': 0.6})
('chart parser', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('chart parser', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('chart parser', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('chart parser', 'international standard book number', {'weight': 0.6})
('chart parser', 'undirected graph', {'weight': 0.6})
('chart parser', 'scheme (programming language)', {'weight': 0.6})
('chart parser', 'rna structure', {'weight': 0.6})
('chart parser', 'hanoi', {'weight': 0.6})
('chart parser', 'perl', {'weight': 0.6})
('chart parser', 'digital object identifier', {'weight': 0.6})
('chart parser', 'sequential quadratic programming', {'weight': 0.6})
('chart parser', "dinic's algorithm", {'weight': 0.6})
('chart parser', 'pseudo-polynomial time', {'weight': 0.6})
('chart parser', 'partition problem', {'weight': 0.6})
('chart parser', 'stochastic programming', {'weight': 0.6})
('chart parser', 'hill climbing', {'weight': 0.6})
('chart parser', 'top-down', {'weight': 0.6})
('chart parser', 'de boor algorithm', {'weight': 0.6})
('chart parser', 'optimization algorithm', {'weight': 0.6})
('chart parser', "kruskal's algorithm", {'weight': 0.6})
('chart parser', 'jacques philippe marie binet', {'weight': 0.6})
('chart parser', 'tabu search', {'weight': 0.6})
('chart parser', 'natural language parsing', {'weight': 0.5})
('chart parser', 'divide and conquer algorithm', {'weight': 0.6})
('chart parser', "johnson's algorithm", {'weight': 0.6})
('chart parser', 'evolutionary algorithm', {'weight': 0.6})
('chart parser', 'clique-width', {'weight': 0.6})
('chart parser', 'dynamic programming', {'weight': 0.6})
('chart parser', 'subroutine', {'weight': 0.6})
('chart parser', 'line search', {'weight': 0.6})
('chart parser', 'simulated annealing', {'weight': 0.6})
('chart parser', 'tower of hanoi', {'weight': 0.6})
('chart parser', 'branch and bound', {'weight': 0.6})
('chart parser', 'engineering', {'weight': 0.6})
('chart parser', 'matroid', {'weight': 0.6})
('chart parser', 'viterbi algorithm', {'weight': 0.6})
('chart parser', "lemke's algorithm", {'weight': 0.6})
('chart parser', 'simplex algorithm', {'weight': 0.6})
('chart parser', 'local search (optimization)', {'weight': 0.6})
('chart parser', 'hessian matrix', {'weight': 0.6})
('chart parser', 'ibm system r', {'weight': 0.6})
('chart parser', 'penalty method', {'weight': 0.6})
('chart parser', 'prolog', {'weight': 0.6})
('chart parser', 'time-invariant system', {'weight': 0.6})
('chart parser', 'criss-cross algorithm', {'weight': 0.6})
('chart parser', 'revised simplex algorithm', {'weight': 0.6})
('chart parser', 'the mathematical association of america', {'weight': 0.6})
('chart parser', 'heuristic algorithm', {'weight': 0.6})
('chart parser', 'j (programming language)', {'weight': 0.6})
('chart parser', 'word wrap', {'weight': 0.6})
('chart parser', 'subset sum problem', {'weight': 0.6})
('chart parser', 'integer programming', {'weight': 0.6})
('chart parser', 'nucleosome', {'weight': 0.6})
('chart parser', 'earley algorithm', {'weight': 0.6})
('chart parser', 'referential transparency (computer science)', {'weight': 0.6})
('chart parser', 'recursion', {'weight': 0.6})
('chart parser', 'mathematica', {'weight': 0.6})
('chart parser', 'quicksort', {'weight': 0.6})
('chart parser', 'recursion (computer science)', {'weight': 0.6})
('chart parser', 'checkerboard', {'weight': 0.6})
('chart parser', 'computer science', {'weight': 0.6})
('chart parser', 'brute-force search', {'weight': 0.6})
('chart parser', 'mathematics', {'weight': 0.6})
('chart parser', 'depth-first search', {'weight': 0.6})
('chart parser', 'top-down and bottom-up design', {'weight': 0.6})
('chart parser', 'correspondence problem', {'weight': 0.6})
('chart parser', 'transcription factor', {'weight': 0.6})
('chart parser', 'tree decomposition', {'weight': 0.6})
('chart parser', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('chart parser', 'structural alignment', {'weight': 0.6})
('chart parser', 'local convergence', {'weight': 0.6})
('chart parser', 'knapsack problem', {'weight': 0.6})
('chart parser', 'graph algorithm', {'weight': 0.6})
('chart parser', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('chart parser', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('chart parser', 'hidden markov model', {'weight': 0.6})
('chart parser', 'string (computer science)', {'weight': 0.6})
('chart parser', 'bioinformatics', {'weight': 0.6})
('chart parser', 'genetics', {'weight': 0.6})
('chart parser', 'mathematical optimization', {'weight': 0.6})
('chart parser', 'artificial neural networks', {'weight': 0.6})
('chart parser', 'introduction to algorithms', {'weight': 0.6})
('chart parser', 'thomas h. cormen', {'weight': 0.6})
('chart parser', 'music information retrieval', {'weight': 0.6})
('chart parser', 'beat (music)', {'weight': 0.6})
('chart parser', 'longest common subsequence problem', {'weight': 0.6})
('chart parser', 'convex minimization', {'weight': 0.6})
('chart parser', 'successive parabolic interpolation', {'weight': 0.6})
('chart parser', 'fibonacci sequence', {'weight': 0.6})
('chart parser', 'maximum subarray problem', {'weight': 0.6})
('chart parser', 'convex optimization', {'weight': 0.6})
('chart parser', 'memoization', {'weight': 0.6})
('chart parser', 'richard bellman', {'weight': 0.6})
('chart parser', 'exponential growth', {'weight': 0.6})
('chart parser', 'charles e. leiserson', {'weight': 0.6})
('chart parser', 'charles erwin wilson', {'weight': 0.6})
('chart parser', 'interval scheduling', {'weight': 0.6})
('chart parser', 'chart parser', {'weight': 1})
('chart parser', 'travelling salesman problem', {'weight': 0.6})
('chart parser', 'bellman equation', {'weight': 0.6})
('limited-memory bfgs', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('limited-memory bfgs', 'photoshop', {'weight': 0.6})
('limited-memory bfgs', 'sequence alignment', {'weight': 0.6})
('limited-memory bfgs', 'flow network', {'weight': 0.6})
('limited-memory bfgs', 'ellipsoid method', {'weight': 0.6})
('limited-memory bfgs', 'chain matrix multiplication', {'weight': 0.6})
('limited-memory bfgs', 'ieee', {'weight': 0.6})
('limited-memory bfgs', 'backtracking', {'weight': 0.6})
('limited-memory bfgs', 'nonlinear conjugate gradient method', {'weight': 0.6})
('limited-memory bfgs', 'dynamic problem', {'weight': 0.6})
('limited-memory bfgs', 'trust region', {'weight': 0.6})
('limited-memory bfgs', 'function (mathematics)', {'weight': 0.6})
('limited-memory bfgs', 'minimum spanning tree', {'weight': 0.6})
('limited-memory bfgs', 'context-free grammar', {'weight': 0.6})
('limited-memory bfgs', 'branch and cut', {'weight': 0.6})
('limited-memory bfgs', 'state variable', {'weight': 0.6})
('limited-memory bfgs', 'treewidth', {'weight': 0.6})
('limited-memory bfgs', 'overlapping subproblem', {'weight': 0.6})
('limited-memory bfgs', 'taylor & francis', {'weight': 0.6})
('limited-memory bfgs', 'cutting-plane method', {'weight': 0.6})
('limited-memory bfgs', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('limited-memory bfgs', 'method of undetermined coefficients', {'weight': 0.6})
('limited-memory bfgs', 'combinatorial optimization', {'weight': 0.6})
('limited-memory bfgs', "newton's method in optimization", {'weight': 0.6})
('limited-memory bfgs', 'matrix chain multiplication', {'weight': 0.6})
('limited-memory bfgs', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('limited-memory bfgs', 'dynamic time warping', {'weight': 0.6})
('limited-memory bfgs', 'dynamic programming language', {'weight': 0.6})
('limited-memory bfgs', 'call-by-need', {'weight': 0.6})
('limited-memory bfgs', 'big-o notation', {'weight': 0.6})
('limited-memory bfgs', 'comparison of optimization software', {'weight': 0.6})
('limited-memory bfgs', 'quadratic programming', {'weight': 0.6})
('limited-memory bfgs', 'common lisp', {'weight': 0.6})
('limited-memory bfgs', 'barrier function', {'weight': 0.6})
('limited-memory bfgs', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('limited-memory bfgs', 'gradient descent', {'weight': 0.6})
('limited-memory bfgs', 'patricia selinger', {'weight': 0.6})
('limited-memory bfgs', 'discounting', {'weight': 0.6})
('limited-memory bfgs', 'ronald l. rivest', {'weight': 0.6})
('limited-memory bfgs', 'iterative method', {'weight': 0.6})
('limited-memory bfgs', 'limited-memory bfgs', {'weight': 1})
('limited-memory bfgs', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('limited-memory bfgs', 'longest common substring problem', {'weight': 0.6})
('limited-memory bfgs', 'clifford stein', {'weight': 0.6})
('limited-memory bfgs', 'computer chess', {'weight': 0.6})
('limited-memory bfgs', 'linear programming', {'weight': 0.6})
('limited-memory bfgs', 'bitonic tour', {'weight': 0.6})
('limited-memory bfgs', 'linear search problem', {'weight': 0.6})
('limited-memory bfgs', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('limited-memory bfgs', 'systems analysis', {'weight': 0.6})
('limited-memory bfgs', 'capital (economics)', {'weight': 0.6})
('limited-memory bfgs', 'levenshtein distance', {'weight': 0.6})
('limited-memory bfgs', 'nonlinear programming', {'weight': 0.6})
('limited-memory bfgs', 'computational complexity of mathematical operations', {'weight': 0.6})
('limited-memory bfgs', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('limited-memory bfgs', 'gradient', {'weight': 0.6})
('limited-memory bfgs', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('limited-memory bfgs', 'bulletin of the american mathematical society', {'weight': 0.6})
('limited-memory bfgs', 'u.s. english', {'weight': 0.6})
('limited-memory bfgs', 'refutation table', {'weight': 0.6})
('limited-memory bfgs', 'heuristic algorithm', {'weight': 0.6})
('limited-memory bfgs', 'successive linear programming', {'weight': 0.6})
('limited-memory bfgs', 'optimal substructure', {'weight': 0.6})
('limited-memory bfgs', 'programming language', {'weight': 0.6})
('limited-memory bfgs', 'mergesort', {'weight': 0.6})
('limited-memory bfgs', "dijkstra's algorithm", {'weight': 0.6})
('limited-memory bfgs', 'subgradient method', {'weight': 0.6})
('limited-memory bfgs', 'call-by-name', {'weight': 0.6})
('limited-memory bfgs', 'longest increasing subsequence problem', {'weight': 0.6})
('limited-memory bfgs', 'edward prescott', {'weight': 0.6})
('limited-memory bfgs', 'exponential time', {'weight': 0.6})
('limited-memory bfgs', 'principle of optimality', {'weight': 0.6})
('limited-memory bfgs', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('limited-memory bfgs', 'mathematical game', {'weight': 0.6})
('limited-memory bfgs', 'nancy stokey', {'weight': 0.6})
('limited-memory bfgs', 'approximation algorithm', {'weight': 0.6})
('limited-memory bfgs', 'discrete-time', {'weight': 0.6})
('limited-memory bfgs', 'cyk algorithm', {'weight': 0.6})
('limited-memory bfgs', 'markov decision process', {'weight': 0.6})
('limited-memory bfgs', "powell's method", {'weight': 0.6})
('limited-memory bfgs', 'wolfe conditions', {'weight': 0.6})
('limited-memory bfgs', 'convexity in economics', {'weight': 0.6})
('limited-memory bfgs', 'transposition table', {'weight': 0.6})
('limited-memory bfgs', 'economics', {'weight': 0.6})
('limited-memory bfgs', 'backward induction', {'weight': 0.6})
('limited-memory bfgs', 'golden section search', {'weight': 0.6})
('limited-memory bfgs', 'edit distance', {'weight': 0.6})
('limited-memory bfgs', 'tree structure', {'weight': 0.6})
('limited-memory bfgs', 'exchange algorithm', {'weight': 0.6})
('limited-memory bfgs', 'dover publications', {'weight': 0.6})
('limited-memory bfgs', 'seam carving', {'weight': 0.6})
('limited-memory bfgs', 'recursive least squares', {'weight': 0.6})
('limited-memory bfgs', 'metaheuristic', {'weight': 0.6})
('limited-memory bfgs', 'quasi-newton method', {'weight': 0.6})
('limited-memory bfgs', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('limited-memory bfgs', 'robert e. lucas', {'weight': 0.6})
('limited-memory bfgs', 'non-convexity (economics)', {'weight': 0.6})
('limited-memory bfgs', 'sr1 formula', {'weight': 0.6})
('limited-memory bfgs', 'mathematical reviews', {'weight': 0.6})
('limited-memory bfgs', 'puzzle', {'weight': 0.6})
('limited-memory bfgs', 'associative array', {'weight': 0.6})
('limited-memory bfgs', 'shortest path problem', {'weight': 0.6})
('limited-memory bfgs', 'dynamic algorithm', {'weight': 0.6})
('limited-memory bfgs', 'augmented lagrangian method', {'weight': 0.6})
('limited-memory bfgs', 'charles delisi', {'weight': 0.6})
('limited-memory bfgs', 'greedy algorithm', {'weight': 0.6})
('limited-memory bfgs', "karmarkar's algorithm", {'weight': 0.6})
('limited-memory bfgs', 'lattice models', {'weight': 0.6})
('limited-memory bfgs', 'utility', {'weight': 0.6})
('limited-memory bfgs', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('limited-memory bfgs', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('limited-memory bfgs', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('limited-memory bfgs', 'international standard book number', {'weight': 0.6})
('limited-memory bfgs', 'undirected graph', {'weight': 0.6})
('limited-memory bfgs', 'scheme (programming language)', {'weight': 0.6})
('limited-memory bfgs', 'rna structure', {'weight': 0.6})
('limited-memory bfgs', 'hanoi', {'weight': 0.6})
('limited-memory bfgs', 'perl', {'weight': 0.6})
('limited-memory bfgs', 'digital object identifier', {'weight': 0.6})
('limited-memory bfgs', 'sequential quadratic programming', {'weight': 0.6})
('limited-memory bfgs', "dinic's algorithm", {'weight': 0.6})
('limited-memory bfgs', 'pseudo-polynomial time', {'weight': 0.6})
('limited-memory bfgs', 'partition problem', {'weight': 0.6})
('limited-memory bfgs', 'stochastic programming', {'weight': 0.6})
('limited-memory bfgs', 'hill climbing', {'weight': 0.6})
('limited-memory bfgs', 'top-down', {'weight': 0.6})
('limited-memory bfgs', 'de boor algorithm', {'weight': 0.6})
('limited-memory bfgs', 'optimization algorithm', {'weight': 0.6})
('limited-memory bfgs', "kruskal's algorithm", {'weight': 0.6})
('limited-memory bfgs', 'jacques philippe marie binet', {'weight': 0.6})
('limited-memory bfgs', 'tabu search', {'weight': 0.6})
('limited-memory bfgs', 'divide and conquer algorithm', {'weight': 0.6})
('limited-memory bfgs', "johnson's algorithm", {'weight': 0.6})
('limited-memory bfgs', 'evolutionary algorithm', {'weight': 0.6})
('limited-memory bfgs', 'clique-width', {'weight': 0.6})
('limited-memory bfgs', 'dynamic programming', {'weight': 0.6})
('limited-memory bfgs', 'subroutine', {'weight': 0.6})
('limited-memory bfgs', 'simulated annealing', {'weight': 0.6})
('limited-memory bfgs', 'tower of hanoi', {'weight': 0.6})
('limited-memory bfgs', 'branch and bound', {'weight': 0.6})
('limited-memory bfgs', 'engineering', {'weight': 0.6})
('limited-memory bfgs', 'matroid', {'weight': 0.6})
('limited-memory bfgs', 'viterbi algorithm', {'weight': 0.6})
('limited-memory bfgs', "lemke's algorithm", {'weight': 0.6})
('limited-memory bfgs', 'simplex algorithm', {'weight': 0.6})
('limited-memory bfgs', 'local search (optimization)', {'weight': 0.6})
('limited-memory bfgs', 'hessian matrix', {'weight': 0.6})
('limited-memory bfgs', 'ibm system r', {'weight': 0.6})
('limited-memory bfgs', 'penalty method', {'weight': 0.6})
('limited-memory bfgs', 'prolog', {'weight': 0.6})
('limited-memory bfgs', 'time-invariant system', {'weight': 0.6})
('limited-memory bfgs', 'criss-cross algorithm', {'weight': 0.6})
('limited-memory bfgs', 'revised simplex algorithm', {'weight': 0.6})
('limited-memory bfgs', 'the mathematical association of america', {'weight': 0.6})
('limited-memory bfgs', 'line search', {'weight': 0.6})
('limited-memory bfgs', 'j (programming language)', {'weight': 0.6})
('limited-memory bfgs', 'word wrap', {'weight': 0.6})
('limited-memory bfgs', 'subset sum problem', {'weight': 0.6})
('limited-memory bfgs', 'integer programming', {'weight': 0.6})
('limited-memory bfgs', 'nucleosome', {'weight': 0.6})
('limited-memory bfgs', 'earley algorithm', {'weight': 0.6})
('limited-memory bfgs', 'referential transparency (computer science)', {'weight': 0.6})
('limited-memory bfgs', 'recursion', {'weight': 0.6})
('limited-memory bfgs', 'mathematica', {'weight': 0.6})
('limited-memory bfgs', 'quicksort', {'weight': 0.6})
('limited-memory bfgs', 'recursion (computer science)', {'weight': 0.6})
('limited-memory bfgs', 'checkerboard', {'weight': 0.6})
('limited-memory bfgs', 'computer science', {'weight': 0.6})
('limited-memory bfgs', 'brute-force search', {'weight': 0.6})
('limited-memory bfgs', 'mathematics', {'weight': 0.6})
('limited-memory bfgs', 'depth-first search', {'weight': 0.6})
('limited-memory bfgs', 'top-down and bottom-up design', {'weight': 0.6})
('limited-memory bfgs', 'correspondence problem', {'weight': 0.6})
('limited-memory bfgs', 'transcription factor', {'weight': 0.6})
('limited-memory bfgs', 'tree decomposition', {'weight': 0.6})
('limited-memory bfgs', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('limited-memory bfgs', 'structural alignment', {'weight': 0.6})
('limited-memory bfgs', 'local convergence', {'weight': 0.6})
('limited-memory bfgs', 'knapsack problem', {'weight': 0.6})
('limited-memory bfgs', 'graph algorithm', {'weight': 0.6})
('limited-memory bfgs', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('limited-memory bfgs', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('limited-memory bfgs', 'hidden markov model', {'weight': 0.6})
('limited-memory bfgs', 'string (computer science)', {'weight': 0.6})
('limited-memory bfgs', 'bioinformatics', {'weight': 0.6})
('limited-memory bfgs', 'genetics', {'weight': 0.6})
('limited-memory bfgs', 'mathematical optimization', {'weight': 0.6})
('limited-memory bfgs', 'artificial neural networks', {'weight': 0.6})
('limited-memory bfgs', 'introduction to algorithms', {'weight': 0.6})
('limited-memory bfgs', 'thomas h. cormen', {'weight': 0.6})
('limited-memory bfgs', 'music information retrieval', {'weight': 0.6})
('limited-memory bfgs', 'beat (music)', {'weight': 0.6})
('limited-memory bfgs', 'longest common subsequence problem', {'weight': 0.6})
('limited-memory bfgs', 'convex minimization', {'weight': 0.6})
('limited-memory bfgs', 'successive parabolic interpolation', {'weight': 0.6})
('limited-memory bfgs', 'fibonacci sequence', {'weight': 0.6})
('limited-memory bfgs', 'maximum subarray problem', {'weight': 0.6})
('limited-memory bfgs', 'convex optimization', {'weight': 0.6})
('limited-memory bfgs', 'memoization', {'weight': 0.6})
('limited-memory bfgs', 'richard bellman', {'weight': 0.6})
('limited-memory bfgs', 'exponential growth', {'weight': 0.6})
('limited-memory bfgs', 'charles e. leiserson', {'weight': 0.6})
('limited-memory bfgs', 'charles erwin wilson', {'weight': 0.6})
('limited-memory bfgs', 'interval scheduling', {'weight': 0.6})
('limited-memory bfgs', 'chart parser', {'weight': 0.6})
('limited-memory bfgs', 'travelling salesman problem', {'weight': 0.6})
('limited-memory bfgs', 'bellman equation', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'photoshop', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'sequence alignment', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'flow network', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'ellipsoid method', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'chain matrix multiplication', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'ieee', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'backtracking', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'nonlinear conjugate gradient method', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'dynamic problem', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'trust region', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'function (mathematics)', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'minimum spanning tree', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'context-free grammar', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'branch and cut', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'state variable', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'treewidth', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'overlapping subproblem', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'taylor & francis', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'cutting-plane method', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'method of undetermined coefficients', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'combinatorial optimization', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', "newton's method in optimization", {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'matrix chain multiplication', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'dynamic time warping', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'dynamic programming language', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'call-by-need', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'big-o notation', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'comparison of optimization software', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'quadratic programming', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'common lisp', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'barrier function', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'gradient descent', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'patricia selinger', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'discounting', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'ronald l. rivest', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'iterative method', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'limited-memory bfgs', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'longest common substring problem', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'clifford stein', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'computer chess', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'linear programming', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'bitonic tour', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'linear search problem', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'systems analysis', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'capital (economics)', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'levenshtein distance', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'nonlinear programming', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'computational complexity of mathematical operations', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'gradient', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'bulletin of the american mathematical society', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'u.s. english', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'refutation table', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'heuristic algorithm', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'successive linear programming', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'optimal substructure', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'programming language', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'mergesort', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', "dijkstra's algorithm", {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'subgradient method', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'call-by-name', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'longest increasing subsequence problem', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'edward prescott', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'exponential time', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'principle of optimality', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'mathematical game', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'nancy stokey', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'approximation algorithm', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'discrete-time', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'cyk algorithm', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'markov decision process', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', "powell's method", {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'wolfe conditions', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'convexity in economics', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'transposition table', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'economics', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'backward induction', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'golden section search', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'edit distance', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'tree structure', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'exchange algorithm', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'dover publications', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'seam carving', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'recursive least squares', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'metaheuristic', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'quasi-newton method', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'robert e. lucas', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'non-convexity (economics)', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'sr1 formula', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'mathematical reviews', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'puzzle', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'associative array', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'shortest path problem', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'dynamic algorithm', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'augmented lagrangian method', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'charles delisi', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'greedy algorithm', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', "karmarkar's algorithm", {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'lattice models', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'utility', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'international standard book number', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'undirected graph', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'scheme (programming language)', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'rna structure', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'hanoi', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'perl', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'digital object identifier', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'sequential quadratic programming', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', "dinic's algorithm", {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'pseudo-polynomial time', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'partition problem', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'stochastic programming', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'hill climbing', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'top-down', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'de boor algorithm', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'optimization algorithm', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', "kruskal's algorithm", {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'jacques philippe marie binet', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'tabu search', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'divide and conquer algorithm', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', "johnson's algorithm", {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'evolutionary algorithm', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'clique-width', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'dynamic programming', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'subroutine', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'simulated annealing', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'tower of hanoi', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'branch and bound', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'engineering', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'matroid', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'viterbi algorithm', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', "lemke's algorithm", {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'simplex algorithm', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'local search (optimization)', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'hessian matrix', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'ibm system r', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'penalty method', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'prolog', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'time-invariant system', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'criss-cross algorithm', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'revised simplex algorithm', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'the mathematical association of america', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'line search', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'j (programming language)', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'word wrap', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'subset sum problem', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'integer programming', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'nucleosome', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'earley algorithm', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'referential transparency (computer science)', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'recursion', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'mathematica', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'quicksort', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'recursion (computer science)', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'checkerboard', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'computer science', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'brute-force search', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'mathematics', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'depth-first search', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'top-down and bottom-up design', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'correspondence problem', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'transcription factor', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'tree decomposition', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'structural alignment', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'local convergence', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'knapsack problem', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'graph algorithm', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 1})
('needleman\xe2\x80\x93wunsch algorithm', 'hidden markov model', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'string (computer science)', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'bioinformatics', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'genetics', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'mathematical optimization', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'artificial neural networks', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'introduction to algorithms', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'thomas h. cormen', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'music information retrieval', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'beat (music)', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'longest common subsequence problem', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'convex minimization', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'successive parabolic interpolation', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'fibonacci sequence', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'maximum subarray problem', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'convex optimization', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'memoization', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'richard bellman', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'exponential growth', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'charles e. leiserson', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'charles erwin wilson', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'interval scheduling', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'chart parser', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'travelling salesman problem', {'weight': 0.6})
('needleman\xe2\x80\x93wunsch algorithm', 'bellman equation', {'weight': 0.6})
('subgradient method', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('subgradient method', 'photoshop', {'weight': 0.6})
('subgradient method', 'sequence alignment', {'weight': 0.6})
('subgradient method', 'flow network', {'weight': 0.6})
('subgradient method', 'ellipsoid method', {'weight': 0.6})
('subgradient method', 'chain matrix multiplication', {'weight': 0.6})
('subgradient method', 'ieee', {'weight': 0.6})
('subgradient method', 'backtracking', {'weight': 0.6})
('subgradient method', 'nonlinear conjugate gradient method', {'weight': 0.6})
('subgradient method', 'dynamic problem', {'weight': 0.6})
('subgradient method', 'trust region', {'weight': 0.6})
('subgradient method', 'function (mathematics)', {'weight': 0.6})
('subgradient method', 'minimum spanning tree', {'weight': 0.6})
('subgradient method', 'context-free grammar', {'weight': 0.6})
('subgradient method', 'branch and cut', {'weight': 0.6})
('subgradient method', 'state variable', {'weight': 0.6})
('subgradient method', 'treewidth', {'weight': 0.6})
('subgradient method', 'overlapping subproblem', {'weight': 0.6})
('subgradient method', 'taylor & francis', {'weight': 0.6})
('subgradient method', 'cutting-plane method', {'weight': 0.6})
('subgradient method', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('subgradient method', 'method of undetermined coefficients', {'weight': 0.6})
('subgradient method', 'combinatorial optimization', {'weight': 0.6})
('subgradient method', "newton's method in optimization", {'weight': 0.6})
('subgradient method', 'matrix chain multiplication', {'weight': 0.6})
('subgradient method', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('subgradient method', 'dynamic time warping', {'weight': 0.6})
('subgradient method', 'dynamic programming language', {'weight': 0.6})
('subgradient method', 'call-by-need', {'weight': 0.6})
('subgradient method', 'big-o notation', {'weight': 0.6})
('subgradient method', 'comparison of optimization software', {'weight': 0.6})
('subgradient method', 'quadratic programming', {'weight': 0.6})
('subgradient method', 'common lisp', {'weight': 0.6})
('subgradient method', 'barrier function', {'weight': 0.6})
('subgradient method', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('subgradient method', 'gradient descent', {'weight': 0.6})
('subgradient method', 'patricia selinger', {'weight': 0.6})
('subgradient method', 'discounting', {'weight': 0.6})
('subgradient method', 'ronald l. rivest', {'weight': 0.6})
('subgradient method', 'iterative method', {'weight': 0.6})
('subgradient method', 'limited-memory bfgs', {'weight': 0.6})
('subgradient method', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('subgradient method', 'longest common substring problem', {'weight': 0.6})
('subgradient method', 'clifford stein', {'weight': 0.6})
('subgradient method', 'computer chess', {'weight': 0.6})
('subgradient method', 'linear programming', {'weight': 0.6})
('subgradient method', 'bitonic tour', {'weight': 0.6})
('subgradient method', 'linear search problem', {'weight': 0.6})
('subgradient method', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('subgradient method', 'systems analysis', {'weight': 0.6})
('subgradient method', 'capital (economics)', {'weight': 0.6})
('subgradient method', 'levenshtein distance', {'weight': 0.6})
('subgradient method', 'nonlinear programming', {'weight': 0.6})
('subgradient method', 'computational complexity of mathematical operations', {'weight': 0.6})
('subgradient method', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('subgradient method', 'gradient', {'weight': 0.6})
('subgradient method', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('subgradient method', 'bulletin of the american mathematical society', {'weight': 0.6})
('subgradient method', 'u.s. english', {'weight': 0.6})
('subgradient method', 'refutation table', {'weight': 0.6})
('subgradient method', 'heuristic algorithm', {'weight': 0.6})
('subgradient method', 'successive linear programming', {'weight': 0.6})
('subgradient method', 'optimal substructure', {'weight': 0.6})
('subgradient method', 'programming language', {'weight': 0.6})
('subgradient method', 'mergesort', {'weight': 0.6})
('subgradient method', "dijkstra's algorithm", {'weight': 0.6})
('subgradient method', 'subgradient method', {'weight': 1})
('subgradient method', 'call-by-name', {'weight': 0.6})
('subgradient method', 'longest increasing subsequence problem', {'weight': 0.6})
('subgradient method', 'edward prescott', {'weight': 0.6})
('subgradient method', 'exponential time', {'weight': 0.6})
('subgradient method', 'principle of optimality', {'weight': 0.6})
('subgradient method', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('subgradient method', 'mathematical game', {'weight': 0.6})
('subgradient method', 'nancy stokey', {'weight': 0.6})
('subgradient method', 'approximation algorithm', {'weight': 0.6})
('subgradient method', 'discrete-time', {'weight': 0.6})
('subgradient method', 'cyk algorithm', {'weight': 0.6})
('subgradient method', 'markov decision process', {'weight': 0.6})
('subgradient method', "powell's method", {'weight': 0.6})
('subgradient method', 'wolfe conditions', {'weight': 0.6})
('subgradient method', 'convexity in economics', {'weight': 0.6})
('subgradient method', 'transposition table', {'weight': 0.6})
('subgradient method', 'economics', {'weight': 0.6})
('subgradient method', 'backward induction', {'weight': 0.6})
('subgradient method', 'golden section search', {'weight': 0.6})
('subgradient method', 'edit distance', {'weight': 0.6})
('subgradient method', 'tree structure', {'weight': 0.6})
('subgradient method', 'exchange algorithm', {'weight': 0.6})
('subgradient method', 'dover publications', {'weight': 0.6})
('subgradient method', 'seam carving', {'weight': 0.6})
('subgradient method', 'recursive least squares', {'weight': 0.6})
('subgradient method', 'metaheuristic', {'weight': 0.6})
('subgradient method', 'quasi-newton method', {'weight': 0.6})
('subgradient method', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('subgradient method', 'robert e. lucas', {'weight': 0.6})
('subgradient method', 'non-convexity (economics)', {'weight': 0.6})
('subgradient method', 'sr1 formula', {'weight': 0.6})
('subgradient method', 'mathematical reviews', {'weight': 0.6})
('subgradient method', 'puzzle', {'weight': 0.6})
('subgradient method', 'associative array', {'weight': 0.6})
('subgradient method', 'shortest path problem', {'weight': 0.6})
('subgradient method', 'dynamic algorithm', {'weight': 0.6})
('subgradient method', 'augmented lagrangian method', {'weight': 0.6})
('subgradient method', 'charles delisi', {'weight': 0.6})
('subgradient method', 'greedy algorithm', {'weight': 0.6})
('subgradient method', "karmarkar's algorithm", {'weight': 0.6})
('subgradient method', 'lattice models', {'weight': 0.6})
('subgradient method', 'utility', {'weight': 0.6})
('subgradient method', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('subgradient method', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('subgradient method', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('subgradient method', 'international standard book number', {'weight': 0.6})
('subgradient method', 'undirected graph', {'weight': 0.6})
('subgradient method', 'scheme (programming language)', {'weight': 0.6})
('subgradient method', 'rna structure', {'weight': 0.6})
('subgradient method', 'hanoi', {'weight': 0.6})
('subgradient method', 'perl', {'weight': 0.6})
('subgradient method', 'digital object identifier', {'weight': 0.6})
('subgradient method', 'sequential quadratic programming', {'weight': 0.6})
('subgradient method', "dinic's algorithm", {'weight': 0.6})
('subgradient method', 'pseudo-polynomial time', {'weight': 0.6})
('subgradient method', 'partition problem', {'weight': 0.6})
('subgradient method', 'stochastic programming', {'weight': 0.6})
('subgradient method', 'hill climbing', {'weight': 0.6})
('subgradient method', 'top-down', {'weight': 0.6})
('subgradient method', 'de boor algorithm', {'weight': 0.6})
('subgradient method', 'optimization algorithm', {'weight': 0.6})
('subgradient method', "kruskal's algorithm", {'weight': 0.6})
('subgradient method', 'jacques philippe marie binet', {'weight': 0.6})
('subgradient method', 'tabu search', {'weight': 0.6})
('subgradient method', 'divide and conquer algorithm', {'weight': 0.6})
('subgradient method', "johnson's algorithm", {'weight': 0.6})
('subgradient method', 'evolutionary algorithm', {'weight': 0.6})
('subgradient method', 'clique-width', {'weight': 0.6})
('subgradient method', 'dynamic programming', {'weight': 0.6})
('subgradient method', 'subroutine', {'weight': 0.6})
('subgradient method', 'simulated annealing', {'weight': 0.6})
('subgradient method', 'tower of hanoi', {'weight': 0.6})
('subgradient method', 'branch and bound', {'weight': 0.6})
('subgradient method', 'engineering', {'weight': 0.6})
('subgradient method', 'matroid', {'weight': 0.6})
('subgradient method', 'viterbi algorithm', {'weight': 0.6})
('subgradient method', "lemke's algorithm", {'weight': 0.6})
('subgradient method', 'simplex algorithm', {'weight': 0.6})
('subgradient method', 'local search (optimization)', {'weight': 0.6})
('subgradient method', 'hessian matrix', {'weight': 0.6})
('subgradient method', 'ibm system r', {'weight': 0.6})
('subgradient method', 'penalty method', {'weight': 0.6})
('subgradient method', 'prolog', {'weight': 0.6})
('subgradient method', 'time-invariant system', {'weight': 0.6})
('subgradient method', 'criss-cross algorithm', {'weight': 0.6})
('subgradient method', 'revised simplex algorithm', {'weight': 0.6})
('subgradient method', 'the mathematical association of america', {'weight': 0.6})
('subgradient method', 'line search', {'weight': 0.6})
('subgradient method', 'j (programming language)', {'weight': 0.6})
('subgradient method', 'word wrap', {'weight': 0.6})
('subgradient method', 'subset sum problem', {'weight': 0.6})
('subgradient method', 'integer programming', {'weight': 0.6})
('subgradient method', 'nucleosome', {'weight': 0.6})
('subgradient method', 'earley algorithm', {'weight': 0.6})
('subgradient method', 'referential transparency (computer science)', {'weight': 0.6})
('subgradient method', 'recursion', {'weight': 0.6})
('subgradient method', 'mathematica', {'weight': 0.6})
('subgradient method', 'quicksort', {'weight': 0.6})
('subgradient method', 'recursion (computer science)', {'weight': 0.6})
('subgradient method', 'checkerboard', {'weight': 0.6})
('subgradient method', 'computer science', {'weight': 0.6})
('subgradient method', 'brute-force search', {'weight': 0.6})
('subgradient method', 'mathematics', {'weight': 0.6})
('subgradient method', 'depth-first search', {'weight': 0.6})
('subgradient method', 'top-down and bottom-up design', {'weight': 0.6})
('subgradient method', 'correspondence problem', {'weight': 0.6})
('subgradient method', 'transcription factor', {'weight': 0.6})
('subgradient method', 'tree decomposition', {'weight': 0.6})
('subgradient method', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('subgradient method', 'structural alignment', {'weight': 0.6})
('subgradient method', 'local convergence', {'weight': 0.6})
('subgradient method', 'knapsack problem', {'weight': 0.6})
('subgradient method', 'graph algorithm', {'weight': 0.6})
('subgradient method', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('subgradient method', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('subgradient method', 'hidden markov model', {'weight': 0.6})
('subgradient method', 'string (computer science)', {'weight': 0.6})
('subgradient method', 'bioinformatics', {'weight': 0.6})
('subgradient method', 'genetics', {'weight': 0.6})
('subgradient method', 'mathematical optimization', {'weight': 0.6})
('subgradient method', 'artificial neural networks', {'weight': 0.6})
('subgradient method', 'introduction to algorithms', {'weight': 0.6})
('subgradient method', 'thomas h. cormen', {'weight': 0.6})
('subgradient method', 'music information retrieval', {'weight': 0.6})
('subgradient method', 'beat (music)', {'weight': 0.6})
('subgradient method', 'longest common subsequence problem', {'weight': 0.6})
('subgradient method', 'convex minimization', {'weight': 0.6})
('subgradient method', 'successive parabolic interpolation', {'weight': 0.6})
('subgradient method', 'fibonacci sequence', {'weight': 0.6})
('subgradient method', 'maximum subarray problem', {'weight': 0.6})
('subgradient method', 'convex optimization', {'weight': 0.6})
('subgradient method', 'memoization', {'weight': 0.6})
('subgradient method', 'richard bellman', {'weight': 0.6})
('subgradient method', 'exponential growth', {'weight': 0.6})
('subgradient method', 'charles e. leiserson', {'weight': 0.6})
('subgradient method', 'charles erwin wilson', {'weight': 0.6})
('subgradient method', 'interval scheduling', {'weight': 0.6})
('subgradient method', 'chart parser', {'weight': 0.6})
('subgradient method', 'travelling salesman problem', {'weight': 0.6})
('subgradient method', 'bellman equation', {'weight': 0.6})
('mathematical optimization', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('mathematical optimization', 'photoshop', {'weight': 0.6})
('mathematical optimization', 'sequence alignment', {'weight': 0.6})
('mathematical optimization', 'flow network', {'weight': 0.6})
('mathematical optimization', 'ellipsoid method', {'weight': 0.6})
('mathematical optimization', 'chain matrix multiplication', {'weight': 0.6})
('mathematical optimization', 'ieee', {'weight': 0.6})
('mathematical optimization', 'backtracking', {'weight': 0.6})
('mathematical optimization', 'nonlinear conjugate gradient method', {'weight': 0.6})
('mathematical optimization', 'dynamic problem', {'weight': 0.6})
('mathematical optimization', 'trust region', {'weight': 0.6})
('mathematical optimization', 'function (mathematics)', {'weight': 0.6})
('mathematical optimization', 'minimum spanning tree', {'weight': 0.6})
('mathematical optimization', 'mathematical optimization software', {'weight': 0.7})
('mathematical optimization', 'context-free grammar', {'weight': 0.6})
('mathematical optimization', 'branch and cut', {'weight': 0.6})
('mathematical optimization', 'state variable', {'weight': 0.6})
('mathematical optimization', 'least squares', {'weight': 0.7})
('mathematical optimization', 'treewidth', {'weight': 0.6})
('mathematical optimization', 'overlapping subproblem', {'weight': 0.6})
('mathematical optimization', 'taylor & francis', {'weight': 0.6})
('mathematical optimization', 'cutting-plane method', {'weight': 0.6})
('mathematical optimization', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('mathematical optimization', 'method of undetermined coefficients', {'weight': 0.6})
('mathematical optimization', 'combinatorial optimization', {'weight': 0.6})
('mathematical optimization', "newton's method in optimization", {'weight': 0.6})
('mathematical optimization', 'matrix chain multiplication', {'weight': 0.6})
('mathematical optimization', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('mathematical optimization', 'dynamic time warping', {'weight': 0.6})
('mathematical optimization', 'dynamic programming language', {'weight': 0.6})
('mathematical optimization', 'call-by-need', {'weight': 0.6})
('mathematical optimization', 'big-o notation', {'weight': 0.6})
('mathematical optimization', 'comparison of optimization software', {'weight': 0.6})
('mathematical optimization', 'quadratic programming', {'weight': 0.6})
('mathematical optimization', 'common lisp', {'weight': 0.6})
('mathematical optimization', 'barrier function', {'weight': 0.6})
('mathematical optimization', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('mathematical optimization', 'gradient descent', {'weight': 0.6})
('mathematical optimization', 'patricia selinger', {'weight': 0.6})
('mathematical optimization', 'discounting', {'weight': 0.6})
('mathematical optimization', 'ronald l. rivest', {'weight': 0.6})
('mathematical optimization', 'iterative method', {'weight': 0.6})
('mathematical optimization', 'important publications in optimization', {'weight': 0.7})
('mathematical optimization', 'limited-memory bfgs', {'weight': 0.6})
('mathematical optimization', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('mathematical optimization', 'longest common substring problem', {'weight': 0.6})
('mathematical optimization', 'clifford stein', {'weight': 0.6})
('mathematical optimization', 'computer chess', {'weight': 0.6})
('mathematical optimization', 'linear programming', {'weight': 0.6})
('mathematical optimization', 'bitonic tour', {'weight': 0.6})
('mathematical optimization', 'linear search problem', {'weight': 0.6})
('mathematical optimization', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('mathematical optimization', 'systems analysis', {'weight': 0.6})
('mathematical optimization', 'capital (economics)', {'weight': 0.6})
('mathematical optimization', 'levenshtein distance', {'weight': 0.6})
('mathematical optimization', 'nonlinear programming', {'weight': 0.6})
('mathematical optimization', 'computational complexity of mathematical operations', {'weight': 0.6})
('mathematical optimization', 'process optimization', {'weight': 0.7})
('mathematical optimization', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('mathematical optimization', 'gradient', {'weight': 0.6})
('mathematical optimization', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('mathematical optimization', 'mathematical optimization algorithms', {'weight': 0.7})
('mathematical optimization', 'bulletin of the american mathematical society', {'weight': 0.6})
('mathematical optimization', 'u.s. english', {'weight': 0.6})
('mathematical optimization', 'refutation table', {'weight': 0.6})
('mathematical optimization', 'heuristic algorithm', {'weight': 0.6})
('mathematical optimization', 'successive linear programming', {'weight': 0.6})
('mathematical optimization', 'optimal substructure', {'weight': 0.6})
('mathematical optimization', 'programming language', {'weight': 0.6})
('mathematical optimization', 'mergesort', {'weight': 0.6})
('mathematical optimization', "dijkstra's algorithm", {'weight': 0.6})
('mathematical optimization', 'subgradient method', {'weight': 0.6})
('mathematical optimization', 'call-by-name', {'weight': 0.6})
('mathematical optimization', 'longest increasing subsequence problem', {'weight': 0.6})
('mathematical optimization', 'edward prescott', {'weight': 0.6})
('mathematical optimization', 'exponential time', {'weight': 0.6})
('mathematical optimization', 'principle of optimality', {'weight': 0.6})
('mathematical optimization', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('mathematical optimization', 'mathematical game', {'weight': 0.6})
('mathematical optimization', 'nancy stokey', {'weight': 0.6})
('mathematical optimization', 'approximation algorithm', {'weight': 0.6})
('mathematical optimization', 'discrete-time', {'weight': 0.6})
('mathematical optimization', 'cyk algorithm', {'weight': 0.6})
('mathematical optimization', 'markov decision process', {'weight': 0.6})
('mathematical optimization', "powell's method", {'weight': 0.6})
('mathematical optimization', 'wolfe conditions', {'weight': 0.6})
('mathematical optimization', 'convexity in economics', {'weight': 0.6})
('mathematical optimization', 'transposition table', {'weight': 0.6})
('mathematical optimization', 'economics', {'weight': 0.6})
('mathematical optimization', 'backward induction', {'weight': 0.6})
('mathematical optimization', 'golden section search', {'weight': 0.6})
('mathematical optimization', 'edit distance', {'weight': 0.6})
('mathematical optimization', 'tree structure', {'weight': 0.6})
('mathematical optimization', 'exchange algorithm', {'weight': 0.6})
('mathematical optimization', 'dover publications', {'weight': 0.6})
('mathematical optimization', 'seam carving', {'weight': 0.6})
('mathematical optimization', 'recursive least squares', {'weight': 0.6})
('mathematical optimization', 'metaheuristic', {'weight': 0.6})
('mathematical optimization', 'quasi-newton method', {'weight': 0.6})
('mathematical optimization', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('mathematical optimization', 'robert e. lucas', {'weight': 0.6})
('mathematical optimization', 'non-convexity (economics)', {'weight': 0.6})
('mathematical optimization', 'sr1 formula', {'weight': 0.6})
('mathematical optimization', 'mathematical reviews', {'weight': 0.6})
('mathematical optimization', 'puzzle', {'weight': 0.6})
('mathematical optimization', 'associative array', {'weight': 0.6})
('mathematical optimization', 'shortest path problem', {'weight': 0.6})
('mathematical optimization', 'dynamic algorithm', {'weight': 0.6})
('mathematical optimization', 'augmented lagrangian method', {'weight': 0.6})
('mathematical optimization', 'charles delisi', {'weight': 0.6})
('mathematical optimization', 'greedy algorithm', {'weight': 0.6})
('mathematical optimization', "karmarkar's algorithm", {'weight': 0.6})
('mathematical optimization', 'lattice models', {'weight': 0.6})
('mathematical optimization', 'utility', {'weight': 0.6})
('mathematical optimization', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('mathematical optimization', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('mathematical optimization', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('mathematical optimization', 'international standard book number', {'weight': 0.6})
('mathematical optimization', 'undirected graph', {'weight': 0.6})
('mathematical optimization', 'scheme (programming language)', {'weight': 0.6})
('mathematical optimization', 'rna structure', {'weight': 0.6})
('mathematical optimization', 'hanoi', {'weight': 0.6})
('mathematical optimization', 'perl', {'weight': 0.6})
('mathematical optimization', 'digital object identifier', {'weight': 0.6})
('mathematical optimization', 'sequential quadratic programming', {'weight': 0.6})
('mathematical optimization', "dinic's algorithm", {'weight': 0.6})
('mathematical optimization', 'pseudo-polynomial time', {'weight': 0.6})
('mathematical optimization', 'partition problem', {'weight': 0.6})
('mathematical optimization', 'operations research', {'weight': 0.5})
('mathematical optimization', 'mathematical optimization society', {'weight': 0.7})
('mathematical optimization', 'hill climbing', {'weight': 0.6})
('mathematical optimization', 'top-down', {'weight': 0.6})
('mathematical optimization', 'de boor algorithm', {'weight': 0.6})
('mathematical optimization', 'optimization algorithm', {'weight': 0.6})
('mathematical optimization', "kruskal's algorithm", {'weight': 0.6})
('mathematical optimization', 'jacques philippe marie binet', {'weight': 0.6})
('mathematical optimization', 'tabu search', {'weight': 0.6})
('mathematical optimization', 'divide and conquer algorithm', {'weight': 0.6})
('mathematical optimization', "johnson's algorithm", {'weight': 0.6})
('mathematical optimization', 'variational calculus', {'weight': 0.7})
('mathematical optimization', 'evolutionary algorithm', {'weight': 0.6})
('mathematical optimization', 'clique-width', {'weight': 0.6})
('mathematical optimization', 'dynamic programming', {'weight': 0.6})
('mathematical optimization', 'subroutine', {'weight': 0.6})
('mathematical optimization', 'simulated annealing', {'weight': 0.6})
('mathematical optimization', 'tower of hanoi', {'weight': 0.6})
('mathematical optimization', 'branch and bound', {'weight': 0.6})
('mathematical optimization', 'engineering', {'weight': 0.6})
('mathematical optimization', 'matroid', {'weight': 0.6})
('mathematical optimization', 'viterbi algorithm', {'weight': 0.6})
('mathematical optimization', "lemke's algorithm", {'weight': 0.6})
('mathematical optimization', 'simplex algorithm', {'weight': 0.6})
('mathematical optimization', 'stochastic programming', {'weight': 0.6})
('mathematical optimization', 'hessian matrix', {'weight': 0.6})
('mathematical optimization', 'ibm system r', {'weight': 0.6})
('mathematical optimization', 'penalty method', {'weight': 0.6})
('mathematical optimization', 'prolog', {'weight': 0.6})
('mathematical optimization', 'time-invariant system', {'weight': 0.6})
('mathematical optimization', 'criss-cross algorithm', {'weight': 0.6})
('mathematical optimization', 'revised simplex algorithm', {'weight': 0.6})
('mathematical optimization', 'the mathematical association of america', {'weight': 0.6})
('mathematical optimization', 'line search', {'weight': 0.6})
('mathematical optimization', 'j (programming language)', {'weight': 0.6})
('mathematical optimization', 'word wrap', {'weight': 0.6})
('mathematical optimization', 'subset sum problem', {'weight': 0.6})
('mathematical optimization', 'integer programming', {'weight': 0.6})
('mathematical optimization', 'nucleosome', {'weight': 0.6})
('mathematical optimization', 'earley algorithm', {'weight': 0.6})
('mathematical optimization', 'referential transparency (computer science)', {'weight': 0.6})
('mathematical optimization', 'goal programming', {'weight': 0.7})
('mathematical optimization', 'recursion', {'weight': 0.6})
('mathematical optimization', 'mathematica', {'weight': 0.6})
('mathematical optimization', 'quicksort', {'weight': 0.6})
('mathematical optimization', 'recursion (computer science)', {'weight': 0.6})
('mathematical optimization', 'checkerboard', {'weight': 0.6})
('mathematical optimization', 'computer science', {'weight': 0.6})
('mathematical optimization', 'brute-force search', {'weight': 0.6})
('mathematical optimization', 'mathematics', {'weight': 0.6})
('mathematical optimization', 'depth-first search', {'weight': 0.6})
('mathematical optimization', 'top-down and bottom-up design', {'weight': 0.6})
('mathematical optimization', 'correspondence problem', {'weight': 0.6})
('mathematical optimization', 'transcription factor', {'weight': 0.6})
('mathematical optimization', 'tree decomposition', {'weight': 0.6})
('mathematical optimization', 'curve fitting', {'weight': 0.7})
('mathematical optimization', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('mathematical optimization', 'structural alignment', {'weight': 0.6})
('mathematical optimization', 'local convergence', {'weight': 0.6})
('mathematical optimization', 'knapsack problem', {'weight': 0.6})
('mathematical optimization', 'graph algorithm', {'weight': 0.6})
('mathematical optimization', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('mathematical optimization', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('mathematical optimization', 'hidden markov model', {'weight': 0.6})
('mathematical optimization', 'string (computer science)', {'weight': 0.6})
('mathematical optimization', 'bioinformatics', {'weight': 0.6})
('mathematical optimization', 'genetics', {'weight': 0.6})
('mathematical optimization', 'mathematical optimization', {'weight': 1})
('mathematical optimization', 'local search (optimization)', {'weight': 0.6})
('mathematical optimization', 'artificial neural networks', {'weight': 0.6})
('mathematical optimization', 'introduction to algorithms', {'weight': 0.6})
('mathematical optimization', 'thomas h. cormen', {'weight': 0.6})
('mathematical optimization', 'brachistochrone', {'weight': 0.7})
('mathematical optimization', 'music information retrieval', {'weight': 0.6})
('mathematical optimization', 'beat (music)', {'weight': 0.6})
('mathematical optimization', 'longest common subsequence problem', {'weight': 0.6})
('mathematical optimization', 'convex minimization', {'weight': 0.6})
('mathematical optimization', 'successive parabolic interpolation', {'weight': 0.6})
('mathematical optimization', 'fibonacci sequence', {'weight': 0.6})
('mathematical optimization', 'maximum subarray problem', {'weight': 0.6})
('mathematical optimization', 'convex optimization', {'weight': 0.6})
('mathematical optimization', 'memoization', {'weight': 0.6})
('mathematical optimization', 'richard bellman', {'weight': 0.6})
('mathematical optimization', 'exponential growth', {'weight': 0.6})
('mathematical optimization', 'charles e. leiserson', {'weight': 0.6})
('mathematical optimization', 'charles erwin wilson', {'weight': 0.6})
('mathematical optimization', 'interval scheduling', {'weight': 0.6})
('mathematical optimization', 'chart parser', {'weight': 0.6})
('mathematical optimization', 'travelling salesman problem', {'weight': 0.6})
('mathematical optimization', 'bellman equation', {'weight': 0.6})
('fibonacci sequence', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('fibonacci sequence', 'photoshop', {'weight': 0.6})
('fibonacci sequence', 'sequence alignment', {'weight': 0.6})
('fibonacci sequence', 'flow network', {'weight': 0.6})
('fibonacci sequence', 'ellipsoid method', {'weight': 0.6})
('fibonacci sequence', 'chain matrix multiplication', {'weight': 0.6})
('fibonacci sequence', 'ieee', {'weight': 0.6})
('fibonacci sequence', 'backtracking', {'weight': 0.6})
('fibonacci sequence', 'nonlinear conjugate gradient method', {'weight': 0.6})
('fibonacci sequence', 'dynamic problem', {'weight': 0.6})
('fibonacci sequence', 'trust region', {'weight': 0.6})
('fibonacci sequence', 'function (mathematics)', {'weight': 0.6})
('fibonacci sequence', 'minimum spanning tree', {'weight': 0.6})
('fibonacci sequence', 'context-free grammar', {'weight': 0.6})
('fibonacci sequence', 'branch and cut', {'weight': 0.6})
('fibonacci sequence', 'state variable', {'weight': 0.6})
('fibonacci sequence', 'treewidth', {'weight': 0.6})
('fibonacci sequence', 'hylomorphism (computer science)', {'weight': 0.7})
('fibonacci sequence', 'engel expansion', {'weight': 0.7})
('fibonacci sequence', 'overlapping subproblem', {'weight': 0.6})
('fibonacci sequence', 'taylor & francis', {'weight': 0.6})
('fibonacci sequence', 'cutting-plane method', {'weight': 0.6})
('fibonacci sequence', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('fibonacci sequence', 'method of undetermined coefficients', {'weight': 0.6})
('fibonacci sequence', 'combinatorial optimization', {'weight': 0.6})
('fibonacci sequence', "newton's method in optimization", {'weight': 0.6})
('fibonacci sequence', 'matrix chain multiplication', {'weight': 0.6})
('fibonacci sequence', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('fibonacci sequence', 'dynamic time warping', {'weight': 0.6})
('fibonacci sequence', 'dynamic programming language', {'weight': 0.6})
('fibonacci sequence', 'call-by-need', {'weight': 0.6})
('fibonacci sequence', 'big-o notation', {'weight': 0.6})
('fibonacci sequence', 'collatz conjecture', {'weight': 0.7})
('fibonacci sequence', 'comparison of optimization software', {'weight': 0.6})
('fibonacci sequence', 'quadratic programming', {'weight': 0.6})
('fibonacci sequence', 'common lisp', {'weight': 0.6})
('fibonacci sequence', 'barrier function', {'weight': 0.6})
('fibonacci sequence', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('fibonacci sequence', 'gradient descent', {'weight': 0.6})
('fibonacci sequence', 'patricia selinger', {'weight': 0.6})
('fibonacci sequence', 'discounting', {'weight': 0.6})
('fibonacci sequence', 'ronald l. rivest', {'weight': 0.6})
('fibonacci sequence', 'iterative method', {'weight': 0.6})
('fibonacci sequence', 'limited-memory bfgs', {'weight': 0.6})
('fibonacci sequence', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('fibonacci sequence', 'longest common substring problem', {'weight': 0.6})
('fibonacci sequence', 'clifford stein', {'weight': 0.6})
('fibonacci sequence', 'helicoid', {'weight': 0.7})
('fibonacci sequence', 'computer chess', {'weight': 0.6})
('fibonacci sequence', 'linear programming', {'weight': 0.6})
('fibonacci sequence', 'bitonic tour', {'weight': 0.6})
('fibonacci sequence', 'linear search problem', {'weight': 0.6})
('fibonacci sequence', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('fibonacci sequence', 'systems analysis', {'weight': 0.6})
('fibonacci sequence', 'capital (economics)', {'weight': 0.6})
('fibonacci sequence', 'levenshtein distance', {'weight': 0.6})
('fibonacci sequence', 'nonlinear programming', {'weight': 0.6})
('fibonacci sequence', 'fibonacci numbers', {'weight': 0.5})
('fibonacci sequence', 'computational complexity of mathematical operations', {'weight': 0.6})
('fibonacci sequence', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('fibonacci sequence', 'gradient', {'weight': 0.6})
('fibonacci sequence', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('fibonacci sequence', 'bulletin of the american mathematical society', {'weight': 0.6})
('fibonacci sequence', 'u.s. english', {'weight': 0.6})
('fibonacci sequence', 'refutation table', {'weight': 0.6})
('fibonacci sequence', 'heuristic algorithm', {'weight': 0.6})
('fibonacci sequence', 'successive linear programming', {'weight': 0.6})
('fibonacci sequence', 'optimal substructure', {'weight': 0.6})
('fibonacci sequence', 'programming language', {'weight': 0.6})
('fibonacci sequence', 'mergesort', {'weight': 0.6})
('fibonacci sequence', "dijkstra's algorithm", {'weight': 0.6})
('fibonacci sequence', 'subgradient method', {'weight': 0.6})
('fibonacci sequence', 'call-by-name', {'weight': 0.6})
('fibonacci sequence', 'longest increasing subsequence problem', {'weight': 0.6})
('fibonacci sequence', 'edward prescott', {'weight': 0.6})
('fibonacci sequence', 'exponential time', {'weight': 0.6})
('fibonacci sequence', 'principle of optimality', {'weight': 0.6})
('fibonacci sequence', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('fibonacci sequence', 'mathematical game', {'weight': 0.6})
('fibonacci sequence', 'nancy stokey', {'weight': 0.6})
('fibonacci sequence', 'approximation algorithm', {'weight': 0.6})
('fibonacci sequence', 'discrete-time', {'weight': 0.6})
('fibonacci sequence', 'cyk algorithm', {'weight': 0.6})
('fibonacci sequence', 'markov decision process', {'weight': 0.6})
('fibonacci sequence', "powell's method", {'weight': 0.6})
('fibonacci sequence', 'wolfe conditions', {'weight': 0.6})
('fibonacci sequence', 'convexity in economics', {'weight': 0.6})
('fibonacci sequence', 'transposition table', {'weight': 0.6})
('fibonacci sequence', 'economics', {'weight': 0.6})
('fibonacci sequence', 'backward induction', {'weight': 0.6})
('fibonacci sequence', 'golden section search', {'weight': 0.6})
('fibonacci sequence', 'edit distance', {'weight': 0.6})
('fibonacci sequence', 'tree structure', {'weight': 0.6})
('fibonacci sequence', 'exchange algorithm', {'weight': 0.6})
('fibonacci sequence', 'dover publications', {'weight': 0.6})
('fibonacci sequence', 'seam carving', {'weight': 0.6})
('fibonacci sequence', 'recursive least squares', {'weight': 0.6})
('fibonacci sequence', 'metaheuristic', {'weight': 0.6})
('fibonacci sequence', 'quasi-newton method', {'weight': 0.6})
('fibonacci sequence', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('fibonacci sequence', 'robert e. lucas', {'weight': 0.6})
('fibonacci sequence', 'non-convexity (economics)', {'weight': 0.6})
('fibonacci sequence', 'practical number', {'weight': 0.7})
('fibonacci sequence', 'sr1 formula', {'weight': 0.6})
('fibonacci sequence', 'mathematical reviews', {'weight': 0.6})
('fibonacci sequence', 'puzzle', {'weight': 0.6})
('fibonacci sequence', 'associative array', {'weight': 0.6})
('fibonacci sequence', 'fibonacci word', {'weight': 0.7})
('fibonacci sequence', 'shortest path problem', {'weight': 0.6})
('fibonacci sequence', 'dynamic algorithm', {'weight': 0.6})
('fibonacci sequence', 'elliott wave principle', {'weight': 0.7})
('fibonacci sequence', 'augmented lagrangian method', {'weight': 0.6})
('fibonacci sequence', 'charles delisi', {'weight': 0.6})
('fibonacci sequence', 'greedy algorithm', {'weight': 0.6})
('fibonacci sequence', "karmarkar's algorithm", {'weight': 0.6})
('fibonacci sequence', 'lattice models', {'weight': 0.6})
('fibonacci sequence', 'utility', {'weight': 0.6})
('fibonacci sequence', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('fibonacci sequence', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('fibonacci sequence', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('fibonacci sequence', 'international standard book number', {'weight': 0.6})
('fibonacci sequence', 'undirected graph', {'weight': 0.6})
('fibonacci sequence', 'scheme (programming language)', {'weight': 0.6})
('fibonacci sequence', 'rna structure', {'weight': 0.6})
('fibonacci sequence', 'hanoi', {'weight': 0.6})
('fibonacci sequence', 'perl', {'weight': 0.6})
('fibonacci sequence', 'digital object identifier', {'weight': 0.6})
('fibonacci sequence', 'sequential quadratic programming', {'weight': 0.6})
('fibonacci sequence', 'the fibonacci association', {'weight': 0.7})
('fibonacci sequence', "dinic's algorithm", {'weight': 0.6})
('fibonacci sequence', 'pseudo-polynomial time', {'weight': 0.6})
('fibonacci sequence', 'partition problem', {'weight': 0.6})
('fibonacci sequence', 'stochastic programming', {'weight': 0.6})
('fibonacci sequence', 'hill climbing', {'weight': 0.6})
('fibonacci sequence', 'top-down', {'weight': 0.6})
('fibonacci sequence', 'de boor algorithm', {'weight': 0.6})
('fibonacci sequence', 'optimization algorithm', {'weight': 0.6})
('fibonacci sequence', "kruskal's algorithm", {'weight': 0.6})
('fibonacci sequence', 'jacques philippe marie binet', {'weight': 0.6})
('fibonacci sequence', 'tabu search', {'weight': 0.6})
('fibonacci sequence', 'divide and conquer algorithm', {'weight': 0.6})
('fibonacci sequence', "johnson's algorithm", {'weight': 0.6})
('fibonacci sequence', 'evolutionary algorithm', {'weight': 0.6})
('fibonacci sequence', 'clique-width', {'weight': 0.6})
('fibonacci sequence', 'dynamic programming', {'weight': 0.6})
('fibonacci sequence', 'subroutine', {'weight': 0.6})
('fibonacci sequence', 'simulated annealing', {'weight': 0.6})
('fibonacci sequence', 'tower of hanoi', {'weight': 0.6})
('fibonacci sequence', 'branch and bound', {'weight': 0.6})
('fibonacci sequence', 'engineering', {'weight': 0.6})
('fibonacci sequence', 'matroid', {'weight': 0.6})
('fibonacci sequence', 'viterbi algorithm', {'weight': 0.6})
('fibonacci sequence', "lemke's algorithm", {'weight': 0.6})
('fibonacci sequence', 'simplex algorithm', {'weight': 0.6})
('fibonacci sequence', 'local search (optimization)', {'weight': 0.6})
('fibonacci sequence', 'hessian matrix', {'weight': 0.6})
('fibonacci sequence', 'verner emil hoggatt, jr.', {'weight': 0.7})
('fibonacci sequence', 'ibm system r', {'weight': 0.6})
('fibonacci sequence', 'penalty method', {'weight': 0.6})
('fibonacci sequence', 'prolog', {'weight': 0.6})
('fibonacci sequence', 'time-invariant system', {'weight': 0.6})
('fibonacci sequence', 'criss-cross algorithm', {'weight': 0.6})
('fibonacci sequence', 'revised simplex algorithm', {'weight': 0.6})
('fibonacci sequence', 'the mathematical association of america', {'weight': 0.6})
('fibonacci sequence', 'line search', {'weight': 0.6})
('fibonacci sequence', 'j (programming language)', {'weight': 0.6})
('fibonacci sequence', 'word wrap', {'weight': 0.6})
('fibonacci sequence', 'subset sum problem', {'weight': 0.6})
('fibonacci sequence', 'integer programming', {'weight': 0.6})
('fibonacci sequence', 'nucleosome', {'weight': 0.6})
('fibonacci sequence', 'earley algorithm', {'weight': 0.6})
('fibonacci sequence', 'referential transparency (computer science)', {'weight': 0.6})
('fibonacci sequence', 'recursion', {'weight': 0.6})
('fibonacci sequence', 'mathematica', {'weight': 0.6})
('fibonacci sequence', 'quicksort', {'weight': 0.6})
('fibonacci sequence', 'recursion (computer science)', {'weight': 0.6})
('fibonacci sequence', 'checkerboard', {'weight': 0.6})
('fibonacci sequence', 'computer science', {'weight': 0.6})
('fibonacci sequence', 'brute-force search', {'weight': 0.6})
('fibonacci sequence', 'mathematics', {'weight': 0.6})
('fibonacci sequence', 'depth-first search', {'weight': 0.6})
('fibonacci sequence', 'top-down and bottom-up design', {'weight': 0.6})
('fibonacci sequence', 'correspondence problem', {'weight': 0.6})
('fibonacci sequence', 'transcription factor', {'weight': 0.6})
('fibonacci sequence', 'tree decomposition', {'weight': 0.6})
('fibonacci sequence', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('fibonacci sequence', 'structural alignment', {'weight': 0.6})
('fibonacci sequence', 'local convergence', {'weight': 0.6})
('fibonacci sequence', 'knapsack problem', {'weight': 0.6})
('fibonacci sequence', 'graph algorithm', {'weight': 0.6})
('fibonacci sequence', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('fibonacci sequence', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('fibonacci sequence', 'hidden markov model', {'weight': 0.6})
('fibonacci sequence', 'string (computer science)', {'weight': 0.6})
('fibonacci sequence', 'bioinformatics', {'weight': 0.6})
('fibonacci sequence', 'genetics', {'weight': 0.6})
('fibonacci sequence', 'mathematical optimization', {'weight': 0.6})
('fibonacci sequence', 'artificial neural networks', {'weight': 0.6})
('fibonacci sequence', 'introduction to algorithms', {'weight': 0.6})
('fibonacci sequence', 'thomas h. cormen', {'weight': 0.6})
('fibonacci sequence', 'music information retrieval', {'weight': 0.6})
('fibonacci sequence', 'recursion (computer science)#fibonacci', {'weight': 0.7})
('fibonacci sequence', 'beat (music)', {'weight': 0.6})
('fibonacci sequence', 'longest common subsequence problem', {'weight': 0.6})
('fibonacci sequence', 'convex minimization', {'weight': 0.6})
('fibonacci sequence', 'successive parabolic interpolation', {'weight': 0.6})
('fibonacci sequence', 'fibonacci sequence', {'weight': 1})
('fibonacci sequence', 'maximum subarray problem', {'weight': 0.6})
('fibonacci sequence', 'convex optimization', {'weight': 0.6})
('fibonacci sequence', 'memoization', {'weight': 0.6})
('fibonacci sequence', 'richard bellman', {'weight': 0.6})
('fibonacci sequence', 'exponential growth', {'weight': 0.6})
('fibonacci sequence', 'charles e. leiserson', {'weight': 0.6})
('fibonacci sequence', 'charles erwin wilson', {'weight': 0.6})
('fibonacci sequence', 'interval scheduling', {'weight': 0.6})
('fibonacci sequence', 'chart parser', {'weight': 0.6})
('fibonacci sequence', 'travelling salesman problem', {'weight': 0.6})
('fibonacci sequence', 'bellman equation', {'weight': 0.6})
('maximum subarray problem', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('maximum subarray problem', 'photoshop', {'weight': 0.6})
('maximum subarray problem', 'sequence alignment', {'weight': 0.6})
('maximum subarray problem', 'flow network', {'weight': 0.6})
('maximum subarray problem', 'ellipsoid method', {'weight': 0.6})
('maximum subarray problem', 'chain matrix multiplication', {'weight': 0.6})
('maximum subarray problem', 'ieee', {'weight': 0.6})
('maximum subarray problem', 'backtracking', {'weight': 0.6})
('maximum subarray problem', 'nonlinear conjugate gradient method', {'weight': 0.6})
('maximum subarray problem', 'dynamic problem', {'weight': 0.6})
('maximum subarray problem', 'trust region', {'weight': 0.6})
('maximum subarray problem', 'function (mathematics)', {'weight': 0.6})
('maximum subarray problem', 'minimum spanning tree', {'weight': 0.6})
('maximum subarray problem', 'context-free grammar', {'weight': 0.6})
('maximum subarray problem', 'branch and cut', {'weight': 0.6})
('maximum subarray problem', 'state variable', {'weight': 0.6})
('maximum subarray problem', 'treewidth', {'weight': 0.6})
('maximum subarray problem', 'optimization algorithms and methods', {'weight': 0.5})
('maximum subarray problem', 'overlapping subproblem', {'weight': 0.6})
('maximum subarray problem', 'taylor & francis', {'weight': 0.6})
('maximum subarray problem', 'cutting-plane method', {'weight': 0.6})
('maximum subarray problem', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('maximum subarray problem', 'method of undetermined coefficients', {'weight': 0.6})
('maximum subarray problem', 'combinatorial optimization', {'weight': 0.6})
('maximum subarray problem', "newton's method in optimization", {'weight': 0.6})
('maximum subarray problem', 'matrix chain multiplication', {'weight': 0.6})
('maximum subarray problem', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('maximum subarray problem', 'dynamic time warping', {'weight': 0.6})
('maximum subarray problem', 'dynamic programming language', {'weight': 0.6})
('maximum subarray problem', 'call-by-need', {'weight': 0.6})
('maximum subarray problem', 'big-o notation', {'weight': 0.6})
('maximum subarray problem', 'comparison of optimization software', {'weight': 0.6})
('maximum subarray problem', 'quadratic programming', {'weight': 0.6})
('maximum subarray problem', 'common lisp', {'weight': 0.6})
('maximum subarray problem', 'barrier function', {'weight': 0.6})
('maximum subarray problem', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('maximum subarray problem', 'gradient descent', {'weight': 0.6})
('maximum subarray problem', 'patricia selinger', {'weight': 0.6})
('maximum subarray problem', 'discounting', {'weight': 0.6})
('maximum subarray problem', 'ronald l. rivest', {'weight': 0.6})
('maximum subarray problem', 'iterative method', {'weight': 0.6})
('maximum subarray problem', 'limited-memory bfgs', {'weight': 0.6})
('maximum subarray problem', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('maximum subarray problem', 'longest common substring problem', {'weight': 0.6})
('maximum subarray problem', 'clifford stein', {'weight': 0.6})
('maximum subarray problem', 'computer chess', {'weight': 0.6})
('maximum subarray problem', 'linear programming', {'weight': 0.6})
('maximum subarray problem', 'bitonic tour', {'weight': 0.6})
('maximum subarray problem', 'linear search problem', {'weight': 0.6})
('maximum subarray problem', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('maximum subarray problem', 'systems analysis', {'weight': 0.6})
('maximum subarray problem', 'capital (economics)', {'weight': 0.6})
('maximum subarray problem', 'levenshtein distance', {'weight': 0.6})
('maximum subarray problem', 'nonlinear programming', {'weight': 0.6})
('maximum subarray problem', 'computational complexity of mathematical operations', {'weight': 0.6})
('maximum subarray problem', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('maximum subarray problem', 'gradient', {'weight': 0.6})
('maximum subarray problem', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('maximum subarray problem', 'bulletin of the american mathematical society', {'weight': 0.6})
('maximum subarray problem', 'u.s. english', {'weight': 0.6})
('maximum subarray problem', 'refutation table', {'weight': 0.6})
('maximum subarray problem', 'heuristic algorithm', {'weight': 0.6})
('maximum subarray problem', 'successive linear programming', {'weight': 0.6})
('maximum subarray problem', 'optimal substructure', {'weight': 0.6})
('maximum subarray problem', 'programming language', {'weight': 0.6})
('maximum subarray problem', 'mergesort', {'weight': 0.6})
('maximum subarray problem', "dijkstra's algorithm", {'weight': 0.6})
('maximum subarray problem', 'subgradient method', {'weight': 0.6})
('maximum subarray problem', 'call-by-name', {'weight': 0.6})
('maximum subarray problem', 'longest increasing subsequence problem', {'weight': 0.6})
('maximum subarray problem', 'edward prescott', {'weight': 0.6})
('maximum subarray problem', 'exponential time', {'weight': 0.6})
('maximum subarray problem', 'principle of optimality', {'weight': 0.6})
('maximum subarray problem', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('maximum subarray problem', 'mathematical game', {'weight': 0.6})
('maximum subarray problem', 'nancy stokey', {'weight': 0.6})
('maximum subarray problem', 'approximation algorithm', {'weight': 0.6})
('maximum subarray problem', 'discrete-time', {'weight': 0.6})
('maximum subarray problem', 'cyk algorithm', {'weight': 0.6})
('maximum subarray problem', 'markov decision process', {'weight': 0.6})
('maximum subarray problem', "powell's method", {'weight': 0.6})
('maximum subarray problem', 'wolfe conditions', {'weight': 0.6})
('maximum subarray problem', 'convexity in economics', {'weight': 0.6})
('maximum subarray problem', 'transposition table', {'weight': 0.6})
('maximum subarray problem', 'economics', {'weight': 0.6})
('maximum subarray problem', 'backward induction', {'weight': 0.6})
('maximum subarray problem', 'golden section search', {'weight': 0.6})
('maximum subarray problem', 'edit distance', {'weight': 0.6})
('maximum subarray problem', 'tree structure', {'weight': 0.6})
('maximum subarray problem', 'exchange algorithm', {'weight': 0.6})
('maximum subarray problem', 'dover publications', {'weight': 0.6})
('maximum subarray problem', 'seam carving', {'weight': 0.6})
('maximum subarray problem', 'recursive least squares', {'weight': 0.6})
('maximum subarray problem', 'metaheuristic', {'weight': 0.6})
('maximum subarray problem', 'quasi-newton method', {'weight': 0.6})
('maximum subarray problem', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('maximum subarray problem', 'robert e. lucas', {'weight': 0.6})
('maximum subarray problem', 'non-convexity (economics)', {'weight': 0.6})
('maximum subarray problem', 'sr1 formula', {'weight': 0.6})
('maximum subarray problem', 'mathematical reviews', {'weight': 0.6})
('maximum subarray problem', 'puzzle', {'weight': 0.6})
('maximum subarray problem', 'associative array', {'weight': 0.6})
('maximum subarray problem', 'shortest path problem', {'weight': 0.6})
('maximum subarray problem', 'dynamic algorithm', {'weight': 0.6})
('maximum subarray problem', 'augmented lagrangian method', {'weight': 0.6})
('maximum subarray problem', 'charles delisi', {'weight': 0.6})
('maximum subarray problem', 'greedy algorithm', {'weight': 0.6})
('maximum subarray problem', "karmarkar's algorithm", {'weight': 0.6})
('maximum subarray problem', 'lattice models', {'weight': 0.6})
('maximum subarray problem', 'utility', {'weight': 0.6})
('maximum subarray problem', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('maximum subarray problem', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('maximum subarray problem', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('maximum subarray problem', 'international standard book number', {'weight': 0.6})
('maximum subarray problem', 'undirected graph', {'weight': 0.6})
('maximum subarray problem', 'scheme (programming language)', {'weight': 0.6})
('maximum subarray problem', 'rna structure', {'weight': 0.6})
('maximum subarray problem', 'hanoi', {'weight': 0.6})
('maximum subarray problem', 'perl', {'weight': 0.6})
('maximum subarray problem', 'digital object identifier', {'weight': 0.6})
('maximum subarray problem', 'sequential quadratic programming', {'weight': 0.6})
('maximum subarray problem', "dinic's algorithm", {'weight': 0.6})
('maximum subarray problem', 'pseudo-polynomial time', {'weight': 0.6})
('maximum subarray problem', 'partition problem', {'weight': 0.6})
('maximum subarray problem', 'stochastic programming', {'weight': 0.6})
('maximum subarray problem', 'hill climbing', {'weight': 0.6})
('maximum subarray problem', 'top-down', {'weight': 0.6})
('maximum subarray problem', 'de boor algorithm', {'weight': 0.6})
('maximum subarray problem', 'optimization algorithm', {'weight': 0.6})
('maximum subarray problem', "kruskal's algorithm", {'weight': 0.6})
('maximum subarray problem', 'jacques philippe marie binet', {'weight': 0.6})
('maximum subarray problem', 'tabu search', {'weight': 0.6})
('maximum subarray problem', 'divide and conquer algorithm', {'weight': 0.6})
('maximum subarray problem', "johnson's algorithm", {'weight': 0.6})
('maximum subarray problem', 'evolutionary algorithm', {'weight': 0.6})
('maximum subarray problem', 'clique-width', {'weight': 0.6})
('maximum subarray problem', 'dynamic programming', {'weight': 0.6})
('maximum subarray problem', 'subroutine', {'weight': 0.6})
('maximum subarray problem', 'simulated annealing', {'weight': 0.6})
('maximum subarray problem', 'tower of hanoi', {'weight': 0.6})
('maximum subarray problem', 'branch and bound', {'weight': 0.6})
('maximum subarray problem', 'engineering', {'weight': 0.6})
('maximum subarray problem', 'matroid', {'weight': 0.6})
('maximum subarray problem', 'viterbi algorithm', {'weight': 0.6})
('maximum subarray problem', "lemke's algorithm", {'weight': 0.6})
('maximum subarray problem', 'simplex algorithm', {'weight': 0.6})
('maximum subarray problem', 'local search (optimization)', {'weight': 0.6})
('maximum subarray problem', 'hessian matrix', {'weight': 0.6})
('maximum subarray problem', 'ibm system r', {'weight': 0.6})
('maximum subarray problem', 'penalty method', {'weight': 0.6})
('maximum subarray problem', 'prolog', {'weight': 0.6})
('maximum subarray problem', 'time-invariant system', {'weight': 0.6})
('maximum subarray problem', 'criss-cross algorithm', {'weight': 0.6})
('maximum subarray problem', 'revised simplex algorithm', {'weight': 0.6})
('maximum subarray problem', 'the mathematical association of america', {'weight': 0.6})
('maximum subarray problem', 'line search', {'weight': 0.6})
('maximum subarray problem', 'j (programming language)', {'weight': 0.6})
('maximum subarray problem', 'word wrap', {'weight': 0.6})
('maximum subarray problem', 'subset sum problem', {'weight': 0.7})
('maximum subarray problem', 'integer programming', {'weight': 0.6})
('maximum subarray problem', 'nucleosome', {'weight': 0.6})
('maximum subarray problem', 'earley algorithm', {'weight': 0.6})
('maximum subarray problem', 'referential transparency (computer science)', {'weight': 0.6})
('maximum subarray problem', 'recursion', {'weight': 0.6})
('maximum subarray problem', 'mathematica', {'weight': 0.6})
('maximum subarray problem', 'quicksort', {'weight': 0.6})
('maximum subarray problem', 'recursion (computer science)', {'weight': 0.6})
('maximum subarray problem', 'checkerboard', {'weight': 0.6})
('maximum subarray problem', 'computer science', {'weight': 0.6})
('maximum subarray problem', 'brute-force search', {'weight': 0.6})
('maximum subarray problem', 'mathematics', {'weight': 0.6})
('maximum subarray problem', 'depth-first search', {'weight': 0.6})
('maximum subarray problem', 'top-down and bottom-up design', {'weight': 0.6})
('maximum subarray problem', 'correspondence problem', {'weight': 0.6})
('maximum subarray problem', 'transcription factor', {'weight': 0.6})
('maximum subarray problem', 'tree decomposition', {'weight': 0.6})
('maximum subarray problem', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('maximum subarray problem', 'structural alignment', {'weight': 0.6})
('maximum subarray problem', 'local convergence', {'weight': 0.6})
('maximum subarray problem', 'knapsack problem', {'weight': 0.6})
('maximum subarray problem', 'graph algorithm', {'weight': 0.6})
('maximum subarray problem', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('maximum subarray problem', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('maximum subarray problem', 'hidden markov model', {'weight': 0.6})
('maximum subarray problem', 'string (computer science)', {'weight': 0.6})
('maximum subarray problem', 'bioinformatics', {'weight': 0.6})
('maximum subarray problem', 'genetics', {'weight': 0.6})
('maximum subarray problem', 'mathematical optimization', {'weight': 0.6})
('maximum subarray problem', 'artificial neural networks', {'weight': 0.6})
('maximum subarray problem', 'introduction to algorithms', {'weight': 0.6})
('maximum subarray problem', 'thomas h. cormen', {'weight': 0.6})
('maximum subarray problem', 'music information retrieval', {'weight': 0.6})
('maximum subarray problem', 'beat (music)', {'weight': 0.6})
('maximum subarray problem', 'longest common subsequence problem', {'weight': 0.6})
('maximum subarray problem', 'convex minimization', {'weight': 0.6})
('maximum subarray problem', 'successive parabolic interpolation', {'weight': 0.6})
('maximum subarray problem', 'fibonacci sequence', {'weight': 0.6})
('maximum subarray problem', 'maximum subarray problem', {'weight': 1})
('maximum subarray problem', 'convex optimization', {'weight': 0.6})
('maximum subarray problem', 'memoization', {'weight': 0.6})
('maximum subarray problem', 'richard bellman', {'weight': 0.6})
('maximum subarray problem', 'exponential growth', {'weight': 0.6})
('maximum subarray problem', 'charles e. leiserson', {'weight': 0.6})
('maximum subarray problem', 'charles erwin wilson', {'weight': 0.6})
('maximum subarray problem', 'interval scheduling', {'weight': 0.6})
('maximum subarray problem', 'chart parser', {'weight': 0.6})
('maximum subarray problem', 'travelling salesman problem', {'weight': 0.6})
('maximum subarray problem', 'bellman equation', {'weight': 0.6})
('clifford stein', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('clifford stein', 'photoshop', {'weight': 0.6})
('clifford stein', 'sequence alignment', {'weight': 0.6})
('clifford stein', 'flow network', {'weight': 0.6})
('clifford stein', 'ellipsoid method', {'weight': 0.6})
('clifford stein', 'chain matrix multiplication', {'weight': 0.6})
('clifford stein', 'ieee', {'weight': 0.6})
('clifford stein', 'backtracking', {'weight': 0.6})
('clifford stein', 'nonlinear conjugate gradient method', {'weight': 0.6})
('clifford stein', 'dynamic problem', {'weight': 0.6})
('clifford stein', 'trust region', {'weight': 0.6})
('clifford stein', 'function (mathematics)', {'weight': 0.6})
('clifford stein', 'minimum spanning tree', {'weight': 0.6})
('clifford stein', 'context-free grammar', {'weight': 0.6})
('clifford stein', 'branch and cut', {'weight': 0.6})
('clifford stein', 'state variable', {'weight': 0.6})
('clifford stein', 'treewidth', {'weight': 0.6})
('clifford stein', 'overlapping subproblem', {'weight': 0.6})
('clifford stein', 'taylor & francis', {'weight': 0.6})
('clifford stein', 'cutting-plane method', {'weight': 0.6})
('clifford stein', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('clifford stein', 'method of undetermined coefficients', {'weight': 0.6})
('clifford stein', 'combinatorial optimization', {'weight': 0.6})
('clifford stein', "newton's method in optimization", {'weight': 0.6})
('clifford stein', 'matrix chain multiplication', {'weight': 0.6})
('clifford stein', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('clifford stein', 'dynamic time warping', {'weight': 0.6})
('clifford stein', 'dynamic programming language', {'weight': 0.6})
('clifford stein', 'call-by-need', {'weight': 0.6})
('clifford stein', 'big-o notation', {'weight': 0.6})
('clifford stein', 'comparison of optimization software', {'weight': 0.6})
('clifford stein', 'quadratic programming', {'weight': 0.6})
('clifford stein', 'common lisp', {'weight': 0.6})
('clifford stein', 'barrier function', {'weight': 0.6})
('clifford stein', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('clifford stein', 'gradient descent', {'weight': 0.6})
('clifford stein', 'patricia selinger', {'weight': 0.6})
('clifford stein', 'discounting', {'weight': 0.6})
('clifford stein', 'ronald l. rivest', {'weight': 0.6})
('clifford stein', 'iterative method', {'weight': 0.6})
('clifford stein', 'limited-memory bfgs', {'weight': 0.6})
('clifford stein', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('clifford stein', 'longest common substring problem', {'weight': 0.6})
('clifford stein', 'clifford stein', {'weight': 1})
('clifford stein', 'computer chess', {'weight': 0.6})
('clifford stein', 'linear programming', {'weight': 0.6})
('clifford stein', 'bitonic tour', {'weight': 0.6})
('clifford stein', 'linear search problem', {'weight': 0.6})
('clifford stein', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('clifford stein', 'systems analysis', {'weight': 0.6})
('clifford stein', 'capital (economics)', {'weight': 0.6})
('clifford stein', 'levenshtein distance', {'weight': 0.6})
('clifford stein', 'nonlinear programming', {'weight': 0.6})
('clifford stein', 'computational complexity of mathematical operations', {'weight': 0.6})
('clifford stein', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('clifford stein', 'gradient', {'weight': 0.6})
('clifford stein', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('clifford stein', 'bulletin of the american mathematical society', {'weight': 0.6})
('clifford stein', 'u.s. english', {'weight': 0.6})
('clifford stein', 'refutation table', {'weight': 0.6})
('clifford stein', 'heuristic algorithm', {'weight': 0.6})
('clifford stein', 'successive linear programming', {'weight': 0.6})
('clifford stein', 'optimal substructure', {'weight': 0.6})
('clifford stein', 'programming language', {'weight': 0.6})
('clifford stein', 'mergesort', {'weight': 0.6})
('clifford stein', "dijkstra's algorithm", {'weight': 0.6})
('clifford stein', 'subgradient method', {'weight': 0.6})
('clifford stein', 'call-by-name', {'weight': 0.6})
('clifford stein', 'longest increasing subsequence problem', {'weight': 0.6})
('clifford stein', 'edward prescott', {'weight': 0.6})
('clifford stein', 'exponential time', {'weight': 0.6})
('clifford stein', 'principle of optimality', {'weight': 0.6})
('clifford stein', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('clifford stein', 'mathematical game', {'weight': 0.6})
('clifford stein', 'nancy stokey', {'weight': 0.6})
('clifford stein', 'approximation algorithm', {'weight': 0.6})
('clifford stein', 'discrete-time', {'weight': 0.6})
('clifford stein', 'cyk algorithm', {'weight': 0.6})
('clifford stein', 'markov decision process', {'weight': 0.6})
('clifford stein', "powell's method", {'weight': 0.6})
('clifford stein', 'wolfe conditions', {'weight': 0.6})
('clifford stein', 'convexity in economics', {'weight': 0.6})
('clifford stein', 'transposition table', {'weight': 0.6})
('clifford stein', 'economics', {'weight': 0.6})
('clifford stein', 'backward induction', {'weight': 0.6})
('clifford stein', 'golden section search', {'weight': 0.6})
('clifford stein', 'edit distance', {'weight': 0.6})
('clifford stein', 'tree structure', {'weight': 0.6})
('clifford stein', 'exchange algorithm', {'weight': 0.6})
('clifford stein', 'dover publications', {'weight': 0.6})
('clifford stein', 'seam carving', {'weight': 0.6})
('clifford stein', 'recursive least squares', {'weight': 0.6})
('clifford stein', 'metaheuristic', {'weight': 0.6})
('clifford stein', 'quasi-newton method', {'weight': 0.6})
('clifford stein', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('clifford stein', 'robert e. lucas', {'weight': 0.6})
('clifford stein', 'non-convexity (economics)', {'weight': 0.6})
('clifford stein', 'sr1 formula', {'weight': 0.6})
('clifford stein', 'mathematical reviews', {'weight': 0.6})
('clifford stein', 'puzzle', {'weight': 0.6})
('clifford stein', 'associative array', {'weight': 0.6})
('clifford stein', 'shortest path problem', {'weight': 0.6})
('clifford stein', 'dynamic algorithm', {'weight': 0.6})
('clifford stein', 'augmented lagrangian method', {'weight': 0.6})
('clifford stein', 'charles delisi', {'weight': 0.6})
('clifford stein', 'greedy algorithm', {'weight': 0.6})
('clifford stein', "karmarkar's algorithm", {'weight': 0.6})
('clifford stein', 'lattice models', {'weight': 0.6})
('clifford stein', 'utility', {'weight': 0.6})
('clifford stein', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('clifford stein', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('clifford stein', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('clifford stein', 'international standard book number', {'weight': 0.6})
('clifford stein', 'undirected graph', {'weight': 0.6})
('clifford stein', 'scheme (programming language)', {'weight': 0.6})
('clifford stein', 'rna structure', {'weight': 0.6})
('clifford stein', 'hanoi', {'weight': 0.6})
('clifford stein', 'perl', {'weight': 0.6})
('clifford stein', 'digital object identifier', {'weight': 0.6})
('clifford stein', 'sequential quadratic programming', {'weight': 0.6})
('clifford stein', "dinic's algorithm", {'weight': 0.6})
('clifford stein', 'pseudo-polynomial time', {'weight': 0.6})
('clifford stein', 'partition problem', {'weight': 0.6})
('clifford stein', 'stochastic programming', {'weight': 0.6})
('clifford stein', 'hill climbing', {'weight': 0.6})
('clifford stein', 'top-down', {'weight': 0.6})
('clifford stein', 'de boor algorithm', {'weight': 0.6})
('clifford stein', 'optimization algorithm', {'weight': 0.6})
('clifford stein', "kruskal's algorithm", {'weight': 0.6})
('clifford stein', 'jacques philippe marie binet', {'weight': 0.6})
('clifford stein', 'tabu search', {'weight': 0.6})
('clifford stein', 'divide and conquer algorithm', {'weight': 0.6})
('clifford stein', "johnson's algorithm", {'weight': 0.6})
('clifford stein', 'evolutionary algorithm', {'weight': 0.6})
('clifford stein', 'clique-width', {'weight': 0.6})
('clifford stein', 'dynamic programming', {'weight': 0.6})
('clifford stein', 'subroutine', {'weight': 0.6})
('clifford stein', 'simulated annealing', {'weight': 0.6})
('clifford stein', 'tower of hanoi', {'weight': 0.6})
('clifford stein', 'branch and bound', {'weight': 0.6})
('clifford stein', 'engineering', {'weight': 0.6})
('clifford stein', 'matroid', {'weight': 0.6})
('clifford stein', 'viterbi algorithm', {'weight': 0.6})
('clifford stein', "lemke's algorithm", {'weight': 0.6})
('clifford stein', 'simplex algorithm', {'weight': 0.6})
('clifford stein', 'local search (optimization)', {'weight': 0.6})
('clifford stein', 'hessian matrix', {'weight': 0.6})
('clifford stein', 'ibm system r', {'weight': 0.6})
('clifford stein', 'penalty method', {'weight': 0.6})
('clifford stein', 'prolog', {'weight': 0.6})
('clifford stein', 'time-invariant system', {'weight': 0.6})
('clifford stein', 'criss-cross algorithm', {'weight': 0.6})
('clifford stein', 'revised simplex algorithm', {'weight': 0.6})
('clifford stein', 'the mathematical association of america', {'weight': 0.6})
('clifford stein', 'line search', {'weight': 0.6})
('clifford stein', 'j (programming language)', {'weight': 0.6})
('clifford stein', 'word wrap', {'weight': 0.6})
('clifford stein', 'subset sum problem', {'weight': 0.6})
('clifford stein', 'integer programming', {'weight': 0.6})
('clifford stein', 'nucleosome', {'weight': 0.6})
('clifford stein', 'earley algorithm', {'weight': 0.6})
('clifford stein', 'referential transparency (computer science)', {'weight': 0.6})
('clifford stein', 'recursion', {'weight': 0.6})
('clifford stein', 'mathematica', {'weight': 0.6})
('clifford stein', 'quicksort', {'weight': 0.6})
('clifford stein', 'recursion (computer science)', {'weight': 0.6})
('clifford stein', 'checkerboard', {'weight': 0.6})
('clifford stein', 'computer science', {'weight': 0.6})
('clifford stein', 'brute-force search', {'weight': 0.6})
('clifford stein', 'mathematics', {'weight': 0.6})
('clifford stein', 'depth-first search', {'weight': 0.6})
('clifford stein', 'top-down and bottom-up design', {'weight': 0.6})
('clifford stein', 'correspondence problem', {'weight': 0.6})
('clifford stein', 'transcription factor', {'weight': 0.6})
('clifford stein', 'tree decomposition', {'weight': 0.6})
('clifford stein', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('clifford stein', 'structural alignment', {'weight': 0.6})
('clifford stein', 'local convergence', {'weight': 0.6})
('clifford stein', 'knapsack problem', {'weight': 0.6})
('clifford stein', 'graph algorithm', {'weight': 0.6})
('clifford stein', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('clifford stein', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('clifford stein', 'hidden markov model', {'weight': 0.6})
('clifford stein', 'string (computer science)', {'weight': 0.6})
('clifford stein', 'bioinformatics', {'weight': 0.6})
('clifford stein', 'genetics', {'weight': 0.6})
('clifford stein', 'mathematical optimization', {'weight': 0.6})
('clifford stein', 'artificial neural networks', {'weight': 0.6})
('clifford stein', 'introduction to algorithms', {'weight': 0.6})
('clifford stein', 'thomas h. cormen', {'weight': 0.6})
('clifford stein', 'music information retrieval', {'weight': 0.6})
('clifford stein', 'beat (music)', {'weight': 0.6})
('clifford stein', 'longest common subsequence problem', {'weight': 0.6})
('clifford stein', 'convex minimization', {'weight': 0.6})
('clifford stein', 'successive parabolic interpolation', {'weight': 0.6})
('clifford stein', 'fibonacci sequence', {'weight': 0.6})
('clifford stein', 'maximum subarray problem', {'weight': 0.6})
('clifford stein', 'convex optimization', {'weight': 0.6})
('clifford stein', 'memoization', {'weight': 0.6})
('clifford stein', 'richard bellman', {'weight': 0.6})
('clifford stein', 'exponential growth', {'weight': 0.6})
('clifford stein', 'charles e. leiserson', {'weight': 0.6})
('clifford stein', 'charles erwin wilson', {'weight': 0.6})
('clifford stein', 'interval scheduling', {'weight': 0.6})
('clifford stein', 'chart parser', {'weight': 0.6})
('clifford stein', 'travelling salesman problem', {'weight': 0.6})
('clifford stein', 'bellman equation', {'weight': 0.6})
('checkerboard', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('checkerboard', 'photoshop', {'weight': 0.6})
('checkerboard', 'sequence alignment', {'weight': 0.6})
('checkerboard', 'flow network', {'weight': 0.6})
('checkerboard', 'ellipsoid method', {'weight': 0.6})
('checkerboard', 'chain matrix multiplication', {'weight': 0.6})
('checkerboard', 'ieee', {'weight': 0.6})
('checkerboard', 'backtracking', {'weight': 0.6})
('checkerboard', 'nonlinear conjugate gradient method', {'weight': 0.6})
('checkerboard', 'dynamic problem', {'weight': 0.6})
('checkerboard', 'trust region', {'weight': 0.6})
('checkerboard', 'function (mathematics)', {'weight': 0.6})
('checkerboard', 'minimum spanning tree', {'weight': 0.6})
('checkerboard', 'context-free grammar', {'weight': 0.6})
('checkerboard', 'branch and cut', {'weight': 0.6})
('checkerboard', 'state variable', {'weight': 0.6})
('checkerboard', 'treewidth', {'weight': 0.6})
('checkerboard', 'overlapping subproblem', {'weight': 0.6})
('checkerboard', 'taylor & francis', {'weight': 0.6})
('checkerboard', 'cutting-plane method', {'weight': 0.6})
('checkerboard', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('checkerboard', 'method of undetermined coefficients', {'weight': 0.6})
('checkerboard', 'combinatorial optimization', {'weight': 0.6})
('checkerboard', "newton's method in optimization", {'weight': 0.6})
('checkerboard', 'matrix chain multiplication', {'weight': 0.6})
('checkerboard', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('checkerboard', 'dynamic time warping', {'weight': 0.6})
('checkerboard', 'dynamic programming language', {'weight': 0.6})
('checkerboard', 'call-by-need', {'weight': 0.6})
('checkerboard', 'big-o notation', {'weight': 0.6})
('checkerboard', 'comparison of optimization software', {'weight': 0.6})
('checkerboard', 'quadratic programming', {'weight': 0.6})
('checkerboard', 'common lisp', {'weight': 0.6})
('checkerboard', 'barrier function', {'weight': 0.6})
('checkerboard', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('checkerboard', 'gradient descent', {'weight': 0.6})
('checkerboard', 'patricia selinger', {'weight': 0.6})
('checkerboard', 'discounting', {'weight': 0.6})
('checkerboard', 'ronald l. rivest', {'weight': 0.6})
('checkerboard', 'iterative method', {'weight': 0.6})
('checkerboard', 'limited-memory bfgs', {'weight': 0.6})
('checkerboard', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('checkerboard', 'longest common substring problem', {'weight': 0.6})
('checkerboard', 'clifford stein', {'weight': 0.6})
('checkerboard', 'computer chess', {'weight': 0.6})
('checkerboard', 'linear programming', {'weight': 0.6})
('checkerboard', 'bitonic tour', {'weight': 0.6})
('checkerboard', 'linear search problem', {'weight': 0.6})
('checkerboard', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('checkerboard', 'systems analysis', {'weight': 0.6})
('checkerboard', 'capital (economics)', {'weight': 0.6})
('checkerboard', 'levenshtein distance', {'weight': 0.6})
('checkerboard', 'nonlinear programming', {'weight': 0.6})
('checkerboard', 'computational complexity of mathematical operations', {'weight': 0.6})
('checkerboard', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('checkerboard', 'gradient', {'weight': 0.6})
('checkerboard', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('checkerboard', 'bulletin of the american mathematical society', {'weight': 0.6})
('checkerboard', 'u.s. english', {'weight': 0.6})
('checkerboard', 'refutation table', {'weight': 0.6})
('checkerboard', 'game equipment', {'weight': 0.5})
('checkerboard', 'successive linear programming', {'weight': 0.6})
('checkerboard', 'optimal substructure', {'weight': 0.6})
('checkerboard', 'programming language', {'weight': 0.6})
('checkerboard', 'mergesort', {'weight': 0.6})
('checkerboard', "dijkstra's algorithm", {'weight': 0.6})
('checkerboard', 'subgradient method', {'weight': 0.6})
('checkerboard', 'call-by-name', {'weight': 0.6})
('checkerboard', 'longest increasing subsequence problem', {'weight': 0.6})
('checkerboard', 'edward prescott', {'weight': 0.6})
('checkerboard', 'exponential time', {'weight': 0.6})
('checkerboard', 'principle of optimality', {'weight': 0.6})
('checkerboard', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('checkerboard', 'mathematical game', {'weight': 0.6})
('checkerboard', 'nancy stokey', {'weight': 0.6})
('checkerboard', 'approximation algorithm', {'weight': 0.6})
('checkerboard', 'discrete-time', {'weight': 0.6})
('checkerboard', 'cyk algorithm', {'weight': 0.6})
('checkerboard', 'markov decision process', {'weight': 0.6})
('checkerboard', "powell's method", {'weight': 0.6})
('checkerboard', 'wolfe conditions', {'weight': 0.6})
('checkerboard', 'convexity in economics', {'weight': 0.6})
('checkerboard', 'transposition table', {'weight': 0.6})
('checkerboard', 'economics', {'weight': 0.6})
('checkerboard', 'backward induction', {'weight': 0.6})
('checkerboard', 'golden section search', {'weight': 0.6})
('checkerboard', 'edit distance', {'weight': 0.6})
('checkerboard', 'tree structure', {'weight': 0.6})
('checkerboard', 'exchange algorithm', {'weight': 0.6})
('checkerboard', 'dover publications', {'weight': 0.6})
('checkerboard', 'seam carving', {'weight': 0.6})
('checkerboard', 'recursive least squares', {'weight': 0.6})
('checkerboard', 'metaheuristic', {'weight': 0.6})
('checkerboard', 'quasi-newton method', {'weight': 0.6})
('checkerboard', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('checkerboard', 'robert e. lucas', {'weight': 0.6})
('checkerboard', 'non-convexity (economics)', {'weight': 0.6})
('checkerboard', 'board game gameplay and terminology', {'weight': 0.5})
('checkerboard', 'sr1 formula', {'weight': 0.6})
('checkerboard', 'mathematical reviews', {'weight': 0.6})
('checkerboard', 'puzzle', {'weight': 0.6})
('checkerboard', 'associative array', {'weight': 0.6})
('checkerboard', 'shortest path problem', {'weight': 0.6})
('checkerboard', 'dynamic algorithm', {'weight': 0.6})
('checkerboard', 'augmented lagrangian method', {'weight': 0.6})
('checkerboard', 'charles delisi', {'weight': 0.6})
('checkerboard', 'greedy algorithm', {'weight': 0.6})
('checkerboard', "karmarkar's algorithm", {'weight': 0.6})
('checkerboard', 'lattice models', {'weight': 0.6})
('checkerboard', 'utility', {'weight': 0.6})
('checkerboard', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('checkerboard', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('checkerboard', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('checkerboard', 'international standard book number', {'weight': 0.6})
('checkerboard', 'undirected graph', {'weight': 0.6})
('checkerboard', 'scheme (programming language)', {'weight': 0.6})
('checkerboard', 'rna structure', {'weight': 0.6})
('checkerboard', 'hanoi', {'weight': 0.6})
('checkerboard', 'perl', {'weight': 0.6})
('checkerboard', 'digital object identifier', {'weight': 0.6})
('checkerboard', 'sequential quadratic programming', {'weight': 0.6})
('checkerboard', "dinic's algorithm", {'weight': 0.6})
('checkerboard', 'pseudo-polynomial time', {'weight': 0.6})
('checkerboard', 'partition problem', {'weight': 0.6})
('checkerboard', 'stochastic programming', {'weight': 0.6})
('checkerboard', 'hill climbing', {'weight': 0.6})
('checkerboard', 'top-down', {'weight': 0.6})
('checkerboard', 'de boor algorithm', {'weight': 0.6})
('checkerboard', 'optimization algorithm', {'weight': 0.6})
('checkerboard', "kruskal's algorithm", {'weight': 0.6})
('checkerboard', 'jacques philippe marie binet', {'weight': 0.6})
('checkerboard', 'tabu search', {'weight': 0.6})
('checkerboard', 'divide and conquer algorithm', {'weight': 0.6})
('checkerboard', "johnson's algorithm", {'weight': 0.6})
('checkerboard', 'evolutionary algorithm', {'weight': 0.6})
('checkerboard', 'clique-width', {'weight': 0.6})
('checkerboard', 'dynamic programming', {'weight': 0.6})
('checkerboard', 'subroutine', {'weight': 0.6})
('checkerboard', 'line search', {'weight': 0.6})
('checkerboard', 'simulated annealing', {'weight': 0.6})
('checkerboard', 'tower of hanoi', {'weight': 0.6})
('checkerboard', 'branch and bound', {'weight': 0.6})
('checkerboard', 'engineering', {'weight': 0.6})
('checkerboard', 'matroid', {'weight': 0.6})
('checkerboard', 'viterbi algorithm', {'weight': 0.6})
('checkerboard', "lemke's algorithm", {'weight': 0.6})
('checkerboard', 'simplex algorithm', {'weight': 0.6})
('checkerboard', 'local search (optimization)', {'weight': 0.6})
('checkerboard', 'hessian matrix', {'weight': 0.6})
('checkerboard', 'ibm system r', {'weight': 0.6})
('checkerboard', 'penalty method', {'weight': 0.6})
('checkerboard', 'prolog', {'weight': 0.6})
('checkerboard', 'time-invariant system', {'weight': 0.6})
('checkerboard', 'criss-cross algorithm', {'weight': 0.6})
('checkerboard', 'revised simplex algorithm', {'weight': 0.6})
('checkerboard', 'the mathematical association of america', {'weight': 0.6})
('checkerboard', 'heuristic algorithm', {'weight': 0.6})
('checkerboard', 'j (programming language)', {'weight': 0.6})
('checkerboard', 'word wrap', {'weight': 0.6})
('checkerboard', 'subset sum problem', {'weight': 0.6})
('checkerboard', 'integer programming', {'weight': 0.6})
('checkerboard', 'nucleosome', {'weight': 0.6})
('checkerboard', 'earley algorithm', {'weight': 0.6})
('checkerboard', 'referential transparency (computer science)', {'weight': 0.6})
('checkerboard', 'recursion', {'weight': 0.6})
('checkerboard', 'mathematica', {'weight': 0.6})
('checkerboard', 'quicksort', {'weight': 0.6})
('checkerboard', 'recursion (computer science)', {'weight': 0.6})
('checkerboard', 'checkerboard', {'weight': 1})
('checkerboard', 'computer science', {'weight': 0.6})
('checkerboard', 'brute-force search', {'weight': 0.6})
('checkerboard', 'mathematics', {'weight': 0.6})
('checkerboard', 'depth-first search', {'weight': 0.6})
('checkerboard', 'top-down and bottom-up design', {'weight': 0.6})
('checkerboard', 'correspondence problem', {'weight': 0.6})
('checkerboard', 'transcription factor', {'weight': 0.6})
('checkerboard', 'tree decomposition', {'weight': 0.6})
('checkerboard', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('checkerboard', 'structural alignment', {'weight': 0.6})
('checkerboard', 'local convergence', {'weight': 0.6})
('checkerboard', 'knapsack problem', {'weight': 0.6})
('checkerboard', 'graph algorithm', {'weight': 0.6})
('checkerboard', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('checkerboard', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('checkerboard', 'hidden markov model', {'weight': 0.6})
('checkerboard', 'string (computer science)', {'weight': 0.6})
('checkerboard', 'bioinformatics', {'weight': 0.6})
('checkerboard', 'genetics', {'weight': 0.6})
('checkerboard', 'mathematical optimization', {'weight': 0.6})
('checkerboard', 'artificial neural networks', {'weight': 0.6})
('checkerboard', 'introduction to algorithms', {'weight': 0.6})
('checkerboard', 'thomas h. cormen', {'weight': 0.6})
('checkerboard', 'music information retrieval', {'weight': 0.6})
('checkerboard', 'beat (music)', {'weight': 0.6})
('checkerboard', 'longest common subsequence problem', {'weight': 0.6})
('checkerboard', 'convex minimization', {'weight': 0.6})
('checkerboard', 'successive parabolic interpolation', {'weight': 0.6})
('checkerboard', 'fibonacci sequence', {'weight': 0.6})
('checkerboard', 'maximum subarray problem', {'weight': 0.6})
('checkerboard', 'convex optimization', {'weight': 0.6})
('checkerboard', 'memoization', {'weight': 0.6})
('checkerboard', 'richard bellman', {'weight': 0.6})
('checkerboard', 'exponential growth', {'weight': 0.6})
('checkerboard', 'charles e. leiserson', {'weight': 0.6})
('checkerboard', 'charles erwin wilson', {'weight': 0.6})
('checkerboard', 'interval scheduling', {'weight': 0.6})
('checkerboard', 'chart parser', {'weight': 0.6})
('checkerboard', 'travelling salesman problem', {'weight': 0.6})
('checkerboard', 'bellman equation', {'weight': 0.6})
('knapsack problem', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('knapsack problem', 'photoshop', {'weight': 0.6})
('knapsack problem', 'sequence alignment', {'weight': 0.6})
('knapsack problem', 'ellipsoid method', {'weight': 0.6})
('knapsack problem', 'chain matrix multiplication', {'weight': 0.6})
('knapsack problem', 'ieee', {'weight': 0.6})
('knapsack problem', 'backtracking', {'weight': 0.6})
('knapsack problem', 'sr1 formula', {'weight': 0.6})
('knapsack problem', 'nonlinear conjugate gradient method', {'weight': 0.6})
('knapsack problem', 'dynamic problem', {'weight': 0.6})
('knapsack problem', 'trust region', {'weight': 0.6})
('knapsack problem', 'function (mathematics)', {'weight': 0.6})
('knapsack problem', 'cutting stock problem', {'weight': 0.7})
('knapsack problem', 'minimum spanning tree', {'weight': 0.6})
('knapsack problem', 'context-free grammar', {'weight': 0.6})
('knapsack problem', 'branch and cut', {'weight': 0.6})
('knapsack problem', 'state variable', {'weight': 0.6})
('knapsack problem', "johnson's algorithm", {'weight': 0.6})
('knapsack problem', 'treewidth', {'weight': 0.6})
('knapsack problem', 'cryptography', {'weight': 0.5})
('knapsack problem', 'overlapping subproblem', {'weight': 0.6})
('knapsack problem', 'refutation table', {'weight': 0.6})
('knapsack problem', 'cutting-plane method', {'weight': 0.6})
('knapsack problem', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('knapsack problem', 'method of undetermined coefficients', {'weight': 0.6})
('knapsack problem', 'flow network', {'weight': 0.6})
('knapsack problem', "newton's method in optimization", {'weight': 0.6})
('knapsack problem', 'matrix chain multiplication', {'weight': 0.6})
('knapsack problem', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('knapsack problem', 'dynamic time warping', {'weight': 0.6})
('knapsack problem', 'dynamic programming language', {'weight': 0.6})
('knapsack problem', 'call-by-need', {'weight': 0.6})
('knapsack problem', 'big-o notation', {'weight': 0.6})
('knapsack problem', 'comparison of optimization software', {'weight': 0.6})
('knapsack problem', 'quadratic programming', {'weight': 0.6})
('knapsack problem', 'common lisp', {'weight': 0.6})
('knapsack problem', 'barrier function', {'weight': 0.6})
('knapsack problem', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('knapsack problem', 'gradient descent', {'weight': 0.6})
('knapsack problem', 'patricia selinger', {'weight': 0.6})
('knapsack problem', 'discounting', {'weight': 0.6})
('knapsack problem', 'ronald l. rivest', {'weight': 0.6})
('knapsack problem', 'iterative method', {'weight': 0.6})
('knapsack problem', 'limited-memory bfgs', {'weight': 0.6})
('knapsack problem', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('knapsack problem', 'longest common substring problem', {'weight': 0.6})
('knapsack problem', 'clifford stein', {'weight': 0.6})
('knapsack problem', 'computer chess', {'weight': 0.6})
('knapsack problem', 'linear programming', {'weight': 0.6})
('knapsack problem', 'bitonic tour', {'weight': 0.6})
('knapsack problem', 'linear search problem', {'weight': 0.6})
('knapsack problem', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('knapsack problem', 'systems analysis', {'weight': 0.6})
('knapsack problem', 'capital (economics)', {'weight': 0.6})
('knapsack problem', 'levenshtein distance', {'weight': 0.6})
('knapsack problem', 'nonlinear programming', {'weight': 0.6})
('knapsack problem', 'computational complexity of mathematical operations', {'weight': 0.6})
('knapsack problem', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('knapsack problem', 'gradient', {'weight': 0.6})
('knapsack problem', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('knapsack problem', 'local convergence', {'weight': 0.6})
('knapsack problem', 'bulletin of the american mathematical society', {'weight': 0.6})
('knapsack problem', 'u.s. english', {'weight': 0.6})
('knapsack problem', 'longest increasing subsequence problem', {'weight': 0.6})
('knapsack problem', 'heuristic algorithm', {'weight': 0.6})
('knapsack problem', 'successive linear programming', {'weight': 0.6})
('knapsack problem', 'optimal substructure', {'weight': 0.6})
('knapsack problem', 'taylor & francis', {'weight': 0.6})
('knapsack problem', 'programming language', {'weight': 0.6})
('knapsack problem', 'mergesort', {'weight': 0.6})
('knapsack problem', "dijkstra's algorithm", {'weight': 0.6})
('knapsack problem', 'subgradient method', {'weight': 0.6})
('knapsack problem', 'call-by-name', {'weight': 0.6})
('knapsack problem', 'combinatorial optimization', {'weight': 0.7})
('knapsack problem', 'edward prescott', {'weight': 0.6})
('knapsack problem', 'exponential time', {'weight': 0.6})
('knapsack problem', 'combinatorial auction', {'weight': 0.7})
('knapsack problem', 'principle of optimality', {'weight': 0.6})
('knapsack problem', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('knapsack problem', 'mathematical game', {'weight': 0.6})
('knapsack problem', 'nancy stokey', {'weight': 0.6})
('knapsack problem', 'approximation algorithm', {'weight': 0.6})
('knapsack problem', 'continuous knapsack problem', {'weight': 0.7})
('knapsack problem', 'discrete-time', {'weight': 0.6})
('knapsack problem', 'cyk algorithm', {'weight': 0.6})
('knapsack problem', 'markov decision process', {'weight': 0.6})
('knapsack problem', "powell's method", {'weight': 0.6})
('knapsack problem', 'wolfe conditions', {'weight': 0.6})
('knapsack problem', 'convexity in economics', {'weight': 0.6})
('knapsack problem', 'transposition table', {'weight': 0.6})
('knapsack problem', 'economics', {'weight': 0.6})
('knapsack problem', 'backward induction', {'weight': 0.6})
('knapsack problem', 'change-making problem', {'weight': 0.7})
('knapsack problem', 'golden section search', {'weight': 0.6})
('knapsack problem', 'edit distance', {'weight': 0.6})
('knapsack problem', 'tree structure', {'weight': 0.6})
('knapsack problem', 'exchange algorithm', {'weight': 0.6})
('knapsack problem', 'dover publications', {'weight': 0.6})
('knapsack problem', 'seam carving', {'weight': 0.6})
('knapsack problem', 'recursive least squares', {'weight': 0.6})
('knapsack problem', 'metaheuristic', {'weight': 0.6})
('knapsack problem', 'quasi-newton method', {'weight': 0.6})
('knapsack problem', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('knapsack problem', 'robert e. lucas', {'weight': 0.6})
('knapsack problem', 'non-convexity (economics)', {'weight': 0.6})
('knapsack problem', 'np-complete problems', {'weight': 0.5})
('knapsack problem', 'mathematical reviews', {'weight': 0.6})
('knapsack problem', 'puzzle', {'weight': 0.6})
('knapsack problem', 'associative array', {'weight': 0.6})
('knapsack problem', 'shortest path problem', {'weight': 0.6})
('knapsack problem', 'dynamic algorithm', {'weight': 0.6})
('knapsack problem', 'packing problem', {'weight': 0.7})
('knapsack problem', 'augmented lagrangian method', {'weight': 0.6})
('knapsack problem', 'charles delisi', {'weight': 0.6})
('knapsack problem', 'greedy algorithm', {'weight': 0.6})
('knapsack problem', "karmarkar's algorithm", {'weight': 0.6})
('knapsack problem', 'lattice models', {'weight': 0.6})
('knapsack problem', 'utility', {'weight': 0.6})
('knapsack problem', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('knapsack problem', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('knapsack problem', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('knapsack problem', 'international standard book number', {'weight': 0.6})
('knapsack problem', 'undirected graph', {'weight': 0.6})
('knapsack problem', 'scheme (programming language)', {'weight': 0.6})
('knapsack problem', 'rna structure', {'weight': 0.6})
('knapsack problem', 'hanoi', {'weight': 0.6})
('knapsack problem', 'perl', {'weight': 0.6})
('knapsack problem', 'digital object identifier', {'weight': 0.6})
('knapsack problem', 'sequential quadratic programming', {'weight': 0.6})
('knapsack problem', "dinic's algorithm", {'weight': 0.6})
('knapsack problem', 'pseudo-polynomial time', {'weight': 0.6})
('knapsack problem', 'partition problem', {'weight': 0.6})
('knapsack problem', 'operations research', {'weight': 0.5})
('knapsack problem', 'hill climbing', {'weight': 0.6})
('knapsack problem', 'top-down', {'weight': 0.6})
('knapsack problem', 'de boor algorithm', {'weight': 0.6})
('knapsack problem', 'computer programming portal', {'weight': 0.7})
('knapsack problem', 'optimization algorithm', {'weight': 0.6})
('knapsack problem', "kruskal's algorithm", {'weight': 0.6})
('knapsack problem', 'jacques philippe marie binet', {'weight': 0.6})
('knapsack problem', 'tabu search', {'weight': 0.6})
('knapsack problem', 'computer science portal', {'weight': 0.7})
('knapsack problem', 'divide and conquer algorithm', {'weight': 0.6})
('knapsack problem', 'pseudo-polynomial time algorithms', {'weight': 0.5})
('knapsack problem', 'evolutionary algorithm', {'weight': 0.6})
('knapsack problem', 'clique-width', {'weight': 0.6})
('knapsack problem', 'weakly np-complete problems', {'weight': 0.5})
('knapsack problem', 'dynamic programming', {'weight': 0.6})
('knapsack problem', 'subroutine', {'weight': 0.6})
('knapsack problem', 'simulated annealing', {'weight': 0.6})
('knapsack problem', 'tower of hanoi', {'weight': 0.6})
('knapsack problem', 'branch and bound', {'weight': 0.6})
('knapsack problem', 'engineering', {'weight': 0.6})
('knapsack problem', 'matroid', {'weight': 0.6})
('knapsack problem', 'viterbi algorithm', {'weight': 0.6})
('knapsack problem', "lemke's algorithm", {'weight': 0.6})
('knapsack problem', 'simplex algorithm', {'weight': 0.6})
('knapsack problem', 'stochastic programming', {'weight': 0.6})
('knapsack problem', 'hessian matrix', {'weight': 0.6})
('knapsack problem', 'ibm system r', {'weight': 0.6})
('knapsack problem', 'penalty method', {'weight': 0.6})
('knapsack problem', 'prolog', {'weight': 0.6})
('knapsack problem', 'time-invariant system', {'weight': 0.6})
('knapsack problem', 'criss-cross algorithm', {'weight': 0.6})
('knapsack problem', 'revised simplex algorithm', {'weight': 0.6})
('knapsack problem', 'the mathematical association of america', {'weight': 0.6})
('knapsack problem', 'line search', {'weight': 0.6})
('knapsack problem', 'j (programming language)', {'weight': 0.6})
('knapsack problem', 'word wrap', {'weight': 0.6})
('knapsack problem', 'subset sum problem', {'weight': 0.6})
('knapsack problem', 'integer programming', {'weight': 0.6})
('knapsack problem', 'nucleosome', {'weight': 0.6})
('knapsack problem', 'earley algorithm', {'weight': 0.6})
('knapsack problem', 'referential transparency (computer science)', {'weight': 0.6})
('knapsack problem', 'recursion', {'weight': 0.6})
('knapsack problem', 'mathematica', {'weight': 0.6})
('knapsack problem', 'quicksort', {'weight': 0.6})
('knapsack problem', 'list of knapsack problems', {'weight': 0.7})
('knapsack problem', 'recursion (computer science)', {'weight': 0.6})
('knapsack problem', 'checkerboard', {'weight': 0.6})
('knapsack problem', 'computer science', {'weight': 0.6})
('knapsack problem', 'brute-force search', {'weight': 0.6})
('knapsack problem', 'mathematics', {'weight': 0.6})
('knapsack problem', 'depth-first search', {'weight': 0.6})
('knapsack problem', 'top-down and bottom-up design', {'weight': 0.6})
('knapsack problem', 'correspondence problem', {'weight': 0.6})
('knapsack problem', 'transcription factor', {'weight': 0.6})
('knapsack problem', 'tree decomposition', {'weight': 0.6})
('knapsack problem', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('knapsack problem', 'structural alignment', {'weight': 0.6})
('knapsack problem', 'packing problems', {'weight': 0.5})
('knapsack problem', 'knapsack problem', {'weight': 1})
('knapsack problem', 'graph algorithm', {'weight': 0.6})
('knapsack problem', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('knapsack problem', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('knapsack problem', 'hidden markov model', {'weight': 0.6})
('knapsack problem', 'string (computer science)', {'weight': 0.6})
('knapsack problem', 'bioinformatics', {'weight': 0.6})
('knapsack problem', 'genetics', {'weight': 0.6})
('knapsack problem', 'mathematical optimization', {'weight': 0.6})
('knapsack problem', 'local search (optimization)', {'weight': 0.6})
('knapsack problem', 'artificial neural networks', {'weight': 0.6})
('knapsack problem', 'introduction to algorithms', {'weight': 0.6})
('knapsack problem', 'thomas h. cormen', {'weight': 0.6})
('knapsack problem', 'music information retrieval', {'weight': 0.6})
('knapsack problem', 'beat (music)', {'weight': 0.6})
('knapsack problem', 'longest common subsequence problem', {'weight': 0.6})
('knapsack problem', 'convex minimization', {'weight': 0.6})
('knapsack problem', 'successive parabolic interpolation', {'weight': 0.6})
('knapsack problem', 'fibonacci sequence', {'weight': 0.6})
('knapsack problem', 'maximum subarray problem', {'weight': 0.6})
('knapsack problem', 'convex optimization', {'weight': 0.6})
('knapsack problem', 'memoization', {'weight': 0.6})
('knapsack problem', 'richard bellman', {'weight': 0.6})
('knapsack problem', 'exponential growth', {'weight': 0.6})
('knapsack problem', 'charles e. leiserson', {'weight': 0.6})
('knapsack problem', 'charles erwin wilson', {'weight': 0.6})
('knapsack problem', 'interval scheduling', {'weight': 0.6})
('knapsack problem', 'chart parser', {'weight': 0.6})
('knapsack problem', 'travelling salesman problem', {'weight': 0.6})
('knapsack problem', 'bellman equation', {'weight': 0.6})
('travelling salesman problem', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('travelling salesman problem', 'photoshop', {'weight': 0.6})
('travelling salesman problem', 'sequence alignment', {'weight': 0.6})
('travelling salesman problem', 'flow network', {'weight': 0.6})
('travelling salesman problem', 'np-hard problems', {'weight': 0.5})
('travelling salesman problem', 'ellipsoid method', {'weight': 0.6})
('travelling salesman problem', 'chain matrix multiplication', {'weight': 0.6})
('travelling salesman problem', 'ieee', {'weight': 0.6})
('travelling salesman problem', 'backtracking', {'weight': 0.6})
('travelling salesman problem', 'sr1 formula', {'weight': 0.6})
('travelling salesman problem', 'seven bridges of k\xe3\xb6nigsberg', {'weight': 0.7})
('travelling salesman problem', 'nonlinear conjugate gradient method', {'weight': 0.6})
('travelling salesman problem', 'dynamic problem', {'weight': 0.6})
('travelling salesman problem', 'computational problems in graph theory', {'weight': 0.5})
('travelling salesman problem', 'trust region', {'weight': 0.6})
('travelling salesman problem', 'function (mathematics)', {'weight': 0.6})
('travelling salesman problem', 'minimum spanning tree', {'weight': 0.6})
('travelling salesman problem', 'context-free grammar', {'weight': 0.6})
('travelling salesman problem', 'branch and cut', {'weight': 0.6})
('travelling salesman problem', 'state variable', {'weight': 0.6})
('travelling salesman problem', 'treewidth', {'weight': 0.6})
('travelling salesman problem', 'overlapping subproblem', {'weight': 0.6})
('travelling salesman problem', 'taylor & francis', {'weight': 0.6})
('travelling salesman problem', 'vehicle routing problem', {'weight': 0.7})
('travelling salesman problem', 'cutting-plane method', {'weight': 0.6})
('travelling salesman problem', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('travelling salesman problem', 'method of undetermined coefficients', {'weight': 0.6})
('travelling salesman problem', 'combinatorial optimization', {'weight': 0.6})
('travelling salesman problem', "newton's method in optimization", {'weight': 0.6})
('travelling salesman problem', 'matrix chain multiplication', {'weight': 0.6})
('travelling salesman problem', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('travelling salesman problem', 'dynamic time warping', {'weight': 0.6})
('travelling salesman problem', 'dynamic programming language', {'weight': 0.6})
('travelling salesman problem', 'call-by-need', {'weight': 0.6})
('travelling salesman problem', 'big-o notation', {'weight': 0.6})
('travelling salesman problem', 'graph algorithms', {'weight': 0.5})
('travelling salesman problem', 'comparison of optimization software', {'weight': 0.6})
('travelling salesman problem', 'quadratic programming', {'weight': 0.6})
('travelling salesman problem', 'common lisp', {'weight': 0.6})
('travelling salesman problem', 'barrier function', {'weight': 0.6})
('travelling salesman problem', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('travelling salesman problem', 'gradient descent', {'weight': 0.6})
('travelling salesman problem', 'patricia selinger', {'weight': 0.6})
('travelling salesman problem', 'discounting', {'weight': 0.6})
('travelling salesman problem', 'ronald l. rivest', {'weight': 0.6})
('travelling salesman problem', 'iterative method', {'weight': 0.6})
('travelling salesman problem', 'limited-memory bfgs', {'weight': 0.6})
('travelling salesman problem', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('travelling salesman problem', 'longest common substring problem', {'weight': 0.6})
('travelling salesman problem', 'clifford stein', {'weight': 0.6})
('travelling salesman problem', 'computer chess', {'weight': 0.6})
('travelling salesman problem', 'linear programming', {'weight': 0.6})
('travelling salesman problem', 'bitonic tour', {'weight': 0.6})
('travelling salesman problem', 'linear search problem', {'weight': 0.6})
('travelling salesman problem', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('travelling salesman problem', 'systems analysis', {'weight': 0.6})
('travelling salesman problem', 'hamiltonian paths and cycles', {'weight': 0.5})
('travelling salesman problem', 'levenshtein distance', {'weight': 0.6})
('travelling salesman problem', 'nonlinear programming', {'weight': 0.6})
('travelling salesman problem', 'canadian traveller problem', {'weight': 0.7})
('travelling salesman problem', 'tube challenge', {'weight': 0.7})
('travelling salesman problem', 'computational complexity of mathematical operations', {'weight': 0.6})
('travelling salesman problem', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('travelling salesman problem', 'gradient', {'weight': 0.6})
('travelling salesman problem', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('travelling salesman problem', 'route inspection problem', {'weight': 0.7})
('travelling salesman problem', 'bulletin of the american mathematical society', {'weight': 0.6})
('travelling salesman problem', 'u.s. english', {'weight': 0.6})
('travelling salesman problem', 'refutation table', {'weight': 0.6})
('travelling salesman problem', 'heuristic algorithm', {'weight': 0.6})
('travelling salesman problem', 'successive linear programming', {'weight': 0.6})
('travelling salesman problem', 'optimal substructure', {'weight': 0.6})
('travelling salesman problem', 'programming language', {'weight': 0.6})
('travelling salesman problem', 'mergesort', {'weight': 0.6})
('travelling salesman problem', "dijkstra's algorithm", {'weight': 0.6})
('travelling salesman problem', 'subgradient method', {'weight': 0.6})
('travelling salesman problem', 'call-by-name', {'weight': 0.6})
('travelling salesman problem', 'longest increasing subsequence problem', {'weight': 0.6})
('travelling salesman problem', 'edward prescott', {'weight': 0.6})
('travelling salesman problem', 'exponential time', {'weight': 0.6})
('travelling salesman problem', 'principle of optimality', {'weight': 0.6})
('travelling salesman problem', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('travelling salesman problem', 'mathematical game', {'weight': 0.6})
('travelling salesman problem', 'nancy stokey', {'weight': 0.6})
('travelling salesman problem', 'approximation algorithm', {'weight': 0.6})
('travelling salesman problem', 'graph exploration', {'weight': 0.7})
('travelling salesman problem', 'discrete-time', {'weight': 0.6})
('travelling salesman problem', 'cyk algorithm', {'weight': 0.6})
('travelling salesman problem', 'markov decision process', {'weight': 0.6})
('travelling salesman problem', "powell's method", {'weight': 0.6})
('travelling salesman problem', 'wolfe conditions', {'weight': 0.6})
('travelling salesman problem', 'convexity in economics', {'weight': 0.6})
('travelling salesman problem', 'transposition table', {'weight': 0.6})
('travelling salesman problem', 'economics', {'weight': 0.6})
('travelling salesman problem', 'backward induction', {'weight': 0.6})
('travelling salesman problem', 'golden section search', {'weight': 0.6})
('travelling salesman problem', 'edit distance', {'weight': 0.6})
('travelling salesman problem', 'tree structure', {'weight': 0.6})
('travelling salesman problem', 'exchange algorithm', {'weight': 0.6})
('travelling salesman problem', 'dover publications', {'weight': 0.6})
('travelling salesman problem', 'seam carving', {'weight': 0.6})
('travelling salesman problem', 'recursive least squares', {'weight': 0.6})
('travelling salesman problem', 'metaheuristic', {'weight': 0.6})
('travelling salesman problem', 'quasi-newton method', {'weight': 0.6})
('travelling salesman problem', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('travelling salesman problem', 'robert e. lucas', {'weight': 0.6})
('travelling salesman problem', 'non-convexity (economics)', {'weight': 0.6})
('travelling salesman problem', 'np-complete problems', {'weight': 0.5})
('travelling salesman problem', 'mathematical reviews', {'weight': 0.6})
('travelling salesman problem', 'puzzle', {'weight': 0.6})
('travelling salesman problem', 'associative array', {'weight': 0.6})
('travelling salesman problem', 'shortest path problem', {'weight': 0.6})
('travelling salesman problem', 'dynamic algorithm', {'weight': 0.6})
('travelling salesman problem', 'augmented lagrangian method', {'weight': 0.6})
('travelling salesman problem', 'charles delisi', {'weight': 0.6})
('travelling salesman problem', 'greedy algorithm', {'weight': 0.6})
('travelling salesman problem', "karmarkar's algorithm", {'weight': 0.6})
('travelling salesman problem', 'lattice models', {'weight': 0.6})
('travelling salesman problem', 'utility', {'weight': 0.6})
('travelling salesman problem', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('travelling salesman problem', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('travelling salesman problem', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('travelling salesman problem', 'international standard book number', {'weight': 0.6})
('travelling salesman problem', 'undirected graph', {'weight': 0.6})
('travelling salesman problem', 'scheme (programming language)', {'weight': 0.6})
('travelling salesman problem', 'rna structure', {'weight': 0.6})
('travelling salesman problem', 'hanoi', {'weight': 0.6})
('travelling salesman problem', 'perl', {'weight': 0.6})
('travelling salesman problem', 'digital object identifier', {'weight': 0.6})
('travelling salesman problem', 'sequential quadratic programming', {'weight': 0.6})
('travelling salesman problem', "dinic's algorithm", {'weight': 0.6})
('travelling salesman problem', 'pseudo-polynomial time', {'weight': 0.6})
('travelling salesman problem', 'partition problem', {'weight': 0.6})
('travelling salesman problem', 'operations research', {'weight': 0.5})
('travelling salesman problem', 'hill climbing', {'weight': 0.6})
('travelling salesman problem', 'top-down', {'weight': 0.6})
('travelling salesman problem', 'de boor algorithm', {'weight': 0.6})
('travelling salesman problem', 'optimization algorithm', {'weight': 0.6})
('travelling salesman problem', "kruskal's algorithm", {'weight': 0.6})
('travelling salesman problem', 'jacques philippe marie binet', {'weight': 0.6})
('travelling salesman problem', 'tabu search', {'weight': 0.6})
('travelling salesman problem', 'divide and conquer algorithm', {'weight': 0.6})
('travelling salesman problem', "johnson's algorithm", {'weight': 0.6})
('travelling salesman problem', 'evolutionary algorithm', {'weight': 0.6})
('travelling salesman problem', 'clique-width', {'weight': 0.6})
('travelling salesman problem', 'dynamic programming', {'weight': 0.6})
('travelling salesman problem', 'subroutine', {'weight': 0.6})
('travelling salesman problem', 'simulated annealing', {'weight': 0.6})
('travelling salesman problem', 'tower of hanoi', {'weight': 0.6})
('travelling salesman problem', 'branch and bound', {'weight': 0.6})
('travelling salesman problem', 'engineering', {'weight': 0.6})
('travelling salesman problem', 'matroid', {'weight': 0.6})
('travelling salesman problem', 'viterbi algorithm', {'weight': 0.6})
('travelling salesman problem', "lemke's algorithm", {'weight': 0.6})
('travelling salesman problem', 'simplex algorithm', {'weight': 0.6})
('travelling salesman problem', 'stochastic programming', {'weight': 0.6})
('travelling salesman problem', 'hessian matrix', {'weight': 0.6})
('travelling salesman problem', 'capital (economics)', {'weight': 0.6})
('travelling salesman problem', 'ibm system r', {'weight': 0.6})
('travelling salesman problem', 'penalty method', {'weight': 0.6})
('travelling salesman problem', 'prolog', {'weight': 0.6})
('travelling salesman problem', 'time-invariant system', {'weight': 0.6})
('travelling salesman problem', 'criss-cross algorithm', {'weight': 0.6})
('travelling salesman problem', 'revised simplex algorithm', {'weight': 0.6})
('travelling salesman problem', 'the mathematical association of america', {'weight': 0.6})
('travelling salesman problem', 'line search', {'weight': 0.6})
('travelling salesman problem', 'j (programming language)', {'weight': 0.6})
('travelling salesman problem', 'word wrap', {'weight': 0.6})
('travelling salesman problem', 'subset sum problem', {'weight': 0.6})
('travelling salesman problem', 'integer programming', {'weight': 0.6})
('travelling salesman problem', 'nucleosome', {'weight': 0.6})
('travelling salesman problem', 'earley algorithm', {'weight': 0.6})
('travelling salesman problem', 'referential transparency (computer science)', {'weight': 0.6})
('travelling salesman problem', 'recursion', {'weight': 0.6})
('travelling salesman problem', 'mathematica', {'weight': 0.6})
('travelling salesman problem', 'quicksort', {'weight': 0.6})
('travelling salesman problem', 'recursion (computer science)', {'weight': 0.6})
('travelling salesman problem', 'checkerboard', {'weight': 0.6})
('travelling salesman problem', 'computer science', {'weight': 0.6})
('travelling salesman problem', 'brute-force search', {'weight': 0.6})
('travelling salesman problem', 'mathematics', {'weight': 0.6})
('travelling salesman problem', 'depth-first search', {'weight': 0.6})
('travelling salesman problem', 'top-down and bottom-up design', {'weight': 0.6})
('travelling salesman problem', 'correspondence problem', {'weight': 0.6})
('travelling salesman problem', 'transcription factor', {'weight': 0.6})
('travelling salesman problem', 'tree decomposition', {'weight': 0.6})
('travelling salesman problem', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('travelling salesman problem', 'structural alignment', {'weight': 0.6})
('travelling salesman problem', 'local convergence', {'weight': 0.6})
('travelling salesman problem', 'knapsack problem', {'weight': 0.6})
('travelling salesman problem', 'graph algorithm', {'weight': 0.6})
('travelling salesman problem', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('travelling salesman problem', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('travelling salesman problem', 'hidden markov model', {'weight': 0.6})
('travelling salesman problem', 'string (computer science)', {'weight': 0.6})
('travelling salesman problem', 'bioinformatics', {'weight': 0.6})
('travelling salesman problem', 'genetics', {'weight': 0.6})
('travelling salesman problem', 'mathematical optimization', {'weight': 0.6})
('travelling salesman problem', 'local search (optimization)', {'weight': 0.6})
('travelling salesman problem', 'artificial neural networks', {'weight': 0.6})
('travelling salesman problem', 'introduction to algorithms', {'weight': 0.6})
('travelling salesman problem', 'thomas h. cormen', {'weight': 0.6})
('travelling salesman problem', 'music information retrieval', {'weight': 0.6})
('travelling salesman problem', 'beat (music)', {'weight': 0.6})
('travelling salesman problem', 'longest common subsequence problem', {'weight': 0.6})
('travelling salesman problem', 'convex minimization', {'weight': 0.6})
('travelling salesman problem', 'successive parabolic interpolation', {'weight': 0.6})
('travelling salesman problem', 'fibonacci sequence', {'weight': 0.6})
('travelling salesman problem', 'maximum subarray problem', {'weight': 0.6})
('travelling salesman problem', 'convex optimization', {'weight': 0.6})
('travelling salesman problem', 'memoization', {'weight': 0.6})
('travelling salesman problem', 'set tsp problem', {'weight': 0.7})
('travelling salesman problem', 'richard bellman', {'weight': 0.6})
('travelling salesman problem', 'exponential growth', {'weight': 0.6})
('travelling salesman problem', 'charles e. leiserson', {'weight': 0.6})
('travelling salesman problem', 'charles erwin wilson', {'weight': 0.6})
('travelling salesman problem', 'interval scheduling', {'weight': 0.6})
('travelling salesman problem', 'chart parser', {'weight': 0.6})
('travelling salesman problem', 'travelling salesman problem', {'weight': 1})
('travelling salesman problem', 'bellman equation', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'smith\xe2\x80\x93waterman algorithm', {'weight': 1})
('smith\xe2\x80\x93waterman algorithm', 'photoshop', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'sequence alignment', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'flow network', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'ellipsoid method', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'chain matrix multiplication', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'ieee', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'backtracking', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'nonlinear conjugate gradient method', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'dynamic problem', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'trust region', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'function (mathematics)', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'minimum spanning tree', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'context-free grammar', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'branch and cut', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'state variable', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'treewidth', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'overlapping subproblem', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'taylor & francis', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'cutting-plane method', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'method of undetermined coefficients', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'combinatorial optimization', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', "newton's method in optimization", {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'matrix chain multiplication', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'dynamic time warping', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'dynamic programming language', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'call-by-need', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'big-o notation', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'comparison of optimization software', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'quadratic programming', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'common lisp', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'barrier function', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'gradient descent', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'patricia selinger', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'discounting', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'ronald l. rivest', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'iterative method', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'limited-memory bfgs', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'longest common substring problem', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'clifford stein', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'computer chess', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'linear programming', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'bitonic tour', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'linear search problem', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'systems analysis', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'capital (economics)', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'levenshtein distance', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'nonlinear programming', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'computational complexity of mathematical operations', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'gradient', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'bulletin of the american mathematical society', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'u.s. english', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'refutation table', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'heuristic algorithm', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'successive linear programming', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'optimal substructure', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'programming language', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'mergesort', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', "dijkstra's algorithm", {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'subgradient method', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'call-by-name', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'longest increasing subsequence problem', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'edward prescott', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'exponential time', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'principle of optimality', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'mathematical game', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'nancy stokey', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'approximation algorithm', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'discrete-time', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'cyk algorithm', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'markov decision process', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', "powell's method", {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'wolfe conditions', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'convexity in economics', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'transposition table', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'economics', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'backward induction', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'golden section search', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'edit distance', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'tree structure', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'exchange algorithm', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'dover publications', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'seam carving', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'recursive least squares', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'metaheuristic', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'quasi-newton method', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'robert e. lucas', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'non-convexity (economics)', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'sr1 formula', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'mathematical reviews', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'puzzle', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'associative array', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'shortest path problem', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'dynamic algorithm', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'augmented lagrangian method', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'charles delisi', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'greedy algorithm', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', "karmarkar's algorithm", {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'lattice models', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'utility', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'international standard book number', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'undirected graph', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'scheme (programming language)', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'rna structure', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'hanoi', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'perl', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'digital object identifier', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'sequential quadratic programming', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', "dinic's algorithm", {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'pseudo-polynomial time', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'partition problem', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'stochastic programming', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'hill climbing', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'top-down', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'de boor algorithm', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'optimization algorithm', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', "kruskal's algorithm", {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'jacques philippe marie binet', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'tabu search', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'divide and conquer algorithm', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', "johnson's algorithm", {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'evolutionary algorithm', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'clique-width', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'dynamic programming', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'subroutine', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'simulated annealing', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'tower of hanoi', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'branch and bound', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'engineering', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'matroid', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'viterbi algorithm', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', "lemke's algorithm", {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'simplex algorithm', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'local search (optimization)', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'hessian matrix', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'ibm system r', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'penalty method', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'prolog', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'time-invariant system', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'criss-cross algorithm', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'revised simplex algorithm', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'the mathematical association of america', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'line search', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'j (programming language)', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'word wrap', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'subset sum problem', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'integer programming', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'nucleosome', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'earley algorithm', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'referential transparency (computer science)', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'recursion', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'mathematica', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'quicksort', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'recursion (computer science)', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'checkerboard', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'computer science', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'brute-force search', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'mathematics', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'depth-first search', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'top-down and bottom-up design', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'correspondence problem', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'transcription factor', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'tree decomposition', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'structural alignment', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'local convergence', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'knapsack problem', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'graph algorithm', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'hidden markov model', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'string (computer science)', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'bioinformatics', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'genetics', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'mathematical optimization', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'artificial neural networks', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'introduction to algorithms', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'thomas h. cormen', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'music information retrieval', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'beat (music)', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'longest common subsequence problem', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'convex minimization', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'successive parabolic interpolation', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'fibonacci sequence', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'maximum subarray problem', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'convex optimization', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'memoization', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'richard bellman', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'exponential growth', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'charles e. leiserson', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'charles erwin wilson', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'interval scheduling', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'chart parser', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'travelling salesman problem', {'weight': 0.6})
('smith\xe2\x80\x93waterman algorithm', 'bellman equation', {'weight': 0.6})
('photoshop', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('photoshop', 'photoshop', {'weight': 1})
('photoshop', 'os x graphics software', {'weight': 0.5})
('photoshop', 'flow network', {'weight': 0.6})
('photoshop', 'sequence alignment', {'weight': 0.6})
('photoshop', 'creative cloud controversy', {'weight': 0.7})
('photoshop', 'ellipsoid method', {'weight': 0.6})
('photoshop', 'chain matrix multiplication', {'weight': 0.6})
('photoshop', 'ieee', {'weight': 0.6})
('photoshop', 'backtracking', {'weight': 0.6})
('photoshop', 'nonlinear conjugate gradient method', {'weight': 0.6})
('photoshop', 'dynamic problem', {'weight': 0.6})
('photoshop', 'trust region', {'weight': 0.6})
('photoshop', 'function (mathematics)', {'weight': 0.6})
('photoshop', 'minimum spanning tree', {'weight': 0.6})
('photoshop', '1988 introductions', {'weight': 0.5})
('photoshop', 'tabu search', {'weight': 0.6})
('photoshop', 'branch and cut', {'weight': 0.6})
('photoshop', 'state variable', {'weight': 0.6})
('photoshop', 'treewidth', {'weight': 0.6})
('photoshop', 'overlapping subproblem', {'weight': 0.6})
('photoshop', 'taylor & francis', {'weight': 0.6})
('photoshop', 'cutting-plane method', {'weight': 0.6})
('photoshop', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('photoshop', 'charles erwin wilson', {'weight': 0.6})
('photoshop', 'combinatorial optimization', {'weight': 0.6})
('photoshop', "newton's method in optimization", {'weight': 0.6})
('photoshop', 'metaheuristic', {'weight': 0.6})
('photoshop', 'matrix chain multiplication', {'weight': 0.6})
('photoshop', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('photoshop', 'dynamic time warping', {'weight': 0.6})
('photoshop', 'dynamic programming language', {'weight': 0.6})
('photoshop', 'call-by-need', {'weight': 0.6})
('photoshop', 'big-o notation', {'weight': 0.6})
('photoshop', 'comparison of optimization software', {'weight': 0.6})
('photoshop', 'quadratic programming', {'weight': 0.6})
('photoshop', 'common lisp', {'weight': 0.6})
('photoshop', 'barrier function', {'weight': 0.6})
('photoshop', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('photoshop', 'gradient descent', {'weight': 0.6})
('photoshop', 'patricia selinger', {'weight': 0.6})
('photoshop', 'discounting', {'weight': 0.6})
('photoshop', 'windows graphics-related software', {'weight': 0.5})
('photoshop', 'ronald l. rivest', {'weight': 0.6})
('photoshop', 'iterative method', {'weight': 0.6})
('photoshop', 'limited-memory bfgs', {'weight': 0.6})
('photoshop', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('photoshop', 'longest common substring problem', {'weight': 0.6})
('photoshop', 'clifford stein', {'weight': 0.6})
('photoshop', 'computer chess', {'weight': 0.6})
('photoshop', 'linear programming', {'weight': 0.6})
('photoshop', 'bitonic tour', {'weight': 0.6})
('photoshop', 'linear search problem', {'weight': 0.6})
('photoshop', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('photoshop', 'systems analysis', {'weight': 0.6})
('photoshop', 'capital (economics)', {'weight': 0.6})
('photoshop', 'levenshtein distance', {'weight': 0.6})
('photoshop', 'nonlinear programming', {'weight': 0.6})
('photoshop', 'computational complexity of mathematical operations', {'weight': 0.6})
('photoshop', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('photoshop', 'gradient', {'weight': 0.6})
('photoshop', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('photoshop', 'bulletin of the american mathematical society', {'weight': 0.6})
('photoshop', 'lattice models', {'weight': 0.6})
('photoshop', 'refutation table', {'weight': 0.6})
('photoshop', 'heuristic algorithm', {'weight': 0.6})
('photoshop', 'successive linear programming', {'weight': 0.6})
('photoshop', 'optimal substructure', {'weight': 0.6})
('photoshop', 'programming language', {'weight': 0.6})
('photoshop', 'mergesort', {'weight': 0.6})
('photoshop', "dijkstra's algorithm", {'weight': 0.6})
('photoshop', 'subgradient method', {'weight': 0.6})
('photoshop', 'call-by-name', {'weight': 0.6})
('photoshop', 'longest increasing subsequence problem', {'weight': 0.6})
('photoshop', 'edward prescott', {'weight': 0.6})
('photoshop', 'exponential time', {'weight': 0.6})
('photoshop', 'principle of optimality', {'weight': 0.6})
('photoshop', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('photoshop', 'mathematical game', {'weight': 0.6})
('photoshop', 'nancy stokey', {'weight': 0.6})
('photoshop', 'approximation algorithm', {'weight': 0.6})
('photoshop', 'c++ software', {'weight': 0.5})
('photoshop', 'cyk algorithm', {'weight': 0.6})
('photoshop', 'markov decision process', {'weight': 0.6})
('photoshop', 'method of undetermined coefficients', {'weight': 0.6})
('photoshop', "powell's method", {'weight': 0.6})
('photoshop', 'wolfe conditions', {'weight': 0.6})
('photoshop', 'convexity in economics', {'weight': 0.6})
('photoshop', 'transposition table', {'weight': 0.6})
('photoshop', 'economics', {'weight': 0.6})
('photoshop', 'backward induction', {'weight': 0.6})
('photoshop', 'golden section search', {'weight': 0.6})
('photoshop', 'edit distance', {'weight': 0.6})
('photoshop', 'tree structure', {'weight': 0.6})
('photoshop', 'exchange algorithm', {'weight': 0.6})
('photoshop', 'undirected graph', {'weight': 0.6})
('photoshop', 'seam carving', {'weight': 0.6})
('photoshop', 'recursive least squares', {'weight': 0.6})
('photoshop', "kruskal's algorithm", {'weight': 0.6})
('photoshop', 'quasi-newton method', {'weight': 0.6})
('photoshop', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('photoshop', 'robert e. lucas', {'weight': 0.6})
('photoshop', 'non-convexity (economics)', {'weight': 0.6})
('photoshop', 'sr1 formula', {'weight': 0.6})
('photoshop', 'mathematical reviews', {'weight': 0.6})
('photoshop', 'puzzle', {'weight': 0.6})
('photoshop', 'associative array', {'weight': 0.6})
('photoshop', 'adobe creative suite', {'weight': 0.5})
('photoshop', 'shortest path problem', {'weight': 0.6})
('photoshop', 'graphic design', {'weight': 0.5})
('photoshop', 'dynamic algorithm', {'weight': 0.6})
('photoshop', 'augmented lagrangian method', {'weight': 0.6})
('photoshop', 'charles delisi', {'weight': 0.6})
('photoshop', 'greedy algorithm', {'weight': 0.6})
('photoshop', "karmarkar's algorithm", {'weight': 0.6})
('photoshop', 'u.s. english', {'weight': 0.6})
('photoshop', 'utility', {'weight': 0.6})
('photoshop', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('photoshop', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('photoshop', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('photoshop', 'international standard book number', {'weight': 0.6})
('photoshop', 'discrete-time', {'weight': 0.6})
('photoshop', 'scheme (programming language)', {'weight': 0.6})
('photoshop', 'rna structure', {'weight': 0.6})
('photoshop', 'hanoi', {'weight': 0.6})
('photoshop', 'image editing', {'weight': 0.7})
('photoshop', 'perl', {'weight': 0.6})
('photoshop', 'technical communication tools', {'weight': 0.5})
('photoshop', 'digital object identifier', {'weight': 0.6})
('photoshop', 'sequential quadratic programming', {'weight': 0.6})
('photoshop', 'thomas h. cormen', {'weight': 0.6})
('photoshop', "dinic's algorithm", {'weight': 0.6})
('photoshop', 'pseudo-polynomial time', {'weight': 0.6})
('photoshop', 'partition problem', {'weight': 0.6})
('photoshop', 'stochastic programming', {'weight': 0.6})
('photoshop', 'hill climbing', {'weight': 0.6})
('photoshop', 'top-down', {'weight': 0.6})
('photoshop', 'de boor algorithm', {'weight': 0.6})
('photoshop', 'optimization algorithm', {'weight': 0.6})
('photoshop', 'context-free grammar', {'weight': 0.6})
('photoshop', 'jacques philippe marie binet', {'weight': 0.6})
('photoshop', 'dover publications', {'weight': 0.6})
('photoshop', 'divide and conquer algorithm', {'weight': 0.6})
('photoshop', "johnson's algorithm", {'weight': 0.6})
('photoshop', 'evolutionary algorithm', {'weight': 0.6})
('photoshop', 'clique-width', {'weight': 0.6})
('photoshop', 'dynamic programming', {'weight': 0.6})
('photoshop', 'subroutine', {'weight': 0.6})
('photoshop', 'simulated annealing', {'weight': 0.6})
('photoshop', 'tower of hanoi', {'weight': 0.6})
('photoshop', 'branch and bound', {'weight': 0.6})
('photoshop', 'j (programming language)', {'weight': 0.6})
('photoshop', 'comparison of raster graphics editors', {'weight': 0.7})
('photoshop', 'matroid', {'weight': 0.6})
('photoshop', 'viterbi algorithm', {'weight': 0.6})
('photoshop', "lemke's algorithm", {'weight': 0.6})
('photoshop', 'simplex algorithm', {'weight': 0.6})
('photoshop', 'local search (optimization)', {'weight': 0.6})
('photoshop', 'hessian matrix', {'weight': 0.6})
('photoshop', 'ibm system r', {'weight': 0.6})
('photoshop', 'penalty method', {'weight': 0.6})
('photoshop', 'prolog', {'weight': 0.6})
('photoshop', 'time-invariant system', {'weight': 0.6})
('photoshop', 'criss-cross algorithm', {'weight': 0.6})
('photoshop', 'revised simplex algorithm', {'weight': 0.6})
('photoshop', '1988 software', {'weight': 0.5})
('photoshop', 'the mathematical association of america', {'weight': 0.6})
('photoshop', 'line search', {'weight': 0.6})
('photoshop', 'hdr tone mapping software', {'weight': 0.5})
('photoshop', 'word wrap', {'weight': 0.6})
('photoshop', 'adobe photoshop', {'weight': 0.5})
('photoshop', 'subset sum problem', {'weight': 0.6})
('photoshop', 'integer programming', {'weight': 0.6})
('photoshop', 'nucleosome', {'weight': 0.6})
('photoshop', 'earley algorithm', {'weight': 0.6})
('photoshop', 'referential transparency (computer science)', {'weight': 0.6})
('photoshop', 'recursion', {'weight': 0.6})
('photoshop', 'mathematica', {'weight': 0.6})
('photoshop', 'quicksort', {'weight': 0.6})
('photoshop', 'recursion (computer science)', {'weight': 0.6})
('photoshop', 'computer science', {'weight': 0.6})
('photoshop', 'proprietary cross-platform software', {'weight': 0.5})
('photoshop', 'brute-force search', {'weight': 0.6})
('photoshop', 'mathematics', {'weight': 0.6})
('photoshop', 'depth-first search', {'weight': 0.6})
('photoshop', 'top-down and bottom-up design', {'weight': 0.6})
('photoshop', 'correspondence problem', {'weight': 0.6})
('photoshop', 'transcription factor', {'weight': 0.6})
('photoshop', 'tree decomposition', {'weight': 0.6})
('photoshop', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('photoshop', 'structural alignment', {'weight': 0.6})
('photoshop', 'local convergence', {'weight': 0.6})
('photoshop', 'knapsack problem', {'weight': 0.6})
('photoshop', 'graph algorithm', {'weight': 0.6})
('photoshop', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('photoshop', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('photoshop', 'hidden markov model', {'weight': 0.6})
('photoshop', 'string (computer science)', {'weight': 0.6})
('photoshop', 'bioinformatics', {'weight': 0.6})
('photoshop', 'genetics', {'weight': 0.6})
('photoshop', 'mathematical optimization', {'weight': 0.6})
('photoshop', 'artificial neural networks', {'weight': 0.6})
('photoshop', 'introduction to algorithms', {'weight': 0.6})
('photoshop', 'engineering', {'weight': 0.6})
('photoshop', 'music information retrieval', {'weight': 0.6})
('photoshop', 'beat (music)', {'weight': 0.6})
('photoshop', 'longest common subsequence problem', {'weight': 0.6})
('photoshop', 'convex minimization', {'weight': 0.6})
('photoshop', 'successive parabolic interpolation', {'weight': 0.6})
('photoshop', 'fibonacci sequence', {'weight': 0.6})
('photoshop', 'maximum subarray problem', {'weight': 0.6})
('photoshop', 'convex optimization', {'weight': 0.6})
('photoshop', 'memoization', {'weight': 0.6})
('photoshop', 'richard bellman', {'weight': 0.6})
('photoshop', 'exponential growth', {'weight': 0.6})
('photoshop', 'charles e. leiserson', {'weight': 0.6})
('photoshop', 'checkerboard', {'weight': 0.6})
('photoshop', 'interval scheduling', {'weight': 0.6})
('photoshop', 'chart parser', {'weight': 0.6})
('photoshop', 'travelling salesman problem', {'weight': 0.6})
('photoshop', 'bellman equation', {'weight': 0.6})
('ellipsoid method', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('ellipsoid method', 'photoshop', {'weight': 0.6})
('ellipsoid method', 'sequence alignment', {'weight': 0.6})
('ellipsoid method', 'ellipsoid method', {'weight': 1})
('ellipsoid method', 'chain matrix multiplication', {'weight': 0.6})
('ellipsoid method', 'ieee', {'weight': 0.6})
('ellipsoid method', 'backtracking', {'weight': 0.6})
('ellipsoid method', 'nonlinear conjugate gradient method', {'weight': 0.6})
('ellipsoid method', 'dynamic problem', {'weight': 0.6})
('ellipsoid method', 'trust region', {'weight': 0.6})
('ellipsoid method', 'function (mathematics)', {'weight': 0.6})
('ellipsoid method', 'minimum spanning tree', {'weight': 0.6})
('ellipsoid method', 'context-free grammar', {'weight': 0.6})
('ellipsoid method', 'branch and cut', {'weight': 0.6})
('ellipsoid method', 'state variable', {'weight': 0.6})
('ellipsoid method', 'treewidth', {'weight': 0.6})
('ellipsoid method', 'overlapping subproblem', {'weight': 0.6})
('ellipsoid method', 'refutation table', {'weight': 0.6})
('ellipsoid method', 'cutting-plane method', {'weight': 0.6})
('ellipsoid method', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('ellipsoid method', 'method of undetermined coefficients', {'weight': 0.6})
('ellipsoid method', 'flow network', {'weight': 0.6})
('ellipsoid method', "newton's method in optimization", {'weight': 0.6})
('ellipsoid method', 'matrix chain multiplication', {'weight': 0.6})
('ellipsoid method', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('ellipsoid method', 'dynamic time warping', {'weight': 0.6})
('ellipsoid method', 'dynamic programming language', {'weight': 0.6})
('ellipsoid method', 'call-by-need', {'weight': 0.6})
('ellipsoid method', 'big-o notation', {'weight': 0.6})
('ellipsoid method', 'comparison of optimization software', {'weight': 0.6})
('ellipsoid method', 'quadratic programming', {'weight': 0.6})
('ellipsoid method', 'common lisp', {'weight': 0.6})
('ellipsoid method', 'barrier function', {'weight': 0.6})
('ellipsoid method', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('ellipsoid method', 'gradient descent', {'weight': 0.6})
('ellipsoid method', 'patricia selinger', {'weight': 0.6})
('ellipsoid method', 'discounting', {'weight': 0.6})
('ellipsoid method', 'ronald l. rivest', {'weight': 0.6})
('ellipsoid method', 'iterative method', {'weight': 0.6})
('ellipsoid method', 'limited-memory bfgs', {'weight': 0.6})
('ellipsoid method', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('ellipsoid method', 'longest common substring problem', {'weight': 0.6})
('ellipsoid method', 'clifford stein', {'weight': 0.6})
('ellipsoid method', 'computer chess', {'weight': 0.6})
('ellipsoid method', 'linear programming', {'weight': 0.6})
('ellipsoid method', 'bitonic tour', {'weight': 0.6})
('ellipsoid method', 'linear search problem', {'weight': 0.6})
('ellipsoid method', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('ellipsoid method', 'systems analysis', {'weight': 0.6})
('ellipsoid method', 'capital (economics)', {'weight': 0.6})
('ellipsoid method', 'levenshtein distance', {'weight': 0.6})
('ellipsoid method', 'nonlinear programming', {'weight': 0.6})
('ellipsoid method', 'computational complexity of mathematical operations', {'weight': 0.6})
('ellipsoid method', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('ellipsoid method', 'gradient', {'weight': 0.6})
('ellipsoid method', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('ellipsoid method', 'bulletin of the american mathematical society', {'weight': 0.6})
('ellipsoid method', 'u.s. english', {'weight': 0.6})
('ellipsoid method', 'combinatorial optimization', {'weight': 0.6})
('ellipsoid method', 'heuristic algorithm', {'weight': 0.6})
('ellipsoid method', 'successive linear programming', {'weight': 0.6})
('ellipsoid method', 'optimal substructure', {'weight': 0.6})
('ellipsoid method', 'taylor & francis', {'weight': 0.6})
('ellipsoid method', 'programming language', {'weight': 0.6})
('ellipsoid method', 'mergesort', {'weight': 0.6})
('ellipsoid method', "dijkstra's algorithm", {'weight': 0.6})
('ellipsoid method', 'subgradient method', {'weight': 0.6})
('ellipsoid method', 'call-by-name', {'weight': 0.6})
('ellipsoid method', 'longest increasing subsequence problem', {'weight': 0.6})
('ellipsoid method', 'edward prescott', {'weight': 0.6})
('ellipsoid method', 'exponential time', {'weight': 0.6})
('ellipsoid method', 'principle of optimality', {'weight': 0.6})
('ellipsoid method', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('ellipsoid method', 'mathematical game', {'weight': 0.6})
('ellipsoid method', 'nancy stokey', {'weight': 0.6})
('ellipsoid method', 'approximation algorithm', {'weight': 0.6})
('ellipsoid method', 'discrete-time', {'weight': 0.6})
('ellipsoid method', 'cyk algorithm', {'weight': 0.6})
('ellipsoid method', 'markov decision process', {'weight': 0.6})
('ellipsoid method', "powell's method", {'weight': 0.6})
('ellipsoid method', 'wolfe conditions', {'weight': 0.6})
('ellipsoid method', 'convexity in economics', {'weight': 0.6})
('ellipsoid method', 'transposition table', {'weight': 0.6})
('ellipsoid method', 'economics', {'weight': 0.6})
('ellipsoid method', 'backward induction', {'weight': 0.6})
('ellipsoid method', 'golden section search', {'weight': 0.6})
('ellipsoid method', 'edit distance', {'weight': 0.6})
('ellipsoid method', 'tree structure', {'weight': 0.6})
('ellipsoid method', 'exchange algorithm', {'weight': 0.6})
('ellipsoid method', 'dover publications', {'weight': 0.6})
('ellipsoid method', 'seam carving', {'weight': 0.6})
('ellipsoid method', 'recursive least squares', {'weight': 0.6})
('ellipsoid method', 'metaheuristic', {'weight': 0.6})
('ellipsoid method', 'quasi-newton method', {'weight': 0.6})
('ellipsoid method', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('ellipsoid method', 'robert e. lucas', {'weight': 0.6})
('ellipsoid method', 'non-convexity (economics)', {'weight': 0.6})
('ellipsoid method', 'sr1 formula', {'weight': 0.6})
('ellipsoid method', 'mathematical reviews', {'weight': 0.6})
('ellipsoid method', 'puzzle', {'weight': 0.6})
('ellipsoid method', 'associative array', {'weight': 0.6})
('ellipsoid method', 'shortest path problem', {'weight': 0.6})
('ellipsoid method', 'dynamic algorithm', {'weight': 0.6})
('ellipsoid method', 'augmented lagrangian method', {'weight': 0.6})
('ellipsoid method', 'charles delisi', {'weight': 0.6})
('ellipsoid method', 'greedy algorithm', {'weight': 0.6})
('ellipsoid method', "karmarkar's algorithm", {'weight': 0.6})
('ellipsoid method', 'lattice models', {'weight': 0.6})
('ellipsoid method', 'utility', {'weight': 0.6})
('ellipsoid method', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('ellipsoid method', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('ellipsoid method', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('ellipsoid method', 'international standard book number', {'weight': 0.6})
('ellipsoid method', 'undirected graph', {'weight': 0.6})
('ellipsoid method', 'scheme (programming language)', {'weight': 0.6})
('ellipsoid method', 'rna structure', {'weight': 0.6})
('ellipsoid method', 'hanoi', {'weight': 0.6})
('ellipsoid method', 'perl', {'weight': 0.6})
('ellipsoid method', 'digital object identifier', {'weight': 0.6})
('ellipsoid method', 'sequential quadratic programming', {'weight': 0.6})
('ellipsoid method', "dinic's algorithm", {'weight': 0.6})
('ellipsoid method', 'pseudo-polynomial time', {'weight': 0.6})
('ellipsoid method', 'partition problem', {'weight': 0.6})
('ellipsoid method', 'operations research', {'weight': 0.5})
('ellipsoid method', 'hill climbing', {'weight': 0.6})
('ellipsoid method', 'top-down', {'weight': 0.6})
('ellipsoid method', 'de boor algorithm', {'weight': 0.6})
('ellipsoid method', 'optimization algorithm', {'weight': 0.6})
('ellipsoid method', "kruskal's algorithm", {'weight': 0.6})
('ellipsoid method', 'jacques philippe marie binet', {'weight': 0.6})
('ellipsoid method', 'tabu search', {'weight': 0.6})
('ellipsoid method', 'divide and conquer algorithm', {'weight': 0.6})
('ellipsoid method', "johnson's algorithm", {'weight': 0.6})
('ellipsoid method', 'evolutionary algorithm', {'weight': 0.6})
('ellipsoid method', 'clique-width', {'weight': 0.6})
('ellipsoid method', 'dynamic programming', {'weight': 0.6})
('ellipsoid method', 'subroutine', {'weight': 0.6})
('ellipsoid method', 'simulated annealing', {'weight': 0.6})
('ellipsoid method', 'tower of hanoi', {'weight': 0.6})
('ellipsoid method', 'branch and bound', {'weight': 0.6})
('ellipsoid method', 'engineering', {'weight': 0.6})
('ellipsoid method', 'matroid', {'weight': 0.6})
('ellipsoid method', 'viterbi algorithm', {'weight': 0.6})
('ellipsoid method', "lemke's algorithm", {'weight': 0.6})
('ellipsoid method', 'simplex algorithm', {'weight': 0.6})
('ellipsoid method', 'stochastic programming', {'weight': 0.6})
('ellipsoid method', 'hessian matrix', {'weight': 0.6})
('ellipsoid method', 'ibm system r', {'weight': 0.6})
('ellipsoid method', 'penalty method', {'weight': 0.6})
('ellipsoid method', 'prolog', {'weight': 0.6})
('ellipsoid method', 'time-invariant system', {'weight': 0.6})
('ellipsoid method', 'criss-cross algorithm', {'weight': 0.6})
('ellipsoid method', 'revised simplex algorithm', {'weight': 0.6})
('ellipsoid method', 'the mathematical association of america', {'weight': 0.6})
('ellipsoid method', 'line search', {'weight': 0.6})
('ellipsoid method', 'j (programming language)', {'weight': 0.6})
('ellipsoid method', 'word wrap', {'weight': 0.6})
('ellipsoid method', 'subset sum problem', {'weight': 0.6})
('ellipsoid method', 'integer programming', {'weight': 0.6})
('ellipsoid method', 'nucleosome', {'weight': 0.6})
('ellipsoid method', 'earley algorithm', {'weight': 0.6})
('ellipsoid method', 'referential transparency (computer science)', {'weight': 0.6})
('ellipsoid method', 'recursion', {'weight': 0.6})
('ellipsoid method', 'mathematica', {'weight': 0.6})
('ellipsoid method', 'quicksort', {'weight': 0.6})
('ellipsoid method', 'recursion (computer science)', {'weight': 0.6})
('ellipsoid method', 'checkerboard', {'weight': 0.6})
('ellipsoid method', 'computer science', {'weight': 0.6})
('ellipsoid method', 'brute-force search', {'weight': 0.6})
('ellipsoid method', 'mathematics', {'weight': 0.6})
('ellipsoid method', 'depth-first search', {'weight': 0.6})
('ellipsoid method', 'top-down and bottom-up design', {'weight': 0.6})
('ellipsoid method', 'correspondence problem', {'weight': 0.6})
('ellipsoid method', 'transcription factor', {'weight': 0.6})
('ellipsoid method', 'tree decomposition', {'weight': 0.6})
('ellipsoid method', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('ellipsoid method', 'structural alignment', {'weight': 0.6})
('ellipsoid method', 'local convergence', {'weight': 0.6})
('ellipsoid method', 'knapsack problem', {'weight': 0.6})
('ellipsoid method', 'graph algorithm', {'weight': 0.6})
('ellipsoid method', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('ellipsoid method', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('ellipsoid method', 'hidden markov model', {'weight': 0.6})
('ellipsoid method', 'string (computer science)', {'weight': 0.6})
('ellipsoid method', 'bioinformatics', {'weight': 0.6})
('ellipsoid method', 'genetics', {'weight': 0.6})
('ellipsoid method', 'mathematical optimization', {'weight': 0.6})
('ellipsoid method', 'local search (optimization)', {'weight': 0.6})
('ellipsoid method', 'artificial neural networks', {'weight': 0.6})
('ellipsoid method', 'introduction to algorithms', {'weight': 0.6})
('ellipsoid method', 'thomas h. cormen', {'weight': 0.6})
('ellipsoid method', 'music information retrieval', {'weight': 0.6})
('ellipsoid method', 'beat (music)', {'weight': 0.6})
('ellipsoid method', 'longest common subsequence problem', {'weight': 0.6})
('ellipsoid method', 'convex minimization', {'weight': 0.6})
('ellipsoid method', 'successive parabolic interpolation', {'weight': 0.6})
('ellipsoid method', 'fibonacci sequence', {'weight': 0.6})
('ellipsoid method', 'maximum subarray problem', {'weight': 0.6})
('ellipsoid method', 'convex optimization', {'weight': 0.6})
('ellipsoid method', 'memoization', {'weight': 0.6})
('ellipsoid method', 'richard bellman', {'weight': 0.6})
('ellipsoid method', 'exponential growth', {'weight': 0.6})
('ellipsoid method', 'charles e. leiserson', {'weight': 0.6})
('ellipsoid method', 'charles erwin wilson', {'weight': 0.6})
('ellipsoid method', 'interval scheduling', {'weight': 0.6})
('ellipsoid method', 'chart parser', {'weight': 0.6})
('ellipsoid method', 'travelling salesman problem', {'weight': 0.6})
('ellipsoid method', 'bellman equation', {'weight': 0.6})
('chain matrix multiplication', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('chain matrix multiplication', 'photoshop', {'weight': 0.6})
('chain matrix multiplication', 'sequence alignment', {'weight': 0.6})
('chain matrix multiplication', 'flow network', {'weight': 0.6})
('chain matrix multiplication', 'charles erwin wilson', {'weight': 0.6})
('chain matrix multiplication', 'ellipsoid method', {'weight': 0.6})
('chain matrix multiplication', 'chain matrix multiplication', {'weight': 1})
('chain matrix multiplication', 'ieee', {'weight': 0.6})
('chain matrix multiplication', 'backtracking', {'weight': 0.6})
('chain matrix multiplication', 'nonlinear conjugate gradient method', {'weight': 0.6})
('chain matrix multiplication', 'dynamic problem', {'weight': 0.6})
('chain matrix multiplication', 'trust region', {'weight': 0.6})
('chain matrix multiplication', 'function (mathematics)', {'weight': 0.6})
('chain matrix multiplication', 'minimum spanning tree', {'weight': 0.6})
('chain matrix multiplication', 'context-free grammar', {'weight': 0.6})
('chain matrix multiplication', 'branch and cut', {'weight': 0.6})
('chain matrix multiplication', 'state variable', {'weight': 0.6})
('chain matrix multiplication', 'treewidth', {'weight': 0.6})
('chain matrix multiplication', 'optimization algorithms and methods', {'weight': 0.5})
('chain matrix multiplication', 'overlapping subproblem', {'weight': 0.6})
('chain matrix multiplication', 'taylor & francis', {'weight': 0.6})
('chain matrix multiplication', 'cutting-plane method', {'weight': 0.6})
('chain matrix multiplication', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('chain matrix multiplication', 'method of undetermined coefficients', {'weight': 0.6})
('chain matrix multiplication', 'combinatorial optimization', {'weight': 0.6})
('chain matrix multiplication', "newton's method in optimization", {'weight': 0.6})
('chain matrix multiplication', 'matrices', {'weight': 0.5})
('chain matrix multiplication', 'matrix chain multiplication', {'weight': 0.6})
('chain matrix multiplication', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('chain matrix multiplication', 'dynamic time warping', {'weight': 0.6})
('chain matrix multiplication', 'dynamic programming language', {'weight': 0.6})
('chain matrix multiplication', 'call-by-need', {'weight': 0.6})
('chain matrix multiplication', 'big-o notation', {'weight': 0.6})
('chain matrix multiplication', 'comparison of optimization software', {'weight': 0.6})
('chain matrix multiplication', 'quadratic programming', {'weight': 0.6})
('chain matrix multiplication', 'common lisp', {'weight': 0.6})
('chain matrix multiplication', 'barrier function', {'weight': 0.6})
('chain matrix multiplication', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('chain matrix multiplication', 'gradient descent', {'weight': 0.6})
('chain matrix multiplication', 'patricia selinger', {'weight': 0.6})
('chain matrix multiplication', 'discounting', {'weight': 0.6})
('chain matrix multiplication', 'ronald l. rivest', {'weight': 0.6})
('chain matrix multiplication', 'iterative method', {'weight': 0.6})
('chain matrix multiplication', 'limited-memory bfgs', {'weight': 0.6})
('chain matrix multiplication', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('chain matrix multiplication', 'longest common substring problem', {'weight': 0.6})
('chain matrix multiplication', 'clifford stein', {'weight': 0.6})
('chain matrix multiplication', 'computer chess', {'weight': 0.6})
('chain matrix multiplication', 'linear programming', {'weight': 0.6})
('chain matrix multiplication', 'bitonic tour', {'weight': 0.6})
('chain matrix multiplication', 'linear search problem', {'weight': 0.6})
('chain matrix multiplication', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('chain matrix multiplication', 'systems analysis', {'weight': 0.6})
('chain matrix multiplication', 'capital (economics)', {'weight': 0.6})
('chain matrix multiplication', 'levenshtein distance', {'weight': 0.6})
('chain matrix multiplication', 'nonlinear programming', {'weight': 0.6})
('chain matrix multiplication', 'computational complexity of mathematical operations', {'weight': 0.6})
('chain matrix multiplication', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('chain matrix multiplication', 'gradient', {'weight': 0.6})
('chain matrix multiplication', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('chain matrix multiplication', 'bulletin of the american mathematical society', {'weight': 0.6})
('chain matrix multiplication', 'u.s. english', {'weight': 0.6})
('chain matrix multiplication', 'refutation table', {'weight': 0.6})
('chain matrix multiplication', 'heuristic algorithm', {'weight': 0.6})
('chain matrix multiplication', 'successive linear programming', {'weight': 0.6})
('chain matrix multiplication', 'optimal substructure', {'weight': 0.6})
('chain matrix multiplication', 'programming language', {'weight': 0.6})
('chain matrix multiplication', 'mergesort', {'weight': 0.6})
('chain matrix multiplication', "dijkstra's algorithm", {'weight': 0.6})
('chain matrix multiplication', 'subgradient method', {'weight': 0.6})
('chain matrix multiplication', 'call-by-name', {'weight': 0.6})
('chain matrix multiplication', 'longest increasing subsequence problem', {'weight': 0.6})
('chain matrix multiplication', 'edward prescott', {'weight': 0.6})
('chain matrix multiplication', 'exponential time', {'weight': 0.6})
('chain matrix multiplication', 'principle of optimality', {'weight': 0.6})
('chain matrix multiplication', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('chain matrix multiplication', 'mathematical game', {'weight': 0.6})
('chain matrix multiplication', 'nancy stokey', {'weight': 0.6})
('chain matrix multiplication', 'approximation algorithm', {'weight': 0.6})
('chain matrix multiplication', 'discrete-time', {'weight': 0.6})
('chain matrix multiplication', 'cyk algorithm', {'weight': 0.6})
('chain matrix multiplication', 'markov decision process', {'weight': 0.6})
('chain matrix multiplication', "powell's method", {'weight': 0.6})
('chain matrix multiplication', 'wolfe conditions', {'weight': 0.6})
('chain matrix multiplication', 'convexity in economics', {'weight': 0.6})
('chain matrix multiplication', 'transposition table', {'weight': 0.6})
('chain matrix multiplication', 'economics', {'weight': 0.6})
('chain matrix multiplication', 'backward induction', {'weight': 0.6})
('chain matrix multiplication', 'golden section search', {'weight': 0.6})
('chain matrix multiplication', 'edit distance', {'weight': 0.6})
('chain matrix multiplication', 'tree structure', {'weight': 0.6})
('chain matrix multiplication', 'exchange algorithm', {'weight': 0.6})
('chain matrix multiplication', 'dover publications', {'weight': 0.6})
('chain matrix multiplication', 'seam carving', {'weight': 0.6})
('chain matrix multiplication', 'recursive least squares', {'weight': 0.6})
('chain matrix multiplication', 'metaheuristic', {'weight': 0.6})
('chain matrix multiplication', 'quasi-newton method', {'weight': 0.6})
('chain matrix multiplication', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('chain matrix multiplication', 'robert e. lucas', {'weight': 0.6})
('chain matrix multiplication', 'non-convexity (economics)', {'weight': 0.6})
('chain matrix multiplication', 'sr1 formula', {'weight': 0.6})
('chain matrix multiplication', 'mathematical reviews', {'weight': 0.6})
('chain matrix multiplication', 'puzzle', {'weight': 0.6})
('chain matrix multiplication', 'associative array', {'weight': 0.6})
('chain matrix multiplication', 'shortest path problem', {'weight': 0.6})
('chain matrix multiplication', 'dynamic algorithm', {'weight': 0.6})
('chain matrix multiplication', 'augmented lagrangian method', {'weight': 0.6})
('chain matrix multiplication', 'charles delisi', {'weight': 0.6})
('chain matrix multiplication', 'greedy algorithm', {'weight': 0.6})
('chain matrix multiplication', "karmarkar's algorithm", {'weight': 0.6})
('chain matrix multiplication', 'lattice models', {'weight': 0.6})
('chain matrix multiplication', 'utility', {'weight': 0.6})
('chain matrix multiplication', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('chain matrix multiplication', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('chain matrix multiplication', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('chain matrix multiplication', 'international standard book number', {'weight': 0.6})
('chain matrix multiplication', 'undirected graph', {'weight': 0.6})
('chain matrix multiplication', 'scheme (programming language)', {'weight': 0.6})
('chain matrix multiplication', 'rna structure', {'weight': 0.6})
('chain matrix multiplication', 'hanoi', {'weight': 0.6})
('chain matrix multiplication', 'perl', {'weight': 0.6})
('chain matrix multiplication', 'digital object identifier', {'weight': 0.6})
('chain matrix multiplication', 'sequential quadratic programming', {'weight': 0.6})
('chain matrix multiplication', "dinic's algorithm", {'weight': 0.6})
('chain matrix multiplication', 'pseudo-polynomial time', {'weight': 0.6})
('chain matrix multiplication', 'partition problem', {'weight': 0.6})
('chain matrix multiplication', 'stochastic programming', {'weight': 0.6})
('chain matrix multiplication', 'hill climbing', {'weight': 0.6})
('chain matrix multiplication', 'top-down', {'weight': 0.6})
('chain matrix multiplication', 'de boor algorithm', {'weight': 0.6})
('chain matrix multiplication', 'optimization algorithm', {'weight': 0.6})
('chain matrix multiplication', "kruskal's algorithm", {'weight': 0.6})
('chain matrix multiplication', 'jacques philippe marie binet', {'weight': 0.6})
('chain matrix multiplication', 'tabu search', {'weight': 0.6})
('chain matrix multiplication', 'divide and conquer algorithm', {'weight': 0.6})
('chain matrix multiplication', "johnson's algorithm", {'weight': 0.6})
('chain matrix multiplication', 'evolutionary algorithm', {'weight': 0.6})
('chain matrix multiplication', 'clique-width', {'weight': 0.6})
('chain matrix multiplication', 'dynamic programming', {'weight': 0.6})
('chain matrix multiplication', 'subroutine', {'weight': 0.6})
('chain matrix multiplication', 'simulated annealing', {'weight': 0.6})
('chain matrix multiplication', 'tower of hanoi', {'weight': 0.6})
('chain matrix multiplication', 'branch and bound', {'weight': 0.6})
('chain matrix multiplication', 'engineering', {'weight': 0.6})
('chain matrix multiplication', 'matroid', {'weight': 0.6})
('chain matrix multiplication', 'viterbi algorithm', {'weight': 0.6})
('chain matrix multiplication', "lemke's algorithm", {'weight': 0.6})
('chain matrix multiplication', 'simplex algorithm', {'weight': 0.6})
('chain matrix multiplication', 'local search (optimization)', {'weight': 0.6})
('chain matrix multiplication', 'hessian matrix', {'weight': 0.6})
('chain matrix multiplication', 'ibm system r', {'weight': 0.6})
('chain matrix multiplication', 'penalty method', {'weight': 0.6})
('chain matrix multiplication', 'prolog', {'weight': 0.6})
('chain matrix multiplication', 'time-invariant system', {'weight': 0.6})
('chain matrix multiplication', 'criss-cross algorithm', {'weight': 0.6})
('chain matrix multiplication', 'revised simplex algorithm', {'weight': 0.6})
('chain matrix multiplication', 'the mathematical association of america', {'weight': 0.6})
('chain matrix multiplication', 'line search', {'weight': 0.6})
('chain matrix multiplication', 'j (programming language)', {'weight': 0.6})
('chain matrix multiplication', 'word wrap', {'weight': 0.6})
('chain matrix multiplication', 'subset sum problem', {'weight': 0.6})
('chain matrix multiplication', 'integer programming', {'weight': 0.6})
('chain matrix multiplication', 'nucleosome', {'weight': 0.6})
('chain matrix multiplication', 'earley algorithm', {'weight': 0.6})
('chain matrix multiplication', 'referential transparency (computer science)', {'weight': 0.6})
('chain matrix multiplication', 'recursion', {'weight': 0.6})
('chain matrix multiplication', 'mathematica', {'weight': 0.6})
('chain matrix multiplication', 'quicksort', {'weight': 0.6})
('chain matrix multiplication', 'recursion (computer science)', {'weight': 0.6})
('chain matrix multiplication', 'computer science', {'weight': 0.6})
('chain matrix multiplication', 'brute-force search', {'weight': 0.6})
('chain matrix multiplication', 'mathematics', {'weight': 0.6})
('chain matrix multiplication', 'depth-first search', {'weight': 0.6})
('chain matrix multiplication', 'top-down and bottom-up design', {'weight': 0.6})
('chain matrix multiplication', 'correspondence problem', {'weight': 0.6})
('chain matrix multiplication', 'transcription factor', {'weight': 0.6})
('chain matrix multiplication', 'tree decomposition', {'weight': 0.6})
('chain matrix multiplication', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('chain matrix multiplication', 'structural alignment', {'weight': 0.6})
('chain matrix multiplication', 'local convergence', {'weight': 0.6})
('chain matrix multiplication', 'knapsack problem', {'weight': 0.6})
('chain matrix multiplication', 'graph algorithm', {'weight': 0.6})
('chain matrix multiplication', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('chain matrix multiplication', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('chain matrix multiplication', 'hidden markov model', {'weight': 0.6})
('chain matrix multiplication', 'string (computer science)', {'weight': 0.6})
('chain matrix multiplication', 'bioinformatics', {'weight': 0.6})
('chain matrix multiplication', 'genetics', {'weight': 0.6})
('chain matrix multiplication', 'mathematical optimization', {'weight': 0.6})
('chain matrix multiplication', 'artificial neural networks', {'weight': 0.6})
('chain matrix multiplication', 'introduction to algorithms', {'weight': 0.6})
('chain matrix multiplication', 'thomas h. cormen', {'weight': 0.6})
('chain matrix multiplication', 'music information retrieval', {'weight': 0.6})
('chain matrix multiplication', 'beat (music)', {'weight': 0.6})
('chain matrix multiplication', 'longest common subsequence problem', {'weight': 0.6})
('chain matrix multiplication', 'convex minimization', {'weight': 0.6})
('chain matrix multiplication', 'successive parabolic interpolation', {'weight': 0.6})
('chain matrix multiplication', 'fibonacci sequence', {'weight': 0.6})
('chain matrix multiplication', 'maximum subarray problem', {'weight': 0.6})
('chain matrix multiplication', 'convex optimization', {'weight': 0.6})
('chain matrix multiplication', 'memoization', {'weight': 0.6})
('chain matrix multiplication', 'richard bellman', {'weight': 0.6})
('chain matrix multiplication', 'exponential growth', {'weight': 0.6})
('chain matrix multiplication', 'charles e. leiserson', {'weight': 0.6})
('chain matrix multiplication', 'checkerboard', {'weight': 0.6})
('chain matrix multiplication', 'interval scheduling', {'weight': 0.6})
('chain matrix multiplication', 'chart parser', {'weight': 0.6})
('chain matrix multiplication', 'travelling salesman problem', {'weight': 0.6})
('chain matrix multiplication', 'bellman equation', {'weight': 0.6})
('ieee', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('ieee', 'photoshop', {'weight': 0.6})
('ieee', 'sequence alignment', {'weight': 0.6})
('ieee', 'flow network', {'weight': 0.6})
('ieee', 'ieee cloud computing', {'weight': 0.7})
('ieee', 'ellipsoid method', {'weight': 0.6})
('ieee', 'chain matrix multiplication', {'weight': 0.6})
('ieee', 'ieee', {'weight': 1})
('ieee', 'backtracking', {'weight': 0.6})
('ieee', 'certified software development professional', {'weight': 0.7})
('ieee', 'nonlinear conjugate gradient method', {'weight': 0.6})
('ieee', 'dynamic problem', {'weight': 0.6})
('ieee', 'bibliographic database providers', {'weight': 0.5})
('ieee', 'trust region', {'weight': 0.6})
('ieee', 'institute of electrical and electronics engineers', {'weight': 0.5})
('ieee', 'minimum spanning tree', {'weight': 0.6})
('ieee', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('ieee', 'context-free grammar', {'weight': 0.6})
('ieee', 'branch and cut', {'weight': 0.6})
('ieee', 'state variable', {'weight': 0.6})
('ieee', 'treewidth', {'weight': 0.6})
('ieee', 'overlapping subproblem', {'weight': 0.6})
('ieee', 'taylor & francis', {'weight': 0.6})
('ieee', 'cutting-plane method', {'weight': 0.6})
('ieee', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('ieee', 'charles erwin wilson', {'weight': 0.6})
('ieee', 'combinatorial optimization', {'weight': 0.6})
('ieee', "newton's method in optimization", {'weight': 0.6})
('ieee', 'matrix chain multiplication', {'weight': 0.6})
('ieee', 'professional associations', {'weight': 0.5})
('ieee', 'dynamic time warping', {'weight': 0.6})
('ieee', 'dynamic programming language', {'weight': 0.6})
('ieee', 'call-by-need', {'weight': 0.6})
('ieee', 'big-o notation', {'weight': 0.6})
('ieee', 'comparison of optimization software', {'weight': 0.6})
('ieee', 'quadratic programming', {'weight': 0.6})
('ieee', 'common lisp', {'weight': 0.6})
('ieee', 'barrier function', {'weight': 0.6})
('ieee', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('ieee', 'gradient descent', {'weight': 0.6})
('ieee', 'patricia selinger', {'weight': 0.6})
('ieee', 'discounting', {'weight': 0.6})
('ieee', 'ronald l. rivest', {'weight': 0.6})
('ieee', 'iterative method', {'weight': 0.6})
('ieee', 'association of scientists, developers and faculties', {'weight': 0.7})
('ieee', 'limited-memory bfgs', {'weight': 0.6})
('ieee', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('ieee', 'longest common substring problem', {'weight': 0.6})
('ieee', 'clifford stein', {'weight': 0.6})
('ieee', 'american engineering organizations', {'weight': 0.5})
('ieee', 'computer chess', {'weight': 0.6})
('ieee', 'linear programming', {'weight': 0.6})
('ieee', 'bitonic tour', {'weight': 0.6})
('ieee', 'linear search problem', {'weight': 0.6})
('ieee', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('ieee', 'systems analysis', {'weight': 0.6})
('ieee', 'institution of engineering and technology', {'weight': 0.7})
('ieee', 'capital (economics)', {'weight': 0.6})
('ieee', 'levenshtein distance', {'weight': 0.6})
('ieee', 'nonlinear programming', {'weight': 0.6})
('ieee', 'computational complexity of mathematical operations', {'weight': 0.6})
('ieee', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('ieee', 'gradient', {'weight': 0.6})
('ieee', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('ieee', 'bulletin of the american mathematical society', {'weight': 0.6})
('ieee', 'u.s. english', {'weight': 0.6})
('ieee', 'refutation table', {'weight': 0.6})
('ieee', 'heuristic algorithm', {'weight': 0.6})
('ieee', 'successive linear programming', {'weight': 0.6})
('ieee', 'optimal substructure', {'weight': 0.6})
('ieee', 'programming language', {'weight': 0.6})
('ieee', 'mergesort', {'weight': 0.6})
('ieee', 'simulated annealing', {'weight': 0.6})
('ieee', 'subgradient method', {'weight': 0.6})
('ieee', 'call-by-name', {'weight': 0.6})
('ieee', 'longest increasing subsequence problem', {'weight': 0.6})
('ieee', 'edward prescott', {'weight': 0.6})
('ieee', 'exponential time', {'weight': 0.6})
('ieee', 'principle of optimality', {'weight': 0.6})
('ieee', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('ieee', 'mathematical game', {'weight': 0.6})
('ieee', 'nancy stokey', {'weight': 0.6})
('ieee', 'approximation algorithm', {'weight': 0.6})
('ieee', 'discrete-time', {'weight': 0.6})
('ieee', 'cyk algorithm', {'weight': 0.6})
('ieee', 'markov decision process', {'weight': 0.6})
('ieee', 'method of undetermined coefficients', {'weight': 0.6})
('ieee', "powell's method", {'weight': 0.6})
('ieee', 'wolfe conditions', {'weight': 0.6})
('ieee', 'convexity in economics', {'weight': 0.6})
('ieee', 'transposition table', {'weight': 0.6})
('ieee', 'ieee computer society', {'weight': 0.7})
('ieee', 'economics', {'weight': 0.6})
('ieee', 'backward induction', {'weight': 0.6})
('ieee', 'golden section search', {'weight': 0.6})
('ieee', 'edit distance', {'weight': 0.6})
('ieee', 'tree structure', {'weight': 0.6})
('ieee', 'exchange algorithm', {'weight': 0.6})
('ieee', 'dover publications', {'weight': 0.6})
('ieee', 'seam carving', {'weight': 0.6})
('ieee', 'recursive least squares', {'weight': 0.6})
('ieee', 'metaheuristic', {'weight': 0.6})
('ieee', 'quasi-newton method', {'weight': 0.6})
('ieee', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('ieee', 'robert e. lucas', {'weight': 0.6})
('ieee', 'non-convexity (economics)', {'weight': 0.6})
('ieee', 'sr1 formula', {'weight': 0.6})
('ieee', 'mathematical reviews', {'weight': 0.6})
('ieee', 'puzzle', {'weight': 0.6})
('ieee', 'associative array', {'weight': 0.6})
('ieee', 'nucleosome', {'weight': 0.6})
('ieee', 'shortest path problem', {'weight': 0.6})
('ieee', 'dynamic algorithm', {'weight': 0.6})
('ieee', 'augmented lagrangian method', {'weight': 0.6})
('ieee', 'charles delisi', {'weight': 0.6})
('ieee', 'greedy algorithm', {'weight': 0.6})
('ieee', "karmarkar's algorithm", {'weight': 0.6})
('ieee', 'eta kappa nu', {'weight': 0.7})
('ieee', 'lattice models', {'weight': 0.6})
('ieee', 'utility', {'weight': 0.6})
('ieee', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('ieee', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('ieee', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('ieee', 'international standard book number', {'weight': 0.6})
('ieee', 'undirected graph', {'weight': 0.6})
('ieee', 'scheme (programming language)', {'weight': 0.6})
('ieee', 'rna structure', {'weight': 0.6})
('ieee', 'hanoi', {'weight': 0.6})
('ieee', 'perl', {'weight': 0.6})
('ieee', 'digital object identifier', {'weight': 0.6})
('ieee', 'sequential quadratic programming', {'weight': 0.6})
('ieee', "dinic's algorithm", {'weight': 0.6})
('ieee', 'pseudo-polynomial time', {'weight': 0.6})
('ieee', 'partition problem', {'weight': 0.6})
('ieee', 'stochastic programming', {'weight': 0.6})
('ieee', 'hill climbing', {'weight': 0.6})
('ieee', 'top-down', {'weight': 0.6})
('ieee', 'de boor algorithm', {'weight': 0.6})
('ieee', 'engineering societies', {'weight': 0.5})
('ieee', "kruskal's algorithm", {'weight': 0.6})
('ieee', "ieee's sanctions against iranian scientists", {'weight': 0.7})
('ieee', 'jacques philippe marie binet', {'weight': 0.6})
('ieee', 'tabu search', {'weight': 0.6})
('ieee', 'divide and conquer algorithm', {'weight': 0.6})
('ieee', "johnson's algorithm", {'weight': 0.6})
('ieee', 'evolutionary algorithm', {'weight': 0.6})
('ieee', 'clique-width', {'weight': 0.6})
('ieee', 'dynamic programming', {'weight': 0.6})
('ieee', 'subroutine', {'weight': 0.6})
('ieee', 'tower of hanoi', {'weight': 0.6})
('ieee', 'branch and bound', {'weight': 0.6})
('ieee', 'j (programming language)', {'weight': 0.6})
('ieee', 'matroid', {'weight': 0.6})
('ieee', 'viterbi algorithm', {'weight': 0.6})
('ieee', "lemke's algorithm", {'weight': 0.6})
('ieee', 'organizations established in 1963', {'weight': 0.5})
('ieee', 'simplex algorithm', {'weight': 0.6})
('ieee', 'local search (optimization)', {'weight': 0.6})
('ieee', 'hessian matrix', {'weight': 0.6})
('ieee', 'ibm system r', {'weight': 0.6})
('ieee', 'penalty method', {'weight': 0.6})
('ieee', 'standards organizations', {'weight': 0.5})
('ieee', 'prolog', {'weight': 0.6})
('ieee', 'time-invariant system', {'weight': 0.6})
('ieee', 'criss-cross algorithm', {'weight': 0.6})
('ieee', 'revised simplex algorithm', {'weight': 0.6})
('ieee', 'the mathematical association of america', {'weight': 0.6})
('ieee', 'line search', {'weight': 0.6})
('ieee', 'engineering', {'weight': 0.6})
('ieee', 'word wrap', {'weight': 0.6})
('ieee', 'how many scigen papers in computer science?', {'weight': 0.7})
('ieee', 'function (mathematics)', {'weight': 0.6})
('ieee', 'subset sum problem', {'weight': 0.6})
('ieee', 'integer programming', {'weight': 0.6})
('ieee', 'international nongovernmental organizations', {'weight': 0.5})
('ieee', 'earley algorithm', {'weight': 0.6})
('ieee', 'referential transparency (computer science)', {'weight': 0.6})
('ieee', 'recursion', {'weight': 0.6})
('ieee', 'mathematica', {'weight': 0.6})
('ieee', 'quicksort', {'weight': 0.6})
('ieee', 'recursion (computer science)', {'weight': 0.6})
('ieee', 'checkerboard', {'weight': 0.6})
('ieee', 'computer science', {'weight': 0.6})
('ieee', 'brute-force search', {'weight': 0.6})
('ieee', 'mathematics', {'weight': 0.6})
('ieee', 'depth-first search', {'weight': 0.6})
('ieee', 'optimization algorithm', {'weight': 0.6})
('ieee', 'top-down and bottom-up design', {'weight': 0.6})
('ieee', 'correspondence problem', {'weight': 0.6})
('ieee', 'transcription factor', {'weight': 0.6})
('ieee', '1963 establishments in the united states', {'weight': 0.5})
('ieee', 'tree decomposition', {'weight': 0.6})
('ieee', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('ieee', 'structural alignment', {'weight': 0.6})
('ieee', 'local convergence', {'weight': 0.6})
('ieee', 'knapsack problem', {'weight': 0.6})
('ieee', 'graph algorithm', {'weight': 0.6})
('ieee', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('ieee', 'computer science-related professional associations', {'weight': 0.5})
('ieee', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('ieee', 'hidden markov model', {'weight': 0.6})
('ieee', 'string (computer science)', {'weight': 0.6})
('ieee', 'bioinformatics', {'weight': 0.6})
('ieee', 'genetics', {'weight': 0.6})
('ieee', 'mathematical optimization', {'weight': 0.6})
('ieee', 'artificial neural networks', {'weight': 0.6})
('ieee', 'introduction to algorithms', {'weight': 0.6})
('ieee', 'thomas h. cormen', {'weight': 0.6})
('ieee', 'music information retrieval', {'weight': 0.6})
('ieee', 'beat (music)', {'weight': 0.6})
('ieee', 'longest common subsequence problem', {'weight': 0.6})
('ieee', 'convex minimization', {'weight': 0.6})
('ieee', 'successive parabolic interpolation', {'weight': 0.6})
('ieee', 'fibonacci sequence', {'weight': 0.6})
('ieee', 'maximum subarray problem', {'weight': 0.6})
('ieee', 'convex optimization', {'weight': 0.6})
('ieee', 'memoization', {'weight': 0.6})
('ieee', 'richard bellman', {'weight': 0.6})
('ieee', 'exponential growth', {'weight': 0.6})
('ieee', 'charles e. leiserson', {'weight': 0.6})
('ieee', "dijkstra's algorithm", {'weight': 0.6})
('ieee', 'interval scheduling', {'weight': 0.6})
('ieee', 'chart parser', {'weight': 0.6})
('ieee', 'travelling salesman problem', {'weight': 0.6})
('ieee', 'bellman equation', {'weight': 0.6})
('mathematical reviews', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('mathematical reviews', 'photoshop', {'weight': 0.6})
('mathematical reviews', 'sequence alignment', {'weight': 0.6})
('mathematical reviews', 'mathematical databases', {'weight': 0.5})
('mathematical reviews', 'flow network', {'weight': 0.6})
('mathematical reviews', 'current index to statistics', {'weight': 0.7})
('mathematical reviews', 'ellipsoid method', {'weight': 0.6})
('mathematical reviews', 'chain matrix multiplication', {'weight': 0.6})
('mathematical reviews', 'ieee', {'weight': 0.6})
('mathematical reviews', 'backtracking', {'weight': 0.6})
('mathematical reviews', 'nonlinear conjugate gradient method', {'weight': 0.6})
('mathematical reviews', 'dynamic problem', {'weight': 0.6})
('mathematical reviews', 'trust region', {'weight': 0.6})
('mathematical reviews', 'function (mathematics)', {'weight': 0.6})
('mathematical reviews', 'minimum spanning tree', {'weight': 0.6})
('mathematical reviews', 'publications established in 1940', {'weight': 0.5})
('mathematical reviews', 'context-free grammar', {'weight': 0.6})
('mathematical reviews', 'branch and cut', {'weight': 0.6})
('mathematical reviews', 'state variable', {'weight': 0.6})
('mathematical reviews', 'treewidth', {'weight': 0.6})
('mathematical reviews', 'overlapping subproblem', {'weight': 0.6})
('mathematical reviews', 'taylor & francis', {'weight': 0.6})
('mathematical reviews', 'cutting-plane method', {'weight': 0.6})
('mathematical reviews', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('mathematical reviews', 'method of undetermined coefficients', {'weight': 0.6})
('mathematical reviews', 'combinatorial optimization', {'weight': 0.6})
('mathematical reviews', "newton's method in optimization", {'weight': 0.6})
('mathematical reviews', 'matrix chain multiplication', {'weight': 0.6})
('mathematical reviews', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('mathematical reviews', 'dynamic time warping', {'weight': 0.6})
('mathematical reviews', 'dynamic programming language', {'weight': 0.6})
('mathematical reviews', 'call-by-need', {'weight': 0.6})
('mathematical reviews', 'big-o notation', {'weight': 0.6})
('mathematical reviews', 'referativnyi zhurnal', {'weight': 0.7})
('mathematical reviews', 'comparison of optimization software', {'weight': 0.6})
('mathematical reviews', 'quadratic programming', {'weight': 0.6})
('mathematical reviews', 'common lisp', {'weight': 0.6})
('mathematical reviews', 'barrier function', {'weight': 0.6})
('mathematical reviews', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('mathematical reviews', 'gradient descent', {'weight': 0.6})
('mathematical reviews', 'patricia selinger', {'weight': 0.6})
('mathematical reviews', 'discounting', {'weight': 0.6})
('mathematical reviews', 'ronald l. rivest', {'weight': 0.6})
('mathematical reviews', 'iterative method', {'weight': 0.6})
('mathematical reviews', 'limited-memory bfgs', {'weight': 0.6})
('mathematical reviews', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('mathematical reviews', 'longest common substring problem', {'weight': 0.6})
('mathematical reviews', 'clifford stein', {'weight': 0.6})
('mathematical reviews', 'computer chess', {'weight': 0.6})
('mathematical reviews', 'linear programming', {'weight': 0.6})
('mathematical reviews', 'bitonic tour', {'weight': 0.6})
('mathematical reviews', 'linear search problem', {'weight': 0.6})
('mathematical reviews', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('mathematical reviews', 'systems analysis', {'weight': 0.6})
('mathematical reviews', 'capital (economics)', {'weight': 0.6})
('mathematical reviews', 'levenshtein distance', {'weight': 0.6})
('mathematical reviews', 'nonlinear programming', {'weight': 0.6})
('mathematical reviews', 'soviet union', {'weight': 0.7})
('mathematical reviews', 'computational complexity of mathematical operations', {'weight': 0.6})
('mathematical reviews', 'web of science', {'weight': 0.7})
('mathematical reviews', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('mathematical reviews', 'gradient', {'weight': 0.6})
('mathematical reviews', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('mathematical reviews', 'bulletin of the american mathematical society', {'weight': 0.6})
('mathematical reviews', 'bibliographic databases', {'weight': 0.5})
('mathematical reviews', 'u.s. english', {'weight': 0.6})
('mathematical reviews', 'refutation table', {'weight': 0.6})
('mathematical reviews', 'heuristic algorithm', {'weight': 0.6})
('mathematical reviews', 'successive linear programming', {'weight': 0.6})
('mathematical reviews', 'optimal substructure', {'weight': 0.6})
('mathematical reviews', 'programming language', {'weight': 0.6})
('mathematical reviews', 'mergesort', {'weight': 0.6})
('mathematical reviews', "dijkstra's algorithm", {'weight': 0.6})
('mathematical reviews', 'subgradient method', {'weight': 0.6})
('mathematical reviews', 'call-by-name', {'weight': 0.6})
('mathematical reviews', 'longest increasing subsequence problem', {'weight': 0.6})
('mathematical reviews', 'edward prescott', {'weight': 0.6})
('mathematical reviews', 'exponential time', {'weight': 0.6})
('mathematical reviews', 'principle of optimality', {'weight': 0.6})
('mathematical reviews', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('mathematical reviews', 'mathematical game', {'weight': 0.6})
('mathematical reviews', 'nancy stokey', {'weight': 0.6})
('mathematical reviews', 'approximation algorithm', {'weight': 0.6})
('mathematical reviews', 'discrete-time', {'weight': 0.6})
('mathematical reviews', 'cyk algorithm', {'weight': 0.6})
('mathematical reviews', 'bibliographic indexes', {'weight': 0.5})
('mathematical reviews', "powell's method", {'weight': 0.6})
('mathematical reviews', 'wolfe conditions', {'weight': 0.6})
('mathematical reviews', 'convexity in economics', {'weight': 0.6})
('mathematical reviews', 'transposition table', {'weight': 0.6})
('mathematical reviews', 'economics', {'weight': 0.6})
('mathematical reviews', 'backward induction', {'weight': 0.6})
('mathematical reviews', 'inspec', {'weight': 0.7})
('mathematical reviews', 'golden section search', {'weight': 0.6})
('mathematical reviews', 'edit distance', {'weight': 0.6})
('mathematical reviews', 'tree structure', {'weight': 0.6})
('mathematical reviews', 'exchange algorithm', {'weight': 0.6})
('mathematical reviews', 'dover publications', {'weight': 0.6})
('mathematical reviews', 'seam carving', {'weight': 0.6})
('mathematical reviews', 'recursive least squares', {'weight': 0.6})
('mathematical reviews', 'metaheuristic', {'weight': 0.6})
('mathematical reviews', 'quasi-newton method', {'weight': 0.6})
('mathematical reviews', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('mathematical reviews', 'robert e. lucas', {'weight': 0.6})
('mathematical reviews', 'non-convexity (economics)', {'weight': 0.6})
('mathematical reviews', 'sr1 formula', {'weight': 0.6})
('mathematical reviews', 'mathematical reviews', {'weight': 1})
('mathematical reviews', 'puzzle', {'weight': 0.6})
('mathematical reviews', 'associative array', {'weight': 0.6})
('mathematical reviews', 'shortest path problem', {'weight': 0.6})
('mathematical reviews', 'dynamic algorithm', {'weight': 0.6})
('mathematical reviews', 'mathematics journals', {'weight': 0.5})
('mathematical reviews', 'augmented lagrangian method', {'weight': 0.6})
('mathematical reviews', 'charles delisi', {'weight': 0.6})
('mathematical reviews', 'greedy algorithm', {'weight': 0.6})
('mathematical reviews', "karmarkar's algorithm", {'weight': 0.6})
('mathematical reviews', 'lattice models', {'weight': 0.6})
('mathematical reviews', 'utility', {'weight': 0.6})
('mathematical reviews', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('mathematical reviews', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('mathematical reviews', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('mathematical reviews', 'international standard book number', {'weight': 0.6})
('mathematical reviews', 'undirected graph', {'weight': 0.6})
('mathematical reviews', 'scheme (programming language)', {'weight': 0.6})
('mathematical reviews', 'rna structure', {'weight': 0.6})
('mathematical reviews', 'hanoi', {'weight': 0.6})
('mathematical reviews', 'perl', {'weight': 0.6})
('mathematical reviews', 'digital object identifier', {'weight': 0.6})
('mathematical reviews', 'sequential quadratic programming', {'weight': 0.6})
('mathematical reviews', 'markov decision process', {'weight': 0.6})
('mathematical reviews', "dinic's algorithm", {'weight': 0.6})
('mathematical reviews', 'pseudo-polynomial time', {'weight': 0.6})
('mathematical reviews', 'partition problem', {'weight': 0.6})
('mathematical reviews', 'stochastic programming', {'weight': 0.6})
('mathematical reviews', 'hill climbing', {'weight': 0.6})
('mathematical reviews', 'top-down', {'weight': 0.6})
('mathematical reviews', 'de boor algorithm', {'weight': 0.6})
('mathematical reviews', 'optimization algorithm', {'weight': 0.6})
('mathematical reviews', "kruskal's algorithm", {'weight': 0.6})
('mathematical reviews', 'jacques philippe marie binet', {'weight': 0.6})
('mathematical reviews', 'tabu search', {'weight': 0.6})
('mathematical reviews', 'divide and conquer algorithm', {'weight': 0.6})
('mathematical reviews', "johnson's algorithm", {'weight': 0.6})
('mathematical reviews', 'evolutionary algorithm', {'weight': 0.6})
('mathematical reviews', 'clique-width', {'weight': 0.6})
('mathematical reviews', 'zentralblatt math', {'weight': 0.7})
('mathematical reviews', 'dynamic programming', {'weight': 0.6})
('mathematical reviews', 'subroutine', {'weight': 0.6})
('mathematical reviews', 'simulated annealing', {'weight': 0.6})
('mathematical reviews', 'tower of hanoi', {'weight': 0.6})
('mathematical reviews', 'branch and bound', {'weight': 0.6})
('mathematical reviews', 'j (programming language)', {'weight': 0.6})
('mathematical reviews', 'matroid', {'weight': 0.6})
('mathematical reviews', 'viterbi algorithm', {'weight': 0.6})
('mathematical reviews', "lemke's algorithm", {'weight': 0.6})
('mathematical reviews', 'simplex algorithm', {'weight': 0.6})
('mathematical reviews', 'local search (optimization)', {'weight': 0.6})
('mathematical reviews', 'hessian matrix', {'weight': 0.6})
('mathematical reviews', 'ibm system r', {'weight': 0.6})
('mathematical reviews', 'penalty method', {'weight': 0.6})
('mathematical reviews', 'russia', {'weight': 0.7})
('mathematical reviews', 'prolog', {'weight': 0.6})
('mathematical reviews', 'time-invariant system', {'weight': 0.6})
('mathematical reviews', 'criss-cross algorithm', {'weight': 0.6})
('mathematical reviews', 'ieee xplore', {'weight': 0.7})
('mathematical reviews', 'revised simplex algorithm', {'weight': 0.6})
('mathematical reviews', 'the mathematical association of america', {'weight': 0.6})
('mathematical reviews', 'line search', {'weight': 0.6})
('mathematical reviews', 'engineering', {'weight': 0.6})
('mathematical reviews', 'word wrap', {'weight': 0.6})
('mathematical reviews', 'subset sum problem', {'weight': 0.6})
('mathematical reviews', 'integer programming', {'weight': 0.6})
('mathematical reviews', 'nucleosome', {'weight': 0.6})
('mathematical reviews', 'earley algorithm', {'weight': 0.6})
('mathematical reviews', 'referential transparency (computer science)', {'weight': 0.6})
('mathematical reviews', 'recursion', {'weight': 0.6})
('mathematical reviews', 'mathematica', {'weight': 0.6})
('mathematical reviews', 'quicksort', {'weight': 0.6})
('mathematical reviews', 'recursion (computer science)', {'weight': 0.6})
('mathematical reviews', 'checkerboard', {'weight': 0.6})
('mathematical reviews', 'computer science', {'weight': 0.6})
('mathematical reviews', 'brute-force search', {'weight': 0.6})
('mathematical reviews', 'mathematics', {'weight': 0.6})
('mathematical reviews', 'depth-first search', {'weight': 0.6})
('mathematical reviews', 'top-down and bottom-up design', {'weight': 0.6})
('mathematical reviews', 'correspondence problem', {'weight': 0.6})
('mathematical reviews', 'transcription factor', {'weight': 0.6})
('mathematical reviews', 'tree decomposition', {'weight': 0.6})
('mathematical reviews', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('mathematical reviews', 'structural alignment', {'weight': 0.6})
('mathematical reviews', 'local convergence', {'weight': 0.6})
('mathematical reviews', 'knapsack problem', {'weight': 0.6})
('mathematical reviews', 'graph algorithm', {'weight': 0.6})
('mathematical reviews', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('mathematical reviews', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('mathematical reviews', 'hidden markov model', {'weight': 0.6})
('mathematical reviews', 'string (computer science)', {'weight': 0.6})
('mathematical reviews', 'bioinformatics', {'weight': 0.6})
('mathematical reviews', 'genetics', {'weight': 0.6})
('mathematical reviews', 'mathematical optimization', {'weight': 0.6})
('mathematical reviews', 'artificial neural networks', {'weight': 0.6})
('mathematical reviews', 'introduction to algorithms', {'weight': 0.6})
('mathematical reviews', 'thomas h. cormen', {'weight': 0.6})
('mathematical reviews', 'music information retrieval', {'weight': 0.6})
('mathematical reviews', 'beat (music)', {'weight': 0.6})
('mathematical reviews', 'longest common subsequence problem', {'weight': 0.6})
('mathematical reviews', 'convex minimization', {'weight': 0.6})
('mathematical reviews', 'successive parabolic interpolation', {'weight': 0.6})
('mathematical reviews', 'fibonacci sequence', {'weight': 0.6})
('mathematical reviews', 'maximum subarray problem', {'weight': 0.6})
('mathematical reviews', 'convex optimization', {'weight': 0.6})
('mathematical reviews', 'memoization', {'weight': 0.6})
('mathematical reviews', 'richard bellman', {'weight': 0.6})
('mathematical reviews', 'exponential growth', {'weight': 0.6})
('mathematical reviews', 'charles e. leiserson', {'weight': 0.6})
('mathematical reviews', 'charles erwin wilson', {'weight': 0.6})
('mathematical reviews', 'interval scheduling', {'weight': 0.6})
('mathematical reviews', 'chart parser', {'weight': 0.6})
('mathematical reviews', 'travelling salesman problem', {'weight': 0.6})
('mathematical reviews', 'germany', {'weight': 0.7})
('mathematical reviews', 'bellman equation', {'weight': 0.6})
('local search (optimization)', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('local search (optimization)', 'photoshop', {'weight': 0.6})
('local search (optimization)', 'sequence alignment', {'weight': 0.6})
('local search (optimization)', 'flow network', {'weight': 0.6})
('local search (optimization)', 'random search', {'weight': 0.7})
('local search (optimization)', 'normal distribution', {'weight': 0.7})
('local search (optimization)', 'ellipsoid method', {'weight': 0.6})
('local search (optimization)', 'chain matrix multiplication', {'weight': 0.6})
('local search (optimization)', 'ieee', {'weight': 0.6})
('local search (optimization)', 'backtracking', {'weight': 0.6})
('local search (optimization)', 'nonlinear conjugate gradient method', {'weight': 0.6})
('local search (optimization)', 'dynamic problem', {'weight': 0.6})
('local search (optimization)', 'trust region', {'weight': 0.6})
('local search (optimization)', 'function (mathematics)', {'weight': 0.6})
('local search (optimization)', 'minimum spanning tree', {'weight': 0.6})
('local search (optimization)', 'context-free grammar', {'weight': 0.6})
('local search (optimization)', 'branch and cut', {'weight': 0.6})
('local search (optimization)', 'state variable', {'weight': 0.6})
('local search (optimization)', 'treewidth', {'weight': 0.6})
('local search (optimization)', 'optimization algorithms and methods', {'weight': 0.5})
('local search (optimization)', 'overlapping subproblem', {'weight': 0.6})
('local search (optimization)', 'taylor & francis', {'weight': 0.6})
('local search (optimization)', 'cutting-plane method', {'weight': 0.6})
('local search (optimization)', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('local search (optimization)', 'method of undetermined coefficients', {'weight': 0.6})
('local search (optimization)', 'combinatorial optimization', {'weight': 0.6})
('local search (optimization)', "newton's method in optimization", {'weight': 0.6})
('local search (optimization)', 'matrix chain multiplication', {'weight': 0.6})
('local search (optimization)', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('local search (optimization)', 'dynamic time warping', {'weight': 0.6})
('local search (optimization)', 'dynamic programming language', {'weight': 0.6})
('local search (optimization)', 'call-by-need', {'weight': 0.6})
('local search (optimization)', 'big-o notation', {'weight': 0.6})
('local search (optimization)', 'comparison of optimization software', {'weight': 0.6})
('local search (optimization)', 'quadratic programming', {'weight': 0.6})
('local search (optimization)', 'common lisp', {'weight': 0.6})
('local search (optimization)', 'barrier function', {'weight': 0.6})
('local search (optimization)', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('local search (optimization)', 'gradient descent', {'weight': 0.6})
('local search (optimization)', 'patricia selinger', {'weight': 0.6})
('local search (optimization)', 'discounting', {'weight': 0.6})
('local search (optimization)', 'ronald l. rivest', {'weight': 0.6})
('local search (optimization)', 'iterative method', {'weight': 0.6})
('local search (optimization)', 'limited-memory bfgs', {'weight': 0.6})
('local search (optimization)', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('local search (optimization)', 'longest common substring problem', {'weight': 0.6})
('local search (optimization)', 'clifford stein', {'weight': 0.6})
('local search (optimization)', 'computer chess', {'weight': 0.6})
('local search (optimization)', 'linear programming', {'weight': 0.6})
('local search (optimization)', 'bitonic tour', {'weight': 0.6})
('local search (optimization)', 'linear search problem', {'weight': 0.6})
('local search (optimization)', 'reactive search optimization', {'weight': 0.7})
('local search (optimization)', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('local search (optimization)', 'systems analysis', {'weight': 0.6})
('local search (optimization)', 'capital (economics)', {'weight': 0.6})
('local search (optimization)', 'levenshtein distance', {'weight': 0.6})
('local search (optimization)', 'machine learning', {'weight': 0.7})
('local search (optimization)', 'nonlinear programming', {'weight': 0.6})
('local search (optimization)', 'computational complexity of mathematical operations', {'weight': 0.6})
('local search (optimization)', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('local search (optimization)', 'gradient', {'weight': 0.6})
('local search (optimization)', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('local search (optimization)', 'bulletin of the american mathematical society', {'weight': 0.6})
('local search (optimization)', 'u.s. english', {'weight': 0.6})
('local search (optimization)', 'refutation table', {'weight': 0.6})
('local search (optimization)', 'heuristic algorithm', {'weight': 0.6})
('local search (optimization)', 'successive linear programming', {'weight': 0.6})
('local search (optimization)', 'optimal substructure', {'weight': 0.6})
('local search (optimization)', 'programming language', {'weight': 0.6})
('local search (optimization)', 'stochastic optimization', {'weight': 0.7})
('local search (optimization)', 'mergesort', {'weight': 0.6})
('local search (optimization)', "dijkstra's algorithm", {'weight': 0.6})
('local search (optimization)', 'subgradient method', {'weight': 0.6})
('local search (optimization)', 'pattern search', {'weight': 0.7})
('local search (optimization)', 'call-by-name', {'weight': 0.6})
('local search (optimization)', 'longest increasing subsequence problem', {'weight': 0.6})
('local search (optimization)', 'edward prescott', {'weight': 0.6})
('local search (optimization)', 'exponential time', {'weight': 0.6})
('local search (optimization)', 'principle of optimality', {'weight': 0.6})
('local search (optimization)', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('local search (optimization)', 'mathematical game', {'weight': 0.6})
('local search (optimization)', 'nancy stokey', {'weight': 0.6})
('local search (optimization)', 'approximation algorithm', {'weight': 0.6})
('local search (optimization)', 'discrete-time', {'weight': 0.6})
('local search (optimization)', 'cyk algorithm', {'weight': 0.6})
('local search (optimization)', 'markov decision process', {'weight': 0.6})
('local search (optimization)', "powell's method", {'weight': 0.6})
('local search (optimization)', 'wolfe conditions', {'weight': 0.6})
('local search (optimization)', 'convexity in economics', {'weight': 0.6})
('local search (optimization)', 'transposition table', {'weight': 0.6})
('local search (optimization)', 'hypersphere', {'weight': 0.7})
('local search (optimization)', 'economics', {'weight': 0.6})
('local search (optimization)', 'backward induction', {'weight': 0.6})
('local search (optimization)', 'golden section search', {'weight': 0.6})
('local search (optimization)', 'edit distance', {'weight': 0.6})
('local search (optimization)', 'tree structure', {'weight': 0.6})
('local search (optimization)', 'exchange algorithm', {'weight': 0.6})
('local search (optimization)', 'dover publications', {'weight': 0.6})
('local search (optimization)', 'seam carving', {'weight': 0.6})
('local search (optimization)', 'recursive least squares', {'weight': 0.6})
('local search (optimization)', 'metaheuristic', {'weight': 0.6})
('local search (optimization)', 'quasi-newton method', {'weight': 0.6})
('local search (optimization)', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('local search (optimization)', 'robert e. lucas', {'weight': 0.6})
('local search (optimization)', 'non-convexity (economics)', {'weight': 0.6})
('local search (optimization)', 'sr1 formula', {'weight': 0.6})
('local search (optimization)', 'mathematical reviews', {'weight': 0.6})
('local search (optimization)', 'puzzle', {'weight': 0.6})
('local search (optimization)', 'associative array', {'weight': 0.6})
('local search (optimization)', 'shortest path problem', {'weight': 0.6})
('local search (optimization)', 'dynamic algorithm', {'weight': 0.6})
('local search (optimization)', 'augmented lagrangian method', {'weight': 0.6})
('local search (optimization)', 'charles delisi', {'weight': 0.6})
('local search (optimization)', 'greedy algorithm', {'weight': 0.6})
('local search (optimization)', "karmarkar's algorithm", {'weight': 0.6})
('local search (optimization)', 'lattice models', {'weight': 0.6})
('local search (optimization)', 'utility', {'weight': 0.6})
('local search (optimization)', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('local search (optimization)', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('local search (optimization)', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('local search (optimization)', 'international standard book number', {'weight': 0.6})
('local search (optimization)', 'undirected graph', {'weight': 0.6})
('local search (optimization)', 'scheme (programming language)', {'weight': 0.6})
('local search (optimization)', 'rna structure', {'weight': 0.6})
('local search (optimization)', 'hanoi', {'weight': 0.6})
('local search (optimization)', 'perl', {'weight': 0.6})
('local search (optimization)', 'digital object identifier', {'weight': 0.6})
('local search (optimization)', 'sequential quadratic programming', {'weight': 0.6})
('local search (optimization)', "dinic's algorithm", {'weight': 0.6})
('local search (optimization)', 'pseudo-polynomial time', {'weight': 0.6})
('local search (optimization)', 'partition problem', {'weight': 0.6})
('local search (optimization)', 'stochastic programming', {'weight': 0.6})
('local search (optimization)', 'hill climbing', {'weight': 0.7})
('local search (optimization)', 'top-down', {'weight': 0.6})
('local search (optimization)', 'de boor algorithm', {'weight': 0.6})
('local search (optimization)', 'optimization algorithm', {'weight': 0.6})
('local search (optimization)', "kruskal's algorithm", {'weight': 0.6})
('local search (optimization)', 'jacques philippe marie binet', {'weight': 0.6})
('local search (optimization)', 'tabu search', {'weight': 0.7})
('local search (optimization)', 'divide and conquer algorithm', {'weight': 0.6})
('local search (optimization)', "johnson's algorithm", {'weight': 0.6})
('local search (optimization)', 'evolutionary algorithm', {'weight': 0.6})
('local search (optimization)', 'clique-width', {'weight': 0.6})
('local search (optimization)', 'dynamic programming', {'weight': 0.6})
('local search (optimization)', 'subroutine', {'weight': 0.6})
('local search (optimization)', 'simulated annealing', {'weight': 0.7})
('local search (optimization)', 'tower of hanoi', {'weight': 0.6})
('local search (optimization)', 'branch and bound', {'weight': 0.6})
('local search (optimization)', 'engineering', {'weight': 0.6})
('local search (optimization)', 'matroid', {'weight': 0.6})
('local search (optimization)', 'viterbi algorithm', {'weight': 0.6})
('local search (optimization)', "lemke's algorithm", {'weight': 0.6})
('local search (optimization)', 'optimization', {'weight': 0.7})
('local search (optimization)', 'simplex algorithm', {'weight': 0.6})
('local search (optimization)', 'local search (optimization)', {'weight': 1})
('local search (optimization)', 'hessian matrix', {'weight': 0.6})
('local search (optimization)', 'ibm system r', {'weight': 0.6})
('local search (optimization)', 'penalty method', {'weight': 0.6})
('local search (optimization)', 'prolog', {'weight': 0.6})
('local search (optimization)', 'time-invariant system', {'weight': 0.6})
('local search (optimization)', 'criss-cross algorithm', {'weight': 0.6})
('local search (optimization)', 'revised simplex algorithm', {'weight': 0.6})
('local search (optimization)', 'uniform distribution', {'weight': 0.7})
('local search (optimization)', 'the mathematical association of america', {'weight': 0.6})
('local search (optimization)', 'line search', {'weight': 0.6})
('local search (optimization)', 'j (programming language)', {'weight': 0.6})
('local search (optimization)', 'word wrap', {'weight': 0.6})
('local search (optimization)', 'random optimization', {'weight': 0.7})
('local search (optimization)', 'subset sum problem', {'weight': 0.6})
('local search (optimization)', 'integer programming', {'weight': 0.6})
('local search (optimization)', 'nucleosome', {'weight': 0.6})
('local search (optimization)', 'earley algorithm', {'weight': 0.6})
('local search (optimization)', 'referential transparency (computer science)', {'weight': 0.6})
('local search (optimization)', 'recursion', {'weight': 0.6})
('local search (optimization)', 'mathematica', {'weight': 0.6})
('local search (optimization)', 'quicksort', {'weight': 0.6})
('local search (optimization)', 'luus\xe2\x80\x93jaakola', {'weight': 0.7})
('local search (optimization)', 'recursion (computer science)', {'weight': 0.6})
('local search (optimization)', 'checkerboard', {'weight': 0.6})
('local search (optimization)', 'computer science', {'weight': 0.6})
('local search (optimization)', 'brute-force search', {'weight': 0.6})
('local search (optimization)', 'mathematics', {'weight': 0.6})
('local search (optimization)', 'depth-first search', {'weight': 0.6})
('local search (optimization)', 'top-down and bottom-up design', {'weight': 0.6})
('local search (optimization)', 'correspondence problem', {'weight': 0.6})
('local search (optimization)', 'transcription factor', {'weight': 0.6})
('local search (optimization)', 'tree decomposition', {'weight': 0.6})
('local search (optimization)', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('local search (optimization)', 'structural alignment', {'weight': 0.6})
('local search (optimization)', 'local convergence', {'weight': 0.6})
('local search (optimization)', 'knapsack problem', {'weight': 0.6})
('local search (optimization)', 'graph algorithm', {'weight': 0.6})
('local search (optimization)', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('local search (optimization)', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('local search (optimization)', 'hidden markov model', {'weight': 0.6})
('local search (optimization)', 'string (computer science)', {'weight': 0.6})
('local search (optimization)', 'bioinformatics', {'weight': 0.6})
('local search (optimization)', 'genetics', {'weight': 0.6})
('local search (optimization)', 'mathematical optimization', {'weight': 0.6})
('local search (optimization)', 'artificial neural networks', {'weight': 0.6})
('local search (optimization)', 'introduction to algorithms', {'weight': 0.6})
('local search (optimization)', 'thomas h. cormen', {'weight': 0.6})
('local search (optimization)', 'music information retrieval', {'weight': 0.6})
('local search (optimization)', 'beat (music)', {'weight': 0.6})
('local search (optimization)', 'longest common subsequence problem', {'weight': 0.6})
('local search (optimization)', 'convex minimization', {'weight': 0.6})
('local search (optimization)', 'successive parabolic interpolation', {'weight': 0.6})
('local search (optimization)', 'fibonacci sequence', {'weight': 0.6})
('local search (optimization)', 'maximum subarray problem', {'weight': 0.6})
('local search (optimization)', 'convex optimization', {'weight': 0.6})
('local search (optimization)', 'memoization', {'weight': 0.6})
('local search (optimization)', 'richard bellman', {'weight': 0.6})
('local search (optimization)', 'exponential growth', {'weight': 0.6})
('local search (optimization)', 'charles e. leiserson', {'weight': 0.6})
('local search (optimization)', 'charles erwin wilson', {'weight': 0.6})
('local search (optimization)', 'interval scheduling', {'weight': 0.6})
('local search (optimization)', 'chart parser', {'weight': 0.6})
('local search (optimization)', 'travelling salesman problem', {'weight': 0.6})
('local search (optimization)', 'bellman equation', {'weight': 0.6})
('local search (optimization)', 'metaheuristics', {'weight': 0.7})
('state variable', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('state variable', 'photoshop', {'weight': 0.6})
('state variable', 'sequence alignment', {'weight': 0.6})
('state variable', 'flow network', {'weight': 0.6})
('state variable', 'ellipsoid method', {'weight': 0.6})
('state variable', 'chain matrix multiplication', {'weight': 0.6})
('state variable', 'ieee', {'weight': 0.6})
('state variable', 'backtracking', {'weight': 0.6})
('state variable', 'nonlinear conjugate gradient method', {'weight': 0.6})
('state variable', 'dynamic problem', {'weight': 0.6})
('state variable', 'trust region', {'weight': 0.6})
('state variable', 'function (mathematics)', {'weight': 0.6})
('state variable', 'control theory', {'weight': 0.7})
('state variable', 'minimum spanning tree', {'weight': 0.6})
('state variable', 'context-free grammar', {'weight': 0.6})
('state variable', 'branch and cut', {'weight': 0.6})
('state variable', 'state variable', {'weight': 1})
('state variable', 'treewidth', {'weight': 0.6})
('state variable', 'overlapping subproblem', {'weight': 0.6})
('state variable', 'taylor & francis', {'weight': 0.6})
('state variable', 'equation of state', {'weight': 0.7})
('state variable', 'cutting-plane method', {'weight': 0.6})
('state variable', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('state variable', 'method of undetermined coefficients', {'weight': 0.6})
('state variable', 'combinatorial optimization', {'weight': 0.6})
('state variable', "newton's method in optimization", {'weight': 0.6})
('state variable', 'matrix chain multiplication', {'weight': 0.6})
('state variable', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('state variable', 'dynamic time warping', {'weight': 0.6})
('state variable', 'dynamic programming language', {'weight': 0.6})
('state variable', 'call-by-need', {'weight': 0.6})
('state variable', 'big-o notation', {'weight': 0.6})
('state variable', 'comparison of optimization software', {'weight': 0.6})
('state variable', 'quadratic programming', {'weight': 0.6})
('state variable', 'common lisp', {'weight': 0.6})
('state variable', 'barrier function', {'weight': 0.6})
('state variable', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('state variable', 'gradient descent', {'weight': 0.6})
('state variable', 'patricia selinger', {'weight': 0.6})
('state variable', 'discounting', {'weight': 0.6})
('state variable', 'ronald l. rivest', {'weight': 0.6})
('state variable', 'iterative method', {'weight': 0.6})
('state variable', 'limited-memory bfgs', {'weight': 0.6})
('state variable', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('state variable', 'longest common substring problem', {'weight': 0.6})
('state variable', 'clifford stein', {'weight': 0.6})
('state variable', 'computer chess', {'weight': 0.6})
('state variable', 'linear programming', {'weight': 0.6})
('state variable', 'bitonic tour', {'weight': 0.6})
('state variable', 'linear search problem', {'weight': 0.6})
('state variable', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('state variable', 'systems analysis', {'weight': 0.6})
('state variable', 'capital (economics)', {'weight': 0.6})
('state variable', 'levenshtein distance', {'weight': 0.6})
('state variable', 'nonlinear programming', {'weight': 0.6})
('state variable', 'computational complexity of mathematical operations', {'weight': 0.6})
('state variable', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('state variable', 'gradient', {'weight': 0.6})
('state variable', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('state variable', 'bulletin of the american mathematical society', {'weight': 0.6})
('state variable', 'u.s. english', {'weight': 0.6})
('state variable', 'refutation table', {'weight': 0.6})
('state variable', 'heuristic algorithm', {'weight': 0.6})
('state variable', 'successive linear programming', {'weight': 0.6})
('state variable', 'optimal substructure', {'weight': 0.6})
('state variable', 'programming language', {'weight': 0.6})
('state variable', 'mergesort', {'weight': 0.6})
('state variable', "dijkstra's algorithm", {'weight': 0.6})
('state variable', 'subgradient method', {'weight': 0.6})
('state variable', 'call-by-name', {'weight': 0.6})
('state variable', 'longest increasing subsequence problem', {'weight': 0.6})
('state variable', 'edward prescott', {'weight': 0.6})
('state variable', 'exponential time', {'weight': 0.6})
('state variable', 'principle of optimality', {'weight': 0.6})
('state variable', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('state variable', 'mathematical game', {'weight': 0.6})
('state variable', 'nancy stokey', {'weight': 0.6})
('state variable', 'approximation algorithm', {'weight': 0.6})
('state variable', 'discrete-time', {'weight': 0.6})
('state variable', 'cyk algorithm', {'weight': 0.6})
('state variable', 'markov decision process', {'weight': 0.6})
('state variable', "powell's method", {'weight': 0.6})
('state variable', 'wolfe conditions', {'weight': 0.6})
('state variable', 'convexity in economics', {'weight': 0.6})
('state variable', 'transposition table', {'weight': 0.6})
('state variable', 'state (computer science)', {'weight': 0.7})
('state variable', 'economics', {'weight': 0.6})
('state variable', 'backward induction', {'weight': 0.6})
('state variable', 'golden section search', {'weight': 0.6})
('state variable', 'edit distance', {'weight': 0.6})
('state variable', 'tree structure', {'weight': 0.6})
('state variable', 'exchange algorithm', {'weight': 0.6})
('state variable', 'dover publications', {'weight': 0.6})
('state variable', 'seam carving', {'weight': 0.6})
('state variable', 'recursive least squares', {'weight': 0.6})
('state variable', 'metaheuristic', {'weight': 0.6})
('state variable', 'quasi-newton method', {'weight': 0.6})
('state variable', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('state variable', 'robert e. lucas', {'weight': 0.6})
('state variable', 'non-convexity (economics)', {'weight': 0.6})
('state variable', 'sr1 formula', {'weight': 0.6})
('state variable', 'mathematical reviews', {'weight': 0.6})
('state variable', 'puzzle', {'weight': 0.6})
('state variable', 'associative array', {'weight': 0.6})
('state variable', 'shortest path problem', {'weight': 0.6})
('state variable', 'dynamic algorithm', {'weight': 0.6})
('state variable', 'augmented lagrangian method', {'weight': 0.6})
('state variable', 'charles delisi', {'weight': 0.6})
('state variable', 'greedy algorithm', {'weight': 0.6})
('state variable', "karmarkar's algorithm", {'weight': 0.6})
('state variable', 'lattice models', {'weight': 0.6})
('state variable', 'utility', {'weight': 0.6})
('state variable', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('state variable', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('state variable', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('state variable', 'international standard book number', {'weight': 0.6})
('state variable', 'undirected graph', {'weight': 0.6})
('state variable', 'scheme (programming language)', {'weight': 0.6})
('state variable', 'rna structure', {'weight': 0.6})
('state variable', 'hanoi', {'weight': 0.6})
('state variable', 'perl', {'weight': 0.6})
('state variable', 'digital object identifier', {'weight': 0.6})
('state variable', 'sequential quadratic programming', {'weight': 0.6})
('state variable', "dinic's algorithm", {'weight': 0.6})
('state variable', 'pseudo-polynomial time', {'weight': 0.6})
('state variable', 'partition problem', {'weight': 0.6})
('state variable', 'stochastic programming', {'weight': 0.6})
('state variable', 'hill climbing', {'weight': 0.6})
('state variable', 'state (functional analysis)', {'weight': 0.7})
('state variable', 'top-down', {'weight': 0.6})
('state variable', 'de boor algorithm', {'weight': 0.6})
('state variable', 'optimization algorithm', {'weight': 0.6})
('state variable', "kruskal's algorithm", {'weight': 0.6})
('state variable', 'state space (controls)', {'weight': 0.7})
('state variable', 'jacques philippe marie binet', {'weight': 0.6})
('state variable', 'tabu search', {'weight': 0.6})
('state variable', 'divide and conquer algorithm', {'weight': 0.6})
('state variable', "johnson's algorithm", {'weight': 0.6})
('state variable', 'state variable filter', {'weight': 0.7})
('state variable', 'evolutionary algorithm', {'weight': 0.6})
('state variable', 'clique-width', {'weight': 0.6})
('state variable', 'dynamic programming', {'weight': 0.6})
('state variable', 'subroutine', {'weight': 0.6})
('state variable', 'simulated annealing', {'weight': 0.6})
('state variable', 'tower of hanoi', {'weight': 0.6})
('state variable', 'branch and bound', {'weight': 0.6})
('state variable', 'engineering', {'weight': 0.6})
('state variable', 'matroid', {'weight': 0.6})
('state variable', 'viterbi algorithm', {'weight': 0.6})
('state variable', "lemke's algorithm", {'weight': 0.6})
('state variable', 'state diagram', {'weight': 0.7})
('state variable', 'simplex algorithm', {'weight': 0.6})
('state variable', 'local search (optimization)', {'weight': 0.6})
('state variable', 'hessian matrix', {'weight': 0.6})
('state variable', 'ibm system r', {'weight': 0.6})
('state variable', 'penalty method', {'weight': 0.6})
('state variable', 'prolog', {'weight': 0.6})
('state variable', 'time-invariant system', {'weight': 0.6})
('state variable', 'criss-cross algorithm', {'weight': 0.6})
('state variable', 'dynamical systems', {'weight': 0.7})
('state variable', 'revised simplex algorithm', {'weight': 0.6})
('state variable', 'the mathematical association of america', {'weight': 0.6})
('state variable', 'line search', {'weight': 0.6})
('state variable', 'j (programming language)', {'weight': 0.6})
('state variable', 'word wrap', {'weight': 0.6})
('state variable', 'subset sum problem', {'weight': 0.6})
('state variable', 'integer programming', {'weight': 0.6})
('state variable', 'nucleosome', {'weight': 0.6})
('state variable', 'earley algorithm', {'weight': 0.6})
('state variable', 'referential transparency (computer science)', {'weight': 0.6})
('state variable', 'recursion', {'weight': 0.6})
('state variable', 'mathematica', {'weight': 0.6})
('state variable', 'quicksort', {'weight': 0.6})
('state variable', 'recursion (computer science)', {'weight': 0.6})
('state variable', 'checkerboard', {'weight': 0.6})
('state variable', 'computer science', {'weight': 0.6})
('state variable', 'brute-force search', {'weight': 0.6})
('state variable', 'mathematics', {'weight': 0.6})
('state variable', 'depth-first search', {'weight': 0.6})
('state variable', 'top-down and bottom-up design', {'weight': 0.6})
('state variable', 'correspondence problem', {'weight': 0.6})
('state variable', 'transcription factor', {'weight': 0.6})
('state variable', 'tree decomposition', {'weight': 0.6})
('state variable', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('state variable', 'structural alignment', {'weight': 0.6})
('state variable', 'local convergence', {'weight': 0.6})
('state variable', 'knapsack problem', {'weight': 0.6})
('state variable', 'graph algorithm', {'weight': 0.6})
('state variable', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('state variable', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('state variable', 'hidden markov model', {'weight': 0.6})
('state variable', 'string (computer science)', {'weight': 0.6})
('state variable', 'bioinformatics', {'weight': 0.6})
('state variable', 'genetics', {'weight': 0.6})
('state variable', 'mathematical optimization', {'weight': 0.6})
('state variable', 'artificial neural networks', {'weight': 0.6})
('state variable', 'introduction to algorithms', {'weight': 0.6})
('state variable', 'thomas h. cormen', {'weight': 0.6})
('state variable', 'music information retrieval', {'weight': 0.6})
('state variable', 'beat (music)', {'weight': 0.6})
('state variable', 'longest common subsequence problem', {'weight': 0.6})
('state variable', 'convex minimization', {'weight': 0.6})
('state variable', 'successive parabolic interpolation', {'weight': 0.6})
('state variable', 'fibonacci sequence', {'weight': 0.6})
('state variable', 'maximum subarray problem', {'weight': 0.6})
('state variable', 'convex optimization', {'weight': 0.6})
('state variable', 'memoization', {'weight': 0.6})
('state variable', 'richard bellman', {'weight': 0.6})
('state variable', 'exponential growth', {'weight': 0.6})
('state variable', 'charles e. leiserson', {'weight': 0.6})
('state variable', 'charles erwin wilson', {'weight': 0.6})
('state variable', 'interval scheduling', {'weight': 0.6})
('state variable', 'chart parser', {'weight': 0.6})
('state variable', 'travelling salesman problem', {'weight': 0.6})
('state variable', 'bellman equation', {'weight': 0.6})
('optimization algorithms and methods', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('optimization algorithms and methods', 'photoshop', {'weight': 0.6})
('optimization algorithms and methods', 'sequence alignment', {'weight': 0.6})
('optimization algorithms and methods', 'flow network', {'weight': 0.6})
('optimization algorithms and methods', 'ellipsoid method', {'weight': 0.6})
('optimization algorithms and methods', 'chain matrix multiplication', {'weight': 0.6})
('optimization algorithms and methods', 'ieee', {'weight': 0.6})
('optimization algorithms and methods', 'backtracking', {'weight': 0.6})
('optimization algorithms and methods', 'nonlinear conjugate gradient method', {'weight': 0.6})
('optimization algorithms and methods', 'dynamic problem', {'weight': 0.6})
('optimization algorithms and methods', 'trust region', {'weight': 0.6})
('optimization algorithms and methods', 'function (mathematics)', {'weight': 0.6})
('optimization algorithms and methods', 'minimum spanning tree', {'weight': 0.6})
('optimization algorithms and methods', 'context-free grammar', {'weight': 0.6})
('optimization algorithms and methods', 'branch and cut', {'weight': 0.6})
('optimization algorithms and methods', 'state variable', {'weight': 0.6})
('optimization algorithms and methods', 'treewidth', {'weight': 0.6})
('optimization algorithms and methods', 'overlapping subproblem', {'weight': 0.6})
('optimization algorithms and methods', 'taylor & francis', {'weight': 0.6})
('optimization algorithms and methods', 'cutting-plane method', {'weight': 0.6})
('optimization algorithms and methods', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('optimization algorithms and methods', 'method of undetermined coefficients', {'weight': 0.6})
('optimization algorithms and methods', 'combinatorial optimization', {'weight': 0.6})
('optimization algorithms and methods', "newton's method in optimization", {'weight': 0.6})
('optimization algorithms and methods', 'matrix chain multiplication', {'weight': 0.6})
('optimization algorithms and methods', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('optimization algorithms and methods', 'dynamic time warping', {'weight': 0.6})
('optimization algorithms and methods', 'dynamic programming language', {'weight': 0.6})
('optimization algorithms and methods', 'call-by-need', {'weight': 0.6})
('optimization algorithms and methods', 'big-o notation', {'weight': 0.6})
('optimization algorithms and methods', 'comparison of optimization software', {'weight': 0.6})
('optimization algorithms and methods', 'quadratic programming', {'weight': 0.6})
('optimization algorithms and methods', 'common lisp', {'weight': 0.6})
('optimization algorithms and methods', 'barrier function', {'weight': 0.6})
('optimization algorithms and methods', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('optimization algorithms and methods', 'gradient descent', {'weight': 0.6})
('optimization algorithms and methods', 'patricia selinger', {'weight': 0.6})
('optimization algorithms and methods', 'discounting', {'weight': 0.6})
('optimization algorithms and methods', 'ronald l. rivest', {'weight': 0.6})
('optimization algorithms and methods', 'iterative method', {'weight': 0.6})
('optimization algorithms and methods', 'limited-memory bfgs', {'weight': 0.6})
('optimization algorithms and methods', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('optimization algorithms and methods', 'longest common substring problem', {'weight': 0.6})
('optimization algorithms and methods', 'clifford stein', {'weight': 0.6})
('optimization algorithms and methods', 'computer chess', {'weight': 0.6})
('optimization algorithms and methods', 'linear programming', {'weight': 0.6})
('optimization algorithms and methods', 'bitonic tour', {'weight': 0.6})
('optimization algorithms and methods', 'linear search problem', {'weight': 0.6})
('optimization algorithms and methods', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('optimization algorithms and methods', 'systems analysis', {'weight': 0.6})
('optimization algorithms and methods', 'capital (economics)', {'weight': 0.6})
('optimization algorithms and methods', 'levenshtein distance', {'weight': 0.6})
('optimization algorithms and methods', 'nonlinear programming', {'weight': 0.6})
('optimization algorithms and methods', 'computational complexity of mathematical operations', {'weight': 0.6})
('optimization algorithms and methods', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('optimization algorithms and methods', 'gradient', {'weight': 0.6})
('optimization algorithms and methods', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('optimization algorithms and methods', 'bulletin of the american mathematical society', {'weight': 0.6})
('optimization algorithms and methods', 'u.s. english', {'weight': 0.6})
('optimization algorithms and methods', 'refutation table', {'weight': 0.6})
('optimization algorithms and methods', 'heuristic algorithm', {'weight': 0.6})
('optimization algorithms and methods', 'successive linear programming', {'weight': 0.6})
('optimization algorithms and methods', 'optimal substructure', {'weight': 0.6})
('optimization algorithms and methods', 'programming language', {'weight': 0.6})
('optimization algorithms and methods', 'mergesort', {'weight': 0.6})
('optimization algorithms and methods', "dijkstra's algorithm", {'weight': 0.6})
('optimization algorithms and methods', 'subgradient method', {'weight': 0.6})
('optimization algorithms and methods', 'call-by-name', {'weight': 0.6})
('optimization algorithms and methods', 'longest increasing subsequence problem', {'weight': 0.6})
('optimization algorithms and methods', 'edward prescott', {'weight': 0.6})
('optimization algorithms and methods', 'exponential time', {'weight': 0.6})
('optimization algorithms and methods', 'principle of optimality', {'weight': 0.6})
('optimization algorithms and methods', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('optimization algorithms and methods', 'mathematical game', {'weight': 0.6})
('optimization algorithms and methods', 'nancy stokey', {'weight': 0.6})
('optimization algorithms and methods', 'approximation algorithm', {'weight': 0.6})
('optimization algorithms and methods', 'discrete-time', {'weight': 0.6})
('optimization algorithms and methods', 'cyk algorithm', {'weight': 0.6})
('optimization algorithms and methods', 'markov decision process', {'weight': 0.6})
('optimization algorithms and methods', "powell's method", {'weight': 0.6})
('optimization algorithms and methods', 'wolfe conditions', {'weight': 0.6})
('optimization algorithms and methods', 'convexity in economics', {'weight': 0.6})
('optimization algorithms and methods', 'transposition table', {'weight': 0.6})
('optimization algorithms and methods', 'economics', {'weight': 0.6})
('optimization algorithms and methods', 'backward induction', {'weight': 0.6})
('optimization algorithms and methods', 'golden section search', {'weight': 0.6})
('optimization algorithms and methods', 'edit distance', {'weight': 0.6})
('optimization algorithms and methods', 'tree structure', {'weight': 0.6})
('optimization algorithms and methods', 'exchange algorithm', {'weight': 0.6})
('optimization algorithms and methods', 'dover publications', {'weight': 0.6})
('optimization algorithms and methods', 'seam carving', {'weight': 0.6})
('optimization algorithms and methods', 'recursive least squares', {'weight': 0.6})
('optimization algorithms and methods', 'metaheuristic', {'weight': 0.6})
('optimization algorithms and methods', 'quasi-newton method', {'weight': 0.6})
('optimization algorithms and methods', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('optimization algorithms and methods', 'robert e. lucas', {'weight': 0.6})
('optimization algorithms and methods', 'non-convexity (economics)', {'weight': 0.6})
('optimization algorithms and methods', 'sr1 formula', {'weight': 0.6})
('optimization algorithms and methods', 'mathematical reviews', {'weight': 0.6})
('optimization algorithms and methods', 'puzzle', {'weight': 0.6})
('optimization algorithms and methods', 'associative array', {'weight': 0.6})
('optimization algorithms and methods', 'shortest path problem', {'weight': 0.6})
('optimization algorithms and methods', 'dynamic algorithm', {'weight': 0.6})
('optimization algorithms and methods', 'augmented lagrangian method', {'weight': 0.6})
('optimization algorithms and methods', 'charles delisi', {'weight': 0.6})
('optimization algorithms and methods', 'greedy algorithm', {'weight': 0.6})
('optimization algorithms and methods', "karmarkar's algorithm", {'weight': 0.6})
('optimization algorithms and methods', 'lattice models', {'weight': 0.6})
('optimization algorithms and methods', 'utility', {'weight': 0.6})
('optimization algorithms and methods', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('optimization algorithms and methods', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('optimization algorithms and methods', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('optimization algorithms and methods', 'international standard book number', {'weight': 0.6})
('optimization algorithms and methods', 'undirected graph', {'weight': 0.6})
('optimization algorithms and methods', 'scheme (programming language)', {'weight': 0.6})
('optimization algorithms and methods', 'rna structure', {'weight': 0.6})
('optimization algorithms and methods', 'hanoi', {'weight': 0.6})
('optimization algorithms and methods', 'perl', {'weight': 0.6})
('optimization algorithms and methods', 'digital object identifier', {'weight': 0.6})
('optimization algorithms and methods', 'sequential quadratic programming', {'weight': 0.6})
('optimization algorithms and methods', "dinic's algorithm", {'weight': 0.6})
('optimization algorithms and methods', 'pseudo-polynomial time', {'weight': 0.6})
('optimization algorithms and methods', 'partition problem', {'weight': 0.6})
('optimization algorithms and methods', 'stochastic programming', {'weight': 0.6})
('optimization algorithms and methods', 'hill climbing', {'weight': 0.6})
('optimization algorithms and methods', 'top-down', {'weight': 0.6})
('optimization algorithms and methods', 'de boor algorithm', {'weight': 0.6})
('optimization algorithms and methods', 'optimization algorithm', {'weight': 0.6})
('optimization algorithms and methods', "kruskal's algorithm", {'weight': 0.6})
('optimization algorithms and methods', 'jacques philippe marie binet', {'weight': 0.6})
('optimization algorithms and methods', 'tabu search', {'weight': 0.6})
('optimization algorithms and methods', 'divide and conquer algorithm', {'weight': 0.6})
('optimization algorithms and methods', "johnson's algorithm", {'weight': 0.6})
('optimization algorithms and methods', 'evolutionary algorithm', {'weight': 0.6})
('optimization algorithms and methods', 'clique-width', {'weight': 0.6})
('optimization algorithms and methods', 'dynamic programming', {'weight': 0.6})
('optimization algorithms and methods', 'subroutine', {'weight': 0.6})
('optimization algorithms and methods', 'simulated annealing', {'weight': 0.6})
('optimization algorithms and methods', 'tower of hanoi', {'weight': 0.6})
('optimization algorithms and methods', 'branch and bound', {'weight': 0.6})
('optimization algorithms and methods', 'engineering', {'weight': 0.6})
('optimization algorithms and methods', 'matroid', {'weight': 0.6})
('optimization algorithms and methods', 'viterbi algorithm', {'weight': 0.6})
('optimization algorithms and methods', "lemke's algorithm", {'weight': 0.6})
('optimization algorithms and methods', 'simplex algorithm', {'weight': 0.6})
('optimization algorithms and methods', 'local search (optimization)', {'weight': 0.6})
('optimization algorithms and methods', 'hessian matrix', {'weight': 0.6})
('optimization algorithms and methods', 'ibm system r', {'weight': 0.6})
('optimization algorithms and methods', 'penalty method', {'weight': 0.6})
('optimization algorithms and methods', 'prolog', {'weight': 0.6})
('optimization algorithms and methods', 'time-invariant system', {'weight': 0.6})
('optimization algorithms and methods', 'criss-cross algorithm', {'weight': 0.6})
('optimization algorithms and methods', 'revised simplex algorithm', {'weight': 0.6})
('optimization algorithms and methods', 'the mathematical association of america', {'weight': 0.6})
('optimization algorithms and methods', 'line search', {'weight': 0.6})
('optimization algorithms and methods', 'j (programming language)', {'weight': 0.6})
('optimization algorithms and methods', 'word wrap', {'weight': 0.6})
('optimization algorithms and methods', 'subset sum problem', {'weight': 0.6})
('optimization algorithms and methods', 'integer programming', {'weight': 0.6})
('optimization algorithms and methods', 'nucleosome', {'weight': 0.6})
('optimization algorithms and methods', 'earley algorithm', {'weight': 0.6})
('optimization algorithms and methods', 'referential transparency (computer science)', {'weight': 0.6})
('optimization algorithms and methods', 'recursion', {'weight': 0.6})
('optimization algorithms and methods', 'mathematica', {'weight': 0.6})
('optimization algorithms and methods', 'quicksort', {'weight': 0.6})
('optimization algorithms and methods', 'recursion (computer science)', {'weight': 0.6})
('optimization algorithms and methods', 'checkerboard', {'weight': 0.6})
('optimization algorithms and methods', 'computer science', {'weight': 0.6})
('optimization algorithms and methods', 'brute-force search', {'weight': 0.6})
('optimization algorithms and methods', 'mathematics', {'weight': 0.6})
('optimization algorithms and methods', 'depth-first search', {'weight': 0.6})
('optimization algorithms and methods', 'top-down and bottom-up design', {'weight': 0.6})
('optimization algorithms and methods', 'correspondence problem', {'weight': 0.6})
('optimization algorithms and methods', 'transcription factor', {'weight': 0.6})
('optimization algorithms and methods', 'tree decomposition', {'weight': 0.6})
('optimization algorithms and methods', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('optimization algorithms and methods', 'structural alignment', {'weight': 0.6})
('optimization algorithms and methods', 'local convergence', {'weight': 0.6})
('optimization algorithms and methods', 'knapsack problem', {'weight': 0.6})
('optimization algorithms and methods', 'graph algorithm', {'weight': 0.6})
('optimization algorithms and methods', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('optimization algorithms and methods', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('optimization algorithms and methods', 'hidden markov model', {'weight': 0.6})
('optimization algorithms and methods', 'string (computer science)', {'weight': 0.6})
('optimization algorithms and methods', 'bioinformatics', {'weight': 0.6})
('optimization algorithms and methods', 'genetics', {'weight': 0.6})
('optimization algorithms and methods', 'mathematical optimization', {'weight': 0.6})
('optimization algorithms and methods', 'artificial neural networks', {'weight': 0.6})
('optimization algorithms and methods', 'introduction to algorithms', {'weight': 0.6})
('optimization algorithms and methods', 'thomas h. cormen', {'weight': 0.6})
('optimization algorithms and methods', 'music information retrieval', {'weight': 0.6})
('optimization algorithms and methods', 'beat (music)', {'weight': 0.6})
('optimization algorithms and methods', 'longest common subsequence problem', {'weight': 0.6})
('optimization algorithms and methods', 'convex minimization', {'weight': 0.6})
('optimization algorithms and methods', 'successive parabolic interpolation', {'weight': 0.6})
('optimization algorithms and methods', 'fibonacci sequence', {'weight': 0.6})
('optimization algorithms and methods', 'maximum subarray problem', {'weight': 0.6})
('optimization algorithms and methods', 'convex optimization', {'weight': 0.6})
('optimization algorithms and methods', 'memoization', {'weight': 0.6})
('optimization algorithms and methods', 'richard bellman', {'weight': 0.6})
('optimization algorithms and methods', 'exponential growth', {'weight': 0.6})
('optimization algorithms and methods', 'charles e. leiserson', {'weight': 0.6})
('optimization algorithms and methods', 'charles erwin wilson', {'weight': 0.6})
('optimization algorithms and methods', 'interval scheduling', {'weight': 0.6})
('optimization algorithms and methods', 'chart parser', {'weight': 0.6})
('optimization algorithms and methods', 'travelling salesman problem', {'weight': 0.6})
('optimization algorithms and methods', 'bellman equation', {'weight': 0.6})
('charles erwin wilson', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('charles erwin wilson', 'photoshop', {'weight': 0.6})
('charles erwin wilson', 'sequence alignment', {'weight': 0.6})
('charles erwin wilson', 'flow network', {'weight': 0.6})
('charles erwin wilson', 'ellipsoid method', {'weight': 0.6})
('charles erwin wilson', 'chain matrix multiplication', {'weight': 0.6})
('charles erwin wilson', 'ieee', {'weight': 0.6})
('charles erwin wilson', 'backtracking', {'weight': 0.6})
('charles erwin wilson', 'nonlinear conjugate gradient method', {'weight': 0.6})
('charles erwin wilson', 'dynamic problem', {'weight': 0.6})
('charles erwin wilson', 'trust region', {'weight': 0.6})
('charles erwin wilson', 'function (mathematics)', {'weight': 0.6})
('charles erwin wilson', 'minimum spanning tree', {'weight': 0.6})
('charles erwin wilson', 'context-free grammar', {'weight': 0.6})
('charles erwin wilson', 'branch and cut', {'weight': 0.6})
('charles erwin wilson', 'state variable', {'weight': 0.6})
('charles erwin wilson', 'treewidth', {'weight': 0.6})
('charles erwin wilson', 'overlapping subproblem', {'weight': 0.6})
('charles erwin wilson', 'taylor & francis', {'weight': 0.6})
('charles erwin wilson', 'cutting-plane method', {'weight': 0.6})
('charles erwin wilson', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('charles erwin wilson', 'method of undetermined coefficients', {'weight': 0.6})
('charles erwin wilson', 'combinatorial optimization', {'weight': 0.6})
('charles erwin wilson', "newton's method in optimization", {'weight': 0.6})
('charles erwin wilson', 'matrix chain multiplication', {'weight': 0.6})
('charles erwin wilson', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('charles erwin wilson', 'dynamic time warping', {'weight': 0.6})
('charles erwin wilson', 'dynamic programming language', {'weight': 0.6})
('charles erwin wilson', 'call-by-need', {'weight': 0.6})
('charles erwin wilson', 'big-o notation', {'weight': 0.6})
('charles erwin wilson', 'comparison of optimization software', {'weight': 0.6})
('charles erwin wilson', 'quadratic programming', {'weight': 0.6})
('charles erwin wilson', 'common lisp', {'weight': 0.6})
('charles erwin wilson', 'barrier function', {'weight': 0.6})
('charles erwin wilson', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('charles erwin wilson', 'gradient descent', {'weight': 0.6})
('charles erwin wilson', 'patricia selinger', {'weight': 0.6})
('charles erwin wilson', 'discounting', {'weight': 0.6})
('charles erwin wilson', 'ronald l. rivest', {'weight': 0.6})
('charles erwin wilson', 'iterative method', {'weight': 0.6})
('charles erwin wilson', 'limited-memory bfgs', {'weight': 0.6})
('charles erwin wilson', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('charles erwin wilson', 'longest common substring problem', {'weight': 0.6})
('charles erwin wilson', 'clifford stein', {'weight': 0.6})
('charles erwin wilson', 'computer chess', {'weight': 0.6})
('charles erwin wilson', 'linear programming', {'weight': 0.6})
('charles erwin wilson', 'bitonic tour', {'weight': 0.6})
('charles erwin wilson', 'linear search problem', {'weight': 0.6})
('charles erwin wilson', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('charles erwin wilson', 'systems analysis', {'weight': 0.6})
('charles erwin wilson', 'capital (economics)', {'weight': 0.6})
('charles erwin wilson', 'levenshtein distance', {'weight': 0.6})
('charles erwin wilson', 'nonlinear programming', {'weight': 0.6})
('charles erwin wilson', 'computational complexity of mathematical operations', {'weight': 0.6})
('charles erwin wilson', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('charles erwin wilson', 'gradient', {'weight': 0.6})
('charles erwin wilson', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('charles erwin wilson', 'bulletin of the american mathematical society', {'weight': 0.6})
('charles erwin wilson', 'u.s. english', {'weight': 0.6})
('charles erwin wilson', 'refutation table', {'weight': 0.6})
('charles erwin wilson', 'heuristic algorithm', {'weight': 0.6})
('charles erwin wilson', 'successive linear programming', {'weight': 0.6})
('charles erwin wilson', 'optimal substructure', {'weight': 0.6})
('charles erwin wilson', 'programming language', {'weight': 0.6})
('charles erwin wilson', 'mergesort', {'weight': 0.6})
('charles erwin wilson', "dijkstra's algorithm", {'weight': 0.6})
('charles erwin wilson', 'subgradient method', {'weight': 0.6})
('charles erwin wilson', 'call-by-name', {'weight': 0.6})
('charles erwin wilson', 'longest increasing subsequence problem', {'weight': 0.6})
('charles erwin wilson', 'edward prescott', {'weight': 0.6})
('charles erwin wilson', 'exponential time', {'weight': 0.6})
('charles erwin wilson', 'principle of optimality', {'weight': 0.6})
('charles erwin wilson', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('charles erwin wilson', 'mathematical game', {'weight': 0.6})
('charles erwin wilson', 'nancy stokey', {'weight': 0.6})
('charles erwin wilson', 'approximation algorithm', {'weight': 0.6})
('charles erwin wilson', 'discrete-time', {'weight': 0.6})
('charles erwin wilson', 'cyk algorithm', {'weight': 0.6})
('charles erwin wilson', 'markov decision process', {'weight': 0.6})
('charles erwin wilson', "powell's method", {'weight': 0.6})
('charles erwin wilson', 'wolfe conditions', {'weight': 0.6})
('charles erwin wilson', 'convexity in economics', {'weight': 0.6})
('charles erwin wilson', 'transposition table', {'weight': 0.6})
('charles erwin wilson', 'economics', {'weight': 0.6})
('charles erwin wilson', 'backward induction', {'weight': 0.6})
('charles erwin wilson', 'golden section search', {'weight': 0.6})
('charles erwin wilson', 'edit distance', {'weight': 0.6})
('charles erwin wilson', 'tree structure', {'weight': 0.6})
('charles erwin wilson', 'exchange algorithm', {'weight': 0.6})
('charles erwin wilson', 'dover publications', {'weight': 0.6})
('charles erwin wilson', 'seam carving', {'weight': 0.6})
('charles erwin wilson', 'recursive least squares', {'weight': 0.6})
('charles erwin wilson', 'metaheuristic', {'weight': 0.6})
('charles erwin wilson', 'quasi-newton method', {'weight': 0.6})
('charles erwin wilson', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('charles erwin wilson', 'robert e. lucas', {'weight': 0.6})
('charles erwin wilson', 'non-convexity (economics)', {'weight': 0.6})
('charles erwin wilson', 'sr1 formula', {'weight': 0.6})
('charles erwin wilson', 'mathematical reviews', {'weight': 0.6})
('charles erwin wilson', 'puzzle', {'weight': 0.6})
('charles erwin wilson', 'associative array', {'weight': 0.6})
('charles erwin wilson', 'shortest path problem', {'weight': 0.6})
('charles erwin wilson', 'dynamic algorithm', {'weight': 0.6})
('charles erwin wilson', 'augmented lagrangian method', {'weight': 0.6})
('charles erwin wilson', 'charles delisi', {'weight': 0.6})
('charles erwin wilson', 'greedy algorithm', {'weight': 0.6})
('charles erwin wilson', "karmarkar's algorithm", {'weight': 0.6})
('charles erwin wilson', 'lattice models', {'weight': 0.6})
('charles erwin wilson', 'utility', {'weight': 0.6})
('charles erwin wilson', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('charles erwin wilson', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('charles erwin wilson', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('charles erwin wilson', 'international standard book number', {'weight': 0.6})
('charles erwin wilson', 'undirected graph', {'weight': 0.6})
('charles erwin wilson', 'scheme (programming language)', {'weight': 0.6})
('charles erwin wilson', 'rna structure', {'weight': 0.6})
('charles erwin wilson', 'hanoi', {'weight': 0.6})
('charles erwin wilson', 'perl', {'weight': 0.6})
('charles erwin wilson', 'digital object identifier', {'weight': 0.6})
('charles erwin wilson', 'sequential quadratic programming', {'weight': 0.6})
('charles erwin wilson', "dinic's algorithm", {'weight': 0.6})
('charles erwin wilson', 'pseudo-polynomial time', {'weight': 0.6})
('charles erwin wilson', 'partition problem', {'weight': 0.6})
('charles erwin wilson', 'stochastic programming', {'weight': 0.6})
('charles erwin wilson', 'hill climbing', {'weight': 0.6})
('charles erwin wilson', 'top-down', {'weight': 0.6})
('charles erwin wilson', 'de boor algorithm', {'weight': 0.6})
('charles erwin wilson', 'optimization algorithm', {'weight': 0.6})
('charles erwin wilson', "kruskal's algorithm", {'weight': 0.6})
('charles erwin wilson', 'jacques philippe marie binet', {'weight': 0.6})
('charles erwin wilson', 'tabu search', {'weight': 0.6})
('charles erwin wilson', 'divide and conquer algorithm', {'weight': 0.6})
('charles erwin wilson', "johnson's algorithm", {'weight': 0.6})
('charles erwin wilson', 'evolutionary algorithm', {'weight': 0.6})
('charles erwin wilson', 'clique-width', {'weight': 0.6})
('charles erwin wilson', 'dynamic programming', {'weight': 0.6})
('charles erwin wilson', 'subroutine', {'weight': 0.6})
('charles erwin wilson', 'simulated annealing', {'weight': 0.6})
('charles erwin wilson', 'tower of hanoi', {'weight': 0.6})
('charles erwin wilson', 'branch and bound', {'weight': 0.6})
('charles erwin wilson', 'engineering', {'weight': 0.6})
('charles erwin wilson', 'matroid', {'weight': 0.6})
('charles erwin wilson', 'viterbi algorithm', {'weight': 0.6})
('charles erwin wilson', "lemke's algorithm", {'weight': 0.6})
('charles erwin wilson', 'simplex algorithm', {'weight': 0.6})
('charles erwin wilson', 'local search (optimization)', {'weight': 0.6})
('charles erwin wilson', 'hessian matrix', {'weight': 0.6})
('charles erwin wilson', 'ibm system r', {'weight': 0.6})
('charles erwin wilson', 'penalty method', {'weight': 0.6})
('charles erwin wilson', 'prolog', {'weight': 0.6})
('charles erwin wilson', 'time-invariant system', {'weight': 0.6})
('charles erwin wilson', 'criss-cross algorithm', {'weight': 0.6})
('charles erwin wilson', 'revised simplex algorithm', {'weight': 0.6})
('charles erwin wilson', 'the mathematical association of america', {'weight': 0.6})
('charles erwin wilson', 'line search', {'weight': 0.6})
('charles erwin wilson', 'j (programming language)', {'weight': 0.6})
('charles erwin wilson', 'word wrap', {'weight': 0.6})
('charles erwin wilson', 'subset sum problem', {'weight': 0.6})
('charles erwin wilson', 'integer programming', {'weight': 0.6})
('charles erwin wilson', 'nucleosome', {'weight': 0.6})
('charles erwin wilson', 'earley algorithm', {'weight': 0.6})
('charles erwin wilson', 'referential transparency (computer science)', {'weight': 0.6})
('charles erwin wilson', 'recursion', {'weight': 0.6})
('charles erwin wilson', 'mathematica', {'weight': 0.6})
('charles erwin wilson', 'quicksort', {'weight': 0.6})
('charles erwin wilson', 'recursion (computer science)', {'weight': 0.6})
('charles erwin wilson', 'checkerboard', {'weight': 0.6})
('charles erwin wilson', 'computer science', {'weight': 0.6})
('charles erwin wilson', 'brute-force search', {'weight': 0.6})
('charles erwin wilson', 'mathematics', {'weight': 0.6})
('charles erwin wilson', 'depth-first search', {'weight': 0.6})
('charles erwin wilson', 'top-down and bottom-up design', {'weight': 0.6})
('charles erwin wilson', 'correspondence problem', {'weight': 0.6})
('charles erwin wilson', 'transcription factor', {'weight': 0.6})
('charles erwin wilson', 'tree decomposition', {'weight': 0.6})
('charles erwin wilson', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('charles erwin wilson', 'structural alignment', {'weight': 0.6})
('charles erwin wilson', 'local convergence', {'weight': 0.6})
('charles erwin wilson', 'knapsack problem', {'weight': 0.6})
('charles erwin wilson', 'graph algorithm', {'weight': 0.6})
('charles erwin wilson', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('charles erwin wilson', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('charles erwin wilson', 'hidden markov model', {'weight': 0.6})
('charles erwin wilson', 'string (computer science)', {'weight': 0.6})
('charles erwin wilson', 'bioinformatics', {'weight': 0.6})
('charles erwin wilson', 'genetics', {'weight': 0.6})
('charles erwin wilson', 'mathematical optimization', {'weight': 0.6})
('charles erwin wilson', 'artificial neural networks', {'weight': 0.6})
('charles erwin wilson', 'introduction to algorithms', {'weight': 0.6})
('charles erwin wilson', 'thomas h. cormen', {'weight': 0.6})
('charles erwin wilson', 'music information retrieval', {'weight': 0.6})
('charles erwin wilson', 'beat (music)', {'weight': 0.6})
('charles erwin wilson', 'longest common subsequence problem', {'weight': 0.6})
('charles erwin wilson', 'convex minimization', {'weight': 0.6})
('charles erwin wilson', 'successive parabolic interpolation', {'weight': 0.6})
('charles erwin wilson', 'fibonacci sequence', {'weight': 0.6})
('charles erwin wilson', 'maximum subarray problem', {'weight': 0.6})
('charles erwin wilson', 'convex optimization', {'weight': 0.6})
('charles erwin wilson', 'memoization', {'weight': 0.6})
('charles erwin wilson', 'richard bellman', {'weight': 0.6})
('charles erwin wilson', 'exponential growth', {'weight': 0.6})
('charles erwin wilson', 'charles e. leiserson', {'weight': 0.6})
('charles erwin wilson', 'charles erwin wilson', {'weight': 1})
('charles erwin wilson', 'interval scheduling', {'weight': 0.6})
('charles erwin wilson', 'chart parser', {'weight': 0.6})
('charles erwin wilson', 'travelling salesman problem', {'weight': 0.6})
('charles erwin wilson', 'bellman equation', {'weight': 0.6})
('shortest path problem', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('shortest path problem', 'photoshop', {'weight': 0.6})
('shortest path problem', 'sequence alignment', {'weight': 0.6})
('shortest path problem', 'flow network', {'weight': 0.7})
('shortest path problem', 'ellipsoid method', {'weight': 0.6})
('shortest path problem', 'chain matrix multiplication', {'weight': 0.6})
('shortest path problem', 'ieee', {'weight': 0.6})
('shortest path problem', 'backtracking', {'weight': 0.6})
('shortest path problem', 'nonlinear conjugate gradient method', {'weight': 0.6})
('shortest path problem', 'dynamic problem', {'weight': 0.6})
('shortest path problem', 'computational problems in graph theory', {'weight': 0.5})
('shortest path problem', 'trust region', {'weight': 0.6})
('shortest path problem', 'function (mathematics)', {'weight': 0.6})
('shortest path problem', 'euclidean shortest path', {'weight': 0.7})
('shortest path problem', 'minimum spanning tree', {'weight': 0.6})
('shortest path problem', 'context-free grammar', {'weight': 0.6})
('shortest path problem', 'branch and cut', {'weight': 0.6})
('shortest path problem', 'state variable', {'weight': 0.6})
('shortest path problem', 'treewidth', {'weight': 0.6})
('shortest path problem', 'overlapping subproblem', {'weight': 0.6})
('shortest path problem', 'taylor & francis', {'weight': 0.6})
('shortest path problem', 'pathfinding', {'weight': 0.7})
('shortest path problem', 'cutting-plane method', {'weight': 0.6})
('shortest path problem', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('shortest path problem', 'method of undetermined coefficients', {'weight': 0.6})
('shortest path problem', 'combinatorial optimization', {'weight': 0.6})
('shortest path problem', "newton's method in optimization", {'weight': 0.6})
('shortest path problem', 'matrix chain multiplication', {'weight': 0.6})
('shortest path problem', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('shortest path problem', 'dynamic time warping', {'weight': 0.6})
('shortest path problem', 'dynamic programming language', {'weight': 0.6})
('shortest path problem', 'call-by-need', {'weight': 0.6})
('shortest path problem', 'big-o notation', {'weight': 0.6})
('shortest path problem', 'min-plus matrix multiplication', {'weight': 0.7})
('shortest path problem', 'graph algorithms', {'weight': 0.5})
('shortest path problem', 'comparison of optimization software', {'weight': 0.6})
('shortest path problem', 'quadratic programming', {'weight': 0.6})
('shortest path problem', 'common lisp', {'weight': 0.6})
('shortest path problem', 'barrier function', {'weight': 0.6})
('shortest path problem', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('shortest path problem', 'gradient descent', {'weight': 0.6})
('shortest path problem', 'patricia selinger', {'weight': 0.6})
('shortest path problem', 'discounting', {'weight': 0.6})
('shortest path problem', 'ronald l. rivest', {'weight': 0.6})
('shortest path problem', 'iterative method', {'weight': 0.6})
('shortest path problem', 'limited-memory bfgs', {'weight': 0.6})
('shortest path problem', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('shortest path problem', 'longest common substring problem', {'weight': 0.6})
('shortest path problem', 'shortest path tree', {'weight': 0.7})
('shortest path problem', 'clifford stein', {'weight': 0.6})
('shortest path problem', 'computer chess', {'weight': 0.6})
('shortest path problem', 'linear programming', {'weight': 0.6})
('shortest path problem', 'bitonic tour', {'weight': 0.6})
('shortest path problem', 'linear search problem', {'weight': 0.6})
('shortest path problem', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('shortest path problem', 'systems analysis', {'weight': 0.6})
('shortest path problem', 'capital (economics)', {'weight': 0.6})
('shortest path problem', 'levenshtein distance', {'weight': 0.6})
('shortest path problem', 'nonlinear programming', {'weight': 0.6})
('shortest path problem', 'computational complexity of mathematical operations', {'weight': 0.6})
('shortest path problem', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('shortest path problem', 'gradient', {'weight': 0.6})
('shortest path problem', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('shortest path problem', 'bulletin of the american mathematical society', {'weight': 0.6})
('shortest path problem', 'u.s. english', {'weight': 0.6})
('shortest path problem', 'refutation table', {'weight': 0.6})
('shortest path problem', 'heuristic algorithm', {'weight': 0.6})
('shortest path problem', 'successive linear programming', {'weight': 0.6})
('shortest path problem', 'optimal substructure', {'weight': 0.6})
('shortest path problem', 'programming language', {'weight': 0.6})
('shortest path problem', 'mergesort', {'weight': 0.6})
('shortest path problem', "dijkstra's algorithm", {'weight': 0.6})
('shortest path problem', 'subgradient method', {'weight': 0.6})
('shortest path problem', 'call-by-name', {'weight': 0.6})
('shortest path problem', 'longest increasing subsequence problem', {'weight': 0.6})
('shortest path problem', 'edward prescott', {'weight': 0.6})
('shortest path problem', 'exponential time', {'weight': 0.6})
('shortest path problem', 'principle of optimality', {'weight': 0.6})
('shortest path problem', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('shortest path problem', 'mathematical game', {'weight': 0.6})
('shortest path problem', 'nancy stokey', {'weight': 0.6})
('shortest path problem', 'approximation algorithm', {'weight': 0.6})
('shortest path problem', 'discrete-time', {'weight': 0.6})
('shortest path problem', 'cyk algorithm', {'weight': 0.6})
('shortest path problem', 'markov decision process', {'weight': 0.6})
('shortest path problem', "powell's method", {'weight': 0.6})
('shortest path problem', 'wolfe conditions', {'weight': 0.6})
('shortest path problem', 'convexity in economics', {'weight': 0.6})
('shortest path problem', 'transposition table', {'weight': 0.6})
('shortest path problem', 'economics', {'weight': 0.6})
('shortest path problem', 'backward induction', {'weight': 0.6})
('shortest path problem', 'golden section search', {'weight': 0.6})
('shortest path problem', 'edit distance', {'weight': 0.6})
('shortest path problem', 'tree structure', {'weight': 0.6})
('shortest path problem', 'exchange algorithm', {'weight': 0.6})
('shortest path problem', 'dover publications', {'weight': 0.6})
('shortest path problem', 'seam carving', {'weight': 0.6})
('shortest path problem', 'recursive least squares', {'weight': 0.6})
('shortest path problem', 'metaheuristic', {'weight': 0.6})
('shortest path problem', 'quasi-newton method', {'weight': 0.6})
('shortest path problem', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('shortest path problem', 'robert e. lucas', {'weight': 0.6})
('shortest path problem', 'non-convexity (economics)', {'weight': 0.6})
('shortest path problem', 'sr1 formula', {'weight': 0.6})
('shortest path problem', 'mathematical reviews', {'weight': 0.6})
('shortest path problem', 'puzzle', {'weight': 0.6})
('shortest path problem', 'associative array', {'weight': 0.6})
('shortest path problem', 'shortest path problem', {'weight': 1})
('shortest path problem', 'dynamic algorithm', {'weight': 0.6})
('shortest path problem', 'augmented lagrangian method', {'weight': 0.6})
('shortest path problem', 'charles delisi', {'weight': 0.6})
('shortest path problem', 'greedy algorithm', {'weight': 0.6})
('shortest path problem', "karmarkar's algorithm", {'weight': 0.6})
('shortest path problem', 'lattice models', {'weight': 0.6})
('shortest path problem', 'utility', {'weight': 0.6})
('shortest path problem', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('shortest path problem', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('shortest path problem', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('shortest path problem', 'international standard book number', {'weight': 0.6})
('shortest path problem', 'undirected graph', {'weight': 0.6})
('shortest path problem', 'scheme (programming language)', {'weight': 0.6})
('shortest path problem', 'rna structure', {'weight': 0.6})
('shortest path problem', 'hanoi', {'weight': 0.6})
('shortest path problem', 'perl', {'weight': 0.6})
('shortest path problem', 'digital object identifier', {'weight': 0.6})
('shortest path problem', 'ieee 802.1aq', {'weight': 0.7})
('shortest path problem', 'sequential quadratic programming', {'weight': 0.6})
('shortest path problem', "dinic's algorithm", {'weight': 0.6})
('shortest path problem', 'pseudo-polynomial time', {'weight': 0.6})
('shortest path problem', 'partition problem', {'weight': 0.6})
('shortest path problem', 'stochastic programming', {'weight': 0.6})
('shortest path problem', 'bidirectional search', {'weight': 0.7})
('shortest path problem', 'hill climbing', {'weight': 0.6})
('shortest path problem', 'top-down', {'weight': 0.6})
('shortest path problem', 'de boor algorithm', {'weight': 0.6})
('shortest path problem', 'optimization algorithm', {'weight': 0.6})
('shortest path problem', "kruskal's algorithm", {'weight': 0.6})
('shortest path problem', 'jacques philippe marie binet', {'weight': 0.6})
('shortest path problem', 'tabu search', {'weight': 0.6})
('shortest path problem', 'divide and conquer algorithm', {'weight': 0.6})
('shortest path problem', "johnson's algorithm", {'weight': 0.6})
('shortest path problem', 'evolutionary algorithm', {'weight': 0.6})
('shortest path problem', 'clique-width', {'weight': 0.6})
('shortest path problem', 'network theory', {'weight': 0.5})
('shortest path problem', 'dynamic programming', {'weight': 0.6})
('shortest path problem', 'subroutine', {'weight': 0.6})
('shortest path problem', 'simulated annealing', {'weight': 0.6})
('shortest path problem', 'tower of hanoi', {'weight': 0.6})
('shortest path problem', 'branch and bound', {'weight': 0.6})
('shortest path problem', 'engineering', {'weight': 0.6})
('shortest path problem', 'matroid', {'weight': 0.6})
('shortest path problem', 'viterbi algorithm', {'weight': 0.6})
('shortest path problem', "lemke's algorithm", {'weight': 0.6})
('shortest path problem', 'simplex algorithm', {'weight': 0.6})
('shortest path problem', 'local search (optimization)', {'weight': 0.6})
('shortest path problem', 'hessian matrix', {'weight': 0.6})
('shortest path problem', 'ibm system r', {'weight': 0.6})
('shortest path problem', 'penalty method', {'weight': 0.6})
('shortest path problem', 'prolog', {'weight': 0.6})
('shortest path problem', 'time-invariant system', {'weight': 0.6})
('shortest path problem', 'criss-cross algorithm', {'weight': 0.6})
('shortest path problem', 'revised simplex algorithm', {'weight': 0.6})
('shortest path problem', 'the mathematical association of america', {'weight': 0.6})
('shortest path problem', 'line search', {'weight': 0.6})
('shortest path problem', 'j (programming language)', {'weight': 0.6})
('shortest path problem', 'word wrap', {'weight': 0.6})
('shortest path problem', 'subset sum problem', {'weight': 0.6})
('shortest path problem', 'integer programming', {'weight': 0.6})
('shortest path problem', 'nucleosome', {'weight': 0.6})
('shortest path problem', 'earley algorithm', {'weight': 0.6})
('shortest path problem', 'referential transparency (computer science)', {'weight': 0.6})
('shortest path problem', 'recursion', {'weight': 0.6})
('shortest path problem', 'mathematica', {'weight': 0.6})
('shortest path problem', 'quicksort', {'weight': 0.6})
('shortest path problem', 'recursion (computer science)', {'weight': 0.6})
('shortest path problem', 'checkerboard', {'weight': 0.6})
('shortest path problem', 'computer science', {'weight': 0.6})
('shortest path problem', 'brute-force search', {'weight': 0.6})
('shortest path problem', 'mathematics', {'weight': 0.6})
('shortest path problem', 'depth-first search', {'weight': 0.6})
('shortest path problem', 'top-down and bottom-up design', {'weight': 0.6})
('shortest path problem', 'correspondence problem', {'weight': 0.6})
('shortest path problem', 'transcription factor', {'weight': 0.6})
('shortest path problem', 'tree decomposition', {'weight': 0.6})
('shortest path problem', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('shortest path problem', 'structural alignment', {'weight': 0.6})
('shortest path problem', 'local convergence', {'weight': 0.6})
('shortest path problem', 'knapsack problem', {'weight': 0.6})
('shortest path problem', 'graph algorithm', {'weight': 0.6})
('shortest path problem', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('shortest path problem', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('shortest path problem', 'hidden markov model', {'weight': 0.6})
('shortest path problem', 'string (computer science)', {'weight': 0.6})
('shortest path problem', 'bioinformatics', {'weight': 0.6})
('shortest path problem', 'genetics', {'weight': 0.6})
('shortest path problem', 'mathematical optimization', {'weight': 0.6})
('shortest path problem', 'artificial neural networks', {'weight': 0.6})
('shortest path problem', 'introduction to algorithms', {'weight': 0.6})
('shortest path problem', 'thomas h. cormen', {'weight': 0.6})
('shortest path problem', 'music information retrieval', {'weight': 0.6})
('shortest path problem', 'beat (music)', {'weight': 0.6})
('shortest path problem', 'longest common subsequence problem', {'weight': 0.6})
('shortest path problem', 'polynomial-time problems', {'weight': 0.5})
('shortest path problem', 'convex minimization', {'weight': 0.6})
('shortest path problem', 'successive parabolic interpolation', {'weight': 0.6})
('shortest path problem', 'fibonacci sequence', {'weight': 0.6})
('shortest path problem', 'maximum subarray problem', {'weight': 0.6})
('shortest path problem', 'convex optimization', {'weight': 0.6})
('shortest path problem', 'memoization', {'weight': 0.6})
('shortest path problem', 'richard bellman', {'weight': 0.6})
('shortest path problem', 'exponential growth', {'weight': 0.6})
('shortest path problem', 'charles e. leiserson', {'weight': 0.6})
('shortest path problem', 'charles erwin wilson', {'weight': 0.6})
('shortest path problem', 'interval scheduling', {'weight': 0.6})
('shortest path problem', 'chart parser', {'weight': 0.6})
('shortest path problem', 'travelling salesman problem', {'weight': 0.6})
('shortest path problem', 'bellman equation', {'weight': 0.6})
('matrix chain multiplication', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('matrix chain multiplication', 'photoshop', {'weight': 0.6})
('matrix chain multiplication', 'sequence alignment', {'weight': 0.6})
('matrix chain multiplication', 'flow network', {'weight': 0.6})
('matrix chain multiplication', 'charles erwin wilson', {'weight': 0.6})
('matrix chain multiplication', 'ellipsoid method', {'weight': 0.6})
('matrix chain multiplication', 'chain matrix multiplication', {'weight': 0.6})
('matrix chain multiplication', 'ieee', {'weight': 0.6})
('matrix chain multiplication', 'backtracking', {'weight': 0.6})
('matrix chain multiplication', 'nonlinear conjugate gradient method', {'weight': 0.6})
('matrix chain multiplication', 'dynamic problem', {'weight': 0.6})
('matrix chain multiplication', 'trust region', {'weight': 0.6})
('matrix chain multiplication', 'function (mathematics)', {'weight': 0.6})
('matrix chain multiplication', 'minimum spanning tree', {'weight': 0.6})
('matrix chain multiplication', 'context-free grammar', {'weight': 0.6})
('matrix chain multiplication', 'branch and cut', {'weight': 0.6})
('matrix chain multiplication', 'state variable', {'weight': 0.6})
('matrix chain multiplication', 'treewidth', {'weight': 0.6})
('matrix chain multiplication', 'optimization algorithms and methods', {'weight': 0.5})
('matrix chain multiplication', 'overlapping subproblem', {'weight': 0.6})
('matrix chain multiplication', 'taylor & francis', {'weight': 0.6})
('matrix chain multiplication', 'cutting-plane method', {'weight': 0.6})
('matrix chain multiplication', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('matrix chain multiplication', 'method of undetermined coefficients', {'weight': 0.6})
('matrix chain multiplication', 'combinatorial optimization', {'weight': 0.6})
('matrix chain multiplication', "newton's method in optimization", {'weight': 0.6})
('matrix chain multiplication', 'matrices', {'weight': 0.5})
('matrix chain multiplication', 'matrix chain multiplication', {'weight': 1})
('matrix chain multiplication', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('matrix chain multiplication', 'dynamic time warping', {'weight': 0.6})
('matrix chain multiplication', 'dynamic programming language', {'weight': 0.6})
('matrix chain multiplication', 'call-by-need', {'weight': 0.6})
('matrix chain multiplication', 'big-o notation', {'weight': 0.6})
('matrix chain multiplication', 'comparison of optimization software', {'weight': 0.6})
('matrix chain multiplication', 'quadratic programming', {'weight': 0.6})
('matrix chain multiplication', 'common lisp', {'weight': 0.6})
('matrix chain multiplication', 'barrier function', {'weight': 0.6})
('matrix chain multiplication', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('matrix chain multiplication', 'gradient descent', {'weight': 0.6})
('matrix chain multiplication', 'patricia selinger', {'weight': 0.6})
('matrix chain multiplication', 'discounting', {'weight': 0.6})
('matrix chain multiplication', 'ronald l. rivest', {'weight': 0.6})
('matrix chain multiplication', 'iterative method', {'weight': 0.6})
('matrix chain multiplication', 'limited-memory bfgs', {'weight': 0.6})
('matrix chain multiplication', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('matrix chain multiplication', 'longest common substring problem', {'weight': 0.6})
('matrix chain multiplication', 'clifford stein', {'weight': 0.6})
('matrix chain multiplication', 'computer chess', {'weight': 0.6})
('matrix chain multiplication', 'linear programming', {'weight': 0.6})
('matrix chain multiplication', 'bitonic tour', {'weight': 0.6})
('matrix chain multiplication', 'linear search problem', {'weight': 0.6})
('matrix chain multiplication', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('matrix chain multiplication', 'systems analysis', {'weight': 0.6})
('matrix chain multiplication', 'capital (economics)', {'weight': 0.6})
('matrix chain multiplication', 'levenshtein distance', {'weight': 0.6})
('matrix chain multiplication', 'nonlinear programming', {'weight': 0.6})
('matrix chain multiplication', 'computational complexity of mathematical operations', {'weight': 0.6})
('matrix chain multiplication', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('matrix chain multiplication', 'gradient', {'weight': 0.6})
('matrix chain multiplication', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('matrix chain multiplication', 'bulletin of the american mathematical society', {'weight': 0.6})
('matrix chain multiplication', 'u.s. english', {'weight': 0.6})
('matrix chain multiplication', 'refutation table', {'weight': 0.6})
('matrix chain multiplication', 'heuristic algorithm', {'weight': 0.6})
('matrix chain multiplication', 'successive linear programming', {'weight': 0.6})
('matrix chain multiplication', 'optimal substructure', {'weight': 0.6})
('matrix chain multiplication', 'programming language', {'weight': 0.6})
('matrix chain multiplication', 'mergesort', {'weight': 0.6})
('matrix chain multiplication', "dijkstra's algorithm", {'weight': 0.6})
('matrix chain multiplication', 'subgradient method', {'weight': 0.6})
('matrix chain multiplication', 'call-by-name', {'weight': 0.6})
('matrix chain multiplication', 'longest increasing subsequence problem', {'weight': 0.6})
('matrix chain multiplication', 'edward prescott', {'weight': 0.6})
('matrix chain multiplication', 'exponential time', {'weight': 0.6})
('matrix chain multiplication', 'principle of optimality', {'weight': 0.6})
('matrix chain multiplication', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('matrix chain multiplication', 'mathematical game', {'weight': 0.6})
('matrix chain multiplication', 'nancy stokey', {'weight': 0.6})
('matrix chain multiplication', 'approximation algorithm', {'weight': 0.6})
('matrix chain multiplication', 'discrete-time', {'weight': 0.6})
('matrix chain multiplication', 'cyk algorithm', {'weight': 0.6})
('matrix chain multiplication', 'markov decision process', {'weight': 0.6})
('matrix chain multiplication', "powell's method", {'weight': 0.6})
('matrix chain multiplication', 'wolfe conditions', {'weight': 0.6})
('matrix chain multiplication', 'convexity in economics', {'weight': 0.6})
('matrix chain multiplication', 'transposition table', {'weight': 0.6})
('matrix chain multiplication', 'economics', {'weight': 0.6})
('matrix chain multiplication', 'backward induction', {'weight': 0.6})
('matrix chain multiplication', 'golden section search', {'weight': 0.6})
('matrix chain multiplication', 'edit distance', {'weight': 0.6})
('matrix chain multiplication', 'tree structure', {'weight': 0.6})
('matrix chain multiplication', 'exchange algorithm', {'weight': 0.6})
('matrix chain multiplication', 'dover publications', {'weight': 0.6})
('matrix chain multiplication', 'seam carving', {'weight': 0.6})
('matrix chain multiplication', 'recursive least squares', {'weight': 0.6})
('matrix chain multiplication', 'metaheuristic', {'weight': 0.6})
('matrix chain multiplication', 'quasi-newton method', {'weight': 0.6})
('matrix chain multiplication', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('matrix chain multiplication', 'robert e. lucas', {'weight': 0.6})
('matrix chain multiplication', 'non-convexity (economics)', {'weight': 0.6})
('matrix chain multiplication', 'sr1 formula', {'weight': 0.6})
('matrix chain multiplication', 'mathematical reviews', {'weight': 0.6})
('matrix chain multiplication', 'puzzle', {'weight': 0.6})
('matrix chain multiplication', 'associative array', {'weight': 0.6})
('matrix chain multiplication', 'shortest path problem', {'weight': 0.6})
('matrix chain multiplication', 'dynamic algorithm', {'weight': 0.6})
('matrix chain multiplication', 'augmented lagrangian method', {'weight': 0.6})
('matrix chain multiplication', 'charles delisi', {'weight': 0.6})
('matrix chain multiplication', 'greedy algorithm', {'weight': 0.6})
('matrix chain multiplication', "karmarkar's algorithm", {'weight': 0.6})
('matrix chain multiplication', 'lattice models', {'weight': 0.6})
('matrix chain multiplication', 'utility', {'weight': 0.6})
('matrix chain multiplication', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('matrix chain multiplication', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('matrix chain multiplication', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('matrix chain multiplication', 'international standard book number', {'weight': 0.6})
('matrix chain multiplication', 'undirected graph', {'weight': 0.6})
('matrix chain multiplication', 'scheme (programming language)', {'weight': 0.6})
('matrix chain multiplication', 'rna structure', {'weight': 0.6})
('matrix chain multiplication', 'hanoi', {'weight': 0.6})
('matrix chain multiplication', 'perl', {'weight': 0.6})
('matrix chain multiplication', 'digital object identifier', {'weight': 0.6})
('matrix chain multiplication', 'sequential quadratic programming', {'weight': 0.6})
('matrix chain multiplication', "dinic's algorithm", {'weight': 0.6})
('matrix chain multiplication', 'pseudo-polynomial time', {'weight': 0.6})
('matrix chain multiplication', 'partition problem', {'weight': 0.6})
('matrix chain multiplication', 'stochastic programming', {'weight': 0.6})
('matrix chain multiplication', 'hill climbing', {'weight': 0.6})
('matrix chain multiplication', 'top-down', {'weight': 0.6})
('matrix chain multiplication', 'de boor algorithm', {'weight': 0.6})
('matrix chain multiplication', 'optimization algorithm', {'weight': 0.6})
('matrix chain multiplication', "kruskal's algorithm", {'weight': 0.6})
('matrix chain multiplication', 'jacques philippe marie binet', {'weight': 0.6})
('matrix chain multiplication', 'tabu search', {'weight': 0.6})
('matrix chain multiplication', 'divide and conquer algorithm', {'weight': 0.6})
('matrix chain multiplication', "johnson's algorithm", {'weight': 0.6})
('matrix chain multiplication', 'evolutionary algorithm', {'weight': 0.6})
('matrix chain multiplication', 'clique-width', {'weight': 0.6})
('matrix chain multiplication', 'dynamic programming', {'weight': 0.6})
('matrix chain multiplication', 'subroutine', {'weight': 0.6})
('matrix chain multiplication', 'simulated annealing', {'weight': 0.6})
('matrix chain multiplication', 'tower of hanoi', {'weight': 0.6})
('matrix chain multiplication', 'branch and bound', {'weight': 0.6})
('matrix chain multiplication', 'engineering', {'weight': 0.6})
('matrix chain multiplication', 'matroid', {'weight': 0.6})
('matrix chain multiplication', 'viterbi algorithm', {'weight': 0.6})
('matrix chain multiplication', "lemke's algorithm", {'weight': 0.6})
('matrix chain multiplication', 'simplex algorithm', {'weight': 0.6})
('matrix chain multiplication', 'local search (optimization)', {'weight': 0.6})
('matrix chain multiplication', 'hessian matrix', {'weight': 0.6})
('matrix chain multiplication', 'ibm system r', {'weight': 0.6})
('matrix chain multiplication', 'penalty method', {'weight': 0.6})
('matrix chain multiplication', 'prolog', {'weight': 0.6})
('matrix chain multiplication', 'time-invariant system', {'weight': 0.6})
('matrix chain multiplication', 'criss-cross algorithm', {'weight': 0.6})
('matrix chain multiplication', 'revised simplex algorithm', {'weight': 0.6})
('matrix chain multiplication', 'the mathematical association of america', {'weight': 0.6})
('matrix chain multiplication', 'line search', {'weight': 0.6})
('matrix chain multiplication', 'j (programming language)', {'weight': 0.6})
('matrix chain multiplication', 'word wrap', {'weight': 0.6})
('matrix chain multiplication', 'subset sum problem', {'weight': 0.6})
('matrix chain multiplication', 'integer programming', {'weight': 0.6})
('matrix chain multiplication', 'nucleosome', {'weight': 0.6})
('matrix chain multiplication', 'earley algorithm', {'weight': 0.6})
('matrix chain multiplication', 'referential transparency (computer science)', {'weight': 0.6})
('matrix chain multiplication', 'recursion', {'weight': 0.6})
('matrix chain multiplication', 'mathematica', {'weight': 0.6})
('matrix chain multiplication', 'quicksort', {'weight': 0.6})
('matrix chain multiplication', 'recursion (computer science)', {'weight': 0.6})
('matrix chain multiplication', 'computer science', {'weight': 0.6})
('matrix chain multiplication', 'brute-force search', {'weight': 0.6})
('matrix chain multiplication', 'mathematics', {'weight': 0.6})
('matrix chain multiplication', 'depth-first search', {'weight': 0.6})
('matrix chain multiplication', 'top-down and bottom-up design', {'weight': 0.6})
('matrix chain multiplication', 'correspondence problem', {'weight': 0.6})
('matrix chain multiplication', 'transcription factor', {'weight': 0.6})
('matrix chain multiplication', 'tree decomposition', {'weight': 0.6})
('matrix chain multiplication', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('matrix chain multiplication', 'structural alignment', {'weight': 0.6})
('matrix chain multiplication', 'local convergence', {'weight': 0.6})
('matrix chain multiplication', 'knapsack problem', {'weight': 0.6})
('matrix chain multiplication', 'graph algorithm', {'weight': 0.6})
('matrix chain multiplication', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('matrix chain multiplication', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('matrix chain multiplication', 'hidden markov model', {'weight': 0.6})
('matrix chain multiplication', 'string (computer science)', {'weight': 0.6})
('matrix chain multiplication', 'bioinformatics', {'weight': 0.6})
('matrix chain multiplication', 'genetics', {'weight': 0.6})
('matrix chain multiplication', 'mathematical optimization', {'weight': 0.6})
('matrix chain multiplication', 'artificial neural networks', {'weight': 0.6})
('matrix chain multiplication', 'introduction to algorithms', {'weight': 0.6})
('matrix chain multiplication', 'thomas h. cormen', {'weight': 0.6})
('matrix chain multiplication', 'music information retrieval', {'weight': 0.6})
('matrix chain multiplication', 'beat (music)', {'weight': 0.6})
('matrix chain multiplication', 'longest common subsequence problem', {'weight': 0.6})
('matrix chain multiplication', 'convex minimization', {'weight': 0.6})
('matrix chain multiplication', 'successive parabolic interpolation', {'weight': 0.6})
('matrix chain multiplication', 'fibonacci sequence', {'weight': 0.6})
('matrix chain multiplication', 'maximum subarray problem', {'weight': 0.6})
('matrix chain multiplication', 'convex optimization', {'weight': 0.6})
('matrix chain multiplication', 'memoization', {'weight': 0.6})
('matrix chain multiplication', 'richard bellman', {'weight': 0.6})
('matrix chain multiplication', 'exponential growth', {'weight': 0.6})
('matrix chain multiplication', 'charles e. leiserson', {'weight': 0.6})
('matrix chain multiplication', 'checkerboard', {'weight': 0.6})
('matrix chain multiplication', 'interval scheduling', {'weight': 0.6})
('matrix chain multiplication', 'chart parser', {'weight': 0.6})
('matrix chain multiplication', 'travelling salesman problem', {'weight': 0.6})
('matrix chain multiplication', 'bellman equation', {'weight': 0.6})
('dynamic programming language', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('dynamic programming language', 'photoshop', {'weight': 0.6})
('dynamic programming language', 'sequence alignment', {'weight': 0.6})
('dynamic programming language', 'flow network', {'weight': 0.6})
('dynamic programming language', 'name binding', {'weight': 0.7})
('dynamic programming language', 'ellipsoid method', {'weight': 0.6})
('dynamic programming language', 'chain matrix multiplication', {'weight': 0.6})
('dynamic programming language', 'ieee', {'weight': 0.6})
('dynamic programming language', 'backtracking', {'weight': 0.6})
('dynamic programming language', 'comparison of programming languages', {'weight': 0.7})
('dynamic programming language', 'nonlinear conjugate gradient method', {'weight': 0.6})
('dynamic programming language', 'dynamic problem', {'weight': 0.6})
('dynamic programming language', 'trust region', {'weight': 0.6})
('dynamic programming language', 'function (mathematics)', {'weight': 0.6})
('dynamic programming language', 'minimum spanning tree', {'weight': 0.6})
('dynamic programming language', 'context-free grammar', {'weight': 0.6})
('dynamic programming language', 'branch and cut', {'weight': 0.6})
('dynamic programming language', 'state variable', {'weight': 0.6})
('dynamic programming language', 'treewidth', {'weight': 0.6})
('dynamic programming language', 'overlapping subproblem', {'weight': 0.6})
('dynamic programming language', 'taylor & francis', {'weight': 0.6})
('dynamic programming language', 'cutting-plane method', {'weight': 0.6})
('dynamic programming language', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('dynamic programming language', 'method of undetermined coefficients', {'weight': 0.6})
('dynamic programming language', 'combinatorial optimization', {'weight': 0.6})
('dynamic programming language', "newton's method in optimization", {'weight': 0.6})
('dynamic programming language', 'matrix chain multiplication', {'weight': 0.6})
('dynamic programming language', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('dynamic programming language', 'dynamic time warping', {'weight': 0.6})
('dynamic programming language', 'dynamic programming language', {'weight': 1})
('dynamic programming language', 'call-by-need', {'weight': 0.6})
('dynamic programming language', 'big-o notation', {'weight': 0.6})
('dynamic programming language', 'comparison of optimization software', {'weight': 0.6})
('dynamic programming language', 'quadratic programming', {'weight': 0.6})
('dynamic programming language', 'common lisp', {'weight': 0.6})
('dynamic programming language', 'barrier function', {'weight': 0.6})
('dynamic programming language', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('dynamic programming language', 'gradient descent', {'weight': 0.6})
('dynamic programming language', 'patricia selinger', {'weight': 0.6})
('dynamic programming language', 'discounting', {'weight': 0.6})
('dynamic programming language', 'ronald l. rivest', {'weight': 0.6})
('dynamic programming language', 'iterative method', {'weight': 0.6})
('dynamic programming language', 'limited-memory bfgs', {'weight': 0.6})
('dynamic programming language', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('dynamic programming language', 'longest common substring problem', {'weight': 0.6})
('dynamic programming language', 'clifford stein', {'weight': 0.6})
('dynamic programming language', 'computer chess', {'weight': 0.6})
('dynamic programming language', 'linear programming', {'weight': 0.6})
('dynamic programming language', 'bitonic tour', {'weight': 0.6})
('dynamic programming language', 'linear search problem', {'weight': 0.6})
('dynamic programming language', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('dynamic programming language', 'systems analysis', {'weight': 0.6})
('dynamic programming language', 'capital (economics)', {'weight': 0.6})
('dynamic programming language', 'levenshtein distance', {'weight': 0.6})
('dynamic programming language', 'nonlinear programming', {'weight': 0.6})
('dynamic programming language', 'computational complexity of mathematical operations', {'weight': 0.6})
('dynamic programming language', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('dynamic programming language', 'gradient', {'weight': 0.6})
('dynamic programming language', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('dynamic programming language', 'bulletin of the american mathematical society', {'weight': 0.6})
('dynamic programming language', 'u.s. english', {'weight': 0.6})
('dynamic programming language', 'refutation table', {'weight': 0.6})
('dynamic programming language', 'heuristic algorithm', {'weight': 0.6})
('dynamic programming language', 'successive linear programming', {'weight': 0.6})
('dynamic programming language', 'optimal substructure', {'weight': 0.6})
('dynamic programming language', 'programming language', {'weight': 0.6})
('dynamic programming language', 'mergesort', {'weight': 0.6})
('dynamic programming language', "dijkstra's algorithm", {'weight': 0.6})
('dynamic programming language', 'subgradient method', {'weight': 0.6})
('dynamic programming language', 'call-by-name', {'weight': 0.6})
('dynamic programming language', 'longest increasing subsequence problem', {'weight': 0.6})
('dynamic programming language', 'edward prescott', {'weight': 0.6})
('dynamic programming language', 'exponential time', {'weight': 0.6})
('dynamic programming language', 'principle of optimality', {'weight': 0.6})
('dynamic programming language', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('dynamic programming language', 'mathematical game', {'weight': 0.6})
('dynamic programming language', 'nancy stokey', {'weight': 0.6})
('dynamic programming language', 'approximation algorithm', {'weight': 0.6})
('dynamic programming language', 'discrete-time', {'weight': 0.6})
('dynamic programming language', 'cyk algorithm', {'weight': 0.6})
('dynamic programming language', 'markov decision process', {'weight': 0.6})
('dynamic programming language', "powell's method", {'weight': 0.6})
('dynamic programming language', 'wolfe conditions', {'weight': 0.6})
('dynamic programming language', 'convexity in economics', {'weight': 0.6})
('dynamic programming language', 'transposition table', {'weight': 0.6})
('dynamic programming language', 'economics', {'weight': 0.6})
('dynamic programming language', 'backward induction', {'weight': 0.6})
('dynamic programming language', 'golden section search', {'weight': 0.6})
('dynamic programming language', 'edit distance', {'weight': 0.6})
('dynamic programming language', 'tree structure', {'weight': 0.6})
('dynamic programming language', 'exchange algorithm', {'weight': 0.6})
('dynamic programming language', 'evaluation strategy', {'weight': 0.5})
('dynamic programming language', 'dover publications', {'weight': 0.6})
('dynamic programming language', 'seam carving', {'weight': 0.6})
('dynamic programming language', 'recursive least squares', {'weight': 0.6})
('dynamic programming language', 'metaheuristic', {'weight': 0.6})
('dynamic programming language', 'quasi-newton method', {'weight': 0.6})
('dynamic programming language', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('dynamic programming language', 'robert e. lucas', {'weight': 0.6})
('dynamic programming language', 'non-convexity (economics)', {'weight': 0.6})
('dynamic programming language', 'sr1 formula', {'weight': 0.6})
('dynamic programming language', 'mathematical reviews', {'weight': 0.6})
('dynamic programming language', 'puzzle', {'weight': 0.6})
('dynamic programming language', 'associative array', {'weight': 0.6})
('dynamic programming language', 'shortest path problem', {'weight': 0.6})
('dynamic programming language', 'dynamic algorithm', {'weight': 0.6})
('dynamic programming language', 'augmented lagrangian method', {'weight': 0.6})
('dynamic programming language', 'charles delisi', {'weight': 0.6})
('dynamic programming language', 'greedy algorithm', {'weight': 0.6})
('dynamic programming language', "karmarkar's algorithm", {'weight': 0.6})
('dynamic programming language', 'lattice models', {'weight': 0.6})
('dynamic programming language', 'utility', {'weight': 0.6})
('dynamic programming language', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('dynamic programming language', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('dynamic programming language', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('dynamic programming language', 'international standard book number', {'weight': 0.6})
('dynamic programming language', 'undirected graph', {'weight': 0.6})
('dynamic programming language', 'scheme (programming language)', {'weight': 0.6})
('dynamic programming language', 'rna structure', {'weight': 0.6})
('dynamic programming language', 'hanoi', {'weight': 0.6})
('dynamic programming language', 'perl', {'weight': 0.6})
('dynamic programming language', 'digital object identifier', {'weight': 0.6})
('dynamic programming language', 'sequential quadratic programming', {'weight': 0.6})
('dynamic programming language', "dinic's algorithm", {'weight': 0.6})
('dynamic programming language', 'pseudo-polynomial time', {'weight': 0.6})
('dynamic programming language', 'partition problem', {'weight': 0.6})
('dynamic programming language', 'stochastic programming', {'weight': 0.6})
('dynamic programming language', 'hill climbing', {'weight': 0.6})
('dynamic programming language', 'top-down', {'weight': 0.6})
('dynamic programming language', 'de boor algorithm', {'weight': 0.6})
('dynamic programming language', 'optimization algorithm', {'weight': 0.6})
('dynamic programming language', "kruskal's algorithm", {'weight': 0.6})
('dynamic programming language', 'jacques philippe marie binet', {'weight': 0.6})
('dynamic programming language', 'tabu search', {'weight': 0.6})
('dynamic programming language', 'divide and conquer algorithm', {'weight': 0.6})
('dynamic programming language', "johnson's algorithm", {'weight': 0.6})
('dynamic programming language', 'evolutionary algorithm', {'weight': 0.6})
('dynamic programming language', 'clique-width', {'weight': 0.6})
('dynamic programming language', 'dynamic programming', {'weight': 0.6})
('dynamic programming language', 'subroutine', {'weight': 0.6})
('dynamic programming language', 'simulated annealing', {'weight': 0.6})
('dynamic programming language', 'tower of hanoi', {'weight': 0.6})
('dynamic programming language', 'branch and bound', {'weight': 0.6})
('dynamic programming language', 'engineering', {'weight': 0.6})
('dynamic programming language', 'matroid', {'weight': 0.6})
('dynamic programming language', 'viterbi algorithm', {'weight': 0.6})
('dynamic programming language', "lemke's algorithm", {'weight': 0.6})
('dynamic programming language', 'simplex algorithm', {'weight': 0.6})
('dynamic programming language', 'local search (optimization)', {'weight': 0.6})
('dynamic programming language', 'hessian matrix', {'weight': 0.6})
('dynamic programming language', 'ibm system r', {'weight': 0.6})
('dynamic programming language', 'penalty method', {'weight': 0.6})
('dynamic programming language', 'prolog', {'weight': 0.6})
('dynamic programming language', 'time-invariant system', {'weight': 0.6})
('dynamic programming language', 'criss-cross algorithm', {'weight': 0.6})
('dynamic programming language', 'revised simplex algorithm', {'weight': 0.6})
('dynamic programming language', 'the mathematical association of america', {'weight': 0.6})
('dynamic programming language', 'line search', {'weight': 0.6})
('dynamic programming language', 'j (programming language)', {'weight': 0.6})
('dynamic programming language', 'word wrap', {'weight': 0.6})
('dynamic programming language', 'subset sum problem', {'weight': 0.6})
('dynamic programming language', 'integer programming', {'weight': 0.6})
('dynamic programming language', 'nucleosome', {'weight': 0.6})
('dynamic programming language', 'earley algorithm', {'weight': 0.6})
('dynamic programming language', 'referential transparency (computer science)', {'weight': 0.6})
('dynamic programming language', 'recursion', {'weight': 0.6})
('dynamic programming language', 'mathematica', {'weight': 0.6})
('dynamic programming language', 'quicksort', {'weight': 0.6})
('dynamic programming language', 'recursion (computer science)', {'weight': 0.6})
('dynamic programming language', 'checkerboard', {'weight': 0.6})
('dynamic programming language', 'computer science', {'weight': 0.6})
('dynamic programming language', 'brute-force search', {'weight': 0.6})
('dynamic programming language', 'mathematics', {'weight': 0.6})
('dynamic programming language', 'depth-first search', {'weight': 0.6})
('dynamic programming language', 'top-down and bottom-up design', {'weight': 0.6})
('dynamic programming language', 'correspondence problem', {'weight': 0.6})
('dynamic programming language', 'transcription factor', {'weight': 0.6})
('dynamic programming language', 'tree decomposition', {'weight': 0.6})
('dynamic programming language', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('dynamic programming language', 'structural alignment', {'weight': 0.6})
('dynamic programming language', 'local convergence', {'weight': 0.6})
('dynamic programming language', 'knapsack problem', {'weight': 0.6})
('dynamic programming language', 'graph algorithm', {'weight': 0.6})
('dynamic programming language', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('dynamic programming language', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('dynamic programming language', 'hidden markov model', {'weight': 0.6})
('dynamic programming language', 'string (computer science)', {'weight': 0.6})
('dynamic programming language', 'bioinformatics', {'weight': 0.6})
('dynamic programming language', 'genetics', {'weight': 0.6})
('dynamic programming language', 'mathematical optimization', {'weight': 0.6})
('dynamic programming language', 'artificial neural networks', {'weight': 0.6})
('dynamic programming language', 'introduction to algorithms', {'weight': 0.6})
('dynamic programming language', 'thomas h. cormen', {'weight': 0.6})
('dynamic programming language', 'music information retrieval', {'weight': 0.6})
('dynamic programming language', 'beat (music)', {'weight': 0.6})
('dynamic programming language', 'longest common subsequence problem', {'weight': 0.6})
('dynamic programming language', 'convex minimization', {'weight': 0.6})
('dynamic programming language', 'successive parabolic interpolation', {'weight': 0.6})
('dynamic programming language', 'fibonacci sequence', {'weight': 0.6})
('dynamic programming language', 'maximum subarray problem', {'weight': 0.6})
('dynamic programming language', 'convex optimization', {'weight': 0.6})
('dynamic programming language', 'memoization', {'weight': 0.6})
('dynamic programming language', 'richard bellman', {'weight': 0.6})
('dynamic programming language', 'exponential growth', {'weight': 0.6})
('dynamic programming language', 'charles e. leiserson', {'weight': 0.6})
('dynamic programming language', 'charles erwin wilson', {'weight': 0.6})
('dynamic programming language', 'interval scheduling', {'weight': 0.6})
('dynamic programming language', 'chart parser', {'weight': 0.6})
('dynamic programming language', 'travelling salesman problem', {'weight': 0.6})
('dynamic programming language', 'bellman equation', {'weight': 0.6})
('dynamic algorithm', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('dynamic algorithm', 'photoshop', {'weight': 0.6})
('dynamic algorithm', 'sequence alignment', {'weight': 0.6})
('dynamic algorithm', 'flow network', {'weight': 0.6})
('dynamic algorithm', 'ellipsoid method', {'weight': 0.6})
('dynamic algorithm', 'chain matrix multiplication', {'weight': 0.6})
('dynamic algorithm', 'ieee', {'weight': 0.6})
('dynamic algorithm', 'backtracking', {'weight': 0.6})
('dynamic algorithm', 'sr1 formula', {'weight': 0.6})
('dynamic algorithm', 'nonlinear conjugate gradient method', {'weight': 0.6})
('dynamic algorithm', 'dynamic problem', {'weight': 0.6})
('dynamic algorithm', 'trust region', {'weight': 0.6})
('dynamic algorithm', 'function (mathematics)', {'weight': 0.6})
('dynamic algorithm', 'minimum spanning tree', {'weight': 0.6})
('dynamic algorithm', 'context-free grammar', {'weight': 0.6})
('dynamic algorithm', 'branch and cut', {'weight': 0.6})
('dynamic algorithm', 'state variable', {'weight': 0.6})
('dynamic algorithm', 'treewidth', {'weight': 0.6})
('dynamic algorithm', 'overlapping subproblem', {'weight': 0.6})
('dynamic algorithm', 'taylor & francis', {'weight': 0.6})
('dynamic algorithm', 'cutting-plane method', {'weight': 0.6})
('dynamic algorithm', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('dynamic algorithm', 'method of undetermined coefficients', {'weight': 0.6})
('dynamic algorithm', 'combinatorial optimization', {'weight': 0.6})
('dynamic algorithm', "newton's method in optimization", {'weight': 0.6})
('dynamic algorithm', 'matrix chain multiplication', {'weight': 0.6})
('dynamic algorithm', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('dynamic algorithm', 'dynamic time warping', {'weight': 0.6})
('dynamic algorithm', 'dynamic programming language', {'weight': 0.6})
('dynamic algorithm', 'call-by-need', {'weight': 0.6})
('dynamic algorithm', 'big-o notation', {'weight': 0.6})
('dynamic algorithm', 'comparison of optimization software', {'weight': 0.6})
('dynamic algorithm', 'quadratic programming', {'weight': 0.6})
('dynamic algorithm', 'common lisp', {'weight': 0.6})
('dynamic algorithm', 'barrier function', {'weight': 0.6})
('dynamic algorithm', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('dynamic algorithm', 'gradient descent', {'weight': 0.6})
('dynamic algorithm', 'patricia selinger', {'weight': 0.6})
('dynamic algorithm', 'discounting', {'weight': 0.6})
('dynamic algorithm', 'ronald l. rivest', {'weight': 0.6})
('dynamic algorithm', 'iterative method', {'weight': 0.6})
('dynamic algorithm', 'limited-memory bfgs', {'weight': 0.6})
('dynamic algorithm', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('dynamic algorithm', 'longest common substring problem', {'weight': 0.6})
('dynamic algorithm', 'clifford stein', {'weight': 0.6})
('dynamic algorithm', 'computer chess', {'weight': 0.6})
('dynamic algorithm', 'linear programming', {'weight': 0.6})
('dynamic algorithm', 'bitonic tour', {'weight': 0.6})
('dynamic algorithm', 'linear search problem', {'weight': 0.6})
('dynamic algorithm', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('dynamic algorithm', 'systems analysis', {'weight': 0.6})
('dynamic algorithm', 'capital (economics)', {'weight': 0.6})
('dynamic algorithm', 'levenshtein distance', {'weight': 0.6})
('dynamic algorithm', 'nonlinear programming', {'weight': 0.6})
('dynamic algorithm', 'computational complexity of mathematical operations', {'weight': 0.6})
('dynamic algorithm', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('dynamic algorithm', 'gradient', {'weight': 0.6})
('dynamic algorithm', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('dynamic algorithm', 'bulletin of the american mathematical society', {'weight': 0.6})
('dynamic algorithm', 'u.s. english', {'weight': 0.6})
('dynamic algorithm', 'refutation table', {'weight': 0.6})
('dynamic algorithm', 'heuristic algorithm', {'weight': 0.6})
('dynamic algorithm', 'successive linear programming', {'weight': 0.6})
('dynamic algorithm', 'optimal substructure', {'weight': 0.6})
('dynamic algorithm', 'programming language', {'weight': 0.6})
('dynamic algorithm', 'mergesort', {'weight': 0.6})
('dynamic algorithm', "dijkstra's algorithm", {'weight': 0.6})
('dynamic algorithm', 'subgradient method', {'weight': 0.6})
('dynamic algorithm', 'call-by-name', {'weight': 0.6})
('dynamic algorithm', 'longest increasing subsequence problem', {'weight': 0.6})
('dynamic algorithm', 'edward prescott', {'weight': 0.6})
('dynamic algorithm', 'exponential time', {'weight': 0.6})
('dynamic algorithm', 'principle of optimality', {'weight': 0.6})
('dynamic algorithm', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('dynamic algorithm', 'mathematical game', {'weight': 0.6})
('dynamic algorithm', 'nancy stokey', {'weight': 0.6})
('dynamic algorithm', 'approximation algorithm', {'weight': 0.6})
('dynamic algorithm', 'discrete-time', {'weight': 0.6})
('dynamic algorithm', 'cyk algorithm', {'weight': 0.6})
('dynamic algorithm', 'markov decision process', {'weight': 0.6})
('dynamic algorithm', 'dynamization', {'weight': 0.7})
('dynamic algorithm', "powell's method", {'weight': 0.6})
('dynamic algorithm', 'wolfe conditions', {'weight': 0.6})
('dynamic algorithm', 'convexity in economics', {'weight': 0.6})
('dynamic algorithm', 'transposition table', {'weight': 0.6})
('dynamic algorithm', 'economics', {'weight': 0.6})
('dynamic algorithm', 'backward induction', {'weight': 0.6})
('dynamic algorithm', 'golden section search', {'weight': 0.6})
('dynamic algorithm', 'edit distance', {'weight': 0.6})
('dynamic algorithm', 'tree structure', {'weight': 0.6})
('dynamic algorithm', 'exchange algorithm', {'weight': 0.6})
('dynamic algorithm', 'dover publications', {'weight': 0.6})
('dynamic algorithm', 'seam carving', {'weight': 0.6})
('dynamic algorithm', 'recursive least squares', {'weight': 0.6})
('dynamic algorithm', 'metaheuristic', {'weight': 0.6})
('dynamic algorithm', 'quasi-newton method', {'weight': 0.6})
('dynamic algorithm', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('dynamic algorithm', 'robert e. lucas', {'weight': 0.6})
('dynamic algorithm', 'non-convexity (economics)', {'weight': 0.6})
('dynamic algorithm', 'computational complexity theory', {'weight': 0.5})
('dynamic algorithm', 'mathematical reviews', {'weight': 0.6})
('dynamic algorithm', 'puzzle', {'weight': 0.6})
('dynamic algorithm', 'associative array', {'weight': 0.6})
('dynamic algorithm', 'shortest path problem', {'weight': 0.6})
('dynamic algorithm', 'dynamic algorithm', {'weight': 1})
('dynamic algorithm', 'augmented lagrangian method', {'weight': 0.6})
('dynamic algorithm', 'charles delisi', {'weight': 0.6})
('dynamic algorithm', 'greedy algorithm', {'weight': 0.6})
('dynamic algorithm', "karmarkar's algorithm", {'weight': 0.6})
('dynamic algorithm', 'lattice models', {'weight': 0.6})
('dynamic algorithm', 'utility', {'weight': 0.6})
('dynamic algorithm', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('dynamic algorithm', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('dynamic algorithm', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('dynamic algorithm', 'international standard book number', {'weight': 0.6})
('dynamic algorithm', 'undirected graph', {'weight': 0.6})
('dynamic algorithm', 'scheme (programming language)', {'weight': 0.6})
('dynamic algorithm', 'rna structure', {'weight': 0.6})
('dynamic algorithm', 'hanoi', {'weight': 0.6})
('dynamic algorithm', 'perl', {'weight': 0.6})
('dynamic algorithm', 'digital object identifier', {'weight': 0.6})
('dynamic algorithm', 'sequential quadratic programming', {'weight': 0.6})
('dynamic algorithm', "dinic's algorithm", {'weight': 0.6})
('dynamic algorithm', 'pseudo-polynomial time', {'weight': 0.6})
('dynamic algorithm', 'partition problem', {'weight': 0.6})
('dynamic algorithm', 'stochastic programming', {'weight': 0.6})
('dynamic algorithm', 'hill climbing', {'weight': 0.6})
('dynamic algorithm', 'top-down', {'weight': 0.6})
('dynamic algorithm', 'de boor algorithm', {'weight': 0.6})
('dynamic algorithm', 'optimization algorithm', {'weight': 0.6})
('dynamic algorithm', "kruskal's algorithm", {'weight': 0.6})
('dynamic algorithm', 'jacques philippe marie binet', {'weight': 0.6})
('dynamic algorithm', 'tabu search', {'weight': 0.6})
('dynamic algorithm', 'divide and conquer algorithm', {'weight': 0.6})
('dynamic algorithm', "johnson's algorithm", {'weight': 0.6})
('dynamic algorithm', 'evolutionary algorithm', {'weight': 0.6})
('dynamic algorithm', 'clique-width', {'weight': 0.6})
('dynamic algorithm', 'dynamic programming', {'weight': 0.6})
('dynamic algorithm', 'subroutine', {'weight': 0.6})
('dynamic algorithm', 'simulated annealing', {'weight': 0.6})
('dynamic algorithm', 'tower of hanoi', {'weight': 0.6})
('dynamic algorithm', 'branch and bound', {'weight': 0.6})
('dynamic algorithm', 'engineering', {'weight': 0.6})
('dynamic algorithm', 'matroid', {'weight': 0.6})
('dynamic algorithm', 'viterbi algorithm', {'weight': 0.6})
('dynamic algorithm', "lemke's algorithm", {'weight': 0.6})
('dynamic algorithm', 'simplex algorithm', {'weight': 0.6})
('dynamic algorithm', 'local search (optimization)', {'weight': 0.6})
('dynamic algorithm', 'hessian matrix', {'weight': 0.6})
('dynamic algorithm', 'ibm system r', {'weight': 0.6})
('dynamic algorithm', 'penalty method', {'weight': 0.6})
('dynamic algorithm', 'prolog', {'weight': 0.6})
('dynamic algorithm', 'time-invariant system', {'weight': 0.6})
('dynamic algorithm', 'criss-cross algorithm', {'weight': 0.6})
('dynamic algorithm', 'revised simplex algorithm', {'weight': 0.6})
('dynamic algorithm', 'the mathematical association of america', {'weight': 0.6})
('dynamic algorithm', 'line search', {'weight': 0.6})
('dynamic algorithm', 'j (programming language)', {'weight': 0.6})
('dynamic algorithm', 'word wrap', {'weight': 0.6})
('dynamic algorithm', 'subset sum problem', {'weight': 0.6})
('dynamic algorithm', 'integer programming', {'weight': 0.6})
('dynamic algorithm', 'nucleosome', {'weight': 0.6})
('dynamic algorithm', 'dynamic connectivity', {'weight': 0.7})
('dynamic algorithm', 'earley algorithm', {'weight': 0.6})
('dynamic algorithm', 'referential transparency (computer science)', {'weight': 0.6})
('dynamic algorithm', 'recursion', {'weight': 0.6})
('dynamic algorithm', 'mathematica', {'weight': 0.6})
('dynamic algorithm', 'quicksort', {'weight': 0.6})
('dynamic algorithm', 'recursion (computer science)', {'weight': 0.6})
('dynamic algorithm', 'checkerboard', {'weight': 0.6})
('dynamic algorithm', 'computer science', {'weight': 0.6})
('dynamic algorithm', 'brute-force search', {'weight': 0.6})
('dynamic algorithm', 'mathematics', {'weight': 0.6})
('dynamic algorithm', 'depth-first search', {'weight': 0.6})
('dynamic algorithm', 'top-down and bottom-up design', {'weight': 0.6})
('dynamic algorithm', 'correspondence problem', {'weight': 0.6})
('dynamic algorithm', 'transcription factor', {'weight': 0.6})
('dynamic algorithm', 'tree decomposition', {'weight': 0.6})
('dynamic algorithm', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('dynamic algorithm', 'structural alignment', {'weight': 0.6})
('dynamic algorithm', 'local convergence', {'weight': 0.6})
('dynamic algorithm', 'knapsack problem', {'weight': 0.6})
('dynamic algorithm', 'graph algorithm', {'weight': 0.6})
('dynamic algorithm', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('dynamic algorithm', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('dynamic algorithm', 'hidden markov model', {'weight': 0.6})
('dynamic algorithm', 'string (computer science)', {'weight': 0.6})
('dynamic algorithm', 'bioinformatics', {'weight': 0.6})
('dynamic algorithm', 'genetics', {'weight': 0.6})
('dynamic algorithm', 'mathematical optimization', {'weight': 0.6})
('dynamic algorithm', 'artificial neural networks', {'weight': 0.6})
('dynamic algorithm', 'introduction to algorithms', {'weight': 0.6})
('dynamic algorithm', 'thomas h. cormen', {'weight': 0.6})
('dynamic algorithm', 'music information retrieval', {'weight': 0.6})
('dynamic algorithm', 'beat (music)', {'weight': 0.6})
('dynamic algorithm', 'longest common subsequence problem', {'weight': 0.6})
('dynamic algorithm', 'convex minimization', {'weight': 0.6})
('dynamic algorithm', 'successive parabolic interpolation', {'weight': 0.6})
('dynamic algorithm', 'fibonacci sequence', {'weight': 0.6})
('dynamic algorithm', 'maximum subarray problem', {'weight': 0.6})
('dynamic algorithm', 'convex optimization', {'weight': 0.6})
('dynamic algorithm', 'memoization', {'weight': 0.6})
('dynamic algorithm', 'richard bellman', {'weight': 0.6})
('dynamic algorithm', 'exponential growth', {'weight': 0.6})
('dynamic algorithm', 'charles e. leiserson', {'weight': 0.6})
('dynamic algorithm', 'charles erwin wilson', {'weight': 0.6})
('dynamic algorithm', 'interval scheduling', {'weight': 0.6})
('dynamic algorithm', 'chart parser', {'weight': 0.6})
('dynamic algorithm', 'travelling salesman problem', {'weight': 0.6})
('dynamic algorithm', 'bellman equation', {'weight': 0.6})
('iterative method', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('iterative method', 'photoshop', {'weight': 0.6})
('iterative method', 'sequence alignment', {'weight': 0.6})
('iterative method', 'flow network', {'weight': 0.6})
('iterative method', 'ellipsoid method', {'weight': 0.6})
('iterative method', 'chain matrix multiplication', {'weight': 0.6})
('iterative method', 'ieee', {'weight': 0.6})
('iterative method', 'backtracking', {'weight': 0.6})
('iterative method', 'nonlinear conjugate gradient method', {'weight': 0.6})
('iterative method', 'dynamic problem', {'weight': 0.6})
('iterative method', 'trust region', {'weight': 0.6})
('iterative method', 'function (mathematics)', {'weight': 0.6})
('iterative method', 'minimum spanning tree', {'weight': 0.6})
('iterative method', 'context-free grammar', {'weight': 0.6})
('iterative method', 'branch and cut', {'weight': 0.6})
('iterative method', 'state variable', {'weight': 0.6})
('iterative method', 'treewidth', {'weight': 0.6})
('iterative method', 'overlapping subproblem', {'weight': 0.6})
('iterative method', 'taylor & francis', {'weight': 0.6})
('iterative method', 'cutting-plane method', {'weight': 0.6})
('iterative method', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('iterative method', 'method of undetermined coefficients', {'weight': 0.6})
('iterative method', 'combinatorial optimization', {'weight': 0.6})
('iterative method', "newton's method in optimization", {'weight': 0.6})
('iterative method', 'matrix chain multiplication', {'weight': 0.6})
('iterative method', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('iterative method', 'dynamic time warping', {'weight': 0.6})
('iterative method', 'dynamic programming language', {'weight': 0.6})
('iterative method', 'call-by-need', {'weight': 0.6})
('iterative method', 'big-o notation', {'weight': 0.6})
('iterative method', 'comparison of optimization software', {'weight': 0.6})
('iterative method', 'quadratic programming', {'weight': 0.6})
('iterative method', 'common lisp', {'weight': 0.6})
('iterative method', 'barrier function', {'weight': 0.6})
('iterative method', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('iterative method', 'gradient descent', {'weight': 0.6})
('iterative method', 'patricia selinger', {'weight': 0.6})
('iterative method', 'discounting', {'weight': 0.6})
('iterative method', 'ronald l. rivest', {'weight': 0.6})
('iterative method', 'iterative method', {'weight': 1})
('iterative method', 'limited-memory bfgs', {'weight': 0.6})
('iterative method', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('iterative method', 'longest common substring problem', {'weight': 0.6})
('iterative method', 'numerical analysis', {'weight': 0.5})
('iterative method', 'clifford stein', {'weight': 0.6})
('iterative method', 'computer chess', {'weight': 0.6})
('iterative method', 'linear programming', {'weight': 0.6})
('iterative method', 'bitonic tour', {'weight': 0.6})
('iterative method', 'linear search problem', {'weight': 0.6})
('iterative method', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('iterative method', 'systems analysis', {'weight': 0.6})
('iterative method', 'capital (economics)', {'weight': 0.6})
('iterative method', 'levenshtein distance', {'weight': 0.6})
('iterative method', 'nonlinear programming', {'weight': 0.6})
('iterative method', 'computational complexity of mathematical operations', {'weight': 0.6})
('iterative method', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('iterative method', 'gradient', {'weight': 0.6})
('iterative method', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('iterative method', 'bulletin of the american mathematical society', {'weight': 0.6})
('iterative method', 'u.s. english', {'weight': 0.6})
('iterative method', 'refutation table', {'weight': 0.6})
('iterative method', 'heuristic algorithm', {'weight': 0.6})
('iterative method', 'successive linear programming', {'weight': 0.6})
('iterative method', 'optimal substructure', {'weight': 0.6})
('iterative method', 'mathematics portal', {'weight': 0.7})
('iterative method', 'programming language', {'weight': 0.6})
('iterative method', 'mergesort', {'weight': 0.6})
('iterative method', "dijkstra's algorithm", {'weight': 0.6})
('iterative method', 'subgradient method', {'weight': 0.6})
('iterative method', 'call-by-name', {'weight': 0.6})
('iterative method', 'longest increasing subsequence problem', {'weight': 0.6})
('iterative method', 'edward prescott', {'weight': 0.6})
('iterative method', 'exponential time', {'weight': 0.6})
('iterative method', 'principle of optimality', {'weight': 0.6})
('iterative method', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('iterative method', 'mathematical game', {'weight': 0.6})
('iterative method', 'nancy stokey', {'weight': 0.6})
('iterative method', 'approximation algorithm', {'weight': 0.6})
('iterative method', 'discrete-time', {'weight': 0.6})
('iterative method', 'cyk algorithm', {'weight': 0.6})
('iterative method', 'markov decision process', {'weight': 0.6})
('iterative method', "powell's method", {'weight': 0.6})
('iterative method', 'wolfe conditions', {'weight': 0.6})
('iterative method', 'convexity in economics', {'weight': 0.6})
('iterative method', 'transposition table', {'weight': 0.6})
('iterative method', 'economics', {'weight': 0.6})
('iterative method', 'backward induction', {'weight': 0.6})
('iterative method', 'golden section search', {'weight': 0.6})
('iterative method', 'edit distance', {'weight': 0.6})
('iterative method', 'tree structure', {'weight': 0.6})
('iterative method', 'exchange algorithm', {'weight': 0.6})
('iterative method', 'dover publications', {'weight': 0.6})
('iterative method', 'seam carving', {'weight': 0.6})
('iterative method', 'recursive least squares', {'weight': 0.6})
('iterative method', 'metaheuristic', {'weight': 0.6})
('iterative method', 'quasi-newton method', {'weight': 0.6})
('iterative method', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('iterative method', 'robert e. lucas', {'weight': 0.6})
('iterative method', 'non-convexity (economics)', {'weight': 0.6})
('iterative method', 'sr1 formula', {'weight': 0.6})
('iterative method', 'mathematical reviews', {'weight': 0.6})
('iterative method', 'puzzle', {'weight': 0.6})
('iterative method', 'associative array', {'weight': 0.6})
('iterative method', 'shortest path problem', {'weight': 0.6})
('iterative method', 'dynamic algorithm', {'weight': 0.6})
('iterative method', 'matrix splitting', {'weight': 0.7})
('iterative method', 'augmented lagrangian method', {'weight': 0.6})
('iterative method', 'charles delisi', {'weight': 0.6})
('iterative method', 'greedy algorithm', {'weight': 0.6})
('iterative method', "karmarkar's algorithm", {'weight': 0.6})
('iterative method', 'lattice models', {'weight': 0.6})
('iterative method', 'utility', {'weight': 0.6})
('iterative method', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('iterative method', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('iterative method', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('iterative method', 'international standard book number', {'weight': 0.6})
('iterative method', 'undirected graph', {'weight': 0.6})
('iterative method', 'scheme (programming language)', {'weight': 0.6})
('iterative method', 'rna structure', {'weight': 0.6})
('iterative method', 'hanoi', {'weight': 0.6})
('iterative method', 'perl', {'weight': 0.6})
('iterative method', 'digital object identifier', {'weight': 0.6})
('iterative method', 'sequential quadratic programming', {'weight': 0.6})
('iterative method', "dinic's algorithm", {'weight': 0.6})
('iterative method', 'pseudo-polynomial time', {'weight': 0.6})
('iterative method', 'partition problem', {'weight': 0.6})
('iterative method', 'stochastic programming', {'weight': 0.6})
('iterative method', 'hill climbing', {'weight': 0.6})
('iterative method', 'top-down', {'weight': 0.6})
('iterative method', 'de boor algorithm', {'weight': 0.6})
('iterative method', 'optimization algorithm', {'weight': 0.6})
('iterative method', "kruskal's algorithm", {'weight': 0.6})
('iterative method', 'jacques philippe marie binet', {'weight': 0.6})
('iterative method', 'tabu search', {'weight': 0.6})
('iterative method', 'divide and conquer algorithm', {'weight': 0.6})
('iterative method', 'iterative methods', {'weight': 0.5})
('iterative method', "johnson's algorithm", {'weight': 0.6})
('iterative method', 'evolutionary algorithm', {'weight': 0.6})
('iterative method', 'clique-width', {'weight': 0.6})
('iterative method', 'root-finding algorithm', {'weight': 0.7})
('iterative method', 'dynamic programming', {'weight': 0.6})
('iterative method', 'subroutine', {'weight': 0.6})
('iterative method', 'simulated annealing', {'weight': 0.6})
('iterative method', 'tower of hanoi', {'weight': 0.6})
('iterative method', 'branch and bound', {'weight': 0.6})
('iterative method', 'engineering', {'weight': 0.6})
('iterative method', 'matroid', {'weight': 0.6})
('iterative method', 'viterbi algorithm', {'weight': 0.6})
('iterative method', "lemke's algorithm", {'weight': 0.6})
('iterative method', 'simplex algorithm', {'weight': 0.6})
('iterative method', 'local search (optimization)', {'weight': 0.6})
('iterative method', 'hessian matrix', {'weight': 0.6})
('iterative method', 'ibm system r', {'weight': 0.6})
('iterative method', 'penalty method', {'weight': 0.6})
('iterative method', 'prolog', {'weight': 0.6})
('iterative method', 'time-invariant system', {'weight': 0.6})
('iterative method', 'criss-cross algorithm', {'weight': 0.6})
('iterative method', 'revised simplex algorithm', {'weight': 0.6})
('iterative method', 'the mathematical association of america', {'weight': 0.6})
('iterative method', 'line search', {'weight': 0.6})
('iterative method', 'j (programming language)', {'weight': 0.6})
('iterative method', 'word wrap', {'weight': 0.6})
('iterative method', 'subset sum problem', {'weight': 0.6})
('iterative method', 'integer programming', {'weight': 0.6})
('iterative method', 'nucleosome', {'weight': 0.6})
('iterative method', 'earley algorithm', {'weight': 0.6})
('iterative method', 'referential transparency (computer science)', {'weight': 0.6})
('iterative method', 'recursion', {'weight': 0.6})
('iterative method', 'mathematica', {'weight': 0.6})
('iterative method', 'quicksort', {'weight': 0.6})
('iterative method', 'recursion (computer science)', {'weight': 0.6})
('iterative method', 'checkerboard', {'weight': 0.6})
('iterative method', 'computer science', {'weight': 0.6})
('iterative method', 'brute-force search', {'weight': 0.6})
('iterative method', 'mathematics', {'weight': 0.6})
('iterative method', 'depth-first search', {'weight': 0.6})
('iterative method', 'top-down and bottom-up design', {'weight': 0.6})
('iterative method', 'correspondence problem', {'weight': 0.6})
('iterative method', 'transcription factor', {'weight': 0.6})
('iterative method', 'tree decomposition', {'weight': 0.6})
('iterative method', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('iterative method', 'structural alignment', {'weight': 0.6})
('iterative method', 'local convergence', {'weight': 0.6})
('iterative method', 'knapsack problem', {'weight': 0.6})
('iterative method', 'graph algorithm', {'weight': 0.6})
('iterative method', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('iterative method', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('iterative method', 'hidden markov model', {'weight': 0.6})
('iterative method', 'string (computer science)', {'weight': 0.6})
('iterative method', 'bioinformatics', {'weight': 0.6})
('iterative method', 'genetics', {'weight': 0.6})
('iterative method', 'mathematical optimization', {'weight': 0.6})
('iterative method', 'artificial neural networks', {'weight': 0.6})
('iterative method', 'introduction to algorithms', {'weight': 0.6})
('iterative method', 'thomas h. cormen', {'weight': 0.6})
('iterative method', 'music information retrieval', {'weight': 0.6})
('iterative method', 'beat (music)', {'weight': 0.6})
('iterative method', 'longest common subsequence problem', {'weight': 0.6})
('iterative method', 'convex minimization', {'weight': 0.6})
('iterative method', 'successive parabolic interpolation', {'weight': 0.6})
('iterative method', 'fibonacci sequence', {'weight': 0.6})
('iterative method', 'maximum subarray problem', {'weight': 0.6})
('iterative method', 'convex optimization', {'weight': 0.6})
('iterative method', 'memoization', {'weight': 0.6})
('iterative method', 'richard bellman', {'weight': 0.6})
('iterative method', 'exponential growth', {'weight': 0.6})
('iterative method', 'charles e. leiserson', {'weight': 0.6})
('iterative method', 'charles erwin wilson', {'weight': 0.6})
('iterative method', 'interval scheduling', {'weight': 0.6})
('iterative method', 'chart parser', {'weight': 0.6})
('iterative method', 'travelling salesman problem', {'weight': 0.6})
('iterative method', 'bellman equation', {'weight': 0.6})
("karmarkar's algorithm", 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
("karmarkar's algorithm", 'photoshop', {'weight': 0.6})
("karmarkar's algorithm", 'sequence alignment', {'weight': 0.6})
("karmarkar's algorithm", 'flow network', {'weight': 0.6})
("karmarkar's algorithm", 'ellipsoid method', {'weight': 0.6})
("karmarkar's algorithm", 'chain matrix multiplication', {'weight': 0.6})
("karmarkar's algorithm", 'ieee', {'weight': 0.6})
("karmarkar's algorithm", 'backtracking', {'weight': 0.6})
("karmarkar's algorithm", 'nonlinear conjugate gradient method', {'weight': 0.6})
("karmarkar's algorithm", 'dynamic problem', {'weight': 0.6})
("karmarkar's algorithm", 'trust region', {'weight': 0.6})
("karmarkar's algorithm", 'function (mathematics)', {'weight': 0.6})
("karmarkar's algorithm", 'minimum spanning tree', {'weight': 0.6})
("karmarkar's algorithm", 'context-free grammar', {'weight': 0.6})
("karmarkar's algorithm", 'branch and cut', {'weight': 0.6})
("karmarkar's algorithm", 'state variable', {'weight': 0.6})
("karmarkar's algorithm", 'treewidth', {'weight': 0.6})
("karmarkar's algorithm", 'optimization algorithms and methods', {'weight': 0.5})
("karmarkar's algorithm", 'overlapping subproblem', {'weight': 0.6})
("karmarkar's algorithm", 'taylor & francis', {'weight': 0.6})
("karmarkar's algorithm", 'cutting-plane method', {'weight': 0.6})
("karmarkar's algorithm", 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
("karmarkar's algorithm", 'method of undetermined coefficients', {'weight': 0.6})
("karmarkar's algorithm", 'combinatorial optimization', {'weight': 0.6})
("karmarkar's algorithm", "newton's method in optimization", {'weight': 0.6})
("karmarkar's algorithm", 'matrix chain multiplication', {'weight': 0.6})
("karmarkar's algorithm", 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
("karmarkar's algorithm", 'dynamic time warping', {'weight': 0.6})
("karmarkar's algorithm", 'dynamic programming language', {'weight': 0.6})
("karmarkar's algorithm", 'call-by-need', {'weight': 0.6})
("karmarkar's algorithm", 'big-o notation', {'weight': 0.6})
("karmarkar's algorithm", 'comparison of optimization software', {'weight': 0.6})
("karmarkar's algorithm", 'quadratic programming', {'weight': 0.6})
("karmarkar's algorithm", 'common lisp', {'weight': 0.6})
("karmarkar's algorithm", 'barrier function', {'weight': 0.6})
("karmarkar's algorithm", 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
("karmarkar's algorithm", 'gradient descent', {'weight': 0.6})
("karmarkar's algorithm", 'patricia selinger', {'weight': 0.6})
("karmarkar's algorithm", 'discounting', {'weight': 0.6})
("karmarkar's algorithm", 'ronald l. rivest', {'weight': 0.6})
("karmarkar's algorithm", 'iterative method', {'weight': 0.6})
("karmarkar's algorithm", 'limited-memory bfgs', {'weight': 0.6})
("karmarkar's algorithm", 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
("karmarkar's algorithm", 'longest common substring problem', {'weight': 0.6})
("karmarkar's algorithm", 'clifford stein', {'weight': 0.6})
("karmarkar's algorithm", 'computer chess', {'weight': 0.6})
("karmarkar's algorithm", 'linear programming', {'weight': 0.6})
("karmarkar's algorithm", 'bitonic tour', {'weight': 0.6})
("karmarkar's algorithm", 'linear search problem', {'weight': 0.6})
("karmarkar's algorithm", 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
("karmarkar's algorithm", 'systems analysis', {'weight': 0.6})
("karmarkar's algorithm", 'capital (economics)', {'weight': 0.6})
("karmarkar's algorithm", 'levenshtein distance', {'weight': 0.6})
("karmarkar's algorithm", 'nonlinear programming', {'weight': 0.6})
("karmarkar's algorithm", 'computational complexity of mathematical operations', {'weight': 0.6})
("karmarkar's algorithm", 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
("karmarkar's algorithm", 'gradient', {'weight': 0.6})
("karmarkar's algorithm", 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
("karmarkar's algorithm", 'bulletin of the american mathematical society', {'weight': 0.6})
("karmarkar's algorithm", 'u.s. english', {'weight': 0.6})
("karmarkar's algorithm", 'refutation table', {'weight': 0.6})
("karmarkar's algorithm", 'heuristic algorithm', {'weight': 0.6})
("karmarkar's algorithm", 'successive linear programming', {'weight': 0.6})
("karmarkar's algorithm", 'optimal substructure', {'weight': 0.6})
("karmarkar's algorithm", 'programming language', {'weight': 0.6})
("karmarkar's algorithm", 'mergesort', {'weight': 0.6})
("karmarkar's algorithm", "dijkstra's algorithm", {'weight': 0.6})
("karmarkar's algorithm", 'subgradient method', {'weight': 0.6})
("karmarkar's algorithm", 'call-by-name', {'weight': 0.6})
("karmarkar's algorithm", 'longest increasing subsequence problem', {'weight': 0.6})
("karmarkar's algorithm", 'edward prescott', {'weight': 0.6})
("karmarkar's algorithm", 'exponential time', {'weight': 0.6})
("karmarkar's algorithm", 'principle of optimality', {'weight': 0.6})
("karmarkar's algorithm", "bor\xe5\xafvka's algorithm", {'weight': 0.6})
("karmarkar's algorithm", 'mathematical game', {'weight': 0.6})
("karmarkar's algorithm", 'nancy stokey', {'weight': 0.6})
("karmarkar's algorithm", 'approximation algorithm', {'weight': 0.6})
("karmarkar's algorithm", 'discrete-time', {'weight': 0.6})
("karmarkar's algorithm", 'cyk algorithm', {'weight': 0.6})
("karmarkar's algorithm", 'markov decision process', {'weight': 0.6})
("karmarkar's algorithm", "powell's method", {'weight': 0.6})
("karmarkar's algorithm", 'wolfe conditions', {'weight': 0.6})
("karmarkar's algorithm", 'convexity in economics', {'weight': 0.6})
("karmarkar's algorithm", 'transposition table', {'weight': 0.6})
("karmarkar's algorithm", 'economics', {'weight': 0.6})
("karmarkar's algorithm", 'backward induction', {'weight': 0.6})
("karmarkar's algorithm", 'golden section search', {'weight': 0.6})
("karmarkar's algorithm", 'edit distance', {'weight': 0.6})
("karmarkar's algorithm", 'tree structure', {'weight': 0.6})
("karmarkar's algorithm", 'exchange algorithm', {'weight': 0.6})
("karmarkar's algorithm", 'dover publications', {'weight': 0.6})
("karmarkar's algorithm", 'seam carving', {'weight': 0.6})
("karmarkar's algorithm", 'recursive least squares', {'weight': 0.6})
("karmarkar's algorithm", 'metaheuristic', {'weight': 0.6})
("karmarkar's algorithm", 'quasi-newton method', {'weight': 0.6})
("karmarkar's algorithm", 'on-line encyclopedia of integer sequences', {'weight': 0.6})
("karmarkar's algorithm", 'robert e. lucas', {'weight': 0.6})
("karmarkar's algorithm", 'non-convexity (economics)', {'weight': 0.6})
("karmarkar's algorithm", 'sr1 formula', {'weight': 0.6})
("karmarkar's algorithm", 'mathematical reviews', {'weight': 0.6})
("karmarkar's algorithm", 'puzzle', {'weight': 0.6})
("karmarkar's algorithm", 'associative array', {'weight': 0.6})
("karmarkar's algorithm", 'shortest path problem', {'weight': 0.6})
("karmarkar's algorithm", 'dynamic algorithm', {'weight': 0.6})
("karmarkar's algorithm", 'augmented lagrangian method', {'weight': 0.6})
("karmarkar's algorithm", 'charles delisi', {'weight': 0.6})
("karmarkar's algorithm", 'greedy algorithm', {'weight': 0.6})
("karmarkar's algorithm", "karmarkar's algorithm", {'weight': 1})
("karmarkar's algorithm", 'software patent law', {'weight': 0.5})
("karmarkar's algorithm", 'lattice models', {'weight': 0.6})
("karmarkar's algorithm", 'utility', {'weight': 0.6})
("karmarkar's algorithm", 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
("karmarkar's algorithm", 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
("karmarkar's algorithm", 'push-relabel maximum flow algorithm', {'weight': 0.6})
("karmarkar's algorithm", 'international standard book number', {'weight': 0.6})
("karmarkar's algorithm", 'undirected graph', {'weight': 0.6})
("karmarkar's algorithm", 'scheme (programming language)', {'weight': 0.6})
("karmarkar's algorithm", 'rna structure', {'weight': 0.6})
("karmarkar's algorithm", 'hanoi', {'weight': 0.6})
("karmarkar's algorithm", 'perl', {'weight': 0.6})
("karmarkar's algorithm", 'digital object identifier', {'weight': 0.6})
("karmarkar's algorithm", 'sequential quadratic programming', {'weight': 0.6})
("karmarkar's algorithm", "dinic's algorithm", {'weight': 0.6})
("karmarkar's algorithm", 'pseudo-polynomial time', {'weight': 0.6})
("karmarkar's algorithm", 'partition problem', {'weight': 0.6})
("karmarkar's algorithm", 'stochastic programming', {'weight': 0.6})
("karmarkar's algorithm", 'hill climbing', {'weight': 0.6})
("karmarkar's algorithm", 'top-down', {'weight': 0.6})
("karmarkar's algorithm", 'de boor algorithm', {'weight': 0.6})
("karmarkar's algorithm", 'optimization algorithm', {'weight': 0.6})
("karmarkar's algorithm", "kruskal's algorithm", {'weight': 0.6})
("karmarkar's algorithm", 'jacques philippe marie binet', {'weight': 0.6})
("karmarkar's algorithm", 'tabu search', {'weight': 0.6})
("karmarkar's algorithm", 'divide and conquer algorithm', {'weight': 0.6})
("karmarkar's algorithm", "johnson's algorithm", {'weight': 0.6})
("karmarkar's algorithm", 'evolutionary algorithm', {'weight': 0.6})
("karmarkar's algorithm", 'clique-width', {'weight': 0.6})
("karmarkar's algorithm", 'dynamic programming', {'weight': 0.6})
("karmarkar's algorithm", 'subroutine', {'weight': 0.6})
("karmarkar's algorithm", 'simulated annealing', {'weight': 0.6})
("karmarkar's algorithm", 'tower of hanoi', {'weight': 0.6})
("karmarkar's algorithm", 'branch and bound', {'weight': 0.6})
("karmarkar's algorithm", 'engineering', {'weight': 0.6})
("karmarkar's algorithm", 'matroid', {'weight': 0.6})
("karmarkar's algorithm", 'viterbi algorithm', {'weight': 0.6})
("karmarkar's algorithm", "lemke's algorithm", {'weight': 0.6})
("karmarkar's algorithm", 'simplex algorithm', {'weight': 0.6})
("karmarkar's algorithm", 'local search (optimization)', {'weight': 0.6})
("karmarkar's algorithm", 'hessian matrix', {'weight': 0.6})
("karmarkar's algorithm", 'ibm system r', {'weight': 0.6})
("karmarkar's algorithm", 'penalty method', {'weight': 0.6})
("karmarkar's algorithm", 'prolog', {'weight': 0.6})
("karmarkar's algorithm", 'time-invariant system', {'weight': 0.6})
("karmarkar's algorithm", 'criss-cross algorithm', {'weight': 0.6})
("karmarkar's algorithm", 'revised simplex algorithm', {'weight': 0.6})
("karmarkar's algorithm", 'the mathematical association of america', {'weight': 0.6})
("karmarkar's algorithm", 'line search', {'weight': 0.6})
("karmarkar's algorithm", 'j (programming language)', {'weight': 0.6})
("karmarkar's algorithm", 'word wrap', {'weight': 0.6})
("karmarkar's algorithm", 'subset sum problem', {'weight': 0.6})
("karmarkar's algorithm", 'integer programming', {'weight': 0.6})
("karmarkar's algorithm", 'nucleosome', {'weight': 0.6})
("karmarkar's algorithm", 'earley algorithm', {'weight': 0.6})
("karmarkar's algorithm", 'referential transparency (computer science)', {'weight': 0.6})
("karmarkar's algorithm", 'recursion', {'weight': 0.6})
("karmarkar's algorithm", 'mathematica', {'weight': 0.6})
("karmarkar's algorithm", 'quicksort', {'weight': 0.6})
("karmarkar's algorithm", 'recursion (computer science)', {'weight': 0.6})
("karmarkar's algorithm", 'checkerboard', {'weight': 0.6})
("karmarkar's algorithm", 'computer science', {'weight': 0.6})
("karmarkar's algorithm", 'brute-force search', {'weight': 0.6})
("karmarkar's algorithm", 'mathematics', {'weight': 0.6})
("karmarkar's algorithm", 'depth-first search', {'weight': 0.6})
("karmarkar's algorithm", 'top-down and bottom-up design', {'weight': 0.6})
("karmarkar's algorithm", 'correspondence problem', {'weight': 0.6})
("karmarkar's algorithm", 'transcription factor', {'weight': 0.6})
("karmarkar's algorithm", 'tree decomposition', {'weight': 0.6})
("karmarkar's algorithm", 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
("karmarkar's algorithm", 'structural alignment', {'weight': 0.6})
("karmarkar's algorithm", 'local convergence', {'weight': 0.6})
("karmarkar's algorithm", 'knapsack problem', {'weight': 0.6})
("karmarkar's algorithm", 'graph algorithm', {'weight': 0.6})
("karmarkar's algorithm", 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
("karmarkar's algorithm", 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
("karmarkar's algorithm", 'hidden markov model', {'weight': 0.6})
("karmarkar's algorithm", 'string (computer science)', {'weight': 0.6})
("karmarkar's algorithm", 'bioinformatics', {'weight': 0.6})
("karmarkar's algorithm", 'genetics', {'weight': 0.6})
("karmarkar's algorithm", 'mathematical optimization', {'weight': 0.6})
("karmarkar's algorithm", 'artificial neural networks', {'weight': 0.6})
("karmarkar's algorithm", 'introduction to algorithms', {'weight': 0.6})
("karmarkar's algorithm", 'thomas h. cormen', {'weight': 0.6})
("karmarkar's algorithm", 'music information retrieval', {'weight': 0.6})
("karmarkar's algorithm", 'beat (music)', {'weight': 0.6})
("karmarkar's algorithm", 'longest common subsequence problem', {'weight': 0.6})
("karmarkar's algorithm", 'convex minimization', {'weight': 0.6})
("karmarkar's algorithm", 'successive parabolic interpolation', {'weight': 0.6})
("karmarkar's algorithm", 'fibonacci sequence', {'weight': 0.6})
("karmarkar's algorithm", 'maximum subarray problem', {'weight': 0.6})
("karmarkar's algorithm", 'convex optimization', {'weight': 0.6})
("karmarkar's algorithm", 'memoization', {'weight': 0.6})
("karmarkar's algorithm", 'richard bellman', {'weight': 0.6})
("karmarkar's algorithm", 'exponential growth', {'weight': 0.6})
("karmarkar's algorithm", 'charles e. leiserson', {'weight': 0.6})
("karmarkar's algorithm", 'charles erwin wilson', {'weight': 0.6})
("karmarkar's algorithm", 'interval scheduling', {'weight': 0.6})
("karmarkar's algorithm", 'chart parser', {'weight': 0.6})
("karmarkar's algorithm", 'travelling salesman problem', {'weight': 0.6})
("karmarkar's algorithm", 'bellman equation', {'weight': 0.6})
('linear programming', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('linear programming', 'photoshop', {'weight': 0.6})
('linear programming', 'sequence alignment', {'weight': 0.6})
('linear programming', 'ellipsoid method', {'weight': 0.6})
('linear programming', 'chain matrix multiplication', {'weight': 0.6})
('linear programming', 'ieee', {'weight': 0.6})
('linear programming', 'backtracking', {'weight': 0.6})
('linear programming', 'nonlinear conjugate gradient method', {'weight': 0.6})
('linear programming', 'dynamic problem', {'weight': 0.6})
('linear programming', 'trust region', {'weight': 0.6})
('linear programming', 'function (mathematics)', {'weight': 0.6})
('linear programming', 'minimum spanning tree', {'weight': 0.6})
('linear programming', 'context-free grammar', {'weight': 0.6})
('linear programming', 'branch and cut', {'weight': 0.6})
('linear programming', 'state variable', {'weight': 0.6})
('linear programming', 'treewidth', {'weight': 0.6})
('linear programming', 'overlapping subproblem', {'weight': 0.6})
('linear programming', 'refutation table', {'weight': 0.6})
('linear programming', 'cutting-plane method', {'weight': 0.6})
('linear programming', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('linear programming', 'method of undetermined coefficients', {'weight': 0.6})
('linear programming', 'flow network', {'weight': 0.6})
('linear programming', "newton's method in optimization", {'weight': 0.6})
('linear programming', 'matrix chain multiplication', {'weight': 0.6})
('linear programming', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('linear programming', 'dynamic time warping', {'weight': 0.6})
('linear programming', 'dynamic programming language', {'weight': 0.6})
('linear programming', 'call-by-need', {'weight': 0.6})
('linear programming', 'big-o notation', {'weight': 0.6})
('linear programming', 'comparison of optimization software', {'weight': 0.6})
('linear programming', 'quadratic programming', {'weight': 0.6})
('linear programming', 'common lisp', {'weight': 0.6})
('linear programming', 'barrier function', {'weight': 0.6})
('linear programming', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('linear programming', 'gradient descent', {'weight': 0.6})
('linear programming', 'patricia selinger', {'weight': 0.6})
('linear programming', 'discounting', {'weight': 0.6})
('linear programming', 'ronald l. rivest', {'weight': 0.6})
('linear programming', 'iterative method', {'weight': 0.6})
('linear programming', 'limited-memory bfgs', {'weight': 0.6})
('linear programming', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('linear programming', 'longest common substring problem', {'weight': 0.6})
('linear programming', 'clifford stein', {'weight': 0.6})
('linear programming', 'computer chess', {'weight': 0.6})
('linear programming', 'linear programming', {'weight': 1})
('linear programming', 'bitonic tour', {'weight': 0.6})
('linear programming', 'linear search problem', {'weight': 0.6})
('linear programming', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('linear programming', 'systems analysis', {'weight': 0.6})
('linear programming', 'capital (economics)', {'weight': 0.6})
('linear programming', 'levenshtein distance', {'weight': 0.6})
('linear programming', 'nonlinear programming', {'weight': 0.6})
('linear programming', 'computational complexity of mathematical operations', {'weight': 0.6})
('linear programming', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('linear programming', 'gradient', {'weight': 0.6})
('linear programming', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('linear programming', 'bulletin of the american mathematical society', {'weight': 0.6})
('linear programming', 'u.s. english', {'weight': 0.6})
('linear programming', 'combinatorial optimization', {'weight': 0.6})
('linear programming', 'heuristic algorithm', {'weight': 0.6})
('linear programming', 'successive linear programming', {'weight': 0.6})
('linear programming', 'optimal substructure', {'weight': 0.6})
('linear programming', 'taylor & francis', {'weight': 0.6})
('linear programming', 'programming language', {'weight': 0.6})
('linear programming', 'mergesort', {'weight': 0.6})
('linear programming', "dijkstra's algorithm", {'weight': 0.6})
('linear programming', 'subgradient method', {'weight': 0.6})
('linear programming', 'call-by-name', {'weight': 0.6})
('linear programming', 'longest increasing subsequence problem', {'weight': 0.6})
('linear programming', 'edward prescott', {'weight': 0.6})
('linear programming', 'exponential time', {'weight': 0.6})
('linear programming', 'principle of optimality', {'weight': 0.6})
('linear programming', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('linear programming', 'mathematical game', {'weight': 0.6})
('linear programming', 'nancy stokey', {'weight': 0.6})
('linear programming', 'approximation algorithm', {'weight': 0.6})
('linear programming', 'discrete-time', {'weight': 0.6})
('linear programming', 'cyk algorithm', {'weight': 0.6})
('linear programming', 'markov decision process', {'weight': 0.6})
('linear programming', "powell's method", {'weight': 0.6})
('linear programming', 'wolfe conditions', {'weight': 0.6})
('linear programming', 'convexity in economics', {'weight': 0.6})
('linear programming', 'transposition table', {'weight': 0.6})
('linear programming', 'economics', {'weight': 0.6})
('linear programming', 'backward induction', {'weight': 0.6})
('linear programming', 'golden section search', {'weight': 0.6})
('linear programming', 'edit distance', {'weight': 0.6})
('linear programming', 'tree structure', {'weight': 0.6})
('linear programming', 'exchange algorithm', {'weight': 0.6})
('linear programming', 'dover publications', {'weight': 0.6})
('linear programming', 'seam carving', {'weight': 0.6})
('linear programming', 'recursive least squares', {'weight': 0.6})
('linear programming', 'metaheuristic', {'weight': 0.6})
('linear programming', 'quasi-newton method', {'weight': 0.6})
('linear programming', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('linear programming', 'robert e. lucas', {'weight': 0.6})
('linear programming', 'non-convexity (economics)', {'weight': 0.6})
('linear programming', 'sr1 formula', {'weight': 0.6})
('linear programming', 'mathematical reviews', {'weight': 0.6})
('linear programming', 'puzzle', {'weight': 0.6})
('linear programming', 'associative array', {'weight': 0.6})
('linear programming', 'shortest path problem', {'weight': 0.6})
('linear programming', 'dynamic algorithm', {'weight': 0.6})
('linear programming', 'augmented lagrangian method', {'weight': 0.6})
('linear programming', 'charles delisi', {'weight': 0.6})
('linear programming', 'greedy algorithm', {'weight': 0.6})
('linear programming', "karmarkar's algorithm", {'weight': 0.6})
('linear programming', 'lattice models', {'weight': 0.6})
('linear programming', 'utility', {'weight': 0.6})
('linear programming', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('linear programming', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('linear programming', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('linear programming', 'international standard book number', {'weight': 0.6})
('linear programming', 'undirected graph', {'weight': 0.6})
('linear programming', 'scheme (programming language)', {'weight': 0.6})
('linear programming', 'rna structure', {'weight': 0.6})
('linear programming', 'hanoi', {'weight': 0.6})
('linear programming', 'perl', {'weight': 0.6})
('linear programming', 'digital object identifier', {'weight': 0.6})
('linear programming', 'sequential quadratic programming', {'weight': 0.6})
('linear programming', "dinic's algorithm", {'weight': 0.6})
('linear programming', 'pseudo-polynomial time', {'weight': 0.6})
('linear programming', 'partition problem', {'weight': 0.6})
('linear programming', 'operations research', {'weight': 0.5})
('linear programming', 'hill climbing', {'weight': 0.6})
('linear programming', 'top-down', {'weight': 0.6})
('linear programming', 'de boor algorithm', {'weight': 0.6})
('linear programming', 'optimization algorithm', {'weight': 0.6})
('linear programming', "kruskal's algorithm", {'weight': 0.6})
('linear programming', 'jacques philippe marie binet', {'weight': 0.6})
('linear programming', 'tabu search', {'weight': 0.6})
('linear programming', 'divide and conquer algorithm', {'weight': 0.6})
('linear programming', "johnson's algorithm", {'weight': 0.6})
('linear programming', 'evolutionary algorithm', {'weight': 0.6})
('linear programming', 'clique-width', {'weight': 0.6})
('linear programming', 'dynamic programming', {'weight': 0.6})
('linear programming', 'subroutine', {'weight': 0.6})
('linear programming', 'simulated annealing', {'weight': 0.6})
('linear programming', 'tower of hanoi', {'weight': 0.6})
('linear programming', 'branch and bound', {'weight': 0.6})
('linear programming', 'engineering', {'weight': 0.6})
('linear programming', 'matroid', {'weight': 0.6})
('linear programming', 'viterbi algorithm', {'weight': 0.6})
('linear programming', "lemke's algorithm", {'weight': 0.6})
('linear programming', 'simplex algorithm', {'weight': 0.6})
('linear programming', 'stochastic programming', {'weight': 0.6})
('linear programming', 'hessian matrix', {'weight': 0.6})
('linear programming', 'ibm system r', {'weight': 0.6})
('linear programming', 'penalty method', {'weight': 0.6})
('linear programming', 'prolog', {'weight': 0.6})
('linear programming', 'time-invariant system', {'weight': 0.6})
('linear programming', 'criss-cross algorithm', {'weight': 0.6})
('linear programming', 'revised simplex algorithm', {'weight': 0.6})
('linear programming', 'the mathematical association of america', {'weight': 0.6})
('linear programming', 'line search', {'weight': 0.6})
('linear programming', 'j (programming language)', {'weight': 0.6})
('linear programming', 'word wrap', {'weight': 0.6})
('linear programming', 'subset sum problem', {'weight': 0.6})
('linear programming', 'integer programming', {'weight': 0.6})
('linear programming', 'nucleosome', {'weight': 0.6})
('linear programming', 'earley algorithm', {'weight': 0.6})
('linear programming', 'referential transparency (computer science)', {'weight': 0.6})
('linear programming', 'recursion', {'weight': 0.6})
('linear programming', 'mathematica', {'weight': 0.6})
('linear programming', 'quicksort', {'weight': 0.6})
('linear programming', 'recursion (computer science)', {'weight': 0.6})
('linear programming', 'checkerboard', {'weight': 0.6})
('linear programming', 'computer science', {'weight': 0.6})
('linear programming', 'brute-force search', {'weight': 0.6})
('linear programming', 'mathematics', {'weight': 0.6})
('linear programming', 'depth-first search', {'weight': 0.6})
('linear programming', 'top-down and bottom-up design', {'weight': 0.6})
('linear programming', 'correspondence problem', {'weight': 0.6})
('linear programming', 'transcription factor', {'weight': 0.6})
('linear programming', 'tree decomposition', {'weight': 0.6})
('linear programming', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('linear programming', 'structural alignment', {'weight': 0.6})
('linear programming', 'local convergence', {'weight': 0.6})
('linear programming', 'knapsack problem', {'weight': 0.6})
('linear programming', 'graph algorithm', {'weight': 0.6})
('linear programming', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('linear programming', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('linear programming', 'hidden markov model', {'weight': 0.6})
('linear programming', 'string (computer science)', {'weight': 0.6})
('linear programming', 'bioinformatics', {'weight': 0.6})
('linear programming', 'genetics', {'weight': 0.6})
('linear programming', 'mathematical optimization', {'weight': 0.6})
('linear programming', 'local search (optimization)', {'weight': 0.6})
('linear programming', 'artificial neural networks', {'weight': 0.6})
('linear programming', 'introduction to algorithms', {'weight': 0.6})
('linear programming', 'thomas h. cormen', {'weight': 0.6})
('linear programming', 'music information retrieval', {'weight': 0.6})
('linear programming', 'beat (music)', {'weight': 0.6})
('linear programming', 'longest common subsequence problem', {'weight': 0.6})
('linear programming', 'convex minimization', {'weight': 0.6})
('linear programming', 'successive parabolic interpolation', {'weight': 0.6})
('linear programming', 'fibonacci sequence', {'weight': 0.6})
('linear programming', 'maximum subarray problem', {'weight': 0.6})
('linear programming', 'convex optimization', {'weight': 0.6})
('linear programming', 'memoization', {'weight': 0.6})
('linear programming', 'richard bellman', {'weight': 0.6})
('linear programming', 'exponential growth', {'weight': 0.6})
('linear programming', 'charles e. leiserson', {'weight': 0.6})
('linear programming', 'charles erwin wilson', {'weight': 0.6})
('linear programming', 'interval scheduling', {'weight': 0.6})
('linear programming', 'chart parser', {'weight': 0.6})
('linear programming', 'travelling salesman problem', {'weight': 0.6})
('linear programming', 'bellman equation', {'weight': 0.6})
('bitonic tour', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('bitonic tour', 'photoshop', {'weight': 0.6})
('bitonic tour', 'sequence alignment', {'weight': 0.6})
('bitonic tour', 'flow network', {'weight': 0.6})
('bitonic tour', 'ellipsoid method', {'weight': 0.6})
('bitonic tour', 'chain matrix multiplication', {'weight': 0.6})
('bitonic tour', 'ieee', {'weight': 0.6})
('bitonic tour', 'backtracking', {'weight': 0.6})
('bitonic tour', 'nonlinear conjugate gradient method', {'weight': 0.6})
('bitonic tour', 'dynamic problem', {'weight': 0.6})
('bitonic tour', 'trust region', {'weight': 0.6})
('bitonic tour', 'function (mathematics)', {'weight': 0.6})
('bitonic tour', 'minimum spanning tree', {'weight': 0.6})
('bitonic tour', 'context-free grammar', {'weight': 0.6})
('bitonic tour', 'branch and cut', {'weight': 0.6})
('bitonic tour', 'state variable', {'weight': 0.6})
('bitonic tour', 'treewidth', {'weight': 0.6})
('bitonic tour', 'overlapping subproblem', {'weight': 0.6})
('bitonic tour', 'taylor & francis', {'weight': 0.6})
('bitonic tour', 'cutting-plane method', {'weight': 0.6})
('bitonic tour', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('bitonic tour', 'method of undetermined coefficients', {'weight': 0.6})
('bitonic tour', 'combinatorial optimization', {'weight': 0.6})
('bitonic tour', "newton's method in optimization", {'weight': 0.6})
('bitonic tour', 'matrix chain multiplication', {'weight': 0.6})
('bitonic tour', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('bitonic tour', 'dynamic time warping', {'weight': 0.6})
('bitonic tour', 'dynamic programming language', {'weight': 0.6})
('bitonic tour', 'call-by-need', {'weight': 0.6})
('bitonic tour', 'big-o notation', {'weight': 0.6})
('bitonic tour', 'comparison of optimization software', {'weight': 0.6})
('bitonic tour', 'quadratic programming', {'weight': 0.6})
('bitonic tour', 'common lisp', {'weight': 0.6})
('bitonic tour', 'barrier function', {'weight': 0.6})
('bitonic tour', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('bitonic tour', 'gradient descent', {'weight': 0.6})
('bitonic tour', 'patricia selinger', {'weight': 0.6})
('bitonic tour', 'discounting', {'weight': 0.6})
('bitonic tour', 'ronald l. rivest', {'weight': 0.6})
('bitonic tour', 'iterative method', {'weight': 0.6})
('bitonic tour', 'limited-memory bfgs', {'weight': 0.6})
('bitonic tour', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('bitonic tour', 'longest common substring problem', {'weight': 0.6})
('bitonic tour', 'clifford stein', {'weight': 0.6})
('bitonic tour', 'computer chess', {'weight': 0.6})
('bitonic tour', 'linear programming', {'weight': 0.6})
('bitonic tour', 'bitonic tour', {'weight': 1})
('bitonic tour', 'linear search problem', {'weight': 0.6})
('bitonic tour', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('bitonic tour', 'systems analysis', {'weight': 0.6})
('bitonic tour', 'capital (economics)', {'weight': 0.6})
('bitonic tour', 'levenshtein distance', {'weight': 0.6})
('bitonic tour', 'nonlinear programming', {'weight': 0.6})
('bitonic tour', 'computational complexity of mathematical operations', {'weight': 0.6})
('bitonic tour', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('bitonic tour', 'gradient', {'weight': 0.6})
('bitonic tour', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('bitonic tour', 'bulletin of the american mathematical society', {'weight': 0.6})
('bitonic tour', 'u.s. english', {'weight': 0.6})
('bitonic tour', 'refutation table', {'weight': 0.6})
('bitonic tour', 'heuristic algorithm', {'weight': 0.6})
('bitonic tour', 'successive linear programming', {'weight': 0.6})
('bitonic tour', 'optimal substructure', {'weight': 0.6})
('bitonic tour', 'programming language', {'weight': 0.6})
('bitonic tour', 'mergesort', {'weight': 0.6})
('bitonic tour', "dijkstra's algorithm", {'weight': 0.6})
('bitonic tour', 'subgradient method', {'weight': 0.6})
('bitonic tour', 'call-by-name', {'weight': 0.6})
('bitonic tour', 'longest increasing subsequence problem', {'weight': 0.6})
('bitonic tour', 'edward prescott', {'weight': 0.6})
('bitonic tour', 'exponential time', {'weight': 0.6})
('bitonic tour', 'principle of optimality', {'weight': 0.6})
('bitonic tour', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('bitonic tour', 'mathematical game', {'weight': 0.6})
('bitonic tour', 'nancy stokey', {'weight': 0.6})
('bitonic tour', 'approximation algorithm', {'weight': 0.6})
('bitonic tour', 'discrete-time', {'weight': 0.6})
('bitonic tour', 'cyk algorithm', {'weight': 0.6})
('bitonic tour', 'markov decision process', {'weight': 0.6})
('bitonic tour', "powell's method", {'weight': 0.6})
('bitonic tour', 'wolfe conditions', {'weight': 0.6})
('bitonic tour', 'convexity in economics', {'weight': 0.6})
('bitonic tour', 'transposition table', {'weight': 0.6})
('bitonic tour', 'economics', {'weight': 0.6})
('bitonic tour', 'backward induction', {'weight': 0.6})
('bitonic tour', 'golden section search', {'weight': 0.6})
('bitonic tour', 'edit distance', {'weight': 0.6})
('bitonic tour', 'tree structure', {'weight': 0.6})
('bitonic tour', 'exchange algorithm', {'weight': 0.6})
('bitonic tour', 'dover publications', {'weight': 0.6})
('bitonic tour', 'seam carving', {'weight': 0.6})
('bitonic tour', 'recursive least squares', {'weight': 0.6})
('bitonic tour', 'metaheuristic', {'weight': 0.6})
('bitonic tour', 'quasi-newton method', {'weight': 0.6})
('bitonic tour', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('bitonic tour', 'robert e. lucas', {'weight': 0.6})
('bitonic tour', 'non-convexity (economics)', {'weight': 0.6})
('bitonic tour', 'sr1 formula', {'weight': 0.6})
('bitonic tour', 'mathematical reviews', {'weight': 0.6})
('bitonic tour', 'puzzle', {'weight': 0.6})
('bitonic tour', 'associative array', {'weight': 0.6})
('bitonic tour', 'shortest path problem', {'weight': 0.6})
('bitonic tour', 'dynamic algorithm', {'weight': 0.6})
('bitonic tour', 'augmented lagrangian method', {'weight': 0.6})
('bitonic tour', 'charles delisi', {'weight': 0.6})
('bitonic tour', 'greedy algorithm', {'weight': 0.6})
('bitonic tour', "karmarkar's algorithm", {'weight': 0.6})
('bitonic tour', 'lattice models', {'weight': 0.6})
('bitonic tour', 'utility', {'weight': 0.6})
('bitonic tour', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('bitonic tour', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('bitonic tour', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('bitonic tour', 'international standard book number', {'weight': 0.6})
('bitonic tour', 'undirected graph', {'weight': 0.6})
('bitonic tour', 'scheme (programming language)', {'weight': 0.6})
('bitonic tour', 'rna structure', {'weight': 0.6})
('bitonic tour', 'hanoi', {'weight': 0.6})
('bitonic tour', 'perl', {'weight': 0.6})
('bitonic tour', 'digital object identifier', {'weight': 0.6})
('bitonic tour', 'sequential quadratic programming', {'weight': 0.6})
('bitonic tour', "dinic's algorithm", {'weight': 0.6})
('bitonic tour', 'pseudo-polynomial time', {'weight': 0.6})
('bitonic tour', 'partition problem', {'weight': 0.6})
('bitonic tour', 'stochastic programming', {'weight': 0.6})
('bitonic tour', 'hill climbing', {'weight': 0.6})
('bitonic tour', 'top-down', {'weight': 0.6})
('bitonic tour', 'de boor algorithm', {'weight': 0.6})
('bitonic tour', 'optimization algorithm', {'weight': 0.6})
('bitonic tour', "kruskal's algorithm", {'weight': 0.6})
('bitonic tour', 'jacques philippe marie binet', {'weight': 0.6})
('bitonic tour', 'tabu search', {'weight': 0.6})
('bitonic tour', 'divide and conquer algorithm', {'weight': 0.6})
('bitonic tour', "johnson's algorithm", {'weight': 0.6})
('bitonic tour', 'evolutionary algorithm', {'weight': 0.6})
('bitonic tour', 'clique-width', {'weight': 0.6})
('bitonic tour', 'dynamic programming', {'weight': 0.6})
('bitonic tour', 'subroutine', {'weight': 0.6})
('bitonic tour', 'simulated annealing', {'weight': 0.6})
('bitonic tour', 'tower of hanoi', {'weight': 0.6})
('bitonic tour', 'branch and bound', {'weight': 0.6})
('bitonic tour', 'engineering', {'weight': 0.6})
('bitonic tour', 'matroid', {'weight': 0.6})
('bitonic tour', 'viterbi algorithm', {'weight': 0.6})
('bitonic tour', "lemke's algorithm", {'weight': 0.6})
('bitonic tour', 'simplex algorithm', {'weight': 0.6})
('bitonic tour', 'local search (optimization)', {'weight': 0.6})
('bitonic tour', 'hessian matrix', {'weight': 0.6})
('bitonic tour', 'ibm system r', {'weight': 0.6})
('bitonic tour', 'penalty method', {'weight': 0.6})
('bitonic tour', 'prolog', {'weight': 0.6})
('bitonic tour', 'time-invariant system', {'weight': 0.6})
('bitonic tour', 'criss-cross algorithm', {'weight': 0.6})
('bitonic tour', 'revised simplex algorithm', {'weight': 0.6})
('bitonic tour', 'the mathematical association of america', {'weight': 0.6})
('bitonic tour', 'line search', {'weight': 0.6})
('bitonic tour', 'j (programming language)', {'weight': 0.6})
('bitonic tour', 'word wrap', {'weight': 0.6})
('bitonic tour', 'subset sum problem', {'weight': 0.6})
('bitonic tour', 'integer programming', {'weight': 0.6})
('bitonic tour', 'nucleosome', {'weight': 0.6})
('bitonic tour', 'earley algorithm', {'weight': 0.6})
('bitonic tour', 'referential transparency (computer science)', {'weight': 0.6})
('bitonic tour', 'recursion', {'weight': 0.6})
('bitonic tour', 'mathematica', {'weight': 0.6})
('bitonic tour', 'quicksort', {'weight': 0.6})
('bitonic tour', 'geometric algorithms', {'weight': 0.5})
('bitonic tour', 'recursion (computer science)', {'weight': 0.6})
('bitonic tour', 'checkerboard', {'weight': 0.6})
('bitonic tour', 'computer science', {'weight': 0.6})
('bitonic tour', 'brute-force search', {'weight': 0.6})
('bitonic tour', 'mathematics', {'weight': 0.6})
('bitonic tour', 'depth-first search', {'weight': 0.6})
('bitonic tour', 'top-down and bottom-up design', {'weight': 0.6})
('bitonic tour', 'correspondence problem', {'weight': 0.6})
('bitonic tour', 'transcription factor', {'weight': 0.6})
('bitonic tour', 'tree decomposition', {'weight': 0.6})
('bitonic tour', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('bitonic tour', 'structural alignment', {'weight': 0.6})
('bitonic tour', 'local convergence', {'weight': 0.6})
('bitonic tour', 'knapsack problem', {'weight': 0.6})
('bitonic tour', 'graph algorithm', {'weight': 0.6})
('bitonic tour', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('bitonic tour', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('bitonic tour', 'hidden markov model', {'weight': 0.6})
('bitonic tour', 'string (computer science)', {'weight': 0.6})
('bitonic tour', 'bioinformatics', {'weight': 0.6})
('bitonic tour', 'genetics', {'weight': 0.6})
('bitonic tour', 'mathematical optimization', {'weight': 0.6})
('bitonic tour', 'artificial neural networks', {'weight': 0.6})
('bitonic tour', 'introduction to algorithms', {'weight': 0.6})
('bitonic tour', 'thomas h. cormen', {'weight': 0.6})
('bitonic tour', 'music information retrieval', {'weight': 0.6})
('bitonic tour', 'beat (music)', {'weight': 0.6})
('bitonic tour', 'longest common subsequence problem', {'weight': 0.6})
('bitonic tour', 'convex minimization', {'weight': 0.6})
('bitonic tour', 'successive parabolic interpolation', {'weight': 0.6})
('bitonic tour', 'fibonacci sequence', {'weight': 0.6})
('bitonic tour', 'maximum subarray problem', {'weight': 0.6})
('bitonic tour', 'convex optimization', {'weight': 0.6})
('bitonic tour', 'memoization', {'weight': 0.6})
('bitonic tour', 'richard bellman', {'weight': 0.6})
('bitonic tour', 'exponential growth', {'weight': 0.6})
('bitonic tour', 'charles e. leiserson', {'weight': 0.6})
('bitonic tour', 'charles erwin wilson', {'weight': 0.6})
('bitonic tour', 'interval scheduling', {'weight': 0.6})
('bitonic tour', 'chart parser', {'weight': 0.6})
('bitonic tour', 'travelling salesman problem', {'weight': 0.6})
('bitonic tour', 'bellman equation', {'weight': 0.6})
('levenshtein distance', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('levenshtein distance', 'photoshop', {'weight': 0.6})
('levenshtein distance', 'sequence alignment', {'weight': 0.6})
('levenshtein distance', 'flow network', {'weight': 0.6})
('levenshtein distance', 'ellipsoid method', {'weight': 0.6})
('levenshtein distance', 'chain matrix multiplication', {'weight': 0.6})
('levenshtein distance', 'ieee', {'weight': 0.6})
('levenshtein distance', 'backtracking', {'weight': 0.6})
('levenshtein distance', 'nonlinear conjugate gradient method', {'weight': 0.6})
('levenshtein distance', 'dynamic problem', {'weight': 0.6})
('levenshtein distance', 'trust region', {'weight': 0.6})
('levenshtein distance', 'function (mathematics)', {'weight': 0.6})
('levenshtein distance', 'minimum spanning tree', {'weight': 0.6})
('levenshtein distance', 'context-free grammar', {'weight': 0.6})
('levenshtein distance', 'branch and cut', {'weight': 0.6})
('levenshtein distance', 'state variable', {'weight': 0.6})
('levenshtein distance', 'treewidth', {'weight': 0.6})
('levenshtein distance', 'overlapping subproblem', {'weight': 0.6})
('levenshtein distance', 'taylor & francis', {'weight': 0.6})
('levenshtein distance', 'cutting-plane method', {'weight': 0.6})
('levenshtein distance', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('levenshtein distance', 'method of undetermined coefficients', {'weight': 0.6})
('levenshtein distance', 'combinatorial optimization', {'weight': 0.6})
('levenshtein distance', "newton's method in optimization", {'weight': 0.6})
('levenshtein distance', 'matrix chain multiplication', {'weight': 0.6})
('levenshtein distance', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('levenshtein distance', 'dynamic time warping', {'weight': 0.6})
('levenshtein distance', 'dynamic programming language', {'weight': 0.6})
('levenshtein distance', 'call-by-need', {'weight': 0.6})
('levenshtein distance', 'big-o notation', {'weight': 0.6})
('levenshtein distance', 'comparison of optimization software', {'weight': 0.6})
('levenshtein distance', 'quadratic programming', {'weight': 0.6})
('levenshtein distance', 'common lisp', {'weight': 0.6})
('levenshtein distance', 'barrier function', {'weight': 0.6})
('levenshtein distance', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('levenshtein distance', 'gradient descent', {'weight': 0.6})
('levenshtein distance', 'patricia selinger', {'weight': 0.6})
('levenshtein distance', 'discounting', {'weight': 0.6})
('levenshtein distance', 'ronald l. rivest', {'weight': 0.6})
('levenshtein distance', 'iterative method', {'weight': 0.6})
('levenshtein distance', 'limited-memory bfgs', {'weight': 0.6})
('levenshtein distance', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('levenshtein distance', 'longest common substring problem', {'weight': 0.6})
('levenshtein distance', 'clifford stein', {'weight': 0.6})
('levenshtein distance', 'computer chess', {'weight': 0.6})
('levenshtein distance', 'linear programming', {'weight': 0.6})
('levenshtein distance', 'bitonic tour', {'weight': 0.6})
('levenshtein distance', 'linear search problem', {'weight': 0.6})
('levenshtein distance', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('levenshtein distance', 'systems analysis', {'weight': 0.6})
('levenshtein distance', 'capital (economics)', {'weight': 0.6})
('levenshtein distance', 'levenshtein distance', {'weight': 1})
('levenshtein distance', 'nonlinear programming', {'weight': 0.6})
('levenshtein distance', 'computational complexity of mathematical operations', {'weight': 0.6})
('levenshtein distance', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('levenshtein distance', 'gradient', {'weight': 0.6})
('levenshtein distance', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('levenshtein distance', 'bulletin of the american mathematical society', {'weight': 0.6})
('levenshtein distance', 'u.s. english', {'weight': 0.6})
('levenshtein distance', 'refutation table', {'weight': 0.6})
('levenshtein distance', 'heuristic algorithm', {'weight': 0.6})
('levenshtein distance', 'successive linear programming', {'weight': 0.6})
('levenshtein distance', 'optimal substructure', {'weight': 0.6})
('levenshtein distance', 'programming language', {'weight': 0.6})
('levenshtein distance', 'mergesort', {'weight': 0.6})
('levenshtein distance', "dijkstra's algorithm", {'weight': 0.6})
('levenshtein distance', 'subgradient method', {'weight': 0.6})
('levenshtein distance', 'call-by-name', {'weight': 0.6})
('levenshtein distance', 'longest increasing subsequence problem', {'weight': 0.6})
('levenshtein distance', 'edward prescott', {'weight': 0.6})
('levenshtein distance', 'exponential time', {'weight': 0.6})
('levenshtein distance', 'principle of optimality', {'weight': 0.6})
('levenshtein distance', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('levenshtein distance', 'mathematical game', {'weight': 0.6})
('levenshtein distance', 'nancy stokey', {'weight': 0.6})
('levenshtein distance', 'approximation algorithm', {'weight': 0.6})
('levenshtein distance', 'discrete-time', {'weight': 0.6})
('levenshtein distance', 'cyk algorithm', {'weight': 0.6})
('levenshtein distance', 'markov decision process', {'weight': 0.6})
('levenshtein distance', "powell's method", {'weight': 0.6})
('levenshtein distance', 'wolfe conditions', {'weight': 0.6})
('levenshtein distance', 'convexity in economics', {'weight': 0.6})
('levenshtein distance', 'transposition table', {'weight': 0.6})
('levenshtein distance', 'economics', {'weight': 0.6})
('levenshtein distance', 'backward induction', {'weight': 0.6})
('levenshtein distance', 'golden section search', {'weight': 0.6})
('levenshtein distance', 'edit distance', {'weight': 0.6})
('levenshtein distance', 'tree structure', {'weight': 0.6})
('levenshtein distance', 'exchange algorithm', {'weight': 0.6})
('levenshtein distance', 'dover publications', {'weight': 0.6})
('levenshtein distance', 'seam carving', {'weight': 0.6})
('levenshtein distance', 'recursive least squares', {'weight': 0.6})
('levenshtein distance', 'metaheuristic', {'weight': 0.6})
('levenshtein distance', 'quasi-newton method', {'weight': 0.6})
('levenshtein distance', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('levenshtein distance', 'robert e. lucas', {'weight': 0.6})
('levenshtein distance', 'non-convexity (economics)', {'weight': 0.6})
('levenshtein distance', 'sr1 formula', {'weight': 0.6})
('levenshtein distance', 'mathematical reviews', {'weight': 0.6})
('levenshtein distance', 'puzzle', {'weight': 0.6})
('levenshtein distance', 'associative array', {'weight': 0.6})
('levenshtein distance', 'shortest path problem', {'weight': 0.6})
('levenshtein distance', 'dynamic algorithm', {'weight': 0.6})
('levenshtein distance', 'augmented lagrangian method', {'weight': 0.6})
('levenshtein distance', 'charles delisi', {'weight': 0.6})
('levenshtein distance', 'greedy algorithm', {'weight': 0.6})
('levenshtein distance', "karmarkar's algorithm", {'weight': 0.6})
('levenshtein distance', 'lattice models', {'weight': 0.6})
('levenshtein distance', 'utility', {'weight': 0.6})
('levenshtein distance', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('levenshtein distance', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('levenshtein distance', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('levenshtein distance', 'international standard book number', {'weight': 0.6})
('levenshtein distance', 'undirected graph', {'weight': 0.6})
('levenshtein distance', 'scheme (programming language)', {'weight': 0.6})
('levenshtein distance', 'rna structure', {'weight': 0.6})
('levenshtein distance', 'hanoi', {'weight': 0.6})
('levenshtein distance', 'perl', {'weight': 0.6})
('levenshtein distance', 'digital object identifier', {'weight': 0.6})
('levenshtein distance', 'sequential quadratic programming', {'weight': 0.6})
('levenshtein distance', "dinic's algorithm", {'weight': 0.6})
('levenshtein distance', 'pseudo-polynomial time', {'weight': 0.6})
('levenshtein distance', 'partition problem', {'weight': 0.6})
('levenshtein distance', 'stochastic programming', {'weight': 0.6})
('levenshtein distance', 'hill climbing', {'weight': 0.6})
('levenshtein distance', 'top-down', {'weight': 0.6})
('levenshtein distance', 'de boor algorithm', {'weight': 0.6})
('levenshtein distance', 'optimization algorithm', {'weight': 0.6})
('levenshtein distance', "kruskal's algorithm", {'weight': 0.6})
('levenshtein distance', 'jacques philippe marie binet', {'weight': 0.6})
('levenshtein distance', 'tabu search', {'weight': 0.6})
('levenshtein distance', 'divide and conquer algorithm', {'weight': 0.6})
('levenshtein distance', "johnson's algorithm", {'weight': 0.6})
('levenshtein distance', 'evolutionary algorithm', {'weight': 0.6})
('levenshtein distance', 'clique-width', {'weight': 0.6})
('levenshtein distance', 'dynamic programming', {'weight': 0.6})
('levenshtein distance', 'subroutine', {'weight': 0.6})
('levenshtein distance', 'simulated annealing', {'weight': 0.6})
('levenshtein distance', 'tower of hanoi', {'weight': 0.6})
('levenshtein distance', 'branch and bound', {'weight': 0.6})
('levenshtein distance', 'engineering', {'weight': 0.6})
('levenshtein distance', 'matroid', {'weight': 0.6})
('levenshtein distance', 'viterbi algorithm', {'weight': 0.6})
('levenshtein distance', "lemke's algorithm", {'weight': 0.6})
('levenshtein distance', 'simplex algorithm', {'weight': 0.6})
('levenshtein distance', 'local search (optimization)', {'weight': 0.6})
('levenshtein distance', 'hessian matrix', {'weight': 0.6})
('levenshtein distance', 'ibm system r', {'weight': 0.6})
('levenshtein distance', 'penalty method', {'weight': 0.6})
('levenshtein distance', 'prolog', {'weight': 0.6})
('levenshtein distance', 'time-invariant system', {'weight': 0.6})
('levenshtein distance', 'criss-cross algorithm', {'weight': 0.6})
('levenshtein distance', 'revised simplex algorithm', {'weight': 0.6})
('levenshtein distance', 'the mathematical association of america', {'weight': 0.6})
('levenshtein distance', 'line search', {'weight': 0.6})
('levenshtein distance', 'j (programming language)', {'weight': 0.6})
('levenshtein distance', 'word wrap', {'weight': 0.6})
('levenshtein distance', 'subset sum problem', {'weight': 0.6})
('levenshtein distance', 'integer programming', {'weight': 0.6})
('levenshtein distance', 'nucleosome', {'weight': 0.6})
('levenshtein distance', 'earley algorithm', {'weight': 0.6})
('levenshtein distance', 'referential transparency (computer science)', {'weight': 0.6})
('levenshtein distance', 'recursion', {'weight': 0.6})
('levenshtein distance', 'mathematica', {'weight': 0.6})
('levenshtein distance', 'quicksort', {'weight': 0.6})
('levenshtein distance', 'recursion (computer science)', {'weight': 0.6})
('levenshtein distance', 'checkerboard', {'weight': 0.6})
('levenshtein distance', 'computer science', {'weight': 0.6})
('levenshtein distance', 'brute-force search', {'weight': 0.6})
('levenshtein distance', 'mathematics', {'weight': 0.6})
('levenshtein distance', 'depth-first search', {'weight': 0.6})
('levenshtein distance', 'top-down and bottom-up design', {'weight': 0.6})
('levenshtein distance', 'correspondence problem', {'weight': 0.6})
('levenshtein distance', 'transcription factor', {'weight': 0.6})
('levenshtein distance', 'tree decomposition', {'weight': 0.6})
('levenshtein distance', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('levenshtein distance', 'structural alignment', {'weight': 0.6})
('levenshtein distance', 'local convergence', {'weight': 0.6})
('levenshtein distance', 'knapsack problem', {'weight': 0.6})
('levenshtein distance', 'graph algorithm', {'weight': 0.6})
('levenshtein distance', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('levenshtein distance', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('levenshtein distance', 'hidden markov model', {'weight': 0.6})
('levenshtein distance', 'string (computer science)', {'weight': 0.6})
('levenshtein distance', 'bioinformatics', {'weight': 0.6})
('levenshtein distance', 'genetics', {'weight': 0.6})
('levenshtein distance', 'mathematical optimization', {'weight': 0.6})
('levenshtein distance', 'artificial neural networks', {'weight': 0.6})
('levenshtein distance', 'introduction to algorithms', {'weight': 0.6})
('levenshtein distance', 'thomas h. cormen', {'weight': 0.6})
('levenshtein distance', 'music information retrieval', {'weight': 0.6})
('levenshtein distance', 'beat (music)', {'weight': 0.6})
('levenshtein distance', 'longest common subsequence problem', {'weight': 0.6})
('levenshtein distance', 'convex minimization', {'weight': 0.6})
('levenshtein distance', 'successive parabolic interpolation', {'weight': 0.6})
('levenshtein distance', 'fibonacci sequence', {'weight': 0.6})
('levenshtein distance', 'maximum subarray problem', {'weight': 0.6})
('levenshtein distance', 'convex optimization', {'weight': 0.6})
('levenshtein distance', 'memoization', {'weight': 0.6})
('levenshtein distance', 'richard bellman', {'weight': 0.6})
('levenshtein distance', 'exponential growth', {'weight': 0.6})
('levenshtein distance', 'charles e. leiserson', {'weight': 0.6})
('levenshtein distance', 'charles erwin wilson', {'weight': 0.6})
('levenshtein distance', 'interval scheduling', {'weight': 0.6})
('levenshtein distance', 'chart parser', {'weight': 0.6})
('levenshtein distance', 'travelling salesman problem', {'weight': 0.6})
('levenshtein distance', 'bellman equation', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'photoshop', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'sequence alignment', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'flow network', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'ellipsoid method', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'chain matrix multiplication', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'ieee', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'backtracking', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'nonlinear conjugate gradient method', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'dynamic problem', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'trust region', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'function (mathematics)', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'minimum spanning tree', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'context-free grammar', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'branch and cut', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'state variable', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'treewidth', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'overlapping subproblem', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'taylor & francis', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'cutting-plane method', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'method of undetermined coefficients', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'combinatorial optimization', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', "newton's method in optimization", {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'matrix chain multiplication', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'dynamic time warping', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'dynamic programming language', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'call-by-need', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'big-o notation', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'comparison of optimization software', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'quadratic programming', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'common lisp', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'barrier function', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'gradient descent', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'patricia selinger', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'discounting', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'ronald l. rivest', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'iterative method', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'limited-memory bfgs', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'longest common substring problem', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'clifford stein', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'computer chess', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'linear programming', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'bitonic tour', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'linear search problem', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'systems analysis', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'capital (economics)', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'levenshtein distance', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'nonlinear programming', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'computational complexity of mathematical operations', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 1})
('ford\xe2\x80\x93fulkerson algorithm', 'gradient', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'bulletin of the american mathematical society', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'u.s. english', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'refutation table', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'heuristic algorithm', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'successive linear programming', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'optimal substructure', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'programming language', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'mergesort', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', "dijkstra's algorithm", {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'subgradient method', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'call-by-name', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'longest increasing subsequence problem', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'edward prescott', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'exponential time', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'principle of optimality', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'mathematical game', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'nancy stokey', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'approximation algorithm', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'discrete-time', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'cyk algorithm', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'markov decision process', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', "powell's method", {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'wolfe conditions', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'convexity in economics', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'transposition table', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'economics', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'backward induction', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'golden section search', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'edit distance', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'tree structure', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'exchange algorithm', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'dover publications', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'seam carving', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'recursive least squares', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'metaheuristic', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'quasi-newton method', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'robert e. lucas', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'non-convexity (economics)', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'sr1 formula', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'mathematical reviews', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'puzzle', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'associative array', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'shortest path problem', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'dynamic algorithm', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'augmented lagrangian method', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'charles delisi', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'greedy algorithm', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', "karmarkar's algorithm", {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'lattice models', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'utility', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'international standard book number', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'undirected graph', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'scheme (programming language)', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'rna structure', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'hanoi', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'perl', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'digital object identifier', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'sequential quadratic programming', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', "dinic's algorithm", {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'pseudo-polynomial time', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'partition problem', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'stochastic programming', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'hill climbing', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'top-down', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'de boor algorithm', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'optimization algorithm', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', "kruskal's algorithm", {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'jacques philippe marie binet', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'tabu search', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'divide and conquer algorithm', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', "johnson's algorithm", {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'evolutionary algorithm', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'clique-width', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'dynamic programming', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'subroutine', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'simulated annealing', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'tower of hanoi', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'branch and bound', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'engineering', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'matroid', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'viterbi algorithm', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', "lemke's algorithm", {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'simplex algorithm', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'local search (optimization)', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'hessian matrix', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'ibm system r', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'penalty method', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'prolog', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'time-invariant system', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'criss-cross algorithm', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'revised simplex algorithm', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'the mathematical association of america', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'line search', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'j (programming language)', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'word wrap', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'subset sum problem', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'integer programming', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'nucleosome', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'earley algorithm', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'referential transparency (computer science)', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'recursion', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'mathematica', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'quicksort', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'recursion (computer science)', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'checkerboard', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'computer science', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'brute-force search', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'mathematics', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'depth-first search', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'top-down and bottom-up design', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'correspondence problem', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'transcription factor', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'tree decomposition', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'structural alignment', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'local convergence', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'knapsack problem', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'graph algorithm', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'hidden markov model', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'string (computer science)', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'bioinformatics', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'genetics', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'mathematical optimization', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'artificial neural networks', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'introduction to algorithms', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'thomas h. cormen', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'music information retrieval', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'beat (music)', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'longest common subsequence problem', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'convex minimization', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'successive parabolic interpolation', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'fibonacci sequence', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'maximum subarray problem', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'convex optimization', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'memoization', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'richard bellman', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'exponential growth', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'charles e. leiserson', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'charles erwin wilson', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'interval scheduling', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'chart parser', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'travelling salesman problem', {'weight': 0.6})
('ford\xe2\x80\x93fulkerson algorithm', 'bellman equation', {'weight': 0.6})
('gradient', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('gradient', 'photoshop', {'weight': 0.6})
('gradient', 'sequence alignment', {'weight': 0.6})
('gradient', 'flow network', {'weight': 0.6})
('gradient', 'ellipsoid method', {'weight': 0.6})
('gradient', 'chain matrix multiplication', {'weight': 0.6})
('gradient', 'ieee', {'weight': 0.6})
('gradient', 'backtracking', {'weight': 0.6})
('gradient', 'nonlinear conjugate gradient method', {'weight': 0.6})
('gradient', 'iterative method. linear systems', {'weight': 0.7})
('gradient', 'dynamic problem', {'weight': 0.6})
('gradient', 'trust region', {'weight': 0.6})
('gradient', 'function (mathematics)', {'weight': 0.6})
('gradient', 'minimum spanning tree', {'weight': 0.6})
('gradient', 'context-free grammar', {'weight': 0.6})
('gradient', 'branch and cut', {'weight': 0.6})
('gradient', 'state variable', {'weight': 0.6})
('gradient', 'treewidth', {'weight': 0.6})
('gradient', 'overlapping subproblem', {'weight': 0.6})
('gradient', 'taylor & francis', {'weight': 0.6})
('gradient', 'cutting-plane method', {'weight': 0.6})
('gradient', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('gradient', 'method of undetermined coefficients', {'weight': 0.6})
('gradient', 'combinatorial optimization', {'weight': 0.6})
('gradient', "newton's method in optimization", {'weight': 0.6})
('gradient', 'matrix chain multiplication', {'weight': 0.6})
('gradient', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('gradient', 'dynamic time warping', {'weight': 0.6})
('gradient', 'dynamic programming language', {'weight': 0.6})
('gradient', 'call-by-need', {'weight': 0.6})
('gradient', 'big-o notation', {'weight': 0.6})
('gradient', 'comparison of optimization software', {'weight': 0.6})
('gradient', 'quadratic programming', {'weight': 0.6})
('gradient', 'common lisp', {'weight': 0.6})
('gradient', 'barrier function', {'weight': 0.6})
('gradient', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('gradient', 'gradient descent', {'weight': 0.6})
('gradient', 'patricia selinger', {'weight': 0.6})
('gradient', 'discounting', {'weight': 0.6})
('gradient', 'ronald l. rivest', {'weight': 0.6})
('gradient', 'iterative method', {'weight': 0.6})
('gradient', 'limited-memory bfgs', {'weight': 0.6})
('gradient', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('gradient', 'longest common substring problem', {'weight': 0.6})
('gradient', 'clifford stein', {'weight': 0.6})
('gradient', 'computer chess', {'weight': 0.6})
('gradient', 'linear programming', {'weight': 0.6})
('gradient', 'bitonic tour', {'weight': 0.6})
('gradient', 'linear search problem', {'weight': 0.6})
('gradient', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('gradient', 'systems analysis', {'weight': 0.6})
('gradient', 'capital (economics)', {'weight': 0.6})
('gradient', 'levenshtein distance', {'weight': 0.6})
('gradient', 'nonlinear programming', {'weight': 0.6})
('gradient', 'preconditioning', {'weight': 0.7})
('gradient', 'computational complexity of mathematical operations', {'weight': 0.6})
('gradient', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('gradient', 'gradient', {'weight': 1})
('gradient', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('gradient', 'bulletin of the american mathematical society', {'weight': 0.6})
('gradient', 'u.s. english', {'weight': 0.6})
('gradient', 'refutation table', {'weight': 0.6})
('gradient', 'heuristic algorithm', {'weight': 0.6})
('gradient', 'successive linear programming', {'weight': 0.6})
('gradient', 'optimal substructure', {'weight': 0.6})
('gradient', 'krylov subspace', {'weight': 0.7})
('gradient', 'programming language', {'weight': 0.6})
('gradient', 'mergesort', {'weight': 0.6})
('gradient', "dijkstra's algorithm", {'weight': 0.6})
('gradient', 'subgradient method', {'weight': 0.6})
('gradient', 'call-by-name', {'weight': 0.6})
('gradient', 'longest increasing subsequence problem', {'weight': 0.6})
('gradient', 'edward prescott', {'weight': 0.6})
('gradient', 'exponential time', {'weight': 0.6})
('gradient', 'principle of optimality', {'weight': 0.6})
('gradient', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('gradient', 'mathematical game', {'weight': 0.6})
('gradient', 'nancy stokey', {'weight': 0.6})
('gradient', 'approximation algorithm', {'weight': 0.6})
('gradient', 'conjugate residual method', {'weight': 0.7})
('gradient', 'discrete-time', {'weight': 0.6})
('gradient', 'cyk algorithm', {'weight': 0.6})
('gradient', 'markov decision process', {'weight': 0.6})
('gradient', "powell's method", {'weight': 0.6})
('gradient', 'wolfe conditions', {'weight': 0.6})
('gradient', 'convexity in economics', {'weight': 0.6})
('gradient', 'transposition table', {'weight': 0.6})
('gradient', 'gaussian belief propagation', {'weight': 0.7})
('gradient', 'economics', {'weight': 0.6})
('gradient', 'backward induction', {'weight': 0.6})
('gradient', 'golden section search', {'weight': 0.6})
('gradient', 'edit distance', {'weight': 0.6})
('gradient', 'tree structure', {'weight': 0.6})
('gradient', 'exchange algorithm', {'weight': 0.6})
('gradient', 'dover publications', {'weight': 0.6})
('gradient', 'seam carving', {'weight': 0.6})
('gradient', 'recursive least squares', {'weight': 0.6})
('gradient', 'metaheuristic', {'weight': 0.6})
('gradient', 'quasi-newton method', {'weight': 0.6})
('gradient', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('gradient', 'robert e. lucas', {'weight': 0.6})
('gradient', 'non-convexity (economics)', {'weight': 0.6})
('gradient', 'sr1 formula', {'weight': 0.6})
('gradient', 'sparse matrix-vector multiplication', {'weight': 0.7})
('gradient', 'mathematical reviews', {'weight': 0.6})
('gradient', 'puzzle', {'weight': 0.6})
('gradient', 'associative array', {'weight': 0.6})
('gradient', 'shortest path problem', {'weight': 0.6})
('gradient', 'dynamic algorithm', {'weight': 0.6})
('gradient', 'augmented lagrangian method', {'weight': 0.6})
('gradient', 'charles delisi', {'weight': 0.6})
('gradient', 'greedy algorithm', {'weight': 0.6})
('gradient', "karmarkar's algorithm", {'weight': 0.6})
('gradient', 'lattice models', {'weight': 0.6})
('gradient', 'utility', {'weight': 0.6})
('gradient', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('gradient', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('gradient', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('gradient', 'international standard book number', {'weight': 0.6})
('gradient', 'undirected graph', {'weight': 0.6})
('gradient', 'scheme (programming language)', {'weight': 0.6})
('gradient', 'rna structure', {'weight': 0.6})
('gradient', 'hanoi', {'weight': 0.6})
('gradient', 'perl', {'weight': 0.6})
('gradient', 'digital object identifier', {'weight': 0.6})
('gradient', 'sequential quadratic programming', {'weight': 0.6})
('gradient', "dinic's algorithm", {'weight': 0.6})
('gradient', 'pseudo-polynomial time', {'weight': 0.6})
('gradient', 'partition problem', {'weight': 0.6})
('gradient', 'stochastic programming', {'weight': 0.6})
('gradient', 'hill climbing', {'weight': 0.6})
('gradient', 'top-down', {'weight': 0.6})
('gradient', 'de boor algorithm', {'weight': 0.6})
('gradient', 'optimization algorithm', {'weight': 0.6})
('gradient', "kruskal's algorithm", {'weight': 0.6})
('gradient', 'jacques philippe marie binet', {'weight': 0.6})
('gradient', 'tabu search', {'weight': 0.6})
('gradient', 'divide and conquer algorithm', {'weight': 0.6})
('gradient', "johnson's algorithm", {'weight': 0.6})
('gradient', 'evolutionary algorithm', {'weight': 0.6})
('gradient', 'clique-width', {'weight': 0.6})
('gradient', 'dynamic programming', {'weight': 0.6})
('gradient', 'subroutine', {'weight': 0.6})
('gradient', 'simulated annealing', {'weight': 0.6})
('gradient', 'tower of hanoi', {'weight': 0.6})
('gradient', 'branch and bound', {'weight': 0.6})
('gradient', 'engineering', {'weight': 0.6})
('gradient', 'matroid', {'weight': 0.6})
('gradient', 'viterbi algorithm', {'weight': 0.6})
('gradient', "lemke's algorithm", {'weight': 0.6})
('gradient', 'simplex algorithm', {'weight': 0.6})
('gradient', 'local search (optimization)', {'weight': 0.6})
('gradient', 'hessian matrix', {'weight': 0.6})
('gradient', 'ibm system r', {'weight': 0.6})
('gradient', 'penalty method', {'weight': 0.6})
('gradient', 'prolog', {'weight': 0.6})
('gradient', 'time-invariant system', {'weight': 0.6})
('gradient', 'criss-cross algorithm', {'weight': 0.6})
('gradient', 'revised simplex algorithm', {'weight': 0.6})
('gradient', 'the mathematical association of america', {'weight': 0.6})
('gradient', 'nonlinear conjugate gradient', {'weight': 0.7})
('gradient', 'line search', {'weight': 0.6})
('gradient', 'j (programming language)', {'weight': 0.6})
('gradient', 'word wrap', {'weight': 0.6})
('gradient', 'subset sum problem', {'weight': 0.6})
('gradient', 'integer programming', {'weight': 0.6})
('gradient', 'nucleosome', {'weight': 0.6})
('gradient', 'earley algorithm', {'weight': 0.6})
('gradient', 'referential transparency (computer science)', {'weight': 0.6})
('gradient', 'recursion', {'weight': 0.6})
('gradient', 'mathematica', {'weight': 0.6})
('gradient', 'quicksort', {'weight': 0.6})
('gradient', 'recursion (computer science)', {'weight': 0.6})
('gradient', 'checkerboard', {'weight': 0.6})
('gradient', 'computer science', {'weight': 0.6})
('gradient', 'brute-force search', {'weight': 0.6})
('gradient', 'mathematics', {'weight': 0.6})
('gradient', 'depth-first search', {'weight': 0.6})
('gradient', 'top-down and bottom-up design', {'weight': 0.6})
('gradient', 'correspondence problem', {'weight': 0.6})
('gradient', 'transcription factor', {'weight': 0.6})
('gradient', 'tree decomposition', {'weight': 0.6})
('gradient', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('gradient', 'structural alignment', {'weight': 0.6})
('gradient', 'local convergence', {'weight': 0.6})
('gradient', 'knapsack problem', {'weight': 0.6})
('gradient', 'graph algorithm', {'weight': 0.6})
('gradient', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('gradient', 'numerical linear algebra', {'weight': 0.5})
('gradient', 'gradient methods', {'weight': 0.5})
('gradient', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('gradient', 'hidden markov model', {'weight': 0.6})
('gradient', 'string (computer science)', {'weight': 0.6})
('gradient', 'bioinformatics', {'weight': 0.6})
('gradient', 'genetics', {'weight': 0.6})
('gradient', 'mathematical optimization', {'weight': 0.6})
('gradient', 'artificial neural networks', {'weight': 0.6})
('gradient', 'introduction to algorithms', {'weight': 0.6})
('gradient', 'thomas h. cormen', {'weight': 0.6})
('gradient', 'biconjugate gradient method', {'weight': 0.7})
('gradient', 'music information retrieval', {'weight': 0.6})
('gradient', 'beat (music)', {'weight': 0.6})
('gradient', 'longest common subsequence problem', {'weight': 0.6})
('gradient', 'convex minimization', {'weight': 0.6})
('gradient', 'successive parabolic interpolation', {'weight': 0.6})
('gradient', 'fibonacci sequence', {'weight': 0.6})
('gradient', 'maximum subarray problem', {'weight': 0.6})
('gradient', 'convex optimization', {'weight': 0.6})
('gradient', 'memoization', {'weight': 0.6})
('gradient', 'richard bellman', {'weight': 0.6})
('gradient', 'exponential growth', {'weight': 0.6})
('gradient', 'charles e. leiserson', {'weight': 0.6})
('gradient', 'charles erwin wilson', {'weight': 0.6})
('gradient', 'interval scheduling', {'weight': 0.6})
('gradient', 'chart parser', {'weight': 0.6})
('gradient', 'travelling salesman problem', {'weight': 0.6})
('gradient', 'bellman equation', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'photoshop', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'sequence alignment', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'flow network', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'ellipsoid method', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'chain matrix multiplication', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'ieee', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'backtracking', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'nonlinear conjugate gradient method', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'dynamic problem', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'trust region', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'function (mathematics)', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'minimum spanning tree', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'context-free grammar', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'branch and cut', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'state variable', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'treewidth', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'overlapping subproblem', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'taylor & francis', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'cutting-plane method', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'method of undetermined coefficients', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'combinatorial optimization', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', "newton's method in optimization", {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'matrix chain multiplication', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'dynamic time warping', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'dynamic programming language', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'call-by-need', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'big-o notation', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'comparison of optimization software', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'quadratic programming', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'common lisp', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'barrier function', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'gradient descent', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'patricia selinger', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'discounting', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'ronald l. rivest', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'iterative method', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'limited-memory bfgs', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'longest common substring problem', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'clifford stein', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'computer chess', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'linear programming', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'bitonic tour', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'linear search problem', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'systems analysis', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'capital (economics)', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'levenshtein distance', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'nonlinear programming', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'computational complexity of mathematical operations', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'gradient', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'bellman\xe2\x80\x93ford algorithm', {'weight': 1})
('bellman\xe2\x80\x93ford algorithm', 'bulletin of the american mathematical society', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'u.s. english', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'refutation table', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'heuristic algorithm', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'successive linear programming', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'optimal substructure', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'programming language', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'mergesort', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', "dijkstra's algorithm", {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'subgradient method', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'call-by-name', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'longest increasing subsequence problem', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'edward prescott', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'exponential time', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'principle of optimality', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'mathematical game', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'nancy stokey', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'approximation algorithm', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'discrete-time', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'cyk algorithm', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'markov decision process', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', "powell's method", {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'wolfe conditions', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'convexity in economics', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'transposition table', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'economics', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'backward induction', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'golden section search', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'edit distance', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'tree structure', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'exchange algorithm', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'dover publications', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'seam carving', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'recursive least squares', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'metaheuristic', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'quasi-newton method', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'robert e. lucas', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'non-convexity (economics)', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'sr1 formula', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'mathematical reviews', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'puzzle', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'associative array', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'shortest path problem', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'dynamic algorithm', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'augmented lagrangian method', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'charles delisi', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'greedy algorithm', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', "karmarkar's algorithm", {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'lattice models', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'utility', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'international standard book number', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'undirected graph', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'scheme (programming language)', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'rna structure', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'hanoi', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'perl', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'digital object identifier', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'sequential quadratic programming', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', "dinic's algorithm", {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'pseudo-polynomial time', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'partition problem', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'stochastic programming', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'hill climbing', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'top-down', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'de boor algorithm', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'optimization algorithm', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', "kruskal's algorithm", {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'jacques philippe marie binet', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'tabu search', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'divide and conquer algorithm', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', "johnson's algorithm", {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'evolutionary algorithm', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'clique-width', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'dynamic programming', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'subroutine', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'simulated annealing', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'tower of hanoi', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'branch and bound', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'engineering', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'matroid', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'viterbi algorithm', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', "lemke's algorithm", {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'simplex algorithm', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'local search (optimization)', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'hessian matrix', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'ibm system r', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'penalty method', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'prolog', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'time-invariant system', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'criss-cross algorithm', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'revised simplex algorithm', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'the mathematical association of america', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'line search', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'j (programming language)', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'word wrap', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'subset sum problem', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'integer programming', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'nucleosome', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'earley algorithm', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'referential transparency (computer science)', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'recursion', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'mathematica', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'quicksort', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'recursion (computer science)', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'checkerboard', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'computer science', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'brute-force search', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'mathematics', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'depth-first search', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'top-down and bottom-up design', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'correspondence problem', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'transcription factor', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'tree decomposition', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'structural alignment', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'local convergence', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'knapsack problem', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'graph algorithm', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'hidden markov model', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'string (computer science)', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'bioinformatics', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'genetics', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'mathematical optimization', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'artificial neural networks', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'introduction to algorithms', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'thomas h. cormen', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'music information retrieval', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'beat (music)', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'longest common subsequence problem', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'convex minimization', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'successive parabolic interpolation', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'fibonacci sequence', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'maximum subarray problem', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'convex optimization', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'memoization', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'richard bellman', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'exponential growth', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'charles e. leiserson', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'charles erwin wilson', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'interval scheduling', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'chart parser', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'travelling salesman problem', {'weight': 0.6})
('bellman\xe2\x80\x93ford algorithm', 'bellman equation', {'weight': 0.6})
('computer chess', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('computer chess', 'photoshop', {'weight': 0.6})
('computer chess', 'sequence alignment', {'weight': 0.6})
('computer chess', 'flow network', {'weight': 0.6})
('computer chess', 'outline of chess', {'weight': 0.7})
('computer chess', 'charles erwin wilson', {'weight': 0.6})
('computer chess', 'ellipsoid method', {'weight': 0.6})
('computer chess', 'chain matrix multiplication', {'weight': 0.6})
('computer chess', 'ieee', {'weight': 0.6})
('computer chess', 'backtracking', {'weight': 0.6})
('computer chess', 'computer shogi', {'weight': 0.7})
('computer chess', 'nonlinear conjugate gradient method', {'weight': 0.6})
('computer chess', 'chess engine', {'weight': 0.7})
('computer chess', 'dynamic problem', {'weight': 0.6})
('computer chess', 'trust region', {'weight': 0.6})
('computer chess', 'function (mathematics)', {'weight': 0.6})
('computer chess', 'minimum spanning tree', {'weight': 0.6})
('computer chess', 'internet chess server', {'weight': 0.7})
('computer chess', 'context-free grammar', {'weight': 0.6})
('computer chess', 'branch and cut', {'weight': 0.6})
('computer chess', 'state variable', {'weight': 0.6})
('computer chess', 'treewidth', {'weight': 0.6})
('computer chess', 'overlapping subproblem', {'weight': 0.6})
('computer chess', 'taylor & francis', {'weight': 0.6})
('computer chess', 'cutting-plane method', {'weight': 0.6})
('computer chess', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('computer chess', 'method of undetermined coefficients', {'weight': 0.6})
('computer chess', 'combinatorial optimization', {'weight': 0.6})
('computer chess', "newton's method in optimization", {'weight': 0.6})
('computer chess', 'matrix chain multiplication', {'weight': 0.6})
('computer chess', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('computer chess', 'dynamic time warping', {'weight': 0.6})
('computer chess', 'dynamic programming language', {'weight': 0.6})
('computer chess', 'call-by-need', {'weight': 0.6})
('computer chess', 'big-o notation', {'weight': 0.6})
('computer chess', 'chess aesthetics', {'weight': 0.7})
('computer chess', 'comparison of optimization software', {'weight': 0.6})
('computer chess', 'quadratic programming', {'weight': 0.6})
('computer chess', 'common lisp', {'weight': 0.6})
('computer chess', 'barrier function', {'weight': 0.6})
('computer chess', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('computer chess', 'gradient descent', {'weight': 0.6})
('computer chess', 'patricia selinger', {'weight': 0.6})
('computer chess', 'discounting', {'weight': 0.6})
('computer chess', 'ronald l. rivest', {'weight': 0.6})
('computer chess', 'iterative method', {'weight': 0.6})
('computer chess', 'swedish chess computer association', {'weight': 0.7})
('computer chess', 'limited-memory bfgs', {'weight': 0.6})
('computer chess', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('computer chess', 'longest common substring problem', {'weight': 0.6})
('computer chess', 'clifford stein', {'weight': 0.6})
('computer chess', 'mergesort', {'weight': 0.6})
('computer chess', 'linear programming', {'weight': 0.6})
('computer chess', 'bitonic tour', {'weight': 0.6})
('computer chess', 'linear search problem', {'weight': 0.6})
('computer chess', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('computer chess', 'systems analysis', {'weight': 0.6})
('computer chess', 'capital (economics)', {'weight': 0.6})
('computer chess', 'levenshtein distance', {'weight': 0.6})
('computer chess', 'world computer chess championship', {'weight': 0.7})
('computer chess', 'nonlinear programming', {'weight': 0.6})
('computer chess', 'computational complexity of mathematical operations', {'weight': 0.6})
('computer chess', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('computer chess', 'gradient', {'weight': 0.6})
('computer chess', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('computer chess', 'bulletin of the american mathematical society', {'weight': 0.6})
('computer chess', 'u.s. english', {'weight': 0.6})
('computer chess', 'refutation table', {'weight': 0.6})
('computer chess', 'heuristic algorithm', {'weight': 0.6})
('computer chess', 'successive linear programming', {'weight': 0.6})
('computer chess', 'optimal substructure', {'weight': 0.6})
('computer chess', 'programming language', {'weight': 0.6})
('computer chess', 'computer chess', {'weight': 1})
('computer chess', "dijkstra's algorithm", {'weight': 0.6})
('computer chess', 'subgradient method', {'weight': 0.6})
('computer chess', 'call-by-name', {'weight': 0.6})
('computer chess', 'longest increasing subsequence problem', {'weight': 0.6})
('computer chess', 'edward prescott', {'weight': 0.6})
('computer chess', 'exponential time', {'weight': 0.6})
('computer chess', 'principle of optimality', {'weight': 0.6})
('computer chess', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('computer chess', 'mathematical game', {'weight': 0.6})
('computer chess', 'nancy stokey', {'weight': 0.6})
('computer chess', 'approximation algorithm', {'weight': 0.6})
('computer chess', 'discrete-time', {'weight': 0.6})
('computer chess', 'cyk algorithm', {'weight': 0.6})
('computer chess', 'markov decision process', {'weight': 0.6})
('computer chess', "powell's method", {'weight': 0.6})
('computer chess', 'wolfe conditions', {'weight': 0.6})
('computer chess', 'convexity in economics', {'weight': 0.6})
('computer chess', 'transposition table', {'weight': 0.6})
('computer chess', 'economics', {'weight': 0.6})
('computer chess', 'backward induction', {'weight': 0.6})
('computer chess', 'computer olympiad', {'weight': 0.7})
('computer chess', 'golden section search', {'weight': 0.6})
('computer chess', 'edit distance', {'weight': 0.6})
('computer chess', 'tree structure', {'weight': 0.6})
('computer chess', 'chess engines grand tournament', {'weight': 0.7})
('computer chess', 'exchange algorithm', {'weight': 0.6})
('computer chess', 'dover publications', {'weight': 0.6})
('computer chess', 'seam carving', {'weight': 0.6})
('computer chess', 'recursive least squares', {'weight': 0.6})
('computer chess', 'metaheuristic', {'weight': 0.6})
('computer chess', 'quasi-newton method', {'weight': 0.6})
('computer chess', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('computer chess', 'robert e. lucas', {'weight': 0.6})
('computer chess', 'non-convexity (economics)', {'weight': 0.6})
('computer chess', 'sr1 formula', {'weight': 0.6})
('computer chess', 'mathematical reviews', {'weight': 0.6})
('computer chess', 'puzzle', {'weight': 0.6})
('computer chess', 'associative array', {'weight': 0.6})
('computer chess', 'shortest path problem', {'weight': 0.6})
('computer chess', 'dynamic algorithm', {'weight': 0.6})
('computer chess', 'augmented lagrangian method', {'weight': 0.6})
('computer chess', 'charles delisi', {'weight': 0.6})
('computer chess', 'greedy algorithm', {'weight': 0.6})
('computer chess', "karmarkar's algorithm", {'weight': 0.6})
('computer chess', 'computer othello', {'weight': 0.7})
('computer chess', 'shannon number', {'weight': 0.7})
('computer chess', 'lattice models', {'weight': 0.6})
('computer chess', 'utility', {'weight': 0.6})
('computer chess', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('computer chess', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('computer chess', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('computer chess', 'international standard book number', {'weight': 0.6})
('computer chess', 'undirected graph', {'weight': 0.6})
('computer chess', 'scheme (programming language)', {'weight': 0.6})
('computer chess', 'rna structure', {'weight': 0.6})
('computer chess', 'hanoi', {'weight': 0.6})
('computer chess', 'perl', {'weight': 0.6})
('computer chess', 'digital object identifier', {'weight': 0.6})
('computer chess', 'sequential quadratic programming', {'weight': 0.6})
('computer chess', "dinic's algorithm", {'weight': 0.6})
('computer chess', 'pseudo-polynomial time', {'weight': 0.6})
('computer chess', 'partition problem', {'weight': 0.6})
('computer chess', 'stochastic programming', {'weight': 0.6})
('computer chess', 'list of chess software', {'weight': 0.7})
('computer chess', 'hill climbing', {'weight': 0.6})
('computer chess', 'top-down', {'weight': 0.6})
('computer chess', 'de boor algorithm', {'weight': 0.6})
('computer chess', 'optimization algorithm', {'weight': 0.6})
('computer chess', "kruskal's algorithm", {'weight': 0.6})
('computer chess', 'jacques philippe marie binet', {'weight': 0.6})
('computer chess', 'tabu search', {'weight': 0.6})
('computer chess', 'divide and conquer algorithm', {'weight': 0.6})
('computer chess', "johnson's algorithm", {'weight': 0.6})
('computer chess', 'evolutionary algorithm', {'weight': 0.6})
('computer chess', 'clique-width', {'weight': 0.6})
('computer chess', 'dynamic programming', {'weight': 0.6})
('computer chess', 'subroutine', {'weight': 0.6})
('computer chess', 'simulated annealing', {'weight': 0.6})
('computer chess', 'tower of hanoi', {'weight': 0.6})
('computer chess', 'branch and bound', {'weight': 0.6})
('computer chess', 'engineering', {'weight': 0.6})
('computer chess', 'matroid', {'weight': 0.6})
('computer chess', 'viterbi algorithm', {'weight': 0.6})
('computer chess', "lemke's algorithm", {'weight': 0.6})
('computer chess', 'simplex algorithm', {'weight': 0.6})
('computer chess', 'local search (optimization)', {'weight': 0.6})
('computer chess', 'hessian matrix', {'weight': 0.6})
('computer chess', 'ibm system r', {'weight': 0.6})
('computer chess', 'penalty method', {'weight': 0.6})
('computer chess', 'prolog', {'weight': 0.6})
('computer chess', 'time-invariant system', {'weight': 0.6})
('computer chess', 'criss-cross algorithm', {'weight': 0.6})
('computer chess', 'revised simplex algorithm', {'weight': 0.6})
('computer chess', 'the mathematical association of america', {'weight': 0.6})
('computer chess', 'line search', {'weight': 0.6})
('computer chess', 'j (programming language)', {'weight': 0.6})
('computer chess', 'word wrap', {'weight': 0.6})
('computer chess', 'advanced chess', {'weight': 0.7})
('computer chess', 'subset sum problem', {'weight': 0.6})
('computer chess', 'integer programming', {'weight': 0.6})
('computer chess', 'nucleosome', {'weight': 0.6})
('computer chess', 'earley algorithm', {'weight': 0.6})
('computer chess', 'referential transparency (computer science)', {'weight': 0.6})
('computer chess', 'recursion', {'weight': 0.6})
('computer chess', 'mathematica', {'weight': 0.6})
('computer chess', 'quicksort', {'weight': 0.6})
('computer chess', 'electronic games', {'weight': 0.5})
('computer chess', 'recursion (computer science)', {'weight': 0.6})
('computer chess', 'computer science', {'weight': 0.6})
('computer chess', 'brute-force search', {'weight': 0.6})
('computer chess', 'mathematics', {'weight': 0.6})
('computer chess', 'depth-first search', {'weight': 0.6})
('computer chess', 'top-down and bottom-up design', {'weight': 0.6})
('computer chess', 'correspondence problem', {'weight': 0.6})
('computer chess', 'transcription factor', {'weight': 0.6})
('computer chess', 'tree decomposition', {'weight': 0.6})
('computer chess', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('computer chess', 'structural alignment', {'weight': 0.6})
('computer chess', 'local convergence', {'weight': 0.6})
('computer chess', 'knapsack problem', {'weight': 0.6})
('computer chess', 'graph algorithm', {'weight': 0.6})
('computer chess', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('computer chess', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('computer chess', 'hidden markov model', {'weight': 0.6})
('computer chess', 'string (computer science)', {'weight': 0.6})
('computer chess', 'bioinformatics', {'weight': 0.6})
('computer chess', 'genetics', {'weight': 0.6})
('computer chess', 'mathematical optimization', {'weight': 0.6})
('computer chess', 'chess engines', {'weight': 0.5})
('computer chess', 'introduction to algorithms', {'weight': 0.6})
('computer chess', 'thomas h. cormen', {'weight': 0.6})
('computer chess', 'artificial neural networks', {'weight': 0.6})
('computer chess', 'music information retrieval', {'weight': 0.6})
('computer chess', 'beat (music)', {'weight': 0.6})
('computer chess', 'longest common subsequence problem', {'weight': 0.6})
('computer chess', 'convex minimization', {'weight': 0.6})
('computer chess', 'successive parabolic interpolation', {'weight': 0.6})
('computer chess', 'fibonacci sequence', {'weight': 0.6})
('computer chess', 'maximum subarray problem', {'weight': 0.6})
('computer chess', 'convex optimization', {'weight': 0.6})
('computer chess', 'memoization', {'weight': 0.6})
('computer chess', 'richard bellman', {'weight': 0.6})
('computer chess', 'exponential growth', {'weight': 0.6})
('computer chess', 'charles e. leiserson', {'weight': 0.6})
('computer chess', 'checkerboard', {'weight': 0.6})
('computer chess', 'interval scheduling', {'weight': 0.6})
('computer chess', 'chart parser', {'weight': 0.6})
('computer chess', 'computer go', {'weight': 0.7})
('computer chess', 'travelling salesman problem', {'weight': 0.6})
('computer chess', 'bellman equation', {'weight': 0.6})
('exponential time', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('exponential time', 'photoshop', {'weight': 0.6})
('exponential time', 'sequence alignment', {'weight': 0.6})
('exponential time', 'flow network', {'weight': 0.6})
('exponential time', 'ellipsoid method', {'weight': 0.6})
('exponential time', 'chain matrix multiplication', {'weight': 0.6})
('exponential time', 'ieee', {'weight': 0.6})
('exponential time', 'backtracking', {'weight': 0.6})
('exponential time', 'sr1 formula', {'weight': 0.6})
('exponential time', 'nonlinear conjugate gradient method', {'weight': 0.6})
('exponential time', 'dynamic problem', {'weight': 0.6})
('exponential time', 'trust region', {'weight': 0.6})
('exponential time', 'function (mathematics)', {'weight': 0.6})
('exponential time', 'minimum spanning tree', {'weight': 0.6})
('exponential time', 'context-free grammar', {'weight': 0.6})
('exponential time', 'branch and cut', {'weight': 0.6})
('exponential time', 'state variable', {'weight': 0.6})
('exponential time', 'treewidth', {'weight': 0.6})
('exponential time', 'overlapping subproblem', {'weight': 0.6})
('exponential time', 'taylor & francis', {'weight': 0.6})
('exponential time', 'cutting-plane method', {'weight': 0.6})
('exponential time', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('exponential time', 'method of undetermined coefficients', {'weight': 0.6})
('exponential time', 'combinatorial optimization', {'weight': 0.6})
('exponential time', "newton's method in optimization", {'weight': 0.6})
('exponential time', 'matrix chain multiplication', {'weight': 0.6})
('exponential time', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('exponential time', 'dynamic time warping', {'weight': 0.6})
('exponential time', 'dynamic programming language', {'weight': 0.6})
('exponential time', 'call-by-need', {'weight': 0.6})
('exponential time', 'big-o notation', {'weight': 0.6})
('exponential time', 'comparison of optimization software', {'weight': 0.6})
('exponential time', 'quadratic programming', {'weight': 0.6})
('exponential time', 'common lisp', {'weight': 0.6})
('exponential time', 'barrier function', {'weight': 0.6})
('exponential time', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('exponential time', 'gradient descent', {'weight': 0.6})
('exponential time', 'patricia selinger', {'weight': 0.6})
('exponential time', 'discounting', {'weight': 0.6})
('exponential time', 'ronald l. rivest', {'weight': 0.6})
('exponential time', 'iterative method', {'weight': 0.6})
('exponential time', 'limited-memory bfgs', {'weight': 0.6})
('exponential time', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('exponential time', 'longest common substring problem', {'weight': 0.6})
('exponential time', 'clifford stein', {'weight': 0.6})
('exponential time', 'computer chess', {'weight': 0.6})
('exponential time', 'linear programming', {'weight': 0.6})
('exponential time', 'bitonic tour', {'weight': 0.6})
('exponential time', 'linear search problem', {'weight': 0.6})
('exponential time', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('exponential time', 'systems analysis', {'weight': 0.6})
('exponential time', 'capital (economics)', {'weight': 0.6})
('exponential time', 'levenshtein distance', {'weight': 0.6})
('exponential time', 'nonlinear programming', {'weight': 0.6})
('exponential time', 'computational complexity of mathematical operations', {'weight': 0.6})
('exponential time', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('exponential time', 'gradient', {'weight': 0.6})
('exponential time', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('exponential time', 'bulletin of the american mathematical society', {'weight': 0.6})
('exponential time', 'u.s. english', {'weight': 0.6})
('exponential time', 'refutation table', {'weight': 0.6})
('exponential time', 'heuristic algorithm', {'weight': 0.6})
('exponential time', 'successive linear programming', {'weight': 0.6})
('exponential time', 'optimal substructure', {'weight': 0.6})
('exponential time', 'programming language', {'weight': 0.6})
('exponential time', 'mergesort', {'weight': 0.6})
('exponential time', "dijkstra's algorithm", {'weight': 0.6})
('exponential time', 'subgradient method', {'weight': 0.6})
('exponential time', 'call-by-name', {'weight': 0.6})
('exponential time', 'longest increasing subsequence problem', {'weight': 0.6})
('exponential time', 'edward prescott', {'weight': 0.6})
('exponential time', 'exponential time', {'weight': 1})
('exponential time', 'principle of optimality', {'weight': 0.6})
('exponential time', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('exponential time', 'mathematical game', {'weight': 0.6})
('exponential time', 'nancy stokey', {'weight': 0.6})
('exponential time', 'approximation algorithm', {'weight': 0.6})
('exponential time', 'discrete-time', {'weight': 0.6})
('exponential time', 'cyk algorithm', {'weight': 0.6})
('exponential time', 'markov decision process', {'weight': 0.6})
('exponential time', "powell's method", {'weight': 0.6})
('exponential time', 'wolfe conditions', {'weight': 0.6})
('exponential time', 'convexity in economics', {'weight': 0.6})
('exponential time', 'transposition table', {'weight': 0.6})
('exponential time', 'economics', {'weight': 0.6})
('exponential time', 'backward induction', {'weight': 0.6})
('exponential time', 'golden section search', {'weight': 0.6})
('exponential time', 'edit distance', {'weight': 0.6})
('exponential time', 'tree structure', {'weight': 0.6})
('exponential time', 'exchange algorithm', {'weight': 0.6})
('exponential time', 'dover publications', {'weight': 0.6})
('exponential time', 'seam carving', {'weight': 0.6})
('exponential time', 'recursive least squares', {'weight': 0.6})
('exponential time', 'metaheuristic', {'weight': 0.6})
('exponential time', 'quasi-newton method', {'weight': 0.6})
('exponential time', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('exponential time', 'robert e. lucas', {'weight': 0.6})
('exponential time', 'non-convexity (economics)', {'weight': 0.6})
('exponential time', 'computational complexity theory', {'weight': 0.5})
('exponential time', 'mathematical reviews', {'weight': 0.6})
('exponential time', 'puzzle', {'weight': 0.6})
('exponential time', 'associative array', {'weight': 0.6})
('exponential time', 'shortest path problem', {'weight': 0.6})
('exponential time', 'dynamic algorithm', {'weight': 0.6})
('exponential time', 'augmented lagrangian method', {'weight': 0.6})
('exponential time', 'charles delisi', {'weight': 0.6})
('exponential time', 'greedy algorithm', {'weight': 0.6})
('exponential time', "karmarkar's algorithm", {'weight': 0.6})
('exponential time', 'lattice models', {'weight': 0.6})
('exponential time', 'utility', {'weight': 0.6})
('exponential time', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('exponential time', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('exponential time', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('exponential time', 'international standard book number', {'weight': 0.6})
('exponential time', 'undirected graph', {'weight': 0.6})
('exponential time', 'scheme (programming language)', {'weight': 0.6})
('exponential time', 'rna structure', {'weight': 0.6})
('exponential time', 'hanoi', {'weight': 0.6})
('exponential time', 'perl', {'weight': 0.6})
('exponential time', 'digital object identifier', {'weight': 0.6})
('exponential time', 'sequential quadratic programming', {'weight': 0.6})
('exponential time', "dinic's algorithm", {'weight': 0.6})
('exponential time', 'pseudo-polynomial time', {'weight': 0.6})
('exponential time', 'partition problem', {'weight': 0.6})
('exponential time', 'stochastic programming', {'weight': 0.6})
('exponential time', 'analysis of algorithms', {'weight': 0.5})
('exponential time', 'hill climbing', {'weight': 0.6})
('exponential time', 'top-down', {'weight': 0.6})
('exponential time', 'de boor algorithm', {'weight': 0.6})
('exponential time', 'optimization algorithm', {'weight': 0.6})
('exponential time', "kruskal's algorithm", {'weight': 0.6})
('exponential time', 'computational resources', {'weight': 0.5})
('exponential time', 'jacques philippe marie binet', {'weight': 0.6})
('exponential time', 'tabu search', {'weight': 0.6})
('exponential time', 'divide and conquer algorithm', {'weight': 0.6})
('exponential time', "johnson's algorithm", {'weight': 0.6})
('exponential time', 'evolutionary algorithm', {'weight': 0.6})
('exponential time', 'clique-width', {'weight': 0.6})
('exponential time', 'dynamic programming', {'weight': 0.6})
('exponential time', 'subroutine', {'weight': 0.6})
('exponential time', 'simulated annealing', {'weight': 0.6})
('exponential time', 'tower of hanoi', {'weight': 0.6})
('exponential time', 'branch and bound', {'weight': 0.6})
('exponential time', 'engineering', {'weight': 0.6})
('exponential time', 'matroid', {'weight': 0.6})
('exponential time', 'viterbi algorithm', {'weight': 0.6})
('exponential time', "lemke's algorithm", {'weight': 0.6})
('exponential time', 'simplex algorithm', {'weight': 0.6})
('exponential time', 'local search (optimization)', {'weight': 0.6})
('exponential time', 'hessian matrix', {'weight': 0.6})
('exponential time', 'ibm system r', {'weight': 0.6})
('exponential time', 'penalty method', {'weight': 0.6})
('exponential time', 'space complexity', {'weight': 0.7})
('exponential time', 'prolog', {'weight': 0.6})
('exponential time', 'time-invariant system', {'weight': 0.6})
('exponential time', 'criss-cross algorithm', {'weight': 0.6})
('exponential time', 'revised simplex algorithm', {'weight': 0.6})
('exponential time', 'the mathematical association of america', {'weight': 0.6})
('exponential time', 'line search', {'weight': 0.6})
('exponential time', 'j (programming language)', {'weight': 0.6})
('exponential time', 'word wrap', {'weight': 0.6})
('exponential time', 'l-notation', {'weight': 0.7})
('exponential time', 'subset sum problem', {'weight': 0.6})
('exponential time', 'integer programming', {'weight': 0.6})
('exponential time', 'nucleosome', {'weight': 0.6})
('exponential time', 'earley algorithm', {'weight': 0.6})
('exponential time', 'referential transparency (computer science)', {'weight': 0.6})
('exponential time', 'recursion', {'weight': 0.6})
('exponential time', 'mathematica', {'weight': 0.6})
('exponential time', 'quicksort', {'weight': 0.6})
('exponential time', 'recursion (computer science)', {'weight': 0.6})
('exponential time', 'checkerboard', {'weight': 0.6})
('exponential time', 'computer science', {'weight': 0.6})
('exponential time', 'brute-force search', {'weight': 0.6})
('exponential time', 'mathematics', {'weight': 0.6})
('exponential time', 'depth-first search', {'weight': 0.6})
('exponential time', 'top-down and bottom-up design', {'weight': 0.6})
('exponential time', 'correspondence problem', {'weight': 0.6})
('exponential time', 'transcription factor', {'weight': 0.6})
('exponential time', 'tree decomposition', {'weight': 0.6})
('exponential time', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('exponential time', 'structural alignment', {'weight': 0.6})
('exponential time', 'local convergence', {'weight': 0.6})
('exponential time', 'knapsack problem', {'weight': 0.6})
('exponential time', 'graph algorithm', {'weight': 0.6})
('exponential time', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('exponential time', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('exponential time', 'hidden markov model', {'weight': 0.6})
('exponential time', 'string (computer science)', {'weight': 0.6})
('exponential time', 'bioinformatics', {'weight': 0.6})
('exponential time', 'genetics', {'weight': 0.6})
('exponential time', 'mathematical optimization', {'weight': 0.6})
('exponential time', 'artificial neural networks', {'weight': 0.6})
('exponential time', 'introduction to algorithms', {'weight': 0.6})
('exponential time', 'thomas h. cormen', {'weight': 0.6})
('exponential time', 'music information retrieval', {'weight': 0.6})
('exponential time', 'beat (music)', {'weight': 0.6})
('exponential time', 'longest common subsequence problem', {'weight': 0.6})
('exponential time', 'convex minimization', {'weight': 0.6})
('exponential time', 'successive parabolic interpolation', {'weight': 0.6})
('exponential time', 'fibonacci sequence', {'weight': 0.6})
('exponential time', 'maximum subarray problem', {'weight': 0.6})
('exponential time', 'convex optimization', {'weight': 0.6})
('exponential time', 'memoization', {'weight': 0.6})
('exponential time', 'richard bellman', {'weight': 0.6})
('exponential time', 'exponential growth', {'weight': 0.6})
('exponential time', 'charles e. leiserson', {'weight': 0.6})
('exponential time', 'charles erwin wilson', {'weight': 0.6})
('exponential time', 'interval scheduling', {'weight': 0.6})
('exponential time', 'chart parser', {'weight': 0.6})
('exponential time', 'travelling salesman problem', {'weight': 0.6})
('exponential time', 'bellman equation', {'weight': 0.6})
('principle of optimality', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('principle of optimality', 'photoshop', {'weight': 0.6})
('principle of optimality', 'sequence alignment', {'weight': 0.6})
('principle of optimality', 'flow network', {'weight': 0.6})
('principle of optimality', 'charles erwin wilson', {'weight': 0.6})
('principle of optimality', 'ellipsoid method', {'weight': 0.6})
('principle of optimality', 'chain matrix multiplication', {'weight': 0.6})
('principle of optimality', 'ieee', {'weight': 0.6})
('principle of optimality', 'backtracking', {'weight': 0.6})
('principle of optimality', 'nonlinear conjugate gradient method', {'weight': 0.6})
('principle of optimality', 'dynamic problem', {'weight': 0.6})
('principle of optimality', 'trust region', {'weight': 0.6})
('principle of optimality', 'function (mathematics)', {'weight': 0.6})
('principle of optimality', 'control theory', {'weight': 0.5})
('principle of optimality', 'minimum spanning tree', {'weight': 0.6})
('principle of optimality', 'context-free grammar', {'weight': 0.6})
('principle of optimality', 'branch and cut', {'weight': 0.6})
('principle of optimality', 'state variable', {'weight': 0.6})
('principle of optimality', 'treewidth', {'weight': 0.6})
('principle of optimality', 'overlapping subproblem', {'weight': 0.6})
('principle of optimality', 'taylor & francis', {'weight': 0.6})
('principle of optimality', 'recursive competitive equilibrium', {'weight': 0.7})
('principle of optimality', 'cutting-plane method', {'weight': 0.6})
('principle of optimality', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('principle of optimality', 'method of undetermined coefficients', {'weight': 0.6})
('principle of optimality', 'combinatorial optimization', {'weight': 0.6})
('principle of optimality', "newton's method in optimization", {'weight': 0.6})
('principle of optimality', 'matrix chain multiplication', {'weight': 0.6})
('principle of optimality', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('principle of optimality', 'dynamic time warping', {'weight': 0.6})
('principle of optimality', 'dynamic programming language', {'weight': 0.6})
('principle of optimality', 'call-by-need', {'weight': 0.6})
('principle of optimality', 'big-o notation', {'weight': 0.6})
('principle of optimality', 'comparison of optimization software', {'weight': 0.6})
('principle of optimality', 'quadratic programming', {'weight': 0.6})
('principle of optimality', 'common lisp', {'weight': 0.6})
('principle of optimality', 'barrier function', {'weight': 0.6})
('principle of optimality', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('principle of optimality', 'gradient descent', {'weight': 0.6})
('principle of optimality', 'patricia selinger', {'weight': 0.6})
('principle of optimality', 'discounting', {'weight': 0.6})
('principle of optimality', 'ronald l. rivest', {'weight': 0.6})
('principle of optimality', 'iterative method', {'weight': 0.6})
('principle of optimality', 'limited-memory bfgs', {'weight': 0.6})
('principle of optimality', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('principle of optimality', 'longest common substring problem', {'weight': 0.6})
('principle of optimality', 'clifford stein', {'weight': 0.6})
('principle of optimality', 'computer chess', {'weight': 0.6})
('principle of optimality', 'linear programming', {'weight': 0.6})
('principle of optimality', 'bitonic tour', {'weight': 0.6})
('principle of optimality', 'linear search problem', {'weight': 0.6})
('principle of optimality', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('principle of optimality', 'systems analysis', {'weight': 0.6})
('principle of optimality', 'capital (economics)', {'weight': 0.6})
('principle of optimality', 'levenshtein distance', {'weight': 0.6})
('principle of optimality', 'nonlinear programming', {'weight': 0.6})
('principle of optimality', 'computational complexity of mathematical operations', {'weight': 0.6})
('principle of optimality', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('principle of optimality', 'gradient', {'weight': 0.6})
('principle of optimality', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('principle of optimality', 'bulletin of the american mathematical society', {'weight': 0.6})
('principle of optimality', 'u.s. english', {'weight': 0.6})
('principle of optimality', 'refutation table', {'weight': 0.6})
('principle of optimality', 'heuristic algorithm', {'weight': 0.6})
('principle of optimality', 'successive linear programming', {'weight': 0.6})
('principle of optimality', 'optimal substructure', {'weight': 0.7})
('principle of optimality', 'optimal control theory', {'weight': 0.7})
('principle of optimality', 'programming language', {'weight': 0.6})
('principle of optimality', 'mergesort', {'weight': 0.6})
('principle of optimality', "dijkstra's algorithm", {'weight': 0.6})
('principle of optimality', 'subgradient method', {'weight': 0.6})
('principle of optimality', 'call-by-name', {'weight': 0.6})
('principle of optimality', 'longest increasing subsequence problem', {'weight': 0.6})
('principle of optimality', 'edward prescott', {'weight': 0.6})
('principle of optimality', 'exponential time', {'weight': 0.6})
('principle of optimality', 'principle of optimality', {'weight': 1})
('principle of optimality', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('principle of optimality', 'mathematical game', {'weight': 0.6})
('principle of optimality', 'nancy stokey', {'weight': 0.6})
('principle of optimality', 'approximation algorithm', {'weight': 0.6})
('principle of optimality', 'discrete-time', {'weight': 0.6})
('principle of optimality', 'cyk algorithm', {'weight': 0.6})
('principle of optimality', 'markov decision process', {'weight': 0.7})
('principle of optimality', "powell's method", {'weight': 0.6})
('principle of optimality', 'wolfe conditions', {'weight': 0.6})
('principle of optimality', 'convexity in economics', {'weight': 0.6})
('principle of optimality', 'transposition table', {'weight': 0.6})
('principle of optimality', 'economics', {'weight': 0.6})
('principle of optimality', 'backward induction', {'weight': 0.6})
('principle of optimality', 'golden section search', {'weight': 0.6})
('principle of optimality', 'edit distance', {'weight': 0.6})
('principle of optimality', 'tree structure', {'weight': 0.6})
('principle of optimality', 'exchange algorithm', {'weight': 0.6})
('principle of optimality', 'dover publications', {'weight': 0.6})
('principle of optimality', 'seam carving', {'weight': 0.6})
('principle of optimality', 'recursive least squares', {'weight': 0.6})
('principle of optimality', 'metaheuristic', {'weight': 0.6})
('principle of optimality', 'quasi-newton method', {'weight': 0.6})
('principle of optimality', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('principle of optimality', 'robert e. lucas', {'weight': 0.6})
('principle of optimality', 'non-convexity (economics)', {'weight': 0.6})
('principle of optimality', 'sr1 formula', {'weight': 0.6})
('principle of optimality', 'mathematical reviews', {'weight': 0.6})
('principle of optimality', 'puzzle', {'weight': 0.6})
('principle of optimality', 'associative array', {'weight': 0.6})
('principle of optimality', 'shortest path problem', {'weight': 0.6})
('principle of optimality', 'dynamic algorithm', {'weight': 0.6})
('principle of optimality', 'augmented lagrangian method', {'weight': 0.6})
('principle of optimality', 'charles delisi', {'weight': 0.6})
('principle of optimality', 'greedy algorithm', {'weight': 0.6})
('principle of optimality', "karmarkar's algorithm", {'weight': 0.6})
('principle of optimality', 'lattice models', {'weight': 0.6})
('principle of optimality', 'utility', {'weight': 0.6})
('principle of optimality', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('principle of optimality', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('principle of optimality', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('principle of optimality', 'international standard book number', {'weight': 0.6})
('principle of optimality', 'undirected graph', {'weight': 0.6})
('principle of optimality', 'scheme (programming language)', {'weight': 0.6})
('principle of optimality', 'rna structure', {'weight': 0.6})
('principle of optimality', 'hanoi', {'weight': 0.6})
('principle of optimality', 'perl', {'weight': 0.6})
('principle of optimality', 'digital object identifier', {'weight': 0.6})
('principle of optimality', 'sequential quadratic programming', {'weight': 0.6})
('principle of optimality', "dinic's algorithm", {'weight': 0.6})
('principle of optimality', 'pseudo-polynomial time', {'weight': 0.6})
('principle of optimality', 'partition problem', {'weight': 0.6})
('principle of optimality', 'stochastic programming', {'weight': 0.6})
('principle of optimality', 'bellman pseudospectral method', {'weight': 0.7})
('principle of optimality', 'hill climbing', {'weight': 0.6})
('principle of optimality', 'top-down', {'weight': 0.6})
('principle of optimality', 'de boor algorithm', {'weight': 0.6})
('principle of optimality', 'optimization algorithm', {'weight': 0.6})
('principle of optimality', "kruskal's algorithm", {'weight': 0.6})
('principle of optimality', 'jacques philippe marie binet', {'weight': 0.6})
('principle of optimality', 'equations', {'weight': 0.5})
('principle of optimality', 'tabu search', {'weight': 0.6})
('principle of optimality', 'divide and conquer algorithm', {'weight': 0.6})
('principle of optimality', "johnson's algorithm", {'weight': 0.6})
('principle of optimality', 'evolutionary algorithm', {'weight': 0.6})
('principle of optimality', 'clique-width', {'weight': 0.6})
('principle of optimality', 'dynamic programming', {'weight': 0.7})
('principle of optimality', 'subroutine', {'weight': 0.6})
('principle of optimality', 'simulated annealing', {'weight': 0.6})
('principle of optimality', 'tower of hanoi', {'weight': 0.6})
('principle of optimality', 'branch and bound', {'weight': 0.6})
('principle of optimality', 'engineering', {'weight': 0.6})
('principle of optimality', 'matroid', {'weight': 0.6})
('principle of optimality', 'viterbi algorithm', {'weight': 0.6})
('principle of optimality', "lemke's algorithm", {'weight': 0.6})
('principle of optimality', 'simplex algorithm', {'weight': 0.6})
('principle of optimality', 'local search (optimization)', {'weight': 0.6})
('principle of optimality', 'hessian matrix', {'weight': 0.6})
('principle of optimality', 'hamilton\xe2\x80\x93jacobi\xe2\x80\x93bellman equation', {'weight': 0.7})
('principle of optimality', 'ibm system r', {'weight': 0.6})
('principle of optimality', 'penalty method', {'weight': 0.6})
('principle of optimality', 'prolog', {'weight': 0.6})
('principle of optimality', 'time-invariant system', {'weight': 0.6})
('principle of optimality', 'criss-cross algorithm', {'weight': 0.6})
('principle of optimality', 'revised simplex algorithm', {'weight': 0.6})
('principle of optimality', 'the mathematical association of america', {'weight': 0.6})
('principle of optimality', 'line search', {'weight': 0.6})
('principle of optimality', 'j (programming language)', {'weight': 0.6})
('principle of optimality', 'word wrap', {'weight': 0.6})
('principle of optimality', 'subset sum problem', {'weight': 0.6})
('principle of optimality', 'integer programming', {'weight': 0.6})
('principle of optimality', 'nucleosome', {'weight': 0.6})
('principle of optimality', 'earley algorithm', {'weight': 0.6})
('principle of optimality', 'referential transparency (computer science)', {'weight': 0.6})
('principle of optimality', 'recursion', {'weight': 0.6})
('principle of optimality', 'mathematica', {'weight': 0.6})
('principle of optimality', 'quicksort', {'weight': 0.6})
('principle of optimality', 'recursion (computer science)', {'weight': 0.6})
('principle of optimality', 'computer science', {'weight': 0.6})
('principle of optimality', 'brute-force search', {'weight': 0.6})
('principle of optimality', 'mathematics', {'weight': 0.6})
('principle of optimality', 'depth-first search', {'weight': 0.6})
('principle of optimality', 'top-down and bottom-up design', {'weight': 0.6})
('principle of optimality', 'correspondence problem', {'weight': 0.6})
('principle of optimality', 'transcription factor', {'weight': 0.6})
('principle of optimality', 'tree decomposition', {'weight': 0.6})
('principle of optimality', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('principle of optimality', 'structural alignment', {'weight': 0.6})
('principle of optimality', 'local convergence', {'weight': 0.6})
('principle of optimality', 'knapsack problem', {'weight': 0.6})
('principle of optimality', 'graph algorithm', {'weight': 0.6})
('principle of optimality', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('principle of optimality', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('principle of optimality', 'hidden markov model', {'weight': 0.6})
('principle of optimality', 'string (computer science)', {'weight': 0.6})
('principle of optimality', 'bioinformatics', {'weight': 0.6})
('principle of optimality', 'genetics', {'weight': 0.6})
('principle of optimality', 'mathematical optimization', {'weight': 0.6})
('principle of optimality', 'artificial neural networks', {'weight': 0.6})
('principle of optimality', 'introduction to algorithms', {'weight': 0.6})
('principle of optimality', 'thomas h. cormen', {'weight': 0.6})
('principle of optimality', 'music information retrieval', {'weight': 0.6})
('principle of optimality', 'beat (music)', {'weight': 0.6})
('principle of optimality', 'longest common subsequence problem', {'weight': 0.6})
('principle of optimality', 'convex minimization', {'weight': 0.6})
('principle of optimality', 'successive parabolic interpolation', {'weight': 0.6})
('principle of optimality', 'fibonacci sequence', {'weight': 0.6})
('principle of optimality', 'maximum subarray problem', {'weight': 0.6})
('principle of optimality', 'convex optimization', {'weight': 0.6})
('principle of optimality', 'memoization', {'weight': 0.6})
('principle of optimality', 'richard bellman', {'weight': 0.6})
('principle of optimality', 'exponential growth', {'weight': 0.6})
('principle of optimality', 'charles e. leiserson', {'weight': 0.6})
('principle of optimality', 'checkerboard', {'weight': 0.6})
('principle of optimality', 'interval scheduling', {'weight': 0.6})
('principle of optimality', 'chart parser', {'weight': 0.6})
('principle of optimality', 'travelling salesman problem', {'weight': 0.6})
('principle of optimality', 'bellman equation', {'weight': 0.6})
('nancy stokey', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('nancy stokey', 'photoshop', {'weight': 0.6})
('nancy stokey', 'sequence alignment', {'weight': 0.6})
('nancy stokey', 'flow network', {'weight': 0.6})
('nancy stokey', 'ellipsoid method', {'weight': 0.6})
('nancy stokey', 'chain matrix multiplication', {'weight': 0.6})
('nancy stokey', 'ieee', {'weight': 0.6})
('nancy stokey', 'backtracking', {'weight': 0.6})
('nancy stokey', 'nonlinear conjugate gradient method', {'weight': 0.6})
('nancy stokey', 'dynamic problem', {'weight': 0.6})
('nancy stokey', 'trust region', {'weight': 0.6})
('nancy stokey', 'function (mathematics)', {'weight': 0.6})
('nancy stokey', 'minimum spanning tree', {'weight': 0.6})
('nancy stokey', 'context-free grammar', {'weight': 0.6})
('nancy stokey', 'branch and cut', {'weight': 0.6})
('nancy stokey', 'state variable', {'weight': 0.6})
('nancy stokey', 'treewidth', {'weight': 0.6})
('nancy stokey', 'overlapping subproblem', {'weight': 0.6})
('nancy stokey', 'taylor & francis', {'weight': 0.6})
('nancy stokey', 'cutting-plane method', {'weight': 0.6})
('nancy stokey', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('nancy stokey', 'method of undetermined coefficients', {'weight': 0.6})
('nancy stokey', 'combinatorial optimization', {'weight': 0.6})
('nancy stokey', "newton's method in optimization", {'weight': 0.6})
('nancy stokey', 'matrix chain multiplication', {'weight': 0.6})
('nancy stokey', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('nancy stokey', 'dynamic time warping', {'weight': 0.6})
('nancy stokey', 'dynamic programming language', {'weight': 0.6})
('nancy stokey', 'call-by-need', {'weight': 0.6})
('nancy stokey', 'big-o notation', {'weight': 0.6})
('nancy stokey', 'comparison of optimization software', {'weight': 0.6})
('nancy stokey', 'quadratic programming', {'weight': 0.6})
('nancy stokey', 'common lisp', {'weight': 0.6})
('nancy stokey', 'barrier function', {'weight': 0.6})
('nancy stokey', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('nancy stokey', 'gradient descent', {'weight': 0.6})
('nancy stokey', 'patricia selinger', {'weight': 0.6})
('nancy stokey', 'discounting', {'weight': 0.6})
('nancy stokey', 'ronald l. rivest', {'weight': 0.6})
('nancy stokey', 'iterative method', {'weight': 0.6})
('nancy stokey', 'limited-memory bfgs', {'weight': 0.6})
('nancy stokey', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('nancy stokey', 'longest common substring problem', {'weight': 0.6})
('nancy stokey', 'clifford stein', {'weight': 0.6})
('nancy stokey', 'computer chess', {'weight': 0.6})
('nancy stokey', 'linear programming', {'weight': 0.6})
('nancy stokey', 'bitonic tour', {'weight': 0.6})
('nancy stokey', 'linear search problem', {'weight': 0.6})
('nancy stokey', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('nancy stokey', 'systems analysis', {'weight': 0.6})
('nancy stokey', 'capital (economics)', {'weight': 0.6})
('nancy stokey', 'levenshtein distance', {'weight': 0.6})
('nancy stokey', 'nonlinear programming', {'weight': 0.6})
('nancy stokey', 'computational complexity of mathematical operations', {'weight': 0.6})
('nancy stokey', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('nancy stokey', 'gradient', {'weight': 0.6})
('nancy stokey', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('nancy stokey', 'bulletin of the american mathematical society', {'weight': 0.6})
('nancy stokey', 'u.s. english', {'weight': 0.6})
('nancy stokey', 'refutation table', {'weight': 0.6})
('nancy stokey', 'heuristic algorithm', {'weight': 0.6})
('nancy stokey', 'successive linear programming', {'weight': 0.6})
('nancy stokey', 'optimal substructure', {'weight': 0.6})
('nancy stokey', 'programming language', {'weight': 0.6})
('nancy stokey', 'mergesort', {'weight': 0.6})
('nancy stokey', "dijkstra's algorithm", {'weight': 0.6})
('nancy stokey', 'subgradient method', {'weight': 0.6})
('nancy stokey', 'call-by-name', {'weight': 0.6})
('nancy stokey', 'longest increasing subsequence problem', {'weight': 0.6})
('nancy stokey', 'edward prescott', {'weight': 0.6})
('nancy stokey', 'exponential time', {'weight': 0.6})
('nancy stokey', 'principle of optimality', {'weight': 0.6})
('nancy stokey', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('nancy stokey', 'mathematical game', {'weight': 0.6})
('nancy stokey', 'nancy stokey', {'weight': 1})
('nancy stokey', 'approximation algorithm', {'weight': 0.6})
('nancy stokey', 'discrete-time', {'weight': 0.6})
('nancy stokey', 'cyk algorithm', {'weight': 0.6})
('nancy stokey', 'markov decision process', {'weight': 0.6})
('nancy stokey', "powell's method", {'weight': 0.6})
('nancy stokey', 'wolfe conditions', {'weight': 0.6})
('nancy stokey', 'convexity in economics', {'weight': 0.6})
('nancy stokey', 'transposition table', {'weight': 0.6})
('nancy stokey', 'economics', {'weight': 0.6})
('nancy stokey', 'backward induction', {'weight': 0.6})
('nancy stokey', 'golden section search', {'weight': 0.6})
('nancy stokey', 'edit distance', {'weight': 0.6})
('nancy stokey', 'tree structure', {'weight': 0.6})
('nancy stokey', 'exchange algorithm', {'weight': 0.6})
('nancy stokey', 'dover publications', {'weight': 0.6})
('nancy stokey', 'seam carving', {'weight': 0.6})
('nancy stokey', 'recursive least squares', {'weight': 0.6})
('nancy stokey', 'metaheuristic', {'weight': 0.6})
('nancy stokey', 'quasi-newton method', {'weight': 0.6})
('nancy stokey', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('nancy stokey', 'robert e. lucas', {'weight': 0.6})
('nancy stokey', 'non-convexity (economics)', {'weight': 0.6})
('nancy stokey', 'sr1 formula', {'weight': 0.6})
('nancy stokey', 'mathematical reviews', {'weight': 0.6})
('nancy stokey', 'puzzle', {'weight': 0.6})
('nancy stokey', 'associative array', {'weight': 0.6})
('nancy stokey', 'shortest path problem', {'weight': 0.6})
('nancy stokey', 'dynamic algorithm', {'weight': 0.6})
('nancy stokey', 'augmented lagrangian method', {'weight': 0.6})
('nancy stokey', 'charles delisi', {'weight': 0.6})
('nancy stokey', 'greedy algorithm', {'weight': 0.6})
('nancy stokey', "karmarkar's algorithm", {'weight': 0.6})
('nancy stokey', 'lattice models', {'weight': 0.6})
('nancy stokey', 'utility', {'weight': 0.6})
('nancy stokey', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('nancy stokey', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('nancy stokey', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('nancy stokey', 'international standard book number', {'weight': 0.6})
('nancy stokey', 'undirected graph', {'weight': 0.6})
('nancy stokey', 'scheme (programming language)', {'weight': 0.6})
('nancy stokey', 'rna structure', {'weight': 0.6})
('nancy stokey', 'hanoi', {'weight': 0.6})
('nancy stokey', 'perl', {'weight': 0.6})
('nancy stokey', 'digital object identifier', {'weight': 0.6})
('nancy stokey', 'sequential quadratic programming', {'weight': 0.6})
('nancy stokey', "dinic's algorithm", {'weight': 0.6})
('nancy stokey', 'pseudo-polynomial time', {'weight': 0.6})
('nancy stokey', 'partition problem', {'weight': 0.6})
('nancy stokey', 'stochastic programming', {'weight': 0.6})
('nancy stokey', 'hill climbing', {'weight': 0.6})
('nancy stokey', 'top-down', {'weight': 0.6})
('nancy stokey', 'de boor algorithm', {'weight': 0.6})
('nancy stokey', 'optimization algorithm', {'weight': 0.6})
('nancy stokey', "kruskal's algorithm", {'weight': 0.6})
('nancy stokey', 'jacques philippe marie binet', {'weight': 0.6})
('nancy stokey', 'tabu search', {'weight': 0.6})
('nancy stokey', 'divide and conquer algorithm', {'weight': 0.6})
('nancy stokey', "johnson's algorithm", {'weight': 0.6})
('nancy stokey', 'evolutionary algorithm', {'weight': 0.6})
('nancy stokey', 'clique-width', {'weight': 0.6})
('nancy stokey', 'dynamic programming', {'weight': 0.6})
('nancy stokey', 'subroutine', {'weight': 0.6})
('nancy stokey', 'simulated annealing', {'weight': 0.6})
('nancy stokey', 'tower of hanoi', {'weight': 0.6})
('nancy stokey', 'branch and bound', {'weight': 0.6})
('nancy stokey', 'engineering', {'weight': 0.6})
('nancy stokey', 'matroid', {'weight': 0.6})
('nancy stokey', 'viterbi algorithm', {'weight': 0.6})
('nancy stokey', "lemke's algorithm", {'weight': 0.6})
('nancy stokey', 'simplex algorithm', {'weight': 0.6})
('nancy stokey', 'local search (optimization)', {'weight': 0.6})
('nancy stokey', 'hessian matrix', {'weight': 0.6})
('nancy stokey', 'ibm system r', {'weight': 0.6})
('nancy stokey', 'penalty method', {'weight': 0.6})
('nancy stokey', 'prolog', {'weight': 0.6})
('nancy stokey', 'time-invariant system', {'weight': 0.6})
('nancy stokey', 'criss-cross algorithm', {'weight': 0.6})
('nancy stokey', 'revised simplex algorithm', {'weight': 0.6})
('nancy stokey', 'the mathematical association of america', {'weight': 0.6})
('nancy stokey', 'line search', {'weight': 0.6})
('nancy stokey', 'j (programming language)', {'weight': 0.6})
('nancy stokey', 'word wrap', {'weight': 0.6})
('nancy stokey', 'subset sum problem', {'weight': 0.6})
('nancy stokey', 'integer programming', {'weight': 0.6})
('nancy stokey', 'nucleosome', {'weight': 0.6})
('nancy stokey', 'earley algorithm', {'weight': 0.6})
('nancy stokey', 'referential transparency (computer science)', {'weight': 0.6})
('nancy stokey', 'recursion', {'weight': 0.6})
('nancy stokey', 'mathematica', {'weight': 0.6})
('nancy stokey', 'quicksort', {'weight': 0.6})
('nancy stokey', 'recursion (computer science)', {'weight': 0.6})
('nancy stokey', 'checkerboard', {'weight': 0.6})
('nancy stokey', 'computer science', {'weight': 0.6})
('nancy stokey', 'brute-force search', {'weight': 0.6})
('nancy stokey', 'mathematics', {'weight': 0.6})
('nancy stokey', 'depth-first search', {'weight': 0.6})
('nancy stokey', 'top-down and bottom-up design', {'weight': 0.6})
('nancy stokey', 'correspondence problem', {'weight': 0.6})
('nancy stokey', 'transcription factor', {'weight': 0.6})
('nancy stokey', 'tree decomposition', {'weight': 0.6})
('nancy stokey', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('nancy stokey', 'structural alignment', {'weight': 0.6})
('nancy stokey', 'local convergence', {'weight': 0.6})
('nancy stokey', 'knapsack problem', {'weight': 0.6})
('nancy stokey', 'graph algorithm', {'weight': 0.6})
('nancy stokey', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('nancy stokey', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('nancy stokey', 'hidden markov model', {'weight': 0.6})
('nancy stokey', 'string (computer science)', {'weight': 0.6})
('nancy stokey', 'bioinformatics', {'weight': 0.6})
('nancy stokey', 'genetics', {'weight': 0.6})
('nancy stokey', 'mathematical optimization', {'weight': 0.6})
('nancy stokey', 'artificial neural networks', {'weight': 0.6})
('nancy stokey', 'introduction to algorithms', {'weight': 0.6})
('nancy stokey', 'thomas h. cormen', {'weight': 0.6})
('nancy stokey', 'music information retrieval', {'weight': 0.6})
('nancy stokey', 'beat (music)', {'weight': 0.6})
('nancy stokey', 'longest common subsequence problem', {'weight': 0.6})
('nancy stokey', 'convex minimization', {'weight': 0.6})
('nancy stokey', 'successive parabolic interpolation', {'weight': 0.6})
('nancy stokey', 'fibonacci sequence', {'weight': 0.6})
('nancy stokey', 'maximum subarray problem', {'weight': 0.6})
('nancy stokey', 'convex optimization', {'weight': 0.6})
('nancy stokey', 'memoization', {'weight': 0.6})
('nancy stokey', 'richard bellman', {'weight': 0.6})
('nancy stokey', 'exponential growth', {'weight': 0.6})
('nancy stokey', 'charles e. leiserson', {'weight': 0.6})
('nancy stokey', 'charles erwin wilson', {'weight': 0.6})
('nancy stokey', 'interval scheduling', {'weight': 0.6})
('nancy stokey', 'chart parser', {'weight': 0.6})
('nancy stokey', 'travelling salesman problem', {'weight': 0.6})
('nancy stokey', 'bellman equation', {'weight': 0.6})
('cyk algorithm', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('cyk algorithm', 'photoshop', {'weight': 0.6})
('cyk algorithm', 'sequence alignment', {'weight': 0.6})
('cyk algorithm', 'flow network', {'weight': 0.6})
('cyk algorithm', 'ellipsoid method', {'weight': 0.6})
('cyk algorithm', 'chain matrix multiplication', {'weight': 0.6})
('cyk algorithm', 'ieee', {'weight': 0.6})
('cyk algorithm', 'backtracking', {'weight': 0.6})
('cyk algorithm', 'nonlinear conjugate gradient method', {'weight': 0.6})
('cyk algorithm', 'dynamic problem', {'weight': 0.6})
('cyk algorithm', 'trust region', {'weight': 0.6})
('cyk algorithm', 'function (mathematics)', {'weight': 0.6})
('cyk algorithm', 'minimum spanning tree', {'weight': 0.6})
('cyk algorithm', 'context-free grammar', {'weight': 0.6})
('cyk algorithm', 'branch and cut', {'weight': 0.6})
('cyk algorithm', 'state variable', {'weight': 0.6})
('cyk algorithm', 'treewidth', {'weight': 0.6})
('cyk algorithm', 'overlapping subproblem', {'weight': 0.6})
('cyk algorithm', 'taylor & francis', {'weight': 0.6})
('cyk algorithm', 'cutting-plane method', {'weight': 0.6})
('cyk algorithm', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('cyk algorithm', 'method of undetermined coefficients', {'weight': 0.6})
('cyk algorithm', 'combinatorial optimization', {'weight': 0.6})
('cyk algorithm', "newton's method in optimization", {'weight': 0.6})
('cyk algorithm', 'earley parser', {'weight': 0.7})
('cyk algorithm', 'matrix chain multiplication', {'weight': 0.6})
('cyk algorithm', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('cyk algorithm', 'dynamic time warping', {'weight': 0.6})
('cyk algorithm', 'dynamic programming language', {'weight': 0.6})
('cyk algorithm', 'call-by-need', {'weight': 0.6})
('cyk algorithm', 'big-o notation', {'weight': 0.6})
('cyk algorithm', 'comparison of optimization software', {'weight': 0.6})
('cyk algorithm', 'quadratic programming', {'weight': 0.6})
('cyk algorithm', 'common lisp', {'weight': 0.6})
('cyk algorithm', 'barrier function', {'weight': 0.6})
('cyk algorithm', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('cyk algorithm', 'gradient descent', {'weight': 0.6})
('cyk algorithm', 'patricia selinger', {'weight': 0.6})
('cyk algorithm', 'discounting', {'weight': 0.6})
('cyk algorithm', 'ronald l. rivest', {'weight': 0.6})
('cyk algorithm', 'iterative method', {'weight': 0.6})
('cyk algorithm', 'limited-memory bfgs', {'weight': 0.6})
('cyk algorithm', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('cyk algorithm', 'longest common substring problem', {'weight': 0.6})
('cyk algorithm', 'clifford stein', {'weight': 0.6})
('cyk algorithm', 'computer chess', {'weight': 0.6})
('cyk algorithm', 'linear programming', {'weight': 0.6})
('cyk algorithm', 'bitonic tour', {'weight': 0.6})
('cyk algorithm', 'linear search problem', {'weight': 0.6})
('cyk algorithm', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('cyk algorithm', 'systems analysis', {'weight': 0.6})
('cyk algorithm', 'capital (economics)', {'weight': 0.6})
('cyk algorithm', 'levenshtein distance', {'weight': 0.6})
('cyk algorithm', 'nonlinear programming', {'weight': 0.6})
('cyk algorithm', 'computational complexity of mathematical operations', {'weight': 0.6})
('cyk algorithm', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('cyk algorithm', 'gradient', {'weight': 0.6})
('cyk algorithm', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('cyk algorithm', 'bulletin of the american mathematical society', {'weight': 0.6})
('cyk algorithm', 'u.s. english', {'weight': 0.6})
('cyk algorithm', 'refutation table', {'weight': 0.6})
('cyk algorithm', 'parsing algorithms', {'weight': 0.5})
('cyk algorithm', 'successive linear programming', {'weight': 0.6})
('cyk algorithm', 'optimal substructure', {'weight': 0.6})
('cyk algorithm', 'programming language', {'weight': 0.6})
('cyk algorithm', 'mergesort', {'weight': 0.6})
('cyk algorithm', "dijkstra's algorithm", {'weight': 0.6})
('cyk algorithm', 'subgradient method', {'weight': 0.6})
('cyk algorithm', 'call-by-name', {'weight': 0.6})
('cyk algorithm', 'longest increasing subsequence problem', {'weight': 0.6})
('cyk algorithm', 'edward prescott', {'weight': 0.6})
('cyk algorithm', 'packrat parser', {'weight': 0.7})
('cyk algorithm', 'exponential time', {'weight': 0.6})
('cyk algorithm', 'principle of optimality', {'weight': 0.6})
('cyk algorithm', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('cyk algorithm', 'mathematical game', {'weight': 0.6})
('cyk algorithm', 'nancy stokey', {'weight': 0.6})
('cyk algorithm', 'approximation algorithm', {'weight': 0.6})
('cyk algorithm', 'discrete-time', {'weight': 0.6})
('cyk algorithm', 'cyk algorithm', {'weight': 1})
('cyk algorithm', 'markov decision process', {'weight': 0.6})
('cyk algorithm', "powell's method", {'weight': 0.6})
('cyk algorithm', 'wolfe conditions', {'weight': 0.6})
('cyk algorithm', 'convexity in economics', {'weight': 0.6})
('cyk algorithm', 'transposition table', {'weight': 0.6})
('cyk algorithm', 'economics', {'weight': 0.6})
('cyk algorithm', 'backward induction', {'weight': 0.6})
('cyk algorithm', 'golden section search', {'weight': 0.6})
('cyk algorithm', 'edit distance', {'weight': 0.6})
('cyk algorithm', 'tree structure', {'weight': 0.6})
('cyk algorithm', 'exchange algorithm', {'weight': 0.6})
('cyk algorithm', 'dover publications', {'weight': 0.6})
('cyk algorithm', 'seam carving', {'weight': 0.6})
('cyk algorithm', 'recursive least squares', {'weight': 0.6})
('cyk algorithm', 'metaheuristic', {'weight': 0.6})
('cyk algorithm', 'quasi-newton method', {'weight': 0.6})
('cyk algorithm', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('cyk algorithm', 'robert e. lucas', {'weight': 0.6})
('cyk algorithm', 'non-convexity (economics)', {'weight': 0.6})
('cyk algorithm', 'sr1 formula', {'weight': 0.6})
('cyk algorithm', 'mathematical reviews', {'weight': 0.6})
('cyk algorithm', 'puzzle', {'weight': 0.6})
('cyk algorithm', 'associative array', {'weight': 0.6})
('cyk algorithm', 'shortest path problem', {'weight': 0.6})
('cyk algorithm', 'dynamic algorithm', {'weight': 0.6})
('cyk algorithm', 'augmented lagrangian method', {'weight': 0.6})
('cyk algorithm', 'charles delisi', {'weight': 0.6})
('cyk algorithm', 'greedy algorithm', {'weight': 0.6})
('cyk algorithm', "karmarkar's algorithm", {'weight': 0.6})
('cyk algorithm', 'lattice models', {'weight': 0.6})
('cyk algorithm', 'utility', {'weight': 0.6})
('cyk algorithm', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('cyk algorithm', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('cyk algorithm', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('cyk algorithm', 'international standard book number', {'weight': 0.6})
('cyk algorithm', 'undirected graph', {'weight': 0.6})
('cyk algorithm', 'scheme (programming language)', {'weight': 0.6})
('cyk algorithm', 'rna structure', {'weight': 0.6})
('cyk algorithm', 'hanoi', {'weight': 0.6})
('cyk algorithm', 'perl', {'weight': 0.6})
('cyk algorithm', 'digital object identifier', {'weight': 0.6})
('cyk algorithm', 'sequential quadratic programming', {'weight': 0.6})
('cyk algorithm', "dinic's algorithm", {'weight': 0.6})
('cyk algorithm', 'pseudo-polynomial time', {'weight': 0.6})
('cyk algorithm', 'partition problem', {'weight': 0.6})
('cyk algorithm', 'stochastic programming', {'weight': 0.6})
('cyk algorithm', 'hill climbing', {'weight': 0.6})
('cyk algorithm', 'top-down', {'weight': 0.6})
('cyk algorithm', 'de boor algorithm', {'weight': 0.6})
('cyk algorithm', 'optimization algorithm', {'weight': 0.6})
('cyk algorithm', "kruskal's algorithm", {'weight': 0.6})
('cyk algorithm', 'jacques philippe marie binet', {'weight': 0.6})
('cyk algorithm', 'tabu search', {'weight': 0.6})
('cyk algorithm', 'divide and conquer algorithm', {'weight': 0.6})
('cyk algorithm', "johnson's algorithm", {'weight': 0.6})
('cyk algorithm', 'evolutionary algorithm', {'weight': 0.6})
('cyk algorithm', 'clique-width', {'weight': 0.6})
('cyk algorithm', 'dynamic programming', {'weight': 0.6})
('cyk algorithm', 'subroutine', {'weight': 0.6})
('cyk algorithm', 'line search', {'weight': 0.6})
('cyk algorithm', 'simulated annealing', {'weight': 0.6})
('cyk algorithm', 'tower of hanoi', {'weight': 0.6})
('cyk algorithm', 'branch and bound', {'weight': 0.6})
('cyk algorithm', 'engineering', {'weight': 0.6})
('cyk algorithm', 'matroid', {'weight': 0.6})
('cyk algorithm', 'viterbi algorithm', {'weight': 0.6})
('cyk algorithm', "lemke's algorithm", {'weight': 0.6})
('cyk algorithm', 'simplex algorithm', {'weight': 0.6})
('cyk algorithm', 'local search (optimization)', {'weight': 0.6})
('cyk algorithm', 'hessian matrix', {'weight': 0.6})
('cyk algorithm', 'ibm system r', {'weight': 0.6})
('cyk algorithm', 'penalty method', {'weight': 0.6})
('cyk algorithm', 'prolog', {'weight': 0.6})
('cyk algorithm', 'time-invariant system', {'weight': 0.6})
('cyk algorithm', 'criss-cross algorithm', {'weight': 0.6})
('cyk algorithm', 'revised simplex algorithm', {'weight': 0.6})
('cyk algorithm', 'the mathematical association of america', {'weight': 0.6})
('cyk algorithm', 'heuristic algorithm', {'weight': 0.6})
('cyk algorithm', 'j (programming language)', {'weight': 0.6})
('cyk algorithm', 'word wrap', {'weight': 0.6})
('cyk algorithm', 'subset sum problem', {'weight': 0.6})
('cyk algorithm', 'integer programming', {'weight': 0.6})
('cyk algorithm', 'nucleosome', {'weight': 0.6})
('cyk algorithm', 'earley algorithm', {'weight': 0.6})
('cyk algorithm', 'referential transparency (computer science)', {'weight': 0.6})
('cyk algorithm', 'recursion', {'weight': 0.6})
('cyk algorithm', 'mathematica', {'weight': 0.6})
('cyk algorithm', 'quicksort', {'weight': 0.6})
('cyk algorithm', 'glr parser', {'weight': 0.7})
('cyk algorithm', 'recursion (computer science)', {'weight': 0.6})
('cyk algorithm', 'checkerboard', {'weight': 0.6})
('cyk algorithm', 'computer science', {'weight': 0.6})
('cyk algorithm', 'brute-force search', {'weight': 0.6})
('cyk algorithm', 'mathematics', {'weight': 0.6})
('cyk algorithm', 'depth-first search', {'weight': 0.6})
('cyk algorithm', 'top-down and bottom-up design', {'weight': 0.6})
('cyk algorithm', 'correspondence problem', {'weight': 0.6})
('cyk algorithm', 'transcription factor', {'weight': 0.6})
('cyk algorithm', 'tree decomposition', {'weight': 0.6})
('cyk algorithm', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('cyk algorithm', 'structural alignment', {'weight': 0.6})
('cyk algorithm', 'local convergence', {'weight': 0.6})
('cyk algorithm', 'knapsack problem', {'weight': 0.6})
('cyk algorithm', 'graph algorithm', {'weight': 0.6})
('cyk algorithm', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('cyk algorithm', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('cyk algorithm', 'hidden markov model', {'weight': 0.6})
('cyk algorithm', 'string (computer science)', {'weight': 0.6})
('cyk algorithm', 'bioinformatics', {'weight': 0.6})
('cyk algorithm', 'genetics', {'weight': 0.6})
('cyk algorithm', 'mathematical optimization', {'weight': 0.6})
('cyk algorithm', 'artificial neural networks', {'weight': 0.6})
('cyk algorithm', 'introduction to algorithms', {'weight': 0.6})
('cyk algorithm', 'thomas h. cormen', {'weight': 0.6})
('cyk algorithm', 'music information retrieval', {'weight': 0.6})
('cyk algorithm', 'beat (music)', {'weight': 0.6})
('cyk algorithm', 'longest common subsequence problem', {'weight': 0.6})
('cyk algorithm', 'convex minimization', {'weight': 0.6})
('cyk algorithm', 'successive parabolic interpolation', {'weight': 0.6})
('cyk algorithm', 'fibonacci sequence', {'weight': 0.6})
('cyk algorithm', 'maximum subarray problem', {'weight': 0.6})
('cyk algorithm', 'convex optimization', {'weight': 0.6})
('cyk algorithm', 'memoization', {'weight': 0.6})
('cyk algorithm', 'richard bellman', {'weight': 0.6})
('cyk algorithm', 'exponential growth', {'weight': 0.6})
('cyk algorithm', 'charles e. leiserson', {'weight': 0.6})
('cyk algorithm', 'charles erwin wilson', {'weight': 0.6})
('cyk algorithm', 'interval scheduling', {'weight': 0.6})
('cyk algorithm', 'chart parser', {'weight': 0.6})
('cyk algorithm', 'travelling salesman problem', {'weight': 0.6})
('cyk algorithm', 'bellman equation', {'weight': 0.6})
('wolfe conditions', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('wolfe conditions', 'photoshop', {'weight': 0.6})
('wolfe conditions', 'sequence alignment', {'weight': 0.6})
('wolfe conditions', 'flow network', {'weight': 0.6})
('wolfe conditions', 'ellipsoid method', {'weight': 0.6})
('wolfe conditions', 'chain matrix multiplication', {'weight': 0.6})
('wolfe conditions', 'ieee', {'weight': 0.6})
('wolfe conditions', 'backtracking', {'weight': 0.6})
('wolfe conditions', 'nonlinear conjugate gradient method', {'weight': 0.6})
('wolfe conditions', 'dynamic problem', {'weight': 0.6})
('wolfe conditions', 'trust region', {'weight': 0.6})
('wolfe conditions', 'function (mathematics)', {'weight': 0.6})
('wolfe conditions', 'minimum spanning tree', {'weight': 0.6})
('wolfe conditions', 'context-free grammar', {'weight': 0.6})
('wolfe conditions', 'branch and cut', {'weight': 0.6})
('wolfe conditions', 'state variable', {'weight': 0.6})
('wolfe conditions', 'treewidth', {'weight': 0.6})
('wolfe conditions', 'overlapping subproblem', {'weight': 0.6})
('wolfe conditions', 'taylor & francis', {'weight': 0.6})
('wolfe conditions', 'cutting-plane method', {'weight': 0.6})
('wolfe conditions', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('wolfe conditions', 'method of undetermined coefficients', {'weight': 0.6})
('wolfe conditions', 'combinatorial optimization', {'weight': 0.6})
('wolfe conditions', "newton's method in optimization", {'weight': 0.6})
('wolfe conditions', 'matrix chain multiplication', {'weight': 0.6})
('wolfe conditions', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('wolfe conditions', 'dynamic time warping', {'weight': 0.6})
('wolfe conditions', 'dynamic programming language', {'weight': 0.6})
('wolfe conditions', 'call-by-need', {'weight': 0.6})
('wolfe conditions', 'big-o notation', {'weight': 0.6})
('wolfe conditions', 'comparison of optimization software', {'weight': 0.6})
('wolfe conditions', 'quadratic programming', {'weight': 0.6})
('wolfe conditions', 'common lisp', {'weight': 0.6})
('wolfe conditions', 'barrier function', {'weight': 0.6})
('wolfe conditions', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('wolfe conditions', 'gradient descent', {'weight': 0.6})
('wolfe conditions', 'patricia selinger', {'weight': 0.6})
('wolfe conditions', 'discounting', {'weight': 0.6})
('wolfe conditions', 'ronald l. rivest', {'weight': 0.6})
('wolfe conditions', 'iterative method', {'weight': 0.6})
('wolfe conditions', 'limited-memory bfgs', {'weight': 0.6})
('wolfe conditions', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('wolfe conditions', 'longest common substring problem', {'weight': 0.6})
('wolfe conditions', 'clifford stein', {'weight': 0.6})
('wolfe conditions', 'computer chess', {'weight': 0.6})
('wolfe conditions', 'linear programming', {'weight': 0.6})
('wolfe conditions', 'bitonic tour', {'weight': 0.6})
('wolfe conditions', 'linear search problem', {'weight': 0.6})
('wolfe conditions', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('wolfe conditions', 'systems analysis', {'weight': 0.6})
('wolfe conditions', 'capital (economics)', {'weight': 0.6})
('wolfe conditions', 'levenshtein distance', {'weight': 0.6})
('wolfe conditions', 'nonlinear programming', {'weight': 0.6})
('wolfe conditions', 'computational complexity of mathematical operations', {'weight': 0.6})
('wolfe conditions', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('wolfe conditions', 'gradient', {'weight': 0.6})
('wolfe conditions', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('wolfe conditions', 'bulletin of the american mathematical society', {'weight': 0.6})
('wolfe conditions', 'u.s. english', {'weight': 0.6})
('wolfe conditions', 'refutation table', {'weight': 0.6})
('wolfe conditions', 'heuristic algorithm', {'weight': 0.6})
('wolfe conditions', 'successive linear programming', {'weight': 0.6})
('wolfe conditions', 'optimal substructure', {'weight': 0.6})
('wolfe conditions', 'programming language', {'weight': 0.6})
('wolfe conditions', 'mergesort', {'weight': 0.6})
('wolfe conditions', "dijkstra's algorithm", {'weight': 0.6})
('wolfe conditions', 'subgradient method', {'weight': 0.6})
('wolfe conditions', 'call-by-name', {'weight': 0.6})
('wolfe conditions', 'longest increasing subsequence problem', {'weight': 0.6})
('wolfe conditions', 'edward prescott', {'weight': 0.6})
('wolfe conditions', 'exponential time', {'weight': 0.6})
('wolfe conditions', 'principle of optimality', {'weight': 0.6})
('wolfe conditions', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('wolfe conditions', 'mathematical game', {'weight': 0.6})
('wolfe conditions', 'nancy stokey', {'weight': 0.6})
('wolfe conditions', 'approximation algorithm', {'weight': 0.6})
('wolfe conditions', 'discrete-time', {'weight': 0.6})
('wolfe conditions', 'cyk algorithm', {'weight': 0.6})
('wolfe conditions', 'markov decision process', {'weight': 0.6})
('wolfe conditions', "powell's method", {'weight': 0.6})
('wolfe conditions', 'wolfe conditions', {'weight': 1})
('wolfe conditions', 'convexity in economics', {'weight': 0.6})
('wolfe conditions', 'transposition table', {'weight': 0.6})
('wolfe conditions', 'economics', {'weight': 0.6})
('wolfe conditions', 'backward induction', {'weight': 0.6})
('wolfe conditions', 'golden section search', {'weight': 0.6})
('wolfe conditions', 'edit distance', {'weight': 0.6})
('wolfe conditions', 'tree structure', {'weight': 0.6})
('wolfe conditions', 'exchange algorithm', {'weight': 0.6})
('wolfe conditions', 'dover publications', {'weight': 0.6})
('wolfe conditions', 'seam carving', {'weight': 0.6})
('wolfe conditions', 'recursive least squares', {'weight': 0.6})
('wolfe conditions', 'metaheuristic', {'weight': 0.6})
('wolfe conditions', 'quasi-newton method', {'weight': 0.6})
('wolfe conditions', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('wolfe conditions', 'robert e. lucas', {'weight': 0.6})
('wolfe conditions', 'non-convexity (economics)', {'weight': 0.6})
('wolfe conditions', 'sr1 formula', {'weight': 0.6})
('wolfe conditions', 'mathematical reviews', {'weight': 0.6})
('wolfe conditions', 'puzzle', {'weight': 0.6})
('wolfe conditions', 'associative array', {'weight': 0.6})
('wolfe conditions', 'shortest path problem', {'weight': 0.6})
('wolfe conditions', 'dynamic algorithm', {'weight': 0.6})
('wolfe conditions', 'augmented lagrangian method', {'weight': 0.6})
('wolfe conditions', 'charles delisi', {'weight': 0.6})
('wolfe conditions', 'greedy algorithm', {'weight': 0.6})
('wolfe conditions', "karmarkar's algorithm", {'weight': 0.6})
('wolfe conditions', 'lattice models', {'weight': 0.6})
('wolfe conditions', 'utility', {'weight': 0.6})
('wolfe conditions', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('wolfe conditions', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('wolfe conditions', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('wolfe conditions', 'international standard book number', {'weight': 0.6})
('wolfe conditions', 'undirected graph', {'weight': 0.6})
('wolfe conditions', 'scheme (programming language)', {'weight': 0.6})
('wolfe conditions', 'rna structure', {'weight': 0.6})
('wolfe conditions', 'hanoi', {'weight': 0.6})
('wolfe conditions', 'perl', {'weight': 0.6})
('wolfe conditions', 'digital object identifier', {'weight': 0.6})
('wolfe conditions', 'sequential quadratic programming', {'weight': 0.6})
('wolfe conditions', "dinic's algorithm", {'weight': 0.6})
('wolfe conditions', 'pseudo-polynomial time', {'weight': 0.6})
('wolfe conditions', 'partition problem', {'weight': 0.6})
('wolfe conditions', 'stochastic programming', {'weight': 0.6})
('wolfe conditions', 'hill climbing', {'weight': 0.6})
('wolfe conditions', 'top-down', {'weight': 0.6})
('wolfe conditions', 'de boor algorithm', {'weight': 0.6})
('wolfe conditions', 'optimization algorithm', {'weight': 0.6})
('wolfe conditions', "kruskal's algorithm", {'weight': 0.6})
('wolfe conditions', 'jacques philippe marie binet', {'weight': 0.6})
('wolfe conditions', 'tabu search', {'weight': 0.6})
('wolfe conditions', 'divide and conquer algorithm', {'weight': 0.6})
('wolfe conditions', "johnson's algorithm", {'weight': 0.6})
('wolfe conditions', 'evolutionary algorithm', {'weight': 0.6})
('wolfe conditions', 'clique-width', {'weight': 0.6})
('wolfe conditions', 'dynamic programming', {'weight': 0.6})
('wolfe conditions', 'subroutine', {'weight': 0.6})
('wolfe conditions', 'simulated annealing', {'weight': 0.6})
('wolfe conditions', 'tower of hanoi', {'weight': 0.6})
('wolfe conditions', 'branch and bound', {'weight': 0.6})
('wolfe conditions', 'engineering', {'weight': 0.6})
('wolfe conditions', 'matroid', {'weight': 0.6})
('wolfe conditions', 'viterbi algorithm', {'weight': 0.6})
('wolfe conditions', "lemke's algorithm", {'weight': 0.6})
('wolfe conditions', 'simplex algorithm', {'weight': 0.6})
('wolfe conditions', 'local search (optimization)', {'weight': 0.6})
('wolfe conditions', 'hessian matrix', {'weight': 0.6})
('wolfe conditions', 'ibm system r', {'weight': 0.6})
('wolfe conditions', 'penalty method', {'weight': 0.6})
('wolfe conditions', 'prolog', {'weight': 0.6})
('wolfe conditions', 'time-invariant system', {'weight': 0.6})
('wolfe conditions', 'criss-cross algorithm', {'weight': 0.6})
('wolfe conditions', 'revised simplex algorithm', {'weight': 0.6})
('wolfe conditions', 'the mathematical association of america', {'weight': 0.6})
('wolfe conditions', 'line search', {'weight': 0.6})
('wolfe conditions', 'j (programming language)', {'weight': 0.6})
('wolfe conditions', 'word wrap', {'weight': 0.6})
('wolfe conditions', 'subset sum problem', {'weight': 0.6})
('wolfe conditions', 'integer programming', {'weight': 0.6})
('wolfe conditions', 'nucleosome', {'weight': 0.6})
('wolfe conditions', 'earley algorithm', {'weight': 0.6})
('wolfe conditions', 'referential transparency (computer science)', {'weight': 0.6})
('wolfe conditions', 'recursion', {'weight': 0.6})
('wolfe conditions', 'mathematica', {'weight': 0.6})
('wolfe conditions', 'quicksort', {'weight': 0.6})
('wolfe conditions', 'recursion (computer science)', {'weight': 0.6})
('wolfe conditions', 'checkerboard', {'weight': 0.6})
('wolfe conditions', 'computer science', {'weight': 0.6})
('wolfe conditions', 'brute-force search', {'weight': 0.6})
('wolfe conditions', 'mathematics', {'weight': 0.6})
('wolfe conditions', 'depth-first search', {'weight': 0.6})
('wolfe conditions', 'top-down and bottom-up design', {'weight': 0.6})
('wolfe conditions', 'correspondence problem', {'weight': 0.6})
('wolfe conditions', 'transcription factor', {'weight': 0.6})
('wolfe conditions', 'tree decomposition', {'weight': 0.6})
('wolfe conditions', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('wolfe conditions', 'structural alignment', {'weight': 0.6})
('wolfe conditions', 'local convergence', {'weight': 0.6})
('wolfe conditions', 'knapsack problem', {'weight': 0.6})
('wolfe conditions', 'graph algorithm', {'weight': 0.6})
('wolfe conditions', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('wolfe conditions', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('wolfe conditions', 'hidden markov model', {'weight': 0.6})
('wolfe conditions', 'string (computer science)', {'weight': 0.6})
('wolfe conditions', 'bioinformatics', {'weight': 0.6})
('wolfe conditions', 'genetics', {'weight': 0.6})
('wolfe conditions', 'mathematical optimization', {'weight': 0.6})
('wolfe conditions', 'artificial neural networks', {'weight': 0.6})
('wolfe conditions', 'introduction to algorithms', {'weight': 0.6})
('wolfe conditions', 'thomas h. cormen', {'weight': 0.6})
('wolfe conditions', 'music information retrieval', {'weight': 0.6})
('wolfe conditions', 'beat (music)', {'weight': 0.6})
('wolfe conditions', 'longest common subsequence problem', {'weight': 0.6})
('wolfe conditions', 'convex minimization', {'weight': 0.6})
('wolfe conditions', 'successive parabolic interpolation', {'weight': 0.6})
('wolfe conditions', 'fibonacci sequence', {'weight': 0.6})
('wolfe conditions', 'maximum subarray problem', {'weight': 0.6})
('wolfe conditions', 'convex optimization', {'weight': 0.6})
('wolfe conditions', 'memoization', {'weight': 0.6})
('wolfe conditions', 'richard bellman', {'weight': 0.6})
('wolfe conditions', 'exponential growth', {'weight': 0.6})
('wolfe conditions', 'charles e. leiserson', {'weight': 0.6})
('wolfe conditions', 'charles erwin wilson', {'weight': 0.6})
('wolfe conditions', 'interval scheduling', {'weight': 0.6})
('wolfe conditions', 'chart parser', {'weight': 0.6})
('wolfe conditions', 'travelling salesman problem', {'weight': 0.6})
('wolfe conditions', 'bellman equation', {'weight': 0.6})
('criss-cross algorithm', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('criss-cross algorithm', 'photoshop', {'weight': 0.6})
('criss-cross algorithm', 'sequence alignment', {'weight': 0.6})
('criss-cross algorithm', 'ellipsoid method', {'weight': 0.6})
('criss-cross algorithm', 'chain matrix multiplication', {'weight': 0.6})
('criss-cross algorithm', 'ieee', {'weight': 0.6})
('criss-cross algorithm', 'backtracking', {'weight': 0.6})
('criss-cross algorithm', 'exchange algorithms', {'weight': 0.5})
('criss-cross algorithm', 'dynamic problem', {'weight': 0.6})
('criss-cross algorithm', 'approximation algorithm', {'weight': 0.6})
('criss-cross algorithm', 'trust region', {'weight': 0.6})
('criss-cross algorithm', 'function (mathematics)', {'weight': 0.6})
('criss-cross algorithm', 'minimum spanning tree', {'weight': 0.6})
('criss-cross algorithm', 'context-free grammar', {'weight': 0.6})
('criss-cross algorithm', 'branch and cut', {'weight': 0.6})
('criss-cross algorithm', 'state variable', {'weight': 0.6})
('criss-cross algorithm', 'treewidth', {'weight': 0.6})
('criss-cross algorithm', 'optimization algorithms and methods', {'weight': 0.5})
('criss-cross algorithm', 'overlapping subproblem', {'weight': 0.6})
('criss-cross algorithm', 'refutation table', {'weight': 0.6})
('criss-cross algorithm', 'cutting-plane method', {'weight': 0.6})
('criss-cross algorithm', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('criss-cross algorithm', 'method of undetermined coefficients', {'weight': 0.6})
('criss-cross algorithm', 'flow network', {'weight': 0.6})
('criss-cross algorithm', "newton's method in optimization", {'weight': 0.6})
('criss-cross algorithm', 'matrix chain multiplication', {'weight': 0.6})
('criss-cross algorithm', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('criss-cross algorithm', 'dynamic time warping', {'weight': 0.6})
('criss-cross algorithm', 'dynamic programming language', {'weight': 0.6})
('criss-cross algorithm', 'call-by-need', {'weight': 0.6})
('criss-cross algorithm', 'big-o notation', {'weight': 0.6})
('criss-cross algorithm', 'comparison of optimization software', {'weight': 0.6})
('criss-cross algorithm', 'quadratic programming', {'weight': 0.6})
('criss-cross algorithm', 'common lisp', {'weight': 0.6})
('criss-cross algorithm', 'barrier function', {'weight': 0.6})
('criss-cross algorithm', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('criss-cross algorithm', 'gradient descent', {'weight': 0.6})
('criss-cross algorithm', 'patricia selinger', {'weight': 0.6})
('criss-cross algorithm', 'discounting', {'weight': 0.6})
('criss-cross algorithm', 'ronald l. rivest', {'weight': 0.6})
('criss-cross algorithm', 'iterative method', {'weight': 0.6})
('criss-cross algorithm', 'limited-memory bfgs', {'weight': 0.6})
('criss-cross algorithm', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('criss-cross algorithm', 'longest common substring problem', {'weight': 0.6})
('criss-cross algorithm', 'clifford stein', {'weight': 0.6})
('criss-cross algorithm', 'computer chess', {'weight': 0.6})
('criss-cross algorithm', 'linear programming', {'weight': 0.6})
('criss-cross algorithm', 'bitonic tour', {'weight': 0.6})
('criss-cross algorithm', 'linear search problem', {'weight': 0.6})
('criss-cross algorithm', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('criss-cross algorithm', 'systems analysis', {'weight': 0.6})
('criss-cross algorithm', 'capital (economics)', {'weight': 0.6})
('criss-cross algorithm', 'levenshtein distance', {'weight': 0.6})
('criss-cross algorithm', 'nonlinear programming', {'weight': 0.6})
('criss-cross algorithm', 'genetics', {'weight': 0.6})
('criss-cross algorithm', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('criss-cross algorithm', 'gradient', {'weight': 0.6})
('criss-cross algorithm', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('criss-cross algorithm', 'bulletin of the american mathematical society', {'weight': 0.6})
('criss-cross algorithm', 'u.s. english', {'weight': 0.6})
('criss-cross algorithm', 'longest increasing subsequence problem', {'weight': 0.6})
('criss-cross algorithm', 'heuristic algorithm', {'weight': 0.6})
('criss-cross algorithm', 'successive linear programming', {'weight': 0.6})
('criss-cross algorithm', 'optimal substructure', {'weight': 0.6})
('criss-cross algorithm', 'taylor & francis', {'weight': 0.6})
('criss-cross algorithm', 'programming language', {'weight': 0.6})
('criss-cross algorithm', 'mergesort', {'weight': 0.6})
('criss-cross algorithm', "dijkstra's algorithm", {'weight': 0.6})
('criss-cross algorithm', 'subgradient method', {'weight': 0.6})
('criss-cross algorithm', 'call-by-name', {'weight': 0.6})
('criss-cross algorithm', 'combinatorial optimization', {'weight': 0.6})
('criss-cross algorithm', 'edward prescott', {'weight': 0.6})
('criss-cross algorithm', 'exponential time', {'weight': 0.6})
('criss-cross algorithm', 'principle of optimality', {'weight': 0.6})
('criss-cross algorithm', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('criss-cross algorithm', 'mathematical game', {'weight': 0.6})
('criss-cross algorithm', 'nancy stokey', {'weight': 0.6})
('criss-cross algorithm', 'nonlinear conjugate gradient method', {'weight': 0.6})
('criss-cross algorithm', 'jack edmonds', {'weight': 0.7})
('criss-cross algorithm', 'discrete-time', {'weight': 0.6})
('criss-cross algorithm', 'cyk algorithm', {'weight': 0.6})
('criss-cross algorithm', 'markov decision process', {'weight': 0.6})
('criss-cross algorithm', "powell's method", {'weight': 0.6})
('criss-cross algorithm', 'wolfe conditions', {'weight': 0.6})
('criss-cross algorithm', 'convexity in economics', {'weight': 0.6})
('criss-cross algorithm', 'transposition table', {'weight': 0.6})
('criss-cross algorithm', 'economics', {'weight': 0.6})
('criss-cross algorithm', 'backward induction', {'weight': 0.6})
('criss-cross algorithm', 'golden section search', {'weight': 0.6})
('criss-cross algorithm', 'edit distance', {'weight': 0.6})
('criss-cross algorithm', 'tree structure', {'weight': 0.6})
('criss-cross algorithm', 'exchange algorithm', {'weight': 0.6})
('criss-cross algorithm', 'dover publications', {'weight': 0.6})
('criss-cross algorithm', 'seam carving', {'weight': 0.6})
('criss-cross algorithm', 'recursive least squares', {'weight': 0.6})
('criss-cross algorithm', 'metaheuristic', {'weight': 0.6})
('criss-cross algorithm', 'quasi-newton method', {'weight': 0.6})
('criss-cross algorithm', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('criss-cross algorithm', 'robert e. lucas', {'weight': 0.6})
('criss-cross algorithm', 'non-convexity (economics)', {'weight': 0.6})
('criss-cross algorithm', 'sr1 formula', {'weight': 0.6})
('criss-cross algorithm', 'mathematical reviews', {'weight': 0.6})
('criss-cross algorithm', 'puzzle', {'weight': 0.6})
('criss-cross algorithm', 'associative array', {'weight': 0.6})
('criss-cross algorithm', 'shortest path problem', {'weight': 0.6})
('criss-cross algorithm', 'dynamic algorithm', {'weight': 0.6})
('criss-cross algorithm', 'augmented lagrangian method', {'weight': 0.6})
('criss-cross algorithm', 'charles delisi', {'weight': 0.6})
('criss-cross algorithm', 'greedy algorithm', {'weight': 0.6})
('criss-cross algorithm', "karmarkar's algorithm", {'weight': 0.6})
('criss-cross algorithm', 'lattice models', {'weight': 0.6})
('criss-cross algorithm', 'utility', {'weight': 0.6})
('criss-cross algorithm', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('criss-cross algorithm', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('criss-cross algorithm', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('criss-cross algorithm', 'international standard book number', {'weight': 0.6})
('criss-cross algorithm', 'undirected graph', {'weight': 0.6})
('criss-cross algorithm', 'scheme (programming language)', {'weight': 0.6})
('criss-cross algorithm', 'rna structure', {'weight': 0.6})
('criss-cross algorithm', 'hanoi', {'weight': 0.6})
('criss-cross algorithm', 'perl', {'weight': 0.6})
('criss-cross algorithm', 'digital object identifier', {'weight': 0.6})
('criss-cross algorithm', 'sequential quadratic programming', {'weight': 0.6})
('criss-cross algorithm', "dinic's algorithm", {'weight': 0.6})
('criss-cross algorithm', 'pseudo-polynomial time', {'weight': 0.6})
('criss-cross algorithm', 'partition problem', {'weight': 0.6})
('criss-cross algorithm', 'stochastic programming', {'weight': 0.6})
('criss-cross algorithm', 'hill climbing', {'weight': 0.6})
('criss-cross algorithm', 'top-down', {'weight': 0.6})
('criss-cross algorithm', 'de boor algorithm', {'weight': 0.6})
('criss-cross algorithm', 'optimization algorithm', {'weight': 0.6})
('criss-cross algorithm', "kruskal's algorithm", {'weight': 0.6})
('criss-cross algorithm', 'combinatorial algorithms', {'weight': 0.5})
('criss-cross algorithm', 'jacques philippe marie binet', {'weight': 0.6})
('criss-cross algorithm', 'tabu search', {'weight': 0.6})
('criss-cross algorithm', 'divide and conquer algorithm', {'weight': 0.6})
('criss-cross algorithm', "johnson's algorithm", {'weight': 0.6})
('criss-cross algorithm', 'evolutionary algorithm', {'weight': 0.6})
('criss-cross algorithm', 'clique-width', {'weight': 0.6})
('criss-cross algorithm', 'dynamic programming', {'weight': 0.6})
('criss-cross algorithm', 'subroutine', {'weight': 0.6})
('criss-cross algorithm', 'simulated annealing', {'weight': 0.6})
('criss-cross algorithm', 'tower of hanoi', {'weight': 0.6})
('criss-cross algorithm', 'branch and bound', {'weight': 0.6})
('criss-cross algorithm', 'engineering', {'weight': 0.6})
('criss-cross algorithm', 'matroid', {'weight': 0.6})
('criss-cross algorithm', 'viterbi algorithm', {'weight': 0.6})
('criss-cross algorithm', "lemke's algorithm", {'weight': 0.6})
('criss-cross algorithm', 'simplex algorithm', {'weight': 0.6})
('criss-cross algorithm', 'local search (optimization)', {'weight': 0.6})
('criss-cross algorithm', 'hessian matrix', {'weight': 0.6})
('criss-cross algorithm', 'ibm system r', {'weight': 0.6})
('criss-cross algorithm', 'penalty method', {'weight': 0.6})
('criss-cross algorithm', 'prolog', {'weight': 0.6})
('criss-cross algorithm', 'time-invariant system', {'weight': 0.6})
('criss-cross algorithm', 'criss-cross algorithm', {'weight': 1})
('criss-cross algorithm', 'revised simplex algorithm', {'weight': 0.6})
('criss-cross algorithm', 'the mathematical association of america', {'weight': 0.6})
('criss-cross algorithm', 'line search', {'weight': 0.6})
('criss-cross algorithm', 'j (programming language)', {'weight': 0.6})
('criss-cross algorithm', 'word wrap', {'weight': 0.6})
('criss-cross algorithm', 'subset sum problem', {'weight': 0.6})
('criss-cross algorithm', 'integer programming', {'weight': 0.6})
('criss-cross algorithm', 'nucleosome', {'weight': 0.6})
('criss-cross algorithm', 'earley algorithm', {'weight': 0.6})
('criss-cross algorithm', 'referential transparency (computer science)', {'weight': 0.6})
('criss-cross algorithm', 'recursion', {'weight': 0.6})
('criss-cross algorithm', 'mathematica', {'weight': 0.6})
('criss-cross algorithm', 'quicksort', {'weight': 0.6})
('criss-cross algorithm', 'geometric algorithms', {'weight': 0.5})
('criss-cross algorithm', 'recursion (computer science)', {'weight': 0.6})
('criss-cross algorithm', 'checkerboard', {'weight': 0.6})
('criss-cross algorithm', 'computer science', {'weight': 0.6})
('criss-cross algorithm', 'brute-force search', {'weight': 0.6})
('criss-cross algorithm', 'mathematics', {'weight': 0.6})
('criss-cross algorithm', 'depth-first search', {'weight': 0.6})
('criss-cross algorithm', 'top-down and bottom-up design', {'weight': 0.6})
('criss-cross algorithm', 'correspondence problem', {'weight': 0.6})
('criss-cross algorithm', 'transcription factor', {'weight': 0.6})
('criss-cross algorithm', 'tree decomposition', {'weight': 0.6})
('criss-cross algorithm', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('criss-cross algorithm', 'structural alignment', {'weight': 0.6})
('criss-cross algorithm', 'local convergence', {'weight': 0.6})
('criss-cross algorithm', 'knapsack problem', {'weight': 0.6})
('criss-cross algorithm', 'graph algorithm', {'weight': 0.6})
('criss-cross algorithm', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('criss-cross algorithm', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('criss-cross algorithm', 'hidden markov model', {'weight': 0.6})
('criss-cross algorithm', 'string (computer science)', {'weight': 0.6})
('criss-cross algorithm', 'bioinformatics', {'weight': 0.6})
('criss-cross algorithm', 'computational complexity of mathematical operations', {'weight': 0.6})
('criss-cross algorithm', 'mathematical optimization', {'weight': 0.6})
('criss-cross algorithm', 'artificial neural networks', {'weight': 0.6})
('criss-cross algorithm', 'introduction to algorithms', {'weight': 0.6})
('criss-cross algorithm', 'thomas h. cormen', {'weight': 0.6})
('criss-cross algorithm', 'music information retrieval', {'weight': 0.6})
('criss-cross algorithm', 'beat (music)', {'weight': 0.6})
('criss-cross algorithm', 'longest common subsequence problem', {'weight': 0.6})
('criss-cross algorithm', 'convex minimization', {'weight': 0.6})
('criss-cross algorithm', 'successive parabolic interpolation', {'weight': 0.6})
('criss-cross algorithm', 'fibonacci sequence', {'weight': 0.6})
('criss-cross algorithm', 'maximum subarray problem', {'weight': 0.6})
('criss-cross algorithm', 'convex optimization', {'weight': 0.6})
('criss-cross algorithm', 'memoization', {'weight': 0.6})
('criss-cross algorithm', 'richard bellman', {'weight': 0.6})
('criss-cross algorithm', 'exponential growth', {'weight': 0.6})
('criss-cross algorithm', 'charles e. leiserson', {'weight': 0.6})
('criss-cross algorithm', 'oriented matroids', {'weight': 0.5})
('criss-cross algorithm', 'charles erwin wilson', {'weight': 0.6})
('criss-cross algorithm', 'interval scheduling', {'weight': 0.6})
('criss-cross algorithm', 'chart parser', {'weight': 0.6})
('criss-cross algorithm', 'travelling salesman problem', {'weight': 0.6})
('criss-cross algorithm', 'bellman equation', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'photoshop', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'sequence alignment', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'mathematical databases', {'weight': 0.5})
('on-line encyclopedia of integer sequences', 'flow network', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'ellipsoid method', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'chain matrix multiplication', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'ieee', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'backtracking', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'nonlinear conjugate gradient method', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'dynamic problem', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'integer sequences', {'weight': 0.5})
('on-line encyclopedia of integer sequences', 'function (mathematics)', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'minimum spanning tree', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'context-free grammar', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'branch and cut', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'state variable', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'treewidth', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'overlapping subproblem', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'taylor & francis', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'cutting-plane method', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'method of undetermined coefficients', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'combinatorial optimization', {'weight': 0.6})
('on-line encyclopedia of integer sequences', "newton's method in optimization", {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'matrix chain multiplication', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'dynamic time warping', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'dynamic programming language', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'call-by-need', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'big-o notation', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'comparison of optimization software', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'quadratic programming', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'common lisp', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'barrier function', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'gradient descent', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'patricia selinger', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'discounting', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'ronald l. rivest', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'iterative method', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'limited-memory bfgs', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'longest common substring problem', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'clifford stein', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'internet encyclopedias', {'weight': 0.5})
('on-line encyclopedia of integer sequences', 'computer chess', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'linear programming', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'bitonic tour', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'linear search problem', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'systems analysis', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'capital (economics)', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'levenshtein distance', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'nonlinear programming', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'computational complexity of mathematical operations', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'gradient', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'bulletin of the american mathematical society', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'lattice models', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'refutation table', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'heuristic algorithm', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'successive linear programming', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'optimal substructure', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'programming language', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'mergesort', {'weight': 0.6})
('on-line encyclopedia of integer sequences', "dijkstra's algorithm", {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'subgradient method', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'call-by-name', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'longest increasing subsequence problem', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'edward prescott', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'exponential time', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'principle of optimality', {'weight': 0.6})
('on-line encyclopedia of integer sequences', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'mathematical game', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'nancy stokey', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'approximation algorithm', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'discrete-time', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'cyk algorithm', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'markov decision process', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'trust region', {'weight': 0.6})
('on-line encyclopedia of integer sequences', "powell's method", {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'wolfe conditions', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'convexity in economics', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'transposition table', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'economics', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'backward induction', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'golden section search', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'edit distance', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'tree structure', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'exchange algorithm', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'dover publications', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'seam carving', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'recursive least squares', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'metaheuristic', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'quasi-newton method', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'on-line encyclopedia of integer sequences', {'weight': 1})
('on-line encyclopedia of integer sequences', 'robert e. lucas', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'non-convexity (economics)', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'sr1 formula', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'mathematical reviews', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'puzzle', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'associative array', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'shortest path problem', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'dynamic algorithm', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'augmented lagrangian method', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'list of oeis sequences', {'weight': 0.7})
('on-line encyclopedia of integer sequences', 'charles delisi', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'greedy algorithm', {'weight': 0.6})
('on-line encyclopedia of integer sequences', "karmarkar's algorithm", {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'u.s. english', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'utility', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'international standard book number', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'undirected graph', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'scheme (programming language)', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'rna structure', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'hanoi', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'perl', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'encyclopedias of mathematics', {'weight': 0.5})
('on-line encyclopedia of integer sequences', 'digital object identifier', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'sequential quadratic programming', {'weight': 0.6})
('on-line encyclopedia of integer sequences', "dinic's algorithm", {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'pseudo-polynomial time', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'partition problem', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'stochastic programming', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'hill climbing', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'top-down', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'de boor algorithm', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'optimization algorithm', {'weight': 0.6})
('on-line encyclopedia of integer sequences', "kruskal's algorithm", {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'jacques philippe marie binet', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'tabu search', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'divide and conquer algorithm', {'weight': 0.6})
('on-line encyclopedia of integer sequences', "johnson's algorithm", {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'evolutionary algorithm', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'clique-width', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'dynamic programming', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'subroutine', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'simulated annealing', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'tower of hanoi', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'branch and bound', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'engineering', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'matroid', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'viterbi algorithm', {'weight': 0.6})
('on-line encyclopedia of integer sequences', "lemke's algorithm", {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'simplex algorithm', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'local search (optimization)', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'hessian matrix', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'ibm system r', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'penalty method', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'prolog', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'time-invariant system', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'criss-cross algorithm', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'revised simplex algorithm', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'the mathematical association of america', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'line search', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'j (programming language)', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'word wrap', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'subset sum problem', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'integer programming', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'nucleosome', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'earley algorithm', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'referential transparency (computer science)', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'recursion', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'mathematica', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'quicksort', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'recursion (computer science)', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'checkerboard', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'computer science', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'brute-force search', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'mathematics', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'depth-first search', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'top-down and bottom-up design', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'correspondence problem', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'transcription factor', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'tree decomposition', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'structural alignment', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'local convergence', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'knapsack problem', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'graph algorithm', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'hidden markov model', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'string (computer science)', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'bioinformatics', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'genetics', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'mathematical optimization', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'artificial neural networks', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'introduction to algorithms', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'thomas h. cormen', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'music information retrieval', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'beat (music)', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'longest common subsequence problem', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'convex minimization', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'successive parabolic interpolation', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'fibonacci sequence', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'maximum subarray problem', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'convex optimization', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'memoization', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'richard bellman', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'exponential growth', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'charles e. leiserson', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'charles erwin wilson', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'interval scheduling', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'chart parser', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'travelling salesman problem', {'weight': 0.6})
('on-line encyclopedia of integer sequences', 'bellman equation', {'weight': 0.6})
('non-convexity (economics)', 'convexity in economics', {'weight': 0.7})
('non-convexity (economics)', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('non-convexity (economics)', 'sequence alignment', {'weight': 0.6})
('non-convexity (economics)', 'flow network', {'weight': 0.6})
('non-convexity (economics)', 'photoshop', {'weight': 0.6})
('non-convexity (economics)', 'bellman equation', {'weight': 0.6})
('non-convexity (economics)', 'charles erwin wilson', {'weight': 0.6})
('non-convexity (economics)', 'ellipsoid method', {'weight': 0.6})
('non-convexity (economics)', 'chain matrix multiplication', {'weight': 0.6})
('non-convexity (economics)', 'ieee', {'weight': 0.6})
('non-convexity (economics)', 'backtracking', {'weight': 0.6})
('non-convexity (economics)', 'nonlinear conjugate gradient method', {'weight': 0.6})
('non-convexity (economics)', 'dynamic problem', {'weight': 0.6})
('non-convexity (economics)', 'trust region', {'weight': 0.6})
('non-convexity (economics)', 'function (mathematics)', {'weight': 0.6})
('non-convexity (economics)', 'minimum spanning tree', {'weight': 0.6})
('non-convexity (economics)', 'context-free grammar', {'weight': 0.6})
('non-convexity (economics)', 'branch and cut', {'weight': 0.6})
('non-convexity (economics)', 'state variable', {'weight': 0.6})
('non-convexity (economics)', 'treewidth', {'weight': 0.6})
('non-convexity (economics)', 'overlapping subproblem', {'weight': 0.6})
('non-convexity (economics)', 'taylor & francis', {'weight': 0.6})
('non-convexity (economics)', 'cutting-plane method', {'weight': 0.6})
('non-convexity (economics)', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('non-convexity (economics)', 'method of undetermined coefficients', {'weight': 0.6})
('non-convexity (economics)', 'combinatorial optimization', {'weight': 0.6})
('non-convexity (economics)', "newton's method in optimization", {'weight': 0.6})
('non-convexity (economics)', 'mathematical and quantitative methods (economics)', {'weight': 0.5})
('non-convexity (economics)', 'matrix chain multiplication', {'weight': 0.6})
('non-convexity (economics)', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('non-convexity (economics)', 'dynamic time warping', {'weight': 0.6})
('non-convexity (economics)', 'dynamic programming language', {'weight': 0.6})
('non-convexity (economics)', 'call-by-need', {'weight': 0.6})
('non-convexity (economics)', 'big-o notation', {'weight': 0.6})
('non-convexity (economics)', 'convex geometry', {'weight': 0.5})
('non-convexity (economics)', 'comparison of optimization software', {'weight': 0.6})
('non-convexity (economics)', 'quadratic programming', {'weight': 0.6})
('non-convexity (economics)', 'common lisp', {'weight': 0.6})
('non-convexity (economics)', 'barrier function', {'weight': 0.6})
('non-convexity (economics)', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('non-convexity (economics)', 'gradient descent', {'weight': 0.6})
('non-convexity (economics)', 'patricia selinger', {'weight': 0.6})
('non-convexity (economics)', 'discounting', {'weight': 0.6})
('non-convexity (economics)', 'ronald l. rivest', {'weight': 0.6})
('non-convexity (economics)', 'iterative method', {'weight': 0.6})
('non-convexity (economics)', 'limited-memory bfgs', {'weight': 0.6})
('non-convexity (economics)', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('non-convexity (economics)', 'longest common substring problem', {'weight': 0.6})
('non-convexity (economics)', 'clifford stein', {'weight': 0.6})
('non-convexity (economics)', 'computer chess', {'weight': 0.6})
('non-convexity (economics)', 'linear programming', {'weight': 0.6})
('non-convexity (economics)', 'bitonic tour', {'weight': 0.6})
('non-convexity (economics)', 'linear search problem', {'weight': 0.6})
('non-convexity (economics)', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('non-convexity (economics)', 'mathematical economics', {'weight': 0.5})
('non-convexity (economics)', 'capital (economics)', {'weight': 0.6})
('non-convexity (economics)', 'levenshtein distance', {'weight': 0.6})
('non-convexity (economics)', 'nonlinear programming', {'weight': 0.6})
('non-convexity (economics)', 'computational complexity of mathematical operations', {'weight': 0.6})
('non-convexity (economics)', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('non-convexity (economics)', 'gradient', {'weight': 0.6})
('non-convexity (economics)', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('non-convexity (economics)', 'bulletin of the american mathematical society', {'weight': 0.6})
('non-convexity (economics)', 'u.s. english', {'weight': 0.6})
('non-convexity (economics)', 'refutation table', {'weight': 0.6})
('non-convexity (economics)', 'heuristic algorithm', {'weight': 0.6})
('non-convexity (economics)', 'successive linear programming', {'weight': 0.6})
('non-convexity (economics)', 'optimal substructure', {'weight': 0.6})
('non-convexity (economics)', 'programming language', {'weight': 0.6})
('non-convexity (economics)', 'mergesort', {'weight': 0.6})
('non-convexity (economics)', "dijkstra's algorithm", {'weight': 0.6})
('non-convexity (economics)', 'subgradient method', {'weight': 0.6})
('non-convexity (economics)', 'call-by-name', {'weight': 0.6})
('non-convexity (economics)', 'longest increasing subsequence problem', {'weight': 0.6})
('non-convexity (economics)', 'edward prescott', {'weight': 0.6})
('non-convexity (economics)', 'exponential time', {'weight': 0.6})
('non-convexity (economics)', 'principle of optimality', {'weight': 0.6})
('non-convexity (economics)', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('non-convexity (economics)', 'mathematical game', {'weight': 0.6})
('non-convexity (economics)', 'nancy stokey', {'weight': 0.6})
('non-convexity (economics)', 'approximation algorithm', {'weight': 0.6})
('non-convexity (economics)', 'discrete-time', {'weight': 0.6})
('non-convexity (economics)', 'cyk algorithm', {'weight': 0.6})
('non-convexity (economics)', 'markov decision process', {'weight': 0.6})
('non-convexity (economics)', "powell's method", {'weight': 0.6})
('non-convexity (economics)', 'wolfe conditions', {'weight': 0.6})
('non-convexity (economics)', 'transposition table', {'weight': 0.6})
('non-convexity (economics)', 'economics', {'weight': 0.6})
('non-convexity (economics)', 'backward induction', {'weight': 0.6})
('non-convexity (economics)', 'golden section search', {'weight': 0.6})
('non-convexity (economics)', 'edit distance', {'weight': 0.6})
('non-convexity (economics)', 'tree structure', {'weight': 0.6})
('non-convexity (economics)', 'exchange algorithm', {'weight': 0.6})
('non-convexity (economics)', 'dover publications', {'weight': 0.6})
('non-convexity (economics)', 'seam carving', {'weight': 0.6})
('non-convexity (economics)', 'recursive least squares', {'weight': 0.6})
('non-convexity (economics)', 'metaheuristic', {'weight': 0.6})
('non-convexity (economics)', 'quasi-newton method', {'weight': 0.6})
('non-convexity (economics)', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('non-convexity (economics)', 'robert e. lucas', {'weight': 0.6})
('non-convexity (economics)', 'non-convexity (economics)', {'weight': 1})
('non-convexity (economics)', 'sr1 formula', {'weight': 0.6})
('non-convexity (economics)', 'mathematical reviews', {'weight': 0.6})
('non-convexity (economics)', 'puzzle', {'weight': 0.6})
('non-convexity (economics)', 'associative array', {'weight': 0.6})
('non-convexity (economics)', 'shortest path problem', {'weight': 0.6})
('non-convexity (economics)', 'dynamic algorithm', {'weight': 0.6})
('non-convexity (economics)', 'augmented lagrangian method', {'weight': 0.6})
('non-convexity (economics)', 'charles delisi', {'weight': 0.6})
('non-convexity (economics)', 'greedy algorithm', {'weight': 0.6})
('non-convexity (economics)', "karmarkar's algorithm", {'weight': 0.6})
('non-convexity (economics)', 'lattice models', {'weight': 0.6})
('non-convexity (economics)', 'utility', {'weight': 0.6})
('non-convexity (economics)', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('non-convexity (economics)', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('non-convexity (economics)', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('non-convexity (economics)', 'international standard book number', {'weight': 0.6})
('non-convexity (economics)', 'undirected graph', {'weight': 0.6})
('non-convexity (economics)', 'scheme (programming language)', {'weight': 0.6})
('non-convexity (economics)', 'rna structure', {'weight': 0.6})
('non-convexity (economics)', 'hanoi', {'weight': 0.6})
('non-convexity (economics)', 'perl', {'weight': 0.6})
('non-convexity (economics)', 'digital object identifier', {'weight': 0.6})
('non-convexity (economics)', 'sequential quadratic programming', {'weight': 0.6})
('non-convexity (economics)', "dinic's algorithm", {'weight': 0.6})
('non-convexity (economics)', 'pseudo-polynomial time', {'weight': 0.6})
('non-convexity (economics)', 'partition problem', {'weight': 0.6})
('non-convexity (economics)', 'stochastic programming', {'weight': 0.6})
('non-convexity (economics)', 'hill climbing', {'weight': 0.6})
('non-convexity (economics)', 'top-down', {'weight': 0.6})
('non-convexity (economics)', 'de boor algorithm', {'weight': 0.6})
('non-convexity (economics)', 'optimization algorithm', {'weight': 0.6})
('non-convexity (economics)', "kruskal's algorithm", {'weight': 0.6})
('non-convexity (economics)', 'jacques philippe marie binet', {'weight': 0.6})
('non-convexity (economics)', 'tabu search', {'weight': 0.6})
('non-convexity (economics)', 'divide and conquer algorithm', {'weight': 0.6})
('non-convexity (economics)', "johnson's algorithm", {'weight': 0.6})
('non-convexity (economics)', 'evolutionary algorithm', {'weight': 0.6})
('non-convexity (economics)', 'clique-width', {'weight': 0.6})
('non-convexity (economics)', 'systems analysis', {'weight': 0.6})
('non-convexity (economics)', 'dynamic programming', {'weight': 0.6})
('non-convexity (economics)', 'subroutine', {'weight': 0.6})
('non-convexity (economics)', 'simulated annealing', {'weight': 0.6})
('non-convexity (economics)', 'tower of hanoi', {'weight': 0.6})
('non-convexity (economics)', 'branch and bound', {'weight': 0.6})
('non-convexity (economics)', 'engineering', {'weight': 0.6})
('non-convexity (economics)', 'matroid', {'weight': 0.6})
('non-convexity (economics)', 'viterbi algorithm', {'weight': 0.6})
('non-convexity (economics)', "lemke's algorithm", {'weight': 0.6})
('non-convexity (economics)', 'simplex algorithm', {'weight': 0.6})
('non-convexity (economics)', 'local search (optimization)', {'weight': 0.6})
('non-convexity (economics)', 'hessian matrix', {'weight': 0.6})
('non-convexity (economics)', 'ibm system r', {'weight': 0.6})
('non-convexity (economics)', 'penalty method', {'weight': 0.6})
('non-convexity (economics)', 'prolog', {'weight': 0.6})
('non-convexity (economics)', 'time-invariant system', {'weight': 0.6})
('non-convexity (economics)', 'criss-cross algorithm', {'weight': 0.6})
('non-convexity (economics)', 'revised simplex algorithm', {'weight': 0.6})
('non-convexity (economics)', 'the mathematical association of america', {'weight': 0.6})
('non-convexity (economics)', 'line search', {'weight': 0.6})
('non-convexity (economics)', 'j (programming language)', {'weight': 0.6})
('non-convexity (economics)', 'word wrap', {'weight': 0.6})
('non-convexity (economics)', 'subset sum problem', {'weight': 0.6})
('non-convexity (economics)', 'integer programming', {'weight': 0.6})
('non-convexity (economics)', 'nucleosome', {'weight': 0.6})
('non-convexity (economics)', 'earley algorithm', {'weight': 0.6})
('non-convexity (economics)', 'referential transparency (computer science)', {'weight': 0.6})
('non-convexity (economics)', 'recursion', {'weight': 0.6})
('non-convexity (economics)', 'mathematica', {'weight': 0.6})
('non-convexity (economics)', 'quicksort', {'weight': 0.6})
('non-convexity (economics)', 'recursion (computer science)', {'weight': 0.6})
('non-convexity (economics)', 'computer science', {'weight': 0.6})
('non-convexity (economics)', 'brute-force search', {'weight': 0.6})
('non-convexity (economics)', 'mathematics', {'weight': 0.6})
('non-convexity (economics)', 'depth-first search', {'weight': 0.6})
('non-convexity (economics)', 'top-down and bottom-up design', {'weight': 0.6})
('non-convexity (economics)', 'correspondence problem', {'weight': 0.6})
('non-convexity (economics)', 'transcription factor', {'weight': 0.6})
('non-convexity (economics)', 'tree decomposition', {'weight': 0.6})
('non-convexity (economics)', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('non-convexity (economics)', 'structural alignment', {'weight': 0.6})
('non-convexity (economics)', 'local convergence', {'weight': 0.6})
('non-convexity (economics)', 'knapsack problem', {'weight': 0.6})
('non-convexity (economics)', 'graph algorithm', {'weight': 0.6})
('non-convexity (economics)', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('non-convexity (economics)', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('non-convexity (economics)', 'hidden markov model', {'weight': 0.6})
('non-convexity (economics)', 'string (computer science)', {'weight': 0.6})
('non-convexity (economics)', 'bioinformatics', {'weight': 0.6})
('non-convexity (economics)', 'genetics', {'weight': 0.6})
('non-convexity (economics)', 'mathematical optimization', {'weight': 0.6})
('non-convexity (economics)', 'artificial neural networks', {'weight': 0.6})
('non-convexity (economics)', 'introduction to algorithms', {'weight': 0.6})
('non-convexity (economics)', 'thomas h. cormen', {'weight': 0.6})
('non-convexity (economics)', 'general equilibrium and disequilibrium', {'weight': 0.5})
('non-convexity (economics)', 'music information retrieval', {'weight': 0.6})
('non-convexity (economics)', 'beat (music)', {'weight': 0.6})
('non-convexity (economics)', 'longest common subsequence problem', {'weight': 0.6})
('non-convexity (economics)', 'convex minimization', {'weight': 0.6})
('non-convexity (economics)', 'successive parabolic interpolation', {'weight': 0.6})
('non-convexity (economics)', 'fibonacci sequence', {'weight': 0.6})
('non-convexity (economics)', 'maximum subarray problem', {'weight': 0.6})
('non-convexity (economics)', 'convex optimization', {'weight': 0.6})
('non-convexity (economics)', 'memoization', {'weight': 0.6})
('non-convexity (economics)', 'richard bellman', {'weight': 0.6})
('non-convexity (economics)', 'exponential growth', {'weight': 0.6})
('non-convexity (economics)', 'charles e. leiserson', {'weight': 0.6})
('non-convexity (economics)', 'shapley\xe2\x80\x93folkman lemma', {'weight': 0.7})
('non-convexity (economics)', 'checkerboard', {'weight': 0.6})
('non-convexity (economics)', 'interval scheduling', {'weight': 0.6})
('non-convexity (economics)', 'chart parser', {'weight': 0.6})
('non-convexity (economics)', 'travelling salesman problem', {'weight': 0.6})
('non-convexity (economics)', 'convex hulls', {'weight': 0.5})
('associative array', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('associative array', 'photoshop', {'weight': 0.6})
('associative array', 'sequence alignment', {'weight': 0.6})
('associative array', 'flow network', {'weight': 0.6})
('associative array', 'data types', {'weight': 0.5})
('associative array', 'composite data types', {'weight': 0.5})
('associative array', 'ellipsoid method', {'weight': 0.6})
('associative array', 'chain matrix multiplication', {'weight': 0.6})
('associative array', 'ieee', {'weight': 0.6})
('associative array', 'backtracking', {'weight': 0.6})
('associative array', 'nonlinear conjugate gradient method', {'weight': 0.6})
('associative array', 'dynamic problem', {'weight': 0.6})
('associative array', 'trust region', {'weight': 0.6})
('associative array', 'function (mathematics)', {'weight': 0.7})
('associative array', 'tuple', {'weight': 0.7})
('associative array', 'minimum spanning tree', {'weight': 0.6})
('associative array', 'context-free grammar', {'weight': 0.6})
('associative array', 'branch and cut', {'weight': 0.6})
('associative array', 'state variable', {'weight': 0.6})
('associative array', 'treewidth', {'weight': 0.6})
('associative array', 'overlapping subproblem', {'weight': 0.6})
('associative array', 'taylor & francis', {'weight': 0.6})
('associative array', 'cutting-plane method', {'weight': 0.6})
('associative array', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('associative array', 'method of undetermined coefficients', {'weight': 0.6})
('associative array', 'abstract data types', {'weight': 0.5})
('associative array', "newton's method in optimization", {'weight': 0.6})
('associative array', 'matrix chain multiplication', {'weight': 0.6})
('associative array', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('associative array', 'dynamic time warping', {'weight': 0.6})
('associative array', 'dynamic programming language', {'weight': 0.6})
('associative array', 'call-by-need', {'weight': 0.6})
('associative array', 'big-o notation', {'weight': 0.6})
('associative array', 'comparison of optimization software', {'weight': 0.6})
('associative array', 'quadratic programming', {'weight': 0.6})
('associative array', 'common lisp', {'weight': 0.6})
('associative array', 'barrier function', {'weight': 0.6})
('associative array', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('associative array', 'gradient descent', {'weight': 0.6})
('associative array', 'patricia selinger', {'weight': 0.6})
('associative array', 'discounting', {'weight': 0.6})
('associative array', 'ronald l. rivest', {'weight': 0.6})
('associative array', 'iterative method', {'weight': 0.6})
('associative array', 'limited-memory bfgs', {'weight': 0.6})
('associative array', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('associative array', 'longest common substring problem', {'weight': 0.6})
('associative array', 'clifford stein', {'weight': 0.6})
('associative array', 'computer chess', {'weight': 0.6})
('associative array', 'linear programming', {'weight': 0.6})
('associative array', 'bitonic tour', {'weight': 0.6})
('associative array', 'linear search problem', {'weight': 0.6})
('associative array', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('associative array', 'systems analysis', {'weight': 0.6})
('associative array', 'combinatorial optimization', {'weight': 0.6})
('associative array', 'capital (economics)', {'weight': 0.6})
('associative array', 'levenshtein distance', {'weight': 0.6})
('associative array', 'nonlinear programming', {'weight': 0.6})
('associative array', 'computational complexity of mathematical operations', {'weight': 0.6})
('associative array', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('associative array', 'gradient', {'weight': 0.6})
('associative array', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('associative array', 'bulletin of the american mathematical society', {'weight': 0.6})
('associative array', 'u.s. english', {'weight': 0.6})
('associative array', 'refutation table', {'weight': 0.6})
('associative array', 'heuristic algorithm', {'weight': 0.6})
('associative array', 'successive linear programming', {'weight': 0.6})
('associative array', 'optimal substructure', {'weight': 0.6})
('associative array', 'programming language', {'weight': 0.6})
('associative array', 'mergesort', {'weight': 0.6})
('associative array', "dijkstra's algorithm", {'weight': 0.6})
('associative array', 'subgradient method', {'weight': 0.6})
('associative array', 'call-by-name', {'weight': 0.6})
('associative array', 'longest increasing subsequence problem', {'weight': 0.6})
('associative array', 'edward prescott', {'weight': 0.6})
('associative array', 'exponential time', {'weight': 0.6})
('associative array', 'principle of optimality', {'weight': 0.6})
('associative array', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('associative array', 'mathematical game', {'weight': 0.6})
('associative array', 'nancy stokey', {'weight': 0.6})
('associative array', 'approximation algorithm', {'weight': 0.6})
('associative array', 'discrete-time', {'weight': 0.6})
('associative array', 'cyk algorithm', {'weight': 0.6})
('associative array', 'markov decision process', {'weight': 0.6})
('associative array', "powell's method", {'weight': 0.6})
('associative array', 'wolfe conditions', {'weight': 0.6})
('associative array', 'convexity in economics', {'weight': 0.6})
('associative array', 'transposition table', {'weight': 0.6})
('associative array', 'economics', {'weight': 0.6})
('associative array', 'backward induction', {'weight': 0.6})
('associative array', 'golden section search', {'weight': 0.6})
('associative array', 'edit distance', {'weight': 0.6})
('associative array', 'tree structure', {'weight': 0.6})
('associative array', 'exchange algorithm', {'weight': 0.6})
('associative array', 'dover publications', {'weight': 0.6})
('associative array', 'seam carving', {'weight': 0.6})
('associative array', 'recursive least squares', {'weight': 0.6})
('associative array', 'metaheuristic', {'weight': 0.6})
('associative array', 'quasi-newton method', {'weight': 0.6})
('associative array', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('associative array', 'robert e. lucas', {'weight': 0.6})
('associative array', 'non-convexity (economics)', {'weight': 0.6})
('associative array', 'sr1 formula', {'weight': 0.6})
('associative array', 'mathematical reviews', {'weight': 0.6})
('associative array', 'puzzle', {'weight': 0.6})
('associative array', 'associative array', {'weight': 1})
('associative array', 'shortest path problem', {'weight': 0.6})
('associative array', 'dynamic algorithm', {'weight': 0.6})
('associative array', 'augmented lagrangian method', {'weight': 0.6})
('associative array', 'charles delisi', {'weight': 0.6})
('associative array', 'greedy algorithm', {'weight': 0.6})
('associative array', "karmarkar's algorithm", {'weight': 0.6})
('associative array', 'lattice models', {'weight': 0.6})
('associative array', 'utility', {'weight': 0.6})
('associative array', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('associative array', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('associative array', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('associative array', 'international standard book number', {'weight': 0.6})
('associative array', 'undirected graph', {'weight': 0.6})
('associative array', 'scheme (programming language)', {'weight': 0.6})
('associative array', 'rna structure', {'weight': 0.6})
('associative array', 'hanoi', {'weight': 0.6})
('associative array', 'json', {'weight': 0.7})
('associative array', 'perl', {'weight': 0.6})
('associative array', 'digital object identifier', {'weight': 0.6})
('associative array', 'sequential quadratic programming', {'weight': 0.6})
('associative array', "dinic's algorithm", {'weight': 0.6})
('associative array', 'pseudo-polynomial time', {'weight': 0.6})
('associative array', 'key-value data store', {'weight': 0.7})
('associative array', 'partition problem', {'weight': 0.6})
('associative array', 'stochastic programming', {'weight': 0.6})
('associative array', 'hill climbing', {'weight': 0.6})
('associative array', 'top-down', {'weight': 0.6})
('associative array', 'de boor algorithm', {'weight': 0.6})
('associative array', 'computer programming portal', {'weight': 0.7})
('associative array', 'optimization algorithm', {'weight': 0.6})
('associative array', "kruskal's algorithm", {'weight': 0.6})
('associative array', 'jacques philippe marie binet', {'weight': 0.6})
('associative array', 'tabu search', {'weight': 0.6})
('associative array', 'divide and conquer algorithm', {'weight': 0.6})
('associative array', "johnson's algorithm", {'weight': 0.6})
('associative array', 'evolutionary algorithm', {'weight': 0.6})
('associative array', 'clique-width', {'weight': 0.6})
('associative array', 'dynamic programming', {'weight': 0.6})
('associative array', 'subroutine', {'weight': 0.6})
('associative array', 'simulated annealing', {'weight': 0.6})
('associative array', 'tower of hanoi', {'weight': 0.6})
('associative array', 'branch and bound', {'weight': 0.6})
('associative array', 'engineering', {'weight': 0.6})
('associative array', 'matroid', {'weight': 0.6})
('associative array', 'viterbi algorithm', {'weight': 0.6})
('associative array', "lemke's algorithm", {'weight': 0.6})
('associative array', 'simplex algorithm', {'weight': 0.6})
('associative array', 'local search (optimization)', {'weight': 0.6})
('associative array', 'hessian matrix', {'weight': 0.6})
('associative array', 'ibm system r', {'weight': 0.6})
('associative array', 'penalty method', {'weight': 0.6})
('associative array', 'prolog', {'weight': 0.6})
('associative array', 'time-invariant system', {'weight': 0.6})
('associative array', 'criss-cross algorithm', {'weight': 0.6})
('associative array', 'revised simplex algorithm', {'weight': 0.6})
('associative array', 'the mathematical association of america', {'weight': 0.6})
('associative array', 'line search', {'weight': 0.6})
('associative array', 'j (programming language)', {'weight': 0.6})
('associative array', 'word wrap', {'weight': 0.6})
('associative array', 'subset sum problem', {'weight': 0.6})
('associative array', 'integer programming', {'weight': 0.6})
('associative array', 'nucleosome', {'weight': 0.6})
('associative array', 'earley algorithm', {'weight': 0.6})
('associative array', 'referential transparency (computer science)', {'weight': 0.6})
('associative array', 'recursion', {'weight': 0.6})
('associative array', 'key-value database', {'weight': 0.7})
('associative array', 'mathematica', {'weight': 0.6})
('associative array', 'quicksort', {'weight': 0.6})
('associative array', 'associative arrays', {'weight': 0.5})
('associative array', 'recursion (computer science)', {'weight': 0.6})
('associative array', 'checkerboard', {'weight': 0.6})
('associative array', 'computer science', {'weight': 0.6})
('associative array', 'brute-force search', {'weight': 0.6})
('associative array', 'mathematics', {'weight': 0.6})
('associative array', 'depth-first search', {'weight': 0.6})
('associative array', 'top-down and bottom-up design', {'weight': 0.6})
('associative array', 'correspondence problem', {'weight': 0.6})
('associative array', 'transcription factor', {'weight': 0.6})
('associative array', 'tree decomposition', {'weight': 0.6})
('associative array', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('associative array', 'structural alignment', {'weight': 0.6})
('associative array', 'local convergence', {'weight': 0.6})
('associative array', 'knapsack problem', {'weight': 0.6})
('associative array', 'graph algorithm', {'weight': 0.6})
('associative array', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('associative array', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('associative array', 'hidden markov model', {'weight': 0.6})
('associative array', 'string (computer science)', {'weight': 0.6})
('associative array', 'bioinformatics', {'weight': 0.6})
('associative array', 'genetics', {'weight': 0.6})
('associative array', 'mathematical optimization', {'weight': 0.6})
('associative array', 'artificial neural networks', {'weight': 0.6})
('associative array', 'introduction to algorithms', {'weight': 0.6})
('associative array', 'thomas h. cormen', {'weight': 0.6})
('associative array', 'music information retrieval', {'weight': 0.6})
('associative array', 'beat (music)', {'weight': 0.6})
('associative array', 'longest common subsequence problem', {'weight': 0.6})
('associative array', 'convex minimization', {'weight': 0.6})
('associative array', 'successive parabolic interpolation', {'weight': 0.6})
('associative array', 'fibonacci sequence', {'weight': 0.6})
('associative array', 'maximum subarray problem', {'weight': 0.6})
('associative array', 'convex optimization', {'weight': 0.6})
('associative array', 'memoization', {'weight': 0.6})
('associative array', 'richard bellman', {'weight': 0.6})
('associative array', 'exponential growth', {'weight': 0.6})
('associative array', 'charles e. leiserson', {'weight': 0.6})
('associative array', 'charles erwin wilson', {'weight': 0.6})
('associative array', 'interval scheduling', {'weight': 0.6})
('associative array', 'chart parser', {'weight': 0.6})
('associative array', 'travelling salesman problem', {'weight': 0.6})
('associative array', 'bellman equation', {'weight': 0.6})
('u.s. english', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('u.s. english', 'photoshop', {'weight': 0.6})
('u.s. english', 'sequence alignment', {'weight': 0.6})
('u.s. english', 'flow network', {'weight': 0.6})
('u.s. english', 'ellipsoid method', {'weight': 0.6})
('u.s. english', 'chain matrix multiplication', {'weight': 0.6})
('u.s. english', 'ieee', {'weight': 0.6})
('u.s. english', 'backtracking', {'weight': 0.6})
('u.s. english', 'nonlinear conjugate gradient method', {'weight': 0.6})
('u.s. english', 'dynamic problem', {'weight': 0.6})
('u.s. english', 'trust region', {'weight': 0.6})
('u.s. english', 'function (mathematics)', {'weight': 0.6})
('u.s. english', 'minimum spanning tree', {'weight': 0.6})
('u.s. english', 'context-free grammar', {'weight': 0.6})
('u.s. english', 'branch and cut', {'weight': 0.6})
('u.s. english', 'state variable', {'weight': 0.6})
('u.s. english', 'treewidth', {'weight': 0.6})
('u.s. english', 'overlapping subproblem', {'weight': 0.6})
('u.s. english', 'taylor & francis', {'weight': 0.6})
('u.s. english', 'cutting-plane method', {'weight': 0.6})
('u.s. english', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('u.s. english', 'method of undetermined coefficients', {'weight': 0.6})
('u.s. english', 'combinatorial optimization', {'weight': 0.6})
('u.s. english', "newton's method in optimization", {'weight': 0.6})
('u.s. english', 'matrix chain multiplication', {'weight': 0.6})
('u.s. english', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('u.s. english', 'dynamic time warping', {'weight': 0.6})
('u.s. english', 'dynamic programming language', {'weight': 0.6})
('u.s. english', 'call-by-need', {'weight': 0.6})
('u.s. english', 'big-o notation', {'weight': 0.6})
('u.s. english', 'comparison of optimization software', {'weight': 0.6})
('u.s. english', 'quadratic programming', {'weight': 0.6})
('u.s. english', 'common lisp', {'weight': 0.6})
('u.s. english', 'barrier function', {'weight': 0.6})
('u.s. english', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('u.s. english', 'gradient descent', {'weight': 0.6})
('u.s. english', 'patricia selinger', {'weight': 0.6})
('u.s. english', 'discounting', {'weight': 0.6})
('u.s. english', 'ronald l. rivest', {'weight': 0.6})
('u.s. english', 'iterative method', {'weight': 0.6})
('u.s. english', 'limited-memory bfgs', {'weight': 0.6})
('u.s. english', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('u.s. english', 'longest common substring problem', {'weight': 0.6})
('u.s. english', 'clifford stein', {'weight': 0.6})
('u.s. english', 'computer chess', {'weight': 0.6})
('u.s. english', 'linear programming', {'weight': 0.6})
('u.s. english', 'bitonic tour', {'weight': 0.6})
('u.s. english', 'linear search problem', {'weight': 0.6})
('u.s. english', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('u.s. english', 'systems analysis', {'weight': 0.6})
('u.s. english', 'capital (economics)', {'weight': 0.6})
('u.s. english', 'levenshtein distance', {'weight': 0.6})
('u.s. english', 'nonlinear programming', {'weight': 0.6})
('u.s. english', 'computational complexity of mathematical operations', {'weight': 0.6})
('u.s. english', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('u.s. english', 'gradient', {'weight': 0.6})
('u.s. english', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('u.s. english', 'bulletin of the american mathematical society', {'weight': 0.6})
('u.s. english', 'u.s. english', {'weight': 1})
('u.s. english', 'refutation table', {'weight': 0.6})
('u.s. english', 'heuristic algorithm', {'weight': 0.6})
('u.s. english', 'successive linear programming', {'weight': 0.6})
('u.s. english', 'optimal substructure', {'weight': 0.6})
('u.s. english', 'programming language', {'weight': 0.6})
('u.s. english', 'mergesort', {'weight': 0.6})
('u.s. english', "dijkstra's algorithm", {'weight': 0.6})
('u.s. english', 'subgradient method', {'weight': 0.6})
('u.s. english', 'call-by-name', {'weight': 0.6})
('u.s. english', 'longest increasing subsequence problem', {'weight': 0.6})
('u.s. english', 'edward prescott', {'weight': 0.6})
('u.s. english', 'exponential time', {'weight': 0.6})
('u.s. english', 'principle of optimality', {'weight': 0.6})
('u.s. english', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('u.s. english', 'mathematical game', {'weight': 0.6})
('u.s. english', 'nancy stokey', {'weight': 0.6})
('u.s. english', 'approximation algorithm', {'weight': 0.6})
('u.s. english', 'discrete-time', {'weight': 0.6})
('u.s. english', 'cyk algorithm', {'weight': 0.6})
('u.s. english', 'markov decision process', {'weight': 0.6})
('u.s. english', "powell's method", {'weight': 0.6})
('u.s. english', 'wolfe conditions', {'weight': 0.6})
('u.s. english', 'convexity in economics', {'weight': 0.6})
('u.s. english', 'transposition table', {'weight': 0.6})
('u.s. english', 'economics', {'weight': 0.6})
('u.s. english', 'backward induction', {'weight': 0.6})
('u.s. english', 'golden section search', {'weight': 0.6})
('u.s. english', 'edit distance', {'weight': 0.6})
('u.s. english', 'tree structure', {'weight': 0.6})
('u.s. english', 'exchange algorithm', {'weight': 0.6})
('u.s. english', 'dover publications', {'weight': 0.6})
('u.s. english', 'seam carving', {'weight': 0.6})
('u.s. english', 'recursive least squares', {'weight': 0.6})
('u.s. english', 'metaheuristic', {'weight': 0.6})
('u.s. english', 'quasi-newton method', {'weight': 0.6})
('u.s. english', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('u.s. english', 'robert e. lucas', {'weight': 0.6})
('u.s. english', 'non-convexity (economics)', {'weight': 0.6})
('u.s. english', 'sr1 formula', {'weight': 0.6})
('u.s. english', 'mathematical reviews', {'weight': 0.6})
('u.s. english', 'puzzle', {'weight': 0.6})
('u.s. english', 'associative array', {'weight': 0.6})
('u.s. english', 'shortest path problem', {'weight': 0.6})
('u.s. english', 'dynamic algorithm', {'weight': 0.6})
('u.s. english', 'augmented lagrangian method', {'weight': 0.6})
('u.s. english', 'charles delisi', {'weight': 0.6})
('u.s. english', 'greedy algorithm', {'weight': 0.6})
('u.s. english', "karmarkar's algorithm", {'weight': 0.6})
('u.s. english', 'lattice models', {'weight': 0.6})
('u.s. english', 'utility', {'weight': 0.6})
('u.s. english', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('u.s. english', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('u.s. english', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('u.s. english', 'international standard book number', {'weight': 0.6})
('u.s. english', 'undirected graph', {'weight': 0.6})
('u.s. english', 'scheme (programming language)', {'weight': 0.6})
('u.s. english', 'rna structure', {'weight': 0.6})
('u.s. english', 'hanoi', {'weight': 0.6})
('u.s. english', 'perl', {'weight': 0.6})
('u.s. english', 'digital object identifier', {'weight': 0.6})
('u.s. english', 'sequential quadratic programming', {'weight': 0.6})
('u.s. english', "dinic's algorithm", {'weight': 0.6})
('u.s. english', 'pseudo-polynomial time', {'weight': 0.6})
('u.s. english', 'partition problem', {'weight': 0.6})
('u.s. english', 'stochastic programming', {'weight': 0.6})
('u.s. english', 'hill climbing', {'weight': 0.6})
('u.s. english', 'top-down', {'weight': 0.6})
('u.s. english', 'de boor algorithm', {'weight': 0.6})
('u.s. english', 'optimization algorithm', {'weight': 0.6})
('u.s. english', "kruskal's algorithm", {'weight': 0.6})
('u.s. english', 'jacques philippe marie binet', {'weight': 0.6})
('u.s. english', 'tabu search', {'weight': 0.6})
('u.s. english', 'divide and conquer algorithm', {'weight': 0.6})
('u.s. english', "johnson's algorithm", {'weight': 0.6})
('u.s. english', 'evolutionary algorithm', {'weight': 0.6})
('u.s. english', 'clique-width', {'weight': 0.6})
('u.s. english', 'dynamic programming', {'weight': 0.6})
('u.s. english', 'subroutine', {'weight': 0.6})
('u.s. english', 'simulated annealing', {'weight': 0.6})
('u.s. english', 'tower of hanoi', {'weight': 0.6})
('u.s. english', 'branch and bound', {'weight': 0.6})
('u.s. english', 'engineering', {'weight': 0.6})
('u.s. english', 'matroid', {'weight': 0.6})
('u.s. english', 'viterbi algorithm', {'weight': 0.6})
('u.s. english', "lemke's algorithm", {'weight': 0.6})
('u.s. english', 'simplex algorithm', {'weight': 0.6})
('u.s. english', 'local search (optimization)', {'weight': 0.6})
('u.s. english', 'hessian matrix', {'weight': 0.6})
('u.s. english', 'ibm system r', {'weight': 0.6})
('u.s. english', 'penalty method', {'weight': 0.6})
('u.s. english', 'prolog', {'weight': 0.6})
('u.s. english', 'time-invariant system', {'weight': 0.6})
('u.s. english', 'criss-cross algorithm', {'weight': 0.6})
('u.s. english', 'revised simplex algorithm', {'weight': 0.6})
('u.s. english', 'the mathematical association of america', {'weight': 0.6})
('u.s. english', 'line search', {'weight': 0.6})
('u.s. english', 'j (programming language)', {'weight': 0.6})
('u.s. english', 'word wrap', {'weight': 0.6})
('u.s. english', 'subset sum problem', {'weight': 0.6})
('u.s. english', 'integer programming', {'weight': 0.6})
('u.s. english', 'nucleosome', {'weight': 0.6})
('u.s. english', 'earley algorithm', {'weight': 0.6})
('u.s. english', 'referential transparency (computer science)', {'weight': 0.6})
('u.s. english', 'recursion', {'weight': 0.6})
('u.s. english', 'mathematica', {'weight': 0.6})
('u.s. english', 'quicksort', {'weight': 0.6})
('u.s. english', 'recursion (computer science)', {'weight': 0.6})
('u.s. english', 'checkerboard', {'weight': 0.6})
('u.s. english', 'computer science', {'weight': 0.6})
('u.s. english', 'brute-force search', {'weight': 0.6})
('u.s. english', 'mathematics', {'weight': 0.6})
('u.s. english', 'depth-first search', {'weight': 0.6})
('u.s. english', 'top-down and bottom-up design', {'weight': 0.6})
('u.s. english', 'correspondence problem', {'weight': 0.6})
('u.s. english', 'transcription factor', {'weight': 0.6})
('u.s. english', 'tree decomposition', {'weight': 0.6})
('u.s. english', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('u.s. english', 'structural alignment', {'weight': 0.6})
('u.s. english', 'local convergence', {'weight': 0.6})
('u.s. english', 'knapsack problem', {'weight': 0.6})
('u.s. english', 'graph algorithm', {'weight': 0.6})
('u.s. english', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('u.s. english', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('u.s. english', 'hidden markov model', {'weight': 0.6})
('u.s. english', 'string (computer science)', {'weight': 0.6})
('u.s. english', 'bioinformatics', {'weight': 0.6})
('u.s. english', 'genetics', {'weight': 0.6})
('u.s. english', 'mathematical optimization', {'weight': 0.6})
('u.s. english', 'artificial neural networks', {'weight': 0.6})
('u.s. english', 'introduction to algorithms', {'weight': 0.6})
('u.s. english', 'thomas h. cormen', {'weight': 0.6})
('u.s. english', 'music information retrieval', {'weight': 0.6})
('u.s. english', 'beat (music)', {'weight': 0.6})
('u.s. english', 'longest common subsequence problem', {'weight': 0.6})
('u.s. english', 'convex minimization', {'weight': 0.6})
('u.s. english', 'successive parabolic interpolation', {'weight': 0.6})
('u.s. english', 'fibonacci sequence', {'weight': 0.6})
('u.s. english', 'maximum subarray problem', {'weight': 0.6})
('u.s. english', 'convex optimization', {'weight': 0.6})
('u.s. english', 'memoization', {'weight': 0.6})
('u.s. english', 'richard bellman', {'weight': 0.6})
('u.s. english', 'exponential growth', {'weight': 0.6})
('u.s. english', 'charles e. leiserson', {'weight': 0.6})
('u.s. english', 'charles erwin wilson', {'weight': 0.6})
('u.s. english', 'interval scheduling', {'weight': 0.6})
('u.s. english', 'chart parser', {'weight': 0.6})
('u.s. english', 'travelling salesman problem', {'weight': 0.6})
('u.s. english', 'bellman equation', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'photoshop', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'sequence alignment', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'flow network', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'ellipsoid method', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'chain matrix multiplication', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'ieee', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'backtracking', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'nonlinear conjugate gradient method', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'dynamic problem', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'trust region', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'function (mathematics)', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'minimum spanning tree', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'context-free grammar', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'branch and cut', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'state variable', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'treewidth', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'overlapping subproblem', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'taylor & francis', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'cutting-plane method', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'method of undetermined coefficients', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'combinatorial optimization', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', "newton's method in optimization", {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'matrix chain multiplication', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'dynamic time warping', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'dynamic programming language', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'call-by-need', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'big-o notation', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'comparison of optimization software', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'quadratic programming', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'common lisp', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'barrier function', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'gradient descent', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'patricia selinger', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'discounting', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'ronald l. rivest', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'iterative method', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'limited-memory bfgs', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'longest common substring problem', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'clifford stein', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'computer chess', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'linear programming', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'bitonic tour', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'linear search problem', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'systems analysis', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'capital (economics)', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'levenshtein distance', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'nonlinear programming', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'computational complexity of mathematical operations', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'gradient', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'bulletin of the american mathematical society', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'u.s. english', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'refutation table', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'heuristic algorithm', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'successive linear programming', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'optimal substructure', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'programming language', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'mergesort', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', "dijkstra's algorithm", {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'subgradient method', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'call-by-name', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'longest increasing subsequence problem', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'edward prescott', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'exponential time', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'principle of optimality', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'mathematical game', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'nancy stokey', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'approximation algorithm', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'discrete-time', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'cyk algorithm', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'markov decision process', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', "powell's method", {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'wolfe conditions', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'convexity in economics', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'transposition table', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'economics', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'backward induction', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'golden section search', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'edit distance', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'tree structure', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'exchange algorithm', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'dover publications', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'seam carving', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'recursive least squares', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'metaheuristic', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'quasi-newton method', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'robert e. lucas', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'non-convexity (economics)', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'sr1 formula', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'mathematical reviews', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'puzzle', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'associative array', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'shortest path problem', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'dynamic algorithm', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'augmented lagrangian method', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'charles delisi', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'greedy algorithm', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', "karmarkar's algorithm", {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'lattice models', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'utility', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 1})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'international standard book number', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'undirected graph', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'scheme (programming language)', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'rna structure', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'hanoi', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'perl', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'digital object identifier', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'sequential quadratic programming', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', "dinic's algorithm", {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'pseudo-polynomial time', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'partition problem', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'stochastic programming', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'hill climbing', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'top-down', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'de boor algorithm', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'optimization algorithm', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', "kruskal's algorithm", {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'jacques philippe marie binet', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'tabu search', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'divide and conquer algorithm', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', "johnson's algorithm", {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'evolutionary algorithm', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'clique-width', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'dynamic programming', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'subroutine', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'simulated annealing', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'tower of hanoi', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'branch and bound', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'engineering', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'matroid', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'viterbi algorithm', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', "lemke's algorithm", {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'simplex algorithm', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'local search (optimization)', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'hessian matrix', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'ibm system r', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'penalty method', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'prolog', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'time-invariant system', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'criss-cross algorithm', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'revised simplex algorithm', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'the mathematical association of america', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'line search', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'j (programming language)', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'word wrap', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'subset sum problem', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'integer programming', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'nucleosome', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'earley algorithm', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'referential transparency (computer science)', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'recursion', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'mathematica', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'quicksort', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'recursion (computer science)', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'checkerboard', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'computer science', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'brute-force search', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'mathematics', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'depth-first search', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'top-down and bottom-up design', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'correspondence problem', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'transcription factor', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'tree decomposition', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'structural alignment', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'local convergence', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'knapsack problem', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'graph algorithm', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'hidden markov model', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'string (computer science)', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'bioinformatics', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'genetics', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'mathematical optimization', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'artificial neural networks', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'introduction to algorithms', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'thomas h. cormen', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'music information retrieval', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'beat (music)', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'longest common subsequence problem', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'convex minimization', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'successive parabolic interpolation', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'fibonacci sequence', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'maximum subarray problem', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'convex optimization', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'memoization', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'richard bellman', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'exponential growth', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'charles e. leiserson', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'charles erwin wilson', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'interval scheduling', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'chart parser', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'travelling salesman problem', {'weight': 0.6})
('broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', 'bellman equation', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'photoshop', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'sequence alignment', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'flow network', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'ellipsoid method', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'chain matrix multiplication', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'ieee', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'backtracking', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'nonlinear conjugate gradient method', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'dynamic problem', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'trust region', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'function (mathematics)', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'minimum spanning tree', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'context-free grammar', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'branch and cut', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'state variable', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'treewidth', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'overlapping subproblem', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'taylor & francis', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'cutting-plane method', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'method of undetermined coefficients', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'combinatorial optimization', {'weight': 0.6})
('push-relabel maximum flow algorithm', "newton's method in optimization", {'weight': 0.6})
('push-relabel maximum flow algorithm', 'matrix chain multiplication', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'dynamic time warping', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'dynamic programming language', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'call-by-need', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'big-o notation', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'graph algorithms', {'weight': 0.5})
('push-relabel maximum flow algorithm', 'comparison of optimization software', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'quadratic programming', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'common lisp', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'barrier function', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'gradient descent', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'patricia selinger', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'discounting', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'ronald l. rivest', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'iterative method', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'limited-memory bfgs', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'longest common substring problem', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'clifford stein', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'network flow', {'weight': 0.5})
('push-relabel maximum flow algorithm', 'computer chess', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'linear programming', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'bitonic tour', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'linear search problem', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'systems analysis', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'capital (economics)', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'levenshtein distance', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'nonlinear programming', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'computational complexity of mathematical operations', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'gradient', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'bulletin of the american mathematical society', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'u.s. english', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'refutation table', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'heuristic algorithm', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'successive linear programming', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'optimal substructure', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'programming language', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'mergesort', {'weight': 0.6})
('push-relabel maximum flow algorithm', "dijkstra's algorithm", {'weight': 0.6})
('push-relabel maximum flow algorithm', 'subgradient method', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'call-by-name', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'longest increasing subsequence problem', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'edward prescott', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'exponential time', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'principle of optimality', {'weight': 0.6})
('push-relabel maximum flow algorithm', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('push-relabel maximum flow algorithm', 'mathematical game', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'nancy stokey', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'approximation algorithm', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'discrete-time', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'cyk algorithm', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'markov decision process', {'weight': 0.6})
('push-relabel maximum flow algorithm', "powell's method", {'weight': 0.6})
('push-relabel maximum flow algorithm', 'wolfe conditions', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'convexity in economics', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'transposition table', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'economics', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'backward induction', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'golden section search', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'edit distance', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'tree structure', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'exchange algorithm', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'dover publications', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'seam carving', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'recursive least squares', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'metaheuristic', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'quasi-newton method', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'robert e. lucas', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'non-convexity (economics)', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'sr1 formula', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'mathematical reviews', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'puzzle', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'associative array', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'shortest path problem', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'dynamic algorithm', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'augmented lagrangian method', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'charles delisi', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'greedy algorithm', {'weight': 0.6})
('push-relabel maximum flow algorithm', "karmarkar's algorithm", {'weight': 0.6})
('push-relabel maximum flow algorithm', 'lattice models', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'utility', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'push-relabel maximum flow algorithm', {'weight': 1})
('push-relabel maximum flow algorithm', 'international standard book number', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'undirected graph', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'scheme (programming language)', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'rna structure', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'hanoi', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'perl', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'digital object identifier', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'sequential quadratic programming', {'weight': 0.6})
('push-relabel maximum flow algorithm', "dinic's algorithm", {'weight': 0.6})
('push-relabel maximum flow algorithm', 'pseudo-polynomial time', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'partition problem', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'stochastic programming', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'hill climbing', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'top-down', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'de boor algorithm', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'optimization algorithm', {'weight': 0.6})
('push-relabel maximum flow algorithm', "kruskal's algorithm", {'weight': 0.6})
('push-relabel maximum flow algorithm', 'jacques philippe marie binet', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'tabu search', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'divide and conquer algorithm', {'weight': 0.6})
('push-relabel maximum flow algorithm', "johnson's algorithm", {'weight': 0.6})
('push-relabel maximum flow algorithm', 'evolutionary algorithm', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'clique-width', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'dynamic programming', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'subroutine', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'simulated annealing', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'tower of hanoi', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'branch and bound', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'engineering', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'matroid', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'viterbi algorithm', {'weight': 0.6})
('push-relabel maximum flow algorithm', "lemke's algorithm", {'weight': 0.6})
('push-relabel maximum flow algorithm', 'simplex algorithm', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'local search (optimization)', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'hessian matrix', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'ibm system r', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'penalty method', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'prolog', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'time-invariant system', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'criss-cross algorithm', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'revised simplex algorithm', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'the mathematical association of america', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'line search', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'j (programming language)', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'word wrap', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'subset sum problem', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'integer programming', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'nucleosome', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'earley algorithm', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'referential transparency (computer science)', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'recursion', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'mathematica', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'quicksort', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'recursion (computer science)', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'checkerboard', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'computer science', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'brute-force search', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'mathematics', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'depth-first search', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'top-down and bottom-up design', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'correspondence problem', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'transcription factor', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'tree decomposition', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'structural alignment', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'local convergence', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'knapsack problem', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'graph algorithm', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'hidden markov model', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'string (computer science)', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'bioinformatics', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'genetics', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'mathematical optimization', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'artificial neural networks', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'introduction to algorithms', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'thomas h. cormen', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'music information retrieval', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'beat (music)', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'longest common subsequence problem', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'convex minimization', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'successive parabolic interpolation', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'fibonacci sequence', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'maximum subarray problem', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'convex optimization', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'memoization', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'richard bellman', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'exponential growth', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'charles e. leiserson', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'charles erwin wilson', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'interval scheduling', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'chart parser', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'travelling salesman problem', {'weight': 0.6})
('push-relabel maximum flow algorithm', 'bellman equation', {'weight': 0.6})
('sequential quadratic programming', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('sequential quadratic programming', 'photoshop', {'weight': 0.6})
('sequential quadratic programming', 'sequence alignment', {'weight': 0.6})
('sequential quadratic programming', 'flow network', {'weight': 0.6})
('sequential quadratic programming', 'ellipsoid method', {'weight': 0.6})
('sequential quadratic programming', 'chain matrix multiplication', {'weight': 0.6})
('sequential quadratic programming', 'ieee', {'weight': 0.6})
('sequential quadratic programming', 'backtracking', {'weight': 0.6})
('sequential quadratic programming', 'nonlinear conjugate gradient method', {'weight': 0.6})
('sequential quadratic programming', 'dynamic problem', {'weight': 0.6})
('sequential quadratic programming', 'trust region', {'weight': 0.6})
('sequential quadratic programming', 'function (mathematics)', {'weight': 0.6})
('sequential quadratic programming', 'minimum spanning tree', {'weight': 0.6})
('sequential quadratic programming', 'context-free grammar', {'weight': 0.6})
('sequential quadratic programming', 'branch and cut', {'weight': 0.6})
('sequential quadratic programming', 'state variable', {'weight': 0.6})
('sequential quadratic programming', 'treewidth', {'weight': 0.6})
('sequential quadratic programming', 'optimization algorithms and methods', {'weight': 0.5})
('sequential quadratic programming', 'overlapping subproblem', {'weight': 0.6})
('sequential quadratic programming', 'taylor & francis', {'weight': 0.6})
('sequential quadratic programming', 'cutting-plane method', {'weight': 0.6})
('sequential quadratic programming', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('sequential quadratic programming', 'method of undetermined coefficients', {'weight': 0.6})
('sequential quadratic programming', 'combinatorial optimization', {'weight': 0.6})
('sequential quadratic programming', "newton's method in optimization", {'weight': 0.6})
('sequential quadratic programming', 'matrix chain multiplication', {'weight': 0.6})
('sequential quadratic programming', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('sequential quadratic programming', 'dynamic time warping', {'weight': 0.6})
('sequential quadratic programming', 'dynamic programming language', {'weight': 0.6})
('sequential quadratic programming', 'call-by-need', {'weight': 0.6})
('sequential quadratic programming', 'big-o notation', {'weight': 0.6})
('sequential quadratic programming', 'comparison of optimization software', {'weight': 0.6})
('sequential quadratic programming', 'quadratic programming', {'weight': 0.6})
('sequential quadratic programming', 'common lisp', {'weight': 0.6})
('sequential quadratic programming', 'barrier function', {'weight': 0.6})
('sequential quadratic programming', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('sequential quadratic programming', 'gradient descent', {'weight': 0.6})
('sequential quadratic programming', 'patricia selinger', {'weight': 0.6})
('sequential quadratic programming', 'discounting', {'weight': 0.6})
('sequential quadratic programming', 'ronald l. rivest', {'weight': 0.6})
('sequential quadratic programming', 'iterative method', {'weight': 0.6})
('sequential quadratic programming', 'limited-memory bfgs', {'weight': 0.6})
('sequential quadratic programming', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('sequential quadratic programming', 'longest common substring problem', {'weight': 0.6})
('sequential quadratic programming', 'clifford stein', {'weight': 0.6})
('sequential quadratic programming', 'computer chess', {'weight': 0.6})
('sequential quadratic programming', 'linear programming', {'weight': 0.6})
('sequential quadratic programming', 'bitonic tour', {'weight': 0.6})
('sequential quadratic programming', 'linear search problem', {'weight': 0.6})
('sequential quadratic programming', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('sequential quadratic programming', 'systems analysis', {'weight': 0.6})
('sequential quadratic programming', 'capital (economics)', {'weight': 0.6})
('sequential quadratic programming', 'levenshtein distance', {'weight': 0.6})
('sequential quadratic programming', 'applied mathematics stubs', {'weight': 0.5})
('sequential quadratic programming', 'nonlinear programming', {'weight': 0.6})
('sequential quadratic programming', 'computational complexity of mathematical operations', {'weight': 0.6})
('sequential quadratic programming', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('sequential quadratic programming', 'gradient', {'weight': 0.6})
('sequential quadratic programming', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('sequential quadratic programming', 'bulletin of the american mathematical society', {'weight': 0.6})
('sequential quadratic programming', 'u.s. english', {'weight': 0.6})
('sequential quadratic programming', 'refutation table', {'weight': 0.6})
('sequential quadratic programming', 'heuristic algorithm', {'weight': 0.6})
('sequential quadratic programming', 'successive linear programming', {'weight': 0.6})
('sequential quadratic programming', 'optimal substructure', {'weight': 0.6})
('sequential quadratic programming', 'programming language', {'weight': 0.6})
('sequential quadratic programming', 'mergesort', {'weight': 0.6})
('sequential quadratic programming', "dijkstra's algorithm", {'weight': 0.6})
('sequential quadratic programming', 'subgradient method', {'weight': 0.6})
('sequential quadratic programming', 'call-by-name', {'weight': 0.6})
('sequential quadratic programming', 'longest increasing subsequence problem', {'weight': 0.6})
('sequential quadratic programming', 'edward prescott', {'weight': 0.6})
('sequential quadratic programming', 'exponential time', {'weight': 0.6})
('sequential quadratic programming', 'principle of optimality', {'weight': 0.6})
('sequential quadratic programming', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('sequential quadratic programming', 'mathematical game', {'weight': 0.6})
('sequential quadratic programming', 'nancy stokey', {'weight': 0.6})
('sequential quadratic programming', 'approximation algorithm', {'weight': 0.6})
('sequential quadratic programming', 'discrete-time', {'weight': 0.6})
('sequential quadratic programming', 'cyk algorithm', {'weight': 0.6})
('sequential quadratic programming', 'markov decision process', {'weight': 0.6})
('sequential quadratic programming', "powell's method", {'weight': 0.6})
('sequential quadratic programming', 'wolfe conditions', {'weight': 0.6})
('sequential quadratic programming', 'convexity in economics', {'weight': 0.6})
('sequential quadratic programming', 'transposition table', {'weight': 0.6})
('sequential quadratic programming', 'economics', {'weight': 0.6})
('sequential quadratic programming', 'backward induction', {'weight': 0.6})
('sequential quadratic programming', 'golden section search', {'weight': 0.6})
('sequential quadratic programming', 'edit distance', {'weight': 0.6})
('sequential quadratic programming', 'tree structure', {'weight': 0.6})
('sequential quadratic programming', 'exchange algorithm', {'weight': 0.6})
('sequential quadratic programming', 'dover publications', {'weight': 0.6})
('sequential quadratic programming', 'seam carving', {'weight': 0.6})
('sequential quadratic programming', 'recursive least squares', {'weight': 0.6})
('sequential quadratic programming', 'metaheuristic', {'weight': 0.6})
('sequential quadratic programming', 'quasi-newton method', {'weight': 0.6})
('sequential quadratic programming', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('sequential quadratic programming', 'robert e. lucas', {'weight': 0.6})
('sequential quadratic programming', 'non-convexity (economics)', {'weight': 0.6})
('sequential quadratic programming', 'sr1 formula', {'weight': 0.6})
('sequential quadratic programming', 'mathematical reviews', {'weight': 0.6})
('sequential quadratic programming', 'puzzle', {'weight': 0.6})
('sequential quadratic programming', 'associative array', {'weight': 0.6})
('sequential quadratic programming', 'shortest path problem', {'weight': 0.6})
('sequential quadratic programming', 'dynamic algorithm', {'weight': 0.6})
('sequential quadratic programming', 'augmented lagrangian method', {'weight': 0.6})
('sequential quadratic programming', 'charles delisi', {'weight': 0.6})
('sequential quadratic programming', 'greedy algorithm', {'weight': 0.6})
('sequential quadratic programming', "karmarkar's algorithm", {'weight': 0.6})
('sequential quadratic programming', 'lattice models', {'weight': 0.6})
('sequential quadratic programming', 'utility', {'weight': 0.6})
('sequential quadratic programming', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('sequential quadratic programming', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('sequential quadratic programming', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('sequential quadratic programming', 'international standard book number', {'weight': 0.6})
('sequential quadratic programming', 'secant method', {'weight': 0.7})
('sequential quadratic programming', 'undirected graph', {'weight': 0.6})
('sequential quadratic programming', 'scheme (programming language)', {'weight': 0.6})
('sequential quadratic programming', 'rna structure', {'weight': 0.6})
('sequential quadratic programming', 'hanoi', {'weight': 0.6})
('sequential quadratic programming', 'perl', {'weight': 0.6})
('sequential quadratic programming', 'digital object identifier', {'weight': 0.6})
('sequential quadratic programming', 'sequential quadratic programming', {'weight': 1})
('sequential quadratic programming', "dinic's algorithm", {'weight': 0.6})
('sequential quadratic programming', 'pseudo-polynomial time', {'weight': 0.6})
('sequential quadratic programming', 'partition problem', {'weight': 0.6})
('sequential quadratic programming', 'stochastic programming', {'weight': 0.6})
('sequential quadratic programming', 'hill climbing', {'weight': 0.6})
('sequential quadratic programming', 'top-down', {'weight': 0.6})
('sequential quadratic programming', 'de boor algorithm', {'weight': 0.6})
('sequential quadratic programming', 'optimization algorithm', {'weight': 0.6})
('sequential quadratic programming', "kruskal's algorithm", {'weight': 0.6})
('sequential quadratic programming', 'jacques philippe marie binet', {'weight': 0.6})
('sequential quadratic programming', 'tabu search', {'weight': 0.6})
('sequential quadratic programming', 'divide and conquer algorithm', {'weight': 0.6})
('sequential quadratic programming', "johnson's algorithm", {'weight': 0.6})
('sequential quadratic programming', 'evolutionary algorithm', {'weight': 0.6})
('sequential quadratic programming', 'clique-width', {'weight': 0.6})
('sequential quadratic programming', 'dynamic programming', {'weight': 0.6})
('sequential quadratic programming', 'subroutine', {'weight': 0.6})
('sequential quadratic programming', "newton's method", {'weight': 0.7})
('sequential quadratic programming', 'simulated annealing', {'weight': 0.6})
('sequential quadratic programming', 'tower of hanoi', {'weight': 0.6})
('sequential quadratic programming', 'branch and bound', {'weight': 0.6})
('sequential quadratic programming', 'engineering', {'weight': 0.6})
('sequential quadratic programming', 'matroid', {'weight': 0.6})
('sequential quadratic programming', 'viterbi algorithm', {'weight': 0.6})
('sequential quadratic programming', "lemke's algorithm", {'weight': 0.6})
('sequential quadratic programming', 'simplex algorithm', {'weight': 0.6})
('sequential quadratic programming', 'local search (optimization)', {'weight': 0.6})
('sequential quadratic programming', 'hessian matrix', {'weight': 0.6})
('sequential quadratic programming', 'ibm system r', {'weight': 0.6})
('sequential quadratic programming', 'penalty method', {'weight': 0.6})
('sequential quadratic programming', 'prolog', {'weight': 0.6})
('sequential quadratic programming', 'time-invariant system', {'weight': 0.6})
('sequential quadratic programming', 'criss-cross algorithm', {'weight': 0.6})
('sequential quadratic programming', 'revised simplex algorithm', {'weight': 0.6})
('sequential quadratic programming', 'the mathematical association of america', {'weight': 0.6})
('sequential quadratic programming', 'line search', {'weight': 0.6})
('sequential quadratic programming', 'j (programming language)', {'weight': 0.6})
('sequential quadratic programming', 'word wrap', {'weight': 0.6})
('sequential quadratic programming', 'sequential linear programming', {'weight': 0.7})
('sequential quadratic programming', 'subset sum problem', {'weight': 0.6})
('sequential quadratic programming', 'integer programming', {'weight': 0.6})
('sequential quadratic programming', 'nucleosome', {'weight': 0.6})
('sequential quadratic programming', 'earley algorithm', {'weight': 0.6})
('sequential quadratic programming', 'referential transparency (computer science)', {'weight': 0.6})
('sequential quadratic programming', 'recursion', {'weight': 0.6})
('sequential quadratic programming', 'mathematica', {'weight': 0.6})
('sequential quadratic programming', 'quicksort', {'weight': 0.6})
('sequential quadratic programming', 'recursion (computer science)', {'weight': 0.6})
('sequential quadratic programming', 'checkerboard', {'weight': 0.6})
('sequential quadratic programming', 'computer science', {'weight': 0.6})
('sequential quadratic programming', 'brute-force search', {'weight': 0.6})
('sequential quadratic programming', 'mathematics', {'weight': 0.6})
('sequential quadratic programming', 'depth-first search', {'weight': 0.6})
('sequential quadratic programming', 'top-down and bottom-up design', {'weight': 0.6})
('sequential quadratic programming', 'correspondence problem', {'weight': 0.6})
('sequential quadratic programming', 'transcription factor', {'weight': 0.6})
('sequential quadratic programming', 'tree decomposition', {'weight': 0.6})
('sequential quadratic programming', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('sequential quadratic programming', 'structural alignment', {'weight': 0.6})
('sequential quadratic programming', 'local convergence', {'weight': 0.6})
('sequential quadratic programming', 'knapsack problem', {'weight': 0.6})
('sequential quadratic programming', 'graph algorithm', {'weight': 0.6})
('sequential quadratic programming', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('sequential quadratic programming', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('sequential quadratic programming', 'hidden markov model', {'weight': 0.6})
('sequential quadratic programming', 'string (computer science)', {'weight': 0.6})
('sequential quadratic programming', 'bioinformatics', {'weight': 0.6})
('sequential quadratic programming', 'genetics', {'weight': 0.6})
('sequential quadratic programming', 'mathematical optimization', {'weight': 0.6})
('sequential quadratic programming', 'artificial neural networks', {'weight': 0.6})
('sequential quadratic programming', 'introduction to algorithms', {'weight': 0.6})
('sequential quadratic programming', 'thomas h. cormen', {'weight': 0.6})
('sequential quadratic programming', 'music information retrieval', {'weight': 0.6})
('sequential quadratic programming', 'beat (music)', {'weight': 0.6})
('sequential quadratic programming', 'longest common subsequence problem', {'weight': 0.6})
('sequential quadratic programming', 'convex minimization', {'weight': 0.6})
('sequential quadratic programming', 'successive parabolic interpolation', {'weight': 0.6})
('sequential quadratic programming', 'fibonacci sequence', {'weight': 0.6})
('sequential quadratic programming', 'maximum subarray problem', {'weight': 0.6})
('sequential quadratic programming', 'convex optimization', {'weight': 0.6})
('sequential quadratic programming', 'memoization', {'weight': 0.6})
('sequential quadratic programming', 'richard bellman', {'weight': 0.6})
('sequential quadratic programming', 'exponential growth', {'weight': 0.6})
('sequential quadratic programming', 'charles e. leiserson', {'weight': 0.6})
('sequential quadratic programming', 'charles erwin wilson', {'weight': 0.6})
('sequential quadratic programming', 'interval scheduling', {'weight': 0.6})
('sequential quadratic programming', 'chart parser', {'weight': 0.6})
('sequential quadratic programming', 'travelling salesman problem', {'weight': 0.6})
('sequential quadratic programming', 'bellman equation', {'weight': 0.6})
('subroutine', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('subroutine', 'photoshop', {'weight': 0.6})
('subroutine', 'sequence alignment', {'weight': 0.6})
('subroutine', 'flow network', {'weight': 0.6})
('subroutine', 'modular programming', {'weight': 0.7})
('subroutine', 'ellipsoid method', {'weight': 0.6})
('subroutine', 'chain matrix multiplication', {'weight': 0.6})
('subroutine', 'ieee', {'weight': 0.6})
('subroutine', 'backtracking', {'weight': 0.6})
('subroutine', 'nonlinear conjugate gradient method', {'weight': 0.6})
('subroutine', 'dynamic problem', {'weight': 0.6})
('subroutine', 'subroutines', {'weight': 0.5})
('subroutine', 'function (mathematics)', {'weight': 0.7})
('subroutine', 'minimum spanning tree', {'weight': 0.6})
('subroutine', 'operator overloading', {'weight': 0.7})
('subroutine', 'context-free grammar', {'weight': 0.6})
('subroutine', 'branch and cut', {'weight': 0.6})
('subroutine', 'state variable', {'weight': 0.6})
('subroutine', 'treewidth', {'weight': 0.6})
('subroutine', 'overlapping subproblem', {'weight': 0.6})
('subroutine', 'taylor & francis', {'weight': 0.6})
('subroutine', 'cutting-plane method', {'weight': 0.6})
('subroutine', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('subroutine', 'method of undetermined coefficients', {'weight': 0.6})
('subroutine', 'combinatorial optimization', {'weight': 0.6})
('subroutine', "newton's method in optimization", {'weight': 0.6})
('subroutine', 'interrupt', {'weight': 0.7})
('subroutine', 'matrix chain multiplication', {'weight': 0.6})
('subroutine', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('subroutine', 'dynamic time warping', {'weight': 0.6})
('subroutine', 'dynamic programming language', {'weight': 0.6})
('subroutine', 'call-by-need', {'weight': 0.6})
('subroutine', 'big-o notation', {'weight': 0.6})
('subroutine', 'comparison of optimization software', {'weight': 0.6})
('subroutine', 'quadratic programming', {'weight': 0.6})
('subroutine', 'common lisp', {'weight': 0.6})
('subroutine', 'barrier function', {'weight': 0.6})
('subroutine', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('subroutine', 'gradient descent', {'weight': 0.6})
('subroutine', 'patricia selinger', {'weight': 0.6})
('subroutine', 'discounting', {'weight': 0.6})
('subroutine', 'ronald l. rivest', {'weight': 0.6})
('subroutine', 'iterative method', {'weight': 0.6})
('subroutine', 'limited-memory bfgs', {'weight': 0.6})
('subroutine', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('subroutine', 'longest common substring problem', {'weight': 0.6})
('subroutine', 'clifford stein', {'weight': 0.6})
('subroutine', 'mergesort', {'weight': 0.6})
('subroutine', 'linear programming', {'weight': 0.6})
('subroutine', 'bitonic tour', {'weight': 0.6})
('subroutine', 'linear search problem', {'weight': 0.6})
('subroutine', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('subroutine', 'systems analysis', {'weight': 0.6})
('subroutine', 'event handler', {'weight': 0.7})
('subroutine', 'capital (economics)', {'weight': 0.6})
('subroutine', 'successive linear programming', {'weight': 0.6})
('subroutine', 'levenshtein distance', {'weight': 0.6})
('subroutine', 'nonlinear programming', {'weight': 0.6})
('subroutine', 'transclusion', {'weight': 0.7})
('subroutine', 'genetics', {'weight': 0.6})
('subroutine', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('subroutine', 'gradient', {'weight': 0.6})
('subroutine', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('subroutine', 'command-query separation', {'weight': 0.7})
('subroutine', 'bulletin of the american mathematical society', {'weight': 0.6})
('subroutine', 'u.s. english', {'weight': 0.6})
('subroutine', 'refutation table', {'weight': 0.6})
('subroutine', 'heuristic algorithm', {'weight': 0.6})
('subroutine', 'computer chess', {'weight': 0.6})
('subroutine', 'optimal substructure', {'weight': 0.6})
('subroutine', 'programming language', {'weight': 0.6})
('subroutine', 'source code', {'weight': 0.5})
('subroutine', "dijkstra's algorithm", {'weight': 0.6})
('subroutine', 'subgradient method', {'weight': 0.6})
('subroutine', 'call-by-name', {'weight': 0.6})
('subroutine', 'longest increasing subsequence problem', {'weight': 0.6})
('subroutine', 'edward prescott', {'weight': 0.6})
('subroutine', 'exponential time', {'weight': 0.6})
('subroutine', 'principle of optimality', {'weight': 0.6})
('subroutine', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('subroutine', 'mathematical game', {'weight': 0.6})
('subroutine', 'nancy stokey', {'weight': 0.6})
('subroutine', 'approximation algorithm', {'weight': 0.6})
('subroutine', 'discrete-time', {'weight': 0.6})
('subroutine', 'cyk algorithm', {'weight': 0.6})
('subroutine', 'markov decision process', {'weight': 0.6})
('subroutine', 'trust region', {'weight': 0.6})
('subroutine', "powell's method", {'weight': 0.6})
('subroutine', 'wolfe conditions', {'weight': 0.6})
('subroutine', 'convexity in economics', {'weight': 0.6})
('subroutine', 'transposition table', {'weight': 0.6})
('subroutine', 'economics', {'weight': 0.6})
('subroutine', 'backward induction', {'weight': 0.6})
('subroutine', 'programming constructs', {'weight': 0.5})
('subroutine', 'golden section search', {'weight': 0.6})
('subroutine', 'edit distance', {'weight': 0.6})
('subroutine', 'tree structure', {'weight': 0.6})
('subroutine', 'exchange algorithm', {'weight': 0.6})
('subroutine', 'evaluation strategy', {'weight': 0.7})
('subroutine', 'dover publications', {'weight': 0.6})
('subroutine', 'seam carving', {'weight': 0.6})
('subroutine', 'recursive least squares', {'weight': 0.6})
('subroutine', 'metaheuristic', {'weight': 0.6})
('subroutine', 'quasi-newton method', {'weight': 0.6})
('subroutine', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('subroutine', 'robert e. lucas', {'weight': 0.6})
('subroutine', 'non-convexity (economics)', {'weight': 0.6})
('subroutine', 'sr1 formula', {'weight': 0.6})
('subroutine', 'mathematical reviews', {'weight': 0.6})
('subroutine', 'puzzle', {'weight': 0.6})
('subroutine', 'associative array', {'weight': 0.6})
('subroutine', 'shortest path problem', {'weight': 0.6})
('subroutine', 'dynamic algorithm', {'weight': 0.6})
('subroutine', 'coroutines', {'weight': 0.7})
('subroutine', 'augmented lagrangian method', {'weight': 0.6})
('subroutine', 'charles delisi', {'weight': 0.6})
('subroutine', 'greedy algorithm', {'weight': 0.6})
('subroutine', "karmarkar's algorithm", {'weight': 0.6})
('subroutine', 'lattice models', {'weight': 0.6})
('subroutine', 'utility', {'weight': 0.6})
('subroutine', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('subroutine', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('subroutine', 'holism', {'weight': 0.5})
('subroutine', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('subroutine', 'international standard book number', {'weight': 0.6})
('subroutine', 'undirected graph', {'weight': 0.6})
('subroutine', 'scheme (programming language)', {'weight': 0.6})
('subroutine', 'rna structure', {'weight': 0.6})
('subroutine', 'hanoi', {'weight': 0.6})
('subroutine', 'perl', {'weight': 0.6})
('subroutine', 'digital object identifier', {'weight': 0.6})
('subroutine', 'sequential quadratic programming', {'weight': 0.6})
('subroutine', "dinic's algorithm", {'weight': 0.6})
('subroutine', 'pseudo-polynomial time', {'weight': 0.6})
('subroutine', 'partition problem', {'weight': 0.6})
('subroutine', 'stochastic programming', {'weight': 0.6})
('subroutine', 'computational complexity of mathematical operations', {'weight': 0.6})
('subroutine', 'top-down', {'weight': 0.6})
('subroutine', 'de boor algorithm', {'weight': 0.6})
('subroutine', 'optimization algorithm', {'weight': 0.6})
('subroutine', "kruskal's algorithm", {'weight': 0.6})
('subroutine', 'jacques philippe marie binet', {'weight': 0.6})
('subroutine', 'tabu search', {'weight': 0.6})
('subroutine', 'divide and conquer algorithm', {'weight': 0.6})
('subroutine', "johnson's algorithm", {'weight': 0.6})
('subroutine', 'evolutionary algorithm', {'weight': 0.6})
('subroutine', 'clique-width', {'weight': 0.6})
('subroutine', 'dynamic programming', {'weight': 0.6})
('subroutine', 'subroutine', {'weight': 1})
('subroutine', 'simulated annealing', {'weight': 0.6})
('subroutine', 'tower of hanoi', {'weight': 0.6})
('subroutine', 'functional programming', {'weight': 0.7})
('subroutine', 'branch and bound', {'weight': 0.6})
('subroutine', 'engineering', {'weight': 0.6})
('subroutine', 'matroid', {'weight': 0.6})
('subroutine', 'viterbi algorithm', {'weight': 0.6})
('subroutine', "lemke's algorithm", {'weight': 0.6})
('subroutine', 'simplex algorithm', {'weight': 0.6})
('subroutine', 'local search (optimization)', {'weight': 0.6})
('subroutine', 'hessian matrix', {'weight': 0.6})
('subroutine', 'ibm system r', {'weight': 0.6})
('subroutine', 'penalty method', {'weight': 0.6})
('subroutine', 'prolog', {'weight': 0.6})
('subroutine', 'time-invariant system', {'weight': 0.6})
('subroutine', 'criss-cross algorithm', {'weight': 0.6})
('subroutine', 'revised simplex algorithm', {'weight': 0.6})
('subroutine', 'the mathematical association of america', {'weight': 0.6})
('subroutine', 'line search', {'weight': 0.6})
('subroutine', 'j (programming language)', {'weight': 0.6})
('subroutine', 'hill climbing', {'weight': 0.6})
('subroutine', 'word wrap', {'weight': 0.6})
('subroutine', 'subset sum problem', {'weight': 0.6})
('subroutine', 'integer programming', {'weight': 0.6})
('subroutine', 'nucleosome', {'weight': 0.6})
('subroutine', 'earley algorithm', {'weight': 0.6})
('subroutine', 'referential transparency (computer science)', {'weight': 0.6})
('subroutine', 'recursion', {'weight': 0.6})
('subroutine', 'mathematica', {'weight': 0.6})
('subroutine', 'quicksort', {'weight': 0.6})
('subroutine', 'recursion (computer science)', {'weight': 0.6})
('subroutine', 'checkerboard', {'weight': 0.6})
('subroutine', 'computer science', {'weight': 0.6})
('subroutine', 'brute-force search', {'weight': 0.6})
('subroutine', 'mathematics', {'weight': 0.6})
('subroutine', 'depth-first search', {'weight': 0.6})
('subroutine', 'top-down and bottom-up design', {'weight': 0.6})
('subroutine', 'correspondence problem', {'weight': 0.6})
('subroutine', 'transcription factor', {'weight': 0.6})
('subroutine', 'tree decomposition', {'weight': 0.6})
('subroutine', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('subroutine', 'structural alignment', {'weight': 0.6})
('subroutine', 'local convergence', {'weight': 0.6})
('subroutine', 'knapsack problem', {'weight': 0.6})
('subroutine', 'graph algorithm', {'weight': 0.6})
('subroutine', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('subroutine', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('subroutine', 'hidden markov model', {'weight': 0.6})
('subroutine', 'string (computer science)', {'weight': 0.6})
('subroutine', 'bioinformatics', {'weight': 0.6})
('subroutine', 'university of cambridge computer laboratory', {'weight': 0.5})
('subroutine', 'mathematical optimization', {'weight': 0.6})
('subroutine', 'artificial neural networks', {'weight': 0.6})
('subroutine', 'introduction to algorithms', {'weight': 0.6})
('subroutine', 'thomas h. cormen', {'weight': 0.6})
('subroutine', 'music information retrieval', {'weight': 0.6})
('subroutine', 'beat (music)', {'weight': 0.6})
('subroutine', 'longest common subsequence problem', {'weight': 0.6})
('subroutine', 'convex minimization', {'weight': 0.6})
('subroutine', 'successive parabolic interpolation', {'weight': 0.6})
('subroutine', 'fibonacci sequence', {'weight': 0.6})
('subroutine', 'maximum subarray problem', {'weight': 0.6})
('subroutine', 'convex optimization', {'weight': 0.6})
('subroutine', 'memoization', {'weight': 0.6})
('subroutine', 'richard bellman', {'weight': 0.6})
('subroutine', 'exponential growth', {'weight': 0.6})
('subroutine', 'charles e. leiserson', {'weight': 0.6})
('subroutine', 'charles erwin wilson', {'weight': 0.6})
('subroutine', 'interval scheduling', {'weight': 0.6})
('subroutine', 'chart parser', {'weight': 0.6})
('subroutine', 'travelling salesman problem', {'weight': 0.6})
('subroutine', 'bellman equation', {'weight': 0.6})
('subroutine', 'method (computer programming)', {'weight': 0.7})
('function (mathematics)', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('function (mathematics)', 'photoshop', {'weight': 0.6})
('function (mathematics)', 'sequence alignment', {'weight': 0.6})
('function (mathematics)', 'flow network', {'weight': 0.6})
('function (mathematics)', 'functional predicate', {'weight': 0.7})
('function (mathematics)', 'ellipsoid method', {'weight': 0.6})
('function (mathematics)', 'chain matrix multiplication', {'weight': 0.6})
('function (mathematics)', 'ieee', {'weight': 0.6})
('function (mathematics)', 'backtracking', {'weight': 0.6})
('function (mathematics)', 'nonlinear conjugate gradient method', {'weight': 0.6})
('function (mathematics)', 'dynamic problem', {'weight': 0.6})
('function (mathematics)', 'trust region', {'weight': 0.6})
('function (mathematics)', 'function (mathematics)', {'weight': 1})
('function (mathematics)', 'minimum spanning tree', {'weight': 0.6})
('function (mathematics)', 'context-free grammar', {'weight': 0.6})
('function (mathematics)', 'branch and cut', {'weight': 0.6})
('function (mathematics)', 'state variable', {'weight': 0.6})
('function (mathematics)', 'treewidth', {'weight': 0.6})
('function (mathematics)', 'overlapping subproblem', {'weight': 0.6})
('function (mathematics)', 'taylor & francis', {'weight': 0.6})
('function (mathematics)', 'cutting-plane method', {'weight': 0.6})
('function (mathematics)', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('function (mathematics)', 'method of undetermined coefficients', {'weight': 0.6})
('function (mathematics)', 'combinatorial optimization', {'weight': 0.6})
('function (mathematics)', "newton's method in optimization", {'weight': 0.6})
('function (mathematics)', 'matrix chain multiplication', {'weight': 0.6})
('function (mathematics)', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('function (mathematics)', 'dynamic time warping', {'weight': 0.6})
('function (mathematics)', 'dynamic programming language', {'weight': 0.6})
('function (mathematics)', 'call-by-need', {'weight': 0.6})
('function (mathematics)', 'big-o notation', {'weight': 0.6})
('function (mathematics)', 'comparison of optimization software', {'weight': 0.6})
('function (mathematics)', 'quadratic programming', {'weight': 0.6})
('function (mathematics)', 'common lisp', {'weight': 0.6})
('function (mathematics)', 'barrier function', {'weight': 0.6})
('function (mathematics)', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('function (mathematics)', 'gradient descent', {'weight': 0.6})
('function (mathematics)', 'patricia selinger', {'weight': 0.6})
('function (mathematics)', 'discounting', {'weight': 0.6})
('function (mathematics)', 'ronald l. rivest', {'weight': 0.6})
('function (mathematics)', 'iterative method', {'weight': 0.6})
('function (mathematics)', 'limited-memory bfgs', {'weight': 0.6})
('function (mathematics)', 'parametric equation', {'weight': 0.7})
('function (mathematics)', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('function (mathematics)', 'longest common substring problem', {'weight': 0.6})
('function (mathematics)', 'clifford stein', {'weight': 0.6})
('function (mathematics)', 'computer chess', {'weight': 0.6})
('function (mathematics)', 'linear programming', {'weight': 0.6})
('function (mathematics)', 'bitonic tour', {'weight': 0.6})
('function (mathematics)', 'linear search problem', {'weight': 0.6})
('function (mathematics)', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('function (mathematics)', 'systems analysis', {'weight': 0.6})
('function (mathematics)', 'capital (economics)', {'weight': 0.6})
('function (mathematics)', 'list of functions', {'weight': 0.7})
('function (mathematics)', 'levenshtein distance', {'weight': 0.6})
('function (mathematics)', 'nonlinear programming', {'weight': 0.6})
('function (mathematics)', 'basic concepts in set theory', {'weight': 0.5})
('function (mathematics)', 'computational complexity of mathematical operations', {'weight': 0.6})
('function (mathematics)', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('function (mathematics)', 'gradient', {'weight': 0.6})
('function (mathematics)', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('function (mathematics)', 'generalized function', {'weight': 0.7})
('function (mathematics)', 'bulletin of the american mathematical society', {'weight': 0.6})
('function (mathematics)', 'u.s. english', {'weight': 0.6})
('function (mathematics)', 'refutation table', {'weight': 0.6})
('function (mathematics)', 'heuristic algorithm', {'weight': 0.6})
('function (mathematics)', 'successive linear programming', {'weight': 0.6})
('function (mathematics)', 'optimal substructure', {'weight': 0.6})
('function (mathematics)', 'implicit function', {'weight': 0.7})
('function (mathematics)', 'programming language', {'weight': 0.6})
('function (mathematics)', 'mergesort', {'weight': 0.6})
('function (mathematics)', "dijkstra's algorithm", {'weight': 0.6})
('function (mathematics)', 'subgradient method', {'weight': 0.6})
('function (mathematics)', 'call-by-name', {'weight': 0.6})
('function (mathematics)', 'longest increasing subsequence problem', {'weight': 0.6})
('function (mathematics)', 'edward prescott', {'weight': 0.6})
('function (mathematics)', 'exponential time', {'weight': 0.6})
('function (mathematics)', 'functions and mappings', {'weight': 0.5})
('function (mathematics)', 'principle of optimality', {'weight': 0.6})
('function (mathematics)', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('function (mathematics)', 'mathematical game', {'weight': 0.6})
('function (mathematics)', 'nancy stokey', {'weight': 0.6})
('function (mathematics)', 'approximation algorithm', {'weight': 0.6})
('function (mathematics)', 'discrete-time', {'weight': 0.6})
('function (mathematics)', 'cyk algorithm', {'weight': 0.6})
('function (mathematics)', 'markov decision process', {'weight': 0.6})
('function (mathematics)', "powell's method", {'weight': 0.6})
('function (mathematics)', 'wolfe conditions', {'weight': 0.6})
('function (mathematics)', 'convexity in economics', {'weight': 0.6})
('function (mathematics)', 'transposition table', {'weight': 0.6})
('function (mathematics)', 'economics', {'weight': 0.6})
('function (mathematics)', 'backward induction', {'weight': 0.6})
('function (mathematics)', 'golden section search', {'weight': 0.6})
('function (mathematics)', 'edit distance', {'weight': 0.6})
('function (mathematics)', 'tree structure', {'weight': 0.6})
('function (mathematics)', 'functional decomposition', {'weight': 0.7})
('function (mathematics)', 'exchange algorithm', {'weight': 0.6})
('function (mathematics)', 'dover publications', {'weight': 0.6})
('function (mathematics)', 'seam carving', {'weight': 0.6})
('function (mathematics)', 'recursive least squares', {'weight': 0.6})
('function (mathematics)', 'metaheuristic', {'weight': 0.6})
('function (mathematics)', 'quasi-newton method', {'weight': 0.6})
('function (mathematics)', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('function (mathematics)', 'robert e. lucas', {'weight': 0.6})
('function (mathematics)', 'non-convexity (economics)', {'weight': 0.6})
('function (mathematics)', 'sr1 formula', {'weight': 0.6})
('function (mathematics)', 'mathematical reviews', {'weight': 0.6})
('function (mathematics)', 'puzzle', {'weight': 0.6})
('function (mathematics)', 'associative array', {'weight': 0.7})
('function (mathematics)', 'functional', {'weight': 0.7})
('function (mathematics)', 'shortest path problem', {'weight': 0.6})
('function (mathematics)', 'dynamic algorithm', {'weight': 0.6})
('function (mathematics)', 'augmented lagrangian method', {'weight': 0.6})
('function (mathematics)', 'charles delisi', {'weight': 0.6})
('function (mathematics)', 'greedy algorithm', {'weight': 0.6})
('function (mathematics)', "karmarkar's algorithm", {'weight': 0.6})
('function (mathematics)', 'lattice models', {'weight': 0.6})
('function (mathematics)', 'utility', {'weight': 0.6})
('function (mathematics)', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('function (mathematics)', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('function (mathematics)', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('function (mathematics)', 'international standard book number', {'weight': 0.6})
('function (mathematics)', 'undirected graph', {'weight': 0.6})
('function (mathematics)', 'scheme (programming language)', {'weight': 0.6})
('function (mathematics)', 'rna structure', {'weight': 0.6})
('function (mathematics)', 'hanoi', {'weight': 0.6})
('function (mathematics)', 'perl', {'weight': 0.6})
('function (mathematics)', 'digital object identifier', {'weight': 0.6})
('function (mathematics)', 'sequential quadratic programming', {'weight': 0.6})
('function (mathematics)', "dinic's algorithm", {'weight': 0.6})
('function (mathematics)', 'pseudo-polynomial time', {'weight': 0.6})
('function (mathematics)', 'partition problem', {'weight': 0.6})
('function (mathematics)', 'stochastic programming', {'weight': 0.6})
('function (mathematics)', 'hill climbing', {'weight': 0.6})
('function (mathematics)', 'top-down', {'weight': 0.6})
('function (mathematics)', 'de boor algorithm', {'weight': 0.6})
('function (mathematics)', 'optimization algorithm', {'weight': 0.6})
('function (mathematics)', "kruskal's algorithm", {'weight': 0.6})
('function (mathematics)', 'multivalued function', {'weight': 0.7})
('function (mathematics)', 'jacques philippe marie binet', {'weight': 0.6})
('function (mathematics)', 'tabu search', {'weight': 0.6})
('function (mathematics)', 'divide and conquer algorithm', {'weight': 0.6})
('function (mathematics)', "johnson's algorithm", {'weight': 0.6})
('function (mathematics)', 'evolutionary algorithm', {'weight': 0.6})
('function (mathematics)', 'clique-width', {'weight': 0.6})
('function (mathematics)', 'dynamic programming', {'weight': 0.6})
('function (mathematics)', 'subroutine', {'weight': 0.6})
('function (mathematics)', 'simulated annealing', {'weight': 0.6})
('function (mathematics)', 'tower of hanoi', {'weight': 0.6})
('function (mathematics)', 'functional programming', {'weight': 0.7})
('function (mathematics)', 'branch and bound', {'weight': 0.6})
('function (mathematics)', 'engineering', {'weight': 0.6})
('function (mathematics)', 'matroid', {'weight': 0.6})
('function (mathematics)', 'viterbi algorithm', {'weight': 0.6})
('function (mathematics)', "lemke's algorithm", {'weight': 0.6})
('function (mathematics)', 'simplex algorithm', {'weight': 0.6})
('function (mathematics)', 'local search (optimization)', {'weight': 0.6})
('function (mathematics)', 'hessian matrix', {'weight': 0.6})
('function (mathematics)', 'ibm system r', {'weight': 0.6})
('function (mathematics)', 'penalty method', {'weight': 0.6})
('function (mathematics)', 'prolog', {'weight': 0.6})
('function (mathematics)', 'time-invariant system', {'weight': 0.6})
('function (mathematics)', 'criss-cross algorithm', {'weight': 0.6})
('function (mathematics)', 'revised simplex algorithm', {'weight': 0.6})
('function (mathematics)', 'the mathematical association of america', {'weight': 0.6})
('function (mathematics)', 'line search', {'weight': 0.6})
('function (mathematics)', 'j (programming language)', {'weight': 0.6})
('function (mathematics)', 'word wrap', {'weight': 0.6})
('function (mathematics)', 'subset sum problem', {'weight': 0.6})
('function (mathematics)', 'integer programming', {'weight': 0.6})
('function (mathematics)', 'nucleosome', {'weight': 0.6})
('function (mathematics)', 'earley algorithm', {'weight': 0.6})
('function (mathematics)', 'referential transparency (computer science)', {'weight': 0.6})
('function (mathematics)', 'recursion', {'weight': 0.6})
('function (mathematics)', 'mathematica', {'weight': 0.6})
('function (mathematics)', 'quicksort', {'weight': 0.6})
('function (mathematics)', 'recursion (computer science)', {'weight': 0.6})
('function (mathematics)', 'checkerboard', {'weight': 0.6})
('function (mathematics)', 'computer science', {'weight': 0.6})
('function (mathematics)', 'brute-force search', {'weight': 0.6})
('function (mathematics)', 'mathematics', {'weight': 0.6})
('function (mathematics)', 'depth-first search', {'weight': 0.6})
('function (mathematics)', 'top-down and bottom-up design', {'weight': 0.6})
('function (mathematics)', 'correspondence problem', {'weight': 0.6})
('function (mathematics)', 'transcription factor', {'weight': 0.6})
('function (mathematics)', 'tree decomposition', {'weight': 0.6})
('function (mathematics)', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('function (mathematics)', 'structural alignment', {'weight': 0.6})
('function (mathematics)', 'local convergence', {'weight': 0.6})
('function (mathematics)', 'knapsack problem', {'weight': 0.6})
('function (mathematics)', 'graph algorithm', {'weight': 0.6})
('function (mathematics)', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('function (mathematics)', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('function (mathematics)', 'hidden markov model', {'weight': 0.6})
('function (mathematics)', 'string (computer science)', {'weight': 0.6})
('function (mathematics)', 'bioinformatics', {'weight': 0.6})
('function (mathematics)', 'genetics', {'weight': 0.6})
('function (mathematics)', 'mathematical optimization', {'weight': 0.6})
('function (mathematics)', 'artificial neural networks', {'weight': 0.6})
('function (mathematics)', 'introduction to algorithms', {'weight': 0.6})
('function (mathematics)', 'thomas h. cormen', {'weight': 0.6})
('function (mathematics)', 'music information retrieval', {'weight': 0.6})
('function (mathematics)', 'travelling salesman problem', {'weight': 0.6})
('function (mathematics)', 'beat (music)', {'weight': 0.6})
('function (mathematics)', 'longest common subsequence problem', {'weight': 0.6})
('function (mathematics)', 'convex minimization', {'weight': 0.6})
('function (mathematics)', 'successive parabolic interpolation', {'weight': 0.6})
('function (mathematics)', 'fibonacci sequence', {'weight': 0.6})
('function (mathematics)', 'maximum subarray problem', {'weight': 0.6})
('function (mathematics)', 'convex optimization', {'weight': 0.6})
('function (mathematics)', 'memoization', {'weight': 0.6})
('function (mathematics)', 'richard bellman', {'weight': 0.6})
('function (mathematics)', 'exponential growth', {'weight': 0.6})
('function (mathematics)', 'charles e. leiserson', {'weight': 0.6})
('function (mathematics)', 'charles erwin wilson', {'weight': 0.6})
('function (mathematics)', 'interval scheduling', {'weight': 0.6})
('function (mathematics)', 'chart parser', {'weight': 0.6})
('function (mathematics)', 'elementary mathematics', {'weight': 0.5})
('function (mathematics)', 'bellman equation', {'weight': 0.6})
('viterbi algorithm', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('viterbi algorithm', 'photoshop', {'weight': 0.6})
('viterbi algorithm', 'sequence alignment', {'weight': 0.6})
('viterbi algorithm', 'flow network', {'weight': 0.6})
('viterbi algorithm', 'baum\xe2\x80\x93welch algorithm', {'weight': 0.7})
('viterbi algorithm', 'error-correcting code', {'weight': 0.7})
('viterbi algorithm', 'ellipsoid method', {'weight': 0.6})
('viterbi algorithm', 'chain matrix multiplication', {'weight': 0.6})
('viterbi algorithm', 'ieee', {'weight': 0.6})
('viterbi algorithm', 'backtracking', {'weight': 0.6})
('viterbi algorithm', 'nonlinear conjugate gradient method', {'weight': 0.6})
('viterbi algorithm', 'dynamic problem', {'weight': 0.6})
('viterbi algorithm', 'trust region', {'weight': 0.6})
('viterbi algorithm', 'function (mathematics)', {'weight': 0.6})
('viterbi algorithm', 'minimum spanning tree', {'weight': 0.6})
('viterbi algorithm', 'context-free grammar', {'weight': 0.6})
('viterbi algorithm', 'branch and cut', {'weight': 0.6})
('viterbi algorithm', 'state variable', {'weight': 0.6})
('viterbi algorithm', 'treewidth', {'weight': 0.6})
('viterbi algorithm', 'overlapping subproblem', {'weight': 0.6})
('viterbi algorithm', 'taylor & francis', {'weight': 0.6})
('viterbi algorithm', 'expectation\xe2\x80\x93maximization algorithm', {'weight': 0.7})
('viterbi algorithm', 'cutting-plane method', {'weight': 0.6})
('viterbi algorithm', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('viterbi algorithm', 'method of undetermined coefficients', {'weight': 0.6})
('viterbi algorithm', 'combinatorial optimization', {'weight': 0.6})
('viterbi algorithm', "newton's method in optimization", {'weight': 0.6})
('viterbi algorithm', 'matrix chain multiplication', {'weight': 0.6})
('viterbi algorithm', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('viterbi algorithm', 'dynamic time warping', {'weight': 0.6})
('viterbi algorithm', 'dynamic programming language', {'weight': 0.6})
('viterbi algorithm', 'call-by-need', {'weight': 0.6})
('viterbi algorithm', 'big-o notation', {'weight': 0.6})
('viterbi algorithm', 'comparison of optimization software', {'weight': 0.6})
('viterbi algorithm', 'quadratic programming', {'weight': 0.6})
('viterbi algorithm', 'common lisp', {'weight': 0.6})
('viterbi algorithm', 'barrier function', {'weight': 0.6})
('viterbi algorithm', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('viterbi algorithm', 'gradient descent', {'weight': 0.6})
('viterbi algorithm', 'patricia selinger', {'weight': 0.6})
('viterbi algorithm', 'discounting', {'weight': 0.6})
('viterbi algorithm', 'ronald l. rivest', {'weight': 0.6})
('viterbi algorithm', 'iterative method', {'weight': 0.6})
('viterbi algorithm', 'limited-memory bfgs', {'weight': 0.6})
('viterbi algorithm', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('viterbi algorithm', 'longest common substring problem', {'weight': 0.6})
('viterbi algorithm', 'clifford stein', {'weight': 0.6})
('viterbi algorithm', 'computer chess', {'weight': 0.6})
('viterbi algorithm', 'linear programming', {'weight': 0.6})
('viterbi algorithm', 'bitonic tour', {'weight': 0.6})
('viterbi algorithm', 'linear search problem', {'weight': 0.6})
('viterbi algorithm', 'error detection and correction', {'weight': 0.5})
('viterbi algorithm', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('viterbi algorithm', 'systems analysis', {'weight': 0.6})
('viterbi algorithm', 'capital (economics)', {'weight': 0.6})
('viterbi algorithm', 'levenshtein distance', {'weight': 0.6})
('viterbi algorithm', 'nonlinear programming', {'weight': 0.6})
('viterbi algorithm', 'computational complexity of mathematical operations', {'weight': 0.6})
('viterbi algorithm', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('viterbi algorithm', 'gradient', {'weight': 0.6})
('viterbi algorithm', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('viterbi algorithm', 'bulletin of the american mathematical society', {'weight': 0.6})
('viterbi algorithm', 'u.s. english', {'weight': 0.6})
('viterbi algorithm', 'refutation table', {'weight': 0.6})
('viterbi algorithm', 'heuristic algorithm', {'weight': 0.6})
('viterbi algorithm', 'successive linear programming', {'weight': 0.6})
('viterbi algorithm', 'optimal substructure', {'weight': 0.6})
('viterbi algorithm', 'programming language', {'weight': 0.6})
('viterbi algorithm', 'mergesort', {'weight': 0.6})
('viterbi algorithm', "dijkstra's algorithm", {'weight': 0.6})
('viterbi algorithm', 'subgradient method', {'weight': 0.6})
('viterbi algorithm', 'call-by-name', {'weight': 0.6})
('viterbi algorithm', 'longest increasing subsequence problem', {'weight': 0.6})
('viterbi algorithm', 'edward prescott', {'weight': 0.6})
('viterbi algorithm', 'exponential time', {'weight': 0.6})
('viterbi algorithm', 'principle of optimality', {'weight': 0.6})
('viterbi algorithm', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('viterbi algorithm', 'soft output viterbi algorithm', {'weight': 0.7})
('viterbi algorithm', 'mathematical game', {'weight': 0.6})
('viterbi algorithm', 'nancy stokey', {'weight': 0.6})
('viterbi algorithm', 'approximation algorithm', {'weight': 0.6})
('viterbi algorithm', 'discrete-time', {'weight': 0.6})
('viterbi algorithm', 'cyk algorithm', {'weight': 0.6})
('viterbi algorithm', 'markov decision process', {'weight': 0.6})
('viterbi algorithm', "powell's method", {'weight': 0.6})
('viterbi algorithm', 'wolfe conditions', {'weight': 0.6})
('viterbi algorithm', 'convexity in economics', {'weight': 0.6})
('viterbi algorithm', 'transposition table', {'weight': 0.6})
('viterbi algorithm', 'economics', {'weight': 0.6})
('viterbi algorithm', 'backward induction', {'weight': 0.6})
('viterbi algorithm', 'golden section search', {'weight': 0.6})
('viterbi algorithm', 'edit distance', {'weight': 0.6})
('viterbi algorithm', 'tree structure', {'weight': 0.6})
('viterbi algorithm', 'forward-backward algorithm', {'weight': 0.7})
('viterbi algorithm', 'exchange algorithm', {'weight': 0.6})
('viterbi algorithm', 'dover publications', {'weight': 0.6})
('viterbi algorithm', 'seam carving', {'weight': 0.6})
('viterbi algorithm', 'recursive least squares', {'weight': 0.6})
('viterbi algorithm', 'metaheuristic', {'weight': 0.6})
('viterbi algorithm', 'quasi-newton method', {'weight': 0.6})
('viterbi algorithm', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('viterbi algorithm', 'robert e. lucas', {'weight': 0.6})
('viterbi algorithm', 'non-convexity (economics)', {'weight': 0.6})
('viterbi algorithm', 'sr1 formula', {'weight': 0.6})
('viterbi algorithm', 'mathematical reviews', {'weight': 0.6})
('viterbi algorithm', 'puzzle', {'weight': 0.6})
('viterbi algorithm', 'associative array', {'weight': 0.6})
('viterbi algorithm', 'shortest path problem', {'weight': 0.6})
('viterbi algorithm', 'dynamic algorithm', {'weight': 0.6})
('viterbi algorithm', 'augmented lagrangian method', {'weight': 0.6})
('viterbi algorithm', 'charles delisi', {'weight': 0.6})
('viterbi algorithm', 'greedy algorithm', {'weight': 0.6})
('viterbi algorithm', "karmarkar's algorithm", {'weight': 0.6})
('viterbi algorithm', 'lattice models', {'weight': 0.6})
('viterbi algorithm', 'utility', {'weight': 0.6})
('viterbi algorithm', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('viterbi algorithm', 'part-of-speech tagging', {'weight': 0.7})
('viterbi algorithm', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('viterbi algorithm', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('viterbi algorithm', 'international standard book number', {'weight': 0.6})
('viterbi algorithm', 'undirected graph', {'weight': 0.6})
('viterbi algorithm', 'scheme (programming language)', {'weight': 0.6})
('viterbi algorithm', 'rna structure', {'weight': 0.6})
('viterbi algorithm', 'hanoi', {'weight': 0.6})
('viterbi algorithm', 'perl', {'weight': 0.6})
('viterbi algorithm', 'digital object identifier', {'weight': 0.6})
('viterbi algorithm', 'sequential quadratic programming', {'weight': 0.6})
('viterbi algorithm', "dinic's algorithm", {'weight': 0.6})
('viterbi algorithm', 'pseudo-polynomial time', {'weight': 0.6})
('viterbi algorithm', 'partition problem', {'weight': 0.6})
('viterbi algorithm', 'stochastic programming', {'weight': 0.6})
('viterbi algorithm', 'hill climbing', {'weight': 0.6})
('viterbi algorithm', 'top-down', {'weight': 0.6})
('viterbi algorithm', 'de boor algorithm', {'weight': 0.6})
('viterbi algorithm', 'optimization algorithm', {'weight': 0.6})
('viterbi algorithm', "kruskal's algorithm", {'weight': 0.6})
('viterbi algorithm', 'jacques philippe marie binet', {'weight': 0.6})
('viterbi algorithm', 'tabu search', {'weight': 0.6})
('viterbi algorithm', 'divide and conquer algorithm', {'weight': 0.6})
('viterbi algorithm', "johnson's algorithm", {'weight': 0.6})
('viterbi algorithm', 'evolutionary algorithm', {'weight': 0.6})
('viterbi algorithm', 'clique-width', {'weight': 0.6})
('viterbi algorithm', 'dynamic programming', {'weight': 0.6})
('viterbi algorithm', 'subroutine', {'weight': 0.6})
('viterbi algorithm', 'simulated annealing', {'weight': 0.6})
('viterbi algorithm', 'tower of hanoi', {'weight': 0.6})
('viterbi algorithm', 'branch and bound', {'weight': 0.6})
('viterbi algorithm', 'engineering', {'weight': 0.6})
('viterbi algorithm', 'matroid', {'weight': 0.6})
('viterbi algorithm', 'viterbi algorithm', {'weight': 1})
('viterbi algorithm', "lemke's algorithm", {'weight': 0.6})
('viterbi algorithm', 'simplex algorithm', {'weight': 0.6})
('viterbi algorithm', 'local search (optimization)', {'weight': 0.6})
('viterbi algorithm', 'hessian matrix', {'weight': 0.6})
('viterbi algorithm', 'ibm system r', {'weight': 0.6})
('viterbi algorithm', 'penalty method', {'weight': 0.6})
('viterbi algorithm', 'prolog', {'weight': 0.6})
('viterbi algorithm', 'time-invariant system', {'weight': 0.6})
('viterbi algorithm', 'criss-cross algorithm', {'weight': 0.6})
('viterbi algorithm', 'revised simplex algorithm', {'weight': 0.6})
('viterbi algorithm', 'forward algorithm', {'weight': 0.7})
('viterbi algorithm', 'the mathematical association of america', {'weight': 0.6})
('viterbi algorithm', 'line search', {'weight': 0.6})
('viterbi algorithm', 'j (programming language)', {'weight': 0.6})
('viterbi algorithm', 'word wrap', {'weight': 0.6})
('viterbi algorithm', 'viterbi decoder', {'weight': 0.7})
('viterbi algorithm', 'subset sum problem', {'weight': 0.6})
('viterbi algorithm', 'integer programming', {'weight': 0.6})
('viterbi algorithm', 'nucleosome', {'weight': 0.6})
('viterbi algorithm', 'earley algorithm', {'weight': 0.6})
('viterbi algorithm', 'referential transparency (computer science)', {'weight': 0.6})
('viterbi algorithm', 'recursion', {'weight': 0.6})
('viterbi algorithm', 'mathematica', {'weight': 0.6})
('viterbi algorithm', 'quicksort', {'weight': 0.6})
('viterbi algorithm', 'recursion (computer science)', {'weight': 0.6})
('viterbi algorithm', 'checkerboard', {'weight': 0.6})
('viterbi algorithm', 'computer science', {'weight': 0.6})
('viterbi algorithm', 'brute-force search', {'weight': 0.6})
('viterbi algorithm', 'mathematics', {'weight': 0.6})
('viterbi algorithm', 'depth-first search', {'weight': 0.6})
('viterbi algorithm', 'top-down and bottom-up design', {'weight': 0.6})
('viterbi algorithm', 'correspondence problem', {'weight': 0.6})
('viterbi algorithm', 'transcription factor', {'weight': 0.6})
('viterbi algorithm', 'tree decomposition', {'weight': 0.6})
('viterbi algorithm', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('viterbi algorithm', 'structural alignment', {'weight': 0.6})
('viterbi algorithm', 'local convergence', {'weight': 0.6})
('viterbi algorithm', 'knapsack problem', {'weight': 0.6})
('viterbi algorithm', 'graph algorithm', {'weight': 0.6})
('viterbi algorithm', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('viterbi algorithm', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('viterbi algorithm', 'hidden markov model', {'weight': 0.7})
('viterbi algorithm', 'string (computer science)', {'weight': 0.6})
('viterbi algorithm', 'bioinformatics', {'weight': 0.6})
('viterbi algorithm', 'genetics', {'weight': 0.6})
('viterbi algorithm', 'mathematical optimization', {'weight': 0.6})
('viterbi algorithm', 'artificial neural networks', {'weight': 0.6})
('viterbi algorithm', 'introduction to algorithms', {'weight': 0.6})
('viterbi algorithm', 'thomas h. cormen', {'weight': 0.6})
('viterbi algorithm', 'music information retrieval', {'weight': 0.6})
('viterbi algorithm', 'beat (music)', {'weight': 0.6})
('viterbi algorithm', 'longest common subsequence problem', {'weight': 0.6})
('viterbi algorithm', 'convex minimization', {'weight': 0.6})
('viterbi algorithm', 'markov models', {'weight': 0.5})
('viterbi algorithm', 'successive parabolic interpolation', {'weight': 0.6})
('viterbi algorithm', 'fibonacci sequence', {'weight': 0.6})
('viterbi algorithm', 'maximum subarray problem', {'weight': 0.6})
('viterbi algorithm', 'convex optimization', {'weight': 0.6})
('viterbi algorithm', 'memoization', {'weight': 0.6})
('viterbi algorithm', 'richard bellman', {'weight': 0.6})
('viterbi algorithm', 'exponential growth', {'weight': 0.6})
('viterbi algorithm', 'charles e. leiserson', {'weight': 0.6})
('viterbi algorithm', 'charles erwin wilson', {'weight': 0.6})
('viterbi algorithm', 'interval scheduling', {'weight': 0.6})
('viterbi algorithm', 'chart parser', {'weight': 0.6})
('viterbi algorithm', 'travelling salesman problem', {'weight': 0.6})
('viterbi algorithm', 'bellman equation', {'weight': 0.6})
("lemke's algorithm", 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
("lemke's algorithm", 'photoshop', {'weight': 0.6})
("lemke's algorithm", 'sequence alignment', {'weight': 0.6})
("lemke's algorithm", 'flow network', {'weight': 0.6})
("lemke's algorithm", 'ellipsoid method', {'weight': 0.6})
("lemke's algorithm", 'chain matrix multiplication', {'weight': 0.6})
("lemke's algorithm", 'ieee', {'weight': 0.6})
("lemke's algorithm", 'backtracking', {'weight': 0.6})
("lemke's algorithm", 'nonlinear conjugate gradient method', {'weight': 0.6})
("lemke's algorithm", 'dynamic problem', {'weight': 0.6})
("lemke's algorithm", 'trust region', {'weight': 0.6})
("lemke's algorithm", 'function (mathematics)', {'weight': 0.6})
("lemke's algorithm", 'minimum spanning tree', {'weight': 0.6})
("lemke's algorithm", 'context-free grammar', {'weight': 0.6})
("lemke's algorithm", 'branch and cut', {'weight': 0.6})
("lemke's algorithm", 'state variable', {'weight': 0.6})
("lemke's algorithm", 'algorithms and data structures stubs', {'weight': 0.5})
("lemke's algorithm", 'treewidth', {'weight': 0.6})
("lemke's algorithm", 'optimization algorithms and methods', {'weight': 0.5})
("lemke's algorithm", 'overlapping subproblem', {'weight': 0.6})
("lemke's algorithm", 'taylor & francis', {'weight': 0.6})
("lemke's algorithm", 'brute-force search', {'weight': 0.6})
("lemke's algorithm", 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
("lemke's algorithm", 'method of undetermined coefficients', {'weight': 0.6})
("lemke's algorithm", 'combinatorial optimization', {'weight': 0.6})
("lemke's algorithm", "newton's method in optimization", {'weight': 0.6})
("lemke's algorithm", 'matrix chain multiplication', {'weight': 0.6})
("lemke's algorithm", 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
("lemke's algorithm", 'dynamic time warping', {'weight': 0.6})
("lemke's algorithm", 'dynamic programming language', {'weight': 0.6})
("lemke's algorithm", 'call-by-need', {'weight': 0.6})
("lemke's algorithm", 'big-o notation', {'weight': 0.6})
("lemke's algorithm", 'comparison of optimization software', {'weight': 0.6})
("lemke's algorithm", 'quadratic programming', {'weight': 0.6})
("lemke's algorithm", 'common lisp', {'weight': 0.6})
("lemke's algorithm", 'barrier function', {'weight': 0.6})
("lemke's algorithm", 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
("lemke's algorithm", 'gradient descent', {'weight': 0.6})
("lemke's algorithm", 'patricia selinger', {'weight': 0.6})
("lemke's algorithm", 'discounting', {'weight': 0.6})
("lemke's algorithm", 'ronald l. rivest', {'weight': 0.6})
("lemke's algorithm", 'iterative method', {'weight': 0.6})
("lemke's algorithm", 'limited-memory bfgs', {'weight': 0.6})
("lemke's algorithm", 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
("lemke's algorithm", 'longest common substring problem', {'weight': 0.6})
("lemke's algorithm", 'clifford stein', {'weight': 0.6})
("lemke's algorithm", 'computer chess', {'weight': 0.6})
("lemke's algorithm", 'linear programming', {'weight': 0.6})
("lemke's algorithm", 'bitonic tour', {'weight': 0.6})
("lemke's algorithm", 'linear search problem', {'weight': 0.6})
("lemke's algorithm", 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
("lemke's algorithm", 'systems analysis', {'weight': 0.6})
("lemke's algorithm", 'cutting-plane method', {'weight': 0.6})
("lemke's algorithm", 'capital (economics)', {'weight': 0.6})
("lemke's algorithm", 'levenshtein distance', {'weight': 0.6})
("lemke's algorithm", 'nonlinear programming', {'weight': 0.6})
("lemke's algorithm", 'computational complexity of mathematical operations', {'weight': 0.6})
("lemke's algorithm", 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
("lemke's algorithm", 'gradient', {'weight': 0.6})
("lemke's algorithm", 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
("lemke's algorithm", 'bulletin of the american mathematical society', {'weight': 0.6})
("lemke's algorithm", 'u.s. english', {'weight': 0.6})
("lemke's algorithm", 'refutation table', {'weight': 0.6})
("lemke's algorithm", 'heuristic algorithm', {'weight': 0.6})
("lemke's algorithm", 'successive linear programming', {'weight': 0.6})
("lemke's algorithm", 'optimal substructure', {'weight': 0.6})
("lemke's algorithm", 'programming language', {'weight': 0.6})
("lemke's algorithm", 'mergesort', {'weight': 0.6})
("lemke's algorithm", "dijkstra's algorithm", {'weight': 0.6})
("lemke's algorithm", 'subgradient method', {'weight': 0.6})
("lemke's algorithm", 'call-by-name', {'weight': 0.6})
("lemke's algorithm", 'longest increasing subsequence problem', {'weight': 0.6})
("lemke's algorithm", 'edward prescott', {'weight': 0.6})
("lemke's algorithm", 'exponential time', {'weight': 0.6})
("lemke's algorithm", 'principle of optimality', {'weight': 0.6})
("lemke's algorithm", "bor\xe5\xafvka's algorithm", {'weight': 0.6})
("lemke's algorithm", 'mathematical game', {'weight': 0.6})
("lemke's algorithm", 'nancy stokey', {'weight': 0.6})
("lemke's algorithm", 'approximation algorithm', {'weight': 0.6})
("lemke's algorithm", 'discrete-time', {'weight': 0.6})
("lemke's algorithm", 'cyk algorithm', {'weight': 0.6})
("lemke's algorithm", 'markov decision process', {'weight': 0.6})
("lemke's algorithm", "powell's method", {'weight': 0.6})
("lemke's algorithm", 'wolfe conditions', {'weight': 0.6})
("lemke's algorithm", 'convexity in economics', {'weight': 0.6})
("lemke's algorithm", 'transposition table', {'weight': 0.6})
("lemke's algorithm", 'economics', {'weight': 0.6})
("lemke's algorithm", 'backward induction', {'weight': 0.6})
("lemke's algorithm", 'golden section search', {'weight': 0.6})
("lemke's algorithm", 'edit distance', {'weight': 0.6})
("lemke's algorithm", 'tree structure', {'weight': 0.6})
("lemke's algorithm", 'exchange algorithm', {'weight': 0.6})
("lemke's algorithm", 'dover publications', {'weight': 0.6})
("lemke's algorithm", 'seam carving', {'weight': 0.6})
("lemke's algorithm", 'recursive least squares', {'weight': 0.6})
("lemke's algorithm", 'metaheuristic', {'weight': 0.6})
("lemke's algorithm", 'quasi-newton method', {'weight': 0.6})
("lemke's algorithm", 'on-line encyclopedia of integer sequences', {'weight': 0.6})
("lemke's algorithm", 'robert e. lucas', {'weight': 0.6})
("lemke's algorithm", 'non-convexity (economics)', {'weight': 0.6})
("lemke's algorithm", 'sr1 formula', {'weight': 0.6})
("lemke's algorithm", 'mathematical reviews', {'weight': 0.6})
("lemke's algorithm", 'puzzle', {'weight': 0.6})
("lemke's algorithm", 'associative array', {'weight': 0.6})
("lemke's algorithm", 'shortest path problem', {'weight': 0.6})
("lemke's algorithm", 'dynamic algorithm', {'weight': 0.6})
("lemke's algorithm", 'augmented lagrangian method', {'weight': 0.6})
("lemke's algorithm", 'charles delisi', {'weight': 0.6})
("lemke's algorithm", 'greedy algorithm', {'weight': 0.6})
("lemke's algorithm", "karmarkar's algorithm", {'weight': 0.6})
("lemke's algorithm", 'lattice models', {'weight': 0.6})
("lemke's algorithm", 'utility', {'weight': 0.6})
("lemke's algorithm", 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
("lemke's algorithm", 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
("lemke's algorithm", 'push-relabel maximum flow algorithm', {'weight': 0.6})
("lemke's algorithm", 'international standard book number', {'weight': 0.6})
("lemke's algorithm", 'undirected graph', {'weight': 0.6})
("lemke's algorithm", 'scheme (programming language)', {'weight': 0.6})
("lemke's algorithm", 'rna structure', {'weight': 0.6})
("lemke's algorithm", 'hanoi', {'weight': 0.6})
("lemke's algorithm", 'perl', {'weight': 0.6})
("lemke's algorithm", 'digital object identifier', {'weight': 0.6})
("lemke's algorithm", 'sequential quadratic programming', {'weight': 0.6})
("lemke's algorithm", "dinic's algorithm", {'weight': 0.6})
("lemke's algorithm", 'pseudo-polynomial time', {'weight': 0.6})
("lemke's algorithm", 'partition problem', {'weight': 0.6})
("lemke's algorithm", 'stochastic programming', {'weight': 0.6})
("lemke's algorithm", 'hill climbing', {'weight': 0.6})
("lemke's algorithm", 'top-down', {'weight': 0.6})
("lemke's algorithm", 'de boor algorithm', {'weight': 0.6})
("lemke's algorithm", 'optimization algorithm', {'weight': 0.6})
("lemke's algorithm", "kruskal's algorithm", {'weight': 0.6})
("lemke's algorithm", 'jacques philippe marie binet', {'weight': 0.6})
("lemke's algorithm", 'tabu search', {'weight': 0.6})
("lemke's algorithm", 'divide and conquer algorithm', {'weight': 0.6})
("lemke's algorithm", "johnson's algorithm", {'weight': 0.6})
("lemke's algorithm", 'evolutionary algorithm', {'weight': 0.6})
("lemke's algorithm", 'clique-width', {'weight': 0.6})
("lemke's algorithm", 'dynamic programming', {'weight': 0.6})
("lemke's algorithm", 'subroutine', {'weight': 0.6})
("lemke's algorithm", 'simulated annealing', {'weight': 0.6})
("lemke's algorithm", 'tower of hanoi', {'weight': 0.6})
("lemke's algorithm", 'branch and bound', {'weight': 0.6})
("lemke's algorithm", 'engineering', {'weight': 0.6})
("lemke's algorithm", 'matroid', {'weight': 0.6})
("lemke's algorithm", 'viterbi algorithm', {'weight': 0.6})
("lemke's algorithm", "lemke's algorithm", {'weight': 1})
("lemke's algorithm", 'simplex algorithm', {'weight': 0.6})
("lemke's algorithm", 'local search (optimization)', {'weight': 0.6})
("lemke's algorithm", 'hessian matrix', {'weight': 0.6})
("lemke's algorithm", 'ibm system r', {'weight': 0.6})
("lemke's algorithm", 'penalty method', {'weight': 0.6})
("lemke's algorithm", 'prolog', {'weight': 0.6})
("lemke's algorithm", 'time-invariant system', {'weight': 0.6})
("lemke's algorithm", 'criss-cross algorithm', {'weight': 0.6})
("lemke's algorithm", 'revised simplex algorithm', {'weight': 0.6})
("lemke's algorithm", 'the mathematical association of america', {'weight': 0.6})
("lemke's algorithm", 'line search', {'weight': 0.6})
("lemke's algorithm", 'j (programming language)', {'weight': 0.6})
("lemke's algorithm", 'word wrap', {'weight': 0.6})
("lemke's algorithm", 'subset sum problem', {'weight': 0.6})
("lemke's algorithm", 'integer programming', {'weight': 0.6})
("lemke's algorithm", 'nucleosome', {'weight': 0.6})
("lemke's algorithm", 'earley algorithm', {'weight': 0.6})
("lemke's algorithm", 'referential transparency (computer science)', {'weight': 0.6})
("lemke's algorithm", 'recursion', {'weight': 0.6})
("lemke's algorithm", 'mathematica', {'weight': 0.6})
("lemke's algorithm", 'quicksort', {'weight': 0.6})
("lemke's algorithm", 'recursion (computer science)', {'weight': 0.6})
("lemke's algorithm", 'checkerboard', {'weight': 0.6})
("lemke's algorithm", 'computer science', {'weight': 0.6})
("lemke's algorithm", 'computer science stubs', {'weight': 0.5})
("lemke's algorithm", 'mathematics', {'weight': 0.6})
("lemke's algorithm", 'depth-first search', {'weight': 0.6})
("lemke's algorithm", 'top-down and bottom-up design', {'weight': 0.6})
("lemke's algorithm", 'correspondence problem', {'weight': 0.6})
("lemke's algorithm", 'transcription factor', {'weight': 0.6})
("lemke's algorithm", 'tree decomposition', {'weight': 0.6})
("lemke's algorithm", 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
("lemke's algorithm", 'structural alignment', {'weight': 0.6})
("lemke's algorithm", 'local convergence', {'weight': 0.6})
("lemke's algorithm", 'knapsack problem', {'weight': 0.6})
("lemke's algorithm", 'graph algorithm', {'weight': 0.6})
("lemke's algorithm", 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
("lemke's algorithm", 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
("lemke's algorithm", 'hidden markov model', {'weight': 0.6})
("lemke's algorithm", 'string (computer science)', {'weight': 0.6})
("lemke's algorithm", 'bioinformatics', {'weight': 0.6})
("lemke's algorithm", 'genetics', {'weight': 0.6})
("lemke's algorithm", 'mathematical optimization', {'weight': 0.6})
("lemke's algorithm", 'artificial neural networks', {'weight': 0.6})
("lemke's algorithm", 'introduction to algorithms', {'weight': 0.6})
("lemke's algorithm", 'thomas h. cormen', {'weight': 0.6})
("lemke's algorithm", 'music information retrieval', {'weight': 0.6})
("lemke's algorithm", 'beat (music)', {'weight': 0.6})
("lemke's algorithm", 'longest common subsequence problem', {'weight': 0.6})
("lemke's algorithm", 'convex minimization', {'weight': 0.6})
("lemke's algorithm", 'successive parabolic interpolation', {'weight': 0.6})
("lemke's algorithm", 'fibonacci sequence', {'weight': 0.6})
("lemke's algorithm", 'maximum subarray problem', {'weight': 0.6})
("lemke's algorithm", 'convex optimization', {'weight': 0.6})
("lemke's algorithm", 'memoization', {'weight': 0.6})
("lemke's algorithm", 'richard bellman', {'weight': 0.6})
("lemke's algorithm", 'exponential growth', {'weight': 0.6})
("lemke's algorithm", 'charles e. leiserson', {'weight': 0.6})
("lemke's algorithm", 'charles erwin wilson', {'weight': 0.6})
("lemke's algorithm", 'interval scheduling', {'weight': 0.6})
("lemke's algorithm", 'chart parser', {'weight': 0.6})
("lemke's algorithm", 'travelling salesman problem', {'weight': 0.6})
("lemke's algorithm", 'bellman equation', {'weight': 0.6})
('gradient descent', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('gradient descent', 'photoshop', {'weight': 0.6})
('gradient descent', 'sequence alignment', {'weight': 0.6})
('gradient descent', 'flow network', {'weight': 0.6})
('gradient descent', 'ellipsoid method', {'weight': 0.6})
('gradient descent', 'chain matrix multiplication', {'weight': 0.6})
('gradient descent', 'ieee', {'weight': 0.6})
('gradient descent', 'backtracking', {'weight': 0.6})
('gradient descent', 'nonlinear conjugate gradient method', {'weight': 0.6})
('gradient descent', 'conjugate gradient method', {'weight': 0.7})
('gradient descent', 'dynamic problem', {'weight': 0.6})
('gradient descent', 'trust region', {'weight': 0.6})
('gradient descent', 'function (mathematics)', {'weight': 0.6})
('gradient descent', 'minimum spanning tree', {'weight': 0.6})
('gradient descent', 'context-free grammar', {'weight': 0.6})
('gradient descent', 'branch and cut', {'weight': 0.6})
('gradient descent', 'state variable', {'weight': 0.6})
('gradient descent', 'treewidth', {'weight': 0.6})
('gradient descent', 'optimization algorithms and methods', {'weight': 0.5})
('gradient descent', 'overlapping subproblem', {'weight': 0.6})
('gradient descent', 'taylor & francis', {'weight': 0.6})
('gradient descent', 'cutting-plane method', {'weight': 0.6})
('gradient descent', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('gradient descent', 'method of undetermined coefficients', {'weight': 0.6})
('gradient descent', 'combinatorial optimization', {'weight': 0.6})
('gradient descent', "newton's method in optimization", {'weight': 0.6})
('gradient descent', 'matrix chain multiplication', {'weight': 0.6})
('gradient descent', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('gradient descent', 'dynamic time warping', {'weight': 0.6})
('gradient descent', 'dynamic programming language', {'weight': 0.6})
('gradient descent', 'call-by-need', {'weight': 0.6})
('gradient descent', 'big-o notation', {'weight': 0.6})
('gradient descent', 'comparison of optimization software', {'weight': 0.6})
('gradient descent', 'quadratic programming', {'weight': 0.6})
('gradient descent', 'common lisp', {'weight': 0.6})
('gradient descent', 'barrier function', {'weight': 0.6})
('gradient descent', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('gradient descent', 'gradient descent', {'weight': 1})
('gradient descent', 'patricia selinger', {'weight': 0.6})
('gradient descent', 'discounting', {'weight': 0.6})
('gradient descent', 'ronald l. rivest', {'weight': 0.6})
('gradient descent', 'iterative method', {'weight': 0.6})
('gradient descent', 'limited-memory bfgs', {'weight': 0.6})
('gradient descent', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('gradient descent', 'longest common substring problem', {'weight': 0.6})
('gradient descent', 'clifford stein', {'weight': 0.6})
('gradient descent', 'computer chess', {'weight': 0.6})
('gradient descent', 'linear programming', {'weight': 0.6})
('gradient descent', 'first order methods', {'weight': 0.5})
('gradient descent', 'bitonic tour', {'weight': 0.6})
('gradient descent', 'linear search problem', {'weight': 0.6})
('gradient descent', 'nelder\xe2\x80\x93mead method', {'weight': 0.7})
('gradient descent', 'systems analysis', {'weight': 0.6})
('gradient descent', 'capital (economics)', {'weight': 0.6})
('gradient descent', 'levenshtein distance', {'weight': 0.6})
('gradient descent', 'nonlinear programming', {'weight': 0.6})
('gradient descent', 'preconditioning', {'weight': 0.7})
('gradient descent', 'computational complexity of mathematical operations', {'weight': 0.6})
('gradient descent', 'extreme learning machines', {'weight': 0.7})
('gradient descent', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('gradient descent', 'gradient', {'weight': 0.6})
('gradient descent', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('gradient descent', 'bulletin of the american mathematical society', {'weight': 0.6})
('gradient descent', 'u.s. english', {'weight': 0.6})
('gradient descent', 'refutation table', {'weight': 0.6})
('gradient descent', 'heuristic algorithm', {'weight': 0.6})
('gradient descent', 'successive linear programming', {'weight': 0.6})
('gradient descent', 'optimal substructure', {'weight': 0.6})
('gradient descent', 'programming language', {'weight': 0.6})
('gradient descent', 'mergesort', {'weight': 0.6})
('gradient descent', "dijkstra's algorithm", {'weight': 0.6})
('gradient descent', 'subgradient method', {'weight': 0.6})
('gradient descent', 'call-by-name', {'weight': 0.6})
('gradient descent', 'longest increasing subsequence problem', {'weight': 0.6})
('gradient descent', 'edward prescott', {'weight': 0.6})
('gradient descent', 'exponential time', {'weight': 0.6})
('gradient descent', 'principle of optimality', {'weight': 0.6})
('gradient descent', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('gradient descent', 'mathematical game', {'weight': 0.6})
('gradient descent', 'nancy stokey', {'weight': 0.6})
('gradient descent', 'approximation algorithm', {'weight': 0.6})
('gradient descent', 'discrete-time', {'weight': 0.6})
('gradient descent', 'cyk algorithm', {'weight': 0.6})
('gradient descent', 'markov decision process', {'weight': 0.6})
('gradient descent', "powell's method", {'weight': 0.6})
('gradient descent', 'wolfe conditions', {'weight': 0.7})
('gradient descent', 'convexity in economics', {'weight': 0.6})
('gradient descent', 'transposition table', {'weight': 0.6})
('gradient descent', 'economics', {'weight': 0.6})
('gradient descent', 'backward induction', {'weight': 0.6})
('gradient descent', 'bfgs method', {'weight': 0.7})
('gradient descent', 'golden section search', {'weight': 0.6})
('gradient descent', 'edit distance', {'weight': 0.6})
('gradient descent', 'tree structure', {'weight': 0.6})
('gradient descent', 'exchange algorithm', {'weight': 0.6})
('gradient descent', 'dover publications', {'weight': 0.6})
('gradient descent', 'seam carving', {'weight': 0.6})
('gradient descent', 'recursive least squares', {'weight': 0.6})
('gradient descent', 'metaheuristic', {'weight': 0.6})
('gradient descent', 'quasi-newton method', {'weight': 0.6})
('gradient descent', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('gradient descent', 'robert e. lucas', {'weight': 0.6})
('gradient descent', 'non-convexity (economics)', {'weight': 0.6})
('gradient descent', 'sr1 formula', {'weight': 0.6})
('gradient descent', 'mathematical reviews', {'weight': 0.6})
('gradient descent', 'puzzle', {'weight': 0.6})
('gradient descent', 'associative array', {'weight': 0.6})
('gradient descent', 'shortest path problem', {'weight': 0.6})
('gradient descent', 'dynamic algorithm', {'weight': 0.6})
('gradient descent', 'augmented lagrangian method', {'weight': 0.6})
('gradient descent', 'charles delisi', {'weight': 0.6})
('gradient descent', 'greedy algorithm', {'weight': 0.6})
('gradient descent', "karmarkar's algorithm", {'weight': 0.6})
('gradient descent', 'lattice models', {'weight': 0.6})
('gradient descent', 'utility', {'weight': 0.6})
('gradient descent', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('gradient descent', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('gradient descent', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('gradient descent', 'international standard book number', {'weight': 0.6})
('gradient descent', 'undirected graph', {'weight': 0.6})
('gradient descent', 'scheme (programming language)', {'weight': 0.6})
('gradient descent', 'rna structure', {'weight': 0.6})
('gradient descent', 'hanoi', {'weight': 0.6})
('gradient descent', 'perl', {'weight': 0.6})
('gradient descent', 'digital object identifier', {'weight': 0.6})
('gradient descent', 'sequential quadratic programming', {'weight': 0.6})
('gradient descent', "dinic's algorithm", {'weight': 0.6})
('gradient descent', 'pseudo-polynomial time', {'weight': 0.6})
('gradient descent', 'partition problem', {'weight': 0.6})
('gradient descent', 'stochastic programming', {'weight': 0.6})
('gradient descent', 'hill climbing', {'weight': 0.6})
('gradient descent', 'top-down', {'weight': 0.6})
('gradient descent', 'de boor algorithm', {'weight': 0.6})
('gradient descent', 'optimization algorithm', {'weight': 0.6})
('gradient descent', "kruskal's algorithm", {'weight': 0.6})
('gradient descent', 'jacques philippe marie binet', {'weight': 0.6})
('gradient descent', 'tabu search', {'weight': 0.6})
('gradient descent', 'divide and conquer algorithm', {'weight': 0.6})
('gradient descent', "johnson's algorithm", {'weight': 0.6})
('gradient descent', 'evolutionary algorithm', {'weight': 0.6})
('gradient descent', 'clique-width', {'weight': 0.6})
('gradient descent', 'dynamic programming', {'weight': 0.6})
('gradient descent', 'subroutine', {'weight': 0.6})
('gradient descent', 'delta rule', {'weight': 0.7})
('gradient descent', 'rprop', {'weight': 0.7})
('gradient descent', 'simulated annealing', {'weight': 0.6})
('gradient descent', 'tower of hanoi', {'weight': 0.6})
('gradient descent', 'branch and bound', {'weight': 0.6})
('gradient descent', 'engineering', {'weight': 0.6})
('gradient descent', 'matroid', {'weight': 0.6})
('gradient descent', 'viterbi algorithm', {'weight': 0.6})
('gradient descent', "lemke's algorithm", {'weight': 0.6})
('gradient descent', 'simplex algorithm', {'weight': 0.6})
('gradient descent', 'local search (optimization)', {'weight': 0.6})
('gradient descent', 'hessian matrix', {'weight': 0.6})
('gradient descent', 'ibm system r', {'weight': 0.6})
('gradient descent', 'penalty method', {'weight': 0.6})
('gradient descent', 'prolog', {'weight': 0.6})
('gradient descent', 'time-invariant system', {'weight': 0.6})
('gradient descent', 'criss-cross algorithm', {'weight': 0.6})
('gradient descent', 'revised simplex algorithm', {'weight': 0.6})
('gradient descent', 'the mathematical association of america', {'weight': 0.6})
('gradient descent', 'line search', {'weight': 0.6})
('gradient descent', 'j (programming language)', {'weight': 0.6})
('gradient descent', 'word wrap', {'weight': 0.6})
('gradient descent', 'subset sum problem', {'weight': 0.6})
('gradient descent', 'integer programming', {'weight': 0.6})
('gradient descent', 'nucleosome', {'weight': 0.6})
('gradient descent', 'earley algorithm', {'weight': 0.6})
('gradient descent', 'referential transparency (computer science)', {'weight': 0.6})
('gradient descent', 'recursion', {'weight': 0.6})
('gradient descent', 'mathematica', {'weight': 0.6})
('gradient descent', 'quicksort', {'weight': 0.6})
('gradient descent', 'recursion (computer science)', {'weight': 0.6})
('gradient descent', 'checkerboard', {'weight': 0.6})
('gradient descent', 'computer science', {'weight': 0.6})
('gradient descent', 'brute-force search', {'weight': 0.6})
('gradient descent', 'mathematics', {'weight': 0.6})
('gradient descent', 'depth-first search', {'weight': 0.6})
('gradient descent', 'top-down and bottom-up design', {'weight': 0.6})
('gradient descent', 'correspondence problem', {'weight': 0.6})
('gradient descent', 'transcription factor', {'weight': 0.6})
('gradient descent', 'tree decomposition', {'weight': 0.6})
('gradient descent', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('gradient descent', 'structural alignment', {'weight': 0.6})
('gradient descent', 'local convergence', {'weight': 0.6})
('gradient descent', 'knapsack problem', {'weight': 0.6})
('gradient descent', 'graph algorithm', {'weight': 0.6})
('gradient descent', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('gradient descent', 'gradient methods', {'weight': 0.5})
('gradient descent', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('gradient descent', 'hidden markov model', {'weight': 0.6})
('gradient descent', 'string (computer science)', {'weight': 0.6})
('gradient descent', 'bioinformatics', {'weight': 0.6})
('gradient descent', 'genetics', {'weight': 0.6})
('gradient descent', 'mathematical optimization', {'weight': 0.6})
('gradient descent', 'artificial neural networks', {'weight': 0.6})
('gradient descent', 'introduction to algorithms', {'weight': 0.6})
('gradient descent', 'thomas h. cormen', {'weight': 0.6})
('gradient descent', 'music information retrieval', {'weight': 0.6})
('gradient descent', 'beat (music)', {'weight': 0.6})
('gradient descent', 'longest common subsequence problem', {'weight': 0.6})
('gradient descent', 'convex minimization', {'weight': 0.6})
('gradient descent', 'successive parabolic interpolation', {'weight': 0.6})
('gradient descent', 'fibonacci sequence', {'weight': 0.6})
('gradient descent', 'maximum subarray problem', {'weight': 0.6})
('gradient descent', 'convex optimization', {'weight': 0.6})
('gradient descent', 'stochastic gradient descent', {'weight': 0.7})
('gradient descent', 'memoization', {'weight': 0.6})
('gradient descent', 'richard bellman', {'weight': 0.6})
('gradient descent', 'exponential growth', {'weight': 0.6})
('gradient descent', 'charles e. leiserson', {'weight': 0.6})
('gradient descent', 'charles erwin wilson', {'weight': 0.6})
('gradient descent', 'interval scheduling', {'weight': 0.6})
('gradient descent', 'chart parser', {'weight': 0.6})
('gradient descent', 'travelling salesman problem', {'weight': 0.6})
('gradient descent', 'bellman equation', {'weight': 0.6})
('memoization', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('memoization', 'photoshop', {'weight': 0.6})
('memoization', 'sequence alignment', {'weight': 0.6})
('memoization', 'flow network', {'weight': 0.6})
('memoization', 'flyweight pattern', {'weight': 0.7})
('memoization', 'lookup table', {'weight': 0.7})
('memoization', 'ellipsoid method', {'weight': 0.6})
('memoization', 'chain matrix multiplication', {'weight': 0.6})
('memoization', 'ieee', {'weight': 0.6})
('memoization', 'backtracking', {'weight': 0.6})
('memoization', 'nonlinear conjugate gradient method', {'weight': 0.6})
('memoization', 'dynamic problem', {'weight': 0.6})
('memoization', 'trust region', {'weight': 0.6})
('memoization', 'function (mathematics)', {'weight': 0.6})
('memoization', 'minimum spanning tree', {'weight': 0.6})
('memoization', 'strength reduction', {'weight': 0.7})
('memoization', 'context-free grammar', {'weight': 0.6})
('memoization', 'branch and cut', {'weight': 0.6})
('memoization', 'state variable', {'weight': 0.6})
('memoization', 'data structure', {'weight': 0.7})
('memoization', 'treewidth', {'weight': 0.6})
('memoization', 'overlapping subproblem', {'weight': 0.6})
('memoization', 'taylor & francis', {'weight': 0.6})
('memoization', 'cutting-plane method', {'weight': 0.6})
('memoization', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('memoization', 'method of undetermined coefficients', {'weight': 0.6})
('memoization', 'hashlife', {'weight': 0.7})
('memoization', 'combinatorial optimization', {'weight': 0.6})
('memoization', "newton's method in optimization", {'weight': 0.6})
('memoization', 'matrix chain multiplication', {'weight': 0.6})
('memoization', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('memoization', 'compiler', {'weight': 0.7})
('memoization', 'dynamic time warping', {'weight': 0.6})
('memoization', 'dynamic programming language', {'weight': 0.6})
('memoization', 'call-by-need', {'weight': 0.6})
('memoization', 'big-o notation', {'weight': 0.6})
('memoization', 'comparison of optimization software', {'weight': 0.6})
('memoization', 'quadratic programming', {'weight': 0.6})
('memoization', 'common lisp', {'weight': 0.6})
('memoization', 'barrier function', {'weight': 0.6})
('memoization', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('memoization', 'gradient descent', {'weight': 0.6})
('memoization', 'patricia selinger', {'weight': 0.6})
('memoization', 'discounting', {'weight': 0.6})
('memoization', 'ronald l. rivest', {'weight': 0.6})
('memoization', 'iterative method', {'weight': 0.6})
('memoization', 'limited-memory bfgs', {'weight': 0.6})
('memoization', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('memoization', 'software optimization', {'weight': 0.5})
('memoization', 'longest common substring problem', {'weight': 0.6})
('memoization', 'clifford stein', {'weight': 0.6})
('memoization', 'design pattern', {'weight': 0.7})
('memoization', 'computer chess', {'weight': 0.6})
('memoization', 'linear programming', {'weight': 0.6})
('memoization', 'bitonic tour', {'weight': 0.6})
('memoization', 'linear search problem', {'weight': 0.6})
('memoization', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('memoization', 'systems analysis', {'weight': 0.6})
('memoization', 'capital (economics)', {'weight': 0.6})
('memoization', 'levenshtein distance', {'weight': 0.6})
('memoization', 'lazy evaluation', {'weight': 0.7})
('memoization', 'nonlinear programming', {'weight': 0.6})
('memoization', 'computational complexity of mathematical operations', {'weight': 0.6})
('memoization', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('memoization', 'gradient', {'weight': 0.6})
('memoization', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('memoization', 'director string', {'weight': 0.7})
('memoization', 'bulletin of the american mathematical society', {'weight': 0.6})
('memoization', 'u.s. english', {'weight': 0.6})
('memoization', 'refutation table', {'weight': 0.6})
('memoization', 'heuristic algorithm', {'weight': 0.6})
('memoization', 'successive linear programming', {'weight': 0.6})
('memoization', 'optimal substructure', {'weight': 0.6})
('memoization', 'programming language', {'weight': 0.6})
('memoization', 'mergesort', {'weight': 0.6})
('memoization', "dijkstra's algorithm", {'weight': 0.6})
('memoization', 'subgradient method', {'weight': 0.6})
('memoization', 'call-by-name', {'weight': 0.6})
('memoization', 'longest increasing subsequence problem', {'weight': 0.6})
('memoization', 'edward prescott', {'weight': 0.6})
('memoization', 'exponential time', {'weight': 0.6})
('memoization', 'principle of optimality', {'weight': 0.6})
('memoization', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('memoization', 'mathematical game', {'weight': 0.6})
('memoization', 'nancy stokey', {'weight': 0.6})
('memoization', 'approximation algorithm', {'weight': 0.6})
('memoization', 'discrete-time', {'weight': 0.6})
('memoization', 'cyk algorithm', {'weight': 0.6})
('memoization', 'markov decision process', {'weight': 0.6})
('memoization', "powell's method", {'weight': 0.6})
('memoization', 'wolfe conditions', {'weight': 0.6})
('memoization', 'convexity in economics', {'weight': 0.6})
('memoization', 'transposition table', {'weight': 0.6})
('memoization', 'economics', {'weight': 0.6})
('memoization', 'backward induction', {'weight': 0.6})
('memoization', 'golden section search', {'weight': 0.6})
('memoization', 'edit distance', {'weight': 0.6})
('memoization', 'tree structure', {'weight': 0.6})
('memoization', 'exchange algorithm', {'weight': 0.6})
('memoization', 'dover publications', {'weight': 0.6})
('memoization', 'seam carving', {'weight': 0.6})
('memoization', 'recursive least squares', {'weight': 0.6})
('memoization', 'metaheuristic', {'weight': 0.6})
('memoization', 'quasi-newton method', {'weight': 0.6})
('memoization', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('memoization', 'robert e. lucas', {'weight': 0.6})
('memoization', 'non-convexity (economics)', {'weight': 0.6})
('memoization', 'sr1 formula', {'weight': 0.6})
('memoization', 'mathematical reviews', {'weight': 0.6})
('memoization', 'puzzle', {'weight': 0.6})
('memoization', 'associative array', {'weight': 0.6})
('memoization', 'shortest path problem', {'weight': 0.6})
('memoization', 'dynamic algorithm', {'weight': 0.6})
('memoization', 'augmented lagrangian method', {'weight': 0.6})
('memoization', 'charles delisi', {'weight': 0.6})
('memoization', 'greedy algorithm', {'weight': 0.6})
('memoization', "karmarkar's algorithm", {'weight': 0.6})
('memoization', 'higher-order perl', {'weight': 0.7})
('memoization', 'lattice models', {'weight': 0.6})
('memoization', 'utility', {'weight': 0.6})
('memoization', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('memoization', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('memoization', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('memoization', 'international standard book number', {'weight': 0.6})
('memoization', 'undirected graph', {'weight': 0.6})
('memoization', 'scheme (programming language)', {'weight': 0.6})
('memoization', 'rna structure', {'weight': 0.6})
('memoization', 'hanoi', {'weight': 0.6})
('memoization', 'perl', {'weight': 0.6})
('memoization', 'digital object identifier', {'weight': 0.6})
('memoization', 'sequential quadratic programming', {'weight': 0.6})
('memoization', "dinic's algorithm", {'weight': 0.6})
('memoization', 'pseudo-polynomial time', {'weight': 0.6})
('memoization', 'partition problem', {'weight': 0.6})
('memoization', 'stochastic programming', {'weight': 0.6})
('memoization', 'hill climbing', {'weight': 0.6})
('memoization', 'top-down', {'weight': 0.6})
('memoization', 'de boor algorithm', {'weight': 0.6})
('memoization', 'optimization algorithm', {'weight': 0.6})
('memoization', "kruskal's algorithm", {'weight': 0.6})
('memoization', 'jacques philippe marie binet', {'weight': 0.6})
('memoization', 'tabu search', {'weight': 0.6})
('memoization', 'divide and conquer algorithm', {'weight': 0.6})
('memoization', "johnson's algorithm", {'weight': 0.6})
('memoization', 'evolutionary algorithm', {'weight': 0.6})
('memoization', 'clique-width', {'weight': 0.6})
('memoization', 'computer performance', {'weight': 0.5})
('memoization', 'dynamic programming', {'weight': 0.7})
('memoization', 'subroutine', {'weight': 0.6})
('memoization', 'cellular automata', {'weight': 0.7})
('memoization', 'simulated annealing', {'weight': 0.6})
('memoization', 'tower of hanoi', {'weight': 0.6})
('memoization', 'branch and bound', {'weight': 0.6})
('memoization', 'engineering', {'weight': 0.6})
('memoization', 'matroid', {'weight': 0.6})
('memoization', 'viterbi algorithm', {'weight': 0.6})
('memoization', "lemke's algorithm", {'weight': 0.6})
('memoization', 'simplex algorithm', {'weight': 0.6})
('memoization', 'local search (optimization)', {'weight': 0.6})
('memoization', 'hessian matrix', {'weight': 0.6})
('memoization', 'ibm system r', {'weight': 0.6})
('memoization', 'penalty method', {'weight': 0.6})
('memoization', 'prolog', {'weight': 0.6})
('memoization', 'time-invariant system', {'weight': 0.6})
('memoization', 'criss-cross algorithm', {'weight': 0.6})
('memoization', 'revised simplex algorithm', {'weight': 0.6})
('memoization', 'the mathematical association of america', {'weight': 0.6})
('memoization', 'line search', {'weight': 0.6})
('memoization', 'j (programming language)', {'weight': 0.6})
('memoization', 'word wrap', {'weight': 0.6})
('memoization', 'partial evaluation', {'weight': 0.7})
('memoization', 'subset sum problem', {'weight': 0.6})
('memoization', 'integer programming', {'weight': 0.6})
('memoization', 'nucleosome', {'weight': 0.6})
('memoization', 'earley algorithm', {'weight': 0.6})
('memoization', 'referential transparency (computer science)', {'weight': 0.6})
('memoization', 'recursion', {'weight': 0.6})
('memoization', 'mathematica', {'weight': 0.6})
('memoization', 'quicksort', {'weight': 0.6})
('memoization', 'recursion (computer science)', {'weight': 0.6})
('memoization', 'checkerboard', {'weight': 0.6})
('memoization', 'computer science', {'weight': 0.6})
('memoization', 'brute-force search', {'weight': 0.6})
('memoization', 'mathematics', {'weight': 0.6})
('memoization', 'depth-first search', {'weight': 0.6})
('memoization', 'top-down and bottom-up design', {'weight': 0.6})
('memoization', 'correspondence problem', {'weight': 0.6})
('memoization', 'transcription factor', {'weight': 0.6})
('memoization', 'tree decomposition', {'weight': 0.6})
('memoization', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('memoization', 'structural alignment', {'weight': 0.6})
('memoization', 'local convergence', {'weight': 0.6})
('memoization', 'knapsack problem', {'weight': 0.6})
('memoization', 'graph algorithm', {'weight': 0.6})
('memoization', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('memoization', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('memoization', 'hidden markov model', {'weight': 0.6})
('memoization', 'string (computer science)', {'weight': 0.6})
('memoization', 'bioinformatics', {'weight': 0.6})
('memoization', 'computational complexity theory', {'weight': 0.7})
('memoization', 'genetics', {'weight': 0.6})
('memoization', 'mathematical optimization', {'weight': 0.6})
('memoization', 'artificial neural networks', {'weight': 0.6})
('memoization', 'introduction to algorithms', {'weight': 0.6})
('memoization', 'thomas h. cormen', {'weight': 0.6})
('memoization', 'music information retrieval', {'weight': 0.6})
('memoization', 'beat (music)', {'weight': 0.6})
('memoization', 'longest common subsequence problem', {'weight': 0.6})
('memoization', 'convex minimization', {'weight': 0.6})
('memoization', 'successive parabolic interpolation', {'weight': 0.6})
('memoization', 'fibonacci sequence', {'weight': 0.6})
('memoization', 'maximum subarray problem', {'weight': 0.6})
('memoization', 'convex optimization', {'weight': 0.6})
('memoization', 'memoization', {'weight': 1})
('memoization', 'richard bellman', {'weight': 0.6})
('memoization', 'exponential growth', {'weight': 0.6})
('memoization', 'charles e. leiserson', {'weight': 0.6})
('memoization', 'charles erwin wilson', {'weight': 0.6})
('memoization', 'interval scheduling', {'weight': 0.6})
('memoization', 'chart parser', {'weight': 0.6})
('memoization', 'travelling salesman problem', {'weight': 0.6})
('memoization', 'bellman equation', {'weight': 0.6})
('line search', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('line search', 'photoshop', {'weight': 0.6})
('line search', 'sequence alignment', {'weight': 0.6})
('line search', 'flow network', {'weight': 0.6})
('line search', 'ellipsoid method', {'weight': 0.6})
('line search', 'chain matrix multiplication', {'weight': 0.6})
('line search', 'ieee', {'weight': 0.6})
('line search', 'backtracking', {'weight': 0.6})
('line search', 'nonlinear conjugate gradient method', {'weight': 0.6})
('line search', 'dynamic problem', {'weight': 0.6})
('line search', 'trust region', {'weight': 0.6})
('line search', 'function (mathematics)', {'weight': 0.6})
('line search', 'minimum spanning tree', {'weight': 0.6})
('line search', 'context-free grammar', {'weight': 0.6})
('line search', 'branch and cut', {'weight': 0.6})
('line search', 'state variable', {'weight': 0.6})
('line search', 'treewidth', {'weight': 0.6})
('line search', 'optimization algorithms and methods', {'weight': 0.5})
('line search', 'overlapping subproblem', {'weight': 0.6})
('line search', 'taylor & francis', {'weight': 0.6})
('line search', 'cutting-plane method', {'weight': 0.6})
('line search', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('line search', 'method of undetermined coefficients', {'weight': 0.6})
('line search', 'combinatorial optimization', {'weight': 0.6})
('line search', "newton's method in optimization", {'weight': 0.6})
('line search', 'matrix chain multiplication', {'weight': 0.6})
('line search', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('line search', 'dynamic time warping', {'weight': 0.6})
('line search', 'dynamic programming language', {'weight': 0.6})
('line search', 'call-by-need', {'weight': 0.6})
('line search', 'big-o notation', {'weight': 0.6})
('line search', 'comparison of optimization software', {'weight': 0.6})
('line search', 'quadratic programming', {'weight': 0.6})
('line search', 'common lisp', {'weight': 0.6})
('line search', 'barrier function', {'weight': 0.6})
('line search', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('line search', 'gradient descent', {'weight': 0.6})
('line search', 'patricia selinger', {'weight': 0.6})
('line search', 'discounting', {'weight': 0.6})
('line search', 'ronald l. rivest', {'weight': 0.6})
('line search', 'iterative method', {'weight': 0.6})
('line search', 'limited-memory bfgs', {'weight': 0.6})
('line search', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('line search', 'longest common substring problem', {'weight': 0.6})
('line search', 'clifford stein', {'weight': 0.6})
('line search', 'computer chess', {'weight': 0.6})
('line search', 'linear programming', {'weight': 0.6})
('line search', 'bitonic tour', {'weight': 0.6})
('line search', 'linear search problem', {'weight': 0.6})
('line search', 'nelder\xe2\x80\x93mead method', {'weight': 0.7})
('line search', 'systems analysis', {'weight': 0.6})
('line search', 'capital (economics)', {'weight': 0.6})
('line search', 'pattern search (optimization)', {'weight': 0.7})
('line search', 'levenshtein distance', {'weight': 0.6})
('line search', 'nonlinear programming', {'weight': 0.6})
('line search', 'computational complexity of mathematical operations', {'weight': 0.6})
('line search', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('line search', 'gradient', {'weight': 0.6})
('line search', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('line search', 'bulletin of the american mathematical society', {'weight': 0.6})
('line search', 'u.s. english', {'weight': 0.6})
('line search', 'refutation table', {'weight': 0.6})
('line search', 'heuristic algorithm', {'weight': 0.6})
('line search', 'successive linear programming', {'weight': 0.6})
('line search', 'optimal substructure', {'weight': 0.6})
('line search', 'programming language', {'weight': 0.6})
('line search', 'mergesort', {'weight': 0.6})
('line search', "dijkstra's algorithm", {'weight': 0.6})
('line search', 'subgradient method', {'weight': 0.6})
('line search', 'call-by-name', {'weight': 0.6})
('line search', 'longest increasing subsequence problem', {'weight': 0.6})
('line search', 'edward prescott', {'weight': 0.6})
('line search', 'exponential time', {'weight': 0.6})
('line search', 'principle of optimality', {'weight': 0.6})
('line search', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('line search', 'mathematical game', {'weight': 0.6})
('line search', 'nancy stokey', {'weight': 0.6})
('line search', 'approximation algorithm', {'weight': 0.6})
('line search', 'discrete-time', {'weight': 0.6})
('line search', 'cyk algorithm', {'weight': 0.6})
('line search', 'markov decision process', {'weight': 0.6})
('line search', "powell's method", {'weight': 0.6})
('line search', 'wolfe conditions', {'weight': 0.6})
('line search', 'convexity in economics', {'weight': 0.6})
('line search', 'transposition table', {'weight': 0.6})
('line search', 'economics', {'weight': 0.6})
('line search', 'backward induction', {'weight': 0.6})
('line search', 'golden section search', {'weight': 0.7})
('line search', 'edit distance', {'weight': 0.6})
('line search', 'tree structure', {'weight': 0.6})
('line search', 'exchange algorithm', {'weight': 0.6})
('line search', 'dover publications', {'weight': 0.6})
('line search', 'seam carving', {'weight': 0.6})
('line search', 'recursive least squares', {'weight': 0.6})
('line search', 'metaheuristic', {'weight': 0.6})
('line search', 'quasi-newton method', {'weight': 0.6})
('line search', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('line search', 'robert e. lucas', {'weight': 0.6})
('line search', 'non-convexity (economics)', {'weight': 0.6})
('line search', 'sr1 formula', {'weight': 0.6})
('line search', 'mathematical reviews', {'weight': 0.6})
('line search', 'puzzle', {'weight': 0.6})
('line search', 'associative array', {'weight': 0.6})
('line search', 'shortest path problem', {'weight': 0.6})
('line search', 'dynamic algorithm', {'weight': 0.6})
('line search', 'augmented lagrangian method', {'weight': 0.6})
('line search', 'charles delisi', {'weight': 0.6})
('line search', 'greedy algorithm', {'weight': 0.6})
('line search', "karmarkar's algorithm", {'weight': 0.6})
('line search', 'lattice models', {'weight': 0.6})
('line search', 'utility', {'weight': 0.6})
('line search', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('line search', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('line search', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('line search', 'international standard book number', {'weight': 0.6})
('line search', 'secant method', {'weight': 0.7})
('line search', 'undirected graph', {'weight': 0.6})
('line search', 'scheme (programming language)', {'weight': 0.6})
('line search', 'rna structure', {'weight': 0.6})
('line search', 'hanoi', {'weight': 0.6})
('line search', 'perl', {'weight': 0.6})
('line search', 'digital object identifier', {'weight': 0.6})
('line search', 'sequential quadratic programming', {'weight': 0.6})
('line search', "dinic's algorithm", {'weight': 0.6})
('line search', 'pseudo-polynomial time', {'weight': 0.6})
('line search', 'partition problem', {'weight': 0.6})
('line search', 'stochastic programming', {'weight': 0.6})
('line search', 'hill climbing', {'weight': 0.6})
('line search', 'top-down', {'weight': 0.6})
('line search', 'de boor algorithm', {'weight': 0.6})
('line search', 'backtracking line search', {'weight': 0.7})
('line search', 'optimization algorithm', {'weight': 0.6})
('line search', "kruskal's algorithm", {'weight': 0.6})
('line search', 'jacques philippe marie binet', {'weight': 0.6})
('line search', 'tabu search', {'weight': 0.6})
('line search', 'divide and conquer algorithm', {'weight': 0.6})
('line search', "johnson's algorithm", {'weight': 0.6})
('line search', 'evolutionary algorithm', {'weight': 0.6})
('line search', 'clique-width', {'weight': 0.6})
('line search', 'dynamic programming', {'weight': 0.6})
('line search', 'subroutine', {'weight': 0.6})
('line search', 'simulated annealing', {'weight': 0.6})
('line search', 'tower of hanoi', {'weight': 0.6})
('line search', 'branch and bound', {'weight': 0.6})
('line search', 'engineering', {'weight': 0.6})
('line search', 'matroid', {'weight': 0.6})
('line search', 'viterbi algorithm', {'weight': 0.6})
('line search', "lemke's algorithm", {'weight': 0.6})
('line search', 'simplex algorithm', {'weight': 0.6})
('line search', 'local search (optimization)', {'weight': 0.6})
('line search', 'hessian matrix', {'weight': 0.6})
('line search', 'ibm system r', {'weight': 0.6})
('line search', 'penalty method', {'weight': 0.6})
('line search', 'prolog', {'weight': 0.6})
('line search', 'time-invariant system', {'weight': 0.6})
('line search', 'criss-cross algorithm', {'weight': 0.6})
('line search', 'revised simplex algorithm', {'weight': 0.6})
('line search', 'the mathematical association of america', {'weight': 0.6})
('line search', 'line search', {'weight': 1})
('line search', 'j (programming language)', {'weight': 0.6})
('line search', 'word wrap', {'weight': 0.6})
('line search', 'subset sum problem', {'weight': 0.6})
('line search', 'integer programming', {'weight': 0.6})
('line search', 'nucleosome', {'weight': 0.6})
('line search', 'earley algorithm', {'weight': 0.6})
('line search', 'referential transparency (computer science)', {'weight': 0.6})
('line search', 'newton\xe2\x80\x93raphson method', {'weight': 0.7})
('line search', 'recursion', {'weight': 0.6})
('line search', 'mathematica', {'weight': 0.6})
('line search', 'quicksort', {'weight': 0.6})
('line search', 'recursion (computer science)', {'weight': 0.6})
('line search', 'checkerboard', {'weight': 0.6})
('line search', 'computer science', {'weight': 0.6})
('line search', 'brute-force search', {'weight': 0.6})
('line search', 'mathematics', {'weight': 0.6})
('line search', 'depth-first search', {'weight': 0.6})
('line search', 'top-down and bottom-up design', {'weight': 0.6})
('line search', 'correspondence problem', {'weight': 0.6})
('line search', 'transcription factor', {'weight': 0.6})
('line search', 'tree decomposition', {'weight': 0.6})
('line search', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('line search', 'structural alignment', {'weight': 0.6})
('line search', 'local convergence', {'weight': 0.6})
('line search', 'knapsack problem', {'weight': 0.6})
('line search', 'graph algorithm', {'weight': 0.6})
('line search', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('line search', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('line search', 'hidden markov model', {'weight': 0.6})
('line search', 'string (computer science)', {'weight': 0.6})
('line search', 'bioinformatics', {'weight': 0.6})
('line search', 'genetics', {'weight': 0.6})
('line search', 'mathematical optimization', {'weight': 0.6})
('line search', 'artificial neural networks', {'weight': 0.6})
('line search', 'introduction to algorithms', {'weight': 0.6})
('line search', 'thomas h. cormen', {'weight': 0.6})
('line search', 'music information retrieval', {'weight': 0.6})
('line search', 'beat (music)', {'weight': 0.6})
('line search', 'longest common subsequence problem', {'weight': 0.6})
('line search', 'convex minimization', {'weight': 0.6})
('line search', 'successive parabolic interpolation', {'weight': 0.6})
('line search', 'fibonacci sequence', {'weight': 0.6})
('line search', 'maximum subarray problem', {'weight': 0.6})
('line search', 'convex optimization', {'weight': 0.6})
('line search', 'memoization', {'weight': 0.6})
('line search', 'richard bellman', {'weight': 0.6})
('line search', 'exponential growth', {'weight': 0.6})
('line search', 'charles e. leiserson', {'weight': 0.6})
('line search', 'charles erwin wilson', {'weight': 0.6})
('line search', 'interval scheduling', {'weight': 0.6})
('line search', 'chart parser', {'weight': 0.6})
('line search', 'travelling salesman problem', {'weight': 0.6})
('line search', 'bellman equation', {'weight': 0.6})
('j (programming language)', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('j (programming language)', 'photoshop', {'weight': 0.6})
('j (programming language)', 'sequence alignment', {'weight': 0.6})
('j (programming language)', 'flow network', {'weight': 0.6})
('j (programming language)', 'ellipsoid method', {'weight': 0.6})
('j (programming language)', 'chain matrix multiplication', {'weight': 0.6})
('j (programming language)', 'ieee', {'weight': 0.6})
('j (programming language)', 'backtracking', {'weight': 0.6})
('j (programming language)', 'nonlinear conjugate gradient method', {'weight': 0.6})
('j (programming language)', 'array programming languages', {'weight': 0.5})
('j (programming language)', 'dynamic problem', {'weight': 0.6})
('j (programming language)', 'trust region', {'weight': 0.6})
('j (programming language)', 'function (mathematics)', {'weight': 0.6})
('j (programming language)', 'a+ (programming language)', {'weight': 0.7})
('j (programming language)', 'minimum spanning tree', {'weight': 0.6})
('j (programming language)', 'context-free grammar', {'weight': 0.6})
('j (programming language)', 'recursive least squares', {'weight': 0.6})
('j (programming language)', 'branch and cut', {'weight': 0.6})
('j (programming language)', 'state variable', {'weight': 0.6})
('j (programming language)', 'class-based programming languages', {'weight': 0.5})
('j (programming language)', 'treewidth', {'weight': 0.6})
('j (programming language)', 'function-level languages', {'weight': 0.5})
('j (programming language)', 'overlapping subproblem', {'weight': 0.6})
('j (programming language)', 'taylor & francis', {'weight': 0.6})
('j (programming language)', 'cutting-plane method', {'weight': 0.6})
('j (programming language)', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('j (programming language)', 'method of undetermined coefficients', {'weight': 0.6})
('j (programming language)', 'combinatorial optimization', {'weight': 0.6})
('j (programming language)', "newton's method in optimization", {'weight': 0.6})
('j (programming language)', 'matrix chain multiplication', {'weight': 0.6})
('j (programming language)', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('j (programming language)', 'dynamic time warping', {'weight': 0.6})
('j (programming language)', 'dynamic programming language', {'weight': 0.6})
('j (programming language)', 'call-by-need', {'weight': 0.6})
('j (programming language)', 'big-o notation', {'weight': 0.6})
('j (programming language)', 'comparison of optimization software', {'weight': 0.6})
('j (programming language)', 'quadratic programming', {'weight': 0.6})
('j (programming language)', 'common lisp', {'weight': 0.6})
('j (programming language)', 'barrier function', {'weight': 0.6})
('j (programming language)', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('j (programming language)', 'gradient descent', {'weight': 0.6})
('j (programming language)', 'patricia selinger', {'weight': 0.6})
('j (programming language)', 'discounting', {'weight': 0.6})
('j (programming language)', 'ronald l. rivest', {'weight': 0.6})
('j (programming language)', 'iterative method', {'weight': 0.6})
('j (programming language)', 'limited-memory bfgs', {'weight': 0.6})
('j (programming language)', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('j (programming language)', 'longest common substring problem', {'weight': 0.6})
('j (programming language)', 'clifford stein', {'weight': 0.6})
('j (programming language)', 'computer chess', {'weight': 0.6})
('j (programming language)', 'linear programming', {'weight': 0.6})
('j (programming language)', 'bitonic tour', {'weight': 0.6})
('j (programming language)', 'linear search problem', {'weight': 0.6})
('j (programming language)', 'apl programming language family', {'weight': 0.5})
('j (programming language)', 'systems analysis', {'weight': 0.6})
('j (programming language)', 'capital (economics)', {'weight': 0.6})
('j (programming language)', 'levenshtein distance', {'weight': 0.6})
('j (programming language)', 'nonlinear programming', {'weight': 0.6})
('j (programming language)', 'computational complexity of mathematical operations', {'weight': 0.6})
('j (programming language)', 'structural alignment', {'weight': 0.6})
('j (programming language)', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('j (programming language)', 'gradient', {'weight': 0.6})
('j (programming language)', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('j (programming language)', 'multi-paradigm programming languages', {'weight': 0.5})
('j (programming language)', 'bulletin of the american mathematical society', {'weight': 0.6})
('j (programming language)', 'robert e. lucas', {'weight': 0.6})
('j (programming language)', 'u.s. english', {'weight': 0.6})
('j (programming language)', 'refutation table', {'weight': 0.6})
('j (programming language)', 'heuristic algorithm', {'weight': 0.6})
('j (programming language)', 'successive linear programming', {'weight': 0.6})
('j (programming language)', 'optimal substructure', {'weight': 0.6})
('j (programming language)', 'programming language', {'weight': 0.6})
('j (programming language)', 'mergesort', {'weight': 0.6})
('j (programming language)', "dijkstra's algorithm", {'weight': 0.6})
('j (programming language)', 'subgradient method', {'weight': 0.6})
('j (programming language)', 'call-by-name', {'weight': 0.6})
('j (programming language)', 'longest increasing subsequence problem', {'weight': 0.6})
('j (programming language)', 'edward prescott', {'weight': 0.6})
('j (programming language)', 'numerical programming languages', {'weight': 0.5})
('j (programming language)', 'exponential time', {'weight': 0.6})
('j (programming language)', 'principle of optimality', {'weight': 0.6})
('j (programming language)', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('j (programming language)', 'mathematical game', {'weight': 0.6})
('j (programming language)', 'nancy stokey', {'weight': 0.6})
('j (programming language)', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('j (programming language)', 'approximation algorithm', {'weight': 0.6})
('j (programming language)', 'discrete-time', {'weight': 0.6})
('j (programming language)', 'cyk algorithm', {'weight': 0.6})
('j (programming language)', 'markov decision process', {'weight': 0.6})
('j (programming language)', "powell's method", {'weight': 0.6})
('j (programming language)', 'wolfe conditions', {'weight': 0.6})
('j (programming language)', 'convexity in economics', {'weight': 0.6})
('j (programming language)', 'transposition table', {'weight': 0.6})
('j (programming language)', 'economics', {'weight': 0.6})
('j (programming language)', 'backward induction', {'weight': 0.6})
('j (programming language)', 'golden section search', {'weight': 0.6})
('j (programming language)', 'edit distance', {'weight': 0.6})
('j (programming language)', 'tree structure', {'weight': 0.6})
('j (programming language)', 'exchange algorithm', {'weight': 0.6})
('j (programming language)', 'dover publications', {'weight': 0.6})
('j (programming language)', 'seam carving', {'weight': 0.6})
('j (programming language)', 'hidden markov model', {'weight': 0.6})
('j (programming language)', 'metaheuristic', {'weight': 0.6})
('j (programming language)', 'quasi-newton method', {'weight': 0.6})
('j (programming language)', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('j (programming language)', 'object-oriented programming languages', {'weight': 0.5})
('j (programming language)', 'non-convexity (economics)', {'weight': 0.6})
('j (programming language)', 'sr1 formula', {'weight': 0.6})
('j (programming language)', 'mathematical reviews', {'weight': 0.6})
('j (programming language)', 'puzzle', {'weight': 0.6})
('j (programming language)', 'associative array', {'weight': 0.6})
('j (programming language)', 'shortest path problem', {'weight': 0.6})
('j (programming language)', 'dynamic algorithm', {'weight': 0.6})
('j (programming language)', 'augmented lagrangian method', {'weight': 0.6})
('j (programming language)', 'charles delisi', {'weight': 0.6})
('j (programming language)', 'greedy algorithm', {'weight': 0.6})
('j (programming language)', "karmarkar's algorithm", {'weight': 0.6})
('j (programming language)', 'lattice models', {'weight': 0.6})
('j (programming language)', 'utility', {'weight': 0.6})
('j (programming language)', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('j (programming language)', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('j (programming language)', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('j (programming language)', 'international standard book number', {'weight': 0.6})
('j (programming language)', 'undirected graph', {'weight': 0.6})
('j (programming language)', 'scheme (programming language)', {'weight': 0.6})
('j (programming language)', 'rna structure', {'weight': 0.6})
('j (programming language)', 'hanoi', {'weight': 0.6})
('j (programming language)', 'perl', {'weight': 0.6})
('j (programming language)', 'digital object identifier', {'weight': 0.6})
('j (programming language)', 'sequential quadratic programming', {'weight': 0.6})
('j (programming language)', "dinic's algorithm", {'weight': 0.6})
('j (programming language)', 'pseudo-polynomial time', {'weight': 0.6})
('j (programming language)', 'partition problem', {'weight': 0.6})
('j (programming language)', 'stochastic programming', {'weight': 0.6})
('j (programming language)', 'hill climbing', {'weight': 0.6})
('j (programming language)', 'top-down', {'weight': 0.6})
('j (programming language)', 'de boor algorithm', {'weight': 0.6})
('j (programming language)', 'optimization algorithm', {'weight': 0.6})
('j (programming language)', "kruskal's algorithm", {'weight': 0.6})
('j (programming language)', 'jacques philippe marie binet', {'weight': 0.6})
('j (programming language)', 'tabu search', {'weight': 0.6})
('j (programming language)', 'divide and conquer algorithm', {'weight': 0.6})
('j (programming language)', "johnson's algorithm", {'weight': 0.6})
('j (programming language)', 'evolutionary algorithm', {'weight': 0.6})
('j (programming language)', 'clique-width', {'weight': 0.6})
('j (programming language)', 'dynamic programming', {'weight': 0.6})
('j (programming language)', 'subroutine', {'weight': 0.6})
('j (programming language)', 'simulated annealing', {'weight': 0.6})
('j (programming language)', 'tower of hanoi', {'weight': 0.6})
('j (programming language)', 'branch and bound', {'weight': 0.6})
('j (programming language)', 'engineering', {'weight': 0.6})
('j (programming language)', 'matroid', {'weight': 0.6})
('j (programming language)', 'viterbi algorithm', {'weight': 0.6})
('j (programming language)', "lemke's algorithm", {'weight': 0.6})
('j (programming language)', 'simplex algorithm', {'weight': 0.6})
('j (programming language)', 'local search (optimization)', {'weight': 0.6})
('j (programming language)', 'hessian matrix', {'weight': 0.6})
('j (programming language)', 'ibm system r', {'weight': 0.6})
('j (programming language)', 'penalty method', {'weight': 0.6})
('j (programming language)', 'prolog', {'weight': 0.6})
('j (programming language)', 'time-invariant system', {'weight': 0.6})
('j (programming language)', 'criss-cross algorithm', {'weight': 0.6})
('j (programming language)', 'revised simplex algorithm', {'weight': 0.6})
('j (programming language)', 'the mathematical association of america', {'weight': 0.6})
('j (programming language)', 'line search', {'weight': 0.6})
('j (programming language)', 'j (programming language)', {'weight': 1})
('j (programming language)', 'word wrap', {'weight': 0.6})
('j (programming language)', 'subset sum problem', {'weight': 0.6})
('j (programming language)', 'integer programming', {'weight': 0.6})
('j (programming language)', 'nucleosome', {'weight': 0.6})
('j (programming language)', 'q', {'weight': 0.7})
('j (programming language)', 'earley algorithm', {'weight': 0.6})
('j (programming language)', 'referential transparency (computer science)', {'weight': 0.6})
('j (programming language)', 'recursion', {'weight': 0.6})
('j (programming language)', 'k (programming language)', {'weight': 0.7})
('j (programming language)', 'mathematica', {'weight': 0.6})
('j (programming language)', 'quicksort', {'weight': 0.6})
('j (programming language)', 'recursion (computer science)', {'weight': 0.6})
('j (programming language)', 'checkerboard', {'weight': 0.6})
('j (programming language)', 'computer science', {'weight': 0.6})
('j (programming language)', 'brute-force search', {'weight': 0.6})
('j (programming language)', 'mathematics', {'weight': 0.6})
('j (programming language)', 'depth-first search', {'weight': 0.6})
('j (programming language)', 'top-down and bottom-up design', {'weight': 0.6})
('j (programming language)', 'correspondence problem', {'weight': 0.6})
('j (programming language)', 'transcription factor', {'weight': 0.6})
('j (programming language)', 'tree decomposition', {'weight': 0.6})
('j (programming language)', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('j (programming language)', 'functional languages', {'weight': 0.5})
('j (programming language)', 'local convergence', {'weight': 0.6})
('j (programming language)', 'knapsack problem', {'weight': 0.6})
('j (programming language)', 'graph algorithm', {'weight': 0.6})
('j (programming language)', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('j (programming language)', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('j (programming language)', 'dynamically typed programming languages', {'weight': 0.5})
('j (programming language)', 'string (computer science)', {'weight': 0.6})
('j (programming language)', 'bioinformatics', {'weight': 0.6})
('j (programming language)', 'genetics', {'weight': 0.6})
('j (programming language)', 'mathematical optimization', {'weight': 0.6})
('j (programming language)', 'artificial neural networks', {'weight': 0.6})
('j (programming language)', 'introduction to algorithms', {'weight': 0.6})
('j (programming language)', 'thomas h. cormen', {'weight': 0.6})
('j (programming language)', 'music information retrieval', {'weight': 0.6})
('j (programming language)', 'beat (music)', {'weight': 0.6})
('j (programming language)', 'longest common subsequence problem', {'weight': 0.6})
('j (programming language)', 'convex minimization', {'weight': 0.6})
('j (programming language)', 'successive parabolic interpolation', {'weight': 0.6})
('j (programming language)', 'fibonacci sequence', {'weight': 0.6})
('j (programming language)', 'maximum subarray problem', {'weight': 0.6})
('j (programming language)', 'convex optimization', {'weight': 0.6})
('j (programming language)', 'memoization', {'weight': 0.6})
('j (programming language)', 'richard bellman', {'weight': 0.6})
('j (programming language)', 'exponential growth', {'weight': 0.6})
('j (programming language)', 'charles e. leiserson', {'weight': 0.6})
('j (programming language)', 'charles erwin wilson', {'weight': 0.6})
('j (programming language)', 'interval scheduling', {'weight': 0.6})
('j (programming language)', 'chart parser', {'weight': 0.6})
('j (programming language)', 'travelling salesman problem', {'weight': 0.6})
('j (programming language)', 'bellman equation', {'weight': 0.6})
('graph algorithm', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('graph algorithm', 'photoshop', {'weight': 0.6})
('graph algorithm', 'sequence alignment', {'weight': 0.6})
('graph algorithm', 'flow network', {'weight': 0.6})
('graph algorithm', 'ellipsoid method', {'weight': 0.6})
('graph algorithm', 'chain matrix multiplication', {'weight': 0.6})
('graph algorithm', 'ieee', {'weight': 0.6})
('graph algorithm', 'list of terms relating to algorithms and data structures', {'weight': 0.7})
('graph algorithm', 'backtracking', {'weight': 0.6})
('graph algorithm', 'heuristic', {'weight': 0.7})
('graph algorithm', 'nonlinear conjugate gradient method', {'weight': 0.6})
('graph algorithm', 'dynamic problem', {'weight': 0.6})
('graph algorithm', 'trust region', {'weight': 0.6})
('graph algorithm', 'function (mathematics)', {'weight': 0.6})
('graph algorithm', 'minimum spanning tree', {'weight': 0.6})
('graph algorithm', 'context-free grammar', {'weight': 0.6})
('graph algorithm', 'branch and cut', {'weight': 0.6})
('graph algorithm', 'state variable', {'weight': 0.6})
('graph algorithm', 'treewidth', {'weight': 0.6})
('graph algorithm', 'overlapping subproblem', {'weight': 0.6})
('graph algorithm', 'taylor & francis', {'weight': 0.6})
('graph algorithm', 'cutting-plane method', {'weight': 0.6})
('graph algorithm', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('graph algorithm', 'method of undetermined coefficients', {'weight': 0.6})
('graph algorithm', 'combinatorial optimization', {'weight': 0.6})
('graph algorithm', "newton's method in optimization", {'weight': 0.6})
('graph algorithm', 'matrix chain multiplication', {'weight': 0.6})
('graph algorithm', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('graph algorithm', 'dynamic time warping', {'weight': 0.6})
('graph algorithm', 'dynamic programming language', {'weight': 0.6})
('graph algorithm', 'call-by-need', {'weight': 0.6})
('graph algorithm', 'big-o notation', {'weight': 0.6})
('graph algorithm', 'comparison of optimization software', {'weight': 0.6})
('graph algorithm', 'quadratic programming', {'weight': 0.6})
('graph algorithm', 'common lisp', {'weight': 0.6})
('graph algorithm', 'barrier function', {'weight': 0.6})
('graph algorithm', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('graph algorithm', 'gradient descent', {'weight': 0.6})
('graph algorithm', 'patricia selinger', {'weight': 0.6})
('graph algorithm', 'discounting', {'weight': 0.6})
('graph algorithm', 'ronald l. rivest', {'weight': 0.6})
('graph algorithm', 'iterative method', {'weight': 0.6})
('graph algorithm', 'limited-memory bfgs', {'weight': 0.6})
('graph algorithm', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('graph algorithm', 'longest common substring problem', {'weight': 0.6})
('graph algorithm', 'list of machine learning algorithms', {'weight': 0.7})
('graph algorithm', 'clifford stein', {'weight': 0.6})
('graph algorithm', 'computer chess', {'weight': 0.6})
('graph algorithm', 'linear programming', {'weight': 0.6})
('graph algorithm', 'bitonic tour', {'weight': 0.6})
('graph algorithm', 'linear search problem', {'weight': 0.6})
('graph algorithm', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('graph algorithm', 'systems analysis', {'weight': 0.6})
('graph algorithm', 'capital (economics)', {'weight': 0.6})
('graph algorithm', 'levenshtein distance', {'weight': 0.6})
('graph algorithm', 'nonlinear programming', {'weight': 0.6})
('graph algorithm', 'computational complexity of mathematical operations', {'weight': 0.6})
('graph algorithm', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('graph algorithm', 'gradient', {'weight': 0.6})
('graph algorithm', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('graph algorithm', 'list of algorithm general topics', {'weight': 0.7})
('graph algorithm', 'bulletin of the american mathematical society', {'weight': 0.6})
('graph algorithm', 'u.s. english', {'weight': 0.6})
('graph algorithm', 'refutation table', {'weight': 0.6})
('graph algorithm', 'heuristic algorithm', {'weight': 0.6})
('graph algorithm', 'successive linear programming', {'weight': 0.6})
('graph algorithm', 'optimal substructure', {'weight': 0.6})
('graph algorithm', 'programming language', {'weight': 0.6})
('graph algorithm', 'mergesort', {'weight': 0.6})
('graph algorithm', "dijkstra's algorithm", {'weight': 0.6})
('graph algorithm', 'subgradient method', {'weight': 0.6})
('graph algorithm', 'call-by-name', {'weight': 0.6})
('graph algorithm', 'longest increasing subsequence problem', {'weight': 0.6})
('graph algorithm', 'edward prescott', {'weight': 0.6})
('graph algorithm', 'exponential time', {'weight': 0.6})
('graph algorithm', 'principle of optimality', {'weight': 0.6})
('graph algorithm', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('graph algorithm', 'mathematical game', {'weight': 0.6})
('graph algorithm', 'nancy stokey', {'weight': 0.6})
('graph algorithm', 'approximation algorithm', {'weight': 0.6})
('graph algorithm', 'discrete-time', {'weight': 0.6})
('graph algorithm', 'cyk algorithm', {'weight': 0.6})
('graph algorithm', 'markov decision process', {'weight': 0.6})
('graph algorithm', "powell's method", {'weight': 0.6})
('graph algorithm', 'wolfe conditions', {'weight': 0.6})
('graph algorithm', 'convexity in economics', {'weight': 0.6})
('graph algorithm', 'transposition table', {'weight': 0.6})
('graph algorithm', 'economics', {'weight': 0.6})
('graph algorithm', 'backward induction', {'weight': 0.6})
('graph algorithm', 'golden section search', {'weight': 0.6})
('graph algorithm', 'edit distance', {'weight': 0.6})
('graph algorithm', 'tree structure', {'weight': 0.6})
('graph algorithm', 'exchange algorithm', {'weight': 0.6})
('graph algorithm', 'dover publications', {'weight': 0.6})
('graph algorithm', 'seam carving', {'weight': 0.6})
('graph algorithm', 'recursive least squares', {'weight': 0.6})
('graph algorithm', 'metaheuristic', {'weight': 0.6})
('graph algorithm', 'quasi-newton method', {'weight': 0.6})
('graph algorithm', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('graph algorithm', 'robert e. lucas', {'weight': 0.6})
('graph algorithm', 'non-convexity (economics)', {'weight': 0.6})
('graph algorithm', 'sr1 formula', {'weight': 0.6})
('graph algorithm', 'mathematical reviews', {'weight': 0.6})
('graph algorithm', 'puzzle', {'weight': 0.6})
('graph algorithm', 'associative array', {'weight': 0.6})
('graph algorithm', 'shortest path problem', {'weight': 0.6})
('graph algorithm', 'dynamic algorithm', {'weight': 0.6})
('graph algorithm', 'augmented lagrangian method', {'weight': 0.6})
('graph algorithm', 'charles delisi', {'weight': 0.6})
('graph algorithm', 'greedy algorithm', {'weight': 0.6})
('graph algorithm', "karmarkar's algorithm", {'weight': 0.6})
('graph algorithm', 'interval scheduling', {'weight': 0.6})
('graph algorithm', 'lattice models', {'weight': 0.6})
('graph algorithm', 'utility', {'weight': 0.6})
('graph algorithm', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('graph algorithm', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('graph algorithm', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('graph algorithm', 'international standard book number', {'weight': 0.6})
('graph algorithm', 'undirected graph', {'weight': 0.6})
('graph algorithm', 'scheme (programming language)', {'weight': 0.6})
('graph algorithm', 'rna structure', {'weight': 0.6})
('graph algorithm', 'hanoi', {'weight': 0.6})
('graph algorithm', 'mathematics-related lists', {'weight': 0.5})
('graph algorithm', 'perl', {'weight': 0.6})
('graph algorithm', 'digital object identifier', {'weight': 0.6})
('graph algorithm', 'sequential quadratic programming', {'weight': 0.6})
('graph algorithm', "dinic's algorithm", {'weight': 0.6})
('graph algorithm', 'pseudo-polynomial time', {'weight': 0.6})
('graph algorithm', 'partition problem', {'weight': 0.6})
('graph algorithm', 'stochastic programming', {'weight': 0.6})
('graph algorithm', 'hill climbing', {'weight': 0.6})
('graph algorithm', 'top-down', {'weight': 0.6})
('graph algorithm', 'de boor algorithm', {'weight': 0.6})
('graph algorithm', 'optimization algorithm', {'weight': 0.6})
('graph algorithm', "kruskal's algorithm", {'weight': 0.6})
('graph algorithm', 'list of data structures', {'weight': 0.7})
('graph algorithm', 'jacques philippe marie binet', {'weight': 0.6})
('graph algorithm', 'tabu search', {'weight': 0.6})
('graph algorithm', 'divide and conquer algorithm', {'weight': 0.6})
('graph algorithm', "johnson's algorithm", {'weight': 0.6})
('graph algorithm', 'evolutionary algorithm', {'weight': 0.6})
('graph algorithm', 'clique-width', {'weight': 0.6})
('graph algorithm', 'dynamic programming', {'weight': 0.6})
('graph algorithm', 'subroutine', {'weight': 0.6})
('graph algorithm', 'simulated annealing', {'weight': 0.6})
('graph algorithm', 'tower of hanoi', {'weight': 0.6})
('graph algorithm', 'branch and bound', {'weight': 0.6})
('graph algorithm', 'engineering', {'weight': 0.6})
('graph algorithm', 'matroid', {'weight': 0.6})
('graph algorithm', 'viterbi algorithm', {'weight': 0.6})
('graph algorithm', "lemke's algorithm", {'weight': 0.6})
('graph algorithm', 'simplex algorithm', {'weight': 0.6})
('graph algorithm', 'local search (optimization)', {'weight': 0.6})
('graph algorithm', 'hessian matrix', {'weight': 0.6})
('graph algorithm', 'ibm system r', {'weight': 0.6})
('graph algorithm', 'penalty method', {'weight': 0.6})
('graph algorithm', 'prolog', {'weight': 0.6})
('graph algorithm', 'time-invariant system', {'weight': 0.6})
('graph algorithm', 'criss-cross algorithm', {'weight': 0.6})
('graph algorithm', 'revised simplex algorithm', {'weight': 0.6})
('graph algorithm', 'the mathematical association of america', {'weight': 0.6})
('graph algorithm', 'line search', {'weight': 0.6})
('graph algorithm', 'j (programming language)', {'weight': 0.6})
('graph algorithm', 'word wrap', {'weight': 0.6})
('graph algorithm', 'subset sum problem', {'weight': 0.6})
('graph algorithm', 'integer programming', {'weight': 0.6})
('graph algorithm', 'nucleosome', {'weight': 0.6})
('graph algorithm', 'earley algorithm', {'weight': 0.6})
('graph algorithm', 'referential transparency (computer science)', {'weight': 0.6})
('graph algorithm', 'recursion', {'weight': 0.6})
('graph algorithm', 'mathematica', {'weight': 0.6})
('graph algorithm', 'quicksort', {'weight': 0.6})
('graph algorithm', 'recursion (computer science)', {'weight': 0.6})
('graph algorithm', 'checkerboard', {'weight': 0.6})
('graph algorithm', 'computer science', {'weight': 0.6})
('graph algorithm', 'brute-force search', {'weight': 0.6})
('graph algorithm', 'mathematics', {'weight': 0.6})
('graph algorithm', 'depth-first search', {'weight': 0.6})
('graph algorithm', 'top-down and bottom-up design', {'weight': 0.6})
('graph algorithm', 'correspondence problem', {'weight': 0.6})
('graph algorithm', 'transcription factor', {'weight': 0.6})
('graph algorithm', 'tree decomposition', {'weight': 0.6})
('graph algorithm', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('graph algorithm', 'structural alignment', {'weight': 0.6})
('graph algorithm', 'local convergence', {'weight': 0.6})
('graph algorithm', 'knapsack problem', {'weight': 0.6})
('graph algorithm', 'graph algorithm', {'weight': 1})
('graph algorithm', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('graph algorithm', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('graph algorithm', 'hidden markov model', {'weight': 0.6})
('graph algorithm', 'string (computer science)', {'weight': 0.6})
('graph algorithm', 'bioinformatics', {'weight': 0.6})
('graph algorithm', 'genetics', {'weight': 0.6})
('graph algorithm', 'mathematical optimization', {'weight': 0.6})
('graph algorithm', 'artificial neural networks', {'weight': 0.6})
('graph algorithm', 'introduction to algorithms', {'weight': 0.6})
('graph algorithm', 'thomas h. cormen', {'weight': 0.6})
('graph algorithm', 'music information retrieval', {'weight': 0.6})
('graph algorithm', 'beat (music)', {'weight': 0.6})
('graph algorithm', 'longest common subsequence problem', {'weight': 0.6})
('graph algorithm', 'convex minimization', {'weight': 0.6})
('graph algorithm', 'successive parabolic interpolation', {'weight': 0.6})
('graph algorithm', 'fibonacci sequence', {'weight': 0.6})
('graph algorithm', 'maximum subarray problem', {'weight': 0.6})
('graph algorithm', 'convex optimization', {'weight': 0.6})
('graph algorithm', 'memoization', {'weight': 0.6})
('graph algorithm', 'richard bellman', {'weight': 0.6})
('graph algorithm', 'exponential growth', {'weight': 0.6})
('graph algorithm', 'charles e. leiserson', {'weight': 0.6})
('graph algorithm', 'charles erwin wilson', {'weight': 0.6})
('graph algorithm', 'algorithms', {'weight': 0.5})
('graph algorithm', 'chart parser', {'weight': 0.6})
('graph algorithm', 'travelling salesman problem', {'weight': 0.6})
('graph algorithm', 'bellman equation', {'weight': 0.6})
('nucleosome', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('nucleosome', 'photoshop', {'weight': 0.6})
('nucleosome', 'sequence alignment', {'weight': 0.6})
('nucleosome', 'flow network', {'weight': 0.6})
('nucleosome', 'ellipsoid method', {'weight': 0.6})
('nucleosome', 'chain matrix multiplication', {'weight': 0.6})
('nucleosome', 'ieee', {'weight': 0.6})
('nucleosome', 'backtracking', {'weight': 0.6})
('nucleosome', 'nonlinear conjugate gradient method', {'weight': 0.6})
('nucleosome', 'dynamic problem', {'weight': 0.6})
('nucleosome', 'trust region', {'weight': 0.6})
('nucleosome', 'function (mathematics)', {'weight': 0.6})
('nucleosome', 'minimum spanning tree', {'weight': 0.6})
('nucleosome', 'context-free grammar', {'weight': 0.6})
('nucleosome', 'branch and cut', {'weight': 0.6})
('nucleosome', 'state variable', {'weight': 0.6})
('nucleosome', 'treewidth', {'weight': 0.6})
('nucleosome', 'overlapping subproblem', {'weight': 0.6})
('nucleosome', 'taylor & francis', {'weight': 0.6})
('nucleosome', 'cutting-plane method', {'weight': 0.6})
('nucleosome', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('nucleosome', 'method of undetermined coefficients', {'weight': 0.6})
('nucleosome', 'combinatorial optimization', {'weight': 0.6})
('nucleosome', "newton's method in optimization", {'weight': 0.6})
('nucleosome', 'matrix chain multiplication', {'weight': 0.6})
('nucleosome', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('nucleosome', 'dynamic time warping', {'weight': 0.6})
('nucleosome', 'dynamic programming language', {'weight': 0.6})
('nucleosome', 'call-by-need', {'weight': 0.6})
('nucleosome', 'big-o notation', {'weight': 0.6})
('nucleosome', 'comparison of optimization software', {'weight': 0.6})
('nucleosome', 'quadratic programming', {'weight': 0.6})
('nucleosome', 'common lisp', {'weight': 0.6})
('nucleosome', 'barrier function', {'weight': 0.6})
('nucleosome', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('nucleosome', 'gradient descent', {'weight': 0.6})
('nucleosome', 'patricia selinger', {'weight': 0.6})
('nucleosome', 'discounting', {'weight': 0.6})
('nucleosome', 'ronald l. rivest', {'weight': 0.6})
('nucleosome', 'iterative method', {'weight': 0.6})
('nucleosome', 'limited-memory bfgs', {'weight': 0.6})
('nucleosome', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('nucleosome', 'longest common substring problem', {'weight': 0.6})
('nucleosome', 'clifford stein', {'weight': 0.6})
('nucleosome', 'computer chess', {'weight': 0.6})
('nucleosome', 'linear programming', {'weight': 0.6})
('nucleosome', 'bitonic tour', {'weight': 0.6})
('nucleosome', 'linear search problem', {'weight': 0.6})
('nucleosome', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('nucleosome', 'systems analysis', {'weight': 0.6})
('nucleosome', 'capital (economics)', {'weight': 0.6})
('nucleosome', 'levenshtein distance', {'weight': 0.6})
('nucleosome', 'nonlinear programming', {'weight': 0.6})
('nucleosome', 'computational complexity of mathematical operations', {'weight': 0.6})
('nucleosome', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('nucleosome', 'gradient', {'weight': 0.6})
('nucleosome', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('nucleosome', 'bulletin of the american mathematical society', {'weight': 0.6})
('nucleosome', 'u.s. english', {'weight': 0.6})
('nucleosome', 'refutation table', {'weight': 0.6})
('nucleosome', 'heuristic algorithm', {'weight': 0.6})
('nucleosome', 'successive linear programming', {'weight': 0.6})
('nucleosome', 'optimal substructure', {'weight': 0.6})
('nucleosome', 'programming language', {'weight': 0.6})
('nucleosome', 'mergesort', {'weight': 0.6})
('nucleosome', "dijkstra's algorithm", {'weight': 0.6})
('nucleosome', 'subgradient method', {'weight': 0.6})
('nucleosome', 'call-by-name', {'weight': 0.6})
('nucleosome', 'longest increasing subsequence problem', {'weight': 0.6})
('nucleosome', 'edward prescott', {'weight': 0.6})
('nucleosome', 'exponential time', {'weight': 0.6})
('nucleosome', 'principle of optimality', {'weight': 0.6})
('nucleosome', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('nucleosome', 'mathematical game', {'weight': 0.6})
('nucleosome', 'nancy stokey', {'weight': 0.6})
('nucleosome', 'approximation algorithm', {'weight': 0.6})
('nucleosome', 'discrete-time', {'weight': 0.6})
('nucleosome', 'cyk algorithm', {'weight': 0.6})
('nucleosome', 'markov decision process', {'weight': 0.6})
('nucleosome', 'epigenetics', {'weight': 0.5})
('nucleosome', 'wolfe conditions', {'weight': 0.6})
('nucleosome', 'convexity in economics', {'weight': 0.6})
('nucleosome', 'transposition table', {'weight': 0.6})
('nucleosome', 'economics', {'weight': 0.6})
('nucleosome', 'backward induction', {'weight': 0.6})
('nucleosome', 'golden section search', {'weight': 0.6})
('nucleosome', 'edit distance', {'weight': 0.6})
('nucleosome', 'tree structure', {'weight': 0.6})
('nucleosome', 'exchange algorithm', {'weight': 0.6})
('nucleosome', 'dover publications', {'weight': 0.6})
('nucleosome', 'seam carving', {'weight': 0.6})
('nucleosome', 'recursive least squares', {'weight': 0.6})
('nucleosome', 'metaheuristic', {'weight': 0.6})
('nucleosome', 'quasi-newton method', {'weight': 0.6})
('nucleosome', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('nucleosome', 'robert e. lucas', {'weight': 0.6})
('nucleosome', 'non-convexity (economics)', {'weight': 0.6})
('nucleosome', 'sr1 formula', {'weight': 0.6})
('nucleosome', 'mathematical reviews', {'weight': 0.6})
('nucleosome', 'puzzle', {'weight': 0.6})
('nucleosome', 'associative array', {'weight': 0.6})
('nucleosome', 'shortest path problem', {'weight': 0.6})
('nucleosome', 'dynamic algorithm', {'weight': 0.6})
('nucleosome', 'augmented lagrangian method', {'weight': 0.6})
('nucleosome', 'charles delisi', {'weight': 0.6})
('nucleosome', 'greedy algorithm', {'weight': 0.6})
('nucleosome', "karmarkar's algorithm", {'weight': 0.6})
('nucleosome', 'lattice models', {'weight': 0.6})
('nucleosome', 'utility', {'weight': 0.6})
('nucleosome', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('nucleosome', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('nucleosome', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('nucleosome', 'international standard book number', {'weight': 0.6})
('nucleosome', 'undirected graph', {'weight': 0.6})
('nucleosome', 'scheme (programming language)', {'weight': 0.6})
('nucleosome', 'rna structure', {'weight': 0.6})
('nucleosome', 'hanoi', {'weight': 0.6})
('nucleosome', 'perl', {'weight': 0.6})
('nucleosome', 'digital object identifier', {'weight': 0.6})
('nucleosome', 'sequential quadratic programming', {'weight': 0.6})
('nucleosome', "dinic's algorithm", {'weight': 0.6})
('nucleosome', 'pseudo-polynomial time', {'weight': 0.6})
('nucleosome', 'partition problem', {'weight': 0.6})
('nucleosome', 'stochastic programming', {'weight': 0.6})
('nucleosome', 'hill climbing', {'weight': 0.6})
('nucleosome', 'top-down', {'weight': 0.6})
('nucleosome', 'de boor algorithm', {'weight': 0.6})
('nucleosome', 'optimization algorithm', {'weight': 0.6})
('nucleosome', "kruskal's algorithm", {'weight': 0.6})
('nucleosome', 'jacques philippe marie binet', {'weight': 0.6})
('nucleosome', 'tabu search', {'weight': 0.6})
('nucleosome', 'divide and conquer algorithm', {'weight': 0.6})
('nucleosome', "johnson's algorithm", {'weight': 0.6})
('nucleosome', 'evolutionary algorithm', {'weight': 0.6})
('nucleosome', 'clique-width', {'weight': 0.6})
('nucleosome', 'dynamic programming', {'weight': 0.6})
('nucleosome', 'subroutine', {'weight': 0.6})
('nucleosome', 'simulated annealing', {'weight': 0.6})
('nucleosome', 'tower of hanoi', {'weight': 0.6})
('nucleosome', 'branch and bound', {'weight': 0.6})
('nucleosome', 'engineering', {'weight': 0.6})
('nucleosome', 'matroid', {'weight': 0.6})
('nucleosome', 'viterbi algorithm', {'weight': 0.6})
('nucleosome', "lemke's algorithm", {'weight': 0.6})
('nucleosome', 'simplex algorithm', {'weight': 0.6})
('nucleosome', 'local search (optimization)', {'weight': 0.6})
('nucleosome', 'hessian matrix', {'weight': 0.6})
('nucleosome', 'ibm system r', {'weight': 0.6})
('nucleosome', 'penalty method', {'weight': 0.6})
('nucleosome', 'prolog', {'weight': 0.6})
('nucleosome', 'time-invariant system', {'weight': 0.6})
('nucleosome', 'criss-cross algorithm', {'weight': 0.6})
('nucleosome', 'revised simplex algorithm', {'weight': 0.6})
('nucleosome', 'the mathematical association of america', {'weight': 0.6})
('nucleosome', 'line search', {'weight': 0.6})
('nucleosome', 'j (programming language)', {'weight': 0.6})
('nucleosome', 'word wrap', {'weight': 0.6})
('nucleosome', "powell's method", {'weight': 0.6})
('nucleosome', 'subset sum problem', {'weight': 0.6})
('nucleosome', 'integer programming', {'weight': 0.6})
('nucleosome', 'nucleosome', {'weight': 1})
('nucleosome', 'molecular biology', {'weight': 0.5})
('nucleosome', 'referential transparency (computer science)', {'weight': 0.6})
('nucleosome', 'recursion', {'weight': 0.6})
('nucleosome', 'mathematica', {'weight': 0.6})
('nucleosome', 'quicksort', {'weight': 0.6})
('nucleosome', 'recursion (computer science)', {'weight': 0.6})
('nucleosome', 'checkerboard', {'weight': 0.6})
('nucleosome', 'computer science', {'weight': 0.6})
('nucleosome', 'brute-force search', {'weight': 0.6})
('nucleosome', 'mathematics', {'weight': 0.6})
('nucleosome', 'depth-first search', {'weight': 0.6})
('nucleosome', 'top-down and bottom-up design', {'weight': 0.6})
('nucleosome', 'correspondence problem', {'weight': 0.6})
('nucleosome', 'transcription factor', {'weight': 0.6})
('nucleosome', 'tree decomposition', {'weight': 0.6})
('nucleosome', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('nucleosome', 'structural alignment', {'weight': 0.6})
('nucleosome', 'local convergence', {'weight': 0.6})
('nucleosome', 'knapsack problem', {'weight': 0.6})
('nucleosome', 'graph algorithm', {'weight': 0.6})
('nucleosome', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('nucleosome', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('nucleosome', 'hidden markov model', {'weight': 0.6})
('nucleosome', 'string (computer science)', {'weight': 0.6})
('nucleosome', 'bioinformatics', {'weight': 0.6})
('nucleosome', 'genetics', {'weight': 0.6})
('nucleosome', 'mathematical optimization', {'weight': 0.6})
('nucleosome', 'artificial neural networks', {'weight': 0.6})
('nucleosome', 'introduction to algorithms', {'weight': 0.6})
('nucleosome', 'thomas h. cormen', {'weight': 0.6})
('nucleosome', 'earley algorithm', {'weight': 0.6})
('nucleosome', 'music information retrieval', {'weight': 0.6})
('nucleosome', 'beat (music)', {'weight': 0.6})
('nucleosome', 'longest common subsequence problem', {'weight': 0.6})
('nucleosome', 'convex minimization', {'weight': 0.6})
('nucleosome', 'successive parabolic interpolation', {'weight': 0.6})
('nucleosome', 'fibonacci sequence', {'weight': 0.6})
('nucleosome', 'maximum subarray problem', {'weight': 0.6})
('nucleosome', 'convex optimization', {'weight': 0.6})
('nucleosome', 'memoization', {'weight': 0.6})
('nucleosome', 'richard bellman', {'weight': 0.6})
('nucleosome', 'exponential growth', {'weight': 0.6})
('nucleosome', 'charles e. leiserson', {'weight': 0.6})
('nucleosome', 'charles erwin wilson', {'weight': 0.6})
('nucleosome', 'interval scheduling', {'weight': 0.6})
('nucleosome', 'chart parser', {'weight': 0.6})
('nucleosome', 'travelling salesman problem', {'weight': 0.6})
('nucleosome', 'bellman equation', {'weight': 0.6})
('quicksort', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('quicksort', 'photoshop', {'weight': 0.6})
('quicksort', 'sequence alignment', {'weight': 0.6})
('quicksort', 'flow network', {'weight': 0.6})
('quicksort', 'ellipsoid method', {'weight': 0.6})
('quicksort', 'chain matrix multiplication', {'weight': 0.6})
('quicksort', 'ieee', {'weight': 0.6})
('quicksort', 'backtracking', {'weight': 0.6})
('quicksort', 'nonlinear conjugate gradient method', {'weight': 0.6})
('quicksort', 'dynamic problem', {'weight': 0.6})
('quicksort', 'trust region', {'weight': 0.6})
('quicksort', 'function (mathematics)', {'weight': 0.6})
('quicksort', 'minimum spanning tree', {'weight': 0.6})
('quicksort', 'context-free grammar', {'weight': 0.6})
('quicksort', 'branch and cut', {'weight': 0.6})
('quicksort', 'state variable', {'weight': 0.6})
('quicksort', 'treewidth', {'weight': 0.6})
('quicksort', 'flashsort', {'weight': 0.7})
('quicksort', 'overlapping subproblem', {'weight': 0.6})
('quicksort', 'taylor & francis', {'weight': 0.6})
('quicksort', 'cutting-plane method', {'weight': 0.6})
('quicksort', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('quicksort', 'method of undetermined coefficients', {'weight': 0.6})
('quicksort', 'combinatorial optimization', {'weight': 0.6})
('quicksort', "newton's method in optimization", {'weight': 0.6})
('quicksort', 'matrix chain multiplication', {'weight': 0.6})
('quicksort', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('quicksort', 'dynamic time warping', {'weight': 0.6})
('quicksort', 'dynamic programming language', {'weight': 0.6})
('quicksort', 'call-by-need', {'weight': 0.6})
('quicksort', 'big-o notation', {'weight': 0.6})
('quicksort', 'comparison of optimization software', {'weight': 0.6})
('quicksort', 'quadratic programming', {'weight': 0.6})
('quicksort', 'common lisp', {'weight': 0.6})
('quicksort', 'barrier function', {'weight': 0.6})
('quicksort', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('quicksort', 'gradient descent', {'weight': 0.6})
('quicksort', 'patricia selinger', {'weight': 0.6})
('quicksort', 'discounting', {'weight': 0.6})
('quicksort', 'ronald l. rivest', {'weight': 0.6})
('quicksort', 'iterative method', {'weight': 0.6})
('quicksort', 'limited-memory bfgs', {'weight': 0.6})
('quicksort', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('quicksort', 'longest common substring problem', {'weight': 0.6})
('quicksort', 'clifford stein', {'weight': 0.6})
('quicksort', 'computer chess', {'weight': 0.6})
('quicksort', 'linear programming', {'weight': 0.6})
('quicksort', 'bitonic tour', {'weight': 0.6})
('quicksort', 'linear search problem', {'weight': 0.6})
('quicksort', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('quicksort', 'systems analysis', {'weight': 0.6})
('quicksort', 'capital (economics)', {'weight': 0.6})
('quicksort', 'levenshtein distance', {'weight': 0.6})
('quicksort', 'nonlinear programming', {'weight': 0.6})
('quicksort', 'computational complexity of mathematical operations', {'weight': 0.6})
('quicksort', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('quicksort', 'gradient', {'weight': 0.6})
('quicksort', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('quicksort', 'bulletin of the american mathematical society', {'weight': 0.6})
('quicksort', 'u.s. english', {'weight': 0.6})
('quicksort', 'refutation table', {'weight': 0.6})
('quicksort', 'heuristic algorithm', {'weight': 0.6})
('quicksort', 'successive linear programming', {'weight': 0.6})
('quicksort', 'optimal substructure', {'weight': 0.6})
('quicksort', 'programming language', {'weight': 0.6})
('quicksort', 'mergesort', {'weight': 0.6})
('quicksort', "dijkstra's algorithm", {'weight': 0.6})
('quicksort', 'subgradient method', {'weight': 0.6})
('quicksort', 'call-by-name', {'weight': 0.6})
('quicksort', 'longest increasing subsequence problem', {'weight': 0.6})
('quicksort', 'edward prescott', {'weight': 0.6})
('quicksort', 'exponential time', {'weight': 0.6})
('quicksort', 'principle of optimality', {'weight': 0.6})
('quicksort', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('quicksort', 'mathematical game', {'weight': 0.6})
('quicksort', 'nancy stokey', {'weight': 0.6})
('quicksort', 'approximation algorithm', {'weight': 0.6})
('quicksort', 'discrete-time', {'weight': 0.6})
('quicksort', 'cyk algorithm', {'weight': 0.6})
('quicksort', 'markov decision process', {'weight': 0.6})
('quicksort', "powell's method", {'weight': 0.6})
('quicksort', 'wolfe conditions', {'weight': 0.6})
('quicksort', 'convexity in economics', {'weight': 0.6})
('quicksort', 'transposition table', {'weight': 0.6})
('quicksort', 'economics', {'weight': 0.6})
('quicksort', 'backward induction', {'weight': 0.6})
('quicksort', 'golden section search', {'weight': 0.6})
('quicksort', 'edit distance', {'weight': 0.6})
('quicksort', 'tree structure', {'weight': 0.6})
('quicksort', 'exchange algorithm', {'weight': 0.6})
('quicksort', 'dover publications', {'weight': 0.6})
('quicksort', 'seam carving', {'weight': 0.6})
('quicksort', 'recursive least squares', {'weight': 0.6})
('quicksort', 'metaheuristic', {'weight': 0.6})
('quicksort', 'quasi-newton method', {'weight': 0.6})
('quicksort', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('quicksort', 'robert e. lucas', {'weight': 0.6})
('quicksort', 'non-convexity (economics)', {'weight': 0.6})
('quicksort', 'sr1 formula', {'weight': 0.6})
('quicksort', 'mathematical reviews', {'weight': 0.6})
('quicksort', 'puzzle', {'weight': 0.6})
('quicksort', 'associative array', {'weight': 0.6})
('quicksort', 'shortest path problem', {'weight': 0.6})
('quicksort', 'dynamic algorithm', {'weight': 0.6})
('quicksort', 'augmented lagrangian method', {'weight': 0.6})
('quicksort', 'charles delisi', {'weight': 0.6})
('quicksort', 'greedy algorithm', {'weight': 0.6})
('quicksort', "karmarkar's algorithm", {'weight': 0.6})
('quicksort', 'introsort', {'weight': 0.7})
('quicksort', 'lattice models', {'weight': 0.6})
('quicksort', 'utility', {'weight': 0.6})
('quicksort', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('quicksort', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('quicksort', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('quicksort', 'international standard book number', {'weight': 0.6})
('quicksort', 'undirected graph', {'weight': 0.6})
('quicksort', 'scheme (programming language)', {'weight': 0.6})
('quicksort', 'rna structure', {'weight': 0.6})
('quicksort', 'hanoi', {'weight': 0.6})
('quicksort', 'perl', {'weight': 0.6})
('quicksort', 'digital object identifier', {'weight': 0.6})
('quicksort', 'sequential quadratic programming', {'weight': 0.6})
('quicksort', "dinic's algorithm", {'weight': 0.6})
('quicksort', 'pseudo-polynomial time', {'weight': 0.6})
('quicksort', 'partition problem', {'weight': 0.6})
('quicksort', 'stochastic programming', {'weight': 0.6})
('quicksort', 'hill climbing', {'weight': 0.6})
('quicksort', 'top-down', {'weight': 0.6})
('quicksort', 'de boor algorithm', {'weight': 0.6})
('quicksort', 'comparison sorts', {'weight': 0.5})
('quicksort', 'computer programming portal', {'weight': 0.7})
('quicksort', 'optimization algorithm', {'weight': 0.6})
('quicksort', "kruskal's algorithm", {'weight': 0.6})
('quicksort', 'jacques philippe marie binet', {'weight': 0.6})
('quicksort', 'tabu search', {'weight': 0.6})
('quicksort', 'divide and conquer algorithm', {'weight': 0.6})
('quicksort', "johnson's algorithm", {'weight': 0.6})
('quicksort', 'evolutionary algorithm', {'weight': 0.6})
('quicksort', 'clique-width', {'weight': 0.6})
('quicksort', 'dynamic programming', {'weight': 0.6})
('quicksort', 'subroutine', {'weight': 0.6})
('quicksort', 'simulated annealing', {'weight': 0.6})
('quicksort', 'tower of hanoi', {'weight': 0.6})
('quicksort', 'branch and bound', {'weight': 0.6})
('quicksort', 'engineering', {'weight': 0.6})
('quicksort', 'matroid', {'weight': 0.6})
('quicksort', 'viterbi algorithm', {'weight': 0.6})
('quicksort', "lemke's algorithm", {'weight': 0.6})
('quicksort', 'simplex algorithm', {'weight': 0.6})
('quicksort', 'local search (optimization)', {'weight': 0.6})
('quicksort', 'hessian matrix', {'weight': 0.6})
('quicksort', 'ibm system r', {'weight': 0.6})
('quicksort', 'penalty method', {'weight': 0.6})
('quicksort', 'prolog', {'weight': 0.6})
('quicksort', 'sorting algorithms', {'weight': 0.5})
('quicksort', 'time-invariant system', {'weight': 0.6})
('quicksort', 'criss-cross algorithm', {'weight': 0.6})
('quicksort', 'revised simplex algorithm', {'weight': 0.6})
('quicksort', 'the mathematical association of america', {'weight': 0.6})
('quicksort', 'line search', {'weight': 0.6})
('quicksort', 'j (programming language)', {'weight': 0.6})
('quicksort', 'word wrap', {'weight': 0.6})
('quicksort', 'subset sum problem', {'weight': 0.6})
('quicksort', 'integer programming', {'weight': 0.6})
('quicksort', 'nucleosome', {'weight': 0.6})
('quicksort', 'earley algorithm', {'weight': 0.6})
('quicksort', 'referential transparency (computer science)', {'weight': 0.6})
('quicksort', 'recursion', {'weight': 0.6})
('quicksort', 'mathematica', {'weight': 0.6})
('quicksort', 'quicksort', {'weight': 1})
('quicksort', 'recursion (computer science)', {'weight': 0.6})
('quicksort', 'checkerboard', {'weight': 0.6})
('quicksort', 'computer science', {'weight': 0.6})
('quicksort', 'brute-force search', {'weight': 0.6})
('quicksort', 'mathematics', {'weight': 0.6})
('quicksort', 'depth-first search', {'weight': 0.6})
('quicksort', 'top-down and bottom-up design', {'weight': 0.6})
('quicksort', 'correspondence problem', {'weight': 0.6})
('quicksort', 'transcription factor', {'weight': 0.6})
('quicksort', 'tree decomposition', {'weight': 0.6})
('quicksort', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('quicksort', 'structural alignment', {'weight': 0.6})
('quicksort', 'local convergence', {'weight': 0.6})
('quicksort', 'knapsack problem', {'weight': 0.6})
('quicksort', 'graph algorithm', {'weight': 0.6})
('quicksort', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('quicksort', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('quicksort', 'hidden markov model', {'weight': 0.6})
('quicksort', 'string (computer science)', {'weight': 0.6})
('quicksort', 'bioinformatics', {'weight': 0.6})
('quicksort', 'genetics', {'weight': 0.6})
('quicksort', 'mathematical optimization', {'weight': 0.6})
('quicksort', 'artificial neural networks', {'weight': 0.6})
('quicksort', 'introduction to algorithms', {'weight': 0.6})
('quicksort', 'thomas h. cormen', {'weight': 0.6})
('quicksort', 'music information retrieval', {'weight': 0.6})
('quicksort', 'beat (music)', {'weight': 0.6})
('quicksort', 'longest common subsequence problem', {'weight': 0.6})
('quicksort', 'convex minimization', {'weight': 0.6})
('quicksort', 'successive parabolic interpolation', {'weight': 0.6})
('quicksort', 'fibonacci sequence', {'weight': 0.6})
('quicksort', 'maximum subarray problem', {'weight': 0.6})
('quicksort', 'convex optimization', {'weight': 0.6})
('quicksort', 'memoization', {'weight': 0.6})
('quicksort', 'richard bellman', {'weight': 0.6})
('quicksort', 'exponential growth', {'weight': 0.6})
('quicksort', 'charles e. leiserson', {'weight': 0.6})
('quicksort', 'charles erwin wilson', {'weight': 0.6})
('quicksort', 'interval scheduling', {'weight': 0.6})
('quicksort', 'chart parser', {'weight': 0.6})
('quicksort', 'travelling salesman problem', {'weight': 0.6})
('quicksort', '1961 in science', {'weight': 0.5})
('quicksort', 'bellman equation', {'weight': 0.6})
('depth-first search', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('depth-first search', 'photoshop', {'weight': 0.6})
('depth-first search', 'sequence alignment', {'weight': 0.6})
('depth-first search', 'flow network', {'weight': 0.6})
('depth-first search', 'ellipsoid method', {'weight': 0.6})
('depth-first search', 'chain matrix multiplication', {'weight': 0.6})
('depth-first search', 'ieee', {'weight': 0.6})
('depth-first search', 'backtracking', {'weight': 0.6})
('depth-first search', 'nonlinear conjugate gradient method', {'weight': 0.6})
('depth-first search', 'breadth-first search', {'weight': 0.7})
('depth-first search', 'dynamic problem', {'weight': 0.6})
('depth-first search', 'trust region', {'weight': 0.6})
('depth-first search', 'function (mathematics)', {'weight': 0.6})
('depth-first search', 'minimum spanning tree', {'weight': 0.6})
('depth-first search', 'context-free grammar', {'weight': 0.6})
('depth-first search', 'iterative deepening depth-first search', {'weight': 0.7})
('depth-first search', 'branch and cut', {'weight': 0.6})
('depth-first search', 'state variable', {'weight': 0.6})
('depth-first search', 'treewidth', {'weight': 0.6})
('depth-first search', 'overlapping subproblem', {'weight': 0.6})
('depth-first search', 'taylor & francis', {'weight': 0.6})
('depth-first search', 'tree traversal', {'weight': 0.7})
('depth-first search', 'cutting-plane method', {'weight': 0.6})
('depth-first search', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('depth-first search', 'method of undetermined coefficients', {'weight': 0.6})
('depth-first search', 'combinatorial optimization', {'weight': 0.6})
('depth-first search', "newton's method in optimization", {'weight': 0.6})
('depth-first search', 'matrix chain multiplication', {'weight': 0.6})
('depth-first search', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('depth-first search', 'dynamic time warping', {'weight': 0.6})
('depth-first search', 'dynamic programming language', {'weight': 0.6})
('depth-first search', 'call-by-need', {'weight': 0.6})
('depth-first search', 'big-o notation', {'weight': 0.6})
('depth-first search', 'graph algorithms', {'weight': 0.5})
('depth-first search', 'comparison of optimization software', {'weight': 0.6})
('depth-first search', 'quadratic programming', {'weight': 0.6})
('depth-first search', 'common lisp', {'weight': 0.6})
('depth-first search', 'barrier function', {'weight': 0.6})
('depth-first search', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('depth-first search', 'gradient descent', {'weight': 0.6})
('depth-first search', 'patricia selinger', {'weight': 0.6})
('depth-first search', 'discounting', {'weight': 0.6})
('depth-first search', 'ronald l. rivest', {'weight': 0.6})
('depth-first search', 'iterative method', {'weight': 0.6})
('depth-first search', 'limited-memory bfgs', {'weight': 0.6})
('depth-first search', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('depth-first search', 'longest common substring problem', {'weight': 0.6})
('depth-first search', 'clifford stein', {'weight': 0.6})
('depth-first search', 'computer chess', {'weight': 0.6})
('depth-first search', 'linear programming', {'weight': 0.6})
('depth-first search', 'bitonic tour', {'weight': 0.6})
('depth-first search', 'linear search problem', {'weight': 0.6})
('depth-first search', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('depth-first search', 'systems analysis', {'weight': 0.6})
('depth-first search', 'capital (economics)', {'weight': 0.6})
('depth-first search', 'levenshtein distance', {'weight': 0.6})
('depth-first search', 'nonlinear programming', {'weight': 0.6})
('depth-first search', 'computational complexity of mathematical operations', {'weight': 0.6})
('depth-first search', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('depth-first search', 'gradient', {'weight': 0.6})
('depth-first search', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('depth-first search', 'bulletin of the american mathematical society', {'weight': 0.6})
('depth-first search', 'u.s. english', {'weight': 0.6})
('depth-first search', 'refutation table', {'weight': 0.6})
('depth-first search', 'heuristic algorithm', {'weight': 0.6})
('depth-first search', 'successive linear programming', {'weight': 0.6})
('depth-first search', 'optimal substructure', {'weight': 0.6})
('depth-first search', 'programming language', {'weight': 0.6})
('depth-first search', 'mergesort', {'weight': 0.6})
('depth-first search', "dijkstra's algorithm", {'weight': 0.6})
('depth-first search', 'subgradient method', {'weight': 0.6})
('depth-first search', 'call-by-name', {'weight': 0.6})
('depth-first search', 'longest increasing subsequence problem', {'weight': 0.6})
('depth-first search', 'edward prescott', {'weight': 0.6})
('depth-first search', 'exponential time', {'weight': 0.6})
('depth-first search', 'principle of optimality', {'weight': 0.6})
('depth-first search', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('depth-first search', 'mathematical game', {'weight': 0.6})
('depth-first search', 'nancy stokey', {'weight': 0.6})
('depth-first search', 'approximation algorithm', {'weight': 0.6})
('depth-first search', 'discrete-time', {'weight': 0.6})
('depth-first search', 'cyk algorithm', {'weight': 0.6})
('depth-first search', 'markov decision process', {'weight': 0.6})
('depth-first search', "powell's method", {'weight': 0.6})
('depth-first search', 'wolfe conditions', {'weight': 0.6})
('depth-first search', 'convexity in economics', {'weight': 0.6})
('depth-first search', 'transposition table', {'weight': 0.6})
('depth-first search', 'economics', {'weight': 0.6})
('depth-first search', 'backward induction', {'weight': 0.6})
('depth-first search', 'golden section search', {'weight': 0.6})
('depth-first search', 'edit distance', {'weight': 0.6})
('depth-first search', 'tree structure', {'weight': 0.6})
('depth-first search', 'exchange algorithm', {'weight': 0.6})
('depth-first search', 'dover publications', {'weight': 0.6})
('depth-first search', 'seam carving', {'weight': 0.6})
('depth-first search', 'recursive least squares', {'weight': 0.6})
('depth-first search', 'metaheuristic', {'weight': 0.6})
('depth-first search', 'quasi-newton method', {'weight': 0.6})
('depth-first search', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('depth-first search', 'robert e. lucas', {'weight': 0.6})
('depth-first search', 'non-convexity (economics)', {'weight': 0.6})
('depth-first search', 'search algorithms', {'weight': 0.5})
('depth-first search', 'sr1 formula', {'weight': 0.6})
('depth-first search', 'mathematical reviews', {'weight': 0.6})
('depth-first search', 'puzzle', {'weight': 0.6})
('depth-first search', 'associative array', {'weight': 0.6})
('depth-first search', 'shortest path problem', {'weight': 0.6})
('depth-first search', 'dynamic algorithm', {'weight': 0.6})
('depth-first search', 'augmented lagrangian method', {'weight': 0.6})
('depth-first search', 'charles delisi', {'weight': 0.6})
('depth-first search', 'greedy algorithm', {'weight': 0.6})
('depth-first search', "karmarkar's algorithm", {'weight': 0.6})
('depth-first search', 'lattice models', {'weight': 0.6})
('depth-first search', 'utility', {'weight': 0.6})
('depth-first search', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('depth-first search', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('depth-first search', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('depth-first search', 'international standard book number', {'weight': 0.6})
('depth-first search', 'undirected graph', {'weight': 0.6})
('depth-first search', 'scheme (programming language)', {'weight': 0.6})
('depth-first search', 'rna structure', {'weight': 0.6})
('depth-first search', 'hanoi', {'weight': 0.6})
('depth-first search', 'perl', {'weight': 0.6})
('depth-first search', 'digital object identifier', {'weight': 0.6})
('depth-first search', 'sequential quadratic programming', {'weight': 0.6})
('depth-first search', "dinic's algorithm", {'weight': 0.6})
('depth-first search', 'pseudo-polynomial time', {'weight': 0.6})
('depth-first search', 'partition problem', {'weight': 0.6})
('depth-first search', 'stochastic programming', {'weight': 0.6})
('depth-first search', 'hill climbing', {'weight': 0.6})
('depth-first search', 'top-down', {'weight': 0.6})
('depth-first search', 'de boor algorithm', {'weight': 0.6})
('depth-first search', 'optimization algorithm', {'weight': 0.6})
('depth-first search', "kruskal's algorithm", {'weight': 0.6})
('depth-first search', 'jacques philippe marie binet', {'weight': 0.6})
('depth-first search', 'tabu search', {'weight': 0.6})
('depth-first search', 'divide and conquer algorithm', {'weight': 0.6})
('depth-first search', "johnson's algorithm", {'weight': 0.6})
('depth-first search', 'evolutionary algorithm', {'weight': 0.6})
('depth-first search', 'clique-width', {'weight': 0.6})
('depth-first search', 'dynamic programming', {'weight': 0.6})
('depth-first search', 'subroutine', {'weight': 0.6})
('depth-first search', 'simulated annealing', {'weight': 0.6})
('depth-first search', 'tower of hanoi', {'weight': 0.6})
('depth-first search', 'branch and bound', {'weight': 0.6})
('depth-first search', 'engineering', {'weight': 0.6})
('depth-first search', 'matroid', {'weight': 0.6})
('depth-first search', 'viterbi algorithm', {'weight': 0.6})
('depth-first search', "lemke's algorithm", {'weight': 0.6})
('depth-first search', 'simplex algorithm', {'weight': 0.6})
('depth-first search', 'local search (optimization)', {'weight': 0.6})
('depth-first search', 'hessian matrix', {'weight': 0.6})
('depth-first search', 'ibm system r', {'weight': 0.6})
('depth-first search', 'penalty method', {'weight': 0.6})
('depth-first search', 'prolog', {'weight': 0.6})
('depth-first search', 'time-invariant system', {'weight': 0.6})
('depth-first search', 'criss-cross algorithm', {'weight': 0.6})
('depth-first search', 'revised simplex algorithm', {'weight': 0.6})
('depth-first search', 'the mathematical association of america', {'weight': 0.6})
('depth-first search', 'line search', {'weight': 0.6})
('depth-first search', 'j (programming language)', {'weight': 0.6})
('depth-first search', 'word wrap', {'weight': 0.6})
('depth-first search', 'subset sum problem', {'weight': 0.6})
('depth-first search', 'integer programming', {'weight': 0.6})
('depth-first search', 'nucleosome', {'weight': 0.6})
('depth-first search', 'earley algorithm', {'weight': 0.6})
('depth-first search', 'referential transparency (computer science)', {'weight': 0.6})
('depth-first search', 'search games', {'weight': 0.7})
('depth-first search', 'recursion', {'weight': 0.6})
('depth-first search', 'mathematica', {'weight': 0.6})
('depth-first search', 'quicksort', {'weight': 0.6})
('depth-first search', 'recursion (computer science)', {'weight': 0.6})
('depth-first search', 'checkerboard', {'weight': 0.6})
('depth-first search', 'computer science', {'weight': 0.6})
('depth-first search', 'brute-force search', {'weight': 0.6})
('depth-first search', 'mathematics', {'weight': 0.6})
('depth-first search', 'depth-first search', {'weight': 1})
('depth-first search', 'top-down and bottom-up design', {'weight': 0.6})
('depth-first search', 'correspondence problem', {'weight': 0.6})
('depth-first search', 'transcription factor', {'weight': 0.6})
('depth-first search', 'tree decomposition', {'weight': 0.6})
('depth-first search', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('depth-first search', 'structural alignment', {'weight': 0.6})
('depth-first search', 'local convergence', {'weight': 0.6})
('depth-first search', 'knapsack problem', {'weight': 0.6})
('depth-first search', 'graph algorithm', {'weight': 0.6})
('depth-first search', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('depth-first search', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('depth-first search', 'hidden markov model', {'weight': 0.6})
('depth-first search', 'string (computer science)', {'weight': 0.6})
('depth-first search', 'bioinformatics', {'weight': 0.6})
('depth-first search', 'genetics', {'weight': 0.6})
('depth-first search', 'mathematical optimization', {'weight': 0.6})
('depth-first search', 'artificial neural networks', {'weight': 0.6})
('depth-first search', 'introduction to algorithms', {'weight': 0.6})
('depth-first search', 'thomas h. cormen', {'weight': 0.6})
('depth-first search', 'music information retrieval', {'weight': 0.6})
('depth-first search', 'beat (music)', {'weight': 0.6})
('depth-first search', 'longest common subsequence problem', {'weight': 0.6})
('depth-first search', 'convex minimization', {'weight': 0.6})
('depth-first search', 'successive parabolic interpolation', {'weight': 0.6})
('depth-first search', 'fibonacci sequence', {'weight': 0.6})
('depth-first search', 'maximum subarray problem', {'weight': 0.6})
('depth-first search', 'convex optimization', {'weight': 0.6})
('depth-first search', 'memoization', {'weight': 0.6})
('depth-first search', 'richard bellman', {'weight': 0.6})
('depth-first search', 'exponential growth', {'weight': 0.6})
('depth-first search', 'charles e. leiserson', {'weight': 0.6})
('depth-first search', 'charles erwin wilson', {'weight': 0.6})
('depth-first search', 'interval scheduling', {'weight': 0.6})
('depth-first search', 'chart parser', {'weight': 0.6})
('depth-first search', 'travelling salesman problem', {'weight': 0.6})
('depth-first search', 'bellman equation', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'photoshop', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'sequence alignment', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'flow network', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'ellipsoid method', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'chain matrix multiplication', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'ieee', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'backtracking', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'nonlinear conjugate gradient method', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'dynamic problem', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'trust region', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'function (mathematics)', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'minimum spanning tree', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'context-free grammar', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'branch and cut', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'state variable', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'treewidth', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'overlapping subproblem', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'taylor & francis', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'cutting-plane method', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'method of undetermined coefficients', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'combinatorial optimization', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', "newton's method in optimization", {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'matrix chain multiplication', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'dynamic time warping', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'dynamic programming language', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'call-by-need', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'big-o notation', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'comparison of optimization software', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'quadratic programming', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'common lisp', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'barrier function', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'gradient descent', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'patricia selinger', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'discounting', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'ronald l. rivest', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'iterative method', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'limited-memory bfgs', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'longest common substring problem', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'clifford stein', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'computer chess', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'linear programming', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'bitonic tour', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'linear search problem', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'systems analysis', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'capital (economics)', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'levenshtein distance', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'nonlinear programming', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'computational complexity of mathematical operations', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'gradient', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'bulletin of the american mathematical society', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'u.s. english', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'refutation table', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'heuristic algorithm', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'successive linear programming', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'optimal substructure', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'programming language', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'mergesort', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', "dijkstra's algorithm", {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'subgradient method', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'call-by-name', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'longest increasing subsequence problem', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'edward prescott', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'exponential time', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'principle of optimality', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'mathematical game', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'nancy stokey', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'approximation algorithm', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'discrete-time', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'cyk algorithm', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'markov decision process', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', "powell's method", {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'wolfe conditions', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'convexity in economics', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'transposition table', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'economics', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'backward induction', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'golden section search', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'edit distance', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'tree structure', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'exchange algorithm', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'dover publications', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'seam carving', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'recursive least squares', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'metaheuristic', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'quasi-newton method', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'robert e. lucas', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'non-convexity (economics)', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'sr1 formula', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'mathematical reviews', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'puzzle', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'associative array', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'shortest path problem', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'dynamic algorithm', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'augmented lagrangian method', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'charles delisi', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'greedy algorithm', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', "karmarkar's algorithm", {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'lattice models', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'utility', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'international standard book number', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'undirected graph', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'scheme (programming language)', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'rna structure', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'hanoi', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'perl', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'digital object identifier', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'sequential quadratic programming', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', "dinic's algorithm", {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'pseudo-polynomial time', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'partition problem', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'stochastic programming', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'hill climbing', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'top-down', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'de boor algorithm', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'optimization algorithm', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', "kruskal's algorithm", {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'jacques philippe marie binet', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'tabu search', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'divide and conquer algorithm', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', "johnson's algorithm", {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'evolutionary algorithm', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'clique-width', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'dynamic programming', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'subroutine', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'simulated annealing', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'tower of hanoi', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'branch and bound', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'engineering', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'matroid', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'viterbi algorithm', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', "lemke's algorithm", {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'simplex algorithm', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'local search (optimization)', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'hessian matrix', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'ibm system r', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'penalty method', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'prolog', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'time-invariant system', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'criss-cross algorithm', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'revised simplex algorithm', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'the mathematical association of america', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'line search', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'j (programming language)', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'word wrap', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'subset sum problem', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'integer programming', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'nucleosome', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'earley algorithm', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'referential transparency (computer science)', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'recursion', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'mathematica', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'quicksort', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'recursion (computer science)', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'checkerboard', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'computer science', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'brute-force search', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'mathematics', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'depth-first search', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'top-down and bottom-up design', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'correspondence problem', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'transcription factor', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'tree decomposition', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'structural alignment', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'local convergence', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'knapsack problem', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'graph algorithm', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 1})
('levenberg\xe2\x80\x93marquardt algorithm', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'hidden markov model', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'string (computer science)', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'bioinformatics', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'genetics', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'mathematical optimization', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'artificial neural networks', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'introduction to algorithms', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'thomas h. cormen', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'music information retrieval', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'beat (music)', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'longest common subsequence problem', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'convex minimization', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'successive parabolic interpolation', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'fibonacci sequence', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'maximum subarray problem', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'convex optimization', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'memoization', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'richard bellman', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'exponential growth', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'charles e. leiserson', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'charles erwin wilson', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'interval scheduling', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'chart parser', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'travelling salesman problem', {'weight': 0.6})
('levenberg\xe2\x80\x93marquardt algorithm', 'bellman equation', {'weight': 0.6})
('recursive least squares', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('recursive least squares', 'photoshop', {'weight': 0.6})
('recursive least squares', 'sequence alignment', {'weight': 0.6})
('recursive least squares', 'flow network', {'weight': 0.6})
('recursive least squares', 'ellipsoid method', {'weight': 0.6})
('recursive least squares', 'chain matrix multiplication', {'weight': 0.6})
('recursive least squares', 'ieee', {'weight': 0.6})
('recursive least squares', 'backtracking', {'weight': 0.6})
('recursive least squares', 'nonlinear conjugate gradient method', {'weight': 0.6})
('recursive least squares', 'time series analysis', {'weight': 0.5})
('recursive least squares', 'dynamic problem', {'weight': 0.6})
('recursive least squares', 'trust region', {'weight': 0.6})
('recursive least squares', 'function (mathematics)', {'weight': 0.6})
('recursive least squares', 'minimum spanning tree', {'weight': 0.6})
('recursive least squares', 'context-free grammar', {'weight': 0.6})
('recursive least squares', 'branch and cut', {'weight': 0.6})
('recursive least squares', 'state variable', {'weight': 0.6})
('recursive least squares', 'treewidth', {'weight': 0.6})
('recursive least squares', 'overlapping subproblem', {'weight': 0.6})
('recursive least squares', 'taylor & francis', {'weight': 0.6})
('recursive least squares', 'cutting-plane method', {'weight': 0.6})
('recursive least squares', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('recursive least squares', 'method of undetermined coefficients', {'weight': 0.6})
('recursive least squares', 'combinatorial optimization', {'weight': 0.6})
('recursive least squares', "newton's method in optimization", {'weight': 0.6})
('recursive least squares', 'matrix chain multiplication', {'weight': 0.6})
('recursive least squares', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('recursive least squares', 'dynamic time warping', {'weight': 0.6})
('recursive least squares', 'dynamic programming language', {'weight': 0.6})
('recursive least squares', 'call-by-need', {'weight': 0.6})
('recursive least squares', 'big-o notation', {'weight': 0.6})
('recursive least squares', 'comparison of optimization software', {'weight': 0.6})
('recursive least squares', 'quadratic programming', {'weight': 0.6})
('recursive least squares', 'common lisp', {'weight': 0.6})
('recursive least squares', 'barrier function', {'weight': 0.6})
('recursive least squares', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('recursive least squares', 'gradient descent', {'weight': 0.6})
('recursive least squares', 'patricia selinger', {'weight': 0.6})
('recursive least squares', 'discounting', {'weight': 0.6})
('recursive least squares', 'ronald l. rivest', {'weight': 0.6})
('recursive least squares', 'iterative method', {'weight': 0.6})
('recursive least squares', 'subset sum problem', {'weight': 0.6})
('recursive least squares', 'limited-memory bfgs', {'weight': 0.6})
('recursive least squares', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('recursive least squares', 'longest common substring problem', {'weight': 0.6})
('recursive least squares', 'clifford stein', {'weight': 0.6})
('recursive least squares', 'computer chess', {'weight': 0.6})
('recursive least squares', 'linear programming', {'weight': 0.6})
('recursive least squares', 'adaptive filter', {'weight': 0.7})
('recursive least squares', 'bitonic tour', {'weight': 0.6})
('recursive least squares', 'linear search problem', {'weight': 0.6})
('recursive least squares', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('recursive least squares', 'systems analysis', {'weight': 0.6})
('recursive least squares', 'capital (economics)', {'weight': 0.6})
('recursive least squares', 'least mean squares filter', {'weight': 0.7})
('recursive least squares', 'levenshtein distance', {'weight': 0.6})
('recursive least squares', 'nonlinear programming', {'weight': 0.6})
('recursive least squares', 'computational complexity of mathematical operations', {'weight': 0.6})
('recursive least squares', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('recursive least squares', 'gradient', {'weight': 0.6})
('recursive least squares', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('recursive least squares', 'bulletin of the american mathematical society', {'weight': 0.6})
('recursive least squares', 'u.s. english', {'weight': 0.6})
('recursive least squares', 'refutation table', {'weight': 0.6})
('recursive least squares', 'heuristic algorithm', {'weight': 0.6})
('recursive least squares', 'successive linear programming', {'weight': 0.6})
('recursive least squares', 'optimal substructure', {'weight': 0.6})
('recursive least squares', 'programming language', {'weight': 0.6})
('recursive least squares', 'mergesort', {'weight': 0.6})
('recursive least squares', "dijkstra's algorithm", {'weight': 0.6})
('recursive least squares', 'subgradient method', {'weight': 0.6})
('recursive least squares', 'call-by-name', {'weight': 0.6})
('recursive least squares', 'longest increasing subsequence problem', {'weight': 0.6})
('recursive least squares', 'edward prescott', {'weight': 0.6})
('recursive least squares', 'exponential time', {'weight': 0.6})
('recursive least squares', 'principle of optimality', {'weight': 0.6})
('recursive least squares', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('recursive least squares', 'mathematical game', {'weight': 0.6})
('recursive least squares', 'nancy stokey', {'weight': 0.6})
('recursive least squares', 'approximation algorithm', {'weight': 0.6})
('recursive least squares', 'discrete-time', {'weight': 0.6})
('recursive least squares', 'cyk algorithm', {'weight': 0.6})
('recursive least squares', 'markov decision process', {'weight': 0.6})
('recursive least squares', "powell's method", {'weight': 0.6})
('recursive least squares', 'wolfe conditions', {'weight': 0.6})
('recursive least squares', 'convexity in economics', {'weight': 0.6})
('recursive least squares', 'transposition table', {'weight': 0.6})
('recursive least squares', 'economics', {'weight': 0.6})
('recursive least squares', 'backward induction', {'weight': 0.6})
('recursive least squares', 'golden section search', {'weight': 0.6})
('recursive least squares', 'edit distance', {'weight': 0.6})
('recursive least squares', 'tree structure', {'weight': 0.6})
('recursive least squares', 'exchange algorithm', {'weight': 0.6})
('recursive least squares', 'dover publications', {'weight': 0.6})
('recursive least squares', 'seam carving', {'weight': 0.6})
('recursive least squares', 'recursive least squares', {'weight': 1})
('recursive least squares', 'metaheuristic', {'weight': 0.6})
('recursive least squares', 'quasi-newton method', {'weight': 0.6})
('recursive least squares', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('recursive least squares', 'robert e. lucas', {'weight': 0.6})
('recursive least squares', 'non-convexity (economics)', {'weight': 0.6})
('recursive least squares', 'kernel adaptive filter', {'weight': 0.7})
('recursive least squares', 'zero forcing equalizer', {'weight': 0.7})
('recursive least squares', 'sr1 formula', {'weight': 0.6})
('recursive least squares', 'mathematical reviews', {'weight': 0.6})
('recursive least squares', 'puzzle', {'weight': 0.6})
('recursive least squares', 'associative array', {'weight': 0.6})
('recursive least squares', 'shortest path problem', {'weight': 0.6})
('recursive least squares', 'dynamic algorithm', {'weight': 0.6})
('recursive least squares', 'augmented lagrangian method', {'weight': 0.6})
('recursive least squares', 'charles delisi', {'weight': 0.6})
('recursive least squares', 'greedy algorithm', {'weight': 0.6})
('recursive least squares', 'filter theory', {'weight': 0.5})
('recursive least squares', "karmarkar's algorithm", {'weight': 0.6})
('recursive least squares', 'lattice models', {'weight': 0.6})
('recursive least squares', 'utility', {'weight': 0.6})
('recursive least squares', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('recursive least squares', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('recursive least squares', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('recursive least squares', 'international standard book number', {'weight': 0.6})
('recursive least squares', 'undirected graph', {'weight': 0.6})
('recursive least squares', 'scheme (programming language)', {'weight': 0.6})
('recursive least squares', 'rna structure', {'weight': 0.6})
('recursive least squares', 'hanoi', {'weight': 0.6})
('recursive least squares', 'perl', {'weight': 0.6})
('recursive least squares', 'digital object identifier', {'weight': 0.6})
('recursive least squares', 'sequential quadratic programming', {'weight': 0.6})
('recursive least squares', "dinic's algorithm", {'weight': 0.6})
('recursive least squares', 'pseudo-polynomial time', {'weight': 0.6})
('recursive least squares', 'partition problem', {'weight': 0.6})
('recursive least squares', 'stochastic programming', {'weight': 0.6})
('recursive least squares', 'hill climbing', {'weight': 0.6})
('recursive least squares', 'top-down', {'weight': 0.6})
('recursive least squares', 'de boor algorithm', {'weight': 0.6})
('recursive least squares', 'optimization algorithm', {'weight': 0.6})
('recursive least squares', "kruskal's algorithm", {'weight': 0.6})
('recursive least squares', 'jacques philippe marie binet', {'weight': 0.6})
('recursive least squares', 'tabu search', {'weight': 0.6})
('recursive least squares', 'divide and conquer algorithm', {'weight': 0.6})
('recursive least squares', "johnson's algorithm", {'weight': 0.6})
('recursive least squares', 'evolutionary algorithm', {'weight': 0.6})
('recursive least squares', 'clique-width', {'weight': 0.6})
('recursive least squares', 'dynamic programming', {'weight': 0.6})
('recursive least squares', 'subroutine', {'weight': 0.6})
('recursive least squares', 'simulated annealing', {'weight': 0.6})
('recursive least squares', 'tower of hanoi', {'weight': 0.6})
('recursive least squares', 'branch and bound', {'weight': 0.6})
('recursive least squares', 'engineering', {'weight': 0.6})
('recursive least squares', 'matroid', {'weight': 0.6})
('recursive least squares', 'viterbi algorithm', {'weight': 0.6})
('recursive least squares', "lemke's algorithm", {'weight': 0.6})
('recursive least squares', 'simplex algorithm', {'weight': 0.6})
('recursive least squares', 'local search (optimization)', {'weight': 0.6})
('recursive least squares', 'hessian matrix', {'weight': 0.6})
('recursive least squares', 'ibm system r', {'weight': 0.6})
('recursive least squares', 'penalty method', {'weight': 0.6})
('recursive least squares', 'prolog', {'weight': 0.6})
('recursive least squares', 'time-invariant system', {'weight': 0.6})
('recursive least squares', 'criss-cross algorithm', {'weight': 0.6})
('recursive least squares', 'revised simplex algorithm', {'weight': 0.6})
('recursive least squares', 'the mathematical association of america', {'weight': 0.6})
('recursive least squares', 'line search', {'weight': 0.6})
('recursive least squares', 'j (programming language)', {'weight': 0.6})
('recursive least squares', 'word wrap', {'weight': 0.6})
('recursive least squares', 'digital signal processing', {'weight': 0.5})
('recursive least squares', 'integer programming', {'weight': 0.6})
('recursive least squares', 'nucleosome', {'weight': 0.6})
('recursive least squares', 'earley algorithm', {'weight': 0.6})
('recursive least squares', 'referential transparency (computer science)', {'weight': 0.6})
('recursive least squares', 'recursion', {'weight': 0.6})
('recursive least squares', 'mathematica', {'weight': 0.6})
('recursive least squares', 'quicksort', {'weight': 0.6})
('recursive least squares', 'recursion (computer science)', {'weight': 0.6})
('recursive least squares', 'checkerboard', {'weight': 0.6})
('recursive least squares', 'computer science', {'weight': 0.6})
('recursive least squares', 'brute-force search', {'weight': 0.6})
('recursive least squares', 'mathematics', {'weight': 0.6})
('recursive least squares', 'depth-first search', {'weight': 0.6})
('recursive least squares', 'top-down and bottom-up design', {'weight': 0.6})
('recursive least squares', 'correspondence problem', {'weight': 0.6})
('recursive least squares', 'transcription factor', {'weight': 0.6})
('recursive least squares', 'tree decomposition', {'weight': 0.6})
('recursive least squares', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('recursive least squares', 'structural alignment', {'weight': 0.6})
('recursive least squares', 'local convergence', {'weight': 0.6})
('recursive least squares', 'knapsack problem', {'weight': 0.6})
('recursive least squares', 'graph algorithm', {'weight': 0.6})
('recursive least squares', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('recursive least squares', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('recursive least squares', 'hidden markov model', {'weight': 0.6})
('recursive least squares', 'string (computer science)', {'weight': 0.6})
('recursive least squares', 'bioinformatics', {'weight': 0.6})
('recursive least squares', 'genetics', {'weight': 0.6})
('recursive least squares', 'mathematical optimization', {'weight': 0.6})
('recursive least squares', 'artificial neural networks', {'weight': 0.6})
('recursive least squares', 'introduction to algorithms', {'weight': 0.6})
('recursive least squares', 'thomas h. cormen', {'weight': 0.6})
('recursive least squares', 'music information retrieval', {'weight': 0.6})
('recursive least squares', 'beat (music)', {'weight': 0.6})
('recursive least squares', 'longest common subsequence problem', {'weight': 0.6})
('recursive least squares', 'convex minimization', {'weight': 0.6})
('recursive least squares', 'successive parabolic interpolation', {'weight': 0.6})
('recursive least squares', 'fibonacci sequence', {'weight': 0.6})
('recursive least squares', 'maximum subarray problem', {'weight': 0.6})
('recursive least squares', 'convex optimization', {'weight': 0.6})
('recursive least squares', 'memoization', {'weight': 0.6})
('recursive least squares', 'richard bellman', {'weight': 0.6})
('recursive least squares', 'exponential growth', {'weight': 0.6})
('recursive least squares', 'charles e. leiserson', {'weight': 0.6})
('recursive least squares', 'charles erwin wilson', {'weight': 0.6})
('recursive least squares', 'interval scheduling', {'weight': 0.6})
('recursive least squares', 'chart parser', {'weight': 0.6})
('recursive least squares', 'travelling salesman problem', {'weight': 0.6})
('recursive least squares', 'bellman equation', {'weight': 0.6})
('introduction to algorithms', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('introduction to algorithms', 'photoshop', {'weight': 0.6})
('introduction to algorithms', 'sequence alignment', {'weight': 0.6})
('introduction to algorithms', 'flow network', {'weight': 0.6})
('introduction to algorithms', '1990 books', {'weight': 0.5})
('introduction to algorithms', 'ellipsoid method', {'weight': 0.6})
('introduction to algorithms', 'chain matrix multiplication', {'weight': 0.6})
('introduction to algorithms', 'ieee', {'weight': 0.6})
('introduction to algorithms', 'backtracking', {'weight': 0.6})
('introduction to algorithms', 'nonlinear conjugate gradient method', {'weight': 0.6})
('introduction to algorithms', 'dynamic problem', {'weight': 0.6})
('introduction to algorithms', 'trust region', {'weight': 0.6})
('introduction to algorithms', 'function (mathematics)', {'weight': 0.6})
('introduction to algorithms', 'minimum spanning tree', {'weight': 0.6})
('introduction to algorithms', 'context-free grammar', {'weight': 0.6})
('introduction to algorithms', 'tabu search', {'weight': 0.6})
('introduction to algorithms', 'branch and cut', {'weight': 0.6})
('introduction to algorithms', 'state variable', {'weight': 0.6})
('introduction to algorithms', 'treewidth', {'weight': 0.6})
('introduction to algorithms', 'overlapping subproblem', {'weight': 0.6})
('introduction to algorithms', 'taylor & francis', {'weight': 0.6})
('introduction to algorithms', 'cutting-plane method', {'weight': 0.6})
('introduction to algorithms', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('introduction to algorithms', 'method of undetermined coefficients', {'weight': 0.6})
('introduction to algorithms', 'combinatorial optimization', {'weight': 0.6})
('introduction to algorithms', "newton's method in optimization", {'weight': 0.6})
('introduction to algorithms', 'matrix chain multiplication', {'weight': 0.6})
('introduction to algorithms', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('introduction to algorithms', 'dynamic time warping', {'weight': 0.6})
('introduction to algorithms', 'dynamic programming language', {'weight': 0.6})
('introduction to algorithms', 'call-by-need', {'weight': 0.6})
('introduction to algorithms', 'big-o notation', {'weight': 0.6})
('introduction to algorithms', 'comparison of optimization software', {'weight': 0.6})
('introduction to algorithms', 'quadratic programming', {'weight': 0.6})
('introduction to algorithms', 'common lisp', {'weight': 0.6})
('introduction to algorithms', 'barrier function', {'weight': 0.6})
('introduction to algorithms', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('introduction to algorithms', 'gradient descent', {'weight': 0.6})
('introduction to algorithms', 'patricia selinger', {'weight': 0.6})
('introduction to algorithms', 'discounting', {'weight': 0.6})
('introduction to algorithms', 'ronald l. rivest', {'weight': 0.6})
('introduction to algorithms', 'iterative method', {'weight': 0.6})
('introduction to algorithms', 'limited-memory bfgs', {'weight': 0.6})
('introduction to algorithms', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('introduction to algorithms', 'longest common substring problem', {'weight': 0.6})
('introduction to algorithms', 'clifford stein', {'weight': 0.6})
('introduction to algorithms', 'computer chess', {'weight': 0.6})
('introduction to algorithms', 'linear programming', {'weight': 0.6})
('introduction to algorithms', 'bitonic tour', {'weight': 0.6})
('introduction to algorithms', 'linear search problem', {'weight': 0.6})
('introduction to algorithms', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('introduction to algorithms', 'systems analysis', {'weight': 0.6})
('introduction to algorithms', 'capital (economics)', {'weight': 0.6})
('introduction to algorithms', 'levenshtein distance', {'weight': 0.6})
('introduction to algorithms', 'nonlinear programming', {'weight': 0.6})
('introduction to algorithms', 'computational complexity of mathematical operations', {'weight': 0.6})
('introduction to algorithms', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('introduction to algorithms', 'gradient', {'weight': 0.6})
('introduction to algorithms', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('introduction to algorithms', 'bulletin of the american mathematical society', {'weight': 0.6})
('introduction to algorithms', 'u.s. english', {'weight': 0.6})
('introduction to algorithms', 'refutation table', {'weight': 0.6})
('introduction to algorithms', 'heuristic algorithm', {'weight': 0.6})
('introduction to algorithms', 'successive linear programming', {'weight': 0.6})
('introduction to algorithms', 'optimal substructure', {'weight': 0.6})
('introduction to algorithms', 'mit press books', {'weight': 0.5})
('introduction to algorithms', 'programming language', {'weight': 0.6})
('introduction to algorithms', 'mergesort', {'weight': 0.6})
('introduction to algorithms', "dijkstra's algorithm", {'weight': 0.6})
('introduction to algorithms', 'subgradient method', {'weight': 0.6})
('introduction to algorithms', 'call-by-name', {'weight': 0.6})
('introduction to algorithms', 'longest increasing subsequence problem', {'weight': 0.6})
('introduction to algorithms', 'edward prescott', {'weight': 0.6})
('introduction to algorithms', 'exponential time', {'weight': 0.6})
('introduction to algorithms', 'principle of optimality', {'weight': 0.6})
('introduction to algorithms', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('introduction to algorithms', 'mathematical game', {'weight': 0.6})
('introduction to algorithms', 'nancy stokey', {'weight': 0.6})
('introduction to algorithms', 'approximation algorithm', {'weight': 0.6})
('introduction to algorithms', 'discrete-time', {'weight': 0.6})
('introduction to algorithms', 'cyk algorithm', {'weight': 0.6})
('introduction to algorithms', 'markov decision process', {'weight': 0.6})
('introduction to algorithms', "powell's method", {'weight': 0.6})
('introduction to algorithms', 'wolfe conditions', {'weight': 0.6})
('introduction to algorithms', 'convexity in economics', {'weight': 0.6})
('introduction to algorithms', 'transposition table', {'weight': 0.6})
('introduction to algorithms', 'economics', {'weight': 0.6})
('introduction to algorithms', 'backward induction', {'weight': 0.6})
('introduction to algorithms', 'golden section search', {'weight': 0.6})
('introduction to algorithms', 'edit distance', {'weight': 0.6})
('introduction to algorithms', 'tree structure', {'weight': 0.6})
('introduction to algorithms', 'exchange algorithm', {'weight': 0.6})
('introduction to algorithms', 'dover publications', {'weight': 0.6})
('introduction to algorithms', 'seam carving', {'weight': 0.6})
('introduction to algorithms', 'recursive least squares', {'weight': 0.6})
('introduction to algorithms', 'metaheuristic', {'weight': 0.6})
('introduction to algorithms', 'quasi-newton method', {'weight': 0.6})
('introduction to algorithms', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('introduction to algorithms', 'robert e. lucas', {'weight': 0.6})
('introduction to algorithms', 'non-convexity (economics)', {'weight': 0.6})
('introduction to algorithms', 'sr1 formula', {'weight': 0.6})
('introduction to algorithms', 'mathematical reviews', {'weight': 0.6})
('introduction to algorithms', 'puzzle', {'weight': 0.6})
('introduction to algorithms', 'associative array', {'weight': 0.6})
('introduction to algorithms', 'shortest path problem', {'weight': 0.6})
('introduction to algorithms', 'dynamic algorithm', {'weight': 0.6})
('introduction to algorithms', 'augmented lagrangian method', {'weight': 0.6})
('introduction to algorithms', 'charles delisi', {'weight': 0.6})
('introduction to algorithms', 'greedy algorithm', {'weight': 0.6})
('introduction to algorithms', "karmarkar's algorithm", {'weight': 0.6})
('introduction to algorithms', 'lattice models', {'weight': 0.6})
('introduction to algorithms', 'utility', {'weight': 0.6})
('introduction to algorithms', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('introduction to algorithms', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('introduction to algorithms', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('introduction to algorithms', 'international standard book number', {'weight': 0.6})
('introduction to algorithms', 'undirected graph', {'weight': 0.6})
('introduction to algorithms', 'scheme (programming language)', {'weight': 0.6})
('introduction to algorithms', 'rna structure', {'weight': 0.6})
('introduction to algorithms', 'hanoi', {'weight': 0.6})
('introduction to algorithms', 'perl', {'weight': 0.6})
('introduction to algorithms', 'digital object identifier', {'weight': 0.6})
('introduction to algorithms', 'sequential quadratic programming', {'weight': 0.6})
('introduction to algorithms', "dinic's algorithm", {'weight': 0.6})
('introduction to algorithms', 'pseudo-polynomial time', {'weight': 0.6})
('introduction to algorithms', 'partition problem', {'weight': 0.6})
('introduction to algorithms', 'stochastic programming', {'weight': 0.6})
('introduction to algorithms', 'hill climbing', {'weight': 0.6})
('introduction to algorithms', 'top-down', {'weight': 0.6})
('introduction to algorithms', 'de boor algorithm', {'weight': 0.6})
('introduction to algorithms', 'optimization algorithm', {'weight': 0.6})
('introduction to algorithms', "kruskal's algorithm", {'weight': 0.6})
('introduction to algorithms', 'jacques philippe marie binet', {'weight': 0.6})
('introduction to algorithms', 'the mathematical association of america', {'weight': 0.6})
('introduction to algorithms', 'divide and conquer algorithm', {'weight': 0.6})
('introduction to algorithms', "johnson's algorithm", {'weight': 0.6})
('introduction to algorithms', 'evolutionary algorithm', {'weight': 0.6})
('introduction to algorithms', 'clique-width', {'weight': 0.6})
('introduction to algorithms', 'dynamic programming', {'weight': 0.6})
('introduction to algorithms', 'subroutine', {'weight': 0.6})
('introduction to algorithms', 'simulated annealing', {'weight': 0.6})
('introduction to algorithms', 'tower of hanoi', {'weight': 0.6})
('introduction to algorithms', 'branch and bound', {'weight': 0.6})
('introduction to algorithms', 'engineering', {'weight': 0.6})
('introduction to algorithms', 'matroid', {'weight': 0.6})
('introduction to algorithms', 'viterbi algorithm', {'weight': 0.6})
('introduction to algorithms', "lemke's algorithm", {'weight': 0.6})
('introduction to algorithms', 'simplex algorithm', {'weight': 0.6})
('introduction to algorithms', 'local search (optimization)', {'weight': 0.6})
('introduction to algorithms', 'hessian matrix', {'weight': 0.6})
('introduction to algorithms', 'ibm system r', {'weight': 0.6})
('introduction to algorithms', 'penalty method', {'weight': 0.6})
('introduction to algorithms', 'prolog', {'weight': 0.6})
('introduction to algorithms', 'time-invariant system', {'weight': 0.6})
('introduction to algorithms', 'criss-cross algorithm', {'weight': 0.6})
('introduction to algorithms', 'revised simplex algorithm', {'weight': 0.6})
('introduction to algorithms', 'computer book stubs', {'weight': 0.5})
('introduction to algorithms', 'line search', {'weight': 0.6})
('introduction to algorithms', 'j (programming language)', {'weight': 0.6})
('introduction to algorithms', 'word wrap', {'weight': 0.6})
('introduction to algorithms', 'subset sum problem', {'weight': 0.6})
('introduction to algorithms', 'integer programming', {'weight': 0.6})
('introduction to algorithms', 'nucleosome', {'weight': 0.6})
('introduction to algorithms', 'earley algorithm', {'weight': 0.6})
('introduction to algorithms', 'referential transparency (computer science)', {'weight': 0.6})
('introduction to algorithms', 'recursion', {'weight': 0.6})
('introduction to algorithms', 'mathematica', {'weight': 0.6})
('introduction to algorithms', 'quicksort', {'weight': 0.6})
('introduction to algorithms', 'recursion (computer science)', {'weight': 0.6})
('introduction to algorithms', 'checkerboard', {'weight': 0.6})
('introduction to algorithms', 'computer science', {'weight': 0.6})
('introduction to algorithms', 'brute-force search', {'weight': 0.6})
('introduction to algorithms', 'mathematics', {'weight': 0.6})
('introduction to algorithms', 'depth-first search', {'weight': 0.6})
('introduction to algorithms', 'top-down and bottom-up design', {'weight': 0.6})
('introduction to algorithms', 'correspondence problem', {'weight': 0.6})
('introduction to algorithms', 'transcription factor', {'weight': 0.6})
('introduction to algorithms', 'tree decomposition', {'weight': 0.6})
('introduction to algorithms', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('introduction to algorithms', 'structural alignment', {'weight': 0.6})
('introduction to algorithms', 'local convergence', {'weight': 0.6})
('introduction to algorithms', 'knapsack problem', {'weight': 0.6})
('introduction to algorithms', 'graph algorithm', {'weight': 0.6})
('introduction to algorithms', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('introduction to algorithms', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('introduction to algorithms', 'hidden markov model', {'weight': 0.6})
('introduction to algorithms', 'computer science books', {'weight': 0.5})
('introduction to algorithms', 'string (computer science)', {'weight': 0.6})
('introduction to algorithms', 'bioinformatics', {'weight': 0.6})
('introduction to algorithms', 'genetics', {'weight': 0.6})
('introduction to algorithms', 'mathematical optimization', {'weight': 0.6})
('introduction to algorithms', 'artificial neural networks', {'weight': 0.6})
('introduction to algorithms', 'introduction to algorithms', {'weight': 1})
('introduction to algorithms', 'thomas h. cormen', {'weight': 0.6})
('introduction to algorithms', 'music information retrieval', {'weight': 0.6})
('introduction to algorithms', 'beat (music)', {'weight': 0.6})
('introduction to algorithms', 'longest common subsequence problem', {'weight': 0.6})
('introduction to algorithms', 'convex minimization', {'weight': 0.6})
('introduction to algorithms', 'successive parabolic interpolation', {'weight': 0.6})
('introduction to algorithms', 'fibonacci sequence', {'weight': 0.6})
('introduction to algorithms', 'maximum subarray problem', {'weight': 0.6})
('introduction to algorithms', 'convex optimization', {'weight': 0.6})
('introduction to algorithms', 'memoization', {'weight': 0.6})
('introduction to algorithms', 'richard bellman', {'weight': 0.6})
('introduction to algorithms', 'exponential growth', {'weight': 0.6})
('introduction to algorithms', 'charles e. leiserson', {'weight': 0.6})
('introduction to algorithms', 'charles erwin wilson', {'weight': 0.6})
('introduction to algorithms', 'interval scheduling', {'weight': 0.6})
('introduction to algorithms', 'chart parser', {'weight': 0.6})
('introduction to algorithms', 'travelling salesman problem', {'weight': 0.6})
('introduction to algorithms', 'bellman equation', {'weight': 0.6})
('music information retrieval', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('music information retrieval', 'photoshop', {'weight': 0.6})
('music information retrieval', 'sequence alignment', {'weight': 0.6})
('music information retrieval', 'music notation', {'weight': 0.7})
('music information retrieval', 'flow network', {'weight': 0.6})
('music information retrieval', 'artificial intelligence', {'weight': 0.7})
('music information retrieval', 'ellipsoid method', {'weight': 0.6})
('music information retrieval', 'chain matrix multiplication', {'weight': 0.6})
('music information retrieval', 'ieee', {'weight': 0.6})
('music information retrieval', 'backtracking', {'weight': 0.6})
('music information retrieval', 'nonlinear conjugate gradient method', {'weight': 0.6})
('music information retrieval', 'dynamic problem', {'weight': 0.6})
('music information retrieval', 'trust region', {'weight': 0.6})
('music information retrieval', 'function (mathematics)', {'weight': 0.6})
('music information retrieval', 'minimum spanning tree', {'weight': 0.6})
('music information retrieval', 'context-free grammar', {'weight': 0.6})
('music information retrieval', 'music ocr', {'weight': 0.7})
('music information retrieval', 'digital signal processing', {'weight': 0.7})
('music information retrieval', 'branch and cut', {'weight': 0.6})
('music information retrieval', 'state variable', {'weight': 0.6})
('music information retrieval', 'sound and music computing', {'weight': 0.7})
('music information retrieval', 'treewidth', {'weight': 0.6})
('music information retrieval', 'overlapping subproblem', {'weight': 0.6})
('music information retrieval', 'taylor & francis', {'weight': 0.6})
('music information retrieval', 'cutting-plane method', {'weight': 0.6})
('music information retrieval', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('music information retrieval', 'method of undetermined coefficients', {'weight': 0.6})
('music information retrieval', 'combinatorial optimization', {'weight': 0.6})
('music information retrieval', "newton's method in optimization", {'weight': 0.6})
('music information retrieval', 'metaheuristic', {'weight': 0.6})
('music information retrieval', 'matrix chain multiplication', {'weight': 0.6})
('music information retrieval', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('music information retrieval', 'dynamic time warping', {'weight': 0.6})
('music information retrieval', 'dynamic programming language', {'weight': 0.6})
('music information retrieval', 'call-by-need', {'weight': 0.6})
('music information retrieval', 'big-o notation', {'weight': 0.6})
('music information retrieval', 'comparison of optimization software', {'weight': 0.6})
('music information retrieval', 'quadratic programming', {'weight': 0.6})
('music information retrieval', 'common lisp', {'weight': 0.6})
('music information retrieval', 'barrier function', {'weight': 0.6})
('music information retrieval', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('music information retrieval', 'gradient descent', {'weight': 0.6})
('music information retrieval', 'patricia selinger', {'weight': 0.6})
('music information retrieval', 'discounting', {'weight': 0.6})
('music information retrieval', 'ronald l. rivest', {'weight': 0.6})
('music information retrieval', 'iterative method', {'weight': 0.6})
('music information retrieval', 'limited-memory bfgs', {'weight': 0.6})
('music information retrieval', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('music information retrieval', 'longest common substring problem', {'weight': 0.6})
('music information retrieval', 'clifford stein', {'weight': 0.6})
('music information retrieval', 'computer chess', {'weight': 0.6})
('music information retrieval', 'linear programming', {'weight': 0.6})
('music information retrieval', 'multimedia information retrieval', {'weight': 0.7})
('music information retrieval', 'bitonic tour', {'weight': 0.6})
('music information retrieval', 'linear search problem', {'weight': 0.6})
('music information retrieval', 'information retrieval', {'weight': 0.5})
('music information retrieval', 'systems analysis', {'weight': 0.6})
('music information retrieval', 'capital (economics)', {'weight': 0.6})
('music information retrieval', 'levenshtein distance', {'weight': 0.6})
('music information retrieval', 'nonlinear programming', {'weight': 0.6})
('music information retrieval', 'computational complexity of mathematical operations', {'weight': 0.6})
('music information retrieval', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('music information retrieval', 'gradient', {'weight': 0.6})
('music information retrieval', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('music information retrieval', 'bulletin of the american mathematical society', {'weight': 0.6})
('music information retrieval', 'u.s. english', {'weight': 0.6})
('music information retrieval', 'refutation table', {'weight': 0.6})
('music information retrieval', 'heuristic algorithm', {'weight': 0.6})
('music information retrieval', 'successive linear programming', {'weight': 0.6})
('music information retrieval', 'optimal substructure', {'weight': 0.6})
('music information retrieval', 'programming language', {'weight': 0.6})
('music information retrieval', 'mergesort', {'weight': 0.6})
('music information retrieval', "dijkstra's algorithm", {'weight': 0.6})
('music information retrieval', 'subgradient method', {'weight': 0.6})
('music information retrieval', 'call-by-name', {'weight': 0.6})
('music information retrieval', 'longest increasing subsequence problem', {'weight': 0.6})
('music information retrieval', 'edward prescott', {'weight': 0.6})
('music information retrieval', 'exponential time', {'weight': 0.6})
('music information retrieval', 'ethnomusicology', {'weight': 0.7})
('music information retrieval', 'principle of optimality', {'weight': 0.6})
('music information retrieval', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('music information retrieval', 'mathematical game', {'weight': 0.6})
('music information retrieval', 'nancy stokey', {'weight': 0.6})
('music information retrieval', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('music information retrieval', 'approximation algorithm', {'weight': 0.6})
('music information retrieval', 'discrete-time', {'weight': 0.6})
('music information retrieval', 'cyk algorithm', {'weight': 0.6})
('music information retrieval', 'markov decision process', {'weight': 0.6})
('music information retrieval', "powell's method", {'weight': 0.6})
('music information retrieval', 'wolfe conditions', {'weight': 0.6})
('music information retrieval', 'convexity in economics', {'weight': 0.6})
('music information retrieval', 'transposition table', {'weight': 0.6})
('music information retrieval', 'economics', {'weight': 0.6})
('music information retrieval', 'backward induction', {'weight': 0.6})
('music information retrieval', 'golden section search', {'weight': 0.6})
('music information retrieval', 'edit distance', {'weight': 0.6})
('music information retrieval', 'tree structure', {'weight': 0.6})
('music information retrieval', 'exchange algorithm', {'weight': 0.6})
('music information retrieval', 'dover publications', {'weight': 0.6})
('music information retrieval', 'seam carving', {'weight': 0.6})
('music information retrieval', 'recursive least squares', {'weight': 0.6})
('music information retrieval', 'music software', {'weight': 0.5})
('music information retrieval', 'quasi-newton method', {'weight': 0.6})
('music information retrieval', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('music information retrieval', 'robert e. lucas', {'weight': 0.6})
('music information retrieval', 'non-convexity (economics)', {'weight': 0.6})
('music information retrieval', 'sr1 formula', {'weight': 0.6})
('music information retrieval', 'mathematical reviews', {'weight': 0.6})
('music information retrieval', 'puzzle', {'weight': 0.6})
('music information retrieval', 'associative array', {'weight': 0.6})
('music information retrieval', 'shortest path problem', {'weight': 0.6})
('music information retrieval', 'dynamic algorithm', {'weight': 0.6})
('music information retrieval', 'augmented lagrangian method', {'weight': 0.6})
('music information retrieval', 'charles delisi', {'weight': 0.6})
('music information retrieval', 'greedy algorithm', {'weight': 0.6})
('music information retrieval', "karmarkar's algorithm", {'weight': 0.6})
('music information retrieval', 'lattice models', {'weight': 0.6})
('music information retrieval', 'utility', {'weight': 0.6})
('music information retrieval', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('music information retrieval', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('music information retrieval', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('music information retrieval', 'international standard book number', {'weight': 0.6})
('music information retrieval', 'undirected graph', {'weight': 0.6})
('music information retrieval', 'scheme (programming language)', {'weight': 0.6})
('music information retrieval', 'rna structure', {'weight': 0.6})
('music information retrieval', 'hanoi', {'weight': 0.6})
('music information retrieval', 'perl', {'weight': 0.6})
('music information retrieval', 'digital object identifier', {'weight': 0.6})
('music information retrieval', 'sequential quadratic programming', {'weight': 0.6})
('music information retrieval', "dinic's algorithm", {'weight': 0.6})
('music information retrieval', 'pseudo-polynomial time', {'weight': 0.6})
('music information retrieval', 'partition problem', {'weight': 0.6})
('music information retrieval', 'stochastic programming', {'weight': 0.6})
('music information retrieval', 'hill climbing', {'weight': 0.6})
('music information retrieval', 'musicology', {'weight': 0.7})
('music information retrieval', 'top-down', {'weight': 0.6})
('music information retrieval', 'de boor algorithm', {'weight': 0.6})
('music information retrieval', 'optimization algorithm', {'weight': 0.6})
('music information retrieval', "kruskal's algorithm", {'weight': 0.6})
('music information retrieval', 'parsons code', {'weight': 0.7})
('music information retrieval', 'jacques philippe marie binet', {'weight': 0.6})
('music information retrieval', 'tabu search', {'weight': 0.6})
('music information retrieval', 'divide and conquer algorithm', {'weight': 0.6})
('music information retrieval', 'digital rights management', {'weight': 0.7})
('music information retrieval', "johnson's algorithm", {'weight': 0.6})
('music information retrieval', 'evolutionary algorithm', {'weight': 0.6})
('music information retrieval', 'clique-width', {'weight': 0.6})
('music information retrieval', 'dynamic programming', {'weight': 0.6})
('music information retrieval', 'subroutine', {'weight': 0.6})
('music information retrieval', 'simulated annealing', {'weight': 0.6})
('music information retrieval', 'tower of hanoi', {'weight': 0.6})
('music information retrieval', 'branch and bound', {'weight': 0.6})
('music information retrieval', 'engineering', {'weight': 0.6})
('music information retrieval', 'matroid', {'weight': 0.6})
('music information retrieval', 'viterbi algorithm', {'weight': 0.6})
('music information retrieval', "lemke's algorithm", {'weight': 0.6})
('music information retrieval', 'simplex algorithm', {'weight': 0.6})
('music information retrieval', 'local search (optimization)', {'weight': 0.6})
('music information retrieval', 'hessian matrix', {'weight': 0.6})
('music information retrieval', 'ibm system r', {'weight': 0.6})
('music information retrieval', 'penalty method', {'weight': 0.6})
('music information retrieval', 'audio mining', {'weight': 0.7})
('music information retrieval', 'prolog', {'weight': 0.6})
('music information retrieval', 'time-invariant system', {'weight': 0.6})
('music information retrieval', 'criss-cross algorithm', {'weight': 0.6})
('music information retrieval', 'revised simplex algorithm', {'weight': 0.6})
('music information retrieval', 'the mathematical association of america', {'weight': 0.6})
('music information retrieval', 'line search', {'weight': 0.6})
('music information retrieval', 'j (programming language)', {'weight': 0.6})
('music information retrieval', 'word wrap', {'weight': 0.6})
('music information retrieval', 'subset sum problem', {'weight': 0.6})
('music information retrieval', 'integer programming', {'weight': 0.6})
('music information retrieval', 'nucleosome', {'weight': 0.6})
('music information retrieval', 'earley algorithm', {'weight': 0.6})
('music information retrieval', 'referential transparency (computer science)', {'weight': 0.6})
('music information retrieval', 'recursion', {'weight': 0.6})
('music information retrieval', 'mathematica', {'weight': 0.6})
('music information retrieval', 'quicksort', {'weight': 0.6})
('music information retrieval', 'recursion (computer science)', {'weight': 0.6})
('music information retrieval', 'checkerboard', {'weight': 0.6})
('music information retrieval', 'computer science', {'weight': 0.6})
('music information retrieval', 'brute-force search', {'weight': 0.6})
('music information retrieval', 'mathematics', {'weight': 0.6})
('music information retrieval', 'depth-first search', {'weight': 0.6})
('music information retrieval', 'top-down and bottom-up design', {'weight': 0.6})
('music information retrieval', 'correspondence problem', {'weight': 0.6})
('music information retrieval', 'transcription factor', {'weight': 0.6})
('music information retrieval', 'tree decomposition', {'weight': 0.6})
('music information retrieval', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('music information retrieval', 'structural alignment', {'weight': 0.6})
('music information retrieval', 'local convergence', {'weight': 0.6})
('music information retrieval', 'knapsack problem', {'weight': 0.6})
('music information retrieval', 'graph algorithm', {'weight': 0.6})
('music information retrieval', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('music information retrieval', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('music information retrieval', 'hidden markov model', {'weight': 0.6})
('music information retrieval', 'string (computer science)', {'weight': 0.6})
('music information retrieval', 'bioinformatics', {'weight': 0.6})
('music information retrieval', 'genetics', {'weight': 0.6})
('music information retrieval', 'mathematical optimization', {'weight': 0.6})
('music information retrieval', 'artificial neural networks', {'weight': 0.6})
('music information retrieval', 'introduction to algorithms', {'weight': 0.6})
('music information retrieval', 'thomas h. cormen', {'weight': 0.6})
('music information retrieval', 'music information retrieval', {'weight': 1})
('music information retrieval', 'beat (music)', {'weight': 0.6})
('music information retrieval', 'longest common subsequence problem', {'weight': 0.6})
('music information retrieval', 'convex minimization', {'weight': 0.6})
('music information retrieval', 'successive parabolic interpolation', {'weight': 0.6})
('music information retrieval', 'fibonacci sequence', {'weight': 0.6})
('music information retrieval', 'maximum subarray problem', {'weight': 0.6})
('music information retrieval', 'convex optimization', {'weight': 0.6})
('music information retrieval', 'memoization', {'weight': 0.6})
('music information retrieval', 'richard bellman', {'weight': 0.6})
('music information retrieval', 'exponential growth', {'weight': 0.6})
('music information retrieval', 'charles e. leiserson', {'weight': 0.6})
('music information retrieval', 'charles erwin wilson', {'weight': 0.6})
('music information retrieval', 'interval scheduling', {'weight': 0.6})
('music information retrieval', 'chart parser', {'weight': 0.6})
('music information retrieval', 'travelling salesman problem', {'weight': 0.6})
('music information retrieval', 'bellman equation', {'weight': 0.6})
('convex optimization', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('convex optimization', 'photoshop', {'weight': 0.6})
('convex optimization', 'sequence alignment', {'weight': 0.6})
('convex optimization', 'flow network', {'weight': 0.6})
('convex optimization', 'ellipsoid method', {'weight': 0.6})
('convex optimization', 'chain matrix multiplication', {'weight': 0.6})
('convex optimization', 'ieee', {'weight': 0.6})
('convex optimization', 'backtracking', {'weight': 0.6})
('convex optimization', 'nonlinear conjugate gradient method', {'weight': 0.6})
('convex optimization', 'dynamic problem', {'weight': 0.6})
('convex optimization', 'trust region', {'weight': 0.6})
('convex optimization', 'function (mathematics)', {'weight': 0.6})
('convex optimization', 'minimum spanning tree', {'weight': 0.6})
('convex optimization', 'context-free grammar', {'weight': 0.6})
('convex optimization', 'branch and cut', {'weight': 0.6})
('convex optimization', 'state variable', {'weight': 0.6})
('convex optimization', 'treewidth', {'weight': 0.6})
('convex optimization', 'overlapping subproblem', {'weight': 0.6})
('convex optimization', 'taylor & francis', {'weight': 0.6})
('convex optimization', 'cutting-plane method', {'weight': 0.6})
('convex optimization', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('convex optimization', 'method of undetermined coefficients', {'weight': 0.6})
('convex optimization', 'combinatorial optimization', {'weight': 0.6})
('convex optimization', "newton's method in optimization", {'weight': 0.6})
('convex optimization', 'matrix chain multiplication', {'weight': 0.6})
('convex optimization', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('convex optimization', 'dynamic time warping', {'weight': 0.6})
('convex optimization', 'dynamic programming language', {'weight': 0.6})
('convex optimization', 'call-by-need', {'weight': 0.6})
('convex optimization', 'big-o notation', {'weight': 0.6})
('convex optimization', 'comparison of optimization software', {'weight': 0.6})
('convex optimization', 'quadratic programming', {'weight': 0.6})
('convex optimization', 'common lisp', {'weight': 0.6})
('convex optimization', 'barrier function', {'weight': 0.6})
('convex optimization', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('convex optimization', 'gradient descent', {'weight': 0.6})
('convex optimization', 'patricia selinger', {'weight': 0.6})
('convex optimization', 'discounting', {'weight': 0.6})
('convex optimization', 'ronald l. rivest', {'weight': 0.6})
('convex optimization', 'iterative method', {'weight': 0.6})
('convex optimization', 'limited-memory bfgs', {'weight': 0.6})
('convex optimization', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('convex optimization', 'longest common substring problem', {'weight': 0.6})
('convex optimization', 'clifford stein', {'weight': 0.6})
('convex optimization', 'computer chess', {'weight': 0.6})
('convex optimization', 'linear programming', {'weight': 0.6})
('convex optimization', 'bitonic tour', {'weight': 0.6})
('convex optimization', 'linear search problem', {'weight': 0.6})
('convex optimization', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('convex optimization', 'systems analysis', {'weight': 0.6})
('convex optimization', 'capital (economics)', {'weight': 0.6})
('convex optimization', 'levenshtein distance', {'weight': 0.6})
('convex optimization', 'nonlinear programming', {'weight': 0.6})
('convex optimization', 'convex analysis', {'weight': 0.5})
('convex optimization', 'computational complexity of mathematical operations', {'weight': 0.6})
('convex optimization', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('convex optimization', 'gradient', {'weight': 0.6})
('convex optimization', 'proximal gradient method', {'weight': 0.7})
('convex optimization', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('convex optimization', 'bulletin of the american mathematical society', {'weight': 0.6})
('convex optimization', 'u.s. english', {'weight': 0.6})
('convex optimization', 'refutation table', {'weight': 0.6})
('convex optimization', 'heuristic algorithm', {'weight': 0.6})
('convex optimization', 'successive linear programming', {'weight': 0.6})
('convex optimization', 'optimal substructure', {'weight': 0.6})
('convex optimization', 'programming language', {'weight': 0.6})
('convex optimization', 'mergesort', {'weight': 0.6})
('convex optimization', "dijkstra's algorithm", {'weight': 0.6})
('convex optimization', 'subgradient method', {'weight': 0.6})
('convex optimization', 'call-by-name', {'weight': 0.6})
('convex optimization', 'longest increasing subsequence problem', {'weight': 0.6})
('convex optimization', 'edward prescott', {'weight': 0.6})
('convex optimization', 'exponential time', {'weight': 0.6})
('convex optimization', 'karush\xe2\x80\x93kuhn\xe2\x80\x93tucker conditions', {'weight': 0.7})
('convex optimization', 'principle of optimality', {'weight': 0.6})
('convex optimization', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('convex optimization', 'mathematical game', {'weight': 0.6})
('convex optimization', 'nancy stokey', {'weight': 0.6})
('convex optimization', 'optimization problem', {'weight': 0.7})
('convex optimization', 'approximation algorithm', {'weight': 0.6})
('convex optimization', 'discrete-time', {'weight': 0.6})
('convex optimization', 'cyk algorithm', {'weight': 0.6})
('convex optimization', 'markov decision process', {'weight': 0.6})
('convex optimization', "powell's method", {'weight': 0.6})
('convex optimization', 'wolfe conditions', {'weight': 0.6})
('convex optimization', 'convexity in economics', {'weight': 0.6})
('convex optimization', 'transposition table', {'weight': 0.6})
('convex optimization', 'economics', {'weight': 0.6})
('convex optimization', 'backward induction', {'weight': 0.6})
('convex optimization', 'golden section search', {'weight': 0.6})
('convex optimization', 'edit distance', {'weight': 0.6})
('convex optimization', 'tree structure', {'weight': 0.6})
('convex optimization', 'exchange algorithm', {'weight': 0.6})
('convex optimization', 'dover publications', {'weight': 0.6})
('convex optimization', 'seam carving', {'weight': 0.6})
('convex optimization', 'recursive least squares', {'weight': 0.6})
('convex optimization', 'metaheuristic', {'weight': 0.6})
('convex optimization', 'quasi-newton method', {'weight': 0.6})
('convex optimization', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('convex optimization', 'robert e. lucas', {'weight': 0.6})
('convex optimization', 'non-convexity (economics)', {'weight': 0.6})
('convex optimization', 'sr1 formula', {'weight': 0.6})
('convex optimization', 'mathematical reviews', {'weight': 0.6})
('convex optimization', 'puzzle', {'weight': 0.6})
('convex optimization', 'associative array', {'weight': 0.6})
('convex optimization', 'shortest path problem', {'weight': 0.6})
('convex optimization', 'dynamic algorithm', {'weight': 0.6})
('convex optimization', 'augmented lagrangian method', {'weight': 0.6})
('convex optimization', 'charles delisi', {'weight': 0.6})
('convex optimization', 'greedy algorithm', {'weight': 0.6})
('convex optimization', "karmarkar's algorithm", {'weight': 0.6})
('convex optimization', 'lattice models', {'weight': 0.6})
('convex optimization', 'utility', {'weight': 0.6})
('convex optimization', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('convex optimization', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('convex optimization', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('convex optimization', 'international standard book number', {'weight': 0.6})
('convex optimization', 'undirected graph', {'weight': 0.6})
('convex optimization', 'scheme (programming language)', {'weight': 0.6})
('convex optimization', 'rna structure', {'weight': 0.6})
('convex optimization', 'hanoi', {'weight': 0.6})
('convex optimization', 'perl', {'weight': 0.6})
('convex optimization', 'digital object identifier', {'weight': 0.6})
('convex optimization', 'sequential quadratic programming', {'weight': 0.6})
('convex optimization', "dinic's algorithm", {'weight': 0.6})
('convex optimization', 'pseudo-polynomial time', {'weight': 0.6})
('convex optimization', 'partition problem', {'weight': 0.6})
('convex optimization', 'stochastic programming', {'weight': 0.6})
('convex optimization', 'hill climbing', {'weight': 0.6})
('convex optimization', 'duality', {'weight': 0.7})
('convex optimization', 'top-down', {'weight': 0.6})
('convex optimization', 'de boor algorithm', {'weight': 0.6})
('convex optimization', 'optimization algorithm', {'weight': 0.6})
('convex optimization', "kruskal's algorithm", {'weight': 0.6})
('convex optimization', 'jacques philippe marie binet', {'weight': 0.6})
('convex optimization', 'tabu search', {'weight': 0.6})
('convex optimization', 'divide and conquer algorithm', {'weight': 0.6})
('convex optimization', "johnson's algorithm", {'weight': 0.6})
('convex optimization', 'evolutionary algorithm', {'weight': 0.6})
('convex optimization', 'clique-width', {'weight': 0.6})
('convex optimization', 'dynamic programming', {'weight': 0.6})
('convex optimization', 'subroutine', {'weight': 0.6})
('convex optimization', 'simulated annealing', {'weight': 0.6})
('convex optimization', 'tower of hanoi', {'weight': 0.6})
('convex optimization', 'branch and bound', {'weight': 0.6})
('convex optimization', 'engineering', {'weight': 0.6})
('convex optimization', 'matroid', {'weight': 0.6})
('convex optimization', 'viterbi algorithm', {'weight': 0.6})
('convex optimization', "lemke's algorithm", {'weight': 0.6})
('convex optimization', 'simplex algorithm', {'weight': 0.6})
('convex optimization', 'local search (optimization)', {'weight': 0.6})
('convex optimization', 'hessian matrix', {'weight': 0.6})
('convex optimization', 'ibm system r', {'weight': 0.6})
('convex optimization', 'penalty method', {'weight': 0.6})
('convex optimization', 'prolog', {'weight': 0.6})
('convex optimization', 'time-invariant system', {'weight': 0.6})
('convex optimization', 'criss-cross algorithm', {'weight': 0.6})
('convex optimization', 'revised simplex algorithm', {'weight': 0.6})
('convex optimization', 'the mathematical association of america', {'weight': 0.6})
('convex optimization', 'line search', {'weight': 0.6})
('convex optimization', 'j (programming language)', {'weight': 0.6})
('convex optimization', 'word wrap', {'weight': 0.6})
('convex optimization', 'subset sum problem', {'weight': 0.6})
('convex optimization', 'integer programming', {'weight': 0.6})
('convex optimization', 'nucleosome', {'weight': 0.6})
('convex optimization', 'earley algorithm', {'weight': 0.6})
('convex optimization', 'referential transparency (computer science)', {'weight': 0.6})
('convex optimization', 'recursion', {'weight': 0.6})
('convex optimization', 'mathematica', {'weight': 0.6})
('convex optimization', 'quicksort', {'weight': 0.6})
('convex optimization', 'recursion (computer science)', {'weight': 0.6})
('convex optimization', 'checkerboard', {'weight': 0.6})
('convex optimization', 'computer science', {'weight': 0.6})
('convex optimization', 'brute-force search', {'weight': 0.6})
('convex optimization', 'mathematics', {'weight': 0.6})
('convex optimization', 'depth-first search', {'weight': 0.6})
('convex optimization', 'top-down and bottom-up design', {'weight': 0.6})
('convex optimization', 'correspondence problem', {'weight': 0.6})
('convex optimization', 'transcription factor', {'weight': 0.6})
('convex optimization', 'tree decomposition', {'weight': 0.6})
('convex optimization', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('convex optimization', 'structural alignment', {'weight': 0.6})
('convex optimization', 'local convergence', {'weight': 0.6})
('convex optimization', 'knapsack problem', {'weight': 0.6})
('convex optimization', 'graph algorithm', {'weight': 0.6})
('convex optimization', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('convex optimization', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('convex optimization', 'hidden markov model', {'weight': 0.6})
('convex optimization', 'string (computer science)', {'weight': 0.6})
('convex optimization', 'bioinformatics', {'weight': 0.6})
('convex optimization', 'genetics', {'weight': 0.6})
('convex optimization', 'mathematical optimization', {'weight': 0.6})
('convex optimization', 'artificial neural networks', {'weight': 0.6})
('convex optimization', 'introduction to algorithms', {'weight': 0.6})
('convex optimization', 'thomas h. cormen', {'weight': 0.6})
('convex optimization', 'music information retrieval', {'weight': 0.6})
('convex optimization', 'beat (music)', {'weight': 0.6})
('convex optimization', 'longest common subsequence problem', {'weight': 0.6})
('convex optimization', 'convex minimization', {'weight': 0.6})
('convex optimization', 'successive parabolic interpolation', {'weight': 0.6})
('convex optimization', 'fibonacci sequence', {'weight': 0.6})
('convex optimization', 'maximum subarray problem', {'weight': 0.6})
('convex optimization', 'convex optimization', {'weight': 1})
('convex optimization', 'memoization', {'weight': 0.6})
('convex optimization', 'richard bellman', {'weight': 0.6})
('convex optimization', 'exponential growth', {'weight': 0.6})
('convex optimization', 'charles e. leiserson', {'weight': 0.6})
('convex optimization', 'charles erwin wilson', {'weight': 0.6})
('convex optimization', 'interval scheduling', {'weight': 0.6})
('convex optimization', 'chart parser', {'weight': 0.6})
('convex optimization', 'travelling salesman problem', {'weight': 0.6})
('convex optimization', 'bellman equation', {'weight': 0.6})
('exponential growth', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('exponential growth', 'photoshop', {'weight': 0.6})
('exponential growth', 'sequence alignment', {'weight': 0.6})
('exponential growth', 'flow network', {'weight': 0.6})
('exponential growth', 'menger sponge', {'weight': 0.7})
('exponential growth', 'ellipsoid method', {'weight': 0.6})
('exponential growth', 'chain matrix multiplication', {'weight': 0.6})
('exponential growth', 'ieee', {'weight': 0.6})
('exponential growth', 'backtracking', {'weight': 0.6})
('exponential growth', 'albert allen bartlett', {'weight': 0.7})
('exponential growth', 'nonlinear conjugate gradient method', {'weight': 0.6})
('exponential growth', 'dynamic problem', {'weight': 0.6})
('exponential growth', 'trust region', {'weight': 0.6})
('exponential growth', 'function (mathematics)', {'weight': 0.6})
('exponential growth', 'minimum spanning tree', {'weight': 0.6})
('exponential growth', 'context-free grammar', {'weight': 0.6})
('exponential growth', 'information explosion', {'weight': 0.7})
('exponential growth', 'branch and cut', {'weight': 0.6})
('exponential growth', 'state variable', {'weight': 0.6})
('exponential growth', 'treewidth', {'weight': 0.6})
('exponential growth', 'logarithmic growth', {'weight': 0.7})
('exponential growth', 'overlapping subproblem', {'weight': 0.6})
('exponential growth', 'taylor & francis', {'weight': 0.6})
('exponential growth', 'cutting-plane method', {'weight': 0.6})
('exponential growth', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('exponential growth', 'method of undetermined coefficients', {'weight': 0.6})
('exponential growth', 'combinatorial optimization', {'weight': 0.6})
('exponential growth', "newton's method in optimization", {'weight': 0.6})
('exponential growth', 'matrix chain multiplication', {'weight': 0.6})
('exponential growth', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('exponential growth', 'dynamic time warping', {'weight': 0.6})
('exponential growth', 'dynamic programming language', {'weight': 0.6})
('exponential growth', 'call-by-need', {'weight': 0.6})
('exponential growth', 'big-o notation', {'weight': 0.6})
('exponential growth', 'bounded growth', {'weight': 0.7})
('exponential growth', 'comparison of optimization software', {'weight': 0.6})
('exponential growth', 'quadratic programming', {'weight': 0.6})
('exponential growth', 'common lisp', {'weight': 0.6})
('exponential growth', 'barrier function', {'weight': 0.6})
('exponential growth', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('exponential growth', 'gradient descent', {'weight': 0.6})
('exponential growth', 'patricia selinger', {'weight': 0.6})
('exponential growth', 'discounting', {'weight': 0.6})
('exponential growth', 'ronald l. rivest', {'weight': 0.6})
('exponential growth', 'iterative method', {'weight': 0.6})
('exponential growth', 'limited-memory bfgs', {'weight': 0.6})
('exponential growth', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('exponential growth', 'longest common substring problem', {'weight': 0.6})
('exponential growth', 'clifford stein', {'weight': 0.6})
('exponential growth', 'computer chess', {'weight': 0.6})
('exponential growth', 'linear programming', {'weight': 0.6})
('exponential growth', 'bitonic tour', {'weight': 0.6})
('exponential growth', 'linear search problem', {'weight': 0.6})
('exponential growth', 'exptime', {'weight': 0.7})
('exponential growth', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('exponential growth', 'systems analysis', {'weight': 0.6})
('exponential growth', 'capital (economics)', {'weight': 0.6})
('exponential growth', 'levenshtein distance', {'weight': 0.6})
('exponential growth', 'nonlinear programming', {'weight': 0.6})
('exponential growth', 'computational complexity of mathematical operations', {'weight': 0.6})
('exponential growth', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('exponential growth', 'gradient', {'weight': 0.6})
('exponential growth', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('exponential growth', 'local convergence', {'weight': 0.6})
('exponential growth', 'bulletin of the american mathematical society', {'weight': 0.6})
('exponential growth', 'bacterial growth', {'weight': 0.7})
('exponential growth', 'u.s. english', {'weight': 0.6})
('exponential growth', 'refutation table', {'weight': 0.6})
('exponential growth', 'heuristic algorithm', {'weight': 0.6})
('exponential growth', 'successive linear programming', {'weight': 0.6})
('exponential growth', 'optimal substructure', {'weight': 0.6})
('exponential growth', 'programming language', {'weight': 0.6})
('exponential growth', 'mergesort', {'weight': 0.6})
('exponential growth', "dijkstra's algorithm", {'weight': 0.6})
('exponential growth', 'subgradient method', {'weight': 0.6})
('exponential growth', 'call-by-name', {'weight': 0.6})
('exponential growth', 'longest increasing subsequence problem', {'weight': 0.6})
('exponential growth', 'edward prescott', {'weight': 0.6})
('exponential growth', 'exponential time', {'weight': 0.6})
('exponential growth', 'principle of optimality', {'weight': 0.6})
('exponential growth', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('exponential growth', 'mathematical game', {'weight': 0.6})
('exponential growth', 'nancy stokey', {'weight': 0.6})
('exponential growth', 'law of accelerating returns', {'weight': 0.7})
('exponential growth', 'approximation algorithm', {'weight': 0.6})
('exponential growth', 'discrete-time', {'weight': 0.6})
('exponential growth', 'cyk algorithm', {'weight': 0.6})
('exponential growth', 'markov decision process', {'weight': 0.6})
('exponential growth', "powell's method", {'weight': 0.6})
('exponential growth', 'wolfe conditions', {'weight': 0.6})
('exponential growth', 'convexity in economics', {'weight': 0.6})
('exponential growth', "moore's law", {'weight': 0.7})
('exponential growth', 'transposition table', {'weight': 0.6})
('exponential growth', 'economics', {'weight': 0.6})
('exponential growth', 'backward induction', {'weight': 0.6})
('exponential growth', 'golden section search', {'weight': 0.6})
('exponential growth', 'edit distance', {'weight': 0.6})
('exponential growth', 'tree structure', {'weight': 0.6})
('exponential growth', 'exchange algorithm', {'weight': 0.6})
('exponential growth', 'dover publications', {'weight': 0.6})
('exponential growth', 'seam carving', {'weight': 0.6})
('exponential growth', 'recursive least squares', {'weight': 0.6})
('exponential growth', 'metaheuristic', {'weight': 0.6})
('exponential growth', 'quasi-newton method', {'weight': 0.6})
('exponential growth', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('exponential growth', 'robert e. lucas', {'weight': 0.6})
('exponential growth', 'non-convexity (economics)', {'weight': 0.6})
('exponential growth', 'sr1 formula', {'weight': 0.6})
('exponential growth', 'mathematical reviews', {'weight': 0.6})
('exponential growth', 'list of exponential topics', {'weight': 0.7})
('exponential growth', 'puzzle', {'weight': 0.6})
('exponential growth', 'associative array', {'weight': 0.6})
('exponential growth', 'shortest path problem', {'weight': 0.6})
('exponential growth', 'dynamic algorithm', {'weight': 0.6})
('exponential growth', 'augmented lagrangian method', {'weight': 0.6})
('exponential growth', 'charles delisi', {'weight': 0.6})
('exponential growth', 'greedy algorithm', {'weight': 0.6})
('exponential growth', 'mathematical modeling', {'weight': 0.5})
('exponential growth', "karmarkar's algorithm", {'weight': 0.6})
('exponential growth', 'lattice models', {'weight': 0.6})
('exponential growth', 'utility', {'weight': 0.6})
('exponential growth', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('exponential growth', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('exponential growth', 'malthusian growth model', {'weight': 0.7})
('exponential growth', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('exponential growth', 'international standard book number', {'weight': 0.6})
('exponential growth', 'undirected graph', {'weight': 0.6})
('exponential growth', 'scheme (programming language)', {'weight': 0.6})
('exponential growth', 'rna structure', {'weight': 0.6})
('exponential growth', 'hanoi', {'weight': 0.6})
('exponential growth', 'perl', {'weight': 0.6})
('exponential growth', 'digital object identifier', {'weight': 0.6})
('exponential growth', 'hyperbolic growth', {'weight': 0.7})
('exponential growth', 'sequential quadratic programming', {'weight': 0.6})
('exponential growth', "dinic's algorithm", {'weight': 0.6})
('exponential growth', 'pseudo-polynomial time', {'weight': 0.6})
('exponential growth', 'partition problem', {'weight': 0.6})
('exponential growth', 'stochastic programming', {'weight': 0.6})
('exponential growth', 'hill climbing', {'weight': 0.6})
('exponential growth', 'top-down', {'weight': 0.6})
('exponential growth', 'de boor algorithm', {'weight': 0.6})
('exponential growth', 'optimization algorithm', {'weight': 0.6})
('exponential growth', "kruskal's algorithm", {'weight': 0.6})
('exponential growth', 'jacques philippe marie binet', {'weight': 0.6})
('exponential growth', 'tabu search', {'weight': 0.6})
('exponential growth', 'divide and conquer algorithm', {'weight': 0.6})
('exponential growth', "johnson's algorithm", {'weight': 0.6})
('exponential growth', 'evolutionary algorithm', {'weight': 0.6})
('exponential growth', 'clique-width', {'weight': 0.6})
('exponential growth', 'dynamic programming', {'weight': 0.6})
('exponential growth', 'subroutine', {'weight': 0.6})
('exponential growth', 'expspace', {'weight': 0.7})
('exponential growth', 'simulated annealing', {'weight': 0.6})
('exponential growth', 'tower of hanoi', {'weight': 0.6})
('exponential growth', 'branch and bound', {'weight': 0.6})
('exponential growth', 'engineering', {'weight': 0.6})
('exponential growth', 'matroid', {'weight': 0.6})
('exponential growth', 'viterbi algorithm', {'weight': 0.6})
('exponential growth', "lemke's algorithm", {'weight': 0.6})
('exponential growth', 'simplex algorithm', {'weight': 0.6})
('exponential growth', 'local search (optimization)', {'weight': 0.6})
('exponential growth', 'hessian matrix', {'weight': 0.6})
('exponential growth', 'ibm system r', {'weight': 0.6})
('exponential growth', 'penalty method', {'weight': 0.6})
('exponential growth', 'prolog', {'weight': 0.6})
('exponential growth', 'time-invariant system', {'weight': 0.6})
('exponential growth', 'criss-cross algorithm', {'weight': 0.6})
('exponential growth', 'arthrobacter', {'weight': 0.7})
('exponential growth', 'revised simplex algorithm', {'weight': 0.6})
('exponential growth', 'cell growth', {'weight': 0.7})
('exponential growth', 'the mathematical association of america', {'weight': 0.6})
('exponential growth', 'line search', {'weight': 0.6})
('exponential growth', 'j (programming language)', {'weight': 0.6})
('exponential growth', 'word wrap', {'weight': 0.6})
('exponential growth', 'subset sum problem', {'weight': 0.6})
('exponential growth', 'integer programming', {'weight': 0.6})
('exponential growth', 'nucleosome', {'weight': 0.6})
('exponential growth', 'asymptotic notation', {'weight': 0.7})
('exponential growth', 'earley algorithm', {'weight': 0.6})
('exponential growth', 'referential transparency (computer science)', {'weight': 0.6})
('exponential growth', 'recursion', {'weight': 0.6})
('exponential growth', 'mathematica', {'weight': 0.6})
('exponential growth', 'quicksort', {'weight': 0.6})
('exponential growth', 'recursion (computer science)', {'weight': 0.6})
('exponential growth', 'checkerboard', {'weight': 0.6})
('exponential growth', 'computer science', {'weight': 0.6})
('exponential growth', 'brute-force search', {'weight': 0.6})
('exponential growth', 'mathematics', {'weight': 0.6})
('exponential growth', 'depth-first search', {'weight': 0.6})
('exponential growth', 'exponential algorithm', {'weight': 0.7})
('exponential growth', 'top-down and bottom-up design', {'weight': 0.6})
('exponential growth', 'correspondence problem', {'weight': 0.6})
('exponential growth', 'transcription factor', {'weight': 0.6})
('exponential growth', 'tree decomposition', {'weight': 0.6})
('exponential growth', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('exponential growth', 'structural alignment', {'weight': 0.6})
('exponential growth', 'ordinary differential equations', {'weight': 0.5})
('exponential growth', 'knapsack problem', {'weight': 0.6})
('exponential growth', 'graph algorithm', {'weight': 0.6})
('exponential growth', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('exponential growth', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('exponential growth', 'hidden markov model', {'weight': 0.6})
('exponential growth', 'string (computer science)', {'weight': 0.6})
('exponential growth', 'bioinformatics', {'weight': 0.6})
('exponential growth', 'genetics', {'weight': 0.6})
('exponential growth', 'mathematical optimization', {'weight': 0.6})
('exponential growth', 'artificial neural networks', {'weight': 0.6})
('exponential growth', 'introduction to algorithms', {'weight': 0.6})
('exponential growth', 'thomas h. cormen', {'weight': 0.6})
('exponential growth', 'logistic curve', {'weight': 0.7})
('exponential growth', 'music information retrieval', {'weight': 0.6})
('exponential growth', 'beat (music)', {'weight': 0.6})
('exponential growth', 'longest common subsequence problem', {'weight': 0.6})
('exponential growth', 'convex minimization', {'weight': 0.6})
('exponential growth', 'successive parabolic interpolation', {'weight': 0.6})
('exponential growth', 'fibonacci sequence', {'weight': 0.6})
('exponential growth', 'maximum subarray problem', {'weight': 0.6})
('exponential growth', 'convex optimization', {'weight': 0.6})
('exponential growth', 'memoization', {'weight': 0.6})
('exponential growth', 'richard bellman', {'weight': 0.6})
('exponential growth', 'exponential growth', {'weight': 1})
('exponential growth', 'charles e. leiserson', {'weight': 0.6})
('exponential growth', 'charles erwin wilson', {'weight': 0.6})
('exponential growth', 'interval scheduling', {'weight': 0.6})
('exponential growth', 'chart parser', {'weight': 0.6})
('exponential growth', 'exponentials', {'weight': 0.5})
('exponential growth', 'travelling salesman problem', {'weight': 0.6})
('exponential growth', 'hausdorff dimension', {'weight': 0.7})
('exponential growth', 'bellman equation', {'weight': 0.6})
('bellman equation', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('bellman equation', 'photoshop', {'weight': 0.6})
('bellman equation', 'sequence alignment', {'weight': 0.6})
('bellman equation', 'flow network', {'weight': 0.6})
('bellman equation', 'charles erwin wilson', {'weight': 0.6})
('bellman equation', 'ellipsoid method', {'weight': 0.6})
('bellman equation', 'chain matrix multiplication', {'weight': 0.6})
('bellman equation', 'ieee', {'weight': 0.6})
('bellman equation', 'backtracking', {'weight': 0.6})
('bellman equation', 'nonlinear conjugate gradient method', {'weight': 0.6})
('bellman equation', 'dynamic problem', {'weight': 0.6})
('bellman equation', 'trust region', {'weight': 0.6})
('bellman equation', 'function (mathematics)', {'weight': 0.6})
('bellman equation', 'control theory', {'weight': 0.5})
('bellman equation', 'minimum spanning tree', {'weight': 0.6})
('bellman equation', 'context-free grammar', {'weight': 0.6})
('bellman equation', 'branch and cut', {'weight': 0.6})
('bellman equation', 'state variable', {'weight': 0.6})
('bellman equation', 'treewidth', {'weight': 0.6})
('bellman equation', 'overlapping subproblem', {'weight': 0.6})
('bellman equation', 'taylor & francis', {'weight': 0.6})
('bellman equation', 'recursive competitive equilibrium', {'weight': 0.7})
('bellman equation', 'cutting-plane method', {'weight': 0.6})
('bellman equation', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('bellman equation', 'method of undetermined coefficients', {'weight': 0.6})
('bellman equation', 'combinatorial optimization', {'weight': 0.6})
('bellman equation', "newton's method in optimization", {'weight': 0.6})
('bellman equation', 'matrix chain multiplication', {'weight': 0.6})
('bellman equation', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('bellman equation', 'dynamic time warping', {'weight': 0.6})
('bellman equation', 'dynamic programming language', {'weight': 0.6})
('bellman equation', 'call-by-need', {'weight': 0.6})
('bellman equation', 'big-o notation', {'weight': 0.6})
('bellman equation', 'comparison of optimization software', {'weight': 0.6})
('bellman equation', 'quadratic programming', {'weight': 0.6})
('bellman equation', 'common lisp', {'weight': 0.6})
('bellman equation', 'barrier function', {'weight': 0.6})
('bellman equation', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('bellman equation', 'gradient descent', {'weight': 0.6})
('bellman equation', 'patricia selinger', {'weight': 0.6})
('bellman equation', 'discounting', {'weight': 0.6})
('bellman equation', 'ronald l. rivest', {'weight': 0.6})
('bellman equation', 'iterative method', {'weight': 0.6})
('bellman equation', 'limited-memory bfgs', {'weight': 0.6})
('bellman equation', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('bellman equation', 'longest common substring problem', {'weight': 0.6})
('bellman equation', 'clifford stein', {'weight': 0.6})
('bellman equation', 'computer chess', {'weight': 0.6})
('bellman equation', 'linear programming', {'weight': 0.6})
('bellman equation', 'bitonic tour', {'weight': 0.6})
('bellman equation', 'linear search problem', {'weight': 0.6})
('bellman equation', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('bellman equation', 'systems analysis', {'weight': 0.6})
('bellman equation', 'capital (economics)', {'weight': 0.6})
('bellman equation', 'levenshtein distance', {'weight': 0.6})
('bellman equation', 'nonlinear programming', {'weight': 0.6})
('bellman equation', 'computational complexity of mathematical operations', {'weight': 0.6})
('bellman equation', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('bellman equation', 'gradient', {'weight': 0.6})
('bellman equation', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('bellman equation', 'bulletin of the american mathematical society', {'weight': 0.6})
('bellman equation', 'u.s. english', {'weight': 0.6})
('bellman equation', 'refutation table', {'weight': 0.6})
('bellman equation', 'heuristic algorithm', {'weight': 0.6})
('bellman equation', 'successive linear programming', {'weight': 0.6})
('bellman equation', 'optimal substructure', {'weight': 0.7})
('bellman equation', 'optimal control theory', {'weight': 0.7})
('bellman equation', 'programming language', {'weight': 0.6})
('bellman equation', 'mergesort', {'weight': 0.6})
('bellman equation', "dijkstra's algorithm", {'weight': 0.6})
('bellman equation', 'subgradient method', {'weight': 0.6})
('bellman equation', 'call-by-name', {'weight': 0.6})
('bellman equation', 'longest increasing subsequence problem', {'weight': 0.6})
('bellman equation', 'edward prescott', {'weight': 0.6})
('bellman equation', 'exponential time', {'weight': 0.6})
('bellman equation', 'principle of optimality', {'weight': 0.6})
('bellman equation', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('bellman equation', 'mathematical game', {'weight': 0.6})
('bellman equation', 'nancy stokey', {'weight': 0.6})
('bellman equation', 'approximation algorithm', {'weight': 0.6})
('bellman equation', 'discrete-time', {'weight': 0.6})
('bellman equation', 'cyk algorithm', {'weight': 0.6})
('bellman equation', 'markov decision process', {'weight': 0.7})
('bellman equation', "powell's method", {'weight': 0.6})
('bellman equation', 'wolfe conditions', {'weight': 0.6})
('bellman equation', 'convexity in economics', {'weight': 0.6})
('bellman equation', 'transposition table', {'weight': 0.6})
('bellman equation', 'economics', {'weight': 0.6})
('bellman equation', 'backward induction', {'weight': 0.6})
('bellman equation', 'golden section search', {'weight': 0.6})
('bellman equation', 'edit distance', {'weight': 0.6})
('bellman equation', 'tree structure', {'weight': 0.6})
('bellman equation', 'exchange algorithm', {'weight': 0.6})
('bellman equation', 'dover publications', {'weight': 0.6})
('bellman equation', 'seam carving', {'weight': 0.6})
('bellman equation', 'recursive least squares', {'weight': 0.6})
('bellman equation', 'metaheuristic', {'weight': 0.6})
('bellman equation', 'quasi-newton method', {'weight': 0.6})
('bellman equation', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('bellman equation', 'robert e. lucas', {'weight': 0.6})
('bellman equation', 'non-convexity (economics)', {'weight': 0.6})
('bellman equation', 'sr1 formula', {'weight': 0.6})
('bellman equation', 'mathematical reviews', {'weight': 0.6})
('bellman equation', 'puzzle', {'weight': 0.6})
('bellman equation', 'associative array', {'weight': 0.6})
('bellman equation', 'shortest path problem', {'weight': 0.6})
('bellman equation', 'dynamic algorithm', {'weight': 0.6})
('bellman equation', 'augmented lagrangian method', {'weight': 0.6})
('bellman equation', 'charles delisi', {'weight': 0.6})
('bellman equation', 'greedy algorithm', {'weight': 0.6})
('bellman equation', "karmarkar's algorithm", {'weight': 0.6})
('bellman equation', 'lattice models', {'weight': 0.6})
('bellman equation', 'utility', {'weight': 0.6})
('bellman equation', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('bellman equation', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('bellman equation', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('bellman equation', 'international standard book number', {'weight': 0.6})
('bellman equation', 'undirected graph', {'weight': 0.6})
('bellman equation', 'scheme (programming language)', {'weight': 0.6})
('bellman equation', 'rna structure', {'weight': 0.6})
('bellman equation', 'hanoi', {'weight': 0.6})
('bellman equation', 'perl', {'weight': 0.6})
('bellman equation', 'digital object identifier', {'weight': 0.6})
('bellman equation', 'sequential quadratic programming', {'weight': 0.6})
('bellman equation', "dinic's algorithm", {'weight': 0.6})
('bellman equation', 'pseudo-polynomial time', {'weight': 0.6})
('bellman equation', 'partition problem', {'weight': 0.6})
('bellman equation', 'stochastic programming', {'weight': 0.6})
('bellman equation', 'bellman pseudospectral method', {'weight': 0.7})
('bellman equation', 'hill climbing', {'weight': 0.6})
('bellman equation', 'top-down', {'weight': 0.6})
('bellman equation', 'de boor algorithm', {'weight': 0.6})
('bellman equation', 'optimization algorithm', {'weight': 0.6})
('bellman equation', "kruskal's algorithm", {'weight': 0.6})
('bellman equation', 'jacques philippe marie binet', {'weight': 0.6})
('bellman equation', 'equations', {'weight': 0.5})
('bellman equation', 'tabu search', {'weight': 0.6})
('bellman equation', 'divide and conquer algorithm', {'weight': 0.6})
('bellman equation', "johnson's algorithm", {'weight': 0.6})
('bellman equation', 'evolutionary algorithm', {'weight': 0.6})
('bellman equation', 'clique-width', {'weight': 0.6})
('bellman equation', 'dynamic programming', {'weight': 0.7})
('bellman equation', 'subroutine', {'weight': 0.6})
('bellman equation', 'simulated annealing', {'weight': 0.6})
('bellman equation', 'tower of hanoi', {'weight': 0.6})
('bellman equation', 'branch and bound', {'weight': 0.6})
('bellman equation', 'engineering', {'weight': 0.6})
('bellman equation', 'matroid', {'weight': 0.6})
('bellman equation', 'viterbi algorithm', {'weight': 0.6})
('bellman equation', "lemke's algorithm", {'weight': 0.6})
('bellman equation', 'simplex algorithm', {'weight': 0.6})
('bellman equation', 'local search (optimization)', {'weight': 0.6})
('bellman equation', 'hessian matrix', {'weight': 0.6})
('bellman equation', 'hamilton\xe2\x80\x93jacobi\xe2\x80\x93bellman equation', {'weight': 0.7})
('bellman equation', 'ibm system r', {'weight': 0.6})
('bellman equation', 'penalty method', {'weight': 0.6})
('bellman equation', 'prolog', {'weight': 0.6})
('bellman equation', 'time-invariant system', {'weight': 0.6})
('bellman equation', 'criss-cross algorithm', {'weight': 0.6})
('bellman equation', 'revised simplex algorithm', {'weight': 0.6})
('bellman equation', 'the mathematical association of america', {'weight': 0.6})
('bellman equation', 'line search', {'weight': 0.6})
('bellman equation', 'j (programming language)', {'weight': 0.6})
('bellman equation', 'word wrap', {'weight': 0.6})
('bellman equation', 'subset sum problem', {'weight': 0.6})
('bellman equation', 'integer programming', {'weight': 0.6})
('bellman equation', 'nucleosome', {'weight': 0.6})
('bellman equation', 'earley algorithm', {'weight': 0.6})
('bellman equation', 'referential transparency (computer science)', {'weight': 0.6})
('bellman equation', 'recursion', {'weight': 0.6})
('bellman equation', 'mathematica', {'weight': 0.6})
('bellman equation', 'quicksort', {'weight': 0.6})
('bellman equation', 'recursion (computer science)', {'weight': 0.6})
('bellman equation', 'computer science', {'weight': 0.6})
('bellman equation', 'brute-force search', {'weight': 0.6})
('bellman equation', 'mathematics', {'weight': 0.6})
('bellman equation', 'depth-first search', {'weight': 0.6})
('bellman equation', 'top-down and bottom-up design', {'weight': 0.6})
('bellman equation', 'correspondence problem', {'weight': 0.6})
('bellman equation', 'transcription factor', {'weight': 0.6})
('bellman equation', 'tree decomposition', {'weight': 0.6})
('bellman equation', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('bellman equation', 'structural alignment', {'weight': 0.6})
('bellman equation', 'local convergence', {'weight': 0.6})
('bellman equation', 'knapsack problem', {'weight': 0.6})
('bellman equation', 'graph algorithm', {'weight': 0.6})
('bellman equation', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('bellman equation', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('bellman equation', 'hidden markov model', {'weight': 0.6})
('bellman equation', 'string (computer science)', {'weight': 0.6})
('bellman equation', 'bioinformatics', {'weight': 0.6})
('bellman equation', 'genetics', {'weight': 0.6})
('bellman equation', 'mathematical optimization', {'weight': 0.6})
('bellman equation', 'artificial neural networks', {'weight': 0.6})
('bellman equation', 'introduction to algorithms', {'weight': 0.6})
('bellman equation', 'thomas h. cormen', {'weight': 0.6})
('bellman equation', 'music information retrieval', {'weight': 0.6})
('bellman equation', 'beat (music)', {'weight': 0.6})
('bellman equation', 'longest common subsequence problem', {'weight': 0.6})
('bellman equation', 'convex minimization', {'weight': 0.6})
('bellman equation', 'successive parabolic interpolation', {'weight': 0.6})
('bellman equation', 'fibonacci sequence', {'weight': 0.6})
('bellman equation', 'maximum subarray problem', {'weight': 0.6})
('bellman equation', 'convex optimization', {'weight': 0.6})
('bellman equation', 'memoization', {'weight': 0.6})
('bellman equation', 'richard bellman', {'weight': 0.6})
('bellman equation', 'exponential growth', {'weight': 0.6})
('bellman equation', 'charles e. leiserson', {'weight': 0.6})
('bellman equation', 'checkerboard', {'weight': 0.6})
('bellman equation', 'interval scheduling', {'weight': 0.6})
('bellman equation', 'chart parser', {'weight': 0.6})
('bellman equation', 'travelling salesman problem', {'weight': 0.6})
('bellman equation', 'bellman equation', {'weight': 1})
('convexity in economics', 'convexity in economics', {'weight': 1})
('convexity in economics', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('convexity in economics', 'sequence alignment', {'weight': 0.6})
('convexity in economics', 'flow network', {'weight': 0.6})
('convexity in economics', 'photoshop', {'weight': 0.6})
('convexity in economics', 'bellman equation', {'weight': 0.6})
('convexity in economics', 'charles erwin wilson', {'weight': 0.6})
('convexity in economics', 'ellipsoid method', {'weight': 0.6})
('convexity in economics', 'chain matrix multiplication', {'weight': 0.6})
('convexity in economics', 'ieee', {'weight': 0.6})
('convexity in economics', 'backtracking', {'weight': 0.6})
('convexity in economics', 'nonlinear conjugate gradient method', {'weight': 0.6})
('convexity in economics', 'dynamic problem', {'weight': 0.6})
('convexity in economics', 'trust region', {'weight': 0.6})
('convexity in economics', 'function (mathematics)', {'weight': 0.6})
('convexity in economics', 'minimum spanning tree', {'weight': 0.6})
('convexity in economics', 'context-free grammar', {'weight': 0.6})
('convexity in economics', 'branch and cut', {'weight': 0.6})
('convexity in economics', 'state variable', {'weight': 0.6})
('convexity in economics', 'treewidth', {'weight': 0.6})
('convexity in economics', 'overlapping subproblem', {'weight': 0.6})
('convexity in economics', 'taylor & francis', {'weight': 0.6})
('convexity in economics', 'cutting-plane method', {'weight': 0.6})
('convexity in economics', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('convexity in economics', 'method of undetermined coefficients', {'weight': 0.6})
('convexity in economics', 'combinatorial optimization', {'weight': 0.6})
('convexity in economics', "newton's method in optimization", {'weight': 0.6})
('convexity in economics', 'mathematical and quantitative methods (economics)', {'weight': 0.5})
('convexity in economics', 'matrix chain multiplication', {'weight': 0.6})
('convexity in economics', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('convexity in economics', 'dynamic time warping', {'weight': 0.6})
('convexity in economics', 'dynamic programming language', {'weight': 0.6})
('convexity in economics', 'call-by-need', {'weight': 0.6})
('convexity in economics', 'big-o notation', {'weight': 0.6})
('convexity in economics', 'convex geometry', {'weight': 0.5})
('convexity in economics', 'comparison of optimization software', {'weight': 0.6})
('convexity in economics', 'quadratic programming', {'weight': 0.6})
('convexity in economics', 'common lisp', {'weight': 0.6})
('convexity in economics', 'barrier function', {'weight': 0.6})
('convexity in economics', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('convexity in economics', 'gradient descent', {'weight': 0.6})
('convexity in economics', 'patricia selinger', {'weight': 0.6})
('convexity in economics', 'discounting', {'weight': 0.6})
('convexity in economics', 'ronald l. rivest', {'weight': 0.6})
('convexity in economics', 'iterative method', {'weight': 0.6})
('convexity in economics', 'limited-memory bfgs', {'weight': 0.6})
('convexity in economics', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('convexity in economics', 'longest common substring problem', {'weight': 0.6})
('convexity in economics', 'clifford stein', {'weight': 0.6})
('convexity in economics', 'computer chess', {'weight': 0.6})
('convexity in economics', 'linear programming', {'weight': 0.6})
('convexity in economics', 'bitonic tour', {'weight': 0.6})
('convexity in economics', 'linear search problem', {'weight': 0.6})
('convexity in economics', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('convexity in economics', 'mathematical economics', {'weight': 0.5})
('convexity in economics', 'capital (economics)', {'weight': 0.6})
('convexity in economics', 'levenshtein distance', {'weight': 0.6})
('convexity in economics', 'nonlinear programming', {'weight': 0.6})
('convexity in economics', 'computational complexity of mathematical operations', {'weight': 0.6})
('convexity in economics', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('convexity in economics', 'gradient', {'weight': 0.6})
('convexity in economics', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('convexity in economics', 'bulletin of the american mathematical society', {'weight': 0.6})
('convexity in economics', 'u.s. english', {'weight': 0.6})
('convexity in economics', 'refutation table', {'weight': 0.6})
('convexity in economics', 'heuristic algorithm', {'weight': 0.6})
('convexity in economics', 'successive linear programming', {'weight': 0.6})
('convexity in economics', 'optimal substructure', {'weight': 0.6})
('convexity in economics', 'programming language', {'weight': 0.6})
('convexity in economics', 'mergesort', {'weight': 0.6})
('convexity in economics', "dijkstra's algorithm", {'weight': 0.6})
('convexity in economics', 'subgradient method', {'weight': 0.6})
('convexity in economics', 'call-by-name', {'weight': 0.6})
('convexity in economics', 'longest increasing subsequence problem', {'weight': 0.6})
('convexity in economics', 'edward prescott', {'weight': 0.6})
('convexity in economics', 'exponential time', {'weight': 0.6})
('convexity in economics', 'principle of optimality', {'weight': 0.6})
('convexity in economics', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('convexity in economics', 'mathematical game', {'weight': 0.6})
('convexity in economics', 'nancy stokey', {'weight': 0.6})
('convexity in economics', 'approximation algorithm', {'weight': 0.6})
('convexity in economics', 'discrete-time', {'weight': 0.6})
('convexity in economics', 'cyk algorithm', {'weight': 0.6})
('convexity in economics', 'markov decision process', {'weight': 0.6})
('convexity in economics', "powell's method", {'weight': 0.6})
('convexity in economics', 'wolfe conditions', {'weight': 0.6})
('convexity in economics', 'transposition table', {'weight': 0.6})
('convexity in economics', 'economics', {'weight': 0.6})
('convexity in economics', 'backward induction', {'weight': 0.6})
('convexity in economics', 'golden section search', {'weight': 0.6})
('convexity in economics', 'edit distance', {'weight': 0.6})
('convexity in economics', 'tree structure', {'weight': 0.6})
('convexity in economics', 'exchange algorithm', {'weight': 0.6})
('convexity in economics', 'dover publications', {'weight': 0.6})
('convexity in economics', 'seam carving', {'weight': 0.6})
('convexity in economics', 'recursive least squares', {'weight': 0.6})
('convexity in economics', 'metaheuristic', {'weight': 0.6})
('convexity in economics', 'quasi-newton method', {'weight': 0.6})
('convexity in economics', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('convexity in economics', 'robert e. lucas', {'weight': 0.6})
('convexity in economics', 'non-convexity (economics)', {'weight': 0.6})
('convexity in economics', 'sr1 formula', {'weight': 0.6})
('convexity in economics', 'mathematical reviews', {'weight': 0.6})
('convexity in economics', 'puzzle', {'weight': 0.6})
('convexity in economics', 'associative array', {'weight': 0.6})
('convexity in economics', 'shortest path problem', {'weight': 0.6})
('convexity in economics', 'dynamic algorithm', {'weight': 0.6})
('convexity in economics', 'augmented lagrangian method', {'weight': 0.6})
('convexity in economics', 'charles delisi', {'weight': 0.6})
('convexity in economics', 'greedy algorithm', {'weight': 0.6})
('convexity in economics', "karmarkar's algorithm", {'weight': 0.6})
('convexity in economics', 'lattice models', {'weight': 0.6})
('convexity in economics', 'utility', {'weight': 0.6})
('convexity in economics', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('convexity in economics', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('convexity in economics', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('convexity in economics', 'international standard book number', {'weight': 0.6})
('convexity in economics', 'undirected graph', {'weight': 0.6})
('convexity in economics', 'scheme (programming language)', {'weight': 0.6})
('convexity in economics', 'rna structure', {'weight': 0.6})
('convexity in economics', 'hanoi', {'weight': 0.6})
('convexity in economics', 'perl', {'weight': 0.6})
('convexity in economics', 'digital object identifier', {'weight': 0.6})
('convexity in economics', 'sequential quadratic programming', {'weight': 0.6})
('convexity in economics', "dinic's algorithm", {'weight': 0.6})
('convexity in economics', 'pseudo-polynomial time', {'weight': 0.6})
('convexity in economics', 'partition problem', {'weight': 0.6})
('convexity in economics', 'stochastic programming', {'weight': 0.6})
('convexity in economics', 'hill climbing', {'weight': 0.6})
('convexity in economics', 'top-down', {'weight': 0.6})
('convexity in economics', 'de boor algorithm', {'weight': 0.6})
('convexity in economics', 'optimization algorithm', {'weight': 0.6})
('convexity in economics', "kruskal's algorithm", {'weight': 0.6})
('convexity in economics', 'jacques philippe marie binet', {'weight': 0.6})
('convexity in economics', 'tabu search', {'weight': 0.6})
('convexity in economics', 'divide and conquer algorithm', {'weight': 0.6})
('convexity in economics', "johnson's algorithm", {'weight': 0.6})
('convexity in economics', 'evolutionary algorithm', {'weight': 0.6})
('convexity in economics', 'clique-width', {'weight': 0.6})
('convexity in economics', 'systems analysis', {'weight': 0.6})
('convexity in economics', 'dynamic programming', {'weight': 0.6})
('convexity in economics', 'subroutine', {'weight': 0.6})
('convexity in economics', 'simulated annealing', {'weight': 0.6})
('convexity in economics', 'tower of hanoi', {'weight': 0.6})
('convexity in economics', 'branch and bound', {'weight': 0.6})
('convexity in economics', 'engineering', {'weight': 0.6})
('convexity in economics', 'matroid', {'weight': 0.6})
('convexity in economics', 'viterbi algorithm', {'weight': 0.6})
('convexity in economics', "lemke's algorithm", {'weight': 0.6})
('convexity in economics', 'simplex algorithm', {'weight': 0.6})
('convexity in economics', 'local search (optimization)', {'weight': 0.6})
('convexity in economics', 'hessian matrix', {'weight': 0.6})
('convexity in economics', 'ibm system r', {'weight': 0.6})
('convexity in economics', 'penalty method', {'weight': 0.6})
('convexity in economics', 'prolog', {'weight': 0.6})
('convexity in economics', 'time-invariant system', {'weight': 0.6})
('convexity in economics', 'criss-cross algorithm', {'weight': 0.6})
('convexity in economics', 'revised simplex algorithm', {'weight': 0.6})
('convexity in economics', 'the mathematical association of america', {'weight': 0.6})
('convexity in economics', 'line search', {'weight': 0.6})
('convexity in economics', 'j (programming language)', {'weight': 0.6})
('convexity in economics', 'word wrap', {'weight': 0.6})
('convexity in economics', 'subset sum problem', {'weight': 0.6})
('convexity in economics', 'integer programming', {'weight': 0.6})
('convexity in economics', 'nucleosome', {'weight': 0.6})
('convexity in economics', 'earley algorithm', {'weight': 0.6})
('convexity in economics', 'referential transparency (computer science)', {'weight': 0.6})
('convexity in economics', 'recursion', {'weight': 0.6})
('convexity in economics', 'mathematica', {'weight': 0.6})
('convexity in economics', 'quicksort', {'weight': 0.6})
('convexity in economics', 'recursion (computer science)', {'weight': 0.6})
('convexity in economics', 'computer science', {'weight': 0.6})
('convexity in economics', 'brute-force search', {'weight': 0.6})
('convexity in economics', 'mathematics', {'weight': 0.6})
('convexity in economics', 'depth-first search', {'weight': 0.6})
('convexity in economics', 'top-down and bottom-up design', {'weight': 0.6})
('convexity in economics', 'correspondence problem', {'weight': 0.6})
('convexity in economics', 'transcription factor', {'weight': 0.6})
('convexity in economics', 'tree decomposition', {'weight': 0.6})
('convexity in economics', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('convexity in economics', 'structural alignment', {'weight': 0.6})
('convexity in economics', 'local convergence', {'weight': 0.6})
('convexity in economics', 'knapsack problem', {'weight': 0.6})
('convexity in economics', 'graph algorithm', {'weight': 0.6})
('convexity in economics', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('convexity in economics', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('convexity in economics', 'hidden markov model', {'weight': 0.6})
('convexity in economics', 'string (computer science)', {'weight': 0.6})
('convexity in economics', 'bioinformatics', {'weight': 0.6})
('convexity in economics', 'genetics', {'weight': 0.6})
('convexity in economics', 'mathematical optimization', {'weight': 0.6})
('convexity in economics', 'artificial neural networks', {'weight': 0.6})
('convexity in economics', 'introduction to algorithms', {'weight': 0.6})
('convexity in economics', 'thomas h. cormen', {'weight': 0.6})
('convexity in economics', 'general equilibrium and disequilibrium', {'weight': 0.5})
('convexity in economics', 'music information retrieval', {'weight': 0.6})
('convexity in economics', 'beat (music)', {'weight': 0.6})
('convexity in economics', 'longest common subsequence problem', {'weight': 0.6})
('convexity in economics', 'convex minimization', {'weight': 0.6})
('convexity in economics', 'successive parabolic interpolation', {'weight': 0.6})
('convexity in economics', 'fibonacci sequence', {'weight': 0.6})
('convexity in economics', 'maximum subarray problem', {'weight': 0.6})
('convexity in economics', 'convex optimization', {'weight': 0.6})
('convexity in economics', 'memoization', {'weight': 0.6})
('convexity in economics', 'richard bellman', {'weight': 0.6})
('convexity in economics', 'exponential growth', {'weight': 0.6})
('convexity in economics', 'charles e. leiserson', {'weight': 0.6})
('convexity in economics', 'checkerboard', {'weight': 0.6})
('convexity in economics', 'interval scheduling', {'weight': 0.6})
('convexity in economics', 'chart parser', {'weight': 0.6})
('convexity in economics', 'travelling salesman problem', {'weight': 0.6})
('convexity in economics', 'convex hulls', {'weight': 0.5})
('backtracking', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('backtracking', 'photoshop', {'weight': 0.6})
('backtracking', 'sequence alignment', {'weight': 0.6})
('backtracking', 'flow network', {'weight': 0.6})
('backtracking', 'ellipsoid method', {'weight': 0.6})
('backtracking', 'chain matrix multiplication', {'weight': 0.6})
('backtracking', 'ieee', {'weight': 0.6})
('backtracking', 'backtracking', {'weight': 1})
('backtracking', 'nonlinear conjugate gradient method', {'weight': 0.6})
('backtracking', 'dynamic problem', {'weight': 0.6})
('backtracking', 'trust region', {'weight': 0.6})
('backtracking', 'function (mathematics)', {'weight': 0.6})
('backtracking', 'minimum spanning tree', {'weight': 0.6})
('backtracking', 'context-free grammar', {'weight': 0.6})
('backtracking', 'branch and cut', {'weight': 0.6})
('backtracking', 'state variable', {'weight': 0.6})
('backtracking', 'treewidth', {'weight': 0.6})
('backtracking', 'overlapping subproblem', {'weight': 0.6})
('backtracking', 'taylor & francis', {'weight': 0.6})
('backtracking', 'cutting-plane method', {'weight': 0.6})
('backtracking', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('backtracking', 'method of undetermined coefficients', {'weight': 0.6})
('backtracking', 'combinatorial optimization', {'weight': 0.6})
('backtracking', "newton's method in optimization", {'weight': 0.6})
('backtracking', 'pattern matching', {'weight': 0.5})
('backtracking', 'matrix chain multiplication', {'weight': 0.6})
('backtracking', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('backtracking', 'dynamic time warping', {'weight': 0.6})
('backtracking', 'dynamic programming language', {'weight': 0.6})
('backtracking', 'call-by-need', {'weight': 0.6})
('backtracking', 'big-o notation', {'weight': 0.6})
('backtracking', 'comparison of optimization software', {'weight': 0.6})
('backtracking', 'quadratic programming', {'weight': 0.6})
('backtracking', 'common lisp', {'weight': 0.6})
('backtracking', 'barrier function', {'weight': 0.6})
('backtracking', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('backtracking', 'gradient descent', {'weight': 0.6})
('backtracking', 'patricia selinger', {'weight': 0.6})
('backtracking', 'discounting', {'weight': 0.6})
('backtracking', 'ronald l. rivest', {'weight': 0.6})
('backtracking', 'iterative method', {'weight': 0.6})
('backtracking', 'limited-memory bfgs', {'weight': 0.6})
('backtracking', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('backtracking', 'longest common substring problem', {'weight': 0.6})
('backtracking', 'clifford stein', {'weight': 0.6})
('backtracking', 'computer chess', {'weight': 0.6})
('backtracking', 'linear programming', {'weight': 0.6})
('backtracking', 'bitonic tour', {'weight': 0.6})
('backtracking', 'linear search problem', {'weight': 0.6})
('backtracking', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('backtracking', 'systems analysis', {'weight': 0.6})
('backtracking', 'capital (economics)', {'weight': 0.6})
('backtracking', 'levenshtein distance', {'weight': 0.6})
('backtracking', 'nonlinear programming', {'weight': 0.6})
('backtracking', 'computational complexity of mathematical operations', {'weight': 0.6})
('backtracking', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('backtracking', 'gradient', {'weight': 0.6})
('backtracking', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('backtracking', 'bulletin of the american mathematical society', {'weight': 0.6})
('backtracking', 'u.s. english', {'weight': 0.6})
('backtracking', 'refutation table', {'weight': 0.6})
('backtracking', 'heuristic algorithm', {'weight': 0.6})
('backtracking', 'successive linear programming', {'weight': 0.6})
('backtracking', 'optimal substructure', {'weight': 0.6})
('backtracking', 'programming language', {'weight': 0.6})
('backtracking', 'mergesort', {'weight': 0.6})
('backtracking', "dijkstra's algorithm", {'weight': 0.6})
('backtracking', 'subgradient method', {'weight': 0.6})
('backtracking', 'call-by-name', {'weight': 0.6})
('backtracking', 'longest increasing subsequence problem', {'weight': 0.6})
('backtracking', 'edward prescott', {'weight': 0.6})
('backtracking', 'exponential time', {'weight': 0.6})
('backtracking', 'principle of optimality', {'weight': 0.6})
('backtracking', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('backtracking', 'mathematical game', {'weight': 0.6})
('backtracking', 'nancy stokey', {'weight': 0.6})
('backtracking', 'approximation algorithm', {'weight': 0.6})
('backtracking', 'discrete-time', {'weight': 0.6})
('backtracking', 'cyk algorithm', {'weight': 0.6})
('backtracking', 'markov decision process', {'weight': 0.6})
('backtracking', "powell's method", {'weight': 0.6})
('backtracking', 'wolfe conditions', {'weight': 0.6})
('backtracking', 'convexity in economics', {'weight': 0.6})
('backtracking', 'transposition table', {'weight': 0.6})
('backtracking', 'economics', {'weight': 0.6})
('backtracking', 'backward induction', {'weight': 0.6})
('backtracking', 'golden section search', {'weight': 0.6})
('backtracking', 'edit distance', {'weight': 0.6})
('backtracking', 'tree structure', {'weight': 0.6})
('backtracking', 'exchange algorithm', {'weight': 0.6})
('backtracking', 'dover publications', {'weight': 0.6})
('backtracking', 'seam carving', {'weight': 0.6})
('backtracking', 'recursive least squares', {'weight': 0.6})
('backtracking', 'metaheuristic', {'weight': 0.6})
('backtracking', 'quasi-newton method', {'weight': 0.6})
('backtracking', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('backtracking', 'robert e. lucas', {'weight': 0.6})
('backtracking', 'non-convexity (economics)', {'weight': 0.6})
('backtracking', 'search algorithms', {'weight': 0.5})
('backtracking', 'sr1 formula', {'weight': 0.6})
('backtracking', 'mathematical reviews', {'weight': 0.6})
('backtracking', 'puzzle', {'weight': 0.6})
('backtracking', 'associative array', {'weight': 0.6})
('backtracking', 'shortest path problem', {'weight': 0.6})
('backtracking', 'dynamic algorithm', {'weight': 0.6})
('backtracking', 'augmented lagrangian method', {'weight': 0.6})
('backtracking', 'charles delisi', {'weight': 0.6})
('backtracking', 'greedy algorithm', {'weight': 0.6})
('backtracking', "karmarkar's algorithm", {'weight': 0.6})
('backtracking', 'lattice models', {'weight': 0.6})
('backtracking', 'utility', {'weight': 0.6})
('backtracking', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('backtracking', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('backtracking', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('backtracking', 'international standard book number', {'weight': 0.6})
('backtracking', 'undirected graph', {'weight': 0.6})
('backtracking', 'scheme (programming language)', {'weight': 0.6})
('backtracking', 'rna structure', {'weight': 0.6})
('backtracking', 'hanoi', {'weight': 0.6})
('backtracking', 'perl', {'weight': 0.6})
('backtracking', 'digital object identifier', {'weight': 0.6})
('backtracking', 'sequential quadratic programming', {'weight': 0.6})
('backtracking', "dinic's algorithm", {'weight': 0.6})
('backtracking', 'pseudo-polynomial time', {'weight': 0.6})
('backtracking', 'partition problem', {'weight': 0.6})
('backtracking', 'operations research', {'weight': 0.5})
('backtracking', 'hill climbing', {'weight': 0.6})
('backtracking', 'top-down', {'weight': 0.6})
('backtracking', 'de boor algorithm', {'weight': 0.6})
('backtracking', 'optimization algorithm', {'weight': 0.6})
('backtracking', "kruskal's algorithm", {'weight': 0.6})
('backtracking', 'jacques philippe marie binet', {'weight': 0.6})
('backtracking', "ariadne's thread (logic)", {'weight': 0.7})
('backtracking', 'tabu search', {'weight': 0.6})
('backtracking', 'divide and conquer algorithm', {'weight': 0.6})
('backtracking', "johnson's algorithm", {'weight': 0.6})
('backtracking', 'evolutionary algorithm', {'weight': 0.6})
('backtracking', 'clique-width', {'weight': 0.6})
('backtracking', 'dynamic programming', {'weight': 0.6})
('backtracking', 'subroutine', {'weight': 0.6})
('backtracking', 'simulated annealing', {'weight': 0.6})
('backtracking', 'tower of hanoi', {'weight': 0.6})
('backtracking', 'branch and bound', {'weight': 0.6})
('backtracking', 'engineering', {'weight': 0.6})
('backtracking', 'matroid', {'weight': 0.6})
('backtracking', 'viterbi algorithm', {'weight': 0.6})
('backtracking', "lemke's algorithm", {'weight': 0.6})
('backtracking', 'simplex algorithm', {'weight': 0.6})
('backtracking', 'stochastic programming', {'weight': 0.6})
('backtracking', 'hessian matrix', {'weight': 0.6})
('backtracking', 'ibm system r', {'weight': 0.6})
('backtracking', 'penalty method', {'weight': 0.6})
('backtracking', 'prolog', {'weight': 0.6})
('backtracking', 'backjumping', {'weight': 0.7})
('backtracking', 'time-invariant system', {'weight': 0.6})
('backtracking', 'criss-cross algorithm', {'weight': 0.6})
('backtracking', 'revised simplex algorithm', {'weight': 0.6})
('backtracking', 'the mathematical association of america', {'weight': 0.6})
('backtracking', 'line search', {'weight': 0.6})
('backtracking', 'j (programming language)', {'weight': 0.6})
('backtracking', 'word wrap', {'weight': 0.6})
('backtracking', 'subset sum problem', {'weight': 0.6})
('backtracking', 'integer programming', {'weight': 0.6})
('backtracking', 'nucleosome', {'weight': 0.6})
('backtracking', 'earley algorithm', {'weight': 0.6})
('backtracking', 'referential transparency (computer science)', {'weight': 0.6})
('backtracking', 'recursion', {'weight': 0.6})
('backtracking', 'mathematica', {'weight': 0.6})
('backtracking', 'quicksort', {'weight': 0.6})
('backtracking', 'recursion (computer science)', {'weight': 0.7})
('backtracking', 'checkerboard', {'weight': 0.6})
('backtracking', 'computer science', {'weight': 0.6})
('backtracking', 'brute-force search', {'weight': 0.6})
('backtracking', 'mathematics', {'weight': 0.6})
('backtracking', 'depth-first search', {'weight': 0.6})
('backtracking', 'top-down and bottom-up design', {'weight': 0.6})
('backtracking', 'correspondence problem', {'weight': 0.6})
('backtracking', 'transcription factor', {'weight': 0.6})
('backtracking', 'tree decomposition', {'weight': 0.6})
('backtracking', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('backtracking', 'structural alignment', {'weight': 0.6})
('backtracking', 'local convergence', {'weight': 0.6})
('backtracking', 'knapsack problem', {'weight': 0.6})
('backtracking', 'graph algorithm', {'weight': 0.6})
('backtracking', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('backtracking', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('backtracking', 'hidden markov model', {'weight': 0.6})
('backtracking', 'string (computer science)', {'weight': 0.6})
('backtracking', 'bioinformatics', {'weight': 0.6})
('backtracking', 'genetics', {'weight': 0.6})
('backtracking', 'mathematical optimization', {'weight': 0.6})
('backtracking', 'local search (optimization)', {'weight': 0.6})
('backtracking', 'artificial neural networks', {'weight': 0.6})
('backtracking', 'introduction to algorithms', {'weight': 0.6})
('backtracking', 'thomas h. cormen', {'weight': 0.6})
('backtracking', 'music information retrieval', {'weight': 0.6})
('backtracking', 'beat (music)', {'weight': 0.6})
('backtracking', 'longest common subsequence problem', {'weight': 0.6})
('backtracking', 'convex minimization', {'weight': 0.6})
('backtracking', 'successive parabolic interpolation', {'weight': 0.6})
('backtracking', 'fibonacci sequence', {'weight': 0.6})
('backtracking', 'maximum subarray problem', {'weight': 0.6})
('backtracking', 'convex optimization', {'weight': 0.6})
('backtracking', 'memoization', {'weight': 0.6})
('backtracking', 'richard bellman', {'weight': 0.6})
('backtracking', 'exponential growth', {'weight': 0.6})
('backtracking', 'charles e. leiserson', {'weight': 0.6})
('backtracking', 'charles erwin wilson', {'weight': 0.6})
('backtracking', 'interval scheduling', {'weight': 0.6})
('backtracking', 'chart parser', {'weight': 0.6})
('backtracking', 'travelling salesman problem', {'weight': 0.6})
('backtracking', 'bellman equation', {'weight': 0.6})
('nonlinear conjugate gradient method', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('nonlinear conjugate gradient method', 'photoshop', {'weight': 0.6})
('nonlinear conjugate gradient method', 'sequence alignment', {'weight': 0.6})
('nonlinear conjugate gradient method', 'flow network', {'weight': 0.6})
('nonlinear conjugate gradient method', 'ellipsoid method', {'weight': 0.6})
('nonlinear conjugate gradient method', 'chain matrix multiplication', {'weight': 0.6})
('nonlinear conjugate gradient method', 'ieee', {'weight': 0.6})
('nonlinear conjugate gradient method', 'backtracking', {'weight': 0.6})
('nonlinear conjugate gradient method', 'nonlinear conjugate gradient method', {'weight': 1})
('nonlinear conjugate gradient method', 'dynamic problem', {'weight': 0.6})
('nonlinear conjugate gradient method', 'trust region', {'weight': 0.6})
('nonlinear conjugate gradient method', 'function (mathematics)', {'weight': 0.6})
('nonlinear conjugate gradient method', 'minimum spanning tree', {'weight': 0.6})
('nonlinear conjugate gradient method', 'context-free grammar', {'weight': 0.6})
('nonlinear conjugate gradient method', 'branch and cut', {'weight': 0.6})
('nonlinear conjugate gradient method', 'state variable', {'weight': 0.6})
('nonlinear conjugate gradient method', 'treewidth', {'weight': 0.6})
('nonlinear conjugate gradient method', 'optimization algorithms and methods', {'weight': 0.5})
('nonlinear conjugate gradient method', 'overlapping subproblem', {'weight': 0.6})
('nonlinear conjugate gradient method', 'taylor & francis', {'weight': 0.6})
('nonlinear conjugate gradient method', 'cutting-plane method', {'weight': 0.6})
('nonlinear conjugate gradient method', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('nonlinear conjugate gradient method', 'method of undetermined coefficients', {'weight': 0.6})
('nonlinear conjugate gradient method', 'combinatorial optimization', {'weight': 0.6})
('nonlinear conjugate gradient method', "newton's method in optimization", {'weight': 0.6})
('nonlinear conjugate gradient method', 'matrix chain multiplication', {'weight': 0.6})
('nonlinear conjugate gradient method', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('nonlinear conjugate gradient method', 'dynamic time warping', {'weight': 0.6})
('nonlinear conjugate gradient method', 'dynamic programming language', {'weight': 0.6})
('nonlinear conjugate gradient method', 'call-by-need', {'weight': 0.6})
('nonlinear conjugate gradient method', 'big-o notation', {'weight': 0.6})
('nonlinear conjugate gradient method', 'comparison of optimization software', {'weight': 0.6})
('nonlinear conjugate gradient method', 'quadratic programming', {'weight': 0.6})
('nonlinear conjugate gradient method', 'common lisp', {'weight': 0.6})
('nonlinear conjugate gradient method', 'barrier function', {'weight': 0.6})
('nonlinear conjugate gradient method', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('nonlinear conjugate gradient method', 'gradient descent', {'weight': 0.6})
('nonlinear conjugate gradient method', 'patricia selinger', {'weight': 0.6})
('nonlinear conjugate gradient method', 'discounting', {'weight': 0.6})
('nonlinear conjugate gradient method', 'ronald l. rivest', {'weight': 0.6})
('nonlinear conjugate gradient method', 'iterative method', {'weight': 0.6})
('nonlinear conjugate gradient method', 'limited-memory bfgs', {'weight': 0.6})
('nonlinear conjugate gradient method', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('nonlinear conjugate gradient method', 'longest common substring problem', {'weight': 0.6})
('nonlinear conjugate gradient method', 'clifford stein', {'weight': 0.6})
('nonlinear conjugate gradient method', 'computer chess', {'weight': 0.6})
('nonlinear conjugate gradient method', 'linear programming', {'weight': 0.6})
('nonlinear conjugate gradient method', 'bitonic tour', {'weight': 0.6})
('nonlinear conjugate gradient method', 'linear search problem', {'weight': 0.6})
('nonlinear conjugate gradient method', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('nonlinear conjugate gradient method', 'systems analysis', {'weight': 0.6})
('nonlinear conjugate gradient method', 'capital (economics)', {'weight': 0.6})
('nonlinear conjugate gradient method', 'levenshtein distance', {'weight': 0.6})
('nonlinear conjugate gradient method', 'nonlinear programming', {'weight': 0.6})
('nonlinear conjugate gradient method', 'computational complexity of mathematical operations', {'weight': 0.6})
('nonlinear conjugate gradient method', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('nonlinear conjugate gradient method', 'gradient', {'weight': 0.6})
('nonlinear conjugate gradient method', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('nonlinear conjugate gradient method', 'bulletin of the american mathematical society', {'weight': 0.6})
('nonlinear conjugate gradient method', 'u.s. english', {'weight': 0.6})
('nonlinear conjugate gradient method', 'refutation table', {'weight': 0.6})
('nonlinear conjugate gradient method', 'heuristic algorithm', {'weight': 0.6})
('nonlinear conjugate gradient method', 'successive linear programming', {'weight': 0.6})
('nonlinear conjugate gradient method', 'optimal substructure', {'weight': 0.6})
('nonlinear conjugate gradient method', 'programming language', {'weight': 0.6})
('nonlinear conjugate gradient method', 'mergesort', {'weight': 0.6})
('nonlinear conjugate gradient method', "dijkstra's algorithm", {'weight': 0.6})
('nonlinear conjugate gradient method', 'subgradient method', {'weight': 0.6})
('nonlinear conjugate gradient method', 'call-by-name', {'weight': 0.6})
('nonlinear conjugate gradient method', 'longest increasing subsequence problem', {'weight': 0.6})
('nonlinear conjugate gradient method', 'edward prescott', {'weight': 0.6})
('nonlinear conjugate gradient method', 'exponential time', {'weight': 0.6})
('nonlinear conjugate gradient method', 'principle of optimality', {'weight': 0.6})
('nonlinear conjugate gradient method', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('nonlinear conjugate gradient method', 'mathematical game', {'weight': 0.6})
('nonlinear conjugate gradient method', 'nancy stokey', {'weight': 0.6})
('nonlinear conjugate gradient method', 'approximation algorithm', {'weight': 0.6})
('nonlinear conjugate gradient method', 'discrete-time', {'weight': 0.6})
('nonlinear conjugate gradient method', 'cyk algorithm', {'weight': 0.6})
('nonlinear conjugate gradient method', 'markov decision process', {'weight': 0.6})
('nonlinear conjugate gradient method', "powell's method", {'weight': 0.6})
('nonlinear conjugate gradient method', 'wolfe conditions', {'weight': 0.6})
('nonlinear conjugate gradient method', 'convexity in economics', {'weight': 0.6})
('nonlinear conjugate gradient method', 'transposition table', {'weight': 0.6})
('nonlinear conjugate gradient method', 'economics', {'weight': 0.6})
('nonlinear conjugate gradient method', 'backward induction', {'weight': 0.6})
('nonlinear conjugate gradient method', 'golden section search', {'weight': 0.6})
('nonlinear conjugate gradient method', 'edit distance', {'weight': 0.6})
('nonlinear conjugate gradient method', 'tree structure', {'weight': 0.6})
('nonlinear conjugate gradient method', 'exchange algorithm', {'weight': 0.6})
('nonlinear conjugate gradient method', 'dover publications', {'weight': 0.6})
('nonlinear conjugate gradient method', 'seam carving', {'weight': 0.6})
('nonlinear conjugate gradient method', 'recursive least squares', {'weight': 0.6})
('nonlinear conjugate gradient method', 'metaheuristic', {'weight': 0.6})
('nonlinear conjugate gradient method', 'quasi-newton method', {'weight': 0.6})
('nonlinear conjugate gradient method', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('nonlinear conjugate gradient method', 'robert e. lucas', {'weight': 0.6})
('nonlinear conjugate gradient method', 'non-convexity (economics)', {'weight': 0.6})
('nonlinear conjugate gradient method', 'sr1 formula', {'weight': 0.6})
('nonlinear conjugate gradient method', 'mathematical reviews', {'weight': 0.6})
('nonlinear conjugate gradient method', 'puzzle', {'weight': 0.6})
('nonlinear conjugate gradient method', 'associative array', {'weight': 0.6})
('nonlinear conjugate gradient method', 'shortest path problem', {'weight': 0.6})
('nonlinear conjugate gradient method', 'dynamic algorithm', {'weight': 0.6})
('nonlinear conjugate gradient method', 'augmented lagrangian method', {'weight': 0.6})
('nonlinear conjugate gradient method', 'charles delisi', {'weight': 0.6})
('nonlinear conjugate gradient method', 'greedy algorithm', {'weight': 0.6})
('nonlinear conjugate gradient method', "karmarkar's algorithm", {'weight': 0.6})
('nonlinear conjugate gradient method', 'lattice models', {'weight': 0.6})
('nonlinear conjugate gradient method', 'utility', {'weight': 0.6})
('nonlinear conjugate gradient method', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('nonlinear conjugate gradient method', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('nonlinear conjugate gradient method', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('nonlinear conjugate gradient method', 'international standard book number', {'weight': 0.6})
('nonlinear conjugate gradient method', 'undirected graph', {'weight': 0.6})
('nonlinear conjugate gradient method', 'scheme (programming language)', {'weight': 0.6})
('nonlinear conjugate gradient method', 'rna structure', {'weight': 0.6})
('nonlinear conjugate gradient method', 'hanoi', {'weight': 0.6})
('nonlinear conjugate gradient method', 'perl', {'weight': 0.6})
('nonlinear conjugate gradient method', 'digital object identifier', {'weight': 0.6})
('nonlinear conjugate gradient method', 'sequential quadratic programming', {'weight': 0.6})
('nonlinear conjugate gradient method', "dinic's algorithm", {'weight': 0.6})
('nonlinear conjugate gradient method', 'pseudo-polynomial time', {'weight': 0.6})
('nonlinear conjugate gradient method', 'partition problem', {'weight': 0.6})
('nonlinear conjugate gradient method', 'stochastic programming', {'weight': 0.6})
('nonlinear conjugate gradient method', 'hill climbing', {'weight': 0.6})
('nonlinear conjugate gradient method', 'top-down', {'weight': 0.6})
('nonlinear conjugate gradient method', 'de boor algorithm', {'weight': 0.6})
('nonlinear conjugate gradient method', 'optimization algorithm', {'weight': 0.6})
('nonlinear conjugate gradient method', "kruskal's algorithm", {'weight': 0.6})
('nonlinear conjugate gradient method', 'jacques philippe marie binet', {'weight': 0.6})
('nonlinear conjugate gradient method', 'tabu search', {'weight': 0.6})
('nonlinear conjugate gradient method', 'divide and conquer algorithm', {'weight': 0.6})
('nonlinear conjugate gradient method', "johnson's algorithm", {'weight': 0.6})
('nonlinear conjugate gradient method', 'evolutionary algorithm', {'weight': 0.6})
('nonlinear conjugate gradient method', 'clique-width', {'weight': 0.6})
('nonlinear conjugate gradient method', 'dynamic programming', {'weight': 0.6})
('nonlinear conjugate gradient method', 'subroutine', {'weight': 0.6})
('nonlinear conjugate gradient method', 'simulated annealing', {'weight': 0.6})
('nonlinear conjugate gradient method', 'tower of hanoi', {'weight': 0.6})
('nonlinear conjugate gradient method', 'branch and bound', {'weight': 0.6})
('nonlinear conjugate gradient method', 'engineering', {'weight': 0.6})
('nonlinear conjugate gradient method', 'matroid', {'weight': 0.6})
('nonlinear conjugate gradient method', 'viterbi algorithm', {'weight': 0.6})
('nonlinear conjugate gradient method', "lemke's algorithm", {'weight': 0.6})
('nonlinear conjugate gradient method', 'simplex algorithm', {'weight': 0.6})
('nonlinear conjugate gradient method', 'local search (optimization)', {'weight': 0.6})
('nonlinear conjugate gradient method', 'hessian matrix', {'weight': 0.6})
('nonlinear conjugate gradient method', 'ibm system r', {'weight': 0.6})
('nonlinear conjugate gradient method', 'penalty method', {'weight': 0.6})
('nonlinear conjugate gradient method', 'prolog', {'weight': 0.6})
('nonlinear conjugate gradient method', 'time-invariant system', {'weight': 0.6})
('nonlinear conjugate gradient method', 'criss-cross algorithm', {'weight': 0.6})
('nonlinear conjugate gradient method', 'revised simplex algorithm', {'weight': 0.6})
('nonlinear conjugate gradient method', 'the mathematical association of america', {'weight': 0.6})
('nonlinear conjugate gradient method', 'line search', {'weight': 0.6})
('nonlinear conjugate gradient method', 'j (programming language)', {'weight': 0.6})
('nonlinear conjugate gradient method', 'word wrap', {'weight': 0.6})
('nonlinear conjugate gradient method', 'subset sum problem', {'weight': 0.6})
('nonlinear conjugate gradient method', 'integer programming', {'weight': 0.6})
('nonlinear conjugate gradient method', 'nucleosome', {'weight': 0.6})
('nonlinear conjugate gradient method', 'earley algorithm', {'weight': 0.6})
('nonlinear conjugate gradient method', 'referential transparency (computer science)', {'weight': 0.6})
('nonlinear conjugate gradient method', 'recursion', {'weight': 0.6})
('nonlinear conjugate gradient method', 'mathematica', {'weight': 0.6})
('nonlinear conjugate gradient method', 'quicksort', {'weight': 0.6})
('nonlinear conjugate gradient method', 'recursion (computer science)', {'weight': 0.6})
('nonlinear conjugate gradient method', 'checkerboard', {'weight': 0.6})
('nonlinear conjugate gradient method', 'computer science', {'weight': 0.6})
('nonlinear conjugate gradient method', 'brute-force search', {'weight': 0.6})
('nonlinear conjugate gradient method', 'mathematics', {'weight': 0.6})
('nonlinear conjugate gradient method', 'depth-first search', {'weight': 0.6})
('nonlinear conjugate gradient method', 'top-down and bottom-up design', {'weight': 0.6})
('nonlinear conjugate gradient method', 'correspondence problem', {'weight': 0.6})
('nonlinear conjugate gradient method', 'transcription factor', {'weight': 0.6})
('nonlinear conjugate gradient method', 'tree decomposition', {'weight': 0.6})
('nonlinear conjugate gradient method', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('nonlinear conjugate gradient method', 'structural alignment', {'weight': 0.6})
('nonlinear conjugate gradient method', 'local convergence', {'weight': 0.6})
('nonlinear conjugate gradient method', 'knapsack problem', {'weight': 0.6})
('nonlinear conjugate gradient method', 'graph algorithm', {'weight': 0.6})
('nonlinear conjugate gradient method', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('nonlinear conjugate gradient method', 'gradient methods', {'weight': 0.5})
('nonlinear conjugate gradient method', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('nonlinear conjugate gradient method', 'hidden markov model', {'weight': 0.6})
('nonlinear conjugate gradient method', 'string (computer science)', {'weight': 0.6})
('nonlinear conjugate gradient method', 'bioinformatics', {'weight': 0.6})
('nonlinear conjugate gradient method', 'genetics', {'weight': 0.6})
('nonlinear conjugate gradient method', 'mathematical optimization', {'weight': 0.6})
('nonlinear conjugate gradient method', 'artificial neural networks', {'weight': 0.6})
('nonlinear conjugate gradient method', 'introduction to algorithms', {'weight': 0.6})
('nonlinear conjugate gradient method', 'thomas h. cormen', {'weight': 0.6})
('nonlinear conjugate gradient method', 'music information retrieval', {'weight': 0.6})
('nonlinear conjugate gradient method', 'beat (music)', {'weight': 0.6})
('nonlinear conjugate gradient method', 'longest common subsequence problem', {'weight': 0.6})
('nonlinear conjugate gradient method', 'convex minimization', {'weight': 0.6})
('nonlinear conjugate gradient method', 'successive parabolic interpolation', {'weight': 0.6})
('nonlinear conjugate gradient method', 'fibonacci sequence', {'weight': 0.6})
('nonlinear conjugate gradient method', 'maximum subarray problem', {'weight': 0.6})
('nonlinear conjugate gradient method', 'convex optimization', {'weight': 0.6})
('nonlinear conjugate gradient method', 'memoization', {'weight': 0.6})
('nonlinear conjugate gradient method', 'richard bellman', {'weight': 0.6})
('nonlinear conjugate gradient method', 'exponential growth', {'weight': 0.6})
('nonlinear conjugate gradient method', 'charles e. leiserson', {'weight': 0.6})
('nonlinear conjugate gradient method', 'charles erwin wilson', {'weight': 0.6})
('nonlinear conjugate gradient method', 'interval scheduling', {'weight': 0.6})
('nonlinear conjugate gradient method', 'chart parser', {'weight': 0.6})
('nonlinear conjugate gradient method', 'travelling salesman problem', {'weight': 0.6})
('nonlinear conjugate gradient method', 'bellman equation', {'weight': 0.6})
('minimum spanning tree', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('minimum spanning tree', 'photoshop', {'weight': 0.6})
('minimum spanning tree', 'sequence alignment', {'weight': 0.6})
('minimum spanning tree', 'flow network', {'weight': 0.6})
('minimum spanning tree', 'spanning tree', {'weight': 0.5})
('minimum spanning tree', 'ellipsoid method', {'weight': 0.6})
('minimum spanning tree', 'chain matrix multiplication', {'weight': 0.6})
('minimum spanning tree', 'ieee', {'weight': 0.6})
('minimum spanning tree', 'rectilinear minimum spanning tree', {'weight': 0.7})
('minimum spanning tree', 'backtracking', {'weight': 0.6})
('minimum spanning tree', 'nonlinear conjugate gradient method', {'weight': 0.6})
('minimum spanning tree', 'dynamic problem', {'weight': 0.6})
('minimum spanning tree', 'trust region', {'weight': 0.6})
('minimum spanning tree', 'function (mathematics)', {'weight': 0.6})
('minimum spanning tree', 'minimum spanning tree', {'weight': 1})
('minimum spanning tree', 'context-free grammar', {'weight': 0.6})
('minimum spanning tree', 'branch and cut', {'weight': 0.6})
('minimum spanning tree', 'state variable', {'weight': 0.6})
('minimum spanning tree', 'treewidth', {'weight': 0.6})
('minimum spanning tree', 'overlapping subproblem', {'weight': 0.6})
('minimum spanning tree', 'taylor & francis', {'weight': 0.6})
('minimum spanning tree', 'cutting-plane method', {'weight': 0.6})
('minimum spanning tree', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('minimum spanning tree', 'method of undetermined coefficients', {'weight': 0.6})
('minimum spanning tree', 'combinatorial optimization', {'weight': 0.6})
('minimum spanning tree', "newton's method in optimization", {'weight': 0.6})
('minimum spanning tree', 'matrix chain multiplication', {'weight': 0.6})
('minimum spanning tree', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('minimum spanning tree', 'dynamic time warping', {'weight': 0.6})
('minimum spanning tree', 'dynamic programming language', {'weight': 0.6})
('minimum spanning tree', 'call-by-need', {'weight': 0.6})
('minimum spanning tree', 'big-o notation', {'weight': 0.6})
('minimum spanning tree', 'comparison of optimization software', {'weight': 0.6})
('minimum spanning tree', 'quadratic programming', {'weight': 0.6})
('minimum spanning tree', 'common lisp', {'weight': 0.6})
('minimum spanning tree', 'barrier function', {'weight': 0.6})
('minimum spanning tree', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('minimum spanning tree', 'gradient descent', {'weight': 0.6})
('minimum spanning tree', 'patricia selinger', {'weight': 0.6})
('minimum spanning tree', 'discounting', {'weight': 0.6})
('minimum spanning tree', 'ronald l. rivest', {'weight': 0.6})
('minimum spanning tree', 'iterative method', {'weight': 0.6})
('minimum spanning tree', 'limited-memory bfgs', {'weight': 0.6})
('minimum spanning tree', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('minimum spanning tree', 'longest common substring problem', {'weight': 0.6})
('minimum spanning tree', 'clifford stein', {'weight': 0.6})
('minimum spanning tree', 'computer chess', {'weight': 0.6})
('minimum spanning tree', 'linear programming', {'weight': 0.6})
('minimum spanning tree', 'bitonic tour', {'weight': 0.6})
('minimum spanning tree', 'linear search problem', {'weight': 0.6})
('minimum spanning tree', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('minimum spanning tree', 'systems analysis', {'weight': 0.6})
('minimum spanning tree', 'capital (economics)', {'weight': 0.6})
('minimum spanning tree', 'levenshtein distance', {'weight': 0.6})
('minimum spanning tree', 'nonlinear programming', {'weight': 0.6})
('minimum spanning tree', 'computational complexity of mathematical operations', {'weight': 0.6})
('minimum spanning tree', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('minimum spanning tree', 'gradient', {'weight': 0.6})
('minimum spanning tree', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('minimum spanning tree', 'bulletin of the american mathematical society', {'weight': 0.6})
('minimum spanning tree', 'u.s. english', {'weight': 0.6})
('minimum spanning tree', 'refutation table', {'weight': 0.6})
('minimum spanning tree', 'heuristic algorithm', {'weight': 0.6})
('minimum spanning tree', 'successive linear programming', {'weight': 0.6})
('minimum spanning tree', 'optimal substructure', {'weight': 0.6})
('minimum spanning tree', 'programming language', {'weight': 0.6})
('minimum spanning tree', 'mergesort', {'weight': 0.6})
('minimum spanning tree', "dijkstra's algorithm", {'weight': 0.6})
('minimum spanning tree', 'subgradient method', {'weight': 0.6})
('minimum spanning tree', 'call-by-name', {'weight': 0.6})
('minimum spanning tree', 'longest increasing subsequence problem', {'weight': 0.6})
('minimum spanning tree', 'edward prescott', {'weight': 0.6})
('minimum spanning tree', 'exponential time', {'weight': 0.6})
('minimum spanning tree', 'principle of optimality', {'weight': 0.6})
('minimum spanning tree', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('minimum spanning tree', 'mathematical game', {'weight': 0.6})
('minimum spanning tree', 'nancy stokey', {'weight': 0.6})
('minimum spanning tree', 'approximation algorithm', {'weight': 0.6})
('minimum spanning tree', 'discrete-time', {'weight': 0.6})
('minimum spanning tree', 'cyk algorithm', {'weight': 0.6})
('minimum spanning tree', 'markov decision process', {'weight': 0.6})
('minimum spanning tree', "powell's method", {'weight': 0.6})
('minimum spanning tree', 'wolfe conditions', {'weight': 0.6})
('minimum spanning tree', 'convexity in economics', {'weight': 0.6})
('minimum spanning tree', 'transposition table', {'weight': 0.6})
('minimum spanning tree', 'economics', {'weight': 0.6})
('minimum spanning tree', 'backward induction', {'weight': 0.6})
('minimum spanning tree', 'golden section search', {'weight': 0.6})
('minimum spanning tree', 'edit distance', {'weight': 0.6})
('minimum spanning tree', 'tree structure', {'weight': 0.6})
('minimum spanning tree', 'exchange algorithm', {'weight': 0.6})
('minimum spanning tree', 'dover publications', {'weight': 0.6})
('minimum spanning tree', 'seam carving', {'weight': 0.6})
('minimum spanning tree', 'recursive least squares', {'weight': 0.6})
('minimum spanning tree', 'metaheuristic', {'weight': 0.6})
('minimum spanning tree', 'quasi-newton method', {'weight': 0.6})
('minimum spanning tree', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('minimum spanning tree', 'robert e. lucas', {'weight': 0.6})
('minimum spanning tree', 'non-convexity (economics)', {'weight': 0.6})
('minimum spanning tree', 'sr1 formula', {'weight': 0.6})
('minimum spanning tree', 'mathematical reviews', {'weight': 0.6})
('minimum spanning tree', 'puzzle', {'weight': 0.6})
('minimum spanning tree', 'associative array', {'weight': 0.6})
('minimum spanning tree', 'shortest path problem', {'weight': 0.6})
('minimum spanning tree', 'dynamic algorithm', {'weight': 0.6})
('minimum spanning tree', 'augmented lagrangian method', {'weight': 0.6})
('minimum spanning tree', 'charles delisi', {'weight': 0.6})
('minimum spanning tree', 'greedy algorithm', {'weight': 0.6})
('minimum spanning tree', "karmarkar's algorithm", {'weight': 0.6})
('minimum spanning tree', 'lattice models', {'weight': 0.6})
('minimum spanning tree', 'utility', {'weight': 0.6})
('minimum spanning tree', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('minimum spanning tree', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('minimum spanning tree', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('minimum spanning tree', 'international standard book number', {'weight': 0.6})
('minimum spanning tree', 'undirected graph', {'weight': 0.6})
('minimum spanning tree', 'scheme (programming language)', {'weight': 0.6})
('minimum spanning tree', 'rna structure', {'weight': 0.6})
('minimum spanning tree', 'hanoi', {'weight': 0.6})
('minimum spanning tree', 'perl', {'weight': 0.6})
('minimum spanning tree', 'digital object identifier', {'weight': 0.6})
('minimum spanning tree', 'sequential quadratic programming', {'weight': 0.6})
('minimum spanning tree', "dinic's algorithm", {'weight': 0.6})
('minimum spanning tree', 'pseudo-polynomial time', {'weight': 0.6})
('minimum spanning tree', 'partition problem', {'weight': 0.6})
('minimum spanning tree', 'stochastic programming', {'weight': 0.6})
('minimum spanning tree', 'hill climbing', {'weight': 0.6})
('minimum spanning tree', 'top-down', {'weight': 0.6})
('minimum spanning tree', 'de boor algorithm', {'weight': 0.6})
('minimum spanning tree', 'optimization algorithm', {'weight': 0.6})
('minimum spanning tree', "kruskal's algorithm", {'weight': 0.6})
('minimum spanning tree', 'jacques philippe marie binet', {'weight': 0.6})
('minimum spanning tree', 'tabu search', {'weight': 0.6})
('minimum spanning tree', 'divide and conquer algorithm', {'weight': 0.6})
('minimum spanning tree', "johnson's algorithm", {'weight': 0.6})
('minimum spanning tree', 'evolutionary algorithm', {'weight': 0.6})
('minimum spanning tree', 'clique-width', {'weight': 0.6})
('minimum spanning tree', 'dynamic programming', {'weight': 0.6})
('minimum spanning tree', 'subroutine', {'weight': 0.6})
('minimum spanning tree', 'simulated annealing', {'weight': 0.6})
('minimum spanning tree', 'tower of hanoi', {'weight': 0.6})
('minimum spanning tree', 'branch and bound', {'weight': 0.6})
('minimum spanning tree', 'engineering', {'weight': 0.6})
('minimum spanning tree', 'matroid', {'weight': 0.6})
('minimum spanning tree', 'viterbi algorithm', {'weight': 0.6})
('minimum spanning tree', "lemke's algorithm", {'weight': 0.6})
('minimum spanning tree', 'simplex algorithm', {'weight': 0.6})
('minimum spanning tree', 'local search (optimization)', {'weight': 0.6})
('minimum spanning tree', 'hessian matrix', {'weight': 0.6})
('minimum spanning tree', 'ibm system r', {'weight': 0.6})
('minimum spanning tree', 'penalty method', {'weight': 0.6})
('minimum spanning tree', 'prolog', {'weight': 0.6})
('minimum spanning tree', 'time-invariant system', {'weight': 0.6})
('minimum spanning tree', 'criss-cross algorithm', {'weight': 0.6})
('minimum spanning tree', 'revised simplex algorithm', {'weight': 0.6})
('minimum spanning tree', 'the mathematical association of america', {'weight': 0.6})
('minimum spanning tree', 'line search', {'weight': 0.6})
('minimum spanning tree', 'j (programming language)', {'weight': 0.6})
('minimum spanning tree', 'word wrap', {'weight': 0.6})
('minimum spanning tree', 'subset sum problem', {'weight': 0.6})
('minimum spanning tree', 'integer programming', {'weight': 0.6})
('minimum spanning tree', 'nucleosome', {'weight': 0.6})
('minimum spanning tree', 'earley algorithm', {'weight': 0.6})
('minimum spanning tree', 'referential transparency (computer science)', {'weight': 0.6})
('minimum spanning tree', 'recursion', {'weight': 0.6})
('minimum spanning tree', 'mathematica', {'weight': 0.6})
('minimum spanning tree', 'quicksort', {'weight': 0.6})
('minimum spanning tree', 'recursion (computer science)', {'weight': 0.6})
('minimum spanning tree', 'checkerboard', {'weight': 0.6})
('minimum spanning tree', 'computer science', {'weight': 0.6})
('minimum spanning tree', 'brute-force search', {'weight': 0.6})
('minimum spanning tree', 'mathematics', {'weight': 0.6})
('minimum spanning tree', 'depth-first search', {'weight': 0.6})
('minimum spanning tree', 'geometric graphs', {'weight': 0.5})
('minimum spanning tree', 'top-down and bottom-up design', {'weight': 0.6})
('minimum spanning tree', 'correspondence problem', {'weight': 0.6})
('minimum spanning tree', 'transcription factor', {'weight': 0.6})
('minimum spanning tree', 'tree decomposition', {'weight': 0.6})
('minimum spanning tree', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('minimum spanning tree', 'structural alignment', {'weight': 0.6})
('minimum spanning tree', 'local convergence', {'weight': 0.6})
('minimum spanning tree', 'knapsack problem', {'weight': 0.6})
('minimum spanning tree', 'graph algorithm', {'weight': 0.6})
('minimum spanning tree', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('minimum spanning tree', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('minimum spanning tree', 'hidden markov model', {'weight': 0.6})
('minimum spanning tree', 'string (computer science)', {'weight': 0.6})
('minimum spanning tree', 'bioinformatics', {'weight': 0.6})
('minimum spanning tree', 'genetics', {'weight': 0.6})
('minimum spanning tree', 'mathematical optimization', {'weight': 0.6})
('minimum spanning tree', 'artificial neural networks', {'weight': 0.6})
('minimum spanning tree', 'introduction to algorithms', {'weight': 0.6})
('minimum spanning tree', 'thomas h. cormen', {'weight': 0.6})
('minimum spanning tree', 'music information retrieval', {'weight': 0.6})
('minimum spanning tree', 'beat (music)', {'weight': 0.6})
('minimum spanning tree', 'longest common subsequence problem', {'weight': 0.6})
('minimum spanning tree', 'convex minimization', {'weight': 0.6})
('minimum spanning tree', 'successive parabolic interpolation', {'weight': 0.6})
('minimum spanning tree', 'fibonacci sequence', {'weight': 0.6})
('minimum spanning tree', 'maximum subarray problem', {'weight': 0.6})
('minimum spanning tree', 'convex optimization', {'weight': 0.6})
('minimum spanning tree', 'memoization', {'weight': 0.6})
('minimum spanning tree', 'richard bellman', {'weight': 0.6})
('minimum spanning tree', 'exponential growth', {'weight': 0.6})
('minimum spanning tree', 'charles e. leiserson', {'weight': 0.6})
('minimum spanning tree', 'charles erwin wilson', {'weight': 0.6})
('minimum spanning tree', 'interval scheduling', {'weight': 0.6})
('minimum spanning tree', 'chart parser', {'weight': 0.6})
('minimum spanning tree', 'travelling salesman problem', {'weight': 0.6})
('minimum spanning tree', 'bellman equation', {'weight': 0.6})
('context-free grammar', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('context-free grammar', 'photoshop', {'weight': 0.6})
('context-free grammar', 'sequence alignment', {'weight': 0.6})
('context-free grammar', 'flow network', {'weight': 0.6})
('context-free grammar', 'pumping lemma for context-free languages', {'weight': 0.7})
('context-free grammar', 'parsing expression grammar', {'weight': 0.7})
('context-free grammar', 'programming language topics', {'weight': 0.5})
('context-free grammar', 'ellipsoid method', {'weight': 0.6})
('context-free grammar', 'chain matrix multiplication', {'weight': 0.6})
('context-free grammar', 'ieee', {'weight': 0.6})
('context-free grammar', 'backtracking', {'weight': 0.6})
('context-free grammar', 'nonlinear conjugate gradient method', {'weight': 0.6})
('context-free grammar', 'dynamic problem', {'weight': 0.6})
('context-free grammar', 'trust region', {'weight': 0.6})
('context-free grammar', 'function (mathematics)', {'weight': 0.6})
('context-free grammar', 'minimum spanning tree', {'weight': 0.6})
('context-free grammar', 'context-free grammar', {'weight': 1})
('context-free grammar', 'branch and cut', {'weight': 0.6})
('context-free grammar', 'state variable', {'weight': 0.6})
('context-free grammar', 'treewidth', {'weight': 0.6})
('context-free grammar', 'overlapping subproblem', {'weight': 0.6})
('context-free grammar', 'taylor & francis', {'weight': 0.6})
('context-free grammar', 'cutting-plane method', {'weight': 0.6})
('context-free grammar', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('context-free grammar', 'method of undetermined coefficients', {'weight': 0.6})
('context-free grammar', 'combinatorial optimization', {'weight': 0.6})
('context-free grammar', "newton's method in optimization", {'weight': 0.6})
('context-free grammar', 'matrix chain multiplication', {'weight': 0.6})
('context-free grammar', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('context-free grammar', 'dynamic time warping', {'weight': 0.6})
('context-free grammar', 'dynamic programming language', {'weight': 0.6})
('context-free grammar', 'call-by-need', {'weight': 0.6})
('context-free grammar', 'big-o notation', {'weight': 0.6})
('context-free grammar', 'comparison of optimization software', {'weight': 0.6})
('context-free grammar', 'quadratic programming', {'weight': 0.6})
('context-free grammar', 'common lisp', {'weight': 0.6})
('context-free grammar', 'barrier function', {'weight': 0.6})
('context-free grammar', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('context-free grammar', 'gradient descent', {'weight': 0.6})
('context-free grammar', 'patricia selinger', {'weight': 0.6})
('context-free grammar', 'discounting', {'weight': 0.6})
('context-free grammar', 'ronald l. rivest', {'weight': 0.6})
('context-free grammar', 'iterative method', {'weight': 0.6})
('context-free grammar', 'limited-memory bfgs', {'weight': 0.6})
('context-free grammar', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('context-free grammar', 'longest common substring problem', {'weight': 0.6})
('context-free grammar', 'clifford stein', {'weight': 0.6})
('context-free grammar', 'computer chess', {'weight': 0.6})
('context-free grammar', 'linear programming', {'weight': 0.6})
('context-free grammar', 'bitonic tour', {'weight': 0.6})
('context-free grammar', 'linear search problem', {'weight': 0.6})
('context-free grammar', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('context-free grammar', 'systems analysis', {'weight': 0.6})
('context-free grammar', 'capital (economics)', {'weight': 0.6})
('context-free grammar', 'levenshtein distance', {'weight': 0.6})
('context-free grammar', 'nonlinear programming', {'weight': 0.6})
('context-free grammar', 'computational complexity of mathematical operations', {'weight': 0.6})
('context-free grammar', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('context-free grammar', 'gradient', {'weight': 0.6})
('context-free grammar', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('context-free grammar', 'bulletin of the american mathematical society', {'weight': 0.6})
('context-free grammar', 'u.s. english', {'weight': 0.6})
('context-free grammar', 'refutation table', {'weight': 0.6})
('context-free grammar', 'heuristic algorithm', {'weight': 0.6})
('context-free grammar', 'successive linear programming', {'weight': 0.6})
('context-free grammar', 'optimal substructure', {'weight': 0.6})
('context-free grammar', 'programming language', {'weight': 0.6})
('context-free grammar', 'mergesort', {'weight': 0.6})
('context-free grammar', "dijkstra's algorithm", {'weight': 0.6})
('context-free grammar', 'subgradient method', {'weight': 0.6})
('context-free grammar', 'call-by-name', {'weight': 0.6})
('context-free grammar', 'longest increasing subsequence problem', {'weight': 0.6})
('context-free grammar', 'edward prescott', {'weight': 0.6})
('context-free grammar', 'exponential time', {'weight': 0.6})
('context-free grammar', 'principle of optimality', {'weight': 0.6})
('context-free grammar', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('context-free grammar', 'mathematical game', {'weight': 0.6})
('context-free grammar', 'nancy stokey', {'weight': 0.6})
('context-free grammar', 'approximation algorithm', {'weight': 0.6})
('context-free grammar', 'discrete-time', {'weight': 0.6})
('context-free grammar', 'cyk algorithm', {'weight': 0.7})
('context-free grammar', 'markov decision process', {'weight': 0.6})
('context-free grammar', "powell's method", {'weight': 0.6})
('context-free grammar', 'wolfe conditions', {'weight': 0.6})
('context-free grammar', 'convexity in economics', {'weight': 0.6})
('context-free grammar', 'transposition table', {'weight': 0.6})
('context-free grammar', 'economics', {'weight': 0.6})
('context-free grammar', 'backward induction', {'weight': 0.6})
('context-free grammar', 'compiler construction', {'weight': 0.5})
('context-free grammar', 'edit distance', {'weight': 0.6})
('context-free grammar', 'tree structure', {'weight': 0.6})
('context-free grammar', 'exchange algorithm', {'weight': 0.6})
('context-free grammar', 'dover publications', {'weight': 0.6})
('context-free grammar', 'seam carving', {'weight': 0.6})
('context-free grammar', 'recursive least squares', {'weight': 0.6})
('context-free grammar', 'metaheuristic', {'weight': 0.6})
('context-free grammar', 'quasi-newton method', {'weight': 0.6})
('context-free grammar', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('context-free grammar', 'robert e. lucas', {'weight': 0.6})
('context-free grammar', 'non-convexity (economics)', {'weight': 0.6})
('context-free grammar', 'sr1 formula', {'weight': 0.6})
('context-free grammar', 'mathematical reviews', {'weight': 0.6})
('context-free grammar', 'puzzle', {'weight': 0.6})
('context-free grammar', 'associative array', {'weight': 0.6})
('context-free grammar', 'shortest path problem', {'weight': 0.6})
('context-free grammar', 'dynamic algorithm', {'weight': 0.6})
('context-free grammar', 'augmented lagrangian method', {'weight': 0.6})
('context-free grammar', 'charles delisi', {'weight': 0.6})
('context-free grammar', 'greedy algorithm', {'weight': 0.6})
('context-free grammar', "karmarkar's algorithm", {'weight': 0.6})
('context-free grammar', 'lattice models', {'weight': 0.6})
('context-free grammar', 'utility', {'weight': 0.6})
('context-free grammar', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('context-free grammar', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('context-free grammar', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('context-free grammar', 'international standard book number', {'weight': 0.6})
('context-free grammar', 'undirected graph', {'weight': 0.6})
('context-free grammar', 'scheme (programming language)', {'weight': 0.6})
('context-free grammar', 'rna structure', {'weight': 0.6})
('context-free grammar', 'hanoi', {'weight': 0.6})
('context-free grammar', 'perl', {'weight': 0.6})
('context-free grammar', 'digital object identifier', {'weight': 0.6})
('context-free grammar', 'sequential quadratic programming', {'weight': 0.6})
('context-free grammar', "dinic's algorithm", {'weight': 0.6})
('context-free grammar', 'pseudo-polynomial time', {'weight': 0.6})
('context-free grammar', 'partition problem', {'weight': 0.6})
('context-free grammar', 'stochastic programming', {'weight': 0.6})
('context-free grammar', 'hill climbing', {'weight': 0.6})
('context-free grammar', 'top-down', {'weight': 0.6})
('context-free grammar', 'de boor algorithm', {'weight': 0.6})
('context-free grammar', 'optimization algorithm', {'weight': 0.6})
('context-free grammar', "kruskal's algorithm", {'weight': 0.6})
('context-free grammar', 'jacques philippe marie binet', {'weight': 0.6})
('context-free grammar', 'tabu search', {'weight': 0.6})
('context-free grammar', 'divide and conquer algorithm', {'weight': 0.6})
('context-free grammar', 'stochastic context-free grammar', {'weight': 0.7})
('context-free grammar', "johnson's algorithm", {'weight': 0.6})
('context-free grammar', 'evolutionary algorithm', {'weight': 0.6})
('context-free grammar', 'clique-width', {'weight': 0.6})
('context-free grammar', 'dynamic programming', {'weight': 0.6})
('context-free grammar', 'subroutine', {'weight': 0.6})
('context-free grammar', 'simulated annealing', {'weight': 0.6})
('context-free grammar', 'tower of hanoi', {'weight': 0.6})
('context-free grammar', 'branch and bound', {'weight': 0.6})
('context-free grammar', 'engineering', {'weight': 0.6})
('context-free grammar', 'matroid', {'weight': 0.6})
('context-free grammar', 'viterbi algorithm', {'weight': 0.6})
('context-free grammar', "lemke's algorithm", {'weight': 0.6})
('context-free grammar', 'simplex algorithm', {'weight': 0.6})
('context-free grammar', 'local search (optimization)', {'weight': 0.6})
('context-free grammar', 'hessian matrix', {'weight': 0.6})
('context-free grammar', 'ibm system r', {'weight': 0.6})
('context-free grammar', 'penalty method', {'weight': 0.6})
('context-free grammar', 'prolog', {'weight': 0.6})
('context-free grammar', '1956 in computer science', {'weight': 0.5})
('context-free grammar', 'time-invariant system', {'weight': 0.6})
('context-free grammar', 'criss-cross algorithm', {'weight': 0.6})
('context-free grammar', 'revised simplex algorithm', {'weight': 0.6})
('context-free grammar', 'll parser', {'weight': 0.7})
('context-free grammar', 'the mathematical association of america', {'weight': 0.6})
('context-free grammar', 'line search', {'weight': 0.6})
('context-free grammar', 'j (programming language)', {'weight': 0.6})
('context-free grammar', 'formal languages', {'weight': 0.5})
('context-free grammar', 'word wrap', {'weight': 0.6})
('context-free grammar', 'golden section search', {'weight': 0.6})
('context-free grammar', 'subset sum problem', {'weight': 0.6})
('context-free grammar', 'integer programming', {'weight': 0.6})
('context-free grammar', 'nucleosome', {'weight': 0.6})
('context-free grammar', 'earley algorithm', {'weight': 0.7})
('context-free grammar', 'referential transparency (computer science)', {'weight': 0.6})
('context-free grammar', 'recursion', {'weight': 0.6})
('context-free grammar', 'mathematica', {'weight': 0.6})
('context-free grammar', 'quicksort', {'weight': 0.6})
('context-free grammar', 'glr parser', {'weight': 0.7})
('context-free grammar', 'recursion (computer science)', {'weight': 0.6})
('context-free grammar', 'checkerboard', {'weight': 0.6})
('context-free grammar', 'computer science', {'weight': 0.6})
('context-free grammar', 'brute-force search', {'weight': 0.6})
('context-free grammar', 'mathematics', {'weight': 0.6})
('context-free grammar', 'depth-first search', {'weight': 0.6})
('context-free grammar', 'algorithms for context-free grammar generation', {'weight': 0.7})
('context-free grammar', 'top-down and bottom-up design', {'weight': 0.6})
('context-free grammar', 'correspondence problem', {'weight': 0.6})
('context-free grammar', 'transcription factor', {'weight': 0.6})
('context-free grammar', 'tree decomposition', {'weight': 0.6})
('context-free grammar', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('context-free grammar', 'structural alignment', {'weight': 0.6})
('context-free grammar', 'local convergence', {'weight': 0.6})
('context-free grammar', 'knapsack problem', {'weight': 0.6})
('context-free grammar', 'graph algorithm', {'weight': 0.6})
('context-free grammar', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('context-free grammar', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('context-free grammar', 'hidden markov model', {'weight': 0.6})
('context-free grammar', 'string (computer science)', {'weight': 0.6})
('context-free grammar', 'bioinformatics', {'weight': 0.6})
('context-free grammar', 'genetics', {'weight': 0.6})
('context-free grammar', 'mathematical optimization', {'weight': 0.6})
('context-free grammar', 'artificial neural networks', {'weight': 0.6})
('context-free grammar', 'introduction to algorithms', {'weight': 0.6})
('context-free grammar', 'thomas h. cormen', {'weight': 0.6})
('context-free grammar', 'music information retrieval', {'weight': 0.6})
('context-free grammar', 'beat (music)', {'weight': 0.6})
('context-free grammar', 'longest common subsequence problem', {'weight': 0.6})
('context-free grammar', 'convex minimization', {'weight': 0.6})
('context-free grammar', 'successive parabolic interpolation', {'weight': 0.6})
('context-free grammar', 'fibonacci sequence', {'weight': 0.6})
('context-free grammar', 'maximum subarray problem', {'weight': 0.6})
('context-free grammar', 'convex optimization', {'weight': 0.6})
('context-free grammar', 'memoization', {'weight': 0.6})
('context-free grammar', 'richard bellman', {'weight': 0.6})
('context-free grammar', 'exponential growth', {'weight': 0.6})
('context-free grammar', 'charles e. leiserson', {'weight': 0.6})
('context-free grammar', 'charles erwin wilson', {'weight': 0.6})
('context-free grammar', 'interval scheduling', {'weight': 0.6})
('context-free grammar', 'chart parser', {'weight': 0.6})
('context-free grammar', 'travelling salesman problem', {'weight': 0.6})
('context-free grammar', 'bellman equation', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'photoshop', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'sequence alignment', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'flow network', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'ellipsoid method', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'chain matrix multiplication', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'ieee', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'backtracking', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'nonlinear conjugate gradient method', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'dynamic problem', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'trust region', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'function (mathematics)', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'minimum spanning tree', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'context-free grammar', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'branch and cut', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'state variable', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'treewidth', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'overlapping subproblem', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'taylor & francis', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'cutting-plane method', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 1})
('floyd\xe2\x80\x93warshall algorithm', 'method of undetermined coefficients', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'combinatorial optimization', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', "newton's method in optimization", {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'matrix chain multiplication', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'dynamic time warping', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'dynamic programming language', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'call-by-need', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'big-o notation', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'comparison of optimization software', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'quadratic programming', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'common lisp', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'barrier function', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'gradient descent', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'patricia selinger', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'discounting', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'ronald l. rivest', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'iterative method', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'limited-memory bfgs', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'longest common substring problem', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'clifford stein', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'computer chess', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'linear programming', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'bitonic tour', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'linear search problem', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'systems analysis', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'capital (economics)', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'levenshtein distance', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'nonlinear programming', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'computational complexity of mathematical operations', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'gradient', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'bulletin of the american mathematical society', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'u.s. english', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'refutation table', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'heuristic algorithm', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'successive linear programming', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'optimal substructure', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'programming language', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'mergesort', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', "dijkstra's algorithm", {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'subgradient method', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'call-by-name', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'longest increasing subsequence problem', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'edward prescott', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'exponential time', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'principle of optimality', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'mathematical game', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'nancy stokey', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'approximation algorithm', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'discrete-time', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'cyk algorithm', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'markov decision process', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', "powell's method", {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'wolfe conditions', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'convexity in economics', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'transposition table', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'economics', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'backward induction', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'golden section search', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'edit distance', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'tree structure', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'exchange algorithm', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'dover publications', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'seam carving', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'recursive least squares', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'metaheuristic', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'quasi-newton method', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'robert e. lucas', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'non-convexity (economics)', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'sr1 formula', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'mathematical reviews', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'puzzle', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'associative array', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'shortest path problem', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'dynamic algorithm', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'augmented lagrangian method', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'charles delisi', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'greedy algorithm', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', "karmarkar's algorithm", {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'lattice models', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'utility', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'international standard book number', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'undirected graph', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'scheme (programming language)', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'rna structure', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'hanoi', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'perl', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'digital object identifier', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'sequential quadratic programming', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', "dinic's algorithm", {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'pseudo-polynomial time', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'partition problem', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'stochastic programming', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'hill climbing', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'top-down', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'de boor algorithm', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'optimization algorithm', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', "kruskal's algorithm", {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'jacques philippe marie binet', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'tabu search', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'divide and conquer algorithm', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', "johnson's algorithm", {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'evolutionary algorithm', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'clique-width', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'dynamic programming', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'subroutine', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'simulated annealing', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'tower of hanoi', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'branch and bound', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'engineering', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'matroid', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'viterbi algorithm', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', "lemke's algorithm", {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'simplex algorithm', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'local search (optimization)', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'hessian matrix', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'ibm system r', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'penalty method', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'prolog', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'time-invariant system', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'criss-cross algorithm', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'revised simplex algorithm', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'the mathematical association of america', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'line search', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'j (programming language)', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'word wrap', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'subset sum problem', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'integer programming', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'nucleosome', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'earley algorithm', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'referential transparency (computer science)', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'recursion', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'mathematica', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'quicksort', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'recursion (computer science)', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'checkerboard', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'computer science', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'brute-force search', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'mathematics', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'depth-first search', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'top-down and bottom-up design', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'correspondence problem', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'transcription factor', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'tree decomposition', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'structural alignment', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'local convergence', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'knapsack problem', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'graph algorithm', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'hidden markov model', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'string (computer science)', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'bioinformatics', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'genetics', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'mathematical optimization', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'artificial neural networks', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'introduction to algorithms', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'thomas h. cormen', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'music information retrieval', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'beat (music)', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'longest common subsequence problem', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'convex minimization', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'successive parabolic interpolation', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'fibonacci sequence', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'maximum subarray problem', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'convex optimization', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'memoization', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'richard bellman', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'exponential growth', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'charles e. leiserson', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'charles erwin wilson', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'interval scheduling', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'chart parser', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'travelling salesman problem', {'weight': 0.6})
('floyd\xe2\x80\x93warshall algorithm', 'bellman equation', {'weight': 0.6})
('method of undetermined coefficients', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('method of undetermined coefficients', 'photoshop', {'weight': 0.6})
('method of undetermined coefficients', 'sequence alignment', {'weight': 0.6})
('method of undetermined coefficients', 'flow network', {'weight': 0.6})
('method of undetermined coefficients', 'ellipsoid method', {'weight': 0.6})
('method of undetermined coefficients', 'chain matrix multiplication', {'weight': 0.6})
('method of undetermined coefficients', 'ieee', {'weight': 0.6})
('method of undetermined coefficients', 'backtracking', {'weight': 0.6})
('method of undetermined coefficients', 'nonlinear conjugate gradient method', {'weight': 0.6})
('method of undetermined coefficients', 'dynamic problem', {'weight': 0.6})
('method of undetermined coefficients', 'trust region', {'weight': 0.6})
('method of undetermined coefficients', 'function (mathematics)', {'weight': 0.6})
('method of undetermined coefficients', 'minimum spanning tree', {'weight': 0.6})
('method of undetermined coefficients', 'context-free grammar', {'weight': 0.6})
('method of undetermined coefficients', 'branch and cut', {'weight': 0.6})
('method of undetermined coefficients', 'state variable', {'weight': 0.6})
('method of undetermined coefficients', 'treewidth', {'weight': 0.6})
('method of undetermined coefficients', 'overlapping subproblem', {'weight': 0.6})
('method of undetermined coefficients', 'taylor & francis', {'weight': 0.6})
('method of undetermined coefficients', 'cutting-plane method', {'weight': 0.6})
('method of undetermined coefficients', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('method of undetermined coefficients', 'method of undetermined coefficients', {'weight': 1})
('method of undetermined coefficients', 'combinatorial optimization', {'weight': 0.6})
('method of undetermined coefficients', "newton's method in optimization", {'weight': 0.6})
('method of undetermined coefficients', 'matrix chain multiplication', {'weight': 0.6})
('method of undetermined coefficients', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('method of undetermined coefficients', 'dynamic time warping', {'weight': 0.6})
('method of undetermined coefficients', 'dynamic programming language', {'weight': 0.6})
('method of undetermined coefficients', 'call-by-need', {'weight': 0.6})
('method of undetermined coefficients', 'big-o notation', {'weight': 0.6})
('method of undetermined coefficients', 'comparison of optimization software', {'weight': 0.6})
('method of undetermined coefficients', 'quadratic programming', {'weight': 0.6})
('method of undetermined coefficients', 'common lisp', {'weight': 0.6})
('method of undetermined coefficients', 'barrier function', {'weight': 0.6})
('method of undetermined coefficients', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('method of undetermined coefficients', 'gradient descent', {'weight': 0.6})
('method of undetermined coefficients', 'patricia selinger', {'weight': 0.6})
('method of undetermined coefficients', 'discounting', {'weight': 0.6})
('method of undetermined coefficients', 'ronald l. rivest', {'weight': 0.6})
('method of undetermined coefficients', 'iterative method', {'weight': 0.6})
('method of undetermined coefficients', 'limited-memory bfgs', {'weight': 0.6})
('method of undetermined coefficients', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('method of undetermined coefficients', 'longest common substring problem', {'weight': 0.6})
('method of undetermined coefficients', 'clifford stein', {'weight': 0.6})
('method of undetermined coefficients', 'computer chess', {'weight': 0.6})
('method of undetermined coefficients', 'linear programming', {'weight': 0.6})
('method of undetermined coefficients', 'bitonic tour', {'weight': 0.6})
('method of undetermined coefficients', 'linear search problem', {'weight': 0.6})
('method of undetermined coefficients', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('method of undetermined coefficients', 'systems analysis', {'weight': 0.6})
('method of undetermined coefficients', 'capital (economics)', {'weight': 0.6})
('method of undetermined coefficients', 'levenshtein distance', {'weight': 0.6})
('method of undetermined coefficients', 'nonlinear programming', {'weight': 0.6})
('method of undetermined coefficients', 'computational complexity of mathematical operations', {'weight': 0.6})
('method of undetermined coefficients', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('method of undetermined coefficients', 'gradient', {'weight': 0.6})
('method of undetermined coefficients', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('method of undetermined coefficients', 'local convergence', {'weight': 0.6})
('method of undetermined coefficients', 'bulletin of the american mathematical society', {'weight': 0.6})
('method of undetermined coefficients', 'u.s. english', {'weight': 0.6})
('method of undetermined coefficients', 'refutation table', {'weight': 0.6})
('method of undetermined coefficients', 'heuristic algorithm', {'weight': 0.6})
('method of undetermined coefficients', 'successive linear programming', {'weight': 0.6})
('method of undetermined coefficients', 'optimal substructure', {'weight': 0.6})
('method of undetermined coefficients', 'programming language', {'weight': 0.6})
('method of undetermined coefficients', 'mergesort', {'weight': 0.6})
('method of undetermined coefficients', "dijkstra's algorithm", {'weight': 0.6})
('method of undetermined coefficients', 'subgradient method', {'weight': 0.6})
('method of undetermined coefficients', 'call-by-name', {'weight': 0.6})
('method of undetermined coefficients', 'longest increasing subsequence problem', {'weight': 0.6})
('method of undetermined coefficients', 'edward prescott', {'weight': 0.6})
('method of undetermined coefficients', 'exponential time', {'weight': 0.6})
('method of undetermined coefficients', 'principle of optimality', {'weight': 0.6})
('method of undetermined coefficients', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('method of undetermined coefficients', 'mathematical game', {'weight': 0.6})
('method of undetermined coefficients', 'nancy stokey', {'weight': 0.6})
('method of undetermined coefficients', 'approximation algorithm', {'weight': 0.6})
('method of undetermined coefficients', 'discrete-time', {'weight': 0.6})
('method of undetermined coefficients', 'cyk algorithm', {'weight': 0.6})
('method of undetermined coefficients', 'markov decision process', {'weight': 0.6})
('method of undetermined coefficients', "powell's method", {'weight': 0.6})
('method of undetermined coefficients', 'wolfe conditions', {'weight': 0.6})
('method of undetermined coefficients', 'convexity in economics', {'weight': 0.6})
('method of undetermined coefficients', 'transposition table', {'weight': 0.6})
('method of undetermined coefficients', 'economics', {'weight': 0.6})
('method of undetermined coefficients', 'backward induction', {'weight': 0.6})
('method of undetermined coefficients', 'golden section search', {'weight': 0.6})
('method of undetermined coefficients', 'edit distance', {'weight': 0.6})
('method of undetermined coefficients', 'tree structure', {'weight': 0.6})
('method of undetermined coefficients', 'exchange algorithm', {'weight': 0.6})
('method of undetermined coefficients', 'dover publications', {'weight': 0.6})
('method of undetermined coefficients', 'seam carving', {'weight': 0.6})
('method of undetermined coefficients', 'recursive least squares', {'weight': 0.6})
('method of undetermined coefficients', 'metaheuristic', {'weight': 0.6})
('method of undetermined coefficients', 'quasi-newton method', {'weight': 0.6})
('method of undetermined coefficients', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('method of undetermined coefficients', 'robert e. lucas', {'weight': 0.6})
('method of undetermined coefficients', 'non-convexity (economics)', {'weight': 0.6})
('method of undetermined coefficients', 'sr1 formula', {'weight': 0.6})
('method of undetermined coefficients', 'mathematical reviews', {'weight': 0.6})
('method of undetermined coefficients', 'puzzle', {'weight': 0.6})
('method of undetermined coefficients', 'associative array', {'weight': 0.6})
('method of undetermined coefficients', 'shortest path problem', {'weight': 0.6})
('method of undetermined coefficients', 'dynamic algorithm', {'weight': 0.6})
('method of undetermined coefficients', 'augmented lagrangian method', {'weight': 0.6})
('method of undetermined coefficients', 'charles delisi', {'weight': 0.6})
('method of undetermined coefficients', 'greedy algorithm', {'weight': 0.6})
('method of undetermined coefficients', "karmarkar's algorithm", {'weight': 0.6})
('method of undetermined coefficients', 'lattice models', {'weight': 0.6})
('method of undetermined coefficients', 'utility', {'weight': 0.6})
('method of undetermined coefficients', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('method of undetermined coefficients', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('method of undetermined coefficients', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('method of undetermined coefficients', 'international standard book number', {'weight': 0.6})
('method of undetermined coefficients', 'undirected graph', {'weight': 0.6})
('method of undetermined coefficients', 'scheme (programming language)', {'weight': 0.6})
('method of undetermined coefficients', 'rna structure', {'weight': 0.6})
('method of undetermined coefficients', 'hanoi', {'weight': 0.6})
('method of undetermined coefficients', 'perl', {'weight': 0.6})
('method of undetermined coefficients', 'digital object identifier', {'weight': 0.6})
('method of undetermined coefficients', 'sequential quadratic programming', {'weight': 0.6})
('method of undetermined coefficients', "dinic's algorithm", {'weight': 0.6})
('method of undetermined coefficients', 'pseudo-polynomial time', {'weight': 0.6})
('method of undetermined coefficients', 'partition problem', {'weight': 0.6})
('method of undetermined coefficients', 'stochastic programming', {'weight': 0.6})
('method of undetermined coefficients', 'hill climbing', {'weight': 0.6})
('method of undetermined coefficients', 'top-down', {'weight': 0.6})
('method of undetermined coefficients', 'de boor algorithm', {'weight': 0.6})
('method of undetermined coefficients', 'optimization algorithm', {'weight': 0.6})
('method of undetermined coefficients', "kruskal's algorithm", {'weight': 0.6})
('method of undetermined coefficients', 'jacques philippe marie binet', {'weight': 0.6})
('method of undetermined coefficients', 'tabu search', {'weight': 0.6})
('method of undetermined coefficients', 'divide and conquer algorithm', {'weight': 0.6})
('method of undetermined coefficients', "johnson's algorithm", {'weight': 0.6})
('method of undetermined coefficients', 'evolutionary algorithm', {'weight': 0.6})
('method of undetermined coefficients', 'clique-width', {'weight': 0.6})
('method of undetermined coefficients', 'dynamic programming', {'weight': 0.6})
('method of undetermined coefficients', 'subroutine', {'weight': 0.6})
('method of undetermined coefficients', 'simulated annealing', {'weight': 0.6})
('method of undetermined coefficients', 'tower of hanoi', {'weight': 0.6})
('method of undetermined coefficients', 'branch and bound', {'weight': 0.6})
('method of undetermined coefficients', 'engineering', {'weight': 0.6})
('method of undetermined coefficients', 'matroid', {'weight': 0.6})
('method of undetermined coefficients', 'viterbi algorithm', {'weight': 0.6})
('method of undetermined coefficients', "lemke's algorithm", {'weight': 0.6})
('method of undetermined coefficients', 'simplex algorithm', {'weight': 0.6})
('method of undetermined coefficients', 'local search (optimization)', {'weight': 0.6})
('method of undetermined coefficients', 'hessian matrix', {'weight': 0.6})
('method of undetermined coefficients', 'ibm system r', {'weight': 0.6})
('method of undetermined coefficients', 'penalty method', {'weight': 0.6})
('method of undetermined coefficients', 'prolog', {'weight': 0.6})
('method of undetermined coefficients', 'time-invariant system', {'weight': 0.6})
('method of undetermined coefficients', 'criss-cross algorithm', {'weight': 0.6})
('method of undetermined coefficients', 'revised simplex algorithm', {'weight': 0.6})
('method of undetermined coefficients', 'the mathematical association of america', {'weight': 0.6})
('method of undetermined coefficients', 'line search', {'weight': 0.6})
('method of undetermined coefficients', 'j (programming language)', {'weight': 0.6})
('method of undetermined coefficients', 'word wrap', {'weight': 0.6})
('method of undetermined coefficients', 'subset sum problem', {'weight': 0.6})
('method of undetermined coefficients', 'integer programming', {'weight': 0.6})
('method of undetermined coefficients', 'nucleosome', {'weight': 0.6})
('method of undetermined coefficients', 'earley algorithm', {'weight': 0.6})
('method of undetermined coefficients', 'referential transparency (computer science)', {'weight': 0.6})
('method of undetermined coefficients', 'recursion', {'weight': 0.6})
('method of undetermined coefficients', 'mathematica', {'weight': 0.6})
('method of undetermined coefficients', 'quicksort', {'weight': 0.6})
('method of undetermined coefficients', 'recursion (computer science)', {'weight': 0.6})
('method of undetermined coefficients', 'checkerboard', {'weight': 0.6})
('method of undetermined coefficients', 'computer science', {'weight': 0.6})
('method of undetermined coefficients', 'brute-force search', {'weight': 0.6})
('method of undetermined coefficients', 'mathematics', {'weight': 0.6})
('method of undetermined coefficients', 'depth-first search', {'weight': 0.6})
('method of undetermined coefficients', 'top-down and bottom-up design', {'weight': 0.6})
('method of undetermined coefficients', 'correspondence problem', {'weight': 0.6})
('method of undetermined coefficients', 'transcription factor', {'weight': 0.6})
('method of undetermined coefficients', 'tree decomposition', {'weight': 0.6})
('method of undetermined coefficients', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('method of undetermined coefficients', 'structural alignment', {'weight': 0.6})
('method of undetermined coefficients', 'ordinary differential equations', {'weight': 0.5})
('method of undetermined coefficients', 'knapsack problem', {'weight': 0.6})
('method of undetermined coefficients', 'graph algorithm', {'weight': 0.6})
('method of undetermined coefficients', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('method of undetermined coefficients', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('method of undetermined coefficients', 'hidden markov model', {'weight': 0.6})
('method of undetermined coefficients', 'string (computer science)', {'weight': 0.6})
('method of undetermined coefficients', 'bioinformatics', {'weight': 0.6})
('method of undetermined coefficients', 'genetics', {'weight': 0.6})
('method of undetermined coefficients', 'mathematical optimization', {'weight': 0.6})
('method of undetermined coefficients', 'artificial neural networks', {'weight': 0.6})
('method of undetermined coefficients', 'introduction to algorithms', {'weight': 0.6})
('method of undetermined coefficients', 'thomas h. cormen', {'weight': 0.6})
('method of undetermined coefficients', 'music information retrieval', {'weight': 0.6})
('method of undetermined coefficients', 'beat (music)', {'weight': 0.6})
('method of undetermined coefficients', 'longest common subsequence problem', {'weight': 0.6})
('method of undetermined coefficients', 'convex minimization', {'weight': 0.6})
('method of undetermined coefficients', 'successive parabolic interpolation', {'weight': 0.6})
('method of undetermined coefficients', 'fibonacci sequence', {'weight': 0.6})
('method of undetermined coefficients', 'maximum subarray problem', {'weight': 0.6})
('method of undetermined coefficients', 'convex optimization', {'weight': 0.6})
('method of undetermined coefficients', 'memoization', {'weight': 0.6})
('method of undetermined coefficients', 'richard bellman', {'weight': 0.6})
('method of undetermined coefficients', 'exponential growth', {'weight': 0.6})
('method of undetermined coefficients', 'charles e. leiserson', {'weight': 0.6})
('method of undetermined coefficients', 'charles erwin wilson', {'weight': 0.6})
('method of undetermined coefficients', 'interval scheduling', {'weight': 0.6})
('method of undetermined coefficients', 'chart parser', {'weight': 0.6})
('method of undetermined coefficients', 'travelling salesman problem', {'weight': 0.6})
('method of undetermined coefficients', 'bellman equation', {'weight': 0.6})
('comparison of optimization software', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('comparison of optimization software', 'photoshop', {'weight': 0.6})
('comparison of optimization software', 'sequence alignment', {'weight': 0.6})
('comparison of optimization software', 'flow network', {'weight': 0.6})
('comparison of optimization software', 'ellipsoid method', {'weight': 0.6})
('comparison of optimization software', 'chain matrix multiplication', {'weight': 0.6})
('comparison of optimization software', 'ieee', {'weight': 0.6})
('comparison of optimization software', 'backtracking', {'weight': 0.6})
('comparison of optimization software', 'nonlinear conjugate gradient method', {'weight': 0.6})
('comparison of optimization software', 'dynamic problem', {'weight': 0.6})
('comparison of optimization software', 'trust region', {'weight': 0.6})
('comparison of optimization software', 'function (mathematics)', {'weight': 0.6})
('comparison of optimization software', 'minimum spanning tree', {'weight': 0.6})
('comparison of optimization software', 'context-free grammar', {'weight': 0.6})
('comparison of optimization software', 'branch and cut', {'weight': 0.6})
('comparison of optimization software', 'state variable', {'weight': 0.6})
('comparison of optimization software', 'associative array', {'weight': 0.6})
('comparison of optimization software', 'treewidth', {'weight': 0.6})
('comparison of optimization software', 'overlapping subproblem', {'weight': 0.6})
('comparison of optimization software', 'taylor & francis', {'weight': 0.6})
('comparison of optimization software', 'cutting-plane method', {'weight': 0.6})
('comparison of optimization software', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('comparison of optimization software', 'method of undetermined coefficients', {'weight': 0.6})
('comparison of optimization software', 'combinatorial optimization', {'weight': 0.6})
('comparison of optimization software', "newton's method in optimization", {'weight': 0.6})
('comparison of optimization software', 'matrix chain multiplication', {'weight': 0.6})
('comparison of optimization software', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('comparison of optimization software', 'dynamic time warping', {'weight': 0.6})
('comparison of optimization software', 'dynamic programming language', {'weight': 0.6})
('comparison of optimization software', 'call-by-need', {'weight': 0.6})
('comparison of optimization software', 'big-o notation', {'weight': 0.6})
('comparison of optimization software', 'comparison of optimization software', {'weight': 1})
('comparison of optimization software', 'quadratic programming', {'weight': 0.6})
('comparison of optimization software', 'common lisp', {'weight': 0.6})
('comparison of optimization software', 'barrier function', {'weight': 0.6})
('comparison of optimization software', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('comparison of optimization software', 'gradient descent', {'weight': 0.6})
('comparison of optimization software', 'patricia selinger', {'weight': 0.6})
('comparison of optimization software', 'discounting', {'weight': 0.6})
('comparison of optimization software', 'ronald l. rivest', {'weight': 0.6})
('comparison of optimization software', 'iterative method', {'weight': 0.6})
('comparison of optimization software', 'limited-memory bfgs', {'weight': 0.6})
('comparison of optimization software', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('comparison of optimization software', 'longest common substring problem', {'weight': 0.6})
('comparison of optimization software', 'clifford stein', {'weight': 0.6})
('comparison of optimization software', 'computer chess', {'weight': 0.6})
('comparison of optimization software', 'linear programming', {'weight': 0.6})
('comparison of optimization software', 'bitonic tour', {'weight': 0.6})
('comparison of optimization software', 'linear search problem', {'weight': 0.6})
('comparison of optimization software', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('comparison of optimization software', 'systems analysis', {'weight': 0.6})
('comparison of optimization software', 'capital (economics)', {'weight': 0.6})
('comparison of optimization software', 'levenshtein distance', {'weight': 0.6})
('comparison of optimization software', 'nonlinear programming', {'weight': 0.6})
('comparison of optimization software', 'computational complexity of mathematical operations', {'weight': 0.6})
('comparison of optimization software', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('comparison of optimization software', 'gradient', {'weight': 0.6})
('comparison of optimization software', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('comparison of optimization software', 'bulletin of the american mathematical society', {'weight': 0.6})
('comparison of optimization software', 'u.s. english', {'weight': 0.6})
('comparison of optimization software', 'refutation table', {'weight': 0.6})
('comparison of optimization software', 'heuristic algorithm', {'weight': 0.6})
('comparison of optimization software', 'successive linear programming', {'weight': 0.6})
('comparison of optimization software', 'optimal substructure', {'weight': 0.6})
('comparison of optimization software', 'programming language', {'weight': 0.6})
('comparison of optimization software', 'mergesort', {'weight': 0.6})
('comparison of optimization software', "dijkstra's algorithm", {'weight': 0.6})
('comparison of optimization software', 'subgradient method', {'weight': 0.6})
('comparison of optimization software', 'call-by-name', {'weight': 0.6})
('comparison of optimization software', 'longest increasing subsequence problem', {'weight': 0.6})
('comparison of optimization software', 'edward prescott', {'weight': 0.6})
('comparison of optimization software', 'exponential time', {'weight': 0.6})
('comparison of optimization software', 'principle of optimality', {'weight': 0.6})
('comparison of optimization software', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('comparison of optimization software', 'mathematical game', {'weight': 0.6})
('comparison of optimization software', 'nancy stokey', {'weight': 0.6})
('comparison of optimization software', 'approximation algorithm', {'weight': 0.6})
('comparison of optimization software', 'discrete-time', {'weight': 0.6})
('comparison of optimization software', 'cyk algorithm', {'weight': 0.6})
('comparison of optimization software', 'markov decision process', {'weight': 0.6})
('comparison of optimization software', "powell's method", {'weight': 0.6})
('comparison of optimization software', 'wolfe conditions', {'weight': 0.6})
('comparison of optimization software', 'convexity in economics', {'weight': 0.6})
('comparison of optimization software', 'transposition table', {'weight': 0.6})
('comparison of optimization software', 'economics', {'weight': 0.6})
('comparison of optimization software', 'backward induction', {'weight': 0.6})
('comparison of optimization software', 'golden section search', {'weight': 0.6})
('comparison of optimization software', 'edit distance', {'weight': 0.6})
('comparison of optimization software', 'tree structure', {'weight': 0.6})
('comparison of optimization software', 'exchange algorithm', {'weight': 0.6})
('comparison of optimization software', 'dover publications', {'weight': 0.6})
('comparison of optimization software', 'seam carving', {'weight': 0.6})
('comparison of optimization software', 'recursive least squares', {'weight': 0.6})
('comparison of optimization software', 'metaheuristic', {'weight': 0.6})
('comparison of optimization software', 'quasi-newton method', {'weight': 0.6})
('comparison of optimization software', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('comparison of optimization software', 'robert e. lucas', {'weight': 0.6})
('comparison of optimization software', 'non-convexity (economics)', {'weight': 0.6})
('comparison of optimization software', 'sr1 formula', {'weight': 0.6})
('comparison of optimization software', 'mathematical reviews', {'weight': 0.6})
('comparison of optimization software', 'puzzle', {'weight': 0.6})
('comparison of optimization software', 'numerical software', {'weight': 0.5})
('comparison of optimization software', 'shortest path problem', {'weight': 0.6})
('comparison of optimization software', 'dynamic algorithm', {'weight': 0.6})
('comparison of optimization software', 'augmented lagrangian method', {'weight': 0.6})
('comparison of optimization software', 'charles delisi', {'weight': 0.6})
('comparison of optimization software', 'greedy algorithm', {'weight': 0.6})
('comparison of optimization software', "karmarkar's algorithm", {'weight': 0.6})
('comparison of optimization software', 'lattice models', {'weight': 0.6})
('comparison of optimization software', 'utility', {'weight': 0.6})
('comparison of optimization software', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('comparison of optimization software', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('comparison of optimization software', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('comparison of optimization software', 'international standard book number', {'weight': 0.6})
('comparison of optimization software', 'undirected graph', {'weight': 0.6})
('comparison of optimization software', 'scheme (programming language)', {'weight': 0.6})
('comparison of optimization software', 'rna structure', {'weight': 0.6})
('comparison of optimization software', 'hanoi', {'weight': 0.6})
('comparison of optimization software', 'perl', {'weight': 0.6})
('comparison of optimization software', 'digital object identifier', {'weight': 0.6})
('comparison of optimization software', 'sequential quadratic programming', {'weight': 0.6})
('comparison of optimization software', "dinic's algorithm", {'weight': 0.6})
('comparison of optimization software', 'pseudo-polynomial time', {'weight': 0.6})
('comparison of optimization software', 'partition problem', {'weight': 0.6})
('comparison of optimization software', 'stochastic programming', {'weight': 0.6})
('comparison of optimization software', 'hill climbing', {'weight': 0.6})
('comparison of optimization software', 'top-down', {'weight': 0.6})
('comparison of optimization software', 'de boor algorithm', {'weight': 0.6})
('comparison of optimization software', 'optimization algorithm', {'weight': 0.6})
('comparison of optimization software', "kruskal's algorithm", {'weight': 0.6})
('comparison of optimization software', 'jacques philippe marie binet', {'weight': 0.6})
('comparison of optimization software', 'tabu search', {'weight': 0.6})
('comparison of optimization software', 'divide and conquer algorithm', {'weight': 0.6})
('comparison of optimization software', "johnson's algorithm", {'weight': 0.6})
('comparison of optimization software', 'evolutionary algorithm', {'weight': 0.6})
('comparison of optimization software', 'clique-width', {'weight': 0.6})
('comparison of optimization software', 'dynamic programming', {'weight': 0.6})
('comparison of optimization software', 'subroutine', {'weight': 0.6})
('comparison of optimization software', 'simulated annealing', {'weight': 0.6})
('comparison of optimization software', 'tower of hanoi', {'weight': 0.6})
('comparison of optimization software', 'branch and bound', {'weight': 0.6})
('comparison of optimization software', 'engineering', {'weight': 0.6})
('comparison of optimization software', 'matroid', {'weight': 0.6})
('comparison of optimization software', 'viterbi algorithm', {'weight': 0.6})
('comparison of optimization software', "lemke's algorithm", {'weight': 0.6})
('comparison of optimization software', 'simplex algorithm', {'weight': 0.6})
('comparison of optimization software', 'local search (optimization)', {'weight': 0.6})
('comparison of optimization software', 'hessian matrix', {'weight': 0.6})
('comparison of optimization software', 'ibm system r', {'weight': 0.6})
('comparison of optimization software', 'penalty method', {'weight': 0.6})
('comparison of optimization software', 'prolog', {'weight': 0.6})
('comparison of optimization software', 'time-invariant system', {'weight': 0.6})
('comparison of optimization software', 'criss-cross algorithm', {'weight': 0.6})
('comparison of optimization software', 'revised simplex algorithm', {'weight': 0.6})
('comparison of optimization software', 'the mathematical association of america', {'weight': 0.6})
('comparison of optimization software', 'line search', {'weight': 0.6})
('comparison of optimization software', 'j (programming language)', {'weight': 0.6})
('comparison of optimization software', 'word wrap', {'weight': 0.6})
('comparison of optimization software', 'subset sum problem', {'weight': 0.6})
('comparison of optimization software', 'integer programming', {'weight': 0.6})
('comparison of optimization software', 'nucleosome', {'weight': 0.6})
('comparison of optimization software', 'earley algorithm', {'weight': 0.6})
('comparison of optimization software', 'referential transparency (computer science)', {'weight': 0.6})
('comparison of optimization software', 'recursion', {'weight': 0.6})
('comparison of optimization software', 'mathematica', {'weight': 0.6})
('comparison of optimization software', 'quicksort', {'weight': 0.6})
('comparison of optimization software', 'recursion (computer science)', {'weight': 0.6})
('comparison of optimization software', 'checkerboard', {'weight': 0.6})
('comparison of optimization software', 'computer science', {'weight': 0.6})
('comparison of optimization software', 'brute-force search', {'weight': 0.6})
('comparison of optimization software', 'mathematics', {'weight': 0.6})
('comparison of optimization software', 'depth-first search', {'weight': 0.6})
('comparison of optimization software', 'top-down and bottom-up design', {'weight': 0.6})
('comparison of optimization software', 'correspondence problem', {'weight': 0.6})
('comparison of optimization software', 'transcription factor', {'weight': 0.6})
('comparison of optimization software', 'tree decomposition', {'weight': 0.6})
('comparison of optimization software', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('comparison of optimization software', 'structural alignment', {'weight': 0.6})
('comparison of optimization software', 'local convergence', {'weight': 0.6})
('comparison of optimization software', 'knapsack problem', {'weight': 0.6})
('comparison of optimization software', 'graph algorithm', {'weight': 0.6})
('comparison of optimization software', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('comparison of optimization software', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('comparison of optimization software', 'hidden markov model', {'weight': 0.6})
('comparison of optimization software', 'string (computer science)', {'weight': 0.6})
('comparison of optimization software', 'bioinformatics', {'weight': 0.6})
('comparison of optimization software', 'genetics', {'weight': 0.6})
('comparison of optimization software', 'mathematical optimization', {'weight': 0.6})
('comparison of optimization software', 'artificial neural networks', {'weight': 0.6})
('comparison of optimization software', 'introduction to algorithms', {'weight': 0.6})
('comparison of optimization software', 'thomas h. cormen', {'weight': 0.6})
('comparison of optimization software', 'music information retrieval', {'weight': 0.6})
('comparison of optimization software', 'beat (music)', {'weight': 0.6})
('comparison of optimization software', 'longest common subsequence problem', {'weight': 0.6})
('comparison of optimization software', 'convex minimization', {'weight': 0.6})
('comparison of optimization software', 'successive parabolic interpolation', {'weight': 0.6})
('comparison of optimization software', 'fibonacci sequence', {'weight': 0.6})
('comparison of optimization software', 'maximum subarray problem', {'weight': 0.6})
('comparison of optimization software', 'convex optimization', {'weight': 0.6})
('comparison of optimization software', 'memoization', {'weight': 0.6})
('comparison of optimization software', 'richard bellman', {'weight': 0.6})
('comparison of optimization software', 'exponential growth', {'weight': 0.6})
('comparison of optimization software', 'charles e. leiserson', {'weight': 0.6})
('comparison of optimization software', 'charles erwin wilson', {'weight': 0.6})
('comparison of optimization software', 'interval scheduling', {'weight': 0.6})
('comparison of optimization software', 'chart parser', {'weight': 0.6})
('comparison of optimization software', 'travelling salesman problem', {'weight': 0.6})
('comparison of optimization software', 'bellman equation', {'weight': 0.6})
('patricia selinger', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('patricia selinger', 'photoshop', {'weight': 0.6})
('patricia selinger', 'sequence alignment', {'weight': 0.6})
('patricia selinger', 'flow network', {'weight': 0.6})
('patricia selinger', 'ellipsoid method', {'weight': 0.6})
('patricia selinger', 'chain matrix multiplication', {'weight': 0.6})
('patricia selinger', 'ieee', {'weight': 0.6})
('patricia selinger', 'backtracking', {'weight': 0.6})
('patricia selinger', 'nonlinear conjugate gradient method', {'weight': 0.6})
('patricia selinger', 'dynamic problem', {'weight': 0.6})
('patricia selinger', 'trust region', {'weight': 0.6})
('patricia selinger', 'function (mathematics)', {'weight': 0.6})
('patricia selinger', 'minimum spanning tree', {'weight': 0.6})
('patricia selinger', 'context-free grammar', {'weight': 0.6})
('patricia selinger', 'branch and cut', {'weight': 0.6})
('patricia selinger', 'state variable', {'weight': 0.6})
('patricia selinger', 'treewidth', {'weight': 0.6})
('patricia selinger', 'overlapping subproblem', {'weight': 0.6})
('patricia selinger', 'taylor & francis', {'weight': 0.6})
('patricia selinger', 'cutting-plane method', {'weight': 0.6})
('patricia selinger', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('patricia selinger', 'method of undetermined coefficients', {'weight': 0.6})
('patricia selinger', 'combinatorial optimization', {'weight': 0.6})
('patricia selinger', "newton's method in optimization", {'weight': 0.6})
('patricia selinger', 'matrix chain multiplication', {'weight': 0.6})
('patricia selinger', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('patricia selinger', 'dynamic time warping', {'weight': 0.6})
('patricia selinger', 'dynamic programming language', {'weight': 0.6})
('patricia selinger', 'call-by-need', {'weight': 0.6})
('patricia selinger', 'big-o notation', {'weight': 0.6})
('patricia selinger', 'comparison of optimization software', {'weight': 0.6})
('patricia selinger', 'quadratic programming', {'weight': 0.6})
('patricia selinger', 'common lisp', {'weight': 0.6})
('patricia selinger', 'barrier function', {'weight': 0.6})
('patricia selinger', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('patricia selinger', 'gradient descent', {'weight': 0.6})
('patricia selinger', 'patricia selinger', {'weight': 1})
('patricia selinger', 'discounting', {'weight': 0.6})
('patricia selinger', 'ronald l. rivest', {'weight': 0.6})
('patricia selinger', 'iterative method', {'weight': 0.6})
('patricia selinger', 'limited-memory bfgs', {'weight': 0.6})
('patricia selinger', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('patricia selinger', 'longest common substring problem', {'weight': 0.6})
('patricia selinger', 'clifford stein', {'weight': 0.6})
('patricia selinger', 'computer chess', {'weight': 0.6})
('patricia selinger', 'linear programming', {'weight': 0.6})
('patricia selinger', 'bitonic tour', {'weight': 0.6})
('patricia selinger', 'linear search problem', {'weight': 0.6})
('patricia selinger', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('patricia selinger', 'systems analysis', {'weight': 0.6})
('patricia selinger', 'capital (economics)', {'weight': 0.6})
('patricia selinger', 'levenshtein distance', {'weight': 0.6})
('patricia selinger', 'nonlinear programming', {'weight': 0.6})
('patricia selinger', 'computational complexity of mathematical operations', {'weight': 0.6})
('patricia selinger', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('patricia selinger', 'gradient', {'weight': 0.6})
('patricia selinger', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('patricia selinger', 'bulletin of the american mathematical society', {'weight': 0.6})
('patricia selinger', 'u.s. english', {'weight': 0.6})
('patricia selinger', 'refutation table', {'weight': 0.6})
('patricia selinger', 'heuristic algorithm', {'weight': 0.6})
('patricia selinger', 'successive linear programming', {'weight': 0.6})
('patricia selinger', 'optimal substructure', {'weight': 0.6})
('patricia selinger', 'programming language', {'weight': 0.6})
('patricia selinger', 'mergesort', {'weight': 0.6})
('patricia selinger', "dijkstra's algorithm", {'weight': 0.6})
('patricia selinger', 'subgradient method', {'weight': 0.6})
('patricia selinger', 'call-by-name', {'weight': 0.6})
('patricia selinger', 'longest increasing subsequence problem', {'weight': 0.6})
('patricia selinger', 'edward prescott', {'weight': 0.6})
('patricia selinger', 'exponential time', {'weight': 0.6})
('patricia selinger', 'principle of optimality', {'weight': 0.6})
('patricia selinger', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('patricia selinger', 'mathematical game', {'weight': 0.6})
('patricia selinger', 'nancy stokey', {'weight': 0.6})
('patricia selinger', 'approximation algorithm', {'weight': 0.6})
('patricia selinger', 'discrete-time', {'weight': 0.6})
('patricia selinger', 'cyk algorithm', {'weight': 0.6})
('patricia selinger', 'markov decision process', {'weight': 0.6})
('patricia selinger', "powell's method", {'weight': 0.6})
('patricia selinger', 'wolfe conditions', {'weight': 0.6})
('patricia selinger', 'convexity in economics', {'weight': 0.6})
('patricia selinger', 'transposition table', {'weight': 0.6})
('patricia selinger', 'economics', {'weight': 0.6})
('patricia selinger', 'backward induction', {'weight': 0.6})
('patricia selinger', 'golden section search', {'weight': 0.6})
('patricia selinger', 'edit distance', {'weight': 0.6})
('patricia selinger', 'tree structure', {'weight': 0.6})
('patricia selinger', 'exchange algorithm', {'weight': 0.6})
('patricia selinger', 'dover publications', {'weight': 0.6})
('patricia selinger', 'seam carving', {'weight': 0.6})
('patricia selinger', 'recursive least squares', {'weight': 0.6})
('patricia selinger', 'metaheuristic', {'weight': 0.6})
('patricia selinger', 'quasi-newton method', {'weight': 0.6})
('patricia selinger', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('patricia selinger', 'robert e. lucas', {'weight': 0.6})
('patricia selinger', 'non-convexity (economics)', {'weight': 0.6})
('patricia selinger', 'sr1 formula', {'weight': 0.6})
('patricia selinger', 'mathematical reviews', {'weight': 0.6})
('patricia selinger', 'puzzle', {'weight': 0.6})
('patricia selinger', 'associative array', {'weight': 0.6})
('patricia selinger', 'shortest path problem', {'weight': 0.6})
('patricia selinger', 'dynamic algorithm', {'weight': 0.6})
('patricia selinger', 'augmented lagrangian method', {'weight': 0.6})
('patricia selinger', 'charles delisi', {'weight': 0.6})
('patricia selinger', 'greedy algorithm', {'weight': 0.6})
('patricia selinger', "karmarkar's algorithm", {'weight': 0.6})
('patricia selinger', 'lattice models', {'weight': 0.6})
('patricia selinger', 'utility', {'weight': 0.6})
('patricia selinger', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('patricia selinger', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('patricia selinger', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('patricia selinger', 'international standard book number', {'weight': 0.6})
('patricia selinger', 'undirected graph', {'weight': 0.6})
('patricia selinger', 'scheme (programming language)', {'weight': 0.6})
('patricia selinger', 'rna structure', {'weight': 0.6})
('patricia selinger', 'hanoi', {'weight': 0.6})
('patricia selinger', 'perl', {'weight': 0.6})
('patricia selinger', 'digital object identifier', {'weight': 0.6})
('patricia selinger', 'sequential quadratic programming', {'weight': 0.6})
('patricia selinger', "dinic's algorithm", {'weight': 0.6})
('patricia selinger', 'pseudo-polynomial time', {'weight': 0.6})
('patricia selinger', 'partition problem', {'weight': 0.6})
('patricia selinger', 'stochastic programming', {'weight': 0.6})
('patricia selinger', 'hill climbing', {'weight': 0.6})
('patricia selinger', 'top-down', {'weight': 0.6})
('patricia selinger', 'de boor algorithm', {'weight': 0.6})
('patricia selinger', 'optimization algorithm', {'weight': 0.6})
('patricia selinger', "kruskal's algorithm", {'weight': 0.6})
('patricia selinger', 'jacques philippe marie binet', {'weight': 0.6})
('patricia selinger', 'tabu search', {'weight': 0.6})
('patricia selinger', 'divide and conquer algorithm', {'weight': 0.6})
('patricia selinger', "johnson's algorithm", {'weight': 0.6})
('patricia selinger', 'evolutionary algorithm', {'weight': 0.6})
('patricia selinger', 'clique-width', {'weight': 0.6})
('patricia selinger', 'dynamic programming', {'weight': 0.6})
('patricia selinger', 'subroutine', {'weight': 0.6})
('patricia selinger', 'simulated annealing', {'weight': 0.6})
('patricia selinger', 'tower of hanoi', {'weight': 0.6})
('patricia selinger', 'branch and bound', {'weight': 0.6})
('patricia selinger', 'engineering', {'weight': 0.6})
('patricia selinger', 'matroid', {'weight': 0.6})
('patricia selinger', 'viterbi algorithm', {'weight': 0.6})
('patricia selinger', "lemke's algorithm", {'weight': 0.6})
('patricia selinger', 'simplex algorithm', {'weight': 0.6})
('patricia selinger', 'local search (optimization)', {'weight': 0.6})
('patricia selinger', 'hessian matrix', {'weight': 0.6})
('patricia selinger', 'ibm system r', {'weight': 0.6})
('patricia selinger', 'penalty method', {'weight': 0.6})
('patricia selinger', 'prolog', {'weight': 0.6})
('patricia selinger', 'time-invariant system', {'weight': 0.6})
('patricia selinger', 'criss-cross algorithm', {'weight': 0.6})
('patricia selinger', 'revised simplex algorithm', {'weight': 0.6})
('patricia selinger', 'the mathematical association of america', {'weight': 0.6})
('patricia selinger', 'line search', {'weight': 0.6})
('patricia selinger', 'j (programming language)', {'weight': 0.6})
('patricia selinger', 'word wrap', {'weight': 0.6})
('patricia selinger', 'subset sum problem', {'weight': 0.6})
('patricia selinger', 'integer programming', {'weight': 0.6})
('patricia selinger', 'nucleosome', {'weight': 0.6})
('patricia selinger', 'earley algorithm', {'weight': 0.6})
('patricia selinger', 'referential transparency (computer science)', {'weight': 0.6})
('patricia selinger', 'recursion', {'weight': 0.6})
('patricia selinger', 'mathematica', {'weight': 0.6})
('patricia selinger', 'quicksort', {'weight': 0.6})
('patricia selinger', 'recursion (computer science)', {'weight': 0.6})
('patricia selinger', 'checkerboard', {'weight': 0.6})
('patricia selinger', 'computer science', {'weight': 0.6})
('patricia selinger', 'brute-force search', {'weight': 0.6})
('patricia selinger', 'mathematics', {'weight': 0.6})
('patricia selinger', 'depth-first search', {'weight': 0.6})
('patricia selinger', 'top-down and bottom-up design', {'weight': 0.6})
('patricia selinger', 'correspondence problem', {'weight': 0.6})
('patricia selinger', 'transcription factor', {'weight': 0.6})
('patricia selinger', 'tree decomposition', {'weight': 0.6})
('patricia selinger', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('patricia selinger', 'structural alignment', {'weight': 0.6})
('patricia selinger', 'local convergence', {'weight': 0.6})
('patricia selinger', 'knapsack problem', {'weight': 0.6})
('patricia selinger', 'graph algorithm', {'weight': 0.6})
('patricia selinger', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('patricia selinger', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('patricia selinger', 'hidden markov model', {'weight': 0.6})
('patricia selinger', 'string (computer science)', {'weight': 0.6})
('patricia selinger', 'bioinformatics', {'weight': 0.6})
('patricia selinger', 'genetics', {'weight': 0.6})
('patricia selinger', 'mathematical optimization', {'weight': 0.6})
('patricia selinger', 'artificial neural networks', {'weight': 0.6})
('patricia selinger', 'introduction to algorithms', {'weight': 0.6})
('patricia selinger', 'thomas h. cormen', {'weight': 0.6})
('patricia selinger', 'music information retrieval', {'weight': 0.6})
('patricia selinger', 'beat (music)', {'weight': 0.6})
('patricia selinger', 'longest common subsequence problem', {'weight': 0.6})
('patricia selinger', 'convex minimization', {'weight': 0.6})
('patricia selinger', 'successive parabolic interpolation', {'weight': 0.6})
('patricia selinger', 'fibonacci sequence', {'weight': 0.6})
('patricia selinger', 'maximum subarray problem', {'weight': 0.6})
('patricia selinger', 'convex optimization', {'weight': 0.6})
('patricia selinger', 'memoization', {'weight': 0.6})
('patricia selinger', 'richard bellman', {'weight': 0.6})
('patricia selinger', 'exponential growth', {'weight': 0.6})
('patricia selinger', 'charles e. leiserson', {'weight': 0.6})
('patricia selinger', 'charles erwin wilson', {'weight': 0.6})
('patricia selinger', 'interval scheduling', {'weight': 0.6})
('patricia selinger', 'chart parser', {'weight': 0.6})
('patricia selinger', 'travelling salesman problem', {'weight': 0.6})
('patricia selinger', 'bellman equation', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'photoshop', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'sequence alignment', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'flow network', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'spanning tree', {'weight': 0.5})
("bor\xe5\xafvka's algorithm", 'ellipsoid method', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'chain matrix multiplication', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'ieee', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'backtracking', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'nonlinear conjugate gradient method', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'dynamic problem', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'trust region', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'function (mathematics)', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'minimum spanning tree', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'context-free grammar', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'branch and cut', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'state variable', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'treewidth', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'overlapping subproblem', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'taylor & francis', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'cutting-plane method', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'method of undetermined coefficients', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'combinatorial optimization', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", "newton's method in optimization", {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'matrix chain multiplication', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'dynamic time warping', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'dynamic programming language', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'call-by-need', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'big-o notation', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'graph algorithms', {'weight': 0.5})
("bor\xe5\xafvka's algorithm", 'comparison of optimization software', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'quadratic programming', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'common lisp', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'barrier function', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'gradient descent', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'patricia selinger', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'discounting', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'ronald l. rivest', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'iterative method', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'limited-memory bfgs', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'longest common substring problem', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'clifford stein', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'computer chess', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'linear programming', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'bitonic tour', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'linear search problem', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'systems analysis', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'capital (economics)', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'levenshtein distance', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'nonlinear programming', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'computational complexity of mathematical operations', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'gradient', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'bulletin of the american mathematical society', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'u.s. english', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'refutation table', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'heuristic algorithm', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'successive linear programming', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'optimal substructure', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'programming language', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'mergesort', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", "dijkstra's algorithm", {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'subgradient method', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'call-by-name', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'longest increasing subsequence problem', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'edward prescott', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'exponential time', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'principle of optimality', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", "bor\xe5\xafvka's algorithm", {'weight': 1})
("bor\xe5\xafvka's algorithm", 'mathematical game', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'nancy stokey', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'approximation algorithm', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'discrete-time', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'cyk algorithm', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'markov decision process', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", "powell's method", {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'wolfe conditions', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'convexity in economics', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'transposition table', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'economics', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'backward induction', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'golden section search', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'edit distance', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'tree structure', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'exchange algorithm', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'dover publications', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'seam carving', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'recursive least squares', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'metaheuristic', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'quasi-newton method', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'on-line encyclopedia of integer sequences', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'robert e. lucas', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'non-convexity (economics)', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'sr1 formula', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'mathematical reviews', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'puzzle', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'associative array', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'shortest path problem', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'dynamic algorithm', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'augmented lagrangian method', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'charles delisi', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'greedy algorithm', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", "karmarkar's algorithm", {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'lattice models', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'utility', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'push-relabel maximum flow algorithm', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'international standard book number', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'undirected graph', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'scheme (programming language)', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'rna structure', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'hanoi', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'perl', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'digital object identifier', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'sequential quadratic programming', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", "dinic's algorithm", {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'pseudo-polynomial time', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'partition problem', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'stochastic programming', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'hill climbing', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'top-down', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'de boor algorithm', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'optimization algorithm', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", "kruskal's algorithm", {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'jacques philippe marie binet', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'tabu search', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'divide and conquer algorithm', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", "johnson's algorithm", {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'evolutionary algorithm', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'clique-width', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'dynamic programming', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'subroutine', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'simulated annealing', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'tower of hanoi', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'branch and bound', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'engineering', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'matroid', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'viterbi algorithm', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", "lemke's algorithm", {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'simplex algorithm', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'local search (optimization)', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'hessian matrix', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'ibm system r', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'penalty method', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'prolog', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'time-invariant system', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'criss-cross algorithm', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'revised simplex algorithm', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'the mathematical association of america', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'line search', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'j (programming language)', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'word wrap', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'subset sum problem', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'integer programming', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'nucleosome', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'earley algorithm', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'referential transparency (computer science)', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'recursion', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'mathematica', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'quicksort', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'recursion (computer science)', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'checkerboard', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'computer science', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'brute-force search', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'mathematics', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'depth-first search', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'top-down and bottom-up design', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'correspondence problem', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'transcription factor', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'tree decomposition', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'structural alignment', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'local convergence', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'knapsack problem', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'graph algorithm', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'hidden markov model', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'string (computer science)', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'bioinformatics', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'genetics', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'mathematical optimization', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'artificial neural networks', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'introduction to algorithms', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'thomas h. cormen', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'music information retrieval', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'beat (music)', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'longest common subsequence problem', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'convex minimization', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'successive parabolic interpolation', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'fibonacci sequence', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'maximum subarray problem', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'convex optimization', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'memoization', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'richard bellman', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'exponential growth', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'charles e. leiserson', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'charles erwin wilson', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'interval scheduling', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'chart parser', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'travelling salesman problem', {'weight': 0.6})
("bor\xe5\xafvka's algorithm", 'bellman equation', {'weight': 0.6})
('linear search problem', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('linear search problem', 'photoshop', {'weight': 0.6})
('linear search problem', 'sequence alignment', {'weight': 0.6})
('linear search problem', 'flow network', {'weight': 0.6})
('linear search problem', 'ellipsoid method', {'weight': 0.6})
('linear search problem', 'chain matrix multiplication', {'weight': 0.6})
('linear search problem', 'ieee', {'weight': 0.6})
('linear search problem', 'backtracking', {'weight': 0.6})
('linear search problem', 'nonlinear conjugate gradient method', {'weight': 0.6})
('linear search problem', 'dynamic problem', {'weight': 0.6})
('linear search problem', 'trust region', {'weight': 0.6})
('linear search problem', 'function (mathematics)', {'weight': 0.6})
('linear search problem', 'minimum spanning tree', {'weight': 0.6})
('linear search problem', 'context-free grammar', {'weight': 0.6})
('linear search problem', 'branch and cut', {'weight': 0.6})
('linear search problem', 'state variable', {'weight': 0.6})
('linear search problem', 'dynamic time warping', {'weight': 0.6})
('linear search problem', 'treewidth', {'weight': 0.6})
('linear search problem', 'overlapping subproblem', {'weight': 0.6})
('linear search problem', 'taylor & francis', {'weight': 0.6})
('linear search problem', 'cutting-plane method', {'weight': 0.6})
('linear search problem', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('linear search problem', 'method of undetermined coefficients', {'weight': 0.6})
('linear search problem', 'combinatorial optimization', {'weight': 0.6})
('linear search problem', "newton's method in optimization", {'weight': 0.6})
('linear search problem', 'matrix chain multiplication', {'weight': 0.6})
('linear search problem', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('linear search problem', 'computational problems', {'weight': 0.5})
('linear search problem', 'dynamic programming language', {'weight': 0.6})
('linear search problem', 'call-by-need', {'weight': 0.6})
('linear search problem', 'big-o notation', {'weight': 0.6})
('linear search problem', 'comparison of optimization software', {'weight': 0.6})
('linear search problem', 'quadratic programming', {'weight': 0.6})
('linear search problem', 'common lisp', {'weight': 0.6})
('linear search problem', 'barrier function', {'weight': 0.6})
('linear search problem', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('linear search problem', 'gradient descent', {'weight': 0.6})
('linear search problem', 'patricia selinger', {'weight': 0.6})
('linear search problem', 'discounting', {'weight': 0.6})
('linear search problem', 'ronald l. rivest', {'weight': 0.6})
('linear search problem', 'iterative method', {'weight': 0.6})
('linear search problem', 'limited-memory bfgs', {'weight': 0.6})
('linear search problem', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('linear search problem', 'longest common substring problem', {'weight': 0.6})
('linear search problem', 'clifford stein', {'weight': 0.6})
('linear search problem', 'computer chess', {'weight': 0.6})
('linear search problem', 'linear programming', {'weight': 0.6})
('linear search problem', 'bitonic tour', {'weight': 0.6})
('linear search problem', 'linear search problem', {'weight': 1})
('linear search problem', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('linear search problem', 'systems analysis', {'weight': 0.6})
('linear search problem', 'capital (economics)', {'weight': 0.6})
('linear search problem', 'levenshtein distance', {'weight': 0.6})
('linear search problem', 'nonlinear programming', {'weight': 0.6})
('linear search problem', 'computational complexity of mathematical operations', {'weight': 0.6})
('linear search problem', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('linear search problem', 'gradient', {'weight': 0.6})
('linear search problem', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('linear search problem', 'bulletin of the american mathematical society', {'weight': 0.6})
('linear search problem', 'u.s. english', {'weight': 0.6})
('linear search problem', 'refutation table', {'weight': 0.6})
('linear search problem', 'heuristic algorithm', {'weight': 0.6})
('linear search problem', 'successive linear programming', {'weight': 0.6})
('linear search problem', 'optimal substructure', {'weight': 0.6})
('linear search problem', 'programming language', {'weight': 0.6})
('linear search problem', 'mergesort', {'weight': 0.6})
('linear search problem', "dijkstra's algorithm", {'weight': 0.6})
('linear search problem', 'subgradient method', {'weight': 0.6})
('linear search problem', 'call-by-name', {'weight': 0.6})
('linear search problem', 'longest increasing subsequence problem', {'weight': 0.6})
('linear search problem', 'edward prescott', {'weight': 0.6})
('linear search problem', 'exponential time', {'weight': 0.6})
('linear search problem', 'principle of optimality', {'weight': 0.6})
('linear search problem', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('linear search problem', 'mathematical game', {'weight': 0.6})
('linear search problem', 'nancy stokey', {'weight': 0.6})
('linear search problem', 'approximation algorithm', {'weight': 0.6})
('linear search problem', 'discrete-time', {'weight': 0.6})
('linear search problem', 'cyk algorithm', {'weight': 0.6})
('linear search problem', 'markov decision process', {'weight': 0.6})
('linear search problem', "powell's method", {'weight': 0.6})
('linear search problem', 'wolfe conditions', {'weight': 0.6})
('linear search problem', 'convexity in economics', {'weight': 0.6})
('linear search problem', 'transposition table', {'weight': 0.6})
('linear search problem', 'economics', {'weight': 0.6})
('linear search problem', 'backward induction', {'weight': 0.6})
('linear search problem', 'golden section search', {'weight': 0.6})
('linear search problem', 'edit distance', {'weight': 0.6})
('linear search problem', 'tree structure', {'weight': 0.6})
('linear search problem', 'exchange algorithm', {'weight': 0.6})
('linear search problem', 'dover publications', {'weight': 0.6})
('linear search problem', 'seam carving', {'weight': 0.6})
('linear search problem', 'recursive least squares', {'weight': 0.6})
('linear search problem', 'metaheuristic', {'weight': 0.6})
('linear search problem', 'quasi-newton method', {'weight': 0.6})
('linear search problem', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('linear search problem', 'robert e. lucas', {'weight': 0.6})
('linear search problem', 'non-convexity (economics)', {'weight': 0.6})
('linear search problem', 'sr1 formula', {'weight': 0.6})
('linear search problem', 'mathematical reviews', {'weight': 0.6})
('linear search problem', 'puzzle', {'weight': 0.6})
('linear search problem', 'associative array', {'weight': 0.6})
('linear search problem', 'shortest path problem', {'weight': 0.6})
('linear search problem', 'dynamic algorithm', {'weight': 0.6})
('linear search problem', 'augmented lagrangian method', {'weight': 0.6})
('linear search problem', 'charles delisi', {'weight': 0.6})
('linear search problem', 'greedy algorithm', {'weight': 0.6})
('linear search problem', "karmarkar's algorithm", {'weight': 0.6})
('linear search problem', 'lattice models', {'weight': 0.6})
('linear search problem', 'utility', {'weight': 0.6})
('linear search problem', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('linear search problem', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('linear search problem', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('linear search problem', 'international standard book number', {'weight': 0.6})
('linear search problem', 'undirected graph', {'weight': 0.6})
('linear search problem', 'scheme (programming language)', {'weight': 0.6})
('linear search problem', 'rna structure', {'weight': 0.6})
('linear search problem', 'hanoi', {'weight': 0.6})
('linear search problem', 'perl', {'weight': 0.6})
('linear search problem', 'digital object identifier', {'weight': 0.6})
('linear search problem', 'sequential quadratic programming', {'weight': 0.6})
('linear search problem', "dinic's algorithm", {'weight': 0.6})
('linear search problem', 'pseudo-polynomial time', {'weight': 0.6})
('linear search problem', 'partition problem', {'weight': 0.6})
('linear search problem', 'stochastic programming', {'weight': 0.6})
('linear search problem', 'hill climbing', {'weight': 0.6})
('linear search problem', 'top-down', {'weight': 0.6})
('linear search problem', 'de boor algorithm', {'weight': 0.6})
('linear search problem', 'optimization algorithm', {'weight': 0.6})
('linear search problem', "kruskal's algorithm", {'weight': 0.6})
('linear search problem', 'jacques philippe marie binet', {'weight': 0.6})
('linear search problem', 'tabu search', {'weight': 0.6})
('linear search problem', 'divide and conquer algorithm', {'weight': 0.6})
('linear search problem', "johnson's algorithm", {'weight': 0.6})
('linear search problem', 'evolutionary algorithm', {'weight': 0.6})
('linear search problem', 'clique-width', {'weight': 0.6})
('linear search problem', 'dynamic programming', {'weight': 0.6})
('linear search problem', 'subroutine', {'weight': 0.6})
('linear search problem', 'simulated annealing', {'weight': 0.6})
('linear search problem', 'tower of hanoi', {'weight': 0.6})
('linear search problem', 'branch and bound', {'weight': 0.6})
('linear search problem', 'engineering', {'weight': 0.6})
('linear search problem', 'matroid', {'weight': 0.6})
('linear search problem', 'viterbi algorithm', {'weight': 0.6})
('linear search problem', "lemke's algorithm", {'weight': 0.6})
('linear search problem', 'simplex algorithm', {'weight': 0.6})
('linear search problem', 'local search (optimization)', {'weight': 0.6})
('linear search problem', 'hessian matrix', {'weight': 0.6})
('linear search problem', 'ibm system r', {'weight': 0.6})
('linear search problem', 'penalty method', {'weight': 0.6})
('linear search problem', 'prolog', {'weight': 0.6})
('linear search problem', 'time-invariant system', {'weight': 0.6})
('linear search problem', 'criss-cross algorithm', {'weight': 0.6})
('linear search problem', 'revised simplex algorithm', {'weight': 0.6})
('linear search problem', 'the mathematical association of america', {'weight': 0.6})
('linear search problem', 'line search', {'weight': 0.6})
('linear search problem', 'j (programming language)', {'weight': 0.6})
('linear search problem', 'word wrap', {'weight': 0.6})
('linear search problem', 'subset sum problem', {'weight': 0.6})
('linear search problem', 'integer programming', {'weight': 0.6})
('linear search problem', 'nucleosome', {'weight': 0.6})
('linear search problem', 'earley algorithm', {'weight': 0.6})
('linear search problem', 'referential transparency (computer science)', {'weight': 0.6})
('linear search problem', 'recursion', {'weight': 0.6})
('linear search problem', 'mathematica', {'weight': 0.6})
('linear search problem', 'quicksort', {'weight': 0.6})
('linear search problem', 'recursion (computer science)', {'weight': 0.6})
('linear search problem', 'checkerboard', {'weight': 0.6})
('linear search problem', 'computer science', {'weight': 0.6})
('linear search problem', 'brute-force search', {'weight': 0.6})
('linear search problem', 'mathematics', {'weight': 0.6})
('linear search problem', 'depth-first search', {'weight': 0.6})
('linear search problem', 'top-down and bottom-up design', {'weight': 0.6})
('linear search problem', 'correspondence problem', {'weight': 0.6})
('linear search problem', 'transcription factor', {'weight': 0.6})
('linear search problem', 'tree decomposition', {'weight': 0.6})
('linear search problem', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('linear search problem', 'structural alignment', {'weight': 0.6})
('linear search problem', 'local convergence', {'weight': 0.6})
('linear search problem', 'knapsack problem', {'weight': 0.6})
('linear search problem', 'graph algorithm', {'weight': 0.6})
('linear search problem', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('linear search problem', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('linear search problem', 'hidden markov model', {'weight': 0.6})
('linear search problem', 'string (computer science)', {'weight': 0.6})
('linear search problem', 'bioinformatics', {'weight': 0.6})
('linear search problem', 'genetics', {'weight': 0.6})
('linear search problem', 'mathematical optimization', {'weight': 0.6})
('linear search problem', 'artificial neural networks', {'weight': 0.6})
('linear search problem', 'introduction to algorithms', {'weight': 0.6})
('linear search problem', 'thomas h. cormen', {'weight': 0.6})
('linear search problem', 'music information retrieval', {'weight': 0.6})
('linear search problem', 'beat (music)', {'weight': 0.6})
('linear search problem', 'longest common subsequence problem', {'weight': 0.6})
('linear search problem', 'convex minimization', {'weight': 0.6})
('linear search problem', 'successive parabolic interpolation', {'weight': 0.6})
('linear search problem', 'fibonacci sequence', {'weight': 0.6})
('linear search problem', 'maximum subarray problem', {'weight': 0.6})
('linear search problem', 'convex optimization', {'weight': 0.6})
('linear search problem', 'memoization', {'weight': 0.6})
('linear search problem', 'richard bellman', {'weight': 0.6})
('linear search problem', 'exponential growth', {'weight': 0.6})
('linear search problem', 'charles e. leiserson', {'weight': 0.6})
('linear search problem', 'charles erwin wilson', {'weight': 0.6})
('linear search problem', 'interval scheduling', {'weight': 0.6})
('linear search problem', 'chart parser', {'weight': 0.6})
('linear search problem', 'travelling salesman problem', {'weight': 0.6})
('linear search problem', 'bellman equation', {'weight': 0.6})
('bulletin of the american mathematical society', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('bulletin of the american mathematical society', 'photoshop', {'weight': 0.6})
('bulletin of the american mathematical society', 'sequence alignment', {'weight': 0.6})
('bulletin of the american mathematical society', 'flow network', {'weight': 0.6})
('bulletin of the american mathematical society', 'ellipsoid method', {'weight': 0.6})
('bulletin of the american mathematical society', 'chain matrix multiplication', {'weight': 0.6})
('bulletin of the american mathematical society', 'ieee', {'weight': 0.6})
('bulletin of the american mathematical society', 'backtracking', {'weight': 0.6})
('bulletin of the american mathematical society', 'nonlinear conjugate gradient method', {'weight': 0.6})
('bulletin of the american mathematical society', 'dynamic problem', {'weight': 0.6})
('bulletin of the american mathematical society', 'trust region', {'weight': 0.6})
('bulletin of the american mathematical society', 'function (mathematics)', {'weight': 0.6})
('bulletin of the american mathematical society', 'minimum spanning tree', {'weight': 0.6})
('bulletin of the american mathematical society', 'context-free grammar', {'weight': 0.6})
('bulletin of the american mathematical society', 'branch and cut', {'weight': 0.6})
('bulletin of the american mathematical society', 'state variable', {'weight': 0.6})
('bulletin of the american mathematical society', 'treewidth', {'weight': 0.6})
('bulletin of the american mathematical society', 'overlapping subproblem', {'weight': 0.6})
('bulletin of the american mathematical society', 'taylor & francis', {'weight': 0.6})
('bulletin of the american mathematical society', 'cutting-plane method', {'weight': 0.6})
('bulletin of the american mathematical society', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('bulletin of the american mathematical society', 'method of undetermined coefficients', {'weight': 0.6})
('bulletin of the american mathematical society', 'combinatorial optimization', {'weight': 0.6})
('bulletin of the american mathematical society', "newton's method in optimization", {'weight': 0.6})
('bulletin of the american mathematical society', 'matrix chain multiplication', {'weight': 0.6})
('bulletin of the american mathematical society', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('bulletin of the american mathematical society', 'memoirs of the american mathematical society', {'weight': 0.7})
('bulletin of the american mathematical society', 'dynamic time warping', {'weight': 0.6})
('bulletin of the american mathematical society', 'dynamic programming language', {'weight': 0.6})
('bulletin of the american mathematical society', 'call-by-need', {'weight': 0.6})
('bulletin of the american mathematical society', 'big-o notation', {'weight': 0.6})
('bulletin of the american mathematical society', 'comparison of optimization software', {'weight': 0.6})
('bulletin of the american mathematical society', 'quadratic programming', {'weight': 0.6})
('bulletin of the american mathematical society', 'mathematics journal stubs', {'weight': 0.5})
('bulletin of the american mathematical society', 'common lisp', {'weight': 0.6})
('bulletin of the american mathematical society', 'barrier function', {'weight': 0.6})
('bulletin of the american mathematical society', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('bulletin of the american mathematical society', 'gradient descent', {'weight': 0.6})
('bulletin of the american mathematical society', 'patricia selinger', {'weight': 0.6})
('bulletin of the american mathematical society', 'discounting', {'weight': 0.6})
('bulletin of the american mathematical society', 'ronald l. rivest', {'weight': 0.6})
('bulletin of the american mathematical society', 'iterative method', {'weight': 0.6})
('bulletin of the american mathematical society', 'limited-memory bfgs', {'weight': 0.6})
('bulletin of the american mathematical society', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('bulletin of the american mathematical society', 'longest common substring problem', {'weight': 0.6})
('bulletin of the american mathematical society', 'clifford stein', {'weight': 0.6})
('bulletin of the american mathematical society', 'computer chess', {'weight': 0.6})
('bulletin of the american mathematical society', 'proceedings of the american mathematical society', {'weight': 0.7})
('bulletin of the american mathematical society', 'linear programming', {'weight': 0.6})
('bulletin of the american mathematical society', 'bitonic tour', {'weight': 0.6})
('bulletin of the american mathematical society', 'linear search problem', {'weight': 0.6})
('bulletin of the american mathematical society', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('bulletin of the american mathematical society', 'systems analysis', {'weight': 0.6})
('bulletin of the american mathematical society', 'capital (economics)', {'weight': 0.6})
('bulletin of the american mathematical society', 'levenshtein distance', {'weight': 0.6})
('bulletin of the american mathematical society', 'nonlinear programming', {'weight': 0.6})
('bulletin of the american mathematical society', 'computational complexity of mathematical operations', {'weight': 0.6})
('bulletin of the american mathematical society', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('bulletin of the american mathematical society', 'gradient', {'weight': 0.6})
('bulletin of the american mathematical society', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('bulletin of the american mathematical society', 'bulletin of the american mathematical society', {'weight': 1})
('bulletin of the american mathematical society', 'lattice models', {'weight': 0.6})
('bulletin of the american mathematical society', 'refutation table', {'weight': 0.6})
('bulletin of the american mathematical society', 'heuristic algorithm', {'weight': 0.6})
('bulletin of the american mathematical society', 'successive linear programming', {'weight': 0.6})
('bulletin of the american mathematical society', 'optimal substructure', {'weight': 0.6})
('bulletin of the american mathematical society', 'programming language', {'weight': 0.6})
('bulletin of the american mathematical society', 'mergesort', {'weight': 0.6})
('bulletin of the american mathematical society', "dijkstra's algorithm", {'weight': 0.6})
('bulletin of the american mathematical society', 'subgradient method', {'weight': 0.6})
('bulletin of the american mathematical society', 'call-by-name', {'weight': 0.6})
('bulletin of the american mathematical society', 'longest increasing subsequence problem', {'weight': 0.6})
('bulletin of the american mathematical society', 'edward prescott', {'weight': 0.6})
('bulletin of the american mathematical society', 'exponential time', {'weight': 0.6})
('bulletin of the american mathematical society', 'principle of optimality', {'weight': 0.6})
('bulletin of the american mathematical society', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('bulletin of the american mathematical society', 'mathematical game', {'weight': 0.6})
('bulletin of the american mathematical society', 'nancy stokey', {'weight': 0.6})
('bulletin of the american mathematical society', 'approximation algorithm', {'weight': 0.6})
('bulletin of the american mathematical society', 'discrete-time', {'weight': 0.6})
('bulletin of the american mathematical society', 'cyk algorithm', {'weight': 0.6})
('bulletin of the american mathematical society', 'markov decision process', {'weight': 0.6})
('bulletin of the american mathematical society', "powell's method", {'weight': 0.6})
('bulletin of the american mathematical society', 'wolfe conditions', {'weight': 0.6})
('bulletin of the american mathematical society', 'convexity in economics', {'weight': 0.6})
('bulletin of the american mathematical society', 'transposition table', {'weight': 0.6})
('bulletin of the american mathematical society', 'economics', {'weight': 0.6})
('bulletin of the american mathematical society', 'backward induction', {'weight': 0.6})
('bulletin of the american mathematical society', 'golden section search', {'weight': 0.6})
('bulletin of the american mathematical society', 'edit distance', {'weight': 0.6})
('bulletin of the american mathematical society', 'tree structure', {'weight': 0.6})
('bulletin of the american mathematical society', 'exchange algorithm', {'weight': 0.6})
('bulletin of the american mathematical society', 'dover publications', {'weight': 0.6})
('bulletin of the american mathematical society', 'seam carving', {'weight': 0.6})
('bulletin of the american mathematical society', 'recursive least squares', {'weight': 0.6})
('bulletin of the american mathematical society', 'metaheuristic', {'weight': 0.6})
('bulletin of the american mathematical society', 'quasi-newton method', {'weight': 0.6})
('bulletin of the american mathematical society', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('bulletin of the american mathematical society', 'robert e. lucas', {'weight': 0.6})
('bulletin of the american mathematical society', 'non-convexity (economics)', {'weight': 0.6})
('bulletin of the american mathematical society', 'transactions of the american mathematical society', {'weight': 0.7})
('bulletin of the american mathematical society', 'sr1 formula', {'weight': 0.6})
('bulletin of the american mathematical society', 'mathematical reviews', {'weight': 0.6})
('bulletin of the american mathematical society', 'publications of the american mathematical society', {'weight': 0.5})
('bulletin of the american mathematical society', 'puzzle', {'weight': 0.6})
('bulletin of the american mathematical society', 'associative array', {'weight': 0.6})
('bulletin of the american mathematical society', 'shortest path problem', {'weight': 0.6})
('bulletin of the american mathematical society', 'dynamic algorithm', {'weight': 0.6})
('bulletin of the american mathematical society', 'mathematics journals', {'weight': 0.5})
('bulletin of the american mathematical society', 'augmented lagrangian method', {'weight': 0.6})
('bulletin of the american mathematical society', 'charles delisi', {'weight': 0.6})
('bulletin of the american mathematical society', 'greedy algorithm', {'weight': 0.6})
('bulletin of the american mathematical society', "karmarkar's algorithm", {'weight': 0.6})
('bulletin of the american mathematical society', 'u.s. english', {'weight': 0.6})
('bulletin of the american mathematical society', 'utility', {'weight': 0.6})
('bulletin of the american mathematical society', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('bulletin of the american mathematical society', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('bulletin of the american mathematical society', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('bulletin of the american mathematical society', 'international standard book number', {'weight': 0.6})
('bulletin of the american mathematical society', 'undirected graph', {'weight': 0.6})
('bulletin of the american mathematical society', 'scheme (programming language)', {'weight': 0.6})
('bulletin of the american mathematical society', 'rna structure', {'weight': 0.6})
('bulletin of the american mathematical society', 'hanoi', {'weight': 0.6})
('bulletin of the american mathematical society', 'perl', {'weight': 0.6})
('bulletin of the american mathematical society', 'digital object identifier', {'weight': 0.6})
('bulletin of the american mathematical society', 'sequential quadratic programming', {'weight': 0.6})
('bulletin of the american mathematical society', "dinic's algorithm", {'weight': 0.6})
('bulletin of the american mathematical society', 'pseudo-polynomial time', {'weight': 0.6})
('bulletin of the american mathematical society', 'partition problem', {'weight': 0.6})
('bulletin of the american mathematical society', 'stochastic programming', {'weight': 0.6})
('bulletin of the american mathematical society', 'hill climbing', {'weight': 0.6})
('bulletin of the american mathematical society', 'top-down', {'weight': 0.6})
('bulletin of the american mathematical society', 'de boor algorithm', {'weight': 0.6})
('bulletin of the american mathematical society', 'optimization algorithm', {'weight': 0.6})
('bulletin of the american mathematical society', "kruskal's algorithm", {'weight': 0.6})
('bulletin of the american mathematical society', 'jacques philippe marie binet', {'weight': 0.6})
('bulletin of the american mathematical society', 'tabu search', {'weight': 0.6})
('bulletin of the american mathematical society', 'divide and conquer algorithm', {'weight': 0.6})
('bulletin of the american mathematical society', "johnson's algorithm", {'weight': 0.6})
('bulletin of the american mathematical society', 'evolutionary algorithm', {'weight': 0.6})
('bulletin of the american mathematical society', 'clique-width', {'weight': 0.6})
('bulletin of the american mathematical society', 'dynamic programming', {'weight': 0.6})
('bulletin of the american mathematical society', 'subroutine', {'weight': 0.6})
('bulletin of the american mathematical society', 'simulated annealing', {'weight': 0.6})
('bulletin of the american mathematical society', 'tower of hanoi', {'weight': 0.6})
('bulletin of the american mathematical society', 'branch and bound', {'weight': 0.6})
('bulletin of the american mathematical society', 'engineering', {'weight': 0.6})
('bulletin of the american mathematical society', 'matroid', {'weight': 0.6})
('bulletin of the american mathematical society', 'viterbi algorithm', {'weight': 0.6})
('bulletin of the american mathematical society', "lemke's algorithm", {'weight': 0.6})
('bulletin of the american mathematical society', 'simplex algorithm', {'weight': 0.6})
('bulletin of the american mathematical society', 'local search (optimization)', {'weight': 0.6})
('bulletin of the american mathematical society', 'hessian matrix', {'weight': 0.6})
('bulletin of the american mathematical society', 'journal of the american mathematical society', {'weight': 0.7})
('bulletin of the american mathematical society', 'ibm system r', {'weight': 0.6})
('bulletin of the american mathematical society', 'penalty method', {'weight': 0.6})
('bulletin of the american mathematical society', 'prolog', {'weight': 0.6})
('bulletin of the american mathematical society', 'time-invariant system', {'weight': 0.6})
('bulletin of the american mathematical society', 'criss-cross algorithm', {'weight': 0.6})
('bulletin of the american mathematical society', 'revised simplex algorithm', {'weight': 0.6})
('bulletin of the american mathematical society', 'the mathematical association of america', {'weight': 0.6})
('bulletin of the american mathematical society', 'line search', {'weight': 0.6})
('bulletin of the american mathematical society', 'j (programming language)', {'weight': 0.6})
('bulletin of the american mathematical society', 'word wrap', {'weight': 0.6})
('bulletin of the american mathematical society', 'subset sum problem', {'weight': 0.6})
('bulletin of the american mathematical society', 'integer programming', {'weight': 0.6})
('bulletin of the american mathematical society', 'nucleosome', {'weight': 0.6})
('bulletin of the american mathematical society', 'earley algorithm', {'weight': 0.6})
('bulletin of the american mathematical society', 'referential transparency (computer science)', {'weight': 0.6})
('bulletin of the american mathematical society', 'recursion', {'weight': 0.6})
('bulletin of the american mathematical society', 'mathematica', {'weight': 0.6})
('bulletin of the american mathematical society', 'quicksort', {'weight': 0.6})
('bulletin of the american mathematical society', 'notices of the american mathematical society', {'weight': 0.7})
('bulletin of the american mathematical society', 'recursion (computer science)', {'weight': 0.6})
('bulletin of the american mathematical society', 'checkerboard', {'weight': 0.6})
('bulletin of the american mathematical society', 'computer science', {'weight': 0.6})
('bulletin of the american mathematical society', 'brute-force search', {'weight': 0.6})
('bulletin of the american mathematical society', 'mathematics', {'weight': 0.6})
('bulletin of the american mathematical society', 'depth-first search', {'weight': 0.6})
('bulletin of the american mathematical society', 'top-down and bottom-up design', {'weight': 0.6})
('bulletin of the american mathematical society', 'correspondence problem', {'weight': 0.6})
('bulletin of the american mathematical society', 'transcription factor', {'weight': 0.6})
('bulletin of the american mathematical society', 'tree decomposition', {'weight': 0.6})
('bulletin of the american mathematical society', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('bulletin of the american mathematical society', 'structural alignment', {'weight': 0.6})
('bulletin of the american mathematical society', 'local convergence', {'weight': 0.6})
('bulletin of the american mathematical society', 'knapsack problem', {'weight': 0.6})
('bulletin of the american mathematical society', 'graph algorithm', {'weight': 0.6})
('bulletin of the american mathematical society', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('bulletin of the american mathematical society', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('bulletin of the american mathematical society', 'hidden markov model', {'weight': 0.6})
('bulletin of the american mathematical society', 'string (computer science)', {'weight': 0.6})
('bulletin of the american mathematical society', 'bioinformatics', {'weight': 0.6})
('bulletin of the american mathematical society', 'genetics', {'weight': 0.6})
('bulletin of the american mathematical society', 'mathematical optimization', {'weight': 0.6})
('bulletin of the american mathematical society', 'artificial neural networks', {'weight': 0.6})
('bulletin of the american mathematical society', 'introduction to algorithms', {'weight': 0.6})
('bulletin of the american mathematical society', 'thomas h. cormen', {'weight': 0.6})
('bulletin of the american mathematical society', 'music information retrieval', {'weight': 0.6})
('bulletin of the american mathematical society', 'beat (music)', {'weight': 0.6})
('bulletin of the american mathematical society', 'longest common subsequence problem', {'weight': 0.6})
('bulletin of the american mathematical society', 'convex minimization', {'weight': 0.6})
('bulletin of the american mathematical society', 'successive parabolic interpolation', {'weight': 0.6})
('bulletin of the american mathematical society', 'fibonacci sequence', {'weight': 0.6})
('bulletin of the american mathematical society', 'maximum subarray problem', {'weight': 0.6})
('bulletin of the american mathematical society', 'convex optimization', {'weight': 0.6})
('bulletin of the american mathematical society', 'memoization', {'weight': 0.6})
('bulletin of the american mathematical society', 'richard bellman', {'weight': 0.6})
('bulletin of the american mathematical society', 'exponential growth', {'weight': 0.6})
('bulletin of the american mathematical society', 'charles e. leiserson', {'weight': 0.6})
('bulletin of the american mathematical society', 'charles erwin wilson', {'weight': 0.6})
('bulletin of the american mathematical society', 'interval scheduling', {'weight': 0.6})
('bulletin of the american mathematical society', 'chart parser', {'weight': 0.6})
('bulletin of the american mathematical society', 'travelling salesman problem', {'weight': 0.6})
('bulletin of the american mathematical society', 'bellman equation', {'weight': 0.6})
('longest increasing subsequence problem', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('longest increasing subsequence problem', 'photoshop', {'weight': 0.6})
('longest increasing subsequence problem', 'sequence alignment', {'weight': 0.6})
('longest increasing subsequence problem', 'flow network', {'weight': 0.6})
('longest increasing subsequence problem', 'ellipsoid method', {'weight': 0.6})
('longest increasing subsequence problem', 'chain matrix multiplication', {'weight': 0.6})
('longest increasing subsequence problem', 'ieee', {'weight': 0.6})
('longest increasing subsequence problem', 'backtracking', {'weight': 0.6})
('longest increasing subsequence problem', 'longest common subsequence', {'weight': 0.7})
('longest increasing subsequence problem', 'nonlinear conjugate gradient method', {'weight': 0.6})
('longest increasing subsequence problem', 'plactic monoid', {'weight': 0.7})
('longest increasing subsequence problem', 'dynamic problem', {'weight': 0.6})
('longest increasing subsequence problem', 'trust region', {'weight': 0.6})
('longest increasing subsequence problem', 'function (mathematics)', {'weight': 0.6})
('longest increasing subsequence problem', 'minimum spanning tree', {'weight': 0.6})
('longest increasing subsequence problem', 'context-free grammar', {'weight': 0.6})
('longest increasing subsequence problem', 'branch and cut', {'weight': 0.6})
('longest increasing subsequence problem', 'state variable', {'weight': 0.6})
('longest increasing subsequence problem', 'treewidth', {'weight': 0.6})
('longest increasing subsequence problem', 'overlapping subproblem', {'weight': 0.6})
('longest increasing subsequence problem', 'taylor & francis', {'weight': 0.6})
('longest increasing subsequence problem', 'cutting-plane method', {'weight': 0.6})
('longest increasing subsequence problem', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('longest increasing subsequence problem', 'method of undetermined coefficients', {'weight': 0.6})
('longest increasing subsequence problem', 'combinatorial optimization', {'weight': 0.6})
('longest increasing subsequence problem', "newton's method in optimization", {'weight': 0.6})
('longest increasing subsequence problem', 'matrix chain multiplication', {'weight': 0.6})
('longest increasing subsequence problem', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('longest increasing subsequence problem', 'dynamic time warping', {'weight': 0.6})
('longest increasing subsequence problem', 'dynamic programming language', {'weight': 0.6})
('longest increasing subsequence problem', 'call-by-need', {'weight': 0.6})
('longest increasing subsequence problem', 'big-o notation', {'weight': 0.6})
('longest increasing subsequence problem', 'comparison of optimization software', {'weight': 0.6})
('longest increasing subsequence problem', 'quadratic programming', {'weight': 0.6})
('longest increasing subsequence problem', 'common lisp', {'weight': 0.6})
('longest increasing subsequence problem', 'barrier function', {'weight': 0.6})
('longest increasing subsequence problem', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('longest increasing subsequence problem', 'gradient descent', {'weight': 0.6})
('longest increasing subsequence problem', 'patricia selinger', {'weight': 0.6})
('longest increasing subsequence problem', 'discounting', {'weight': 0.6})
('longest increasing subsequence problem', 'ronald l. rivest', {'weight': 0.6})
('longest increasing subsequence problem', 'iterative method', {'weight': 0.6})
('longest increasing subsequence problem', 'limited-memory bfgs', {'weight': 0.6})
('longest increasing subsequence problem', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('longest increasing subsequence problem', 'longest common substring problem', {'weight': 0.6})
('longest increasing subsequence problem', 'clifford stein', {'weight': 0.6})
('longest increasing subsequence problem', 'computer chess', {'weight': 0.6})
('longest increasing subsequence problem', 'linear programming', {'weight': 0.6})
('longest increasing subsequence problem', 'bitonic tour', {'weight': 0.6})
('longest increasing subsequence problem', 'linear search problem', {'weight': 0.6})
('longest increasing subsequence problem', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('longest increasing subsequence problem', 'systems analysis', {'weight': 0.6})
('longest increasing subsequence problem', 'capital (economics)', {'weight': 0.6})
('longest increasing subsequence problem', 'anatoly vershik', {'weight': 0.7})
('longest increasing subsequence problem', 'levenshtein distance', {'weight': 0.6})
('longest increasing subsequence problem', 'nonlinear programming', {'weight': 0.6})
('longest increasing subsequence problem', 'computational complexity of mathematical operations', {'weight': 0.6})
('longest increasing subsequence problem', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('longest increasing subsequence problem', 'gradient', {'weight': 0.6})
('longest increasing subsequence problem', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('longest increasing subsequence problem', 'bulletin of the american mathematical society', {'weight': 0.6})
('longest increasing subsequence problem', 'problems on strings', {'weight': 0.5})
('longest increasing subsequence problem', 'u.s. english', {'weight': 0.6})
('longest increasing subsequence problem', 'refutation table', {'weight': 0.6})
('longest increasing subsequence problem', 'heuristic algorithm', {'weight': 0.6})
('longest increasing subsequence problem', 'successive linear programming', {'weight': 0.6})
('longest increasing subsequence problem', 'optimal substructure', {'weight': 0.6})
('longest increasing subsequence problem', 'programming language', {'weight': 0.6})
('longest increasing subsequence problem', 'mergesort', {'weight': 0.6})
('longest increasing subsequence problem', "dijkstra's algorithm", {'weight': 0.6})
('longest increasing subsequence problem', 'subgradient method', {'weight': 0.6})
('longest increasing subsequence problem', 'call-by-name', {'weight': 0.6})
('longest increasing subsequence problem', 'longest increasing subsequence problem', {'weight': 1})
('longest increasing subsequence problem', 'edward prescott', {'weight': 0.6})
('longest increasing subsequence problem', 'exponential time', {'weight': 0.6})
('longest increasing subsequence problem', 'principle of optimality', {'weight': 0.6})
('longest increasing subsequence problem', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('longest increasing subsequence problem', 'mathematical game', {'weight': 0.6})
('longest increasing subsequence problem', 'nancy stokey', {'weight': 0.6})
('longest increasing subsequence problem', 'approximation algorithm', {'weight': 0.6})
('longest increasing subsequence problem', 'discrete-time', {'weight': 0.6})
('longest increasing subsequence problem', 'cyk algorithm', {'weight': 0.6})
('longest increasing subsequence problem', 'markov decision process', {'weight': 0.6})
('longest increasing subsequence problem', "powell's method", {'weight': 0.6})
('longest increasing subsequence problem', 'wolfe conditions', {'weight': 0.6})
('longest increasing subsequence problem', 'convexity in economics', {'weight': 0.6})
('longest increasing subsequence problem', 'transposition table', {'weight': 0.6})
('longest increasing subsequence problem', 'economics', {'weight': 0.6})
('longest increasing subsequence problem', 'backward induction', {'weight': 0.6})
('longest increasing subsequence problem', 'golden section search', {'weight': 0.6})
('longest increasing subsequence problem', 'edit distance', {'weight': 0.6})
('longest increasing subsequence problem', 'tree structure', {'weight': 0.6})
('longest increasing subsequence problem', 'longest alternating subsequence', {'weight': 0.7})
('longest increasing subsequence problem', 'exchange algorithm', {'weight': 0.6})
('longest increasing subsequence problem', 'dover publications', {'weight': 0.6})
('longest increasing subsequence problem', 'seam carving', {'weight': 0.6})
('longest increasing subsequence problem', 'recursive least squares', {'weight': 0.6})
('longest increasing subsequence problem', 'metaheuristic', {'weight': 0.6})
('longest increasing subsequence problem', 'quasi-newton method', {'weight': 0.6})
('longest increasing subsequence problem', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('longest increasing subsequence problem', 'robert e. lucas', {'weight': 0.6})
('longest increasing subsequence problem', 'non-convexity (economics)', {'weight': 0.6})
('longest increasing subsequence problem', 'patience sorting', {'weight': 0.7})
('longest increasing subsequence problem', 'sr1 formula', {'weight': 0.6})
('longest increasing subsequence problem', 'mathematical reviews', {'weight': 0.6})
('longest increasing subsequence problem', 'puzzle', {'weight': 0.6})
('longest increasing subsequence problem', 'associative array', {'weight': 0.6})
('longest increasing subsequence problem', 'shortest path problem', {'weight': 0.6})
('longest increasing subsequence problem', 'dynamic algorithm', {'weight': 0.6})
('longest increasing subsequence problem', 'augmented lagrangian method', {'weight': 0.6})
('longest increasing subsequence problem', 'charles delisi', {'weight': 0.6})
('longest increasing subsequence problem', 'greedy algorithm', {'weight': 0.6})
('longest increasing subsequence problem', "karmarkar's algorithm", {'weight': 0.6})
('longest increasing subsequence problem', 'lattice models', {'weight': 0.6})
('longest increasing subsequence problem', 'utility', {'weight': 0.6})
('longest increasing subsequence problem', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('longest increasing subsequence problem', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('longest increasing subsequence problem', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('longest increasing subsequence problem', 'international standard book number', {'weight': 0.6})
('longest increasing subsequence problem', 'combinatorics', {'weight': 0.5})
('longest increasing subsequence problem', 'undirected graph', {'weight': 0.6})
('longest increasing subsequence problem', 'scheme (programming language)', {'weight': 0.6})
('longest increasing subsequence problem', 'rna structure', {'weight': 0.6})
('longest increasing subsequence problem', 'hanoi', {'weight': 0.6})
('longest increasing subsequence problem', 'perl', {'weight': 0.6})
('longest increasing subsequence problem', 'digital object identifier', {'weight': 0.6})
('longest increasing subsequence problem', 'sequential quadratic programming', {'weight': 0.6})
('longest increasing subsequence problem', "dinic's algorithm", {'weight': 0.6})
('longest increasing subsequence problem', 'pseudo-polynomial time', {'weight': 0.6})
('longest increasing subsequence problem', 'partition problem', {'weight': 0.6})
('longest increasing subsequence problem', 'stochastic programming', {'weight': 0.6})
('longest increasing subsequence problem', 'hill climbing', {'weight': 0.6})
('longest increasing subsequence problem', 'top-down', {'weight': 0.6})
('longest increasing subsequence problem', 'de boor algorithm', {'weight': 0.6})
('longest increasing subsequence problem', 'optimization algorithm', {'weight': 0.6})
('longest increasing subsequence problem', "kruskal's algorithm", {'weight': 0.6})
('longest increasing subsequence problem', 'jacques philippe marie binet', {'weight': 0.6})
('longest increasing subsequence problem', 'tabu search', {'weight': 0.6})
('longest increasing subsequence problem', 'divide and conquer algorithm', {'weight': 0.6})
('longest increasing subsequence problem', "johnson's algorithm", {'weight': 0.6})
('longest increasing subsequence problem', 'evolutionary algorithm', {'weight': 0.6})
('longest increasing subsequence problem', 'clique-width', {'weight': 0.6})
('longest increasing subsequence problem', 'dynamic programming', {'weight': 0.6})
('longest increasing subsequence problem', 'subroutine', {'weight': 0.6})
('longest increasing subsequence problem', 'simulated annealing', {'weight': 0.6})
('longest increasing subsequence problem', 'tower of hanoi', {'weight': 0.6})
('longest increasing subsequence problem', 'branch and bound', {'weight': 0.6})
('longest increasing subsequence problem', 'engineering', {'weight': 0.6})
('longest increasing subsequence problem', 'matroid', {'weight': 0.6})
('longest increasing subsequence problem', 'viterbi algorithm', {'weight': 0.6})
('longest increasing subsequence problem', "lemke's algorithm", {'weight': 0.6})
('longest increasing subsequence problem', 'simplex algorithm', {'weight': 0.6})
('longest increasing subsequence problem', 'local search (optimization)', {'weight': 0.6})
('longest increasing subsequence problem', 'hessian matrix', {'weight': 0.6})
('longest increasing subsequence problem', 'ibm system r', {'weight': 0.6})
('longest increasing subsequence problem', 'penalty method', {'weight': 0.6})
('longest increasing subsequence problem', 'prolog', {'weight': 0.6})
('longest increasing subsequence problem', 'time-invariant system', {'weight': 0.6})
('longest increasing subsequence problem', 'criss-cross algorithm', {'weight': 0.6})
('longest increasing subsequence problem', 'revised simplex algorithm', {'weight': 0.6})
('longest increasing subsequence problem', 'the mathematical association of america', {'weight': 0.6})
('longest increasing subsequence problem', 'line search', {'weight': 0.6})
('longest increasing subsequence problem', 'j (programming language)', {'weight': 0.6})
('longest increasing subsequence problem', 'formal languages', {'weight': 0.5})
('longest increasing subsequence problem', 'word wrap', {'weight': 0.6})
('longest increasing subsequence problem', 'subset sum problem', {'weight': 0.6})
('longest increasing subsequence problem', 'integer programming', {'weight': 0.6})
('longest increasing subsequence problem', 'nucleosome', {'weight': 0.6})
('longest increasing subsequence problem', 'earley algorithm', {'weight': 0.6})
('longest increasing subsequence problem', 'referential transparency (computer science)', {'weight': 0.6})
('longest increasing subsequence problem', 'recursion', {'weight': 0.6})
('longest increasing subsequence problem', 'mathematica', {'weight': 0.6})
('longest increasing subsequence problem', 'quicksort', {'weight': 0.6})
('longest increasing subsequence problem', 'recursion (computer science)', {'weight': 0.6})
('longest increasing subsequence problem', 'checkerboard', {'weight': 0.6})
('longest increasing subsequence problem', 'computer science', {'weight': 0.6})
('longest increasing subsequence problem', 'brute-force search', {'weight': 0.6})
('longest increasing subsequence problem', 'mathematics', {'weight': 0.6})
('longest increasing subsequence problem', 'depth-first search', {'weight': 0.6})
('longest increasing subsequence problem', 'top-down and bottom-up design', {'weight': 0.6})
('longest increasing subsequence problem', 'correspondence problem', {'weight': 0.6})
('longest increasing subsequence problem', 'transcription factor', {'weight': 0.6})
('longest increasing subsequence problem', 'tree decomposition', {'weight': 0.6})
('longest increasing subsequence problem', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('longest increasing subsequence problem', 'structural alignment', {'weight': 0.6})
('longest increasing subsequence problem', 'local convergence', {'weight': 0.6})
('longest increasing subsequence problem', 'knapsack problem', {'weight': 0.6})
('longest increasing subsequence problem', 'graph algorithm', {'weight': 0.6})
('longest increasing subsequence problem', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('longest increasing subsequence problem', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('longest increasing subsequence problem', 'hidden markov model', {'weight': 0.6})
('longest increasing subsequence problem', 'string (computer science)', {'weight': 0.6})
('longest increasing subsequence problem', 'bioinformatics', {'weight': 0.6})
('longest increasing subsequence problem', 'genetics', {'weight': 0.6})
('longest increasing subsequence problem', 'mathematical optimization', {'weight': 0.6})
('longest increasing subsequence problem', 'artificial neural networks', {'weight': 0.6})
('longest increasing subsequence problem', 'introduction to algorithms', {'weight': 0.6})
('longest increasing subsequence problem', 'thomas h. cormen', {'weight': 0.6})
('longest increasing subsequence problem', 'music information retrieval', {'weight': 0.6})
('longest increasing subsequence problem', 'beat (music)', {'weight': 0.6})
('longest increasing subsequence problem', 'longest common subsequence problem', {'weight': 0.6})
('longest increasing subsequence problem', 'convex minimization', {'weight': 0.6})
('longest increasing subsequence problem', 'successive parabolic interpolation', {'weight': 0.6})
('longest increasing subsequence problem', 'fibonacci sequence', {'weight': 0.6})
('longest increasing subsequence problem', 'maximum subarray problem', {'weight': 0.6})
('longest increasing subsequence problem', 'convex optimization', {'weight': 0.6})
('longest increasing subsequence problem', 'memoization', {'weight': 0.6})
('longest increasing subsequence problem', 'richard bellman', {'weight': 0.6})
('longest increasing subsequence problem', 'exponential growth', {'weight': 0.6})
('longest increasing subsequence problem', 'charles e. leiserson', {'weight': 0.6})
('longest increasing subsequence problem', 'charles erwin wilson', {'weight': 0.6})
('longest increasing subsequence problem', 'interval scheduling', {'weight': 0.6})
('longest increasing subsequence problem', 'chart parser', {'weight': 0.6})
('longest increasing subsequence problem', 'travelling salesman problem', {'weight': 0.6})
('longest increasing subsequence problem', 'bellman equation', {'weight': 0.6})
('simulated annealing', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('simulated annealing', 'photoshop', {'weight': 0.6})
('simulated annealing', 'sequence alignment', {'weight': 0.6})
('simulated annealing', 'flow network', {'weight': 0.6})
('simulated annealing', 'ellipsoid method', {'weight': 0.6})
('simulated annealing', 'chain matrix multiplication', {'weight': 0.6})
('simulated annealing', 'ieee', {'weight': 0.6})
('simulated annealing', 'backtracking', {'weight': 0.6})
('simulated annealing', 'nonlinear conjugate gradient method', {'weight': 0.6})
('simulated annealing', 'dynamic problem', {'weight': 0.6})
('simulated annealing', 'trust region', {'weight': 0.6})
('simulated annealing', 'function (mathematics)', {'weight': 0.6})
('simulated annealing', 'minimum spanning tree', {'weight': 0.6})
('simulated annealing', 'molecular dynamics', {'weight': 0.7})
('simulated annealing', 'context-free grammar', {'weight': 0.6})
('simulated annealing', 'branch and cut', {'weight': 0.6})
('simulated annealing', 'state variable', {'weight': 0.6})
('simulated annealing', 'treewidth', {'weight': 0.6})
('simulated annealing', 'optimization algorithms and methods', {'weight': 0.5})
('simulated annealing', 'overlapping subproblem', {'weight': 0.6})
('simulated annealing', 'taylor & francis', {'weight': 0.6})
('simulated annealing', 'cutting-plane method', {'weight': 0.6})
('simulated annealing', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('simulated annealing', 'method of undetermined coefficients', {'weight': 0.6})
('simulated annealing', 'graph cuts in computer vision', {'weight': 0.7})
('simulated annealing', 'combinatorial optimization', {'weight': 0.7})
('simulated annealing', "newton's method in optimization", {'weight': 0.6})
('simulated annealing', 'matrix chain multiplication', {'weight': 0.6})
('simulated annealing', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('simulated annealing', 'dynamic time warping', {'weight': 0.6})
('simulated annealing', 'dynamic programming language', {'weight': 0.6})
('simulated annealing', 'call-by-need', {'weight': 0.6})
('simulated annealing', 'big-o notation', {'weight': 0.6})
('simulated annealing', 'comparison of optimization software', {'weight': 0.6})
('simulated annealing', 'quadratic programming', {'weight': 0.6})
('simulated annealing', 'common lisp', {'weight': 0.6})
('simulated annealing', 'barrier function', {'weight': 0.6})
('simulated annealing', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('simulated annealing', 'gradient descent', {'weight': 0.6})
('simulated annealing', 'patricia selinger', {'weight': 0.6})
('simulated annealing', 'discounting', {'weight': 0.6})
('simulated annealing', 'ronald l. rivest', {'weight': 0.6})
('simulated annealing', 'iterative method', {'weight': 0.6})
('simulated annealing', 'limited-memory bfgs', {'weight': 0.6})
('simulated annealing', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('simulated annealing', 'longest common substring problem', {'weight': 0.6})
('simulated annealing', 'clifford stein', {'weight': 0.6})
('simulated annealing', 'computer chess', {'weight': 0.6})
('simulated annealing', 'linear programming', {'weight': 0.6})
('simulated annealing', 'bitonic tour', {'weight': 0.6})
('simulated annealing', 'linear search problem', {'weight': 0.6})
('simulated annealing', 'reactive search optimization', {'weight': 0.7})
('simulated annealing', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('simulated annealing', 'systems analysis', {'weight': 0.6})
('simulated annealing', 'heuristic algorithms', {'weight': 0.5})
('simulated annealing', 'tree decomposition', {'weight': 0.6})
('simulated annealing', 'capital (economics)', {'weight': 0.6})
('simulated annealing', 'levenshtein distance', {'weight': 0.6})
('simulated annealing', 'nonlinear programming', {'weight': 0.6})
('simulated annealing', 'traveling salesman problem', {'weight': 0.7})
('simulated annealing', 'particle swarm optimization', {'weight': 0.7})
('simulated annealing', 'markov chain', {'weight': 0.7})
('simulated annealing', 'computational complexity of mathematical operations', {'weight': 0.6})
('simulated annealing', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('simulated annealing', 'gradient', {'weight': 0.6})
('simulated annealing', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('simulated annealing', 'bulletin of the american mathematical society', {'weight': 0.6})
('simulated annealing', 'u.s. english', {'weight': 0.6})
('simulated annealing', 'refutation table', {'weight': 0.6})
('simulated annealing', 'heuristic algorithm', {'weight': 0.6})
('simulated annealing', 'successive linear programming', {'weight': 0.6})
('simulated annealing', 'optimal substructure', {'weight': 0.6})
('simulated annealing', 'programming language', {'weight': 0.6})
('simulated annealing', 'mergesort', {'weight': 0.6})
('simulated annealing', "dijkstra's algorithm", {'weight': 0.6})
('simulated annealing', 'subgradient method', {'weight': 0.6})
('simulated annealing', 'call-by-name', {'weight': 0.6})
('simulated annealing', 'longest increasing subsequence problem', {'weight': 0.6})
('simulated annealing', 'edward prescott', {'weight': 0.6})
('simulated annealing', 'exponential time', {'weight': 0.6})
('simulated annealing', 'principle of optimality', {'weight': 0.6})
('simulated annealing', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('simulated annealing', 'mathematical game', {'weight': 0.6})
('simulated annealing', 'nancy stokey', {'weight': 0.6})
('simulated annealing', 'approximation algorithm', {'weight': 0.6})
('simulated annealing', 'discrete-time', {'weight': 0.6})
('simulated annealing', 'cyk algorithm', {'weight': 0.6})
('simulated annealing', 'markov decision process', {'weight': 0.6})
('simulated annealing', "powell's method", {'weight': 0.6})
('simulated annealing', 'wolfe conditions', {'weight': 0.6})
('simulated annealing', 'convexity in economics', {'weight': 0.6})
('simulated annealing', 'transposition table', {'weight': 0.6})
('simulated annealing', 'economics', {'weight': 0.6})
('simulated annealing', 'backward induction', {'weight': 0.6})
('simulated annealing', 'golden section search', {'weight': 0.6})
('simulated annealing', 'edit distance', {'weight': 0.6})
('simulated annealing', 'tree structure', {'weight': 0.6})
('simulated annealing', 'exchange algorithm', {'weight': 0.6})
('simulated annealing', 'dover publications', {'weight': 0.6})
('simulated annealing', 'seam carving', {'weight': 0.6})
('simulated annealing', 'recursive least squares', {'weight': 0.6})
('simulated annealing', 'metaheuristic', {'weight': 0.6})
('simulated annealing', 'quasi-newton method', {'weight': 0.6})
('simulated annealing', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('simulated annealing', 'robert e. lucas', {'weight': 0.6})
('simulated annealing', 'non-convexity (economics)', {'weight': 0.6})
('simulated annealing', 'automatic label placement', {'weight': 0.7})
('simulated annealing', 'sr1 formula', {'weight': 0.6})
('simulated annealing', 'mathematical reviews', {'weight': 0.6})
('simulated annealing', 'puzzle', {'weight': 0.6})
('simulated annealing', 'associative array', {'weight': 0.6})
('simulated annealing', 'shortest path problem', {'weight': 0.6})
('simulated annealing', 'dynamic algorithm', {'weight': 0.6})
('simulated annealing', 'augmented lagrangian method', {'weight': 0.6})
('simulated annealing', 'charles delisi', {'weight': 0.6})
('simulated annealing', 'greedy algorithm', {'weight': 0.6})
('simulated annealing', "karmarkar's algorithm", {'weight': 0.6})
('simulated annealing', 'adaptive simulated annealing', {'weight': 0.7})
('simulated annealing', 'lattice models', {'weight': 0.6})
('simulated annealing', 'utility', {'weight': 0.6})
('simulated annealing', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('simulated annealing', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('simulated annealing', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('simulated annealing', 'international standard book number', {'weight': 0.6})
('simulated annealing', 'undirected graph', {'weight': 0.6})
('simulated annealing', 'scheme (programming language)', {'weight': 0.6})
('simulated annealing', 'rna structure', {'weight': 0.6})
('simulated annealing', 'hanoi', {'weight': 0.6})
('simulated annealing', 'dual-phase evolution', {'weight': 0.7})
('simulated annealing', 'perl', {'weight': 0.6})
('simulated annealing', 'digital object identifier', {'weight': 0.6})
('simulated annealing', 'sequential quadratic programming', {'weight': 0.6})
('simulated annealing', "dinic's algorithm", {'weight': 0.6})
('simulated annealing', 'pseudo-polynomial time', {'weight': 0.6})
('simulated annealing', 'partition problem', {'weight': 0.6})
('simulated annealing', 'stochastic programming', {'weight': 0.6})
('simulated annealing', 'hill climbing', {'weight': 0.6})
('simulated annealing', 'top-down', {'weight': 0.6})
('simulated annealing', 'de boor algorithm', {'weight': 0.6})
('simulated annealing', 'optimization algorithm', {'weight': 0.6})
('simulated annealing', "kruskal's algorithm", {'weight': 0.6})
('simulated annealing', 'jacques philippe marie binet', {'weight': 0.6})
('simulated annealing', 'tabu search', {'weight': 0.6})
('simulated annealing', 'divide and conquer algorithm', {'weight': 0.6})
('simulated annealing', "johnson's algorithm", {'weight': 0.6})
('simulated annealing', 'evolutionary algorithm', {'weight': 0.6})
('simulated annealing', 'clique-width', {'weight': 0.6})
('simulated annealing', 'dynamic programming', {'weight': 0.6})
('simulated annealing', 'subroutine', {'weight': 0.6})
('simulated annealing', 'simulated annealing', {'weight': 1})
('simulated annealing', 'tower of hanoi', {'weight': 0.6})
('simulated annealing', 'branch and bound', {'weight': 0.6})
('simulated annealing', 'engineering', {'weight': 0.6})
('simulated annealing', 'matroid', {'weight': 0.6})
('simulated annealing', 'viterbi algorithm', {'weight': 0.6})
('simulated annealing', "lemke's algorithm", {'weight': 0.6})
('simulated annealing', 'simplex algorithm', {'weight': 0.6})
('simulated annealing', 'local search (optimization)', {'weight': 0.6})
('simulated annealing', 'hessian matrix', {'weight': 0.6})
('simulated annealing', 'ibm system r', {'weight': 0.6})
('simulated annealing', 'penalty method', {'weight': 0.6})
('simulated annealing', 'prolog', {'weight': 0.6})
('simulated annealing', 'time-invariant system', {'weight': 0.6})
('simulated annealing', 'criss-cross algorithm', {'weight': 0.6})
('simulated annealing', 'revised simplex algorithm', {'weight': 0.6})
('simulated annealing', 'the mathematical association of america', {'weight': 0.6})
('simulated annealing', 'line search', {'weight': 0.6})
('simulated annealing', 'j (programming language)', {'weight': 0.6})
('simulated annealing', 'multidisciplinary optimization', {'weight': 0.7})
('simulated annealing', 'word wrap', {'weight': 0.6})
('simulated annealing', 'subset sum problem', {'weight': 0.6})
('simulated annealing', 'integer programming', {'weight': 0.6})
('simulated annealing', 'nucleosome', {'weight': 0.6})
('simulated annealing', 'earley algorithm', {'weight': 0.6})
('simulated annealing', 'referential transparency (computer science)', {'weight': 0.6})
('simulated annealing', 'recursion', {'weight': 0.6})
('simulated annealing', 'mathematica', {'weight': 0.6})
('simulated annealing', 'quicksort', {'weight': 0.6})
('simulated annealing', 'recursion (computer science)', {'weight': 0.6})
('simulated annealing', 'checkerboard', {'weight': 0.6})
('simulated annealing', 'computer science', {'weight': 0.6})
('simulated annealing', 'place and route', {'weight': 0.7})
('simulated annealing', 'brute-force search', {'weight': 0.6})
('simulated annealing', 'mathematics', {'weight': 0.6})
('simulated annealing', 'intelligent water drops', {'weight': 0.7})
('simulated annealing', 'depth-first search', {'weight': 0.6})
('simulated annealing', 'top-down and bottom-up design', {'weight': 0.6})
('simulated annealing', 'correspondence problem', {'weight': 0.6})
('simulated annealing', 'transcription factor', {'weight': 0.6})
('simulated annealing', 'monte carlo methods', {'weight': 0.5})
('simulated annealing', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('simulated annealing', 'structural alignment', {'weight': 0.6})
('simulated annealing', 'local convergence', {'weight': 0.6})
('simulated annealing', 'knapsack problem', {'weight': 0.6})
('simulated annealing', 'graph algorithm', {'weight': 0.6})
('simulated annealing', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('simulated annealing', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('simulated annealing', 'hidden markov model', {'weight': 0.6})
('simulated annealing', 'string (computer science)', {'weight': 0.6})
('simulated annealing', 'bioinformatics', {'weight': 0.6})
('simulated annealing', 'genetics', {'weight': 0.6})
('simulated annealing', 'mathematical optimization', {'weight': 0.6})
('simulated annealing', 'artificial neural networks', {'weight': 0.6})
('simulated annealing', 'introduction to algorithms', {'weight': 0.6})
('simulated annealing', 'thomas h. cormen', {'weight': 0.6})
('simulated annealing', 'music information retrieval', {'weight': 0.6})
('simulated annealing', 'beat (music)', {'weight': 0.6})
('simulated annealing', 'longest common subsequence problem', {'weight': 0.6})
('simulated annealing', 'convex minimization', {'weight': 0.6})
('simulated annealing', 'successive parabolic interpolation', {'weight': 0.6})
('simulated annealing', 'fibonacci sequence', {'weight': 0.6})
('simulated annealing', 'maximum subarray problem', {'weight': 0.6})
('simulated annealing', 'convex optimization', {'weight': 0.6})
('simulated annealing', 'memoization', {'weight': 0.6})
('simulated annealing', 'richard bellman', {'weight': 0.6})
('simulated annealing', 'exponential growth', {'weight': 0.6})
('simulated annealing', 'charles e. leiserson', {'weight': 0.6})
('simulated annealing', 'charles erwin wilson', {'weight': 0.6})
('simulated annealing', 'interval scheduling', {'weight': 0.6})
('simulated annealing', 'chart parser', {'weight': 0.6})
('simulated annealing', 'travelling salesman problem', {'weight': 0.6})
('simulated annealing', 'bellman equation', {'weight': 0.6})
('combinatorial optimization', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('combinatorial optimization', 'photoshop', {'weight': 0.6})
('combinatorial optimization', 'sequence alignment', {'weight': 0.6})
('combinatorial optimization', 'ellipsoid method', {'weight': 0.6})
('combinatorial optimization', 'chain matrix multiplication', {'weight': 0.6})
('combinatorial optimization', 'ieee', {'weight': 0.6})
('combinatorial optimization', 'backtracking', {'weight': 0.6})
('combinatorial optimization', 'sr1 formula', {'weight': 0.6})
('combinatorial optimization', 'nonlinear conjugate gradient method', {'weight': 0.6})
('combinatorial optimization', 'dynamic problem', {'weight': 0.6})
('combinatorial optimization', 'trust region', {'weight': 0.6})
('combinatorial optimization', 'function (mathematics)', {'weight': 0.6})
('combinatorial optimization', 'minimum spanning tree', {'weight': 0.6})
('combinatorial optimization', 'context-free grammar', {'weight': 0.6})
('combinatorial optimization', 'branch and cut', {'weight': 0.6})
('combinatorial optimization', 'state variable', {'weight': 0.6})
('combinatorial optimization', 'treewidth', {'weight': 0.6})
('combinatorial optimization', 'overlapping subproblem', {'weight': 0.6})
('combinatorial optimization', 'refutation table', {'weight': 0.6})
('combinatorial optimization', 'cutting-plane method', {'weight': 0.6})
('combinatorial optimization', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('combinatorial optimization', 'method of undetermined coefficients', {'weight': 0.6})
('combinatorial optimization', 'flow network', {'weight': 0.6})
('combinatorial optimization', "newton's method in optimization", {'weight': 0.6})
('combinatorial optimization', 'matrix chain multiplication', {'weight': 0.6})
('combinatorial optimization', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('combinatorial optimization', 'dynamic time warping', {'weight': 0.6})
('combinatorial optimization', 'dynamic programming language', {'weight': 0.6})
('combinatorial optimization', 'call-by-need', {'weight': 0.6})
('combinatorial optimization', 'big-o notation', {'weight': 0.6})
('combinatorial optimization', 'comparison of optimization software', {'weight': 0.6})
('combinatorial optimization', 'quadratic programming', {'weight': 0.6})
('combinatorial optimization', 'common lisp', {'weight': 0.6})
('combinatorial optimization', 'barrier function', {'weight': 0.6})
('combinatorial optimization', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('combinatorial optimization', 'gradient descent', {'weight': 0.6})
('combinatorial optimization', 'patricia selinger', {'weight': 0.6})
('combinatorial optimization', 'discounting', {'weight': 0.6})
('combinatorial optimization', 'ronald l. rivest', {'weight': 0.6})
('combinatorial optimization', 'iterative method', {'weight': 0.6})
('combinatorial optimization', 'limited-memory bfgs', {'weight': 0.6})
('combinatorial optimization', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('combinatorial optimization', 'longest common substring problem', {'weight': 0.6})
('combinatorial optimization', 'clifford stein', {'weight': 0.6})
('combinatorial optimization', 'computer chess', {'weight': 0.6})
('combinatorial optimization', 'linear programming', {'weight': 0.6})
('combinatorial optimization', 'bitonic tour', {'weight': 0.6})
('combinatorial optimization', 'linear search problem', {'weight': 0.6})
('combinatorial optimization', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('combinatorial optimization', 'systems analysis', {'weight': 0.6})
('combinatorial optimization', 'capital (economics)', {'weight': 0.6})
('combinatorial optimization', 'levenshtein distance', {'weight': 0.6})
('combinatorial optimization', 'nonlinear programming', {'weight': 0.6})
('combinatorial optimization', 'computational complexity of mathematical operations', {'weight': 0.6})
('combinatorial optimization', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('combinatorial optimization', 'gradient', {'weight': 0.6})
('combinatorial optimization', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('combinatorial optimization', 'bulletin of the american mathematical society', {'weight': 0.6})
('combinatorial optimization', 'u.s. english', {'weight': 0.6})
('combinatorial optimization', 'combinatorial optimization', {'weight': 1})
('combinatorial optimization', 'heuristic algorithm', {'weight': 0.6})
('combinatorial optimization', 'successive linear programming', {'weight': 0.6})
('combinatorial optimization', 'optimal substructure', {'weight': 0.6})
('combinatorial optimization', 'taylor & francis', {'weight': 0.6})
('combinatorial optimization', 'programming language', {'weight': 0.6})
('combinatorial optimization', 'mergesort', {'weight': 0.6})
('combinatorial optimization', "dijkstra's algorithm", {'weight': 0.6})
('combinatorial optimization', 'subgradient method', {'weight': 0.6})
('combinatorial optimization', 'call-by-name', {'weight': 0.6})
('combinatorial optimization', 'longest increasing subsequence problem', {'weight': 0.6})
('combinatorial optimization', 'edward prescott', {'weight': 0.6})
('combinatorial optimization', 'exponential time', {'weight': 0.6})
('combinatorial optimization', 'principle of optimality', {'weight': 0.6})
('combinatorial optimization', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('combinatorial optimization', 'mathematical game', {'weight': 0.6})
('combinatorial optimization', 'nancy stokey', {'weight': 0.6})
('combinatorial optimization', 'approximation algorithm', {'weight': 0.6})
('combinatorial optimization', 'discrete-time', {'weight': 0.6})
('combinatorial optimization', 'cyk algorithm', {'weight': 0.6})
('combinatorial optimization', 'markov decision process', {'weight': 0.6})
('combinatorial optimization', "powell's method", {'weight': 0.6})
('combinatorial optimization', 'wolfe conditions', {'weight': 0.6})
('combinatorial optimization', 'convexity in economics', {'weight': 0.6})
('combinatorial optimization', 'transposition table', {'weight': 0.6})
('combinatorial optimization', 'economics', {'weight': 0.6})
('combinatorial optimization', 'backward induction', {'weight': 0.6})
('combinatorial optimization', 'golden section search', {'weight': 0.6})
('combinatorial optimization', 'edit distance', {'weight': 0.6})
('combinatorial optimization', 'tree structure', {'weight': 0.6})
('combinatorial optimization', 'exchange algorithm', {'weight': 0.6})
('combinatorial optimization', 'dover publications', {'weight': 0.6})
('combinatorial optimization', 'seam carving', {'weight': 0.6})
('combinatorial optimization', 'recursive least squares', {'weight': 0.6})
('combinatorial optimization', 'metaheuristic', {'weight': 0.6})
('combinatorial optimization', 'theoretical computer science', {'weight': 0.5})
('combinatorial optimization', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('combinatorial optimization', 'robert e. lucas', {'weight': 0.6})
('combinatorial optimization', 'non-convexity (economics)', {'weight': 0.6})
('combinatorial optimization', 'computational complexity theory', {'weight': 0.5})
('combinatorial optimization', 'mathematical reviews', {'weight': 0.6})
('combinatorial optimization', 'puzzle', {'weight': 0.6})
('combinatorial optimization', 'associative array', {'weight': 0.6})
('combinatorial optimization', 'shortest path problem', {'weight': 0.6})
('combinatorial optimization', 'dynamic algorithm', {'weight': 0.6})
('combinatorial optimization', 'augmented lagrangian method', {'weight': 0.6})
('combinatorial optimization', 'charles delisi', {'weight': 0.6})
('combinatorial optimization', 'greedy algorithm', {'weight': 0.6})
('combinatorial optimization', "karmarkar's algorithm", {'weight': 0.6})
('combinatorial optimization', 'lattice models', {'weight': 0.6})
('combinatorial optimization', 'utility', {'weight': 0.6})
('combinatorial optimization', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('combinatorial optimization', 'quasi-newton method', {'weight': 0.6})
('combinatorial optimization', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('combinatorial optimization', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('combinatorial optimization', 'international standard book number', {'weight': 0.6})
('combinatorial optimization', 'undirected graph', {'weight': 0.6})
('combinatorial optimization', 'scheme (programming language)', {'weight': 0.6})
('combinatorial optimization', 'rna structure', {'weight': 0.6})
('combinatorial optimization', 'hanoi', {'weight': 0.6})
('combinatorial optimization', 'perl', {'weight': 0.6})
('combinatorial optimization', 'digital object identifier', {'weight': 0.6})
('combinatorial optimization', 'sequential quadratic programming', {'weight': 0.6})
('combinatorial optimization', "dinic's algorithm", {'weight': 0.6})
('combinatorial optimization', 'pseudo-polynomial time', {'weight': 0.6})
('combinatorial optimization', 'partition problem', {'weight': 0.6})
('combinatorial optimization', 'stochastic programming', {'weight': 0.6})
('combinatorial optimization', 'hill climbing', {'weight': 0.6})
('combinatorial optimization', 'top-down', {'weight': 0.6})
('combinatorial optimization', 'de boor algorithm', {'weight': 0.6})
('combinatorial optimization', 'optimization algorithm', {'weight': 0.6})
('combinatorial optimization', "kruskal's algorithm", {'weight': 0.6})
('combinatorial optimization', 'jacques philippe marie binet', {'weight': 0.6})
('combinatorial optimization', 'tabu search', {'weight': 0.6})
('combinatorial optimization', 'divide and conquer algorithm', {'weight': 0.6})
('combinatorial optimization', "johnson's algorithm", {'weight': 0.6})
('combinatorial optimization', 'evolutionary algorithm', {'weight': 0.6})
('combinatorial optimization', 'clique-width', {'weight': 0.6})
('combinatorial optimization', 'dynamic programming', {'weight': 0.6})
('combinatorial optimization', 'subroutine', {'weight': 0.6})
('combinatorial optimization', 'simulated annealing', {'weight': 0.6})
('combinatorial optimization', 'tower of hanoi', {'weight': 0.6})
('combinatorial optimization', 'branch and bound', {'weight': 0.6})
('combinatorial optimization', 'engineering', {'weight': 0.6})
('combinatorial optimization', 'matroid', {'weight': 0.6})
('combinatorial optimization', 'viterbi algorithm', {'weight': 0.6})
('combinatorial optimization', "lemke's algorithm", {'weight': 0.6})
('combinatorial optimization', 'simplex algorithm', {'weight': 0.6})
('combinatorial optimization', 'local search (optimization)', {'weight': 0.6})
('combinatorial optimization', 'hessian matrix', {'weight': 0.6})
('combinatorial optimization', 'ibm system r', {'weight': 0.6})
('combinatorial optimization', 'penalty method', {'weight': 0.6})
('combinatorial optimization', 'prolog', {'weight': 0.6})
('combinatorial optimization', 'time-invariant system', {'weight': 0.6})
('combinatorial optimization', 'criss-cross algorithm', {'weight': 0.6})
('combinatorial optimization', 'revised simplex algorithm', {'weight': 0.6})
('combinatorial optimization', 'the mathematical association of america', {'weight': 0.6})
('combinatorial optimization', 'line search', {'weight': 0.6})
('combinatorial optimization', 'j (programming language)', {'weight': 0.6})
('combinatorial optimization', 'word wrap', {'weight': 0.6})
('combinatorial optimization', 'subset sum problem', {'weight': 0.6})
('combinatorial optimization', 'integer programming', {'weight': 0.6})
('combinatorial optimization', 'nucleosome', {'weight': 0.6})
('combinatorial optimization', 'earley algorithm', {'weight': 0.6})
('combinatorial optimization', 'referential transparency (computer science)', {'weight': 0.6})
('combinatorial optimization', 'recursion', {'weight': 0.6})
('combinatorial optimization', 'mathematica', {'weight': 0.6})
('combinatorial optimization', 'quicksort', {'weight': 0.6})
('combinatorial optimization', 'recursion (computer science)', {'weight': 0.6})
('combinatorial optimization', 'checkerboard', {'weight': 0.6})
('combinatorial optimization', 'computer science', {'weight': 0.6})
('combinatorial optimization', 'brute-force search', {'weight': 0.6})
('combinatorial optimization', 'mathematics', {'weight': 0.6})
('combinatorial optimization', 'depth-first search', {'weight': 0.6})
('combinatorial optimization', 'top-down and bottom-up design', {'weight': 0.6})
('combinatorial optimization', 'correspondence problem', {'weight': 0.6})
('combinatorial optimization', 'transcription factor', {'weight': 0.6})
('combinatorial optimization', 'tree decomposition', {'weight': 0.6})
('combinatorial optimization', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('combinatorial optimization', 'structural alignment', {'weight': 0.6})
('combinatorial optimization', 'local convergence', {'weight': 0.6})
('combinatorial optimization', 'knapsack problem', {'weight': 0.6})
('combinatorial optimization', 'graph algorithm', {'weight': 0.6})
('combinatorial optimization', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('combinatorial optimization', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('combinatorial optimization', 'hidden markov model', {'weight': 0.6})
('combinatorial optimization', 'string (computer science)', {'weight': 0.6})
('combinatorial optimization', 'bioinformatics', {'weight': 0.6})
('combinatorial optimization', 'genetics', {'weight': 0.6})
('combinatorial optimization', 'mathematical optimization', {'weight': 0.6})
('combinatorial optimization', 'artificial neural networks', {'weight': 0.6})
('combinatorial optimization', 'introduction to algorithms', {'weight': 0.6})
('combinatorial optimization', 'thomas h. cormen', {'weight': 0.6})
('combinatorial optimization', 'music information retrieval', {'weight': 0.6})
('combinatorial optimization', 'beat (music)', {'weight': 0.6})
('combinatorial optimization', 'longest common subsequence problem', {'weight': 0.6})
('combinatorial optimization', 'convex minimization', {'weight': 0.6})
('combinatorial optimization', 'successive parabolic interpolation', {'weight': 0.6})
('combinatorial optimization', 'fibonacci sequence', {'weight': 0.6})
('combinatorial optimization', 'maximum subarray problem', {'weight': 0.6})
('combinatorial optimization', 'convex optimization', {'weight': 0.6})
('combinatorial optimization', 'memoization', {'weight': 0.6})
('combinatorial optimization', 'richard bellman', {'weight': 0.6})
('combinatorial optimization', 'exponential growth', {'weight': 0.6})
('combinatorial optimization', 'charles e. leiserson', {'weight': 0.6})
('combinatorial optimization', 'charles erwin wilson', {'weight': 0.6})
('combinatorial optimization', 'interval scheduling', {'weight': 0.6})
('combinatorial optimization', 'chart parser', {'weight': 0.6})
('combinatorial optimization', 'travelling salesman problem', {'weight': 0.6})
('combinatorial optimization', 'bellman equation', {'weight': 0.6})
('mathematical game', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('mathematical game', 'photoshop', {'weight': 0.6})
('mathematical game', 'sequence alignment', {'weight': 0.6})
('mathematical game', 'flow network', {'weight': 0.6})
('mathematical game', 'ellipsoid method', {'weight': 0.6})
('mathematical game', 'chain matrix multiplication', {'weight': 0.6})
('mathematical game', 'ieee', {'weight': 0.6})
('mathematical game', 'backtracking', {'weight': 0.6})
('mathematical game', 'nonlinear conjugate gradient method', {'weight': 0.6})
('mathematical game', 'dynamic problem', {'weight': 0.6})
('mathematical game', 'trust region', {'weight': 0.6})
('mathematical game', 'function (mathematics)', {'weight': 0.6})
('mathematical game', 'minimum spanning tree', {'weight': 0.6})
('mathematical game', 'context-free grammar', {'weight': 0.6})
('mathematical game', 'branch and cut', {'weight': 0.6})
('mathematical game', 'state variable', {'weight': 0.6})
('mathematical game', 'treewidth', {'weight': 0.6})
('mathematical game', 'overlapping subproblem', {'weight': 0.6})
('mathematical game', 'taylor & francis', {'weight': 0.6})
('mathematical game', 'cutting-plane method', {'weight': 0.6})
('mathematical game', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('mathematical game', 'method of undetermined coefficients', {'weight': 0.6})
('mathematical game', 'combinatorial optimization', {'weight': 0.6})
('mathematical game', "newton's method in optimization", {'weight': 0.6})
('mathematical game', 'solved game', {'weight': 0.7})
('mathematical game', 'matrix chain multiplication', {'weight': 0.6})
('mathematical game', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('mathematical game', 'dynamic time warping', {'weight': 0.6})
('mathematical game', 'dynamic programming language', {'weight': 0.6})
('mathematical game', 'call-by-need', {'weight': 0.6})
('mathematical game', 'big-o notation', {'weight': 0.6})
('mathematical game', 'comparison of optimization software', {'weight': 0.6})
('mathematical game', 'quadratic programming', {'weight': 0.6})
('mathematical game', 'common lisp', {'weight': 0.6})
('mathematical game', 'barrier function', {'weight': 0.6})
('mathematical game', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('mathematical game', 'gradient descent', {'weight': 0.6})
('mathematical game', 'patricia selinger', {'weight': 0.6})
('mathematical game', 'discounting', {'weight': 0.6})
('mathematical game', 'ronald l. rivest', {'weight': 0.6})
('mathematical game', 'iterative method', {'weight': 0.6})
('mathematical game', 'limited-memory bfgs', {'weight': 0.6})
('mathematical game', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('mathematical game', 'longest common substring problem', {'weight': 0.6})
('mathematical game', 'clifford stein', {'weight': 0.6})
('mathematical game', 'computer chess', {'weight': 0.6})
('mathematical game', 'linear programming', {'weight': 0.6})
('mathematical game', 'bitonic tour', {'weight': 0.6})
('mathematical game', 'linear search problem', {'weight': 0.6})
('mathematical game', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('mathematical game', 'systems analysis', {'weight': 0.6})
('mathematical game', 'capital (economics)', {'weight': 0.6})
('mathematical game', 'levenshtein distance', {'weight': 0.6})
('mathematical game', 'nonlinear programming', {'weight': 0.6})
('mathematical game', 'computational complexity of mathematical operations', {'weight': 0.6})
('mathematical game', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('mathematical game', 'mathematical games', {'weight': 0.5})
('mathematical game', 'gradient', {'weight': 0.6})
('mathematical game', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('mathematical game', 'bulletin of the american mathematical society', {'weight': 0.6})
('mathematical game', 'u.s. english', {'weight': 0.6})
('mathematical game', 'refutation table', {'weight': 0.6})
('mathematical game', 'heuristic algorithm', {'weight': 0.6})
('mathematical game', 'successive linear programming', {'weight': 0.6})
('mathematical game', 'optimal substructure', {'weight': 0.6})
('mathematical game', 'programming language', {'weight': 0.6})
('mathematical game', 'mergesort', {'weight': 0.6})
('mathematical game', "dijkstra's algorithm", {'weight': 0.6})
('mathematical game', 'subgradient method', {'weight': 0.6})
('mathematical game', 'call-by-name', {'weight': 0.6})
('mathematical game', 'longest increasing subsequence problem', {'weight': 0.6})
('mathematical game', 'edward prescott', {'weight': 0.6})
('mathematical game', 'exponential time', {'weight': 0.6})
('mathematical game', 'principle of optimality', {'weight': 0.6})
('mathematical game', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('mathematical game', 'mathematical game', {'weight': 1})
('mathematical game', 'nancy stokey', {'weight': 0.6})
('mathematical game', 'approximation algorithm', {'weight': 0.6})
('mathematical game', 'discrete-time', {'weight': 0.6})
('mathematical game', 'cyk algorithm', {'weight': 0.6})
('mathematical game', 'markov decision process', {'weight': 0.6})
('mathematical game', "powell's method", {'weight': 0.6})
('mathematical game', 'wolfe conditions', {'weight': 0.6})
('mathematical game', 'convexity in economics', {'weight': 0.6})
('mathematical game', 'transposition table', {'weight': 0.6})
('mathematical game', 'economics', {'weight': 0.6})
('mathematical game', 'backward induction', {'weight': 0.6})
('mathematical game', 'golden section search', {'weight': 0.6})
('mathematical game', 'edit distance', {'weight': 0.6})
('mathematical game', 'tree structure', {'weight': 0.6})
('mathematical game', 'exchange algorithm', {'weight': 0.6})
('mathematical game', 'dover publications', {'weight': 0.6})
('mathematical game', 'seam carving', {'weight': 0.6})
('mathematical game', 'recursive least squares', {'weight': 0.6})
('mathematical game', 'metaheuristic', {'weight': 0.6})
('mathematical game', 'quasi-newton method', {'weight': 0.6})
('mathematical game', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('mathematical game', 'robert e. lucas', {'weight': 0.6})
('mathematical game', 'non-convexity (economics)', {'weight': 0.6})
('mathematical game', 'sr1 formula', {'weight': 0.6})
('mathematical game', 'mathematical reviews', {'weight': 0.6})
('mathematical game', 'puzzle', {'weight': 0.6})
('mathematical game', 'associative array', {'weight': 0.6})
('mathematical game', 'shortest path problem', {'weight': 0.6})
('mathematical game', 'dynamic algorithm', {'weight': 0.6})
('mathematical game', 'augmented lagrangian method', {'weight': 0.6})
('mathematical game', 'charles delisi', {'weight': 0.6})
('mathematical game', 'greedy algorithm', {'weight': 0.6})
('mathematical game', "karmarkar's algorithm", {'weight': 0.6})
('mathematical game', 'lattice models', {'weight': 0.6})
('mathematical game', 'utility', {'weight': 0.6})
('mathematical game', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('mathematical game', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('mathematical game', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('mathematical game', 'international standard book number', {'weight': 0.6})
('mathematical game', 'undirected graph', {'weight': 0.6})
('mathematical game', 'scheme (programming language)', {'weight': 0.6})
('mathematical game', 'rna structure', {'weight': 0.6})
('mathematical game', 'hanoi', {'weight': 0.6})
('mathematical game', 'perl', {'weight': 0.6})
('mathematical game', 'digital object identifier', {'weight': 0.6})
('mathematical game', 'sequential quadratic programming', {'weight': 0.6})
('mathematical game', "dinic's algorithm", {'weight': 0.6})
('mathematical game', 'pseudo-polynomial time', {'weight': 0.6})
('mathematical game', 'partition problem', {'weight': 0.6})
('mathematical game', 'stochastic programming', {'weight': 0.6})
('mathematical game', 'hill climbing', {'weight': 0.6})
('mathematical game', 'top-down', {'weight': 0.6})
('mathematical game', 'de boor algorithm', {'weight': 0.6})
('mathematical game', 'optimization algorithm', {'weight': 0.6})
('mathematical game', "kruskal's algorithm", {'weight': 0.6})
('mathematical game', 'games of skill', {'weight': 0.7})
('mathematical game', 'jacques philippe marie binet', {'weight': 0.6})
('mathematical game', 'tabu search', {'weight': 0.6})
('mathematical game', 'divide and conquer algorithm', {'weight': 0.6})
('mathematical game', "johnson's algorithm", {'weight': 0.6})
('mathematical game', 'evolutionary algorithm', {'weight': 0.6})
('mathematical game', 'clique-width', {'weight': 0.6})
('mathematical game', 'dynamic programming', {'weight': 0.6})
('mathematical game', 'subroutine', {'weight': 0.6})
('mathematical game', 'simulated annealing', {'weight': 0.6})
('mathematical game', 'tower of hanoi', {'weight': 0.6})
('mathematical game', 'branch and bound', {'weight': 0.6})
('mathematical game', 'engineering', {'weight': 0.6})
('mathematical game', 'matroid', {'weight': 0.6})
('mathematical game', 'viterbi algorithm', {'weight': 0.6})
('mathematical game', "lemke's algorithm", {'weight': 0.6})
('mathematical game', 'simplex algorithm', {'weight': 0.6})
('mathematical game', 'local search (optimization)', {'weight': 0.6})
('mathematical game', 'hessian matrix', {'weight': 0.6})
('mathematical game', 'ibm system r', {'weight': 0.6})
('mathematical game', 'penalty method', {'weight': 0.6})
('mathematical game', 'prolog', {'weight': 0.6})
('mathematical game', 'time-invariant system', {'weight': 0.6})
('mathematical game', 'criss-cross algorithm', {'weight': 0.6})
('mathematical game', 'revised simplex algorithm', {'weight': 0.6})
('mathematical game', 'the mathematical association of america', {'weight': 0.6})
('mathematical game', 'line search', {'weight': 0.6})
('mathematical game', 'j (programming language)', {'weight': 0.6})
('mathematical game', 'word wrap', {'weight': 0.6})
('mathematical game', 'subset sum problem', {'weight': 0.6})
('mathematical game', 'integer programming', {'weight': 0.6})
('mathematical game', 'nucleosome', {'weight': 0.6})
('mathematical game', 'earley algorithm', {'weight': 0.6})
('mathematical game', 'referential transparency (computer science)', {'weight': 0.6})
('mathematical game', 'recursion', {'weight': 0.6})
('mathematical game', 'mathematica', {'weight': 0.6})
('mathematical game', 'quicksort', {'weight': 0.6})
('mathematical game', 'recursion (computer science)', {'weight': 0.6})
('mathematical game', 'checkerboard', {'weight': 0.6})
('mathematical game', 'computer science', {'weight': 0.6})
('mathematical game', 'brute-force search', {'weight': 0.6})
('mathematical game', 'mathematics', {'weight': 0.6})
('mathematical game', 'depth-first search', {'weight': 0.6})
('mathematical game', 'top-down and bottom-up design', {'weight': 0.6})
('mathematical game', 'correspondence problem', {'weight': 0.6})
('mathematical game', 'transcription factor', {'weight': 0.6})
('mathematical game', 'tree decomposition', {'weight': 0.6})
('mathematical game', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('mathematical game', 'structural alignment', {'weight': 0.6})
('mathematical game', 'local convergence', {'weight': 0.6})
('mathematical game', 'knapsack problem', {'weight': 0.6})
('mathematical game', 'graph algorithm', {'weight': 0.6})
('mathematical game', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('mathematical game', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('mathematical game', 'hidden markov model', {'weight': 0.6})
('mathematical game', 'string (computer science)', {'weight': 0.6})
('mathematical game', 'bioinformatics', {'weight': 0.6})
('mathematical game', 'genetics', {'weight': 0.6})
('mathematical game', 'mathematical optimization', {'weight': 0.6})
('mathematical game', 'artificial neural networks', {'weight': 0.6})
('mathematical game', 'introduction to algorithms', {'weight': 0.6})
('mathematical game', 'thomas h. cormen', {'weight': 0.6})
('mathematical game', 'music information retrieval', {'weight': 0.6})
('mathematical game', 'beat (music)', {'weight': 0.6})
('mathematical game', 'longest common subsequence problem', {'weight': 0.6})
('mathematical game', 'convex minimization', {'weight': 0.6})
('mathematical game', 'successive parabolic interpolation', {'weight': 0.6})
('mathematical game', 'fibonacci sequence', {'weight': 0.6})
('mathematical game', 'maximum subarray problem', {'weight': 0.6})
('mathematical game', 'convex optimization', {'weight': 0.6})
('mathematical game', 'memoization', {'weight': 0.6})
('mathematical game', 'richard bellman', {'weight': 0.6})
('mathematical game', 'exponential growth', {'weight': 0.6})
('mathematical game', 'charles e. leiserson', {'weight': 0.6})
('mathematical game', 'charles erwin wilson', {'weight': 0.6})
('mathematical game', 'interval scheduling', {'weight': 0.6})
('mathematical game', 'chart parser', {'weight': 0.6})
('mathematical game', 'travelling salesman problem', {'weight': 0.6})
('mathematical game', 'bellman equation', {'weight': 0.6})
('branch and cut', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('branch and cut', 'photoshop', {'weight': 0.6})
('branch and cut', 'sequence alignment', {'weight': 0.6})
('branch and cut', 'ellipsoid method', {'weight': 0.6})
('branch and cut', 'chain matrix multiplication', {'weight': 0.6})
('branch and cut', 'ieee', {'weight': 0.6})
('branch and cut', 'backtracking', {'weight': 0.6})
('branch and cut', 'nonlinear conjugate gradient method', {'weight': 0.6})
('branch and cut', 'dynamic problem', {'weight': 0.6})
('branch and cut', 'trust region', {'weight': 0.6})
('branch and cut', 'function (mathematics)', {'weight': 0.6})
('branch and cut', 'minimum spanning tree', {'weight': 0.6})
('branch and cut', 'context-free grammar', {'weight': 0.6})
('branch and cut', 'branch and cut', {'weight': 1})
('branch and cut', 'state variable', {'weight': 0.6})
('branch and cut', 'treewidth', {'weight': 0.6})
('branch and cut', 'optimization algorithms and methods', {'weight': 0.5})
('branch and cut', 'overlapping subproblem', {'weight': 0.6})
('branch and cut', 'refutation table', {'weight': 0.6})
('branch and cut', 'cutting-plane method', {'weight': 0.6})
('branch and cut', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('branch and cut', 'method of undetermined coefficients', {'weight': 0.6})
('branch and cut', 'flow network', {'weight': 0.6})
('branch and cut', "newton's method in optimization", {'weight': 0.6})
('branch and cut', 'matrix chain multiplication', {'weight': 0.6})
('branch and cut', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('branch and cut', 'dynamic time warping', {'weight': 0.6})
('branch and cut', 'dynamic programming language', {'weight': 0.6})
('branch and cut', 'call-by-need', {'weight': 0.6})
('branch and cut', 'big-o notation', {'weight': 0.6})
('branch and cut', 'comparison of optimization software', {'weight': 0.6})
('branch and cut', 'quadratic programming', {'weight': 0.6})
('branch and cut', 'common lisp', {'weight': 0.6})
('branch and cut', 'barrier function', {'weight': 0.6})
('branch and cut', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('branch and cut', 'gradient descent', {'weight': 0.6})
('branch and cut', 'patricia selinger', {'weight': 0.6})
('branch and cut', 'discounting', {'weight': 0.6})
('branch and cut', 'ronald l. rivest', {'weight': 0.6})
('branch and cut', 'iterative method', {'weight': 0.6})
('branch and cut', 'limited-memory bfgs', {'weight': 0.6})
('branch and cut', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('branch and cut', 'longest common substring problem', {'weight': 0.6})
('branch and cut', 'clifford stein', {'weight': 0.6})
('branch and cut', 'computer chess', {'weight': 0.6})
('branch and cut', 'linear programming', {'weight': 0.6})
('branch and cut', 'bitonic tour', {'weight': 0.6})
('branch and cut', 'linear search problem', {'weight': 0.6})
('branch and cut', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('branch and cut', 'systems analysis', {'weight': 0.6})
('branch and cut', 'capital (economics)', {'weight': 0.6})
('branch and cut', 'levenshtein distance', {'weight': 0.6})
('branch and cut', 'nonlinear programming', {'weight': 0.6})
('branch and cut', 'computational complexity of mathematical operations', {'weight': 0.6})
('branch and cut', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('branch and cut', 'gradient', {'weight': 0.6})
('branch and cut', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('branch and cut', 'bulletin of the american mathematical society', {'weight': 0.6})
('branch and cut', 'u.s. english', {'weight': 0.6})
('branch and cut', 'longest increasing subsequence problem', {'weight': 0.6})
('branch and cut', 'heuristic algorithm', {'weight': 0.6})
('branch and cut', 'successive linear programming', {'weight': 0.6})
('branch and cut', 'optimal substructure', {'weight': 0.6})
('branch and cut', 'taylor & francis', {'weight': 0.6})
('branch and cut', 'programming language', {'weight': 0.6})
('branch and cut', 'mergesort', {'weight': 0.6})
('branch and cut', "dijkstra's algorithm", {'weight': 0.6})
('branch and cut', 'subgradient method', {'weight': 0.6})
('branch and cut', 'call-by-name', {'weight': 0.6})
('branch and cut', 'combinatorial optimization', {'weight': 0.6})
('branch and cut', 'edward prescott', {'weight': 0.6})
('branch and cut', 'exponential time', {'weight': 0.6})
('branch and cut', 'principle of optimality', {'weight': 0.6})
('branch and cut', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('branch and cut', 'mathematical game', {'weight': 0.6})
('branch and cut', 'nancy stokey', {'weight': 0.6})
('branch and cut', 'approximation algorithm', {'weight': 0.6})
('branch and cut', 'discrete-time', {'weight': 0.6})
('branch and cut', 'cyk algorithm', {'weight': 0.6})
('branch and cut', 'markov decision process', {'weight': 0.6})
('branch and cut', "powell's method", {'weight': 0.6})
('branch and cut', 'wolfe conditions', {'weight': 0.6})
('branch and cut', 'convexity in economics', {'weight': 0.6})
('branch and cut', 'transposition table', {'weight': 0.6})
('branch and cut', 'economics', {'weight': 0.6})
('branch and cut', 'backward induction', {'weight': 0.6})
('branch and cut', 'golden section search', {'weight': 0.6})
('branch and cut', 'edit distance', {'weight': 0.6})
('branch and cut', 'tree structure', {'weight': 0.6})
('branch and cut', 'exchange algorithm', {'weight': 0.6})
('branch and cut', 'dover publications', {'weight': 0.6})
('branch and cut', 'seam carving', {'weight': 0.6})
('branch and cut', 'recursive least squares', {'weight': 0.6})
('branch and cut', 'metaheuristic', {'weight': 0.6})
('branch and cut', 'quasi-newton method', {'weight': 0.6})
('branch and cut', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('branch and cut', 'robert e. lucas', {'weight': 0.6})
('branch and cut', 'non-convexity (economics)', {'weight': 0.6})
('branch and cut', 'sr1 formula', {'weight': 0.6})
('branch and cut', 'mathematical reviews', {'weight': 0.6})
('branch and cut', 'puzzle', {'weight': 0.6})
('branch and cut', 'associative array', {'weight': 0.6})
('branch and cut', 'shortest path problem', {'weight': 0.6})
('branch and cut', 'dynamic algorithm', {'weight': 0.6})
('branch and cut', 'augmented lagrangian method', {'weight': 0.6})
('branch and cut', 'charles delisi', {'weight': 0.6})
('branch and cut', 'greedy algorithm', {'weight': 0.6})
('branch and cut', "karmarkar's algorithm", {'weight': 0.6})
('branch and cut', 'lattice models', {'weight': 0.6})
('branch and cut', 'utility', {'weight': 0.6})
('branch and cut', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('branch and cut', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('branch and cut', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('branch and cut', 'international standard book number', {'weight': 0.6})
('branch and cut', 'undirected graph', {'weight': 0.6})
('branch and cut', 'scheme (programming language)', {'weight': 0.6})
('branch and cut', 'rna structure', {'weight': 0.6})
('branch and cut', 'hanoi', {'weight': 0.6})
('branch and cut', 'perl', {'weight': 0.6})
('branch and cut', 'digital object identifier', {'weight': 0.6})
('branch and cut', 'sequential quadratic programming', {'weight': 0.6})
('branch and cut', "dinic's algorithm", {'weight': 0.6})
('branch and cut', 'pseudo-polynomial time', {'weight': 0.6})
('branch and cut', 'partition problem', {'weight': 0.6})
('branch and cut', 'stochastic programming', {'weight': 0.6})
('branch and cut', 'hill climbing', {'weight': 0.6})
('branch and cut', 'top-down', {'weight': 0.6})
('branch and cut', 'de boor algorithm', {'weight': 0.6})
('branch and cut', 'optimization algorithm', {'weight': 0.6})
('branch and cut', "kruskal's algorithm", {'weight': 0.6})
('branch and cut', 'jacques philippe marie binet', {'weight': 0.6})
('branch and cut', 'tabu search', {'weight': 0.6})
('branch and cut', 'divide and conquer algorithm', {'weight': 0.6})
('branch and cut', "johnson's algorithm", {'weight': 0.6})
('branch and cut', 'evolutionary algorithm', {'weight': 0.6})
('branch and cut', 'clique-width', {'weight': 0.6})
('branch and cut', 'dynamic programming', {'weight': 0.6})
('branch and cut', 'subroutine', {'weight': 0.6})
('branch and cut', 'simulated annealing', {'weight': 0.6})
('branch and cut', 'tower of hanoi', {'weight': 0.6})
('branch and cut', 'branch and bound', {'weight': 0.6})
('branch and cut', 'engineering', {'weight': 0.6})
('branch and cut', 'matroid', {'weight': 0.6})
('branch and cut', 'viterbi algorithm', {'weight': 0.6})
('branch and cut', "lemke's algorithm", {'weight': 0.6})
('branch and cut', 'simplex algorithm', {'weight': 0.6})
('branch and cut', 'local search (optimization)', {'weight': 0.6})
('branch and cut', 'hessian matrix', {'weight': 0.6})
('branch and cut', 'ibm system r', {'weight': 0.6})
('branch and cut', 'penalty method', {'weight': 0.6})
('branch and cut', 'prolog', {'weight': 0.6})
('branch and cut', 'time-invariant system', {'weight': 0.6})
('branch and cut', 'criss-cross algorithm', {'weight': 0.6})
('branch and cut', 'revised simplex algorithm', {'weight': 0.6})
('branch and cut', 'the mathematical association of america', {'weight': 0.6})
('branch and cut', 'line search', {'weight': 0.6})
('branch and cut', 'j (programming language)', {'weight': 0.6})
('branch and cut', 'word wrap', {'weight': 0.6})
('branch and cut', 'subset sum problem', {'weight': 0.6})
('branch and cut', 'integer programming', {'weight': 0.6})
('branch and cut', 'nucleosome', {'weight': 0.6})
('branch and cut', 'earley algorithm', {'weight': 0.6})
('branch and cut', 'referential transparency (computer science)', {'weight': 0.6})
('branch and cut', 'recursion', {'weight': 0.6})
('branch and cut', 'mathematica', {'weight': 0.6})
('branch and cut', 'quicksort', {'weight': 0.6})
('branch and cut', 'recursion (computer science)', {'weight': 0.6})
('branch and cut', 'checkerboard', {'weight': 0.6})
('branch and cut', 'computer science', {'weight': 0.6})
('branch and cut', 'brute-force search', {'weight': 0.6})
('branch and cut', 'mathematics', {'weight': 0.6})
('branch and cut', 'depth-first search', {'weight': 0.6})
('branch and cut', 'top-down and bottom-up design', {'weight': 0.6})
('branch and cut', 'correspondence problem', {'weight': 0.6})
('branch and cut', 'transcription factor', {'weight': 0.6})
('branch and cut', 'tree decomposition', {'weight': 0.6})
('branch and cut', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('branch and cut', 'structural alignment', {'weight': 0.6})
('branch and cut', 'local convergence', {'weight': 0.6})
('branch and cut', 'knapsack problem', {'weight': 0.6})
('branch and cut', 'graph algorithm', {'weight': 0.6})
('branch and cut', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('branch and cut', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('branch and cut', 'hidden markov model', {'weight': 0.6})
('branch and cut', 'string (computer science)', {'weight': 0.6})
('branch and cut', 'bioinformatics', {'weight': 0.6})
('branch and cut', 'genetics', {'weight': 0.6})
('branch and cut', 'mathematical optimization', {'weight': 0.6})
('branch and cut', 'artificial neural networks', {'weight': 0.6})
('branch and cut', 'introduction to algorithms', {'weight': 0.6})
('branch and cut', 'thomas h. cormen', {'weight': 0.6})
('branch and cut', 'music information retrieval', {'weight': 0.6})
('branch and cut', 'beat (music)', {'weight': 0.6})
('branch and cut', 'longest common subsequence problem', {'weight': 0.6})
('branch and cut', 'convex minimization', {'weight': 0.6})
('branch and cut', 'successive parabolic interpolation', {'weight': 0.6})
('branch and cut', 'fibonacci sequence', {'weight': 0.6})
('branch and cut', 'maximum subarray problem', {'weight': 0.6})
('branch and cut', 'convex optimization', {'weight': 0.6})
('branch and cut', 'memoization', {'weight': 0.6})
('branch and cut', 'richard bellman', {'weight': 0.6})
('branch and cut', 'exponential growth', {'weight': 0.6})
('branch and cut', 'charles e. leiserson', {'weight': 0.6})
('branch and cut', 'charles erwin wilson', {'weight': 0.6})
('branch and cut', 'interval scheduling', {'weight': 0.6})
('branch and cut', 'chart parser', {'weight': 0.6})
('branch and cut', 'travelling salesman problem', {'weight': 0.6})
('branch and cut', 'bellman equation', {'weight': 0.6})
('markov decision process', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('markov decision process', 'photoshop', {'weight': 0.6})
('markov decision process', 'sequence alignment', {'weight': 0.6})
('markov decision process', 'flow network', {'weight': 0.6})
('markov decision process', 'mabinogion sheep problem', {'weight': 0.7})
('markov decision process', 'ellipsoid method', {'weight': 0.6})
('markov decision process', 'chain matrix multiplication', {'weight': 0.6})
('markov decision process', 'ieee', {'weight': 0.6})
('markov decision process', 'backtracking', {'weight': 0.6})
('markov decision process', 'nonlinear conjugate gradient method', {'weight': 0.6})
('markov decision process', 'dynamic problem', {'weight': 0.6})
('markov decision process', 'stochastic games', {'weight': 0.7})
('markov decision process', 'trust region', {'weight': 0.6})
('markov decision process', 'q-learning', {'weight': 0.7})
('markov decision process', 'function (mathematics)', {'weight': 0.6})
('markov decision process', 'minimum spanning tree', {'weight': 0.6})
('markov decision process', 'context-free grammar', {'weight': 0.6})
('markov decision process', 'branch and cut', {'weight': 0.6})
('markov decision process', 'state variable', {'weight': 0.6})
('markov decision process', 'treewidth', {'weight': 0.6})
('markov decision process', 'overlapping subproblem', {'weight': 0.6})
('markov decision process', 'taylor & francis', {'weight': 0.6})
('markov decision process', 'cutting-plane method', {'weight': 0.6})
('markov decision process', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('markov decision process', 'method of undetermined coefficients', {'weight': 0.6})
('markov decision process', 'combinatorial optimization', {'weight': 0.6})
('markov decision process', "newton's method in optimization", {'weight': 0.6})
('markov decision process', 'matrix chain multiplication', {'weight': 0.6})
('markov decision process', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('markov decision process', 'dynamic time warping', {'weight': 0.6})
('markov decision process', 'dynamic programming language', {'weight': 0.6})
('markov decision process', 'call-by-need', {'weight': 0.6})
('markov decision process', 'big-o notation', {'weight': 0.6})
('markov decision process', 'comparison of optimization software', {'weight': 0.6})
('markov decision process', 'quadratic programming', {'weight': 0.6})
('markov decision process', 'common lisp', {'weight': 0.6})
('markov decision process', 'barrier function', {'weight': 0.6})
('markov decision process', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('markov decision process', 'gradient descent', {'weight': 0.6})
('markov decision process', 'patricia selinger', {'weight': 0.6})
('markov decision process', 'discounting', {'weight': 0.6})
('markov decision process', 'ronald l. rivest', {'weight': 0.6})
('markov decision process', 'iterative method', {'weight': 0.6})
('markov decision process', 'limited-memory bfgs', {'weight': 0.6})
('markov decision process', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('markov decision process', 'probabilistic automata', {'weight': 0.7})
('markov decision process', 'longest common substring problem', {'weight': 0.6})
('markov decision process', 'clifford stein', {'weight': 0.6})
('markov decision process', 'quantum finite automata', {'weight': 0.7})
('markov decision process', 'computer chess', {'weight': 0.6})
('markov decision process', 'linear programming', {'weight': 0.6})
('markov decision process', 'bitonic tour', {'weight': 0.6})
('markov decision process', 'linear search problem', {'weight': 0.6})
('markov decision process', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('markov decision process', 'systems analysis', {'weight': 0.6})
('markov decision process', 'capital (economics)', {'weight': 0.6})
('markov decision process', 'levenshtein distance', {'weight': 0.6})
('markov decision process', 'nonlinear programming', {'weight': 0.6})
('markov decision process', 'computational complexity of mathematical operations', {'weight': 0.6})
('markov decision process', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('markov decision process', 'gradient', {'weight': 0.6})
('markov decision process', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('markov decision process', 'markov processes', {'weight': 0.5})
('markov decision process', 'bulletin of the american mathematical society', {'weight': 0.6})
('markov decision process', 'u.s. english', {'weight': 0.6})
('markov decision process', 'refutation table', {'weight': 0.6})
('markov decision process', 'heuristic algorithm', {'weight': 0.6})
('markov decision process', 'successive linear programming', {'weight': 0.6})
('markov decision process', 'optimal substructure', {'weight': 0.6})
('markov decision process', 'programming language', {'weight': 0.6})
('markov decision process', 'mergesort', {'weight': 0.6})
('markov decision process', "dijkstra's algorithm", {'weight': 0.6})
('markov decision process', 'subgradient method', {'weight': 0.6})
('markov decision process', 'call-by-name', {'weight': 0.6})
('markov decision process', 'longest increasing subsequence problem', {'weight': 0.6})
('markov decision process', 'edward prescott', {'weight': 0.6})
('markov decision process', 'exponential time', {'weight': 0.6})
('markov decision process', 'principle of optimality', {'weight': 0.6})
('markov decision process', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('markov decision process', 'mathematical game', {'weight': 0.6})
('markov decision process', 'nancy stokey', {'weight': 0.6})
('markov decision process', 'approximation algorithm', {'weight': 0.6})
('markov decision process', 'discrete-time', {'weight': 0.6})
('markov decision process', 'cyk algorithm', {'weight': 0.6})
('markov decision process', 'markov decision process', {'weight': 1})
('markov decision process', "powell's method", {'weight': 0.6})
('markov decision process', 'wolfe conditions', {'weight': 0.6})
('markov decision process', 'convexity in economics', {'weight': 0.6})
('markov decision process', 'transposition table', {'weight': 0.6})
('markov decision process', 'economics', {'weight': 0.6})
('markov decision process', 'backward induction', {'weight': 0.6})
('markov decision process', 'golden section search', {'weight': 0.6})
('markov decision process', 'edit distance', {'weight': 0.6})
('markov decision process', 'tree structure', {'weight': 0.6})
('markov decision process', 'exchange algorithm', {'weight': 0.6})
('markov decision process', 'optimal decisions', {'weight': 0.5})
('markov decision process', 'dover publications', {'weight': 0.6})
('markov decision process', 'seam carving', {'weight': 0.6})
('markov decision process', 'recursive least squares', {'weight': 0.6})
('markov decision process', 'metaheuristic', {'weight': 0.6})
('markov decision process', 'quasi-newton method', {'weight': 0.6})
('markov decision process', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('markov decision process', 'robert e. lucas', {'weight': 0.6})
('markov decision process', 'optimal control', {'weight': 0.7})
('markov decision process', 'non-convexity (economics)', {'weight': 0.6})
('markov decision process', 'sr1 formula', {'weight': 0.6})
('markov decision process', 'mathematical reviews', {'weight': 0.6})
('markov decision process', 'puzzle', {'weight': 0.6})
('markov decision process', 'associative array', {'weight': 0.6})
('markov decision process', 'shortest path problem', {'weight': 0.6})
('markov decision process', 'dynamic algorithm', {'weight': 0.6})
('markov decision process', 'augmented lagrangian method', {'weight': 0.6})
('markov decision process', 'charles delisi', {'weight': 0.6})
('markov decision process', 'greedy algorithm', {'weight': 0.6})
('markov decision process', "karmarkar's algorithm", {'weight': 0.6})
('markov decision process', 'lattice models', {'weight': 0.6})
('markov decision process', 'utility', {'weight': 0.6})
('markov decision process', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('markov decision process', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('markov decision process', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('markov decision process', 'international standard book number', {'weight': 0.6})
('markov decision process', 'undirected graph', {'weight': 0.6})
('markov decision process', 'scheme (programming language)', {'weight': 0.6})
('markov decision process', 'rna structure', {'weight': 0.6})
('markov decision process', 'hanoi', {'weight': 0.6})
('markov decision process', 'perl', {'weight': 0.6})
('markov decision process', 'digital object identifier', {'weight': 0.6})
('markov decision process', 'sequential quadratic programming', {'weight': 0.6})
('markov decision process', "dinic's algorithm", {'weight': 0.6})
('markov decision process', 'pseudo-polynomial time', {'weight': 0.6})
('markov decision process', 'partition problem', {'weight': 0.6})
('markov decision process', 'stochastic programming', {'weight': 0.6})
('markov decision process', 'hill climbing', {'weight': 0.6})
('markov decision process', 'top-down', {'weight': 0.6})
('markov decision process', 'de boor algorithm', {'weight': 0.6})
('markov decision process', 'optimization algorithm', {'weight': 0.6})
('markov decision process', "kruskal's algorithm", {'weight': 0.6})
('markov decision process', 'jacques philippe marie binet', {'weight': 0.6})
('markov decision process', 'tabu search', {'weight': 0.6})
('markov decision process', 'divide and conquer algorithm', {'weight': 0.6})
('markov decision process', "johnson's algorithm", {'weight': 0.6})
('markov decision process', 'evolutionary algorithm', {'weight': 0.6})
('markov decision process', 'clique-width', {'weight': 0.6})
('markov decision process', 'recursive economics', {'weight': 0.7})
('markov decision process', 'dynamic programming', {'weight': 0.7})
('markov decision process', 'subroutine', {'weight': 0.6})
('markov decision process', 'simulated annealing', {'weight': 0.6})
('markov decision process', 'tower of hanoi', {'weight': 0.6})
('markov decision process', 'branch and bound', {'weight': 0.6})
('markov decision process', 'engineering', {'weight': 0.6})
('markov decision process', 'matroid', {'weight': 0.6})
('markov decision process', 'viterbi algorithm', {'weight': 0.6})
('markov decision process', "lemke's algorithm", {'weight': 0.6})
('markov decision process', 'simplex algorithm', {'weight': 0.6})
('markov decision process', 'local search (optimization)', {'weight': 0.6})
('markov decision process', 'hessian matrix', {'weight': 0.6})
('markov decision process', 'hamilton\xe2\x80\x93jacobi\xe2\x80\x93bellman equation', {'weight': 0.7})
('markov decision process', 'ibm system r', {'weight': 0.6})
('markov decision process', 'penalty method', {'weight': 0.6})
('markov decision process', 'prolog', {'weight': 0.6})
('markov decision process', 'time-invariant system', {'weight': 0.6})
('markov decision process', 'criss-cross algorithm', {'weight': 0.6})
('markov decision process', 'revised simplex algorithm', {'weight': 0.6})
('markov decision process', 'partially observable markov decision process', {'weight': 0.7})
('markov decision process', 'the mathematical association of america', {'weight': 0.6})
('markov decision process', 'line search', {'weight': 0.6})
('markov decision process', 'j (programming language)', {'weight': 0.6})
('markov decision process', 'word wrap', {'weight': 0.6})
('markov decision process', 'subset sum problem', {'weight': 0.6})
('markov decision process', 'integer programming', {'weight': 0.6})
('markov decision process', 'nucleosome', {'weight': 0.6})
('markov decision process', 'earley algorithm', {'weight': 0.6})
('markov decision process', 'referential transparency (computer science)', {'weight': 0.6})
('markov decision process', 'recursion', {'weight': 0.6})
('markov decision process', 'mathematica', {'weight': 0.6})
('markov decision process', 'quicksort', {'weight': 0.6})
('markov decision process', 'recursion (computer science)', {'weight': 0.6})
('markov decision process', 'checkerboard', {'weight': 0.6})
('markov decision process', 'computer science', {'weight': 0.6})
('markov decision process', 'brute-force search', {'weight': 0.6})
('markov decision process', 'mathematics', {'weight': 0.6})
('markov decision process', 'depth-first search', {'weight': 0.6})
('markov decision process', 'top-down and bottom-up design', {'weight': 0.6})
('markov decision process', 'correspondence problem', {'weight': 0.6})
('markov decision process', 'transcription factor', {'weight': 0.6})
('markov decision process', 'tree decomposition', {'weight': 0.6})
('markov decision process', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('markov decision process', 'structural alignment', {'weight': 0.6})
('markov decision process', 'local convergence', {'weight': 0.6})
('markov decision process', 'knapsack problem', {'weight': 0.6})
('markov decision process', 'graph algorithm', {'weight': 0.6})
('markov decision process', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('markov decision process', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('markov decision process', 'hidden markov model', {'weight': 0.6})
('markov decision process', 'string (computer science)', {'weight': 0.6})
('markov decision process', 'bioinformatics', {'weight': 0.6})
('markov decision process', 'genetics', {'weight': 0.6})
('markov decision process', 'mathematical optimization', {'weight': 0.6})
('markov decision process', 'artificial neural networks', {'weight': 0.6})
('markov decision process', 'introduction to algorithms', {'weight': 0.6})
('markov decision process', 'thomas h. cormen', {'weight': 0.6})
('markov decision process', 'music information retrieval', {'weight': 0.6})
('markov decision process', 'beat (music)', {'weight': 0.6})
('markov decision process', 'longest common subsequence problem', {'weight': 0.6})
('markov decision process', 'convex minimization', {'weight': 0.6})
('markov decision process', 'stochastic control', {'weight': 0.5})
('markov decision process', 'successive parabolic interpolation', {'weight': 0.6})
('markov decision process', 'fibonacci sequence', {'weight': 0.6})
('markov decision process', 'maximum subarray problem', {'weight': 0.6})
('markov decision process', 'convex optimization', {'weight': 0.6})
('markov decision process', 'memoization', {'weight': 0.6})
('markov decision process', 'richard bellman', {'weight': 0.6})
('markov decision process', 'exponential growth', {'weight': 0.6})
('markov decision process', 'charles e. leiserson', {'weight': 0.6})
('markov decision process', 'charles erwin wilson', {'weight': 0.6})
('markov decision process', 'interval scheduling', {'weight': 0.6})
('markov decision process', 'chart parser', {'weight': 0.6})
('markov decision process', 'travelling salesman problem', {'weight': 0.6})
('markov decision process', 'bellman equation', {'weight': 0.7})
('optimal control', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('optimal control', 'photoshop', {'weight': 0.6})
('optimal control', 'sequence alignment', {'weight': 0.6})
('optimal control', 'jmodelica.org', {'weight': 0.7})
('optimal control', 'flow network', {'weight': 0.6})
('optimal control', 'active inference', {'weight': 0.7})
('optimal control', 'gauss pseudospectral method', {'weight': 0.7})
('optimal control', 'ellipsoid method', {'weight': 0.6})
('optimal control', 'chain matrix multiplication', {'weight': 0.6})
('optimal control', 'ieee', {'weight': 0.6})
('optimal control', 'backtracking', {'weight': 0.6})
('optimal control', 'nonlinear conjugate gradient method', {'weight': 0.6})
('optimal control', 'dynamic problem', {'weight': 0.6})
('optimal control', 'trust region', {'weight': 0.6})
('optimal control', 'function (mathematics)', {'weight': 0.6})
('optimal control', 'minimum spanning tree', {'weight': 0.6})
('optimal control', 'context-free grammar', {'weight': 0.6})
('optimal control', 'branch and cut', {'weight': 0.6})
('optimal control', 'state variable', {'weight': 0.6})
('optimal control', 'treewidth', {'weight': 0.6})
('optimal control', 'overlapping subproblem', {'weight': 0.6})
('optimal control', 'taylor & francis', {'weight': 0.6})
('optimal control', 'cutting-plane method', {'weight': 0.6})
('optimal control', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('optimal control', 'method of undetermined coefficients', {'weight': 0.6})
('optimal control', 'combinatorial optimization', {'weight': 0.6})
('optimal control', "newton's method in optimization", {'weight': 0.6})
('optimal control', 'trajectory optimization', {'weight': 0.7})
('optimal control', 'matrix chain multiplication', {'weight': 0.6})
('optimal control', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('optimal control', 'dynamic time warping', {'weight': 0.6})
('optimal control', 'dynamic programming language', {'weight': 0.6})
('optimal control', 'call-by-need', {'weight': 0.6})
('optimal control', 'big-o notation', {'weight': 0.6})
('optimal control', 'dido', {'weight': 0.7})
('optimal control', 'comparison of optimization software', {'weight': 0.6})
('optimal control', 'quadratic programming', {'weight': 0.6})
('optimal control', 'common lisp', {'weight': 0.6})
('optimal control', 'barrier function', {'weight': 0.6})
('optimal control', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('optimal control', 'gradient descent', {'weight': 0.6})
('optimal control', 'patricia selinger', {'weight': 0.6})
('optimal control', 'discounting', {'weight': 0.6})
('optimal control', 'ronald l. rivest', {'weight': 0.6})
('optimal control', 'iterative method', {'weight': 0.6})
('optimal control', 'limited-memory bfgs', {'weight': 0.6})
('optimal control', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('optimal control', 'longest common substring problem', {'weight': 0.6})
('optimal control', 'clifford stein', {'weight': 0.6})
('optimal control', 'computer chess', {'weight': 0.6})
('optimal control', 'linear programming', {'weight': 0.6})
('optimal control', 'bitonic tour', {'weight': 0.6})
('optimal control', 'linear search problem', {'weight': 0.6})
('optimal control', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('optimal control', 'systems analysis', {'weight': 0.6})
('optimal control', 'capital (economics)', {'weight': 0.6})
('optimal control', 'levenshtein distance', {'weight': 0.6})
('optimal control', 'nonlinear programming', {'weight': 0.6})
('optimal control', 'pseudospectral optimal control', {'weight': 0.7})
('optimal control', 'computational complexity of mathematical operations', {'weight': 0.6})
('optimal control', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('optimal control', 'gradient', {'weight': 0.6})
('optimal control', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('optimal control', 'bulletin of the american mathematical society', {'weight': 0.6})
('optimal control', 'propt (optimal control software for matlab)', {'weight': 0.7})
('optimal control', 'u.s. english', {'weight': 0.6})
('optimal control', 'refutation table', {'weight': 0.6})
('optimal control', 'heuristic algorithm', {'weight': 0.6})
('optimal control', 'successive linear programming', {'weight': 0.6})
('optimal control', 'optimal substructure', {'weight': 0.6})
('optimal control', 'programming language', {'weight': 0.6})
('optimal control', 'mergesort', {'weight': 0.6})
('optimal control', "dijkstra's algorithm", {'weight': 0.6})
('optimal control', 'subgradient method', {'weight': 0.6})
('optimal control', 'call-by-name', {'weight': 0.6})
('optimal control', 'longest increasing subsequence problem', {'weight': 0.6})
('optimal control', 'edward prescott', {'weight': 0.6})
('optimal control', 'exponential time', {'weight': 0.6})
('optimal control', 'principle of optimality', {'weight': 0.6})
('optimal control', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('optimal control', 'mathematical game', {'weight': 0.6})
('optimal control', 'nancy stokey', {'weight': 0.6})
('optimal control', 'approximation algorithm', {'weight': 0.6})
('optimal control', 'kalman filter', {'weight': 0.7})
('optimal control', 'discrete-time', {'weight': 0.6})
('optimal control', 'cyk algorithm', {'weight': 0.6})
('optimal control', 'markov decision process', {'weight': 0.6})
('optimal control', "powell's method", {'weight': 0.6})
('optimal control', 'wolfe conditions', {'weight': 0.6})
('optimal control', 'convexity in economics', {'weight': 0.6})
('optimal control', 'transposition table', {'weight': 0.6})
('optimal control', 'economics', {'weight': 0.6})
('optimal control', 'backward induction', {'weight': 0.6})
('optimal control', 'golden section search', {'weight': 0.6})
('optimal control', 'edit distance', {'weight': 0.6})
('optimal control', 'tree structure', {'weight': 0.6})
('optimal control', 'pursuit-evasion', {'weight': 0.7})
('optimal control', 'exchange algorithm', {'weight': 0.6})
('optimal control', 'dover publications', {'weight': 0.6})
('optimal control', 'seam carving', {'weight': 0.6})
('optimal control', 'recursive least squares', {'weight': 0.6})
('optimal control', 'metaheuristic', {'weight': 0.6})
('optimal control', 'quasi-newton method', {'weight': 0.6})
('optimal control', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('optimal control', 'robert e. lucas', {'weight': 0.6})
('optimal control', 'optimal control', {'weight': 1})
('optimal control', 'non-convexity (economics)', {'weight': 0.6})
('optimal control', 'snopt', {'weight': 0.7})
('optimal control', 'sr1 formula', {'weight': 0.6})
('optimal control', 'mathematical reviews', {'weight': 0.6})
('optimal control', 'puzzle', {'weight': 0.6})
('optimal control', 'associative array', {'weight': 0.6})
('optimal control', 'shortest path problem', {'weight': 0.6})
('optimal control', 'dynamic algorithm', {'weight': 0.6})
('optimal control', 'augmented lagrangian method', {'weight': 0.6})
('optimal control', 'charles delisi', {'weight': 0.6})
('optimal control', 'greedy algorithm', {'weight': 0.6})
('optimal control', "karmarkar's algorithm", {'weight': 0.6})
('optimal control', 'lattice models', {'weight': 0.6})
('optimal control', 'utility', {'weight': 0.6})
('optimal control', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('optimal control', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('optimal control', 'model predictive control', {'weight': 0.7})
('optimal control', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('optimal control', 'international standard book number', {'weight': 0.6})
('optimal control', 'undirected graph', {'weight': 0.6})
('optimal control', 'scheme (programming language)', {'weight': 0.6})
('optimal control', 'rna structure', {'weight': 0.6})
('optimal control', 'hanoi', {'weight': 0.6})
('optimal control', 'perl', {'weight': 0.6})
('optimal control', 'digital object identifier', {'weight': 0.6})
('optimal control', 'sequential quadratic programming', {'weight': 0.6})
('optimal control', "dinic's algorithm", {'weight': 0.6})
('optimal control', 'pseudo-polynomial time', {'weight': 0.6})
('optimal control', 'partition problem', {'weight': 0.6})
('optimal control', 'stochastic programming', {'weight': 0.6})
('optimal control', 'bellman pseudospectral method', {'weight': 0.7})
('optimal control', 'hill climbing', {'weight': 0.6})
('optimal control', 'top-down', {'weight': 0.6})
('optimal control', 'de boor algorithm', {'weight': 0.6})
('optimal control', 'optimization algorithm', {'weight': 0.6})
('optimal control', "kruskal's algorithm", {'weight': 0.6})
('optimal control', 'sliding mode control', {'weight': 0.7})
('optimal control', 'jacques philippe marie binet', {'weight': 0.6})
('optimal control', 'tabu search', {'weight': 0.6})
('optimal control', 'divide and conquer algorithm', {'weight': 0.6})
('optimal control', "johnson's algorithm", {'weight': 0.6})
('optimal control', 'evolutionary algorithm', {'weight': 0.6})
('optimal control', 'clique-width', {'weight': 0.6})
('optimal control', 'dynamic programming', {'weight': 0.7})
('optimal control', 'subroutine', {'weight': 0.6})
('optimal control', 'generalized filtering', {'weight': 0.7})
('optimal control', 'simulated annealing', {'weight': 0.6})
('optimal control', 'tower of hanoi', {'weight': 0.6})
('optimal control', 'branch and bound', {'weight': 0.6})
('optimal control', 'engineering', {'weight': 0.6})
('optimal control', 'matroid', {'weight': 0.6})
('optimal control', 'viterbi algorithm', {'weight': 0.6})
('optimal control', "lemke's algorithm", {'weight': 0.6})
('optimal control', 'simplex algorithm', {'weight': 0.6})
('optimal control', 'local search (optimization)', {'weight': 0.6})
('optimal control', 'hessian matrix', {'weight': 0.6})
('optimal control', 'ibm system r', {'weight': 0.6})
('optimal control', 'penalty method', {'weight': 0.6})
('optimal control', 'prolog', {'weight': 0.6})
('optimal control', 'time-invariant system', {'weight': 0.6})
('optimal control', 'criss-cross algorithm', {'weight': 0.6})
('optimal control', 'apmonitor', {'weight': 0.7})
('optimal control', 'revised simplex algorithm', {'weight': 0.6})
('optimal control', 'dnss point', {'weight': 0.7})
('optimal control', 'the mathematical association of america', {'weight': 0.6})
('optimal control', 'line search', {'weight': 0.6})
('optimal control', 'j (programming language)', {'weight': 0.6})
('optimal control', 'word wrap', {'weight': 0.6})
('optimal control', 'subset sum problem', {'weight': 0.6})
('optimal control', 'linear-quadratic regulator', {'weight': 0.7})
('optimal control', 'integer programming', {'weight': 0.6})
('optimal control', 'nucleosome', {'weight': 0.6})
('optimal control', 'earley algorithm', {'weight': 0.6})
('optimal control', 'referential transparency (computer science)', {'weight': 0.6})
('optimal control', 'recursion', {'weight': 0.6})
('optimal control', 'mathematica', {'weight': 0.6})
('optimal control', 'quicksort', {'weight': 0.6})
('optimal control', 'recursion (computer science)', {'weight': 0.6})
('optimal control', 'checkerboard', {'weight': 0.6})
('optimal control', 'computer science', {'weight': 0.6})
('optimal control', 'brute-force search', {'weight': 0.6})
('optimal control', 'mathematics', {'weight': 0.6})
('optimal control', 'depth-first search', {'weight': 0.6})
('optimal control', 'top-down and bottom-up design', {'weight': 0.6})
('optimal control', 'correspondence problem', {'weight': 0.6})
('optimal control', 'transcription factor', {'weight': 0.6})
('optimal control', 'tree decomposition', {'weight': 0.6})
('optimal control', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('optimal control', 'structural alignment', {'weight': 0.6})
('optimal control', 'local convergence', {'weight': 0.6})
('optimal control', 'knapsack problem', {'weight': 0.6})
('optimal control', 'graph algorithm', {'weight': 0.6})
('optimal control', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('optimal control', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('optimal control', 'hidden markov model', {'weight': 0.6})
('optimal control', 'string (computer science)', {'weight': 0.6})
('optimal control', 'bioinformatics', {'weight': 0.6})
('optimal control', 'genetics', {'weight': 0.6})
('optimal control', 'mathematical optimization', {'weight': 0.6})
('optimal control', 'artificial neural networks', {'weight': 0.6})
('optimal control', 'introduction to algorithms', {'weight': 0.6})
('optimal control', 'thomas h. cormen', {'weight': 0.6})
('optimal control', 'brachistochrone', {'weight': 0.7})
('optimal control', 'music information retrieval', {'weight': 0.6})
('optimal control', 'beat (music)', {'weight': 0.6})
('optimal control', 'longest common subsequence problem', {'weight': 0.6})
('optimal control', 'convex minimization', {'weight': 0.6})
('optimal control', 'stochastic control', {'weight': 0.7})
('optimal control', 'successive parabolic interpolation', {'weight': 0.6})
('optimal control', 'fibonacci sequence', {'weight': 0.6})
('optimal control', 'maximum subarray problem', {'weight': 0.6})
('optimal control', 'convex optimization', {'weight': 0.6})
('optimal control', 'memoization', {'weight': 0.6})
('optimal control', 'richard bellman', {'weight': 0.6})
('optimal control', 'exponential growth', {'weight': 0.6})
('optimal control', 'charles e. leiserson', {'weight': 0.6})
('optimal control', 'charles erwin wilson', {'weight': 0.6})
('optimal control', 'interval scheduling', {'weight': 0.6})
('optimal control', 'chart parser', {'weight': 0.6})
('optimal control', 'travelling salesman problem', {'weight': 0.6})
('optimal control', 'bellman equation', {'weight': 0.7})
('greedy algorithm', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('greedy algorithm', 'photoshop', {'weight': 0.6})
('greedy algorithm', 'sequence alignment', {'weight': 0.6})
('greedy algorithm', 'flow network', {'weight': 0.6})
('greedy algorithm', 'ellipsoid method', {'weight': 0.6})
('greedy algorithm', 'chain matrix multiplication', {'weight': 0.6})
('greedy algorithm', 'ieee', {'weight': 0.6})
('greedy algorithm', 'backtracking', {'weight': 0.6})
('greedy algorithm', 'exchange algorithms', {'weight': 0.5})
('greedy algorithm', 'dynamic problem', {'weight': 0.6})
('greedy algorithm', 'approximation algorithm', {'weight': 0.6})
('greedy algorithm', 'trust region', {'weight': 0.6})
('greedy algorithm', 'function (mathematics)', {'weight': 0.6})
('greedy algorithm', 'minimum spanning tree', {'weight': 0.6})
('greedy algorithm', 'context-free grammar', {'weight': 0.6})
('greedy algorithm', 'branch and cut', {'weight': 0.6})
('greedy algorithm', 'state variable', {'weight': 0.6})
('greedy algorithm', 'treewidth', {'weight': 0.6})
('greedy algorithm', 'optimization algorithms and methods', {'weight': 0.5})
('greedy algorithm', 'overlapping subproblem', {'weight': 0.6})
('greedy algorithm', 'taylor & francis', {'weight': 0.6})
('greedy algorithm', 'cutting-plane method', {'weight': 0.6})
('greedy algorithm', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('greedy algorithm', 'method of undetermined coefficients', {'weight': 0.6})
('greedy algorithm', 'combinatorial optimization', {'weight': 0.6})
('greedy algorithm', "newton's method in optimization", {'weight': 0.6})
('greedy algorithm', 'matrix chain multiplication', {'weight': 0.6})
('greedy algorithm', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('greedy algorithm', 'dynamic time warping', {'weight': 0.6})
('greedy algorithm', 'dynamic programming language', {'weight': 0.6})
('greedy algorithm', 'call-by-need', {'weight': 0.6})
('greedy algorithm', 'big-o notation', {'weight': 0.6})
('greedy algorithm', 'comparison of optimization software', {'weight': 0.6})
('greedy algorithm', 'quadratic programming', {'weight': 0.6})
('greedy algorithm', 'common lisp', {'weight': 0.6})
('greedy algorithm', 'barrier function', {'weight': 0.6})
('greedy algorithm', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('greedy algorithm', 'gradient descent', {'weight': 0.6})
('greedy algorithm', 'patricia selinger', {'weight': 0.6})
('greedy algorithm', 'discounting', {'weight': 0.6})
('greedy algorithm', 'ronald l. rivest', {'weight': 0.6})
('greedy algorithm', 'iterative method', {'weight': 0.6})
('greedy algorithm', 'limited-memory bfgs', {'weight': 0.6})
('greedy algorithm', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('greedy algorithm', 'longest common substring problem', {'weight': 0.6})
('greedy algorithm', 'clifford stein', {'weight': 0.6})
('greedy algorithm', 'computer chess', {'weight': 0.6})
('greedy algorithm', 'linear programming', {'weight': 0.6})
('greedy algorithm', 'bitonic tour', {'weight': 0.6})
('greedy algorithm', 'linear search problem', {'weight': 0.6})
('greedy algorithm', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('greedy algorithm', 'systems analysis', {'weight': 0.6})
('greedy algorithm', 'capital (economics)', {'weight': 0.6})
('greedy algorithm', 'levenshtein distance', {'weight': 0.6})
('greedy algorithm', 'nonlinear programming', {'weight': 0.6})
('greedy algorithm', 'genetics', {'weight': 0.6})
('greedy algorithm', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('greedy algorithm', 'gradient', {'weight': 0.6})
('greedy algorithm', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('greedy algorithm', 'bulletin of the american mathematical society', {'weight': 0.6})
('greedy algorithm', 'u.s. english', {'weight': 0.6})
('greedy algorithm', 'refutation table', {'weight': 0.6})
('greedy algorithm', 'heuristic algorithm', {'weight': 0.6})
('greedy algorithm', 'successive linear programming', {'weight': 0.6})
('greedy algorithm', 'optimal substructure', {'weight': 0.6})
('greedy algorithm', 'mathematics portal', {'weight': 0.7})
('greedy algorithm', 'programming language', {'weight': 0.6})
('greedy algorithm', 'mergesort', {'weight': 0.6})
('greedy algorithm', "dijkstra's algorithm", {'weight': 0.6})
('greedy algorithm', 'subgradient method', {'weight': 0.6})
('greedy algorithm', 'call-by-name', {'weight': 0.6})
('greedy algorithm', 'longest increasing subsequence problem', {'weight': 0.6})
('greedy algorithm', 'edward prescott', {'weight': 0.6})
('greedy algorithm', 'exponential time', {'weight': 0.6})
('greedy algorithm', 'principle of optimality', {'weight': 0.6})
('greedy algorithm', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('greedy algorithm', 'mathematical game', {'weight': 0.6})
('greedy algorithm', 'nancy stokey', {'weight': 0.6})
('greedy algorithm', 'nonlinear conjugate gradient method', {'weight': 0.6})
('greedy algorithm', 'discrete-time', {'weight': 0.6})
('greedy algorithm', 'cyk algorithm', {'weight': 0.6})
('greedy algorithm', 'markov decision process', {'weight': 0.6})
('greedy algorithm', "powell's method", {'weight': 0.6})
('greedy algorithm', 'matroid theory', {'weight': 0.5})
('greedy algorithm', 'convexity in economics', {'weight': 0.6})
('greedy algorithm', 'transposition table', {'weight': 0.6})
('greedy algorithm', 'economics', {'weight': 0.6})
('greedy algorithm', 'backward induction', {'weight': 0.6})
('greedy algorithm', 'golden section search', {'weight': 0.6})
('greedy algorithm', 'edit distance', {'weight': 0.6})
('greedy algorithm', 'tree structure', {'weight': 0.6})
('greedy algorithm', 'exchange algorithm', {'weight': 0.6})
('greedy algorithm', 'dover publications', {'weight': 0.6})
('greedy algorithm', 'seam carving', {'weight': 0.6})
('greedy algorithm', 'recursive least squares', {'weight': 0.6})
('greedy algorithm', 'metaheuristic', {'weight': 0.6})
('greedy algorithm', 'quasi-newton method', {'weight': 0.6})
('greedy algorithm', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('greedy algorithm', 'robert e. lucas', {'weight': 0.6})
('greedy algorithm', 'non-convexity (economics)', {'weight': 0.6})
('greedy algorithm', 'sr1 formula', {'weight': 0.6})
('greedy algorithm', 'mathematical reviews', {'weight': 0.6})
('greedy algorithm', 'puzzle', {'weight': 0.6})
('greedy algorithm', 'associative array', {'weight': 0.6})
('greedy algorithm', 'shortest path problem', {'weight': 0.6})
('greedy algorithm', 'dynamic algorithm', {'weight': 0.6})
('greedy algorithm', 'greedy algorithm for egyptian fractions', {'weight': 0.7})
('greedy algorithm', 'augmented lagrangian method', {'weight': 0.6})
('greedy algorithm', 'charles delisi', {'weight': 0.6})
('greedy algorithm', 'greedy algorithm', {'weight': 1})
('greedy algorithm', "karmarkar's algorithm", {'weight': 0.6})
('greedy algorithm', 'lattice models', {'weight': 0.6})
('greedy algorithm', 'utility', {'weight': 0.6})
('greedy algorithm', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('greedy algorithm', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('greedy algorithm', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('greedy algorithm', 'international standard book number', {'weight': 0.6})
('greedy algorithm', 'undirected graph', {'weight': 0.6})
('greedy algorithm', 'scheme (programming language)', {'weight': 0.6})
('greedy algorithm', 'rna structure', {'weight': 0.6})
('greedy algorithm', 'hanoi', {'weight': 0.6})
('greedy algorithm', 'perl', {'weight': 0.6})
('greedy algorithm', 'digital object identifier', {'weight': 0.6})
('greedy algorithm', 'sequential quadratic programming', {'weight': 0.6})
('greedy algorithm', "dinic's algorithm", {'weight': 0.6})
('greedy algorithm', 'pseudo-polynomial time', {'weight': 0.6})
('greedy algorithm', 'partition problem', {'weight': 0.6})
('greedy algorithm', 'stochastic programming', {'weight': 0.6})
('greedy algorithm', 'hill climbing', {'weight': 0.6})
('greedy algorithm', 'top-down', {'weight': 0.6})
('greedy algorithm', 'de boor algorithm', {'weight': 0.6})
('greedy algorithm', 'optimization algorithm', {'weight': 0.6})
('greedy algorithm', "kruskal's algorithm", {'weight': 0.6})
('greedy algorithm', 'combinatorial algorithms', {'weight': 0.5})
('greedy algorithm', 'jacques philippe marie binet', {'weight': 0.6})
('greedy algorithm', 'tabu search', {'weight': 0.6})
('greedy algorithm', 'computer science portal', {'weight': 0.7})
('greedy algorithm', 'divide and conquer algorithm', {'weight': 0.6})
('greedy algorithm', "johnson's algorithm", {'weight': 0.6})
('greedy algorithm', 'evolutionary algorithm', {'weight': 0.6})
('greedy algorithm', 'clique-width', {'weight': 0.6})
('greedy algorithm', 'wolfe conditions', {'weight': 0.6})
('greedy algorithm', 'dynamic programming', {'weight': 0.6})
('greedy algorithm', 'subroutine', {'weight': 0.6})
('greedy algorithm', 'simulated annealing', {'weight': 0.6})
('greedy algorithm', 'tower of hanoi', {'weight': 0.6})
('greedy algorithm', 'branch and bound', {'weight': 0.6})
('greedy algorithm', 'engineering', {'weight': 0.6})
('greedy algorithm', 'greedy source', {'weight': 0.7})
('greedy algorithm', 'matroid', {'weight': 0.7})
('greedy algorithm', 'viterbi algorithm', {'weight': 0.6})
('greedy algorithm', "lemke's algorithm", {'weight': 0.6})
('greedy algorithm', 'simplex algorithm', {'weight': 0.6})
('greedy algorithm', 'local search (optimization)', {'weight': 0.6})
('greedy algorithm', 'hessian matrix', {'weight': 0.6})
('greedy algorithm', 'ibm system r', {'weight': 0.6})
('greedy algorithm', 'penalty method', {'weight': 0.6})
('greedy algorithm', 'prolog', {'weight': 0.6})
('greedy algorithm', 'time-invariant system', {'weight': 0.6})
('greedy algorithm', 'criss-cross algorithm', {'weight': 0.6})
('greedy algorithm', 'revised simplex algorithm', {'weight': 0.6})
('greedy algorithm', 'the mathematical association of america', {'weight': 0.6})
('greedy algorithm', 'line search', {'weight': 0.6})
('greedy algorithm', 'j (programming language)', {'weight': 0.6})
('greedy algorithm', 'word wrap', {'weight': 0.6})
('greedy algorithm', 'epsilon-greedy strategy', {'weight': 0.7})
('greedy algorithm', 'subset sum problem', {'weight': 0.6})
('greedy algorithm', 'integer programming', {'weight': 0.6})
('greedy algorithm', 'nucleosome', {'weight': 0.6})
('greedy algorithm', 'earley algorithm', {'weight': 0.6})
('greedy algorithm', 'referential transparency (computer science)', {'weight': 0.6})
('greedy algorithm', 'recursion', {'weight': 0.6})
('greedy algorithm', 'mathematica', {'weight': 0.6})
('greedy algorithm', 'quicksort', {'weight': 0.6})
('greedy algorithm', 'recursion (computer science)', {'weight': 0.6})
('greedy algorithm', 'checkerboard', {'weight': 0.6})
('greedy algorithm', 'computer science', {'weight': 0.6})
('greedy algorithm', 'brute-force search', {'weight': 0.6})
('greedy algorithm', 'mathematics', {'weight': 0.6})
('greedy algorithm', 'depth-first search', {'weight': 0.6})
('greedy algorithm', 'top-down and bottom-up design', {'weight': 0.6})
('greedy algorithm', 'correspondence problem', {'weight': 0.6})
('greedy algorithm', 'transcription factor', {'weight': 0.6})
('greedy algorithm', 'tree decomposition', {'weight': 0.6})
('greedy algorithm', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('greedy algorithm', 'structural alignment', {'weight': 0.6})
('greedy algorithm', 'local convergence', {'weight': 0.6})
('greedy algorithm', 'knapsack problem', {'weight': 0.6})
('greedy algorithm', 'graph algorithm', {'weight': 0.6})
('greedy algorithm', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('greedy algorithm', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('greedy algorithm', 'hidden markov model', {'weight': 0.6})
('greedy algorithm', 'string (computer science)', {'weight': 0.6})
('greedy algorithm', 'bioinformatics', {'weight': 0.6})
('greedy algorithm', 'computational complexity of mathematical operations', {'weight': 0.6})
('greedy algorithm', 'mathematical optimization', {'weight': 0.6})
('greedy algorithm', 'artificial neural networks', {'weight': 0.6})
('greedy algorithm', 'introduction to algorithms', {'weight': 0.6})
('greedy algorithm', 'thomas h. cormen', {'weight': 0.6})
('greedy algorithm', 'music information retrieval', {'weight': 0.6})
('greedy algorithm', 'beat (music)', {'weight': 0.6})
('greedy algorithm', 'longest common subsequence problem', {'weight': 0.6})
('greedy algorithm', 'convex minimization', {'weight': 0.6})
('greedy algorithm', 'successive parabolic interpolation', {'weight': 0.6})
('greedy algorithm', 'fibonacci sequence', {'weight': 0.6})
('greedy algorithm', 'maximum subarray problem', {'weight': 0.6})
('greedy algorithm', 'convex optimization', {'weight': 0.6})
('greedy algorithm', 'memoization', {'weight': 0.6})
('greedy algorithm', 'richard bellman', {'weight': 0.6})
('greedy algorithm', 'exponential growth', {'weight': 0.6})
('greedy algorithm', 'charles e. leiserson', {'weight': 0.6})
('greedy algorithm', 'charles erwin wilson', {'weight': 0.6})
('greedy algorithm', 'interval scheduling', {'weight': 0.6})
('greedy algorithm', 'chart parser', {'weight': 0.6})
('greedy algorithm', 'travelling salesman problem', {'weight': 0.6})
('greedy algorithm', 'bellman equation', {'weight': 0.6})
('lattice models', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('lattice models', 'photoshop', {'weight': 0.6})
('lattice models', 'sequence alignment', {'weight': 0.6})
('lattice models', 'flow network', {'weight': 0.6})
('lattice models', 'ellipsoid method', {'weight': 0.6})
('lattice models', 'chain matrix multiplication', {'weight': 0.6})
('lattice models', 'ieee', {'weight': 0.6})
('lattice models', 'backtracking', {'weight': 0.6})
('lattice models', 'nonlinear conjugate gradient method', {'weight': 0.6})
('lattice models', 'dynamic problem', {'weight': 0.6})
('lattice models', 'trust region', {'weight': 0.6})
('lattice models', 'function (mathematics)', {'weight': 0.6})
('lattice models', 'minimum spanning tree', {'weight': 0.6})
('lattice models', 'context-free grammar', {'weight': 0.6})
('lattice models', 'branch and cut', {'weight': 0.6})
('lattice models', 'state variable', {'weight': 0.6})
('lattice models', 'treewidth', {'weight': 0.6})
('lattice models', 'overlapping subproblem', {'weight': 0.6})
('lattice models', 'taylor & francis', {'weight': 0.6})
('lattice models', 'cutting-plane method', {'weight': 0.6})
('lattice models', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('lattice models', 'method of undetermined coefficients', {'weight': 0.6})
('lattice models', 'combinatorial optimization', {'weight': 0.6})
('lattice models', "newton's method in optimization", {'weight': 0.6})
('lattice models', 'matrix chain multiplication', {'weight': 0.6})
('lattice models', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('lattice models', 'dynamic time warping', {'weight': 0.6})
('lattice models', 'dynamic programming language', {'weight': 0.6})
('lattice models', 'call-by-need', {'weight': 0.6})
('lattice models', 'big-o notation', {'weight': 0.6})
('lattice models', 'comparison of optimization software', {'weight': 0.6})
('lattice models', 'quadratic programming', {'weight': 0.6})
('lattice models', 'common lisp', {'weight': 0.6})
('lattice models', 'barrier function', {'weight': 0.6})
('lattice models', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('lattice models', 'gradient descent', {'weight': 0.6})
('lattice models', 'patricia selinger', {'weight': 0.6})
('lattice models', 'discounting', {'weight': 0.6})
('lattice models', 'ronald l. rivest', {'weight': 0.6})
('lattice models', 'iterative method', {'weight': 0.6})
('lattice models', 'limited-memory bfgs', {'weight': 0.6})
('lattice models', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('lattice models', 'longest common substring problem', {'weight': 0.6})
('lattice models', 'clifford stein', {'weight': 0.6})
('lattice models', 'computer chess', {'weight': 0.6})
('lattice models', 'linear programming', {'weight': 0.6})
('lattice models', 'bitonic tour', {'weight': 0.6})
('lattice models', 'linear search problem', {'weight': 0.6})
('lattice models', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('lattice models', 'systems analysis', {'weight': 0.6})
('lattice models', 'capital (economics)', {'weight': 0.6})
('lattice models', 'levenshtein distance', {'weight': 0.6})
('lattice models', 'nonlinear programming', {'weight': 0.6})
('lattice models', 'computational complexity of mathematical operations', {'weight': 0.6})
('lattice models', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('lattice models', 'gradient', {'weight': 0.6})
('lattice models', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('lattice models', 'bulletin of the american mathematical society', {'weight': 0.6})
('lattice models', 'lattice models', {'weight': 1})
('lattice models', 'refutation table', {'weight': 0.6})
('lattice models', 'heuristic algorithm', {'weight': 0.6})
('lattice models', 'successive linear programming', {'weight': 0.6})
('lattice models', 'optimal substructure', {'weight': 0.6})
('lattice models', 'programming language', {'weight': 0.6})
('lattice models', 'mergesort', {'weight': 0.6})
('lattice models', "dijkstra's algorithm", {'weight': 0.6})
('lattice models', 'subgradient method', {'weight': 0.6})
('lattice models', 'call-by-name', {'weight': 0.6})
('lattice models', 'longest increasing subsequence problem', {'weight': 0.6})
('lattice models', 'edward prescott', {'weight': 0.6})
('lattice models', 'exponential time', {'weight': 0.6})
('lattice models', 'principle of optimality', {'weight': 0.6})
('lattice models', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('lattice models', 'mathematical game', {'weight': 0.6})
('lattice models', 'nancy stokey', {'weight': 0.6})
('lattice models', 'approximation algorithm', {'weight': 0.6})
('lattice models', 'discrete-time', {'weight': 0.6})
('lattice models', 'cyk algorithm', {'weight': 0.6})
('lattice models', 'markov decision process', {'weight': 0.6})
('lattice models', "powell's method", {'weight': 0.6})
('lattice models', 'wolfe conditions', {'weight': 0.6})
('lattice models', 'convexity in economics', {'weight': 0.6})
('lattice models', 'transposition table', {'weight': 0.6})
('lattice models', 'economics', {'weight': 0.6})
('lattice models', 'backward induction', {'weight': 0.6})
('lattice models', 'golden section search', {'weight': 0.6})
('lattice models', 'edit distance', {'weight': 0.6})
('lattice models', 'tree structure', {'weight': 0.6})
('lattice models', 'exchange algorithm', {'weight': 0.6})
('lattice models', 'dover publications', {'weight': 0.6})
('lattice models', 'seam carving', {'weight': 0.6})
('lattice models', 'recursive least squares', {'weight': 0.6})
('lattice models', 'metaheuristic', {'weight': 0.6})
('lattice models', 'quasi-newton method', {'weight': 0.6})
('lattice models', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('lattice models', 'robert e. lucas', {'weight': 0.6})
('lattice models', 'non-convexity (economics)', {'weight': 0.6})
('lattice models', 'sr1 formula', {'weight': 0.6})
('lattice models', 'mathematical reviews', {'weight': 0.6})
('lattice models', 'puzzle', {'weight': 0.6})
('lattice models', 'associative array', {'weight': 0.6})
('lattice models', 'shortest path problem', {'weight': 0.6})
('lattice models', 'dynamic algorithm', {'weight': 0.6})
('lattice models', 'augmented lagrangian method', {'weight': 0.6})
('lattice models', 'charles delisi', {'weight': 0.6})
('lattice models', 'greedy algorithm', {'weight': 0.6})
('lattice models', "karmarkar's algorithm", {'weight': 0.6})
('lattice models', 'u.s. english', {'weight': 0.6})
('lattice models', 'utility', {'weight': 0.6})
('lattice models', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('lattice models', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('lattice models', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('lattice models', 'international standard book number', {'weight': 0.6})
('lattice models', 'undirected graph', {'weight': 0.6})
('lattice models', 'scheme (programming language)', {'weight': 0.6})
('lattice models', 'rna structure', {'weight': 0.6})
('lattice models', 'hanoi', {'weight': 0.6})
('lattice models', 'perl', {'weight': 0.6})
('lattice models', 'digital object identifier', {'weight': 0.6})
('lattice models', 'sequential quadratic programming', {'weight': 0.6})
('lattice models', "dinic's algorithm", {'weight': 0.6})
('lattice models', 'pseudo-polynomial time', {'weight': 0.6})
('lattice models', 'partition problem', {'weight': 0.6})
('lattice models', 'stochastic programming', {'weight': 0.6})
('lattice models', 'hill climbing', {'weight': 0.6})
('lattice models', 'top-down', {'weight': 0.6})
('lattice models', 'de boor algorithm', {'weight': 0.6})
('lattice models', 'optimization algorithm', {'weight': 0.6})
('lattice models', "kruskal's algorithm", {'weight': 0.6})
('lattice models', 'jacques philippe marie binet', {'weight': 0.6})
('lattice models', 'tabu search', {'weight': 0.6})
('lattice models', 'divide and conquer algorithm', {'weight': 0.6})
('lattice models', "johnson's algorithm", {'weight': 0.6})
('lattice models', 'evolutionary algorithm', {'weight': 0.6})
('lattice models', 'clique-width', {'weight': 0.6})
('lattice models', 'dynamic programming', {'weight': 0.6})
('lattice models', 'subroutine', {'weight': 0.6})
('lattice models', 'condensed matter physics', {'weight': 0.5})
('lattice models', 'simulated annealing', {'weight': 0.6})
('lattice models', 'tower of hanoi', {'weight': 0.6})
('lattice models', 'branch and bound', {'weight': 0.6})
('lattice models', 'engineering', {'weight': 0.6})
('lattice models', 'matroid', {'weight': 0.6})
('lattice models', 'viterbi algorithm', {'weight': 0.6})
('lattice models', "lemke's algorithm", {'weight': 0.6})
('lattice models', 'simplex algorithm', {'weight': 0.6})
('lattice models', 'local search (optimization)', {'weight': 0.6})
('lattice models', 'hessian matrix', {'weight': 0.6})
('lattice models', 'ibm system r', {'weight': 0.6})
('lattice models', 'penalty method', {'weight': 0.6})
('lattice models', 'prolog', {'weight': 0.6})
('lattice models', 'time-invariant system', {'weight': 0.6})
('lattice models', 'criss-cross algorithm', {'weight': 0.6})
('lattice models', 'condensed matter stubs', {'weight': 0.5})
('lattice models', 'revised simplex algorithm', {'weight': 0.6})
('lattice models', 'the mathematical association of america', {'weight': 0.6})
('lattice models', 'line search', {'weight': 0.6})
('lattice models', 'j (programming language)', {'weight': 0.6})
('lattice models', 'word wrap', {'weight': 0.6})
('lattice models', 'theoretical physics', {'weight': 0.5})
('lattice models', 'subset sum problem', {'weight': 0.6})
('lattice models', 'integer programming', {'weight': 0.6})
('lattice models', 'nucleosome', {'weight': 0.6})
('lattice models', 'earley algorithm', {'weight': 0.6})
('lattice models', 'referential transparency (computer science)', {'weight': 0.6})
('lattice models', 'recursion', {'weight': 0.6})
('lattice models', 'mathematica', {'weight': 0.6})
('lattice models', 'quicksort', {'weight': 0.6})
('lattice models', 'recursion (computer science)', {'weight': 0.6})
('lattice models', 'checkerboard', {'weight': 0.6})
('lattice models', 'computer science', {'weight': 0.6})
('lattice models', 'brute-force search', {'weight': 0.6})
('lattice models', 'mathematics', {'weight': 0.6})
('lattice models', 'depth-first search', {'weight': 0.6})
('lattice models', 'top-down and bottom-up design', {'weight': 0.6})
('lattice models', 'correspondence problem', {'weight': 0.6})
('lattice models', 'transcription factor', {'weight': 0.6})
('lattice models', 'tree decomposition', {'weight': 0.6})
('lattice models', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('lattice models', 'structural alignment', {'weight': 0.6})
('lattice models', 'local convergence', {'weight': 0.6})
('lattice models', 'knapsack problem', {'weight': 0.6})
('lattice models', 'graph algorithm', {'weight': 0.6})
('lattice models', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('lattice models', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('lattice models', 'hidden markov model', {'weight': 0.6})
('lattice models', 'string (computer science)', {'weight': 0.6})
('lattice models', 'bioinformatics', {'weight': 0.6})
('lattice models', 'genetics', {'weight': 0.6})
('lattice models', 'mathematical optimization', {'weight': 0.6})
('lattice models', 'artificial neural networks', {'weight': 0.6})
('lattice models', 'introduction to algorithms', {'weight': 0.6})
('lattice models', 'thomas h. cormen', {'weight': 0.6})
('lattice models', 'music information retrieval', {'weight': 0.6})
('lattice models', 'beat (music)', {'weight': 0.6})
('lattice models', 'longest common subsequence problem', {'weight': 0.6})
('lattice models', 'convex minimization', {'weight': 0.6})
('lattice models', 'successive parabolic interpolation', {'weight': 0.6})
('lattice models', 'fibonacci sequence', {'weight': 0.6})
('lattice models', 'maximum subarray problem', {'weight': 0.6})
('lattice models', 'convex optimization', {'weight': 0.6})
('lattice models', 'memoization', {'weight': 0.6})
('lattice models', 'richard bellman', {'weight': 0.6})
('lattice models', 'exponential growth', {'weight': 0.6})
('lattice models', 'charles e. leiserson', {'weight': 0.6})
('lattice models', 'charles erwin wilson', {'weight': 0.6})
('lattice models', 'interval scheduling', {'weight': 0.6})
('lattice models', 'chart parser', {'weight': 0.6})
('lattice models', 'travelling salesman problem', {'weight': 0.6})
('lattice models', 'bellman equation', {'weight': 0.6})
('international standard book number', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('international standard book number', 'photoshop', {'weight': 0.6})
('international standard book number', 'sequence alignment', {'weight': 0.6})
('international standard book number', 'flow network', {'weight': 0.6})
('international standard book number', 'checksum algorithms', {'weight': 0.5})
('international standard book number', 'ellipsoid method', {'weight': 0.6})
('international standard book number', 'chain matrix multiplication', {'weight': 0.6})
('international standard book number', 'ieee', {'weight': 0.6})
('international standard book number', 'backtracking', {'weight': 0.6})
('international standard book number', '[35]', {'weight': 0.7})
('international standard book number', 'nonlinear conjugate gradient method', {'weight': 0.6})
('international standard book number', 'dynamic problem', {'weight': 0.6})
('international standard book number', 'vd 17', {'weight': 0.7})
('international standard book number', 'trust region', {'weight': 0.6})
('international standard book number', 'function (mathematics)', {'weight': 0.6})
('international standard book number', 'minimum spanning tree', {'weight': 0.6})
('international standard book number', 'context-free grammar', {'weight': 0.6})
('international standard book number', 'lccn', {'weight': 0.7})
('international standard book number', 'branch and cut', {'weight': 0.6})
('international standard book number', 'state variable', {'weight': 0.6})
('international standard book number', 'treewidth', {'weight': 0.6})
('international standard book number', 'overlapping subproblem', {'weight': 0.6})
('international standard book number', 'taylor & francis', {'weight': 0.6})
('international standard book number', 'cutting-plane method', {'weight': 0.6})
('international standard book number', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('international standard book number', 'charles erwin wilson', {'weight': 0.6})
('international standard book number', 'iswn', {'weight': 0.7})
('international standard book number', 'list of group-1 isbn publisher codes', {'weight': 0.7})
('international standard book number', 'combinatorial optimization', {'weight': 0.6})
('international standard book number', "newton's method in optimization", {'weight': 0.6})
('international standard book number', 'matrix chain multiplication', {'weight': 0.6})
('international standard book number', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('international standard book number', 'issn', {'weight': 0.7})
('international standard book number', 'dynamic time warping', {'weight': 0.6})
('international standard book number', 'dynamic programming language', {'weight': 0.6})
('international standard book number', 'call-by-need', {'weight': 0.6})
('international standard book number', 'big-o notation', {'weight': 0.6})
('international standard book number', 'comparison of optimization software', {'weight': 0.6})
('international standard book number', 'quadratic programming', {'weight': 0.6})
('international standard book number', 'common lisp', {'weight': 0.6})
('international standard book number', 'barrier function', {'weight': 0.6})
('international standard book number', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('international standard book number', 'book publishing', {'weight': 0.5})
('international standard book number', 'gradient descent', {'weight': 0.6})
('international standard book number', 'patricia selinger', {'weight': 0.6})
('international standard book number', 'discounting', {'weight': 0.6})
('international standard book number', 'ismn', {'weight': 0.7})
('international standard book number', 'ronald l. rivest', {'weight': 0.6})
('international standard book number', 'iterative method', {'weight': 0.6})
('international standard book number', 'limited-memory bfgs', {'weight': 0.6})
('international standard book number', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('international standard book number', 'longest common substring problem', {'weight': 0.6})
('international standard book number', 'clifford stein', {'weight': 0.6})
('international standard book number', 'computer chess', {'weight': 0.6})
('international standard book number', 'linear programming', {'weight': 0.6})
('international standard book number', 'bitonic tour', {'weight': 0.6})
('international standard book number', 'linear search problem', {'weight': 0.6})
('international standard book number', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('international standard book number', 'systems analysis', {'weight': 0.6})
('international standard book number', 'capital (economics)', {'weight': 0.6})
('international standard book number', 'levenshtein distance', {'weight': 0.6})
('international standard book number', 'nonlinear programming', {'weight': 0.6})
('international standard book number', 'asin', {'weight': 0.7})
('international standard book number', 'computational complexity of mathematical operations', {'weight': 0.6})
('international standard book number', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('international standard book number', 'gradient', {'weight': 0.6})
('international standard book number', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('international standard book number', 'bulletin of the american mathematical society', {'weight': 0.6})
('international standard book number', 'u.s. english', {'weight': 0.6})
('international standard book number', 'refutation table', {'weight': 0.6})
('international standard book number', 'heuristic algorithm', {'weight': 0.6})
('international standard book number', 'successive linear programming', {'weight': 0.6})
('international standard book number', 'optimal substructure', {'weight': 0.6})
('international standard book number', 'special:booksources', {'weight': 0.7})
('international standard book number', 'programming language', {'weight': 0.6})
('international standard book number', 'mergesort', {'weight': 0.6})
('international standard book number', 'simulated annealing', {'weight': 0.6})
('international standard book number', 'subgradient method', {'weight': 0.6})
('international standard book number', 'call-by-name', {'weight': 0.6})
('international standard book number', 'longest increasing subsequence problem', {'weight': 0.6})
('international standard book number', 'edward prescott', {'weight': 0.6})
('international standard book number', 'exponential time', {'weight': 0.6})
('international standard book number', 'iso standards', {'weight': 0.5})
('international standard book number', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('international standard book number', 'mathematical game', {'weight': 0.6})
('international standard book number', 'nancy stokey', {'weight': 0.6})
('international standard book number', 'approximation algorithm', {'weight': 0.6})
('international standard book number', 'discrete-time', {'weight': 0.6})
('international standard book number', 'cyk algorithm', {'weight': 0.6})
('international standard book number', 'markov decision process', {'weight': 0.6})
('international standard book number', 'principle of optimality', {'weight': 0.6})
('international standard book number', 'method of undetermined coefficients', {'weight': 0.6})
('international standard book number', "powell's method", {'weight': 0.6})
('international standard book number', 'wolfe conditions', {'weight': 0.6})
('international standard book number', 'convexity in economics', {'weight': 0.6})
('international standard book number', 'criss-cross algorithm', {'weight': 0.6})
('international standard book number', 'transposition table', {'weight': 0.6})
('international standard book number', 'iswc', {'weight': 0.7})
('international standard book number', 'economics', {'weight': 0.6})
('international standard book number', 'backward induction', {'weight': 0.6})
('international standard book number', 'golden section search', {'weight': 0.6})
('international standard book number', 'edit distance', {'weight': 0.6})
('international standard book number', 'tree structure', {'weight': 0.6})
('international standard book number', 'exchange algorithm', {'weight': 0.6})
('international standard book number', 'dover publications', {'weight': 0.6})
('international standard book number', 'seam carving', {'weight': 0.6})
('international standard book number', 'recursive least squares', {'weight': 0.6})
('international standard book number', 'metaheuristic', {'weight': 0.6})
('international standard book number', 'quasi-newton method', {'weight': 0.6})
('international standard book number', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('international standard book number', 'robert e. lucas', {'weight': 0.6})
('international standard book number', 'non-convexity (economics)', {'weight': 0.6})
('international standard book number', 'sr1 formula', {'weight': 0.6})
('international standard book number', 'vd 16', {'weight': 0.7})
('international standard book number', 'mathematical reviews', {'weight': 0.6})
('international standard book number', 'puzzle', {'weight': 0.6})
('international standard book number', 'associative array', {'weight': 0.6})
('international standard book number', 'time-invariant system', {'weight': 0.6})
('international standard book number', 'shortest path problem', {'weight': 0.6})
('international standard book number', 'dynamic algorithm', {'weight': 0.6})
('international standard book number', 'augmented lagrangian method', {'weight': 0.6})
('international standard book number', 'charles delisi', {'weight': 0.6})
('international standard book number', 'greedy algorithm', {'weight': 0.6})
('international standard book number', "karmarkar's algorithm", {'weight': 0.6})
('international standard book number', 'lattice models', {'weight': 0.6})
('international standard book number', 'utility', {'weight': 0.6})
('international standard book number', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('international standard book number', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('international standard book number', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('international standard book number', 'international standard book number', {'weight': 1})
('international standard book number', 'undirected graph', {'weight': 0.6})
('international standard book number', 'scheme (programming language)', {'weight': 0.6})
('international standard book number', 'rna structure', {'weight': 0.6})
('international standard book number', 'hanoi', {'weight': 0.6})
('international standard book number', 'perl', {'weight': 0.6})
('international standard book number', 'digital object identifier', {'weight': 0.6})
('international standard book number', 'sequential quadratic programming', {'weight': 0.6})
('international standard book number', "dinic's algorithm", {'weight': 0.6})
('international standard book number', 'pseudo-polynomial time', {'weight': 0.6})
('international standard book number', 'partition problem', {'weight': 0.6})
('international standard book number', 'stochastic programming', {'weight': 0.6})
('international standard book number', 'isan', {'weight': 0.7})
('international standard book number', 'hill climbing', {'weight': 0.6})
('international standard book number', 'top-down', {'weight': 0.6})
('international standard book number', 'de boor algorithm', {'weight': 0.6})
('international standard book number', 'oclc', {'weight': 0.7})
('international standard book number', 'optimization algorithm', {'weight': 0.6})
('international standard book number', "kruskal's algorithm", {'weight': 0.6})
('international standard book number', 'jacques philippe marie binet', {'weight': 0.6})
('international standard book number', 'tabu search', {'weight': 0.6})
('international standard book number', 'universal identifiers', {'weight': 0.5})
('international standard book number', 'divide and conquer algorithm', {'weight': 0.6})
('international standard book number', 'isrc', {'weight': 0.7})
('international standard book number', "johnson's algorithm", {'weight': 0.6})
('international standard book number', 'evolutionary algorithm', {'weight': 0.6})
('international standard book number', 'clique-width', {'weight': 0.6})
('international standard book number', 'dynamic programming', {'weight': 0.6})
('international standard book number', 'subroutine', {'weight': 0.6})
('international standard book number', 'tower of hanoi', {'weight': 0.6})
('international standard book number', 'branch and bound', {'weight': 0.6})
('international standard book number', 'library science', {'weight': 0.5})
('international standard book number', 'engineering', {'weight': 0.6})
('international standard book number', 'matroid', {'weight': 0.6})
('international standard book number', 'viterbi algorithm', {'weight': 0.6})
('international standard book number', "lemke's algorithm", {'weight': 0.6})
('international standard book number', 'simplex algorithm', {'weight': 0.6})
('international standard book number', 'local search (optimization)', {'weight': 0.6})
('international standard book number', 'hessian matrix', {'weight': 0.6})
('international standard book number', 'ibm system r', {'weight': 0.6})
('international standard book number', 'penalty method', {'weight': 0.6})
('international standard book number', 'prolog', {'weight': 0.6})
('international standard book number', 'bookselling', {'weight': 0.5})
('international standard book number', 'convex optimization', {'weight': 0.6})
('international standard book number', 'ettn', {'weight': 0.7})
('international standard book number', 'estc', {'weight': 0.7})
('international standard book number', 'revised simplex algorithm', {'weight': 0.6})
('international standard book number', 'doi', {'weight': 0.7})
('international standard book number', 'the mathematical association of america', {'weight': 0.6})
('international standard book number', 'line search', {'weight': 0.6})
('international standard book number', 'j (programming language)', {'weight': 0.6})
('international standard book number', 'word wrap', {'weight': 0.6})
('international standard book number', '1966 introductions', {'weight': 0.5})
('international standard book number', 'subset sum problem', {'weight': 0.6})
('international standard book number', 'integer programming', {'weight': 0.6})
('international standard book number', 'nucleosome', {'weight': 0.6})
('international standard book number', 'istc', {'weight': 0.7})
('international standard book number', 'earley algorithm', {'weight': 0.6})
('international standard book number', 'referential transparency (computer science)', {'weight': 0.6})
('international standard book number', 'recursion', {'weight': 0.6})
('international standard book number', 'mathematica', {'weight': 0.6})
('international standard book number', 'quicksort', {'weight': 0.6})
('international standard book number', 'recursion (computer science)', {'weight': 0.6})
('international standard book number', 'checkerboard', {'weight': 0.6})
('international standard book number', 'sici', {'weight': 0.7})
('international standard book number', 'computer science', {'weight': 0.6})
('international standard book number', 'brute-force search', {'weight': 0.6})
('international standard book number', 'mathematics', {'weight': 0.6})
('international standard book number', 'depth-first search', {'weight': 0.6})
('international standard book number', 'book terminology', {'weight': 0.5})
('international standard book number', 'coden', {'weight': 0.7})
('international standard book number', 'top-down and bottom-up design', {'weight': 0.6})
('international standard book number', 'correspondence problem', {'weight': 0.6})
('international standard book number', 'transcription factor', {'weight': 0.6})
('international standard book number', 'tree decomposition', {'weight': 0.6})
('international standard book number', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('international standard book number', 'structural alignment', {'weight': 0.6})
('international standard book number', 'local convergence', {'weight': 0.6})
('international standard book number', 'knapsack problem', {'weight': 0.6})
('international standard book number', 'graph algorithm', {'weight': 0.6})
('international standard book number', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('international standard book number', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('international standard book number', 'hidden markov model', {'weight': 0.6})
('international standard book number', 'string (computer science)', {'weight': 0.6})
('international standard book number', 'bioinformatics', {'weight': 0.6})
('international standard book number', 'genetics', {'weight': 0.6})
('international standard book number', 'mathematical optimization', {'weight': 0.6})
('international standard book number', 'artificial neural networks', {'weight': 0.6})
('international standard book number', 'introduction to algorithms', {'weight': 0.6})
('international standard book number', 'thomas h. cormen', {'weight': 0.6})
('international standard book number', 'list of group-0 isbn publisher codes', {'weight': 0.7})
('international standard book number', 'music information retrieval', {'weight': 0.6})
('international standard book number', 'beat (music)', {'weight': 0.6})
('international standard book number', 'longest common subsequence problem', {'weight': 0.6})
('international standard book number', 'convex minimization', {'weight': 0.6})
('international standard book number', 'successive parabolic interpolation', {'weight': 0.6})
('international standard book number', 'fibonacci sequence', {'weight': 0.6})
('international standard book number', 'maximum subarray problem', {'weight': 0.6})
('international standard book number', 'identifiers', {'weight': 0.5})
('international standard book number', 'memoization', {'weight': 0.6})
('international standard book number', 'richard bellman', {'weight': 0.6})
('international standard book number', 'exponential growth', {'weight': 0.6})
('international standard book number', 'charles e. leiserson', {'weight': 0.6})
('international standard book number', "dijkstra's algorithm", {'weight': 0.6})
('international standard book number', 'interval scheduling', {'weight': 0.6})
('international standard book number', 'chart parser', {'weight': 0.6})
('international standard book number', 'travelling salesman problem', {'weight': 0.6})
('international standard book number', 'bellman equation', {'weight': 0.6})
('international standard book number', 'registration authority', {'weight': 0.7})
('undirected graph', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('undirected graph', 'photoshop', {'weight': 0.6})
('undirected graph', 'sequence alignment', {'weight': 0.6})
('undirected graph', 'flow network', {'weight': 0.6})
('undirected graph', 'hypergraph', {'weight': 0.7})
('undirected graph', 'dual graph', {'weight': 0.7})
('undirected graph', 'ellipsoid method', {'weight': 0.6})
('undirected graph', 'chain matrix multiplication', {'weight': 0.6})
('undirected graph', 'ieee', {'weight': 0.6})
('undirected graph', 'backtracking', {'weight': 0.6})
('undirected graph', 'list of graph theory topics', {'weight': 0.7})
('undirected graph', 'nonlinear conjugate gradient method', {'weight': 0.6})
('undirected graph', 'dynamic problem', {'weight': 0.6})
('undirected graph', 'trust region', {'weight': 0.6})
('undirected graph', 'function (mathematics)', {'weight': 0.6})
('undirected graph', 'minimum spanning tree', {'weight': 0.6})
('undirected graph', 'context-free grammar', {'weight': 0.6})
('undirected graph', 'branch and cut', {'weight': 0.6})
('undirected graph', 'state variable', {'weight': 0.6})
('undirected graph', 'graph theory', {'weight': 0.7})
('undirected graph', 'treewidth', {'weight': 0.6})
('undirected graph', 'overlapping subproblem', {'weight': 0.6})
('undirected graph', 'taylor & francis', {'weight': 0.6})
('undirected graph', 'cutting-plane method', {'weight': 0.6})
('undirected graph', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('undirected graph', 'method of undetermined coefficients', {'weight': 0.6})
('undirected graph', 'combinatorial optimization', {'weight': 0.6})
('undirected graph', "newton's method in optimization", {'weight': 0.6})
('undirected graph', 'matrix chain multiplication', {'weight': 0.6})
('undirected graph', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('undirected graph', 'dynamic time warping', {'weight': 0.6})
('undirected graph', 'dynamic programming language', {'weight': 0.6})
('undirected graph', 'call-by-need', {'weight': 0.6})
('undirected graph', 'big-o notation', {'weight': 0.6})
('undirected graph', 'comparison of optimization software', {'weight': 0.6})
('undirected graph', 'quadratic programming', {'weight': 0.6})
('undirected graph', 'common lisp', {'weight': 0.6})
('undirected graph', 'barrier function', {'weight': 0.6})
('undirected graph', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('undirected graph', 'gradient descent', {'weight': 0.6})
('undirected graph', 'patricia selinger', {'weight': 0.6})
('undirected graph', 'discounting', {'weight': 0.6})
('undirected graph', 'ronald l. rivest', {'weight': 0.6})
('undirected graph', 'iterative method', {'weight': 0.6})
('undirected graph', 'limited-memory bfgs', {'weight': 0.6})
('undirected graph', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('undirected graph', 'longest common substring problem', {'weight': 0.6})
('undirected graph', 'graph drawing', {'weight': 0.7})
('undirected graph', 'clifford stein', {'weight': 0.6})
('undirected graph', 'computer chess', {'weight': 0.6})
('undirected graph', 'linear programming', {'weight': 0.6})
('undirected graph', 'bitonic tour', {'weight': 0.6})
('undirected graph', 'linear search problem', {'weight': 0.6})
('undirected graph', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('undirected graph', 'systems analysis', {'weight': 0.6})
('undirected graph', 'capital (economics)', {'weight': 0.6})
('undirected graph', 'levenshtein distance', {'weight': 0.6})
('undirected graph', 'nonlinear programming', {'weight': 0.6})
('undirected graph', 'computational complexity of mathematical operations', {'weight': 0.6})
('undirected graph', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('undirected graph', 'gradient', {'weight': 0.6})
('undirected graph', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('undirected graph', 'glossary of graph theory', {'weight': 0.7})
('undirected graph', 'bulletin of the american mathematical society', {'weight': 0.6})
('undirected graph', 'u.s. english', {'weight': 0.6})
('undirected graph', 'refutation table', {'weight': 0.6})
('undirected graph', 'heuristic algorithm', {'weight': 0.6})
('undirected graph', 'successive linear programming', {'weight': 0.6})
('undirected graph', 'optimal substructure', {'weight': 0.6})
('undirected graph', 'programming language', {'weight': 0.6})
('undirected graph', 'mergesort', {'weight': 0.6})
('undirected graph', "dijkstra's algorithm", {'weight': 0.6})
('undirected graph', 'subgradient method', {'weight': 0.6})
('undirected graph', 'call-by-name', {'weight': 0.6})
('undirected graph', 'longest increasing subsequence problem', {'weight': 0.6})
('undirected graph', 'edward prescott', {'weight': 0.6})
('undirected graph', 'exponential time', {'weight': 0.6})
('undirected graph', 'principle of optimality', {'weight': 0.6})
('undirected graph', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('undirected graph', 'mathematical game', {'weight': 0.6})
('undirected graph', 'nancy stokey', {'weight': 0.6})
('undirected graph', 'list of publications in graph theory', {'weight': 0.7})
('undirected graph', 'approximation algorithm', {'weight': 0.6})
('undirected graph', 'discrete-time', {'weight': 0.6})
('undirected graph', 'cyk algorithm', {'weight': 0.6})
('undirected graph', 'markov decision process', {'weight': 0.6})
('undirected graph', "powell's method", {'weight': 0.6})
('undirected graph', 'wolfe conditions', {'weight': 0.6})
('undirected graph', 'convexity in economics', {'weight': 0.6})
('undirected graph', 'transposition table', {'weight': 0.6})
('undirected graph', 'economics', {'weight': 0.6})
('undirected graph', 'backward induction', {'weight': 0.6})
('undirected graph', 'golden section search', {'weight': 0.6})
('undirected graph', 'edit distance', {'weight': 0.6})
('undirected graph', 'tree structure', {'weight': 0.6})
('undirected graph', 'exchange algorithm', {'weight': 0.6})
('undirected graph', 'dover publications', {'weight': 0.6})
('undirected graph', 'seam carving', {'weight': 0.6})
('undirected graph', 'recursive least squares', {'weight': 0.6})
('undirected graph', 'metaheuristic', {'weight': 0.6})
('undirected graph', 'quasi-newton method', {'weight': 0.6})
('undirected graph', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('undirected graph', 'robert e. lucas', {'weight': 0.6})
('undirected graph', 'non-convexity (economics)', {'weight': 0.6})
('undirected graph', 'sr1 formula', {'weight': 0.6})
('undirected graph', 'mathematical reviews', {'weight': 0.6})
('undirected graph', 'puzzle', {'weight': 0.6})
('undirected graph', 'associative array', {'weight': 0.6})
('undirected graph', 'shortest path problem', {'weight': 0.6})
('undirected graph', 'dynamic algorithm', {'weight': 0.6})
('undirected graph', 'augmented lagrangian method', {'weight': 0.6})
('undirected graph', 'charles delisi', {'weight': 0.6})
('undirected graph', 'greedy algorithm', {'weight': 0.6})
('undirected graph', "karmarkar's algorithm", {'weight': 0.6})
('undirected graph', 'lattice models', {'weight': 0.6})
('undirected graph', 'utility', {'weight': 0.6})
('undirected graph', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('undirected graph', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('undirected graph', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('undirected graph', 'international standard book number', {'weight': 0.6})
('undirected graph', 'undirected graph', {'weight': 1})
('undirected graph', 'scheme (programming language)', {'weight': 0.6})
('undirected graph', 'rna structure', {'weight': 0.6})
('undirected graph', 'hanoi', {'weight': 0.6})
('undirected graph', 'conceptual graph', {'weight': 0.7})
('undirected graph', 'perl', {'weight': 0.6})
('undirected graph', 'digital object identifier', {'weight': 0.6})
('undirected graph', 'sequential quadratic programming', {'weight': 0.6})
('undirected graph', "dinic's algorithm", {'weight': 0.6})
('undirected graph', 'pseudo-polynomial time', {'weight': 0.6})
('undirected graph', 'partition problem', {'weight': 0.6})
('undirected graph', 'stochastic programming', {'weight': 0.6})
('undirected graph', 'hill climbing', {'weight': 0.6})
('undirected graph', 'top-down', {'weight': 0.6})
('undirected graph', 'de boor algorithm', {'weight': 0.6})
('undirected graph', 'optimization algorithm', {'weight': 0.6})
('undirected graph', "kruskal's algorithm", {'weight': 0.6})
('undirected graph', 'jacques philippe marie binet', {'weight': 0.6})
('undirected graph', 'tabu search', {'weight': 0.6})
('undirected graph', 'divide and conquer algorithm', {'weight': 0.6})
('undirected graph', "johnson's algorithm", {'weight': 0.6})
('undirected graph', 'evolutionary algorithm', {'weight': 0.6})
('undirected graph', 'clique-width', {'weight': 0.6})
('undirected graph', 'network theory', {'weight': 0.7})
('undirected graph', 'dynamic programming', {'weight': 0.6})
('undirected graph', 'subroutine', {'weight': 0.6})
('undirected graph', 'simulated annealing', {'weight': 0.6})
('undirected graph', 'tower of hanoi', {'weight': 0.6})
('undirected graph', 'branch and bound', {'weight': 0.6})
('undirected graph', 'engineering', {'weight': 0.6})
('undirected graph', 'matroid', {'weight': 0.6})
('undirected graph', 'viterbi algorithm', {'weight': 0.6})
('undirected graph', "lemke's algorithm", {'weight': 0.6})
('undirected graph', 'simplex algorithm', {'weight': 0.6})
('undirected graph', 'local search (optimization)', {'weight': 0.6})
('undirected graph', 'hessian matrix', {'weight': 0.6})
('undirected graph', 'ibm system r', {'weight': 0.6})
('undirected graph', 'penalty method', {'weight': 0.6})
('undirected graph', 'prolog', {'weight': 0.6})
('undirected graph', 'time-invariant system', {'weight': 0.6})
('undirected graph', 'criss-cross algorithm', {'weight': 0.6})
('undirected graph', 'revised simplex algorithm', {'weight': 0.6})
('undirected graph', 'the mathematical association of america', {'weight': 0.6})
('undirected graph', 'line search', {'weight': 0.6})
('undirected graph', 'j (programming language)', {'weight': 0.6})
('undirected graph', 'word wrap', {'weight': 0.6})
('undirected graph', 'subset sum problem', {'weight': 0.6})
('undirected graph', 'integer programming', {'weight': 0.6})
('undirected graph', 'nucleosome', {'weight': 0.6})
('undirected graph', 'earley algorithm', {'weight': 0.6})
('undirected graph', 'referential transparency (computer science)', {'weight': 0.6})
('undirected graph', 'recursion', {'weight': 0.6})
('undirected graph', 'mathematica', {'weight': 0.6})
('undirected graph', 'quicksort', {'weight': 0.6})
('undirected graph', 'recursion (computer science)', {'weight': 0.6})
('undirected graph', 'checkerboard', {'weight': 0.6})
('undirected graph', 'computer science', {'weight': 0.6})
('undirected graph', 'brute-force search', {'weight': 0.6})
('undirected graph', 'mathematics', {'weight': 0.6})
('undirected graph', 'depth-first search', {'weight': 0.6})
('undirected graph', 'top-down and bottom-up design', {'weight': 0.6})
('undirected graph', 'correspondence problem', {'weight': 0.6})
('undirected graph', 'transcription factor', {'weight': 0.6})
('undirected graph', 'tree decomposition', {'weight': 0.6})
('undirected graph', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('undirected graph', 'structural alignment', {'weight': 0.6})
('undirected graph', 'local convergence', {'weight': 0.6})
('undirected graph', 'knapsack problem', {'weight': 0.6})
('undirected graph', 'graph algorithm', {'weight': 0.6})
('undirected graph', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('undirected graph', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('undirected graph', 'hidden markov model', {'weight': 0.6})
('undirected graph', 'string (computer science)', {'weight': 0.6})
('undirected graph', 'bioinformatics', {'weight': 0.6})
('undirected graph', 'genetics', {'weight': 0.6})
('undirected graph', 'mathematical optimization', {'weight': 0.6})
('undirected graph', 'artificial neural networks', {'weight': 0.6})
('undirected graph', 'introduction to algorithms', {'weight': 0.6})
('undirected graph', 'thomas h. cormen', {'weight': 0.6})
('undirected graph', 'graph database', {'weight': 0.7})
('undirected graph', 'music information retrieval', {'weight': 0.6})
('undirected graph', 'beat (music)', {'weight': 0.6})
('undirected graph', 'longest common subsequence problem', {'weight': 0.6})
('undirected graph', 'convex minimization', {'weight': 0.6})
('undirected graph', 'successive parabolic interpolation', {'weight': 0.6})
('undirected graph', 'fibonacci sequence', {'weight': 0.6})
('undirected graph', 'maximum subarray problem', {'weight': 0.6})
('undirected graph', 'convex optimization', {'weight': 0.6})
('undirected graph', 'memoization', {'weight': 0.6})
('undirected graph', 'graph (data structure)', {'weight': 0.7})
('undirected graph', 'richard bellman', {'weight': 0.6})
('undirected graph', 'exponential growth', {'weight': 0.6})
('undirected graph', 'charles e. leiserson', {'weight': 0.6})
('undirected graph', 'charles erwin wilson', {'weight': 0.6})
('undirected graph', 'interval scheduling', {'weight': 0.6})
('undirected graph', 'chart parser', {'weight': 0.6})
('undirected graph', 'travelling salesman problem', {'weight': 0.6})
('undirected graph', 'bellman equation', {'weight': 0.6})
('robert e. lucas', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('robert e. lucas', 'photoshop', {'weight': 0.6})
('robert e. lucas', 'sequence alignment', {'weight': 0.6})
('robert e. lucas', 'flow network', {'weight': 0.6})
('robert e. lucas', 'ellipsoid method', {'weight': 0.6})
('robert e. lucas', 'chain matrix multiplication', {'weight': 0.6})
('robert e. lucas', 'ieee', {'weight': 0.6})
('robert e. lucas', 'backtracking', {'weight': 0.6})
('robert e. lucas', 'nonlinear conjugate gradient method', {'weight': 0.6})
('robert e. lucas', 'dynamic problem', {'weight': 0.6})
('robert e. lucas', 'trust region', {'weight': 0.6})
('robert e. lucas', 'function (mathematics)', {'weight': 0.6})
('robert e. lucas', 'minimum spanning tree', {'weight': 0.6})
('robert e. lucas', 'context-free grammar', {'weight': 0.6})
('robert e. lucas', 'branch and cut', {'weight': 0.6})
('robert e. lucas', 'state variable', {'weight': 0.6})
('robert e. lucas', 'treewidth', {'weight': 0.6})
('robert e. lucas', 'overlapping subproblem', {'weight': 0.6})
('robert e. lucas', 'taylor & francis', {'weight': 0.6})
('robert e. lucas', 'cutting-plane method', {'weight': 0.6})
('robert e. lucas', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('robert e. lucas', 'method of undetermined coefficients', {'weight': 0.6})
('robert e. lucas', 'combinatorial optimization', {'weight': 0.6})
('robert e. lucas', "newton's method in optimization", {'weight': 0.6})
('robert e. lucas', 'matrix chain multiplication', {'weight': 0.6})
('robert e. lucas', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('robert e. lucas', 'dynamic time warping', {'weight': 0.6})
('robert e. lucas', 'dynamic programming language', {'weight': 0.6})
('robert e. lucas', 'call-by-need', {'weight': 0.6})
('robert e. lucas', 'big-o notation', {'weight': 0.6})
('robert e. lucas', 'comparison of optimization software', {'weight': 0.6})
('robert e. lucas', 'quadratic programming', {'weight': 0.6})
('robert e. lucas', 'common lisp', {'weight': 0.6})
('robert e. lucas', 'barrier function', {'weight': 0.6})
('robert e. lucas', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('robert e. lucas', 'gradient descent', {'weight': 0.6})
('robert e. lucas', 'patricia selinger', {'weight': 0.6})
('robert e. lucas', 'discounting', {'weight': 0.6})
('robert e. lucas', 'ronald l. rivest', {'weight': 0.6})
('robert e. lucas', 'iterative method', {'weight': 0.6})
('robert e. lucas', 'limited-memory bfgs', {'weight': 0.6})
('robert e. lucas', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('robert e. lucas', 'longest common substring problem', {'weight': 0.6})
('robert e. lucas', 'clifford stein', {'weight': 0.6})
('robert e. lucas', 'computer chess', {'weight': 0.6})
('robert e. lucas', 'linear programming', {'weight': 0.6})
('robert e. lucas', 'bitonic tour', {'weight': 0.6})
('robert e. lucas', 'linear search problem', {'weight': 0.6})
('robert e. lucas', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('robert e. lucas', 'systems analysis', {'weight': 0.6})
('robert e. lucas', 'capital (economics)', {'weight': 0.6})
('robert e. lucas', 'levenshtein distance', {'weight': 0.6})
('robert e. lucas', 'nonlinear programming', {'weight': 0.6})
('robert e. lucas', 'computational complexity of mathematical operations', {'weight': 0.6})
('robert e. lucas', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('robert e. lucas', 'gradient', {'weight': 0.6})
('robert e. lucas', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('robert e. lucas', 'bulletin of the american mathematical society', {'weight': 0.6})
('robert e. lucas', 'u.s. english', {'weight': 0.6})
('robert e. lucas', 'refutation table', {'weight': 0.6})
('robert e. lucas', 'heuristic algorithm', {'weight': 0.6})
('robert e. lucas', 'successive linear programming', {'weight': 0.6})
('robert e. lucas', 'optimal substructure', {'weight': 0.6})
('robert e. lucas', 'programming language', {'weight': 0.6})
('robert e. lucas', 'mergesort', {'weight': 0.6})
('robert e. lucas', "dijkstra's algorithm", {'weight': 0.6})
('robert e. lucas', 'subgradient method', {'weight': 0.6})
('robert e. lucas', 'call-by-name', {'weight': 0.6})
('robert e. lucas', 'longest increasing subsequence problem', {'weight': 0.6})
('robert e. lucas', 'edward prescott', {'weight': 0.6})
('robert e. lucas', 'exponential time', {'weight': 0.6})
('robert e. lucas', 'principle of optimality', {'weight': 0.6})
('robert e. lucas', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('robert e. lucas', 'mathematical game', {'weight': 0.6})
('robert e. lucas', 'nancy stokey', {'weight': 0.6})
('robert e. lucas', 'approximation algorithm', {'weight': 0.6})
('robert e. lucas', 'discrete-time', {'weight': 0.6})
('robert e. lucas', 'cyk algorithm', {'weight': 0.6})
('robert e. lucas', 'markov decision process', {'weight': 0.6})
('robert e. lucas', "powell's method", {'weight': 0.6})
('robert e. lucas', 'wolfe conditions', {'weight': 0.6})
('robert e. lucas', 'convexity in economics', {'weight': 0.6})
('robert e. lucas', 'transposition table', {'weight': 0.6})
('robert e. lucas', 'economics', {'weight': 0.6})
('robert e. lucas', 'backward induction', {'weight': 0.6})
('robert e. lucas', 'golden section search', {'weight': 0.6})
('robert e. lucas', 'edit distance', {'weight': 0.6})
('robert e. lucas', 'tree structure', {'weight': 0.6})
('robert e. lucas', 'exchange algorithm', {'weight': 0.6})
('robert e. lucas', 'dover publications', {'weight': 0.6})
('robert e. lucas', 'seam carving', {'weight': 0.6})
('robert e. lucas', 'recursive least squares', {'weight': 0.6})
('robert e. lucas', 'metaheuristic', {'weight': 0.6})
('robert e. lucas', 'quasi-newton method', {'weight': 0.6})
('robert e. lucas', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('robert e. lucas', 'robert e. lucas', {'weight': 1})
('robert e. lucas', 'non-convexity (economics)', {'weight': 0.6})
('robert e. lucas', 'sr1 formula', {'weight': 0.6})
('robert e. lucas', 'mathematical reviews', {'weight': 0.6})
('robert e. lucas', 'puzzle', {'weight': 0.6})
('robert e. lucas', 'associative array', {'weight': 0.6})
('robert e. lucas', 'shortest path problem', {'weight': 0.6})
('robert e. lucas', 'dynamic algorithm', {'weight': 0.6})
('robert e. lucas', 'augmented lagrangian method', {'weight': 0.6})
('robert e. lucas', 'charles delisi', {'weight': 0.6})
('robert e. lucas', 'greedy algorithm', {'weight': 0.6})
('robert e. lucas', "karmarkar's algorithm", {'weight': 0.6})
('robert e. lucas', 'lattice models', {'weight': 0.6})
('robert e. lucas', 'utility', {'weight': 0.6})
('robert e. lucas', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('robert e. lucas', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('robert e. lucas', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('robert e. lucas', 'international standard book number', {'weight': 0.6})
('robert e. lucas', 'undirected graph', {'weight': 0.6})
('robert e. lucas', 'scheme (programming language)', {'weight': 0.6})
('robert e. lucas', 'rna structure', {'weight': 0.6})
('robert e. lucas', 'hanoi', {'weight': 0.6})
('robert e. lucas', 'perl', {'weight': 0.6})
('robert e. lucas', 'digital object identifier', {'weight': 0.6})
('robert e. lucas', 'sequential quadratic programming', {'weight': 0.6})
('robert e. lucas', "dinic's algorithm", {'weight': 0.6})
('robert e. lucas', 'pseudo-polynomial time', {'weight': 0.6})
('robert e. lucas', 'partition problem', {'weight': 0.6})
('robert e. lucas', 'stochastic programming', {'weight': 0.6})
('robert e. lucas', 'hill climbing', {'weight': 0.6})
('robert e. lucas', 'top-down', {'weight': 0.6})
('robert e. lucas', 'de boor algorithm', {'weight': 0.6})
('robert e. lucas', 'optimization algorithm', {'weight': 0.6})
('robert e. lucas', "kruskal's algorithm", {'weight': 0.6})
('robert e. lucas', 'jacques philippe marie binet', {'weight': 0.6})
('robert e. lucas', 'tabu search', {'weight': 0.6})
('robert e. lucas', 'divide and conquer algorithm', {'weight': 0.6})
('robert e. lucas', "johnson's algorithm", {'weight': 0.6})
('robert e. lucas', 'evolutionary algorithm', {'weight': 0.6})
('robert e. lucas', 'clique-width', {'weight': 0.6})
('robert e. lucas', 'dynamic programming', {'weight': 0.6})
('robert e. lucas', 'subroutine', {'weight': 0.6})
('robert e. lucas', 'simulated annealing', {'weight': 0.6})
('robert e. lucas', 'tower of hanoi', {'weight': 0.6})
('robert e. lucas', 'branch and bound', {'weight': 0.6})
('robert e. lucas', 'engineering', {'weight': 0.6})
('robert e. lucas', 'matroid', {'weight': 0.6})
('robert e. lucas', 'viterbi algorithm', {'weight': 0.6})
('robert e. lucas', "lemke's algorithm", {'weight': 0.6})
('robert e. lucas', 'simplex algorithm', {'weight': 0.6})
('robert e. lucas', 'local search (optimization)', {'weight': 0.6})
('robert e. lucas', 'hessian matrix', {'weight': 0.6})
('robert e. lucas', 'ibm system r', {'weight': 0.6})
('robert e. lucas', 'penalty method', {'weight': 0.6})
('robert e. lucas', 'prolog', {'weight': 0.6})
('robert e. lucas', 'time-invariant system', {'weight': 0.6})
('robert e. lucas', 'criss-cross algorithm', {'weight': 0.6})
('robert e. lucas', 'revised simplex algorithm', {'weight': 0.6})
('robert e. lucas', 'the mathematical association of america', {'weight': 0.6})
('robert e. lucas', 'line search', {'weight': 0.6})
('robert e. lucas', 'j (programming language)', {'weight': 0.6})
('robert e. lucas', 'word wrap', {'weight': 0.6})
('robert e. lucas', 'subset sum problem', {'weight': 0.6})
('robert e. lucas', 'integer programming', {'weight': 0.6})
('robert e. lucas', 'nucleosome', {'weight': 0.6})
('robert e. lucas', 'earley algorithm', {'weight': 0.6})
('robert e. lucas', 'referential transparency (computer science)', {'weight': 0.6})
('robert e. lucas', 'recursion', {'weight': 0.6})
('robert e. lucas', 'mathematica', {'weight': 0.6})
('robert e. lucas', 'quicksort', {'weight': 0.6})
('robert e. lucas', 'recursion (computer science)', {'weight': 0.6})
('robert e. lucas', 'checkerboard', {'weight': 0.6})
('robert e. lucas', 'computer science', {'weight': 0.6})
('robert e. lucas', 'brute-force search', {'weight': 0.6})
('robert e. lucas', 'mathematics', {'weight': 0.6})
('robert e. lucas', 'depth-first search', {'weight': 0.6})
('robert e. lucas', 'top-down and bottom-up design', {'weight': 0.6})
('robert e. lucas', 'correspondence problem', {'weight': 0.6})
('robert e. lucas', 'transcription factor', {'weight': 0.6})
('robert e. lucas', 'tree decomposition', {'weight': 0.6})
('robert e. lucas', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('robert e. lucas', 'structural alignment', {'weight': 0.6})
('robert e. lucas', 'local convergence', {'weight': 0.6})
('robert e. lucas', 'knapsack problem', {'weight': 0.6})
('robert e. lucas', 'graph algorithm', {'weight': 0.6})
('robert e. lucas', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('robert e. lucas', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('robert e. lucas', 'hidden markov model', {'weight': 0.6})
('robert e. lucas', 'string (computer science)', {'weight': 0.6})
('robert e. lucas', 'bioinformatics', {'weight': 0.6})
('robert e. lucas', 'genetics', {'weight': 0.6})
('robert e. lucas', 'mathematical optimization', {'weight': 0.6})
('robert e. lucas', 'artificial neural networks', {'weight': 0.6})
('robert e. lucas', 'introduction to algorithms', {'weight': 0.6})
('robert e. lucas', 'thomas h. cormen', {'weight': 0.6})
('robert e. lucas', 'music information retrieval', {'weight': 0.6})
('robert e. lucas', 'beat (music)', {'weight': 0.6})
('robert e. lucas', 'longest common subsequence problem', {'weight': 0.6})
('robert e. lucas', 'convex minimization', {'weight': 0.6})
('robert e. lucas', 'successive parabolic interpolation', {'weight': 0.6})
('robert e. lucas', 'fibonacci sequence', {'weight': 0.6})
('robert e. lucas', 'maximum subarray problem', {'weight': 0.6})
('robert e. lucas', 'convex optimization', {'weight': 0.6})
('robert e. lucas', 'memoization', {'weight': 0.6})
('robert e. lucas', 'richard bellman', {'weight': 0.6})
('robert e. lucas', 'exponential growth', {'weight': 0.6})
('robert e. lucas', 'charles e. leiserson', {'weight': 0.6})
('robert e. lucas', 'charles erwin wilson', {'weight': 0.6})
('robert e. lucas', 'interval scheduling', {'weight': 0.6})
('robert e. lucas', 'chart parser', {'weight': 0.6})
('robert e. lucas', 'travelling salesman problem', {'weight': 0.6})
('robert e. lucas', 'bellman equation', {'weight': 0.6})
('operations research', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('operations research', 'photoshop', {'weight': 0.6})
('operations research', 'sequence alignment', {'weight': 0.6})
('operations research', 'flow network', {'weight': 0.6})
('operations research', 'bellman equation', {'weight': 0.6})
('operations research', 'scientific management', {'weight': 0.7})
('operations research', 'russell l. ackoff', {'weight': 0.7})
('operations research', 'behavioral operations research', {'weight': 0.7})
('operations research', 'ellipsoid method', {'weight': 0.6})
('operations research', 'chain matrix multiplication', {'weight': 0.6})
('operations research', 'ieee', {'weight': 0.6})
('operations research', 'backtracking', {'weight': 0.6})
('operations research', 'fields of application of statistics', {'weight': 0.5})
('operations research', 'nonlinear conjugate gradient method', {'weight': 0.6})
('operations research', 'business process management', {'weight': 0.7})
('operations research', 'big data', {'weight': 0.7})
('operations research', 'dynamic problem', {'weight': 0.6})
('operations research', 'trust region', {'weight': 0.6})
('operations research', 'function (mathematics)', {'weight': 0.6})
('operations research', 'minimum spanning tree', {'weight': 0.6})
('operations research', 'database normalization', {'weight': 0.7})
('operations research', 'context-free grammar', {'weight': 0.6})
('operations research', 'branch and cut', {'weight': 0.6})
('operations research', 'state variable', {'weight': 0.6})
('operations research', 'frederick w. lanchester', {'weight': 0.7})
('operations research', 'treewidth', {'weight': 0.6})
('operations research', 'overlapping subproblem', {'weight': 0.6})
('operations research', 'taylor & francis', {'weight': 0.6})
('operations research', 'george dantzig', {'weight': 0.7})
('operations research', 'cutting-plane method', {'weight': 0.6})
('operations research', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('operations research', 'method of undetermined coefficients', {'weight': 0.6})
('operations research', 'combinatorial optimization', {'weight': 0.6})
('operations research', "newton's method in optimization", {'weight': 0.6})
('operations research', 'inventory theory', {'weight': 0.7})
('operations research', 'matrix chain multiplication', {'weight': 0.6})
('operations research', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('operations research', 'dynamic time warping', {'weight': 0.6})
('operations research', 'dynamic programming language', {'weight': 0.6})
('operations research', 'call-by-need', {'weight': 0.6})
('operations research', 'c. west churchman', {'weight': 0.7})
('operations research', 'big-o notation', {'weight': 0.6})
('operations research', 'alvin e. roth', {'weight': 0.7})
('operations research', 'assignment problem', {'weight': 0.7})
('operations research', 'comparison of optimization software', {'weight': 0.6})
('operations research', 'quadratic programming', {'weight': 0.6})
('operations research', 'common lisp', {'weight': 0.6})
('operations research', 'barrier function', {'weight': 0.6})
('operations research', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('operations research', 'gradient descent', {'weight': 0.6})
('operations research', 'patricia selinger', {'weight': 0.6})
('operations research', 'discounting', {'weight': 0.6})
('operations research', 'systems thinking', {'weight': 0.7})
('operations research', 'ronald l. rivest', {'weight': 0.6})
('operations research', 'iterative method', {'weight': 0.6})
('operations research', 'limited-memory bfgs', {'weight': 0.6})
('operations research', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('operations research', 'ramayya krishnan', {'weight': 0.7})
('operations research', 'longest common substring problem', {'weight': 0.6})
('operations research', 'clifford stein', {'weight': 0.6})
('operations research', 'computer chess', {'weight': 0.6})
('operations research', 'wargaming', {'weight': 0.7})
('operations research', 'linear programming', {'weight': 0.7})
('operations research', 'bitonic tour', {'weight': 0.6})
('operations research', 'linear search problem', {'weight': 0.6})
('operations research', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('operations research', 'systems analysis', {'weight': 0.7})
('operations research', 'capital (economics)', {'weight': 0.6})
('operations research', 'levenshtein distance', {'weight': 0.6})
('operations research', 'nonlinear programming', {'weight': 0.6})
('operations research', 'econometrics', {'weight': 0.7})
('operations research', 'william w. cooper', {'weight': 0.7})
('operations research', 'computational complexity of mathematical operations', {'weight': 0.6})
('operations research', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('operations research', 'gradient', {'weight': 0.6})
('operations research', 'industrial engineering', {'weight': 0.7})
('operations research', 'military simulation', {'weight': 0.7})
('operations research', 'bulletin of the american mathematical society', {'weight': 0.6})
('operations research', 'u.s. english', {'weight': 0.6})
('operations research', 'refutation table', {'weight': 0.6})
('operations research', 'heuristic algorithm', {'weight': 0.6})
('operations research', 'successive linear programming', {'weight': 0.6})
('operations research', 'optimal substructure', {'weight': 0.6})
('operations research', 'programming language', {'weight': 0.6})
('operations research', 'mergesort', {'weight': 0.6})
('operations research', "dijkstra's algorithm", {'weight': 0.6})
('operations research', 'subgradient method', {'weight': 0.6})
('operations research', 'call-by-name', {'weight': 0.6})
('operations research', 'stochastic processes', {'weight': 0.7})
('operations research', 'longest increasing subsequence problem', {'weight': 0.6})
('operations research', 'edward prescott', {'weight': 0.6})
('operations research', 'business engineering', {'weight': 0.7})
('operations research', 'exponential time', {'weight': 0.6})
('operations research', 'principle of optimality', {'weight': 0.6})
('operations research', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('operations research', 'mathematical game', {'weight': 0.6})
('operations research', 'nancy stokey', {'weight': 0.6})
('operations research', 'optimal maintenance', {'weight': 0.7})
('operations research', 'approximation algorithm', {'weight': 0.6})
('operations research', 'discrete-time', {'weight': 0.6})
('operations research', 'cyk algorithm', {'weight': 0.6})
('operations research', 'markov decision process', {'weight': 0.6})
('operations research', 'decision analysis', {'weight': 0.7})
('operations research', "powell's method", {'weight': 0.6})
('operations research', 'wolfe conditions', {'weight': 0.6})
('operations research', 'convexity in economics', {'weight': 0.6})
('operations research', 'thomas l. magnanti', {'weight': 0.7})
('operations research', 'transposition table', {'weight': 0.6})
('operations research', 'economics', {'weight': 0.6})
('operations research', 'backward induction', {'weight': 0.6})
('operations research', 'golden section search', {'weight': 0.6})
('operations research', 'edit distance', {'weight': 0.6})
('operations research', 'tree structure', {'weight': 0.6})
('operations research', 'exchange algorithm', {'weight': 0.6})
('operations research', 'dover publications', {'weight': 0.6})
('operations research', 'seam carving', {'weight': 0.6})
('operations research', 'recursive least squares', {'weight': 0.6})
('operations research', 'metaheuristic', {'weight': 0.6})
('operations research', 'quasi-newton method', {'weight': 0.6})
('operations research', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('operations research', 'robert e. lucas', {'weight': 0.6})
('operations research', 'non-convexity (economics)', {'weight': 0.6})
('operations research', 'sr1 formula', {'weight': 0.6})
('operations research', 'mathematical reviews', {'weight': 0.6})
('operations research', 'anthony stafford beer', {'weight': 0.7})
('operations research', 'puzzle', {'weight': 0.6})
('operations research', 'associative array', {'weight': 0.6})
('operations research', 'shortest path problem', {'weight': 0.6})
('operations research', 'dynamic algorithm', {'weight': 0.6})
('operations research', 'augmented lagrangian method', {'weight': 0.6})
('operations research', 'charles delisi', {'weight': 0.6})
('operations research', 'greedy algorithm', {'weight': 0.6})
('operations research', "karmarkar's algorithm", {'weight': 0.6})
('operations research', 'systems theory', {'weight': 0.7})
('operations research', 'lattice models', {'weight': 0.6})
('operations research', 'utility', {'weight': 0.6})
('operations research', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('operations research', 'real options analysis', {'weight': 0.7})
('operations research', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('operations research', 'management', {'weight': 0.5})
('operations research', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('operations research', 'international standard book number', {'weight': 0.6})
('operations research', 'undirected graph', {'weight': 0.6})
('operations research', 'scheme (programming language)', {'weight': 0.6})
('operations research', 'rna structure', {'weight': 0.6})
('operations research', 'hanoi', {'weight': 0.6})
('operations research', 'perl', {'weight': 0.6})
('operations research', 'digital object identifier', {'weight': 0.6})
('operations research', 'managerial economics', {'weight': 0.7})
('operations research', 'sequential quadratic programming', {'weight': 0.6})
('operations research', 'peter whittle', {'weight': 0.7})
('operations research', "dinic's algorithm", {'weight': 0.6})
('operations research', 'pseudo-polynomial time', {'weight': 0.6})
('operations research', 'partition problem', {'weight': 0.6})
('operations research', 'operations research', {'weight': 1})
('operations research', 'hill climbing', {'weight': 0.6})
('operations research', 'top-down', {'weight': 0.6})
('operations research', 'de boor algorithm', {'weight': 0.6})
('operations research', 'optimization algorithm', {'weight': 0.6})
('operations research', "kruskal's algorithm", {'weight': 0.6})
('operations research', 'jacques philippe marie binet', {'weight': 0.6})
('operations research', 'tabu search', {'weight': 0.6})
('operations research', 'divide and conquer algorithm', {'weight': 0.6})
('operations research', 'operations researcher category', {'weight': 0.7})
('operations research', "johnson's algorithm", {'weight': 0.6})
('operations research', 'evolutionary algorithm', {'weight': 0.6})
('operations research', 'clique-width', {'weight': 0.6})
('operations research', 'system safety', {'weight': 0.7})
('operations research', 'dynamic programming', {'weight': 0.7})
('operations research', 'subroutine', {'weight': 0.6})
('operations research', 'simulated annealing', {'weight': 0.6})
('operations research', 'tower of hanoi', {'weight': 0.6})
('operations research', 'branch and bound', {'weight': 0.6})
('operations research', 'engineering', {'weight': 0.6})
('operations research', 'matroid', {'weight': 0.6})
('operations research', 'viterbi algorithm', {'weight': 0.6})
('operations research', "lemke's algorithm", {'weight': 0.6})
('operations research', 'simplex algorithm', {'weight': 0.6})
('operations research', 'stochastic programming', {'weight': 0.6})
('operations research', 'hessian matrix', {'weight': 0.6})
('operations research', 'ibm system r', {'weight': 0.6})
('operations research', 'penalty method', {'weight': 0.6})
('operations research', 'prolog', {'weight': 0.6})
('operations research', 'mathematical sciences', {'weight': 0.5})
('operations research', 'time-invariant system', {'weight': 0.6})
('operations research', 'criss-cross algorithm', {'weight': 0.6})
('operations research', 'modeling and simulation', {'weight': 0.7})
('operations research', 'search-based software engineering', {'weight': 0.7})
('operations research', 'revised simplex algorithm', {'weight': 0.6})
('operations research', 'the mathematical association of america', {'weight': 0.6})
('operations research', 'line search', {'weight': 0.6})
('operations research', 'j (programming language)', {'weight': 0.6})
('operations research', 'word wrap', {'weight': 0.6})
('operations research', 'simulation', {'weight': 0.7})
('operations research', 'subset sum problem', {'weight': 0.6})
('operations research', 'integer programming', {'weight': 0.6})
('operations research', 'engineering disciplines', {'weight': 0.5})
('operations research', 'nucleosome', {'weight': 0.6})
('operations research', 'system dynamics', {'weight': 0.7})
('operations research', 'earley algorithm', {'weight': 0.6})
('operations research', 'referential transparency (computer science)', {'weight': 0.6})
('operations research', 'recursion', {'weight': 0.6})
('operations research', 'richard karp', {'weight': 0.7})
('operations research', 'mathematica', {'weight': 0.6})
('operations research', 'quicksort', {'weight': 0.6})
('operations research', 'queueing theory', {'weight': 0.7})
('operations research', 'recursion (computer science)', {'weight': 0.6})
('operations research', 'checkerboard', {'weight': 0.6})
('operations research', 'computer science', {'weight': 0.6})
('operations research', 'reliability engineering', {'weight': 0.7})
('operations research', 'brute-force search', {'weight': 0.6})
('operations research', 'mathematics', {'weight': 0.6})
('operations research', 'depth-first search', {'weight': 0.6})
('operations research', 'management engineering', {'weight': 0.7})
('operations research', 'top-down and bottom-up design', {'weight': 0.6})
('operations research', 'correspondence problem', {'weight': 0.6})
('operations research', 'transcription factor', {'weight': 0.6})
('operations research', 'tree decomposition', {'weight': 0.6})
('operations research', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('operations research', 'structural alignment', {'weight': 0.6})
('operations research', 'local convergence', {'weight': 0.6})
('operations research', 'knapsack problem', {'weight': 0.6})
('operations research', 'graph algorithm', {'weight': 0.6})
('operations research', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('operations research', 'alfred blumstein', {'weight': 0.7})
('operations research', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('operations research', 'hidden markov model', {'weight': 0.6})
('operations research', 'string (computer science)', {'weight': 0.6})
('operations research', 'bioinformatics', {'weight': 0.6})
('operations research', 'genetics', {'weight': 0.6})
('operations research', 'mathematical optimization', {'weight': 0.7})
('operations research', 'local search (optimization)', {'weight': 0.6})
('operations research', 'artificial neural networks', {'weight': 0.6})
('operations research', 'introduction to algorithms', {'weight': 0.6})
('operations research', 'thomas h. cormen', {'weight': 0.6})
('operations research', 'music information retrieval', {'weight': 0.6})
('operations research', 'beat (music)', {'weight': 0.6})
('operations research', 'longest common subsequence problem', {'weight': 0.6})
('operations research', 'convex minimization', {'weight': 0.6})
('operations research', 'successive parabolic interpolation', {'weight': 0.6})
('operations research', 'fibonacci sequence', {'weight': 0.6})
('operations research', 'maximum subarray problem', {'weight': 0.6})
('operations research', 'convex optimization', {'weight': 0.6})
('operations research', 'memoization', {'weight': 0.6})
('operations research', 'richard bellman', {'weight': 0.6})
('operations research', 'exponential growth', {'weight': 0.6})
('operations research', 'charles e. leiserson', {'weight': 0.6})
('operations research', 'charles erwin wilson', {'weight': 0.6})
('operations research', 'interval scheduling', {'weight': 0.6})
('operations research', 'chart parser', {'weight': 0.6})
('operations research', 'travelling salesman problem', {'weight': 0.6})
('operations research', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('operations research', 'industrial organization', {'weight': 0.7})
('top-down', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('top-down', 'photoshop', {'weight': 0.6})
('top-down', 'sequence alignment', {'weight': 0.6})
('top-down', 'flow network', {'weight': 0.6})
('top-down', 'ellipsoid method', {'weight': 0.6})
('top-down', 'chain matrix multiplication', {'weight': 0.6})
('top-down', 'ieee', {'weight': 0.6})
('top-down', 'backtracking', {'weight': 0.6})
('top-down', 'sr1 formula', {'weight': 0.6})
('top-down', 'nonlinear conjugate gradient method', {'weight': 0.6})
('top-down', 'dynamic problem', {'weight': 0.6})
('top-down', 'trust region', {'weight': 0.6})
('top-down', 'function (mathematics)', {'weight': 0.6})
('top-down', 'minimum spanning tree', {'weight': 0.6})
('top-down', 'context-free grammar', {'weight': 0.6})
('top-down', 'branch and cut', {'weight': 0.6})
('top-down', 'state variable', {'weight': 0.6})
('top-down', 'treewidth', {'weight': 0.6})
('top-down', 'overlapping subproblem', {'weight': 0.6})
('top-down', 'taylor & francis', {'weight': 0.6})
('top-down', 'cutting-plane method', {'weight': 0.6})
('top-down', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('top-down', 'method of undetermined coefficients', {'weight': 0.6})
('top-down', 'combinatorial optimization', {'weight': 0.6})
('top-down', "newton's method in optimization", {'weight': 0.6})
('top-down', 'matrix chain multiplication', {'weight': 0.6})
('top-down', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('top-down', 'dynamic time warping', {'weight': 0.6})
('top-down', 'dynamic programming language', {'weight': 0.6})
('top-down', 'call-by-need', {'weight': 0.6})
('top-down', 'big-o notation', {'weight': 0.6})
('top-down', 'comparison of optimization software', {'weight': 0.6})
('top-down', 'quadratic programming', {'weight': 0.6})
('top-down', 'common lisp', {'weight': 0.6})
('top-down', 'barrier function', {'weight': 0.6})
('top-down', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('top-down', 'gradient descent', {'weight': 0.6})
('top-down', 'patricia selinger', {'weight': 0.6})
('top-down', 'discounting', {'weight': 0.6})
('top-down', 'ronald l. rivest', {'weight': 0.6})
('top-down', 'iterative method', {'weight': 0.6})
('top-down', 'limited-memory bfgs', {'weight': 0.6})
('top-down', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('top-down', 'longest common substring problem', {'weight': 0.6})
('top-down', 'clifford stein', {'weight': 0.6})
('top-down', 'computer chess', {'weight': 0.6})
('top-down', 'linear programming', {'weight': 0.6})
('top-down', 'bitonic tour', {'weight': 0.6})
('top-down', 'linear search problem', {'weight': 0.6})
('top-down', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('top-down', 'software design', {'weight': 0.5})
('top-down', 'capital (economics)', {'weight': 0.6})
('top-down', 'levenshtein distance', {'weight': 0.6})
('top-down', 'nonlinear programming', {'weight': 0.6})
('top-down', 'computational complexity of mathematical operations', {'weight': 0.6})
('top-down', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('top-down', 'gradient', {'weight': 0.6})
('top-down', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('top-down', 'bulletin of the american mathematical society', {'weight': 0.6})
('top-down', 'u.s. english', {'weight': 0.6})
('top-down', 'refutation table', {'weight': 0.6})
('top-down', 'heuristic algorithm', {'weight': 0.6})
('top-down', 'successive linear programming', {'weight': 0.6})
('top-down', 'optimal substructure', {'weight': 0.6})
('top-down', 'programming language', {'weight': 0.6})
('top-down', 'mergesort', {'weight': 0.6})
('top-down', "dijkstra's algorithm", {'weight': 0.6})
('top-down', 'subgradient method', {'weight': 0.6})
('top-down', 'call-by-name', {'weight': 0.6})
('top-down', 'longest increasing subsequence problem', {'weight': 0.6})
('top-down', 'edward prescott', {'weight': 0.6})
('top-down', 'exponential time', {'weight': 0.6})
('top-down', 'principle of optimality', {'weight': 0.6})
('top-down', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('top-down', 'mathematical game', {'weight': 0.6})
('top-down', 'nancy stokey', {'weight': 0.6})
('top-down', 'approximation algorithm', {'weight': 0.6})
('top-down', 'discrete-time', {'weight': 0.6})
('top-down', 'cyk algorithm', {'weight': 0.6})
('top-down', 'markov decision process', {'weight': 0.6})
('top-down', "powell's method", {'weight': 0.6})
('top-down', 'wolfe conditions', {'weight': 0.6})
('top-down', 'convexity in economics', {'weight': 0.6})
('top-down', 'transposition table', {'weight': 0.6})
('top-down', 'economics', {'weight': 0.6})
('top-down', 'backward induction', {'weight': 0.6})
('top-down', 'golden section search', {'weight': 0.6})
('top-down', 'edit distance', {'weight': 0.6})
('top-down', 'tree structure', {'weight': 0.6})
('top-down', 'exchange algorithm', {'weight': 0.6})
('top-down', 'dover publications', {'weight': 0.6})
('top-down', 'seam carving', {'weight': 0.6})
('top-down', 'recursive least squares', {'weight': 0.6})
('top-down', 'metaheuristic', {'weight': 0.6})
('top-down', 'quasi-newton method', {'weight': 0.6})
('top-down', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('top-down', 'robert e. lucas', {'weight': 0.6})
('top-down', 'non-convexity (economics)', {'weight': 0.6})
('top-down', 'dichotomies', {'weight': 0.5})
('top-down', 'mathematical reviews', {'weight': 0.6})
('top-down', 'the cathedral and the bazaar', {'weight': 0.7})
('top-down', 'puzzle', {'weight': 0.6})
('top-down', 'associative array', {'weight': 0.6})
('top-down', 'shortest path problem', {'weight': 0.6})
('top-down', 'dynamic algorithm', {'weight': 0.6})
('top-down', 'augmented lagrangian method', {'weight': 0.6})
('top-down', 'charles delisi', {'weight': 0.6})
('top-down', 'greedy algorithm', {'weight': 0.6})
('top-down', "karmarkar's algorithm", {'weight': 0.6})
('top-down', 'lattice models', {'weight': 0.6})
('top-down', 'utility', {'weight': 0.6})
('top-down', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('top-down', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('top-down', 'neuropsychology', {'weight': 0.5})
('top-down', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('top-down', 'international standard book number', {'weight': 0.6})
('top-down', 'undirected graph', {'weight': 0.6})
('top-down', 'scheme (programming language)', {'weight': 0.6})
('top-down', 'rna structure', {'weight': 0.6})
('top-down', 'hanoi', {'weight': 0.6})
('top-down', 'perl', {'weight': 0.6})
('top-down', 'digital object identifier', {'weight': 0.6})
('top-down', 'information science', {'weight': 0.5})
('top-down', 'sequential quadratic programming', {'weight': 0.6})
('top-down', "dinic's algorithm", {'weight': 0.6})
('top-down', 'pseudo-polynomial time', {'weight': 0.6})
('top-down', 'partition problem', {'weight': 0.6})
('top-down', 'stochastic programming', {'weight': 0.6})
('top-down', 'hill climbing', {'weight': 0.6})
('top-down', 'top-down', {'weight': 1})
('top-down', 'de boor algorithm', {'weight': 0.6})
('top-down', 'optimization algorithm', {'weight': 0.6})
('top-down', "kruskal's algorithm", {'weight': 0.6})
('top-down', 'jacques philippe marie binet', {'weight': 0.6})
('top-down', 'tabu search', {'weight': 0.6})
('top-down', 'divide and conquer algorithm', {'weight': 0.6})
('top-down', "johnson's algorithm", {'weight': 0.6})
('top-down', 'evolutionary algorithm', {'weight': 0.6})
('top-down', 'clique-width', {'weight': 0.6})
('top-down', 'systems analysis', {'weight': 0.6})
('top-down', 'dynamic programming', {'weight': 0.6})
('top-down', 'subroutine', {'weight': 0.6})
('top-down', 'simulated annealing', {'weight': 0.6})
('top-down', 'tower of hanoi', {'weight': 0.6})
('top-down', 'branch and bound', {'weight': 0.6})
('top-down', 'engineering', {'weight': 0.6})
('top-down', 'matroid', {'weight': 0.6})
('top-down', 'viterbi algorithm', {'weight': 0.6})
('top-down', "lemke's algorithm", {'weight': 0.6})
('top-down', 'simplex algorithm', {'weight': 0.6})
('top-down', 'local search (optimization)', {'weight': 0.6})
('top-down', 'hessian matrix', {'weight': 0.6})
('top-down', 'ibm system r', {'weight': 0.6})
('top-down', 'penalty method', {'weight': 0.6})
('top-down', 'prolog', {'weight': 0.6})
('top-down', 'time-invariant system', {'weight': 0.6})
('top-down', 'criss-cross algorithm', {'weight': 0.6})
('top-down', 'revised simplex algorithm', {'weight': 0.6})
('top-down', 'the mathematical association of america', {'weight': 0.6})
('top-down', 'line search', {'weight': 0.6})
('top-down', 'j (programming language)', {'weight': 0.6})
('top-down', 'word wrap', {'weight': 0.6})
('top-down', 'subset sum problem', {'weight': 0.6})
('top-down', 'integer programming', {'weight': 0.6})
('top-down', 'nucleosome', {'weight': 0.6})
('top-down', 'earley algorithm', {'weight': 0.6})
('top-down', 'referential transparency (computer science)', {'weight': 0.6})
('top-down', 'recursion', {'weight': 0.6})
('top-down', 'mathematica', {'weight': 0.6})
('top-down', 'quicksort', {'weight': 0.6})
('top-down', 'recursion (computer science)', {'weight': 0.6})
('top-down', 'checkerboard', {'weight': 0.6})
('top-down', 'computer science', {'weight': 0.6})
('top-down', 'brute-force search', {'weight': 0.6})
('top-down', 'mathematics', {'weight': 0.6})
('top-down', 'depth-first search', {'weight': 0.6})
('top-down', 'top-down and bottom-up design', {'weight': 0.6})
('top-down', 'correspondence problem', {'weight': 0.6})
('top-down', 'transcription factor', {'weight': 0.6})
('top-down', 'tree decomposition', {'weight': 0.6})
('top-down', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('top-down', 'structural alignment', {'weight': 0.6})
('top-down', 'local convergence', {'weight': 0.6})
('top-down', 'knapsack problem', {'weight': 0.6})
('top-down', 'graph algorithm', {'weight': 0.6})
('top-down', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('top-down', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('top-down', 'hidden markov model', {'weight': 0.6})
('top-down', 'string (computer science)', {'weight': 0.6})
('top-down', 'bioinformatics', {'weight': 0.6})
('top-down', 'genetics', {'weight': 0.6})
('top-down', 'mathematical optimization', {'weight': 0.6})
('top-down', 'artificial neural networks', {'weight': 0.6})
('top-down', 'introduction to algorithms', {'weight': 0.6})
('top-down', 'thomas h. cormen', {'weight': 0.6})
('top-down', 'music information retrieval', {'weight': 0.6})
('top-down', 'beat (music)', {'weight': 0.6})
('top-down', 'longest common subsequence problem', {'weight': 0.6})
('top-down', 'convex minimization', {'weight': 0.6})
('top-down', 'successive parabolic interpolation', {'weight': 0.6})
('top-down', 'fibonacci sequence', {'weight': 0.6})
('top-down', 'maximum subarray problem', {'weight': 0.6})
('top-down', 'convex optimization', {'weight': 0.6})
('top-down', 'memoization', {'weight': 0.6})
('top-down', 'richard bellman', {'weight': 0.6})
('top-down', 'exponential growth', {'weight': 0.6})
('top-down', 'charles e. leiserson', {'weight': 0.6})
('top-down', 'charles erwin wilson', {'weight': 0.6})
('top-down', 'interval scheduling', {'weight': 0.6})
('top-down', 'chart parser', {'weight': 0.6})
('top-down', 'travelling salesman problem', {'weight': 0.6})
('top-down', 'bellman equation', {'weight': 0.6})
("kruskal's algorithm", 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
("kruskal's algorithm", 'photoshop', {'weight': 0.6})
("kruskal's algorithm", 'sequence alignment', {'weight': 0.6})
("kruskal's algorithm", 'flow network', {'weight': 0.6})
("kruskal's algorithm", 'spanning tree', {'weight': 0.5})
("kruskal's algorithm", 'ellipsoid method', {'weight': 0.6})
("kruskal's algorithm", 'chain matrix multiplication', {'weight': 0.6})
("kruskal's algorithm", 'ieee', {'weight': 0.6})
("kruskal's algorithm", 'backtracking', {'weight': 0.6})
("kruskal's algorithm", 'nonlinear conjugate gradient method', {'weight': 0.6})
("kruskal's algorithm", 'dynamic problem', {'weight': 0.6})
("kruskal's algorithm", 'trust region', {'weight': 0.6})
("kruskal's algorithm", 'function (mathematics)', {'weight': 0.6})
("kruskal's algorithm", 'minimum spanning tree', {'weight': 0.6})
("kruskal's algorithm", 'context-free grammar', {'weight': 0.6})
("kruskal's algorithm", 'branch and cut', {'weight': 0.6})
("kruskal's algorithm", 'state variable', {'weight': 0.6})
("kruskal's algorithm", 'treewidth', {'weight': 0.6})
("kruskal's algorithm", 'overlapping subproblem', {'weight': 0.6})
("kruskal's algorithm", 'taylor & francis', {'weight': 0.6})
("kruskal's algorithm", 'cutting-plane method', {'weight': 0.6})
("kruskal's algorithm", 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
("kruskal's algorithm", 'method of undetermined coefficients', {'weight': 0.6})
("kruskal's algorithm", 'combinatorial optimization', {'weight': 0.6})
("kruskal's algorithm", "newton's method in optimization", {'weight': 0.6})
("kruskal's algorithm", 'matrix chain multiplication', {'weight': 0.6})
("kruskal's algorithm", 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
("kruskal's algorithm", 'dynamic time warping', {'weight': 0.6})
("kruskal's algorithm", 'dynamic programming language', {'weight': 0.6})
("kruskal's algorithm", 'call-by-need', {'weight': 0.6})
("kruskal's algorithm", 'big-o notation', {'weight': 0.6})
("kruskal's algorithm", 'graph algorithms', {'weight': 0.5})
("kruskal's algorithm", 'comparison of optimization software', {'weight': 0.6})
("kruskal's algorithm", 'quadratic programming', {'weight': 0.6})
("kruskal's algorithm", 'common lisp', {'weight': 0.6})
("kruskal's algorithm", 'barrier function', {'weight': 0.6})
("kruskal's algorithm", 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
("kruskal's algorithm", 'gradient descent', {'weight': 0.6})
("kruskal's algorithm", 'patricia selinger', {'weight': 0.6})
("kruskal's algorithm", 'discounting', {'weight': 0.6})
("kruskal's algorithm", 'ronald l. rivest', {'weight': 0.6})
("kruskal's algorithm", 'iterative method', {'weight': 0.6})
("kruskal's algorithm", 'limited-memory bfgs', {'weight': 0.6})
("kruskal's algorithm", 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
("kruskal's algorithm", 'longest common substring problem', {'weight': 0.6})
("kruskal's algorithm", 'clifford stein', {'weight': 0.6})
("kruskal's algorithm", 'computer chess', {'weight': 0.6})
("kruskal's algorithm", 'linear programming', {'weight': 0.6})
("kruskal's algorithm", 'bitonic tour', {'weight': 0.6})
("kruskal's algorithm", 'linear search problem', {'weight': 0.6})
("kruskal's algorithm", 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
("kruskal's algorithm", 'systems analysis', {'weight': 0.6})
("kruskal's algorithm", 'capital (economics)', {'weight': 0.6})
("kruskal's algorithm", 'levenshtein distance', {'weight': 0.6})
("kruskal's algorithm", 'nonlinear programming', {'weight': 0.6})
("kruskal's algorithm", 'computational complexity of mathematical operations', {'weight': 0.6})
("kruskal's algorithm", 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
("kruskal's algorithm", 'gradient', {'weight': 0.6})
("kruskal's algorithm", 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
("kruskal's algorithm", 'bulletin of the american mathematical society', {'weight': 0.6})
("kruskal's algorithm", 'u.s. english', {'weight': 0.6})
("kruskal's algorithm", 'refutation table', {'weight': 0.6})
("kruskal's algorithm", 'heuristic algorithm', {'weight': 0.6})
("kruskal's algorithm", 'successive linear programming', {'weight': 0.6})
("kruskal's algorithm", 'optimal substructure', {'weight': 0.6})
("kruskal's algorithm", 'programming language', {'weight': 0.6})
("kruskal's algorithm", 'mergesort', {'weight': 0.6})
("kruskal's algorithm", "dijkstra's algorithm", {'weight': 0.7})
("kruskal's algorithm", 'subgradient method', {'weight': 0.6})
("kruskal's algorithm", 'call-by-name', {'weight': 0.6})
("kruskal's algorithm", 'longest increasing subsequence problem', {'weight': 0.6})
("kruskal's algorithm", 'edward prescott', {'weight': 0.6})
("kruskal's algorithm", 'exponential time', {'weight': 0.6})
("kruskal's algorithm", 'single-linkage clustering', {'weight': 0.7})
("kruskal's algorithm", 'principle of optimality', {'weight': 0.6})
("kruskal's algorithm", "bor\xe5\xafvka's algorithm", {'weight': 0.7})
("kruskal's algorithm", 'mathematical game', {'weight': 0.6})
("kruskal's algorithm", 'nancy stokey', {'weight': 0.6})
("kruskal's algorithm", 'approximation algorithm', {'weight': 0.6})
("kruskal's algorithm", 'discrete-time', {'weight': 0.6})
("kruskal's algorithm", 'cyk algorithm', {'weight': 0.6})
("kruskal's algorithm", 'markov decision process', {'weight': 0.6})
("kruskal's algorithm", "powell's method", {'weight': 0.6})
("kruskal's algorithm", 'wolfe conditions', {'weight': 0.6})
("kruskal's algorithm", 'convexity in economics', {'weight': 0.6})
("kruskal's algorithm", 'transposition table', {'weight': 0.6})
("kruskal's algorithm", 'economics', {'weight': 0.6})
("kruskal's algorithm", 'backward induction', {'weight': 0.6})
("kruskal's algorithm", 'golden section search', {'weight': 0.6})
("kruskal's algorithm", 'edit distance', {'weight': 0.6})
("kruskal's algorithm", 'tree structure', {'weight': 0.6})
("kruskal's algorithm", 'exchange algorithm', {'weight': 0.6})
("kruskal's algorithm", 'dover publications', {'weight': 0.6})
("kruskal's algorithm", 'seam carving', {'weight': 0.6})
("kruskal's algorithm", 'recursive least squares', {'weight': 0.6})
("kruskal's algorithm", 'metaheuristic', {'weight': 0.6})
("kruskal's algorithm", 'quasi-newton method', {'weight': 0.6})
("kruskal's algorithm", 'on-line encyclopedia of integer sequences', {'weight': 0.6})
("kruskal's algorithm", 'robert e. lucas', {'weight': 0.6})
("kruskal's algorithm", 'non-convexity (economics)', {'weight': 0.6})
("kruskal's algorithm", 'sr1 formula', {'weight': 0.6})
("kruskal's algorithm", 'mathematical reviews', {'weight': 0.6})
("kruskal's algorithm", 'puzzle', {'weight': 0.6})
("kruskal's algorithm", 'associative array', {'weight': 0.6})
("kruskal's algorithm", 'reverse-delete algorithm', {'weight': 0.7})
("kruskal's algorithm", 'shortest path problem', {'weight': 0.6})
("kruskal's algorithm", 'dynamic algorithm', {'weight': 0.6})
("kruskal's algorithm", 'augmented lagrangian method', {'weight': 0.6})
("kruskal's algorithm", 'charles delisi', {'weight': 0.6})
("kruskal's algorithm", 'greedy algorithm', {'weight': 0.6})
("kruskal's algorithm", "karmarkar's algorithm", {'weight': 0.6})
("kruskal's algorithm", 'lattice models', {'weight': 0.6})
("kruskal's algorithm", 'utility', {'weight': 0.6})
("kruskal's algorithm", 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
("kruskal's algorithm", 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
("kruskal's algorithm", 'push-relabel maximum flow algorithm', {'weight': 0.6})
("kruskal's algorithm", 'international standard book number', {'weight': 0.6})
("kruskal's algorithm", 'undirected graph', {'weight': 0.6})
("kruskal's algorithm", 'scheme (programming language)', {'weight': 0.6})
("kruskal's algorithm", 'rna structure', {'weight': 0.6})
("kruskal's algorithm", 'hanoi', {'weight': 0.6})
("kruskal's algorithm", 'perl', {'weight': 0.6})
("kruskal's algorithm", 'digital object identifier', {'weight': 0.6})
("kruskal's algorithm", 'sequential quadratic programming', {'weight': 0.6})
("kruskal's algorithm", "dinic's algorithm", {'weight': 0.6})
("kruskal's algorithm", 'pseudo-polynomial time', {'weight': 0.6})
("kruskal's algorithm", 'partition problem', {'weight': 0.6})
("kruskal's algorithm", 'stochastic programming', {'weight': 0.6})
("kruskal's algorithm", 'hill climbing', {'weight': 0.6})
("kruskal's algorithm", 'top-down', {'weight': 0.6})
("kruskal's algorithm", 'de boor algorithm', {'weight': 0.6})
("kruskal's algorithm", 'optimization algorithm', {'weight': 0.6})
("kruskal's algorithm", "kruskal's algorithm", {'weight': 1})
("kruskal's algorithm", 'jacques philippe marie binet', {'weight': 0.6})
("kruskal's algorithm", 'tabu search', {'weight': 0.6})
("kruskal's algorithm", 'divide and conquer algorithm', {'weight': 0.6})
("kruskal's algorithm", "johnson's algorithm", {'weight': 0.6})
("kruskal's algorithm", 'evolutionary algorithm', {'weight': 0.6})
("kruskal's algorithm", 'clique-width', {'weight': 0.6})
("kruskal's algorithm", 'dynamic programming', {'weight': 0.6})
("kruskal's algorithm", 'subroutine', {'weight': 0.6})
("kruskal's algorithm", 'simulated annealing', {'weight': 0.6})
("kruskal's algorithm", 'tower of hanoi', {'weight': 0.6})
("kruskal's algorithm", 'branch and bound', {'weight': 0.6})
("kruskal's algorithm", 'engineering', {'weight': 0.6})
("kruskal's algorithm", 'matroid', {'weight': 0.6})
("kruskal's algorithm", 'viterbi algorithm', {'weight': 0.6})
("kruskal's algorithm", "lemke's algorithm", {'weight': 0.6})
("kruskal's algorithm", 'simplex algorithm', {'weight': 0.6})
("kruskal's algorithm", 'local search (optimization)', {'weight': 0.6})
("kruskal's algorithm", 'hessian matrix', {'weight': 0.6})
("kruskal's algorithm", 'ibm system r', {'weight': 0.6})
("kruskal's algorithm", 'penalty method', {'weight': 0.6})
("kruskal's algorithm", 'prolog', {'weight': 0.6})
("kruskal's algorithm", 'time-invariant system', {'weight': 0.6})
("kruskal's algorithm", 'criss-cross algorithm', {'weight': 0.6})
("kruskal's algorithm", 'revised simplex algorithm', {'weight': 0.6})
("kruskal's algorithm", 'the mathematical association of america', {'weight': 0.6})
("kruskal's algorithm", 'line search', {'weight': 0.6})
("kruskal's algorithm", 'j (programming language)', {'weight': 0.6})
("kruskal's algorithm", 'word wrap', {'weight': 0.6})
("kruskal's algorithm", 'subset sum problem', {'weight': 0.6})
("kruskal's algorithm", 'integer programming', {'weight': 0.6})
("kruskal's algorithm", 'nucleosome', {'weight': 0.6})
("kruskal's algorithm", "prim's algorithm", {'weight': 0.7})
("kruskal's algorithm", 'earley algorithm', {'weight': 0.6})
("kruskal's algorithm", 'referential transparency (computer science)', {'weight': 0.6})
("kruskal's algorithm", 'recursion', {'weight': 0.6})
("kruskal's algorithm", 'mathematica', {'weight': 0.6})
("kruskal's algorithm", 'quicksort', {'weight': 0.6})
("kruskal's algorithm", 'recursion (computer science)', {'weight': 0.6})
("kruskal's algorithm", 'checkerboard', {'weight': 0.6})
("kruskal's algorithm", 'computer science', {'weight': 0.6})
("kruskal's algorithm", 'brute-force search', {'weight': 0.6})
("kruskal's algorithm", 'mathematics', {'weight': 0.6})
("kruskal's algorithm", 'depth-first search', {'weight': 0.6})
("kruskal's algorithm", 'top-down and bottom-up design', {'weight': 0.6})
("kruskal's algorithm", 'correspondence problem', {'weight': 0.6})
("kruskal's algorithm", 'transcription factor', {'weight': 0.6})
("kruskal's algorithm", 'tree decomposition', {'weight': 0.6})
("kruskal's algorithm", 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
("kruskal's algorithm", 'structural alignment', {'weight': 0.6})
("kruskal's algorithm", 'local convergence', {'weight': 0.6})
("kruskal's algorithm", 'knapsack problem', {'weight': 0.6})
("kruskal's algorithm", 'graph algorithm', {'weight': 0.6})
("kruskal's algorithm", 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
("kruskal's algorithm", 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
("kruskal's algorithm", 'hidden markov model', {'weight': 0.6})
("kruskal's algorithm", 'string (computer science)', {'weight': 0.6})
("kruskal's algorithm", 'bioinformatics', {'weight': 0.6})
("kruskal's algorithm", 'genetics', {'weight': 0.6})
("kruskal's algorithm", 'mathematical optimization', {'weight': 0.6})
("kruskal's algorithm", 'artificial neural networks', {'weight': 0.6})
("kruskal's algorithm", 'introduction to algorithms', {'weight': 0.6})
("kruskal's algorithm", 'thomas h. cormen', {'weight': 0.6})
("kruskal's algorithm", 'music information retrieval', {'weight': 0.6})
("kruskal's algorithm", 'beat (music)', {'weight': 0.6})
("kruskal's algorithm", 'longest common subsequence problem', {'weight': 0.6})
("kruskal's algorithm", 'convex minimization', {'weight': 0.6})
("kruskal's algorithm", 'successive parabolic interpolation', {'weight': 0.6})
("kruskal's algorithm", 'fibonacci sequence', {'weight': 0.6})
("kruskal's algorithm", 'maximum subarray problem', {'weight': 0.6})
("kruskal's algorithm", 'convex optimization', {'weight': 0.6})
("kruskal's algorithm", 'memoization', {'weight': 0.6})
("kruskal's algorithm", 'richard bellman', {'weight': 0.6})
("kruskal's algorithm", 'exponential growth', {'weight': 0.6})
("kruskal's algorithm", 'charles e. leiserson', {'weight': 0.6})
("kruskal's algorithm", 'charles erwin wilson', {'weight': 0.6})
("kruskal's algorithm", 'interval scheduling', {'weight': 0.6})
("kruskal's algorithm", 'chart parser', {'weight': 0.6})
("kruskal's algorithm", 'travelling salesman problem', {'weight': 0.6})
("kruskal's algorithm", 'bellman equation', {'weight': 0.6})
('equations', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('equations', 'photoshop', {'weight': 0.6})
('equations', 'sequence alignment', {'weight': 0.6})
('equations', 'flow network', {'weight': 0.6})
('equations', 'solving quadratic equations with continued fractions', {'weight': 0.7})
('equations', 'charles erwin wilson', {'weight': 0.6})
('equations', 'ellipsoid method', {'weight': 0.6})
('equations', 'chain matrix multiplication', {'weight': 0.6})
('equations', 'ieee', {'weight': 0.6})
('equations', 'backtracking', {'weight': 0.6})
('equations', 'nonlinear conjugate gradient method', {'weight': 0.6})
('equations', 'dynamic problem', {'weight': 0.6})
('equations', 'trust region', {'weight': 0.6})
('equations', 'function (mathematics)', {'weight': 0.6})
('equations', 'minimum spanning tree', {'weight': 0.6})
('equations', 'elementary algebra', {'weight': 0.5})
('equations', 'context-free grammar', {'weight': 0.6})
('equations', 'tabu search', {'weight': 0.6})
('equations', 'branch and cut', {'weight': 0.6})
('equations', 'state variable', {'weight': 0.6})
('equations', 'treewidth', {'weight': 0.6})
('equations', 'parabola', {'weight': 0.7})
('equations', 'overlapping subproblem', {'weight': 0.6})
('equations', 'taylor & francis', {'weight': 0.6})
('equations', 'cutting-plane method', {'weight': 0.6})
('equations', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('equations', 'method of undetermined coefficients', {'weight': 0.6})
('equations', 'combinatorial optimization', {'weight': 0.6})
('equations', "newton's method in optimization", {'weight': 0.6})
('equations', 'periodic points of complex quadratic mappings', {'weight': 0.7})
('equations', 'quartic function', {'weight': 0.7})
('equations', 'matrix chain multiplication', {'weight': 0.6})
('equations', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('equations', 'dynamic time warping', {'weight': 0.6})
('equations', 'dynamic programming language', {'weight': 0.6})
('equations', 'call-by-need', {'weight': 0.6})
('equations', 'big-o notation', {'weight': 0.6})
('equations', 'comparison of optimization software', {'weight': 0.6})
('equations', 'quadratic programming', {'weight': 0.6})
('equations', 'common lisp', {'weight': 0.6})
('equations', 'barrier function', {'weight': 0.6})
('equations', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('equations', 'gradient descent', {'weight': 0.6})
('equations', 'patricia selinger', {'weight': 0.6})
('equations', 'discounting', {'weight': 0.6})
('equations', 'ronald l. rivest', {'weight': 0.6})
('equations', 'iterative method', {'weight': 0.6})
('equations', 'limited-memory bfgs', {'weight': 0.6})
('equations', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('equations', 'longest common substring problem', {'weight': 0.6})
('equations', 'clifford stein', {'weight': 0.6})
('equations', 'computer chess', {'weight': 0.6})
('equations', 'linear programming', {'weight': 0.6})
('equations', 'bitonic tour', {'weight': 0.6})
('equations', 'linear search problem', {'weight': 0.6})
('equations', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('equations', 'systems analysis', {'weight': 0.6})
('equations', 'capital (economics)', {'weight': 0.6})
('equations', 'levenshtein distance', {'weight': 0.6})
('equations', 'nonlinear programming', {'weight': 0.6})
('equations', 'computational complexity of mathematical operations', {'weight': 0.6})
('equations', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('equations', 'gradient', {'weight': 0.6})
('equations', 'cubic function', {'weight': 0.7})
('equations', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('equations', 'chakravala method', {'weight': 0.7})
('equations', 'bulletin of the american mathematical society', {'weight': 0.6})
('equations', 'fundamental theorem of algebra', {'weight': 0.7})
('equations', 'u.s. english', {'weight': 0.6})
('equations', 'refutation table', {'weight': 0.6})
('equations', 'heuristic algorithm', {'weight': 0.6})
('equations', 'successive linear programming', {'weight': 0.6})
('equations', 'optimal substructure', {'weight': 0.6})
('equations', 'programming language', {'weight': 0.6})
('equations', 'mergesort', {'weight': 0.6})
('equations', "dijkstra's algorithm", {'weight': 0.6})
('equations', 'subgradient method', {'weight': 0.6})
('equations', 'call-by-name', {'weight': 0.6})
('equations', 'longest increasing subsequence problem', {'weight': 0.6})
('equations', 'edward prescott', {'weight': 0.6})
('equations', 'quadratic function', {'weight': 0.7})
('equations', 'exponential time', {'weight': 0.6})
('equations', 'principle of optimality', {'weight': 0.6})
('equations', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('equations', 'mathematical game', {'weight': 0.6})
('equations', 'nancy stokey', {'weight': 0.6})
('equations', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('equations', 'approximation algorithm', {'weight': 0.6})
('equations', 'discrete-time', {'weight': 0.6})
('equations', 'cyk algorithm', {'weight': 0.6})
('equations', 'markov decision process', {'weight': 0.6})
('equations', "powell's method", {'weight': 0.6})
('equations', 'wolfe conditions', {'weight': 0.6})
('equations', 'convexity in economics', {'weight': 0.6})
('equations', 'transposition table', {'weight': 0.6})
('equations', 'economics', {'weight': 0.6})
('equations', 'backward induction', {'weight': 0.6})
('equations', 'golden section search', {'weight': 0.6})
('equations', 'edit distance', {'weight': 0.6})
('equations', 'tree structure', {'weight': 0.6})
('equations', 'exchange algorithm', {'weight': 0.6})
('equations', 'undirected graph', {'weight': 0.6})
('equations', 'seam carving', {'weight': 0.6})
('equations', 'recursive least squares', {'weight': 0.6})
('equations', 'metaheuristic', {'weight': 0.6})
('equations', 'quasi-newton method', {'weight': 0.6})
('equations', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('equations', 'robert e. lucas', {'weight': 0.6})
('equations', 'non-convexity (economics)', {'weight': 0.6})
('equations', 'sr1 formula', {'weight': 0.6})
('equations', 'mathematical reviews', {'weight': 0.6})
('equations', 'puzzle', {'weight': 0.6})
('equations', 'associative array', {'weight': 0.6})
('equations', 'shortest path problem', {'weight': 0.6})
('equations', 'dynamic algorithm', {'weight': 0.6})
('equations', 'augmented lagrangian method', {'weight': 0.6})
('equations', 'charles delisi', {'weight': 0.6})
('equations', 'greedy algorithm', {'weight': 0.6})
('equations', "karmarkar's algorithm", {'weight': 0.6})
('equations', 'lattice models', {'weight': 0.6})
('equations', 'utility', {'weight': 0.6})
('equations', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('equations', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('equations', 'quadratic polynomial', {'weight': 0.7})
('equations', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('equations', 'international standard book number', {'weight': 0.6})
('equations', 'equations', {'weight': 1})
('equations', 'scheme (programming language)', {'weight': 0.6})
('equations', 'rna structure', {'weight': 0.6})
('equations', 'hanoi', {'weight': 0.6})
('equations', 'perl', {'weight': 0.6})
('equations', 'digital object identifier', {'weight': 0.6})
('equations', 'sequential quadratic programming', {'weight': 0.6})
('equations', "dinic's algorithm", {'weight': 0.6})
('equations', 'pseudo-polynomial time', {'weight': 0.6})
('equations', 'partition problem', {'weight': 0.6})
('equations', 'stochastic programming', {'weight': 0.6})
('equations', 'hill climbing', {'weight': 0.6})
('equations', 'top-down', {'weight': 0.6})
('equations', 'de boor algorithm', {'weight': 0.6})
('equations', 'optimization algorithm', {'weight': 0.6})
('equations', "kruskal's algorithm", {'weight': 0.6})
('equations', 'jacques philippe marie binet', {'weight': 0.6})
('equations', 'dover publications', {'weight': 0.6})
('equations', 'divide and conquer algorithm', {'weight': 0.6})
('equations', "johnson's algorithm", {'weight': 0.6})
('equations', 'evolutionary algorithm', {'weight': 0.6})
('equations', 'clique-width', {'weight': 0.6})
('equations', 'completing the square', {'weight': 0.7})
('equations', 'dynamic programming', {'weight': 0.6})
('equations', 'subroutine', {'weight': 0.6})
('equations', 'simulated annealing', {'weight': 0.6})
('equations', 'tower of hanoi', {'weight': 0.6})
('equations', 'branch and bound', {'weight': 0.6})
('equations', 'engineering', {'weight': 0.6})
('equations', 'matroid', {'weight': 0.6})
('equations', 'viterbi algorithm', {'weight': 0.6})
('equations', "lemke's algorithm", {'weight': 0.6})
('equations', 'simplex algorithm', {'weight': 0.6})
('equations', 'local search (optimization)', {'weight': 0.6})
('equations', 'hessian matrix', {'weight': 0.6})
('equations', 'ibm system r', {'weight': 0.6})
('equations', 'penalty method', {'weight': 0.6})
('equations', 'prolog', {'weight': 0.6})
('equations', 'time-invariant system', {'weight': 0.6})
('equations', 'criss-cross algorithm', {'weight': 0.6})
('equations', 'revised simplex algorithm', {'weight': 0.6})
('equations', 'linear equation', {'weight': 0.7})
('equations', 'the mathematical association of america', {'weight': 0.6})
('equations', 'line search', {'weight': 0.6})
('equations', 'j (programming language)', {'weight': 0.6})
('equations', 'word wrap', {'weight': 0.6})
('equations', 'subset sum problem', {'weight': 0.6})
('equations', 'integer programming', {'weight': 0.6})
('equations', 'nucleosome', {'weight': 0.6})
('equations', 'earley algorithm', {'weight': 0.6})
('equations', 'referential transparency (computer science)', {'weight': 0.6})
('equations', 'recursion', {'weight': 0.6})
('equations', 'mathematica', {'weight': 0.6})
('equations', 'quicksort', {'weight': 0.6})
('equations', 'recursion (computer science)', {'weight': 0.6})
('equations', 'computer science', {'weight': 0.6})
('equations', 'quintic function', {'weight': 0.7})
('equations', 'brute-force search', {'weight': 0.6})
('equations', 'mathematics', {'weight': 0.6})
('equations', 'depth-first search', {'weight': 0.6})
('equations', 'top-down and bottom-up design', {'weight': 0.6})
('equations', 'correspondence problem', {'weight': 0.6})
('equations', 'transcription factor', {'weight': 0.6})
('equations', 'tree decomposition', {'weight': 0.6})
('equations', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('equations', 'structural alignment', {'weight': 0.6})
('equations', 'local convergence', {'weight': 0.6})
('equations', 'knapsack problem', {'weight': 0.6})
('equations', 'graph algorithm', {'weight': 0.6})
('equations', 'polynomials', {'weight': 0.5})
('equations', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('equations', 'hidden markov model', {'weight': 0.6})
('equations', 'string (computer science)', {'weight': 0.6})
('equations', 'bioinformatics', {'weight': 0.6})
('equations', 'genetics', {'weight': 0.6})
('equations', 'mathematical optimization', {'weight': 0.6})
('equations', 'artificial neural networks', {'weight': 0.6})
('equations', 'introduction to algorithms', {'weight': 0.6})
('equations', 'thomas h. cormen', {'weight': 0.6})
('equations', 'music information retrieval', {'weight': 0.6})
('equations', 'beat (music)', {'weight': 0.6})
('equations', 'longest common subsequence problem', {'weight': 0.6})
('equations', 'convex minimization', {'weight': 0.6})
('equations', 'successive parabolic interpolation', {'weight': 0.6})
('equations', 'fibonacci sequence', {'weight': 0.6})
('equations', 'maximum subarray problem', {'weight': 0.6})
('equations', 'convex optimization', {'weight': 0.6})
('equations', 'memoization', {'weight': 0.6})
('equations', 'richard bellman', {'weight': 0.6})
('equations', 'exponential growth', {'weight': 0.6})
('equations', 'charles e. leiserson', {'weight': 0.6})
('equations', 'checkerboard', {'weight': 0.6})
('equations', 'interval scheduling', {'weight': 0.6})
('equations', 'chart parser', {'weight': 0.6})
('equations', 'travelling salesman problem', {'weight': 0.6})
('equations', 'bellman equation', {'weight': 0.6})
('ronald l. rivest', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('ronald l. rivest', 'photoshop', {'weight': 0.6})
('ronald l. rivest', 'sequence alignment', {'weight': 0.6})
('ronald l. rivest', 'flow network', {'weight': 0.6})
('ronald l. rivest', 'ellipsoid method', {'weight': 0.6})
('ronald l. rivest', 'chain matrix multiplication', {'weight': 0.6})
('ronald l. rivest', 'ieee', {'weight': 0.6})
('ronald l. rivest', 'backtracking', {'weight': 0.6})
('ronald l. rivest', 'nonlinear conjugate gradient method', {'weight': 0.6})
('ronald l. rivest', 'dynamic problem', {'weight': 0.6})
('ronald l. rivest', 'trust region', {'weight': 0.6})
('ronald l. rivest', 'function (mathematics)', {'weight': 0.6})
('ronald l. rivest', 'minimum spanning tree', {'weight': 0.6})
('ronald l. rivest', 'context-free grammar', {'weight': 0.6})
('ronald l. rivest', 'branch and cut', {'weight': 0.6})
('ronald l. rivest', 'state variable', {'weight': 0.6})
('ronald l. rivest', 'treewidth', {'weight': 0.6})
('ronald l. rivest', 'overlapping subproblem', {'weight': 0.6})
('ronald l. rivest', 'taylor & francis', {'weight': 0.6})
('ronald l. rivest', 'cutting-plane method', {'weight': 0.6})
('ronald l. rivest', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('ronald l. rivest', 'method of undetermined coefficients', {'weight': 0.6})
('ronald l. rivest', 'combinatorial optimization', {'weight': 0.6})
('ronald l. rivest', "newton's method in optimization", {'weight': 0.6})
('ronald l. rivest', 'matrix chain multiplication', {'weight': 0.6})
('ronald l. rivest', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('ronald l. rivest', 'dynamic time warping', {'weight': 0.6})
('ronald l. rivest', 'dynamic programming language', {'weight': 0.6})
('ronald l. rivest', 'call-by-need', {'weight': 0.6})
('ronald l. rivest', 'big-o notation', {'weight': 0.6})
('ronald l. rivest', 'comparison of optimization software', {'weight': 0.6})
('ronald l. rivest', 'quadratic programming', {'weight': 0.6})
('ronald l. rivest', 'common lisp', {'weight': 0.6})
('ronald l. rivest', 'barrier function', {'weight': 0.6})
('ronald l. rivest', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('ronald l. rivest', 'gradient descent', {'weight': 0.6})
('ronald l. rivest', 'patricia selinger', {'weight': 0.6})
('ronald l. rivest', 'discounting', {'weight': 0.6})
('ronald l. rivest', 'ronald l. rivest', {'weight': 1})
('ronald l. rivest', 'iterative method', {'weight': 0.6})
('ronald l. rivest', 'limited-memory bfgs', {'weight': 0.6})
('ronald l. rivest', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('ronald l. rivest', 'longest common substring problem', {'weight': 0.6})
('ronald l. rivest', 'clifford stein', {'weight': 0.6})
('ronald l. rivest', 'computer chess', {'weight': 0.6})
('ronald l. rivest', 'linear programming', {'weight': 0.6})
('ronald l. rivest', 'bitonic tour', {'weight': 0.6})
('ronald l. rivest', 'linear search problem', {'weight': 0.6})
('ronald l. rivest', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('ronald l. rivest', 'systems analysis', {'weight': 0.6})
('ronald l. rivest', 'capital (economics)', {'weight': 0.6})
('ronald l. rivest', 'levenshtein distance', {'weight': 0.6})
('ronald l. rivest', 'nonlinear programming', {'weight': 0.6})
('ronald l. rivest', 'computational complexity of mathematical operations', {'weight': 0.6})
('ronald l. rivest', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('ronald l. rivest', 'gradient', {'weight': 0.6})
('ronald l. rivest', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('ronald l. rivest', 'bulletin of the american mathematical society', {'weight': 0.6})
('ronald l. rivest', 'u.s. english', {'weight': 0.6})
('ronald l. rivest', 'refutation table', {'weight': 0.6})
('ronald l. rivest', 'heuristic algorithm', {'weight': 0.6})
('ronald l. rivest', 'successive linear programming', {'weight': 0.6})
('ronald l. rivest', 'optimal substructure', {'weight': 0.6})
('ronald l. rivest', 'programming language', {'weight': 0.6})
('ronald l. rivest', 'mergesort', {'weight': 0.6})
('ronald l. rivest', "dijkstra's algorithm", {'weight': 0.6})
('ronald l. rivest', 'subgradient method', {'weight': 0.6})
('ronald l. rivest', 'call-by-name', {'weight': 0.6})
('ronald l. rivest', 'longest increasing subsequence problem', {'weight': 0.6})
('ronald l. rivest', 'edward prescott', {'weight': 0.6})
('ronald l. rivest', 'exponential time', {'weight': 0.6})
('ronald l. rivest', 'principle of optimality', {'weight': 0.6})
('ronald l. rivest', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('ronald l. rivest', 'mathematical game', {'weight': 0.6})
('ronald l. rivest', 'nancy stokey', {'weight': 0.6})
('ronald l. rivest', 'approximation algorithm', {'weight': 0.6})
('ronald l. rivest', 'discrete-time', {'weight': 0.6})
('ronald l. rivest', 'cyk algorithm', {'weight': 0.6})
('ronald l. rivest', 'markov decision process', {'weight': 0.6})
('ronald l. rivest', "powell's method", {'weight': 0.6})
('ronald l. rivest', 'wolfe conditions', {'weight': 0.6})
('ronald l. rivest', 'convexity in economics', {'weight': 0.6})
('ronald l. rivest', 'transposition table', {'weight': 0.6})
('ronald l. rivest', 'economics', {'weight': 0.6})
('ronald l. rivest', 'backward induction', {'weight': 0.6})
('ronald l. rivest', 'golden section search', {'weight': 0.6})
('ronald l. rivest', 'edit distance', {'weight': 0.6})
('ronald l. rivest', 'tree structure', {'weight': 0.6})
('ronald l. rivest', 'exchange algorithm', {'weight': 0.6})
('ronald l. rivest', 'dover publications', {'weight': 0.6})
('ronald l. rivest', 'seam carving', {'weight': 0.6})
('ronald l. rivest', 'recursive least squares', {'weight': 0.6})
('ronald l. rivest', 'metaheuristic', {'weight': 0.6})
('ronald l. rivest', 'quasi-newton method', {'weight': 0.6})
('ronald l. rivest', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('ronald l. rivest', 'robert e. lucas', {'weight': 0.6})
('ronald l. rivest', 'non-convexity (economics)', {'weight': 0.6})
('ronald l. rivest', 'sr1 formula', {'weight': 0.6})
('ronald l. rivest', 'mathematical reviews', {'weight': 0.6})
('ronald l. rivest', 'puzzle', {'weight': 0.6})
('ronald l. rivest', 'associative array', {'weight': 0.6})
('ronald l. rivest', 'shortest path problem', {'weight': 0.6})
('ronald l. rivest', 'dynamic algorithm', {'weight': 0.6})
('ronald l. rivest', 'augmented lagrangian method', {'weight': 0.6})
('ronald l. rivest', 'charles delisi', {'weight': 0.6})
('ronald l. rivest', 'greedy algorithm', {'weight': 0.6})
('ronald l. rivest', "karmarkar's algorithm", {'weight': 0.6})
('ronald l. rivest', 'lattice models', {'weight': 0.6})
('ronald l. rivest', 'utility', {'weight': 0.6})
('ronald l. rivest', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('ronald l. rivest', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('ronald l. rivest', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('ronald l. rivest', 'international standard book number', {'weight': 0.6})
('ronald l. rivest', 'undirected graph', {'weight': 0.6})
('ronald l. rivest', 'scheme (programming language)', {'weight': 0.6})
('ronald l. rivest', 'rna structure', {'weight': 0.6})
('ronald l. rivest', 'hanoi', {'weight': 0.6})
('ronald l. rivest', 'perl', {'weight': 0.6})
('ronald l. rivest', 'digital object identifier', {'weight': 0.6})
('ronald l. rivest', 'sequential quadratic programming', {'weight': 0.6})
('ronald l. rivest', "dinic's algorithm", {'weight': 0.6})
('ronald l. rivest', 'pseudo-polynomial time', {'weight': 0.6})
('ronald l. rivest', 'partition problem', {'weight': 0.6})
('ronald l. rivest', 'stochastic programming', {'weight': 0.6})
('ronald l. rivest', 'hill climbing', {'weight': 0.6})
('ronald l. rivest', 'top-down', {'weight': 0.6})
('ronald l. rivest', 'de boor algorithm', {'weight': 0.6})
('ronald l. rivest', 'optimization algorithm', {'weight': 0.6})
('ronald l. rivest', "kruskal's algorithm", {'weight': 0.6})
('ronald l. rivest', 'jacques philippe marie binet', {'weight': 0.6})
('ronald l. rivest', 'tabu search', {'weight': 0.6})
('ronald l. rivest', 'divide and conquer algorithm', {'weight': 0.6})
('ronald l. rivest', "johnson's algorithm", {'weight': 0.6})
('ronald l. rivest', 'evolutionary algorithm', {'weight': 0.6})
('ronald l. rivest', 'clique-width', {'weight': 0.6})
('ronald l. rivest', 'dynamic programming', {'weight': 0.6})
('ronald l. rivest', 'subroutine', {'weight': 0.6})
('ronald l. rivest', 'simulated annealing', {'weight': 0.6})
('ronald l. rivest', 'tower of hanoi', {'weight': 0.6})
('ronald l. rivest', 'branch and bound', {'weight': 0.6})
('ronald l. rivest', 'engineering', {'weight': 0.6})
('ronald l. rivest', 'matroid', {'weight': 0.6})
('ronald l. rivest', 'viterbi algorithm', {'weight': 0.6})
('ronald l. rivest', "lemke's algorithm", {'weight': 0.6})
('ronald l. rivest', 'simplex algorithm', {'weight': 0.6})
('ronald l. rivest', 'local search (optimization)', {'weight': 0.6})
('ronald l. rivest', 'hessian matrix', {'weight': 0.6})
('ronald l. rivest', 'ibm system r', {'weight': 0.6})
('ronald l. rivest', 'penalty method', {'weight': 0.6})
('ronald l. rivest', 'prolog', {'weight': 0.6})
('ronald l. rivest', 'time-invariant system', {'weight': 0.6})
('ronald l. rivest', 'criss-cross algorithm', {'weight': 0.6})
('ronald l. rivest', 'revised simplex algorithm', {'weight': 0.6})
('ronald l. rivest', 'the mathematical association of america', {'weight': 0.6})
('ronald l. rivest', 'line search', {'weight': 0.6})
('ronald l. rivest', 'j (programming language)', {'weight': 0.6})
('ronald l. rivest', 'word wrap', {'weight': 0.6})
('ronald l. rivest', 'subset sum problem', {'weight': 0.6})
('ronald l. rivest', 'integer programming', {'weight': 0.6})
('ronald l. rivest', 'nucleosome', {'weight': 0.6})
('ronald l. rivest', 'earley algorithm', {'weight': 0.6})
('ronald l. rivest', 'referential transparency (computer science)', {'weight': 0.6})
('ronald l. rivest', 'recursion', {'weight': 0.6})
('ronald l. rivest', 'mathematica', {'weight': 0.6})
('ronald l. rivest', 'quicksort', {'weight': 0.6})
('ronald l. rivest', 'recursion (computer science)', {'weight': 0.6})
('ronald l. rivest', 'checkerboard', {'weight': 0.6})
('ronald l. rivest', 'computer science', {'weight': 0.6})
('ronald l. rivest', 'brute-force search', {'weight': 0.6})
('ronald l. rivest', 'mathematics', {'weight': 0.6})
('ronald l. rivest', 'depth-first search', {'weight': 0.6})
('ronald l. rivest', 'top-down and bottom-up design', {'weight': 0.6})
('ronald l. rivest', 'correspondence problem', {'weight': 0.6})
('ronald l. rivest', 'transcription factor', {'weight': 0.6})
('ronald l. rivest', 'tree decomposition', {'weight': 0.6})
('ronald l. rivest', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('ronald l. rivest', 'structural alignment', {'weight': 0.6})
('ronald l. rivest', 'local convergence', {'weight': 0.6})
('ronald l. rivest', 'knapsack problem', {'weight': 0.6})
('ronald l. rivest', 'graph algorithm', {'weight': 0.6})
('ronald l. rivest', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('ronald l. rivest', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('ronald l. rivest', 'hidden markov model', {'weight': 0.6})
('ronald l. rivest', 'string (computer science)', {'weight': 0.6})
('ronald l. rivest', 'bioinformatics', {'weight': 0.6})
('ronald l. rivest', 'genetics', {'weight': 0.6})
('ronald l. rivest', 'mathematical optimization', {'weight': 0.6})
('ronald l. rivest', 'artificial neural networks', {'weight': 0.6})
('ronald l. rivest', 'introduction to algorithms', {'weight': 0.6})
('ronald l. rivest', 'thomas h. cormen', {'weight': 0.6})
('ronald l. rivest', 'music information retrieval', {'weight': 0.6})
('ronald l. rivest', 'beat (music)', {'weight': 0.6})
('ronald l. rivest', 'longest common subsequence problem', {'weight': 0.6})
('ronald l. rivest', 'convex minimization', {'weight': 0.6})
('ronald l. rivest', 'successive parabolic interpolation', {'weight': 0.6})
('ronald l. rivest', 'fibonacci sequence', {'weight': 0.6})
('ronald l. rivest', 'maximum subarray problem', {'weight': 0.6})
('ronald l. rivest', 'convex optimization', {'weight': 0.6})
('ronald l. rivest', 'memoization', {'weight': 0.6})
('ronald l. rivest', 'richard bellman', {'weight': 0.6})
('ronald l. rivest', 'exponential growth', {'weight': 0.6})
('ronald l. rivest', 'charles e. leiserson', {'weight': 0.6})
('ronald l. rivest', 'charles erwin wilson', {'weight': 0.6})
('ronald l. rivest', 'interval scheduling', {'weight': 0.6})
('ronald l. rivest', 'chart parser', {'weight': 0.6})
('ronald l. rivest', 'travelling salesman problem', {'weight': 0.6})
('ronald l. rivest', 'bellman equation', {'weight': 0.6})
('branch and bound', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('branch and bound', 'photoshop', {'weight': 0.6})
('branch and bound', 'sequence alignment', {'weight': 0.6})
('branch and bound', 'ellipsoid method', {'weight': 0.6})
('branch and bound', 'chain matrix multiplication', {'weight': 0.6})
('branch and bound', 'ieee', {'weight': 0.6})
('branch and bound', 'backtracking', {'weight': 0.7})
('branch and bound', 'nonlinear conjugate gradient method', {'weight': 0.6})
('branch and bound', 'dynamic problem', {'weight': 0.6})
('branch and bound', 'trust region', {'weight': 0.6})
('branch and bound', 'function (mathematics)', {'weight': 0.6})
('branch and bound', 'minimum spanning tree', {'weight': 0.6})
('branch and bound', 'context-free grammar', {'weight': 0.6})
('branch and bound', 'branch and cut', {'weight': 0.6})
('branch and bound', 'state variable', {'weight': 0.6})
('branch and bound', 'treewidth', {'weight': 0.6})
('branch and bound', 'optimization algorithms and methods', {'weight': 0.5})
('branch and bound', 'overlapping subproblem', {'weight': 0.6})
('branch and bound', 'refutation table', {'weight': 0.6})
('branch and bound', 'cutting-plane method', {'weight': 0.6})
('branch and bound', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('branch and bound', 'method of undetermined coefficients', {'weight': 0.6})
('branch and bound', 'flow network', {'weight': 0.6})
('branch and bound', "newton's method in optimization", {'weight': 0.6})
('branch and bound', 'matrix chain multiplication', {'weight': 0.6})
('branch and bound', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('branch and bound', 'dynamic time warping', {'weight': 0.6})
('branch and bound', 'dynamic programming language', {'weight': 0.6})
('branch and bound', 'call-by-need', {'weight': 0.6})
('branch and bound', 'big-o notation', {'weight': 0.6})
('branch and bound', 'comparison of optimization software', {'weight': 0.6})
('branch and bound', 'quadratic programming', {'weight': 0.6})
('branch and bound', 'common lisp', {'weight': 0.6})
('branch and bound', 'barrier function', {'weight': 0.6})
('branch and bound', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('branch and bound', 'gradient descent', {'weight': 0.6})
('branch and bound', 'patricia selinger', {'weight': 0.6})
('branch and bound', 'discounting', {'weight': 0.6})
('branch and bound', 'ronald l. rivest', {'weight': 0.6})
('branch and bound', 'iterative method', {'weight': 0.6})
('branch and bound', 'limited-memory bfgs', {'weight': 0.6})
('branch and bound', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('branch and bound', 'longest common substring problem', {'weight': 0.6})
('branch and bound', 'clifford stein', {'weight': 0.6})
('branch and bound', 'computer chess', {'weight': 0.6})
('branch and bound', 'linear programming', {'weight': 0.6})
('branch and bound', 'bitonic tour', {'weight': 0.6})
('branch and bound', 'linear search problem', {'weight': 0.6})
('branch and bound', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('branch and bound', 'systems analysis', {'weight': 0.6})
('branch and bound', 'capital (economics)', {'weight': 0.6})
('branch and bound', 'levenshtein distance', {'weight': 0.6})
('branch and bound', 'nonlinear programming', {'weight': 0.6})
('branch and bound', 'computational complexity of mathematical operations', {'weight': 0.6})
('branch and bound', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('branch and bound', 'gradient', {'weight': 0.6})
('branch and bound', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('branch and bound', 'bulletin of the american mathematical society', {'weight': 0.6})
('branch and bound', 'u.s. english', {'weight': 0.6})
('branch and bound', 'longest increasing subsequence problem', {'weight': 0.6})
('branch and bound', 'heuristic algorithm', {'weight': 0.6})
('branch and bound', 'successive linear programming', {'weight': 0.6})
('branch and bound', 'optimal substructure', {'weight': 0.6})
('branch and bound', 'taylor & francis', {'weight': 0.6})
('branch and bound', 'programming language', {'weight': 0.6})
('branch and bound', 'mergesort', {'weight': 0.6})
('branch and bound', "dijkstra's algorithm", {'weight': 0.6})
('branch and bound', 'subgradient method', {'weight': 0.6})
('branch and bound', 'call-by-name', {'weight': 0.6})
('branch and bound', 'combinatorial optimization', {'weight': 0.6})
('branch and bound', 'edward prescott', {'weight': 0.6})
('branch and bound', 'exponential time', {'weight': 0.6})
('branch and bound', 'cutting plane', {'weight': 0.7})
('branch and bound', 'principle of optimality', {'weight': 0.6})
('branch and bound', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('branch and bound', 'mathematical game', {'weight': 0.6})
('branch and bound', 'nancy stokey', {'weight': 0.6})
('branch and bound', 'approximation algorithm', {'weight': 0.6})
('branch and bound', 'discrete-time', {'weight': 0.6})
('branch and bound', 'cyk algorithm', {'weight': 0.6})
('branch and bound', 'markov decision process', {'weight': 0.6})
('branch and bound', "powell's method", {'weight': 0.6})
('branch and bound', 'wolfe conditions', {'weight': 0.6})
('branch and bound', 'convexity in economics', {'weight': 0.6})
('branch and bound', 'transposition table', {'weight': 0.6})
('branch and bound', 'economics', {'weight': 0.6})
('branch and bound', 'backward induction', {'weight': 0.6})
('branch and bound', 'golden section search', {'weight': 0.6})
('branch and bound', 'edit distance', {'weight': 0.6})
('branch and bound', 'tree structure', {'weight': 0.6})
('branch and bound', 'exchange algorithm', {'weight': 0.6})
('branch and bound', 'dover publications', {'weight': 0.6})
('branch and bound', 'seam carving', {'weight': 0.6})
('branch and bound', 'recursive least squares', {'weight': 0.6})
('branch and bound', 'metaheuristic', {'weight': 0.6})
('branch and bound', 'quasi-newton method', {'weight': 0.6})
('branch and bound', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('branch and bound', 'robert e. lucas', {'weight': 0.6})
('branch and bound', 'non-convexity (economics)', {'weight': 0.6})
('branch and bound', 'sr1 formula', {'weight': 0.6})
('branch and bound', 'mathematical reviews', {'weight': 0.6})
('branch and bound', 'puzzle', {'weight': 0.6})
('branch and bound', 'associative array', {'weight': 0.6})
('branch and bound', 'shortest path problem', {'weight': 0.6})
('branch and bound', 'dynamic algorithm', {'weight': 0.6})
('branch and bound', 'augmented lagrangian method', {'weight': 0.6})
('branch and bound', 'charles delisi', {'weight': 0.6})
('branch and bound', 'greedy algorithm', {'weight': 0.6})
('branch and bound', "karmarkar's algorithm", {'weight': 0.6})
('branch and bound', 'lattice models', {'weight': 0.6})
('branch and bound', 'utility', {'weight': 0.6})
('branch and bound', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('branch and bound', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('branch and bound', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('branch and bound', 'international standard book number', {'weight': 0.6})
('branch and bound', 'undirected graph', {'weight': 0.6})
('branch and bound', 'scheme (programming language)', {'weight': 0.6})
('branch and bound', 'rna structure', {'weight': 0.6})
('branch and bound', 'hanoi', {'weight': 0.6})
('branch and bound', 'perl', {'weight': 0.6})
('branch and bound', 'digital object identifier', {'weight': 0.6})
('branch and bound', 'sequential quadratic programming', {'weight': 0.6})
('branch and bound', "dinic's algorithm", {'weight': 0.6})
('branch and bound', 'pseudo-polynomial time', {'weight': 0.6})
('branch and bound', 'partition problem', {'weight': 0.6})
('branch and bound', 'stochastic programming', {'weight': 0.6})
('branch and bound', 'hill climbing', {'weight': 0.6})
('branch and bound', 'top-down', {'weight': 0.6})
('branch and bound', 'de boor algorithm', {'weight': 0.6})
('branch and bound', 'optimization algorithm', {'weight': 0.6})
('branch and bound', "kruskal's algorithm", {'weight': 0.6})
('branch and bound', 'branch-and-cut', {'weight': 0.7})
('branch and bound', 'jacques philippe marie binet', {'weight': 0.6})
('branch and bound', 'tabu search', {'weight': 0.6})
('branch and bound', 'divide and conquer algorithm', {'weight': 0.6})
('branch and bound', "johnson's algorithm", {'weight': 0.6})
('branch and bound', 'evolutionary algorithm', {'weight': 0.6})
('branch and bound', 'clique-width', {'weight': 0.6})
('branch and bound', 'dynamic programming', {'weight': 0.6})
('branch and bound', 'subroutine', {'weight': 0.6})
('branch and bound', 'simulated annealing', {'weight': 0.6})
('branch and bound', 'tower of hanoi', {'weight': 0.6})
('branch and bound', 'branch and bound', {'weight': 1})
('branch and bound', 'engineering', {'weight': 0.6})
('branch and bound', 'matroid', {'weight': 0.6})
('branch and bound', 'viterbi algorithm', {'weight': 0.6})
('branch and bound', "lemke's algorithm", {'weight': 0.6})
('branch and bound', 'simplex algorithm', {'weight': 0.6})
('branch and bound', 'local search (optimization)', {'weight': 0.6})
('branch and bound', 'hessian matrix', {'weight': 0.6})
('branch and bound', 'ibm system r', {'weight': 0.6})
('branch and bound', 'penalty method', {'weight': 0.6})
('branch and bound', 'prolog', {'weight': 0.6})
('branch and bound', 'time-invariant system', {'weight': 0.6})
('branch and bound', 'criss-cross algorithm', {'weight': 0.6})
('branch and bound', 'revised simplex algorithm', {'weight': 0.6})
('branch and bound', 'the mathematical association of america', {'weight': 0.6})
('branch and bound', 'line search', {'weight': 0.6})
('branch and bound', 'j (programming language)', {'weight': 0.6})
('branch and bound', 'word wrap', {'weight': 0.6})
('branch and bound', 'subset sum problem', {'weight': 0.6})
('branch and bound', 'integer programming', {'weight': 0.6})
('branch and bound', 'nucleosome', {'weight': 0.6})
('branch and bound', 'earley algorithm', {'weight': 0.6})
('branch and bound', 'referential transparency (computer science)', {'weight': 0.6})
('branch and bound', 'recursion', {'weight': 0.6})
('branch and bound', 'mathematica', {'weight': 0.6})
('branch and bound', 'quicksort', {'weight': 0.6})
('branch and bound', 'recursion (computer science)', {'weight': 0.6})
('branch and bound', 'checkerboard', {'weight': 0.6})
('branch and bound', 'computer science', {'weight': 0.6})
('branch and bound', 'brute-force search', {'weight': 0.6})
('branch and bound', 'mathematics', {'weight': 0.6})
('branch and bound', 'depth-first search', {'weight': 0.6})
('branch and bound', 'top-down and bottom-up design', {'weight': 0.6})
('branch and bound', 'correspondence problem', {'weight': 0.6})
('branch and bound', 'transcription factor', {'weight': 0.6})
('branch and bound', 'tree decomposition', {'weight': 0.6})
('branch and bound', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('branch and bound', 'structural alignment', {'weight': 0.6})
('branch and bound', 'local convergence', {'weight': 0.6})
('branch and bound', 'knapsack problem', {'weight': 0.6})
('branch and bound', 'graph algorithm', {'weight': 0.6})
('branch and bound', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('branch and bound', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('branch and bound', 'hidden markov model', {'weight': 0.6})
('branch and bound', 'string (computer science)', {'weight': 0.6})
('branch and bound', 'bioinformatics', {'weight': 0.6})
('branch and bound', 'genetics', {'weight': 0.6})
('branch and bound', 'mathematical optimization', {'weight': 0.6})
('branch and bound', 'artificial neural networks', {'weight': 0.6})
('branch and bound', 'introduction to algorithms', {'weight': 0.6})
('branch and bound', 'thomas h. cormen', {'weight': 0.6})
('branch and bound', 'integer linear programs', {'weight': 0.7})
('branch and bound', 'music information retrieval', {'weight': 0.6})
('branch and bound', 'beat (music)', {'weight': 0.6})
('branch and bound', 'longest common subsequence problem', {'weight': 0.6})
('branch and bound', 'convex minimization', {'weight': 0.6})
('branch and bound', 'successive parabolic interpolation', {'weight': 0.6})
('branch and bound', 'fibonacci sequence', {'weight': 0.6})
('branch and bound', 'maximum subarray problem', {'weight': 0.6})
('branch and bound', 'convex optimization', {'weight': 0.6})
('branch and bound', 'memoization', {'weight': 0.6})
('branch and bound', 'richard bellman', {'weight': 0.6})
('branch and bound', 'exponential growth', {'weight': 0.6})
('branch and bound', 'charles e. leiserson', {'weight': 0.6})
('branch and bound', 'charles erwin wilson', {'weight': 0.6})
('branch and bound', 'interval scheduling', {'weight': 0.6})
('branch and bound', 'chart parser', {'weight': 0.6})
('branch and bound', 'travelling salesman problem', {'weight': 0.6})
('branch and bound', 'bellman equation', {'weight': 0.6})
('prolog', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('prolog', 'photoshop', {'weight': 0.6})
('prolog', 'sequence alignment', {'weight': 0.6})
('prolog', 'flow network', {'weight': 0.6})
('prolog', 'comparison of prolog implementations', {'weight': 0.7})
('prolog', 'ellipsoid method', {'weight': 0.6})
('prolog', 'chain matrix multiplication', {'weight': 0.6})
('prolog', 'ieee', {'weight': 0.6})
('prolog', 'backtracking', {'weight': 0.6})
('prolog', 'nonlinear conjugate gradient method', {'weight': 0.6})
('prolog', 'dynamic problem', {'weight': 0.6})
('prolog', 'strongly typed', {'weight': 0.7})
('prolog', '1972 in computer science', {'weight': 0.5})
('prolog', 'trust region', {'weight': 0.6})
('prolog', 'prolog programming language family', {'weight': 0.5})
('prolog', 'function (mathematics)', {'weight': 0.6})
('prolog', 'minimum spanning tree', {'weight': 0.6})
('prolog', 'context-free grammar', {'weight': 0.6})
('prolog', 'erlang', {'weight': 0.7})
('prolog', 'branch and cut', {'weight': 0.6})
('prolog', 'state variable', {'weight': 0.6})
('prolog', 'treewidth', {'weight': 0.6})
('prolog', 'overlapping subproblem', {'weight': 0.6})
('prolog', 'taylor & francis', {'weight': 0.6})
('prolog', 'g\xe3\xb6del', {'weight': 0.7})
('prolog', 'cutting-plane method', {'weight': 0.6})
('prolog', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('prolog', 'method of undetermined coefficients', {'weight': 0.6})
('prolog', 'combinatorial optimization', {'weight': 0.6})
('prolog', "newton's method in optimization", {'weight': 0.6})
('prolog', 'matrix chain multiplication', {'weight': 0.6})
('prolog', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('prolog', 'dynamic time warping', {'weight': 0.6})
('prolog', 'dynamic programming language', {'weight': 0.6})
('prolog', 'declarative programming languages', {'weight': 0.5})
('prolog', 'logico-linguistic modeling', {'weight': 0.7})
('prolog', 'big-o notation', {'weight': 0.6})
('prolog', 'comparison of optimization software', {'weight': 0.6})
('prolog', 'quadratic programming', {'weight': 0.6})
('prolog', 'common lisp', {'weight': 0.6})
('prolog', 'barrier function', {'weight': 0.6})
('prolog', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('prolog', 'gradient descent', {'weight': 0.6})
('prolog', 'patricia selinger', {'weight': 0.6})
('prolog', 'discounting', {'weight': 0.6})
('prolog', 'ronald l. rivest', {'weight': 0.6})
('prolog', 'iterative method', {'weight': 0.6})
('prolog', 'limited-memory bfgs', {'weight': 0.6})
('prolog', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('prolog', 'longest common substring problem', {'weight': 0.6})
('prolog', 'clifford stein', {'weight': 0.6})
('prolog', 'computer chess', {'weight': 0.6})
('prolog', 'programming languages with an iso standard', {'weight': 0.5})
('prolog', 'linear programming', {'weight': 0.6})
('prolog', 'bitonic tour', {'weight': 0.6})
('prolog', 'linear search problem', {'weight': 0.6})
('prolog', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('prolog', 'systems analysis', {'weight': 0.6})
('prolog', 'capital (economics)', {'weight': 0.6})
('prolog', 'levenshtein distance', {'weight': 0.6})
('prolog', 'nonlinear programming', {'weight': 0.6})
('prolog', 'computational complexity of mathematical operations', {'weight': 0.6})
('prolog', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('prolog', 'gradient', {'weight': 0.6})
('prolog', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('prolog', 'convex minimization', {'weight': 0.6})
('prolog', 'bulletin of the american mathematical society', {'weight': 0.6})
('prolog', 'scientific community metaphor', {'weight': 0.7})
('prolog', 'u.s. english', {'weight': 0.6})
('prolog', 'refutation table', {'weight': 0.6})
('prolog', 'heuristic algorithm', {'weight': 0.6})
('prolog', 'successive linear programming', {'weight': 0.6})
('prolog', 'optimal substructure', {'weight': 0.6})
('prolog', 'programming language', {'weight': 0.6})
('prolog', 'mergesort', {'weight': 0.6})
('prolog', "dijkstra's algorithm", {'weight': 0.6})
('prolog', 'subgradient method', {'weight': 0.6})
('prolog', 'call-by-name', {'weight': 0.6})
('prolog', 'planner', {'weight': 0.7})
('prolog', 'association for logic programming', {'weight': 0.7})
('prolog', 'longest increasing subsequence problem', {'weight': 0.6})
('prolog', 'edward prescott', {'weight': 0.6})
('prolog', 'exponential time', {'weight': 0.6})
('prolog', 'principle of optimality', {'weight': 0.6})
('prolog', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('prolog', 'mathematical game', {'weight': 0.6})
('prolog', 'nancy stokey', {'weight': 0.6})
('prolog', 'logic programming languages', {'weight': 0.5})
('prolog', 'approximation algorithm', {'weight': 0.6})
('prolog', 'discrete-time', {'weight': 0.6})
('prolog', 'cyk algorithm', {'weight': 0.6})
('prolog', 'markov decision process', {'weight': 0.6})
('prolog', 'mercury', {'weight': 0.7})
('prolog', "powell's method", {'weight': 0.6})
('prolog', 'wolfe conditions', {'weight': 0.6})
('prolog', 'convexity in economics', {'weight': 0.6})
('prolog', 'transposition table', {'weight': 0.6})
('prolog', 'economics', {'weight': 0.6})
('prolog', 'backward induction', {'weight': 0.6})
('prolog', 'golden section search', {'weight': 0.6})
('prolog', 'edit distance', {'weight': 0.6})
('prolog', 'tree structure', {'weight': 0.6})
('prolog', 'exchange algorithm', {'weight': 0.6})
('prolog', 'dover publications', {'weight': 0.6})
('prolog', 'seam carving', {'weight': 0.6})
('prolog', 'recursive least squares', {'weight': 0.6})
('prolog', 'metaheuristic', {'weight': 0.6})
('prolog', 'quasi-newton method', {'weight': 0.6})
('prolog', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('prolog', 'robert e. lucas', {'weight': 0.6})
('prolog', 'non-convexity (economics)', {'weight': 0.6})
('prolog', 'sr1 formula', {'weight': 0.6})
('prolog', 'mathematical reviews', {'weight': 0.6})
('prolog', 'visual prolog', {'weight': 0.7})
('prolog', 'puzzle', {'weight': 0.6})
('prolog', 'associative array', {'weight': 0.6})
('prolog', 'shortest path problem', {'weight': 0.6})
('prolog', 'dynamic algorithm', {'weight': 0.6})
('prolog', 'augmented lagrangian method', {'weight': 0.6})
('prolog', 'charles delisi', {'weight': 0.6})
('prolog', 'greedy algorithm', {'weight': 0.6})
('prolog', "karmarkar's algorithm", {'weight': 0.6})
('prolog', 'lattice models', {'weight': 0.6})
('prolog', 'utility', {'weight': 0.6})
('prolog', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('prolog', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('prolog', 'answer set programming', {'weight': 0.7})
('prolog', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('prolog', 'international standard book number', {'weight': 0.6})
('prolog', 'undirected graph', {'weight': 0.6})
('prolog', 'scheme (programming language)', {'weight': 0.6})
('prolog', 'rna structure', {'weight': 0.6})
('prolog', 'hanoi', {'weight': 0.6})
('prolog', 'perl', {'weight': 0.6})
('prolog', 'digital object identifier', {'weight': 0.6})
('prolog', 'sequential quadratic programming', {'weight': 0.6})
('prolog', "dinic's algorithm", {'weight': 0.6})
('prolog', 'pseudo-polynomial time', {'weight': 0.6})
('prolog', 'partition problem', {'weight': 0.6})
('prolog', 'stochastic programming', {'weight': 0.6})
('prolog', 'datalog', {'weight': 0.7})
('prolog', 'which?', {'weight': 0.7})
('prolog', 'hill climbing', {'weight': 0.6})
('prolog', 'concurrent constraint logic programming', {'weight': 0.7})
('prolog', 'top-down', {'weight': 0.6})
('prolog', 'de boor algorithm', {'weight': 0.6})
('prolog', 'optimization algorithm', {'weight': 0.6})
('prolog', "kruskal's algorithm", {'weight': 0.6})
('prolog', 'multi-agent systems', {'weight': 0.7})
('prolog', 'jacques philippe marie binet', {'weight': 0.6})
('prolog', 'tabu search', {'weight': 0.6})
('prolog', 'divide and conquer algorithm', {'weight': 0.6})
('prolog', "johnson's algorithm", {'weight': 0.6})
('prolog', 'evolutionary algorithm', {'weight': 0.6})
('prolog', 'clique-width', {'weight': 0.6})
('prolog', 'dynamic programming', {'weight': 0.6})
('prolog', 'subroutine', {'weight': 0.6})
('prolog', 'simulated annealing', {'weight': 0.6})
('prolog', 'tower of hanoi', {'weight': 0.6})
('prolog', 'branch and bound', {'weight': 0.6})
('prolog', 'engineering', {'weight': 0.6})
('prolog', 'matroid', {'weight': 0.6})
('prolog', 'viterbi algorithm', {'weight': 0.6})
('prolog', "lemke's algorithm", {'weight': 0.6})
('prolog', 'simplex algorithm', {'weight': 0.6})
('prolog', 'local search (optimization)', {'weight': 0.6})
('prolog', 'hessian matrix', {'weight': 0.6})
('prolog', 'turing-complete', {'weight': 0.7})
('prolog', 'ibm system r', {'weight': 0.6})
('prolog', 'penalty method', {'weight': 0.6})
('prolog', 'prolog', {'weight': 1})
('prolog', 'time-invariant system', {'weight': 0.6})
('prolog', 'criss-cross algorithm', {'weight': 0.6})
('prolog', 'revised simplex algorithm', {'weight': 0.6})
('prolog', 'the mathematical association of america', {'weight': 0.6})
('prolog', 'agentspeak', {'weight': 0.7})
('prolog', 'line search', {'weight': 0.6})
('prolog', 'j (programming language)', {'weight': 0.6})
('prolog', 'word wrap', {'weight': 0.6})
('prolog', 'pattern matching programming languages', {'weight': 0.5})
('prolog', 'subset sum problem', {'weight': 0.6})
('prolog', 'integer programming', {'weight': 0.6})
('prolog', 'nucleosome', {'weight': 0.6})
('prolog', 'programming languages created in 1972', {'weight': 0.5})
('prolog', 'referential transparency (computer science)', {'weight': 0.6})
('prolog', 'object-oriented', {'weight': 0.7})
('prolog', 'graphtalk', {'weight': 0.7})
('prolog', 'recursion', {'weight': 0.6})
('prolog', 'mathematica', {'weight': 0.6})
('prolog', 'quicksort', {'weight': 0.6})
('prolog', 'csc', {'weight': 0.7})
('prolog', 'recursion (computer science)', {'weight': 0.6})
('prolog', 'checkerboard', {'weight': 0.6})
('prolog', 'computer science', {'weight': 0.6})
('prolog', 'brute-force search', {'weight': 0.6})
('prolog', 'mathematics', {'weight': 0.6})
('prolog', 'depth-first search', {'weight': 0.6})
('prolog', 'top-down and bottom-up design', {'weight': 0.6})
('prolog', 'correspondence problem', {'weight': 0.6})
('prolog', 'transcription factor', {'weight': 0.6})
('prolog', 'tree decomposition', {'weight': 0.6})
('prolog', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('prolog', 'structural alignment', {'weight': 0.6})
('prolog', 'local convergence', {'weight': 0.6})
('prolog', 'knapsack problem', {'weight': 0.6})
('prolog', 'graph algorithm', {'weight': 0.6})
('prolog', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('prolog', 'programming languages created in the 1970s', {'weight': 0.5})
('prolog', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('prolog', 'hidden markov model', {'weight': 0.6})
('prolog', 'string (computer science)', {'weight': 0.6})
('prolog', 'bioinformatics', {'weight': 0.6})
('prolog', 'genetics', {'weight': 0.6})
('prolog', 'mathematical optimization', {'weight': 0.6})
('prolog', 'artificial neural networks', {'weight': 0.6})
('prolog', 'introduction to algorithms', {'weight': 0.6})
('prolog', 'thomas h. cormen', {'weight': 0.6})
('prolog', 'earley algorithm', {'weight': 0.6})
('prolog', 'music information retrieval', {'weight': 0.6})
('prolog', 'beat (music)', {'weight': 0.6})
('prolog', 'longest common subsequence problem', {'weight': 0.6})
('prolog', 'call-by-need', {'weight': 0.6})
('prolog', 'successive parabolic interpolation', {'weight': 0.6})
('prolog', 'fibonacci sequence', {'weight': 0.6})
('prolog', 'maximum subarray problem', {'weight': 0.6})
('prolog', 'convex optimization', {'weight': 0.6})
('prolog', 'memoization', {'weight': 0.6})
('prolog', 'richard bellman', {'weight': 0.6})
('prolog', 'exponential growth', {'weight': 0.6})
('prolog', 'charles e. leiserson', {'weight': 0.6})
('prolog', 'charles erwin wilson', {'weight': 0.6})
('prolog', 'interval scheduling', {'weight': 0.6})
('prolog', 'chart parser', {'weight': 0.6})
('prolog', 'travelling salesman problem', {'weight': 0.6})
('prolog', 'bellman equation', {'weight': 0.6})
('time-invariant system', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('time-invariant system', 'photoshop', {'weight': 0.6})
('time-invariant system', 'sequence alignment', {'weight': 0.6})
('time-invariant system', 'flow network', {'weight': 0.6})
('time-invariant system', 'ellipsoid method', {'weight': 0.6})
('time-invariant system', 'chain matrix multiplication', {'weight': 0.6})
('time-invariant system', 'ieee', {'weight': 0.6})
('time-invariant system', 'backtracking', {'weight': 0.6})
('time-invariant system', 'nonlinear conjugate gradient method', {'weight': 0.6})
('time-invariant system', 'dynamic problem', {'weight': 0.6})
('time-invariant system', 'trust region', {'weight': 0.6})
('time-invariant system', 'function (mathematics)', {'weight': 0.6})
('time-invariant system', 'control theory', {'weight': 0.5})
('time-invariant system', 'minimum spanning tree', {'weight': 0.6})
('time-invariant system', 'context-free grammar', {'weight': 0.6})
('time-invariant system', 'branch and cut', {'weight': 0.6})
('time-invariant system', 'state variable', {'weight': 0.6})
('time-invariant system', 'signal processing', {'weight': 0.5})
('time-invariant system', 'treewidth', {'weight': 0.6})
('time-invariant system', 'overlapping subproblem', {'weight': 0.6})
('time-invariant system', 'taylor & francis', {'weight': 0.6})
('time-invariant system', 'cutting-plane method', {'weight': 0.6})
('time-invariant system', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('time-invariant system', 'method of undetermined coefficients', {'weight': 0.6})
('time-invariant system', 'combinatorial optimization', {'weight': 0.6})
('time-invariant system', "newton's method in optimization", {'weight': 0.6})
('time-invariant system', 'matrix chain multiplication', {'weight': 0.6})
('time-invariant system', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('time-invariant system', 'dynamic time warping', {'weight': 0.6})
('time-invariant system', 'dynamic programming language', {'weight': 0.6})
('time-invariant system', 'call-by-need', {'weight': 0.6})
('time-invariant system', 'big-o notation', {'weight': 0.6})
('time-invariant system', 'comparison of optimization software', {'weight': 0.6})
('time-invariant system', 'quadratic programming', {'weight': 0.6})
('time-invariant system', 'common lisp', {'weight': 0.6})
('time-invariant system', 'barrier function', {'weight': 0.6})
('time-invariant system', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('time-invariant system', 'gradient descent', {'weight': 0.6})
('time-invariant system', 'patricia selinger', {'weight': 0.6})
('time-invariant system', 'discounting', {'weight': 0.6})
('time-invariant system', 'ronald l. rivest', {'weight': 0.6})
('time-invariant system', 'iterative method', {'weight': 0.6})
('time-invariant system', 'limited-memory bfgs', {'weight': 0.6})
('time-invariant system', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('time-invariant system', 'longest common substring problem', {'weight': 0.6})
('time-invariant system', 'clifford stein', {'weight': 0.6})
('time-invariant system', 'computer chess', {'weight': 0.6})
('time-invariant system', 'linear programming', {'weight': 0.6})
('time-invariant system', 'bitonic tour', {'weight': 0.6})
('time-invariant system', 'linear search problem', {'weight': 0.6})
('time-invariant system', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('time-invariant system', 'systems analysis', {'weight': 0.6})
('time-invariant system', 'lti system theory', {'weight': 0.7})
('time-invariant system', 'capital (economics)', {'weight': 0.6})
('time-invariant system', 'levenshtein distance', {'weight': 0.6})
('time-invariant system', 'nonlinear programming', {'weight': 0.6})
('time-invariant system', 'computational complexity of mathematical operations', {'weight': 0.6})
('time-invariant system', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('time-invariant system', 'gradient', {'weight': 0.6})
('time-invariant system', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('time-invariant system', 'bulletin of the american mathematical society', {'weight': 0.6})
('time-invariant system', 'u.s. english', {'weight': 0.6})
('time-invariant system', 'refutation table', {'weight': 0.6})
('time-invariant system', 'heuristic algorithm', {'weight': 0.6})
('time-invariant system', 'successive linear programming', {'weight': 0.6})
('time-invariant system', 'optimal substructure', {'weight': 0.6})
('time-invariant system', 'programming language', {'weight': 0.6})
('time-invariant system', 'mergesort', {'weight': 0.6})
('time-invariant system', "dijkstra's algorithm", {'weight': 0.6})
('time-invariant system', 'subgradient method', {'weight': 0.6})
('time-invariant system', 'call-by-name', {'weight': 0.6})
('time-invariant system', 'longest increasing subsequence problem', {'weight': 0.6})
('time-invariant system', 'edward prescott', {'weight': 0.6})
('time-invariant system', 'exponential time', {'weight': 0.6})
('time-invariant system', 'finite impulse response', {'weight': 0.7})
('time-invariant system', 'principle of optimality', {'weight': 0.6})
('time-invariant system', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('time-invariant system', 'mathematical game', {'weight': 0.6})
('time-invariant system', 'nancy stokey', {'weight': 0.6})
('time-invariant system', 'approximation algorithm', {'weight': 0.6})
('time-invariant system', 'discrete-time', {'weight': 0.6})
('time-invariant system', 'cyk algorithm', {'weight': 0.6})
('time-invariant system', 'markov decision process', {'weight': 0.6})
('time-invariant system', "powell's method", {'weight': 0.6})
('time-invariant system', 'wolfe conditions', {'weight': 0.6})
('time-invariant system', 'convexity in economics', {'weight': 0.6})
('time-invariant system', 'transposition table', {'weight': 0.6})
('time-invariant system', 'economics', {'weight': 0.6})
('time-invariant system', 'backward induction', {'weight': 0.6})
('time-invariant system', 'golden section search', {'weight': 0.6})
('time-invariant system', 'edit distance', {'weight': 0.6})
('time-invariant system', 'tree structure', {'weight': 0.6})
('time-invariant system', 'exchange algorithm', {'weight': 0.6})
('time-invariant system', 'dover publications', {'weight': 0.6})
('time-invariant system', 'seam carving', {'weight': 0.6})
('time-invariant system', 'recursive least squares', {'weight': 0.6})
('time-invariant system', 'metaheuristic', {'weight': 0.6})
('time-invariant system', 'quasi-newton method', {'weight': 0.6})
('time-invariant system', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('time-invariant system', 'robert e. lucas', {'weight': 0.6})
('time-invariant system', 'non-convexity (economics)', {'weight': 0.6})
('time-invariant system', 'sr1 formula', {'weight': 0.6})
('time-invariant system', 'mathematical reviews', {'weight': 0.6})
('time-invariant system', 'puzzle', {'weight': 0.6})
('time-invariant system', 'associative array', {'weight': 0.6})
('time-invariant system', 'shortest path problem', {'weight': 0.6})
('time-invariant system', 'dynamic algorithm', {'weight': 0.6})
('time-invariant system', 'augmented lagrangian method', {'weight': 0.6})
('time-invariant system', 'charles delisi', {'weight': 0.6})
('time-invariant system', 'greedy algorithm', {'weight': 0.6})
('time-invariant system', "karmarkar's algorithm", {'weight': 0.6})
('time-invariant system', 'lattice models', {'weight': 0.6})
('time-invariant system', 'utility', {'weight': 0.6})
('time-invariant system', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('time-invariant system', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('time-invariant system', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('time-invariant system', 'international standard book number', {'weight': 0.6})
('time-invariant system', 'undirected graph', {'weight': 0.6})
('time-invariant system', 'scheme (programming language)', {'weight': 0.6})
('time-invariant system', 'rna structure', {'weight': 0.6})
('time-invariant system', 'hanoi', {'weight': 0.6})
('time-invariant system', 'perl', {'weight': 0.6})
('time-invariant system', 'digital object identifier', {'weight': 0.6})
('time-invariant system', 'sequential quadratic programming', {'weight': 0.6})
('time-invariant system', "dinic's algorithm", {'weight': 0.6})
('time-invariant system', 'pseudo-polynomial time', {'weight': 0.6})
('time-invariant system', 'partition problem', {'weight': 0.6})
('time-invariant system', 'stochastic programming', {'weight': 0.6})
('time-invariant system', 'hill climbing', {'weight': 0.6})
('time-invariant system', 'top-down', {'weight': 0.6})
('time-invariant system', 'de boor algorithm', {'weight': 0.6})
('time-invariant system', 'optimization algorithm', {'weight': 0.6})
('time-invariant system', "kruskal's algorithm", {'weight': 0.6})
('time-invariant system', 'state space (controls)', {'weight': 0.7})
('time-invariant system', 'jacques philippe marie binet', {'weight': 0.6})
('time-invariant system', 'tabu search', {'weight': 0.6})
('time-invariant system', 'divide and conquer algorithm', {'weight': 0.6})
('time-invariant system', "johnson's algorithm", {'weight': 0.6})
('time-invariant system', 'signal-flow graph', {'weight': 0.7})
('time-invariant system', 'evolutionary algorithm', {'weight': 0.6})
('time-invariant system', 'clique-width', {'weight': 0.6})
('time-invariant system', 'dynamic programming', {'weight': 0.6})
('time-invariant system', 'subroutine', {'weight': 0.6})
('time-invariant system', 'simulated annealing', {'weight': 0.6})
('time-invariant system', 'tower of hanoi', {'weight': 0.6})
('time-invariant system', 'branch and bound', {'weight': 0.6})
('time-invariant system', 'engineering', {'weight': 0.6})
('time-invariant system', 'matroid', {'weight': 0.6})
('time-invariant system', 'viterbi algorithm', {'weight': 0.6})
('time-invariant system', "lemke's algorithm", {'weight': 0.6})
('time-invariant system', 'simplex algorithm', {'weight': 0.6})
('time-invariant system', 'local search (optimization)', {'weight': 0.6})
('time-invariant system', 'hessian matrix', {'weight': 0.6})
('time-invariant system', 'ibm system r', {'weight': 0.6})
('time-invariant system', 'penalty method', {'weight': 0.6})
('time-invariant system', 'prolog', {'weight': 0.6})
('time-invariant system', 'time-invariant system', {'weight': 1})
('time-invariant system', 'criss-cross algorithm', {'weight': 0.6})
('time-invariant system', 'revised simplex algorithm', {'weight': 0.6})
('time-invariant system', 'sheffer sequence', {'weight': 0.7})
('time-invariant system', 'the mathematical association of america', {'weight': 0.6})
('time-invariant system', 'line search', {'weight': 0.6})
('time-invariant system', 'j (programming language)', {'weight': 0.6})
('time-invariant system', 'word wrap', {'weight': 0.6})
('time-invariant system', 'subset sum problem', {'weight': 0.6})
('time-invariant system', 'integer programming', {'weight': 0.6})
('time-invariant system', 'nucleosome', {'weight': 0.6})
('time-invariant system', 'earley algorithm', {'weight': 0.6})
('time-invariant system', 'referential transparency (computer science)', {'weight': 0.6})
('time-invariant system', 'recursion', {'weight': 0.6})
('time-invariant system', 'mathematica', {'weight': 0.6})
('time-invariant system', 'quicksort', {'weight': 0.6})
('time-invariant system', 'recursion (computer science)', {'weight': 0.6})
('time-invariant system', 'checkerboard', {'weight': 0.6})
('time-invariant system', 'computer science', {'weight': 0.6})
('time-invariant system', 'brute-force search', {'weight': 0.6})
('time-invariant system', 'mathematics', {'weight': 0.6})
('time-invariant system', 'depth-first search', {'weight': 0.6})
('time-invariant system', 'top-down and bottom-up design', {'weight': 0.6})
('time-invariant system', 'correspondence problem', {'weight': 0.6})
('time-invariant system', 'transcription factor', {'weight': 0.6})
('time-invariant system', 'tree decomposition', {'weight': 0.6})
('time-invariant system', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('time-invariant system', 'structural alignment', {'weight': 0.6})
('time-invariant system', 'local convergence', {'weight': 0.6})
('time-invariant system', 'knapsack problem', {'weight': 0.6})
('time-invariant system', 'graph algorithm', {'weight': 0.6})
('time-invariant system', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('time-invariant system', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('time-invariant system', 'hidden markov model', {'weight': 0.6})
('time-invariant system', 'string (computer science)', {'weight': 0.6})
('time-invariant system', 'bioinformatics', {'weight': 0.6})
('time-invariant system', 'genetics', {'weight': 0.6})
('time-invariant system', 'mathematical optimization', {'weight': 0.6})
('time-invariant system', 'artificial neural networks', {'weight': 0.6})
('time-invariant system', 'introduction to algorithms', {'weight': 0.6})
('time-invariant system', 'thomas h. cormen', {'weight': 0.6})
('time-invariant system', 'music information retrieval', {'weight': 0.6})
('time-invariant system', 'beat (music)', {'weight': 0.6})
('time-invariant system', 'longest common subsequence problem', {'weight': 0.6})
('time-invariant system', 'convex minimization', {'weight': 0.6})
('time-invariant system', 'successive parabolic interpolation', {'weight': 0.6})
('time-invariant system', 'fibonacci sequence', {'weight': 0.6})
('time-invariant system', 'maximum subarray problem', {'weight': 0.6})
('time-invariant system', 'convex optimization', {'weight': 0.6})
('time-invariant system', 'memoization', {'weight': 0.6})
('time-invariant system', 'richard bellman', {'weight': 0.6})
('time-invariant system', 'exponential growth', {'weight': 0.6})
('time-invariant system', 'charles e. leiserson', {'weight': 0.6})
('time-invariant system', 'charles erwin wilson', {'weight': 0.6})
('time-invariant system', 'interval scheduling', {'weight': 0.6})
('time-invariant system', 'chart parser', {'weight': 0.6})
('time-invariant system', 'travelling salesman problem', {'weight': 0.6})
('time-invariant system', 'bellman equation', {'weight': 0.6})
('revised simplex algorithm', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('revised simplex algorithm', 'photoshop', {'weight': 0.6})
('revised simplex algorithm', 'sequence alignment', {'weight': 0.6})
('revised simplex algorithm', 'flow network', {'weight': 0.6})
('revised simplex algorithm', 'ellipsoid method', {'weight': 0.6})
('revised simplex algorithm', 'chain matrix multiplication', {'weight': 0.6})
('revised simplex algorithm', 'ieee', {'weight': 0.6})
('revised simplex algorithm', 'backtracking', {'weight': 0.6})
('revised simplex algorithm', 'exchange algorithms', {'weight': 0.5})
('revised simplex algorithm', 'dynamic problem', {'weight': 0.6})
('revised simplex algorithm', 'approximation algorithm', {'weight': 0.6})
('revised simplex algorithm', 'trust region', {'weight': 0.6})
('revised simplex algorithm', 'function (mathematics)', {'weight': 0.6})
('revised simplex algorithm', 'minimum spanning tree', {'weight': 0.6})
('revised simplex algorithm', 'context-free grammar', {'weight': 0.6})
('revised simplex algorithm', 'branch and cut', {'weight': 0.6})
('revised simplex algorithm', 'state variable', {'weight': 0.6})
('revised simplex algorithm', 'treewidth', {'weight': 0.6})
('revised simplex algorithm', 'optimization algorithms and methods', {'weight': 0.5})
('revised simplex algorithm', 'overlapping subproblem', {'weight': 0.6})
('revised simplex algorithm', 'taylor & francis', {'weight': 0.6})
('revised simplex algorithm', 'cutting-plane method', {'weight': 0.6})
('revised simplex algorithm', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('revised simplex algorithm', 'method of undetermined coefficients', {'weight': 0.6})
('revised simplex algorithm', 'combinatorial optimization', {'weight': 0.6})
('revised simplex algorithm', "newton's method in optimization", {'weight': 0.6})
('revised simplex algorithm', 'matrix chain multiplication', {'weight': 0.6})
('revised simplex algorithm', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('revised simplex algorithm', 'dynamic time warping', {'weight': 0.6})
('revised simplex algorithm', 'dynamic programming language', {'weight': 0.6})
('revised simplex algorithm', 'call-by-need', {'weight': 0.6})
('revised simplex algorithm', 'big-o notation', {'weight': 0.6})
('revised simplex algorithm', 'comparison of optimization software', {'weight': 0.6})
('revised simplex algorithm', 'quadratic programming', {'weight': 0.6})
('revised simplex algorithm', 'common lisp', {'weight': 0.6})
('revised simplex algorithm', 'barrier function', {'weight': 0.6})
('revised simplex algorithm', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('revised simplex algorithm', 'gradient descent', {'weight': 0.6})
('revised simplex algorithm', 'patricia selinger', {'weight': 0.6})
('revised simplex algorithm', 'discounting', {'weight': 0.6})
('revised simplex algorithm', 'ronald l. rivest', {'weight': 0.6})
('revised simplex algorithm', 'iterative method', {'weight': 0.6})
('revised simplex algorithm', 'limited-memory bfgs', {'weight': 0.6})
('revised simplex algorithm', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('revised simplex algorithm', 'longest common substring problem', {'weight': 0.6})
('revised simplex algorithm', 'clifford stein', {'weight': 0.6})
('revised simplex algorithm', 'computer chess', {'weight': 0.6})
('revised simplex algorithm', 'linear programming', {'weight': 0.6})
('revised simplex algorithm', 'bitonic tour', {'weight': 0.6})
('revised simplex algorithm', 'linear search problem', {'weight': 0.6})
('revised simplex algorithm', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('revised simplex algorithm', 'systems analysis', {'weight': 0.6})
('revised simplex algorithm', 'capital (economics)', {'weight': 0.6})
('revised simplex algorithm', 'levenshtein distance', {'weight': 0.6})
('revised simplex algorithm', 'nonlinear programming', {'weight': 0.6})
('revised simplex algorithm', 'genetics', {'weight': 0.6})
('revised simplex algorithm', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('revised simplex algorithm', 'gradient', {'weight': 0.6})
('revised simplex algorithm', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('revised simplex algorithm', 'bulletin of the american mathematical society', {'weight': 0.6})
('revised simplex algorithm', 'u.s. english', {'weight': 0.6})
('revised simplex algorithm', 'refutation table', {'weight': 0.6})
('revised simplex algorithm', 'heuristic algorithm', {'weight': 0.6})
('revised simplex algorithm', 'successive linear programming', {'weight': 0.6})
('revised simplex algorithm', 'optimal substructure', {'weight': 0.6})
('revised simplex algorithm', 'programming language', {'weight': 0.6})
('revised simplex algorithm', 'mergesort', {'weight': 0.6})
('revised simplex algorithm', "dijkstra's algorithm", {'weight': 0.6})
('revised simplex algorithm', 'subgradient method', {'weight': 0.6})
('revised simplex algorithm', 'call-by-name', {'weight': 0.6})
('revised simplex algorithm', 'longest increasing subsequence problem', {'weight': 0.6})
('revised simplex algorithm', 'edward prescott', {'weight': 0.6})
('revised simplex algorithm', 'exponential time', {'weight': 0.6})
('revised simplex algorithm', 'principle of optimality', {'weight': 0.6})
('revised simplex algorithm', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('revised simplex algorithm', 'mathematical game', {'weight': 0.6})
('revised simplex algorithm', 'nancy stokey', {'weight': 0.6})
('revised simplex algorithm', 'nonlinear conjugate gradient method', {'weight': 0.6})
('revised simplex algorithm', 'discrete-time', {'weight': 0.6})
('revised simplex algorithm', 'cyk algorithm', {'weight': 0.6})
('revised simplex algorithm', 'markov decision process', {'weight': 0.6})
('revised simplex algorithm', "powell's method", {'weight': 0.6})
('revised simplex algorithm', 'wolfe conditions', {'weight': 0.6})
('revised simplex algorithm', 'convexity in economics', {'weight': 0.6})
('revised simplex algorithm', 'transposition table', {'weight': 0.6})
('revised simplex algorithm', 'economics', {'weight': 0.6})
('revised simplex algorithm', 'backward induction', {'weight': 0.6})
('revised simplex algorithm', 'golden section search', {'weight': 0.6})
('revised simplex algorithm', 'edit distance', {'weight': 0.6})
('revised simplex algorithm', 'tree structure', {'weight': 0.6})
('revised simplex algorithm', 'exchange algorithm', {'weight': 0.6})
('revised simplex algorithm', 'dover publications', {'weight': 0.6})
('revised simplex algorithm', 'seam carving', {'weight': 0.6})
('revised simplex algorithm', 'recursive least squares', {'weight': 0.6})
('revised simplex algorithm', 'metaheuristic', {'weight': 0.6})
('revised simplex algorithm', 'quasi-newton method', {'weight': 0.6})
('revised simplex algorithm', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('revised simplex algorithm', 'robert e. lucas', {'weight': 0.6})
('revised simplex algorithm', 'non-convexity (economics)', {'weight': 0.6})
('revised simplex algorithm', 'sr1 formula', {'weight': 0.6})
('revised simplex algorithm', 'mathematical reviews', {'weight': 0.6})
('revised simplex algorithm', 'puzzle', {'weight': 0.6})
('revised simplex algorithm', 'associative array', {'weight': 0.6})
('revised simplex algorithm', 'shortest path problem', {'weight': 0.6})
('revised simplex algorithm', 'dynamic algorithm', {'weight': 0.6})
('revised simplex algorithm', 'augmented lagrangian method', {'weight': 0.6})
('revised simplex algorithm', 'charles delisi', {'weight': 0.6})
('revised simplex algorithm', 'greedy algorithm', {'weight': 0.6})
('revised simplex algorithm', "karmarkar's algorithm", {'weight': 0.6})
('revised simplex algorithm', 'lattice models', {'weight': 0.6})
('revised simplex algorithm', 'utility', {'weight': 0.6})
('revised simplex algorithm', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('revised simplex algorithm', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('revised simplex algorithm', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('revised simplex algorithm', 'international standard book number', {'weight': 0.6})
('revised simplex algorithm', 'undirected graph', {'weight': 0.6})
('revised simplex algorithm', 'scheme (programming language)', {'weight': 0.6})
('revised simplex algorithm', 'rna structure', {'weight': 0.6})
('revised simplex algorithm', 'hanoi', {'weight': 0.6})
('revised simplex algorithm', 'perl', {'weight': 0.6})
('revised simplex algorithm', 'digital object identifier', {'weight': 0.6})
('revised simplex algorithm', 'sequential quadratic programming', {'weight': 0.6})
('revised simplex algorithm', "dinic's algorithm", {'weight': 0.6})
('revised simplex algorithm', 'pseudo-polynomial time', {'weight': 0.6})
('revised simplex algorithm', 'partition problem', {'weight': 0.6})
('revised simplex algorithm', 'operations research', {'weight': 0.5})
('revised simplex algorithm', 'hill climbing', {'weight': 0.6})
('revised simplex algorithm', 'top-down', {'weight': 0.6})
('revised simplex algorithm', 'de boor algorithm', {'weight': 0.6})
('revised simplex algorithm', 'optimization algorithm', {'weight': 0.6})
('revised simplex algorithm', "kruskal's algorithm", {'weight': 0.6})
('revised simplex algorithm', 'jacques philippe marie binet', {'weight': 0.6})
('revised simplex algorithm', 'tabu search', {'weight': 0.6})
('revised simplex algorithm', 'divide and conquer algorithm', {'weight': 0.6})
('revised simplex algorithm', "johnson's algorithm", {'weight': 0.6})
('revised simplex algorithm', 'evolutionary algorithm', {'weight': 0.6})
('revised simplex algorithm', 'clique-width', {'weight': 0.6})
('revised simplex algorithm', 'dynamic programming', {'weight': 0.6})
('revised simplex algorithm', 'subroutine', {'weight': 0.6})
('revised simplex algorithm', 'simulated annealing', {'weight': 0.6})
('revised simplex algorithm', 'tower of hanoi', {'weight': 0.6})
('revised simplex algorithm', 'branch and bound', {'weight': 0.6})
('revised simplex algorithm', 'engineering', {'weight': 0.6})
('revised simplex algorithm', 'matroid', {'weight': 0.6})
('revised simplex algorithm', 'viterbi algorithm', {'weight': 0.6})
('revised simplex algorithm', "lemke's algorithm", {'weight': 0.6})
('revised simplex algorithm', 'simplex algorithm', {'weight': 0.6})
('revised simplex algorithm', 'stochastic programming', {'weight': 0.6})
('revised simplex algorithm', 'hessian matrix', {'weight': 0.6})
('revised simplex algorithm', 'ibm system r', {'weight': 0.6})
('revised simplex algorithm', 'penalty method', {'weight': 0.6})
('revised simplex algorithm', 'prolog', {'weight': 0.6})
('revised simplex algorithm', 'time-invariant system', {'weight': 0.6})
('revised simplex algorithm', 'criss-cross algorithm', {'weight': 0.6})
('revised simplex algorithm', 'revised simplex algorithm', {'weight': 1})
('revised simplex algorithm', 'the mathematical association of america', {'weight': 0.6})
('revised simplex algorithm', 'line search', {'weight': 0.6})
('revised simplex algorithm', 'j (programming language)', {'weight': 0.6})
('revised simplex algorithm', 'word wrap', {'weight': 0.6})
('revised simplex algorithm', 'subset sum problem', {'weight': 0.6})
('revised simplex algorithm', 'integer programming', {'weight': 0.6})
('revised simplex algorithm', 'nucleosome', {'weight': 0.6})
('revised simplex algorithm', 'earley algorithm', {'weight': 0.6})
('revised simplex algorithm', 'referential transparency (computer science)', {'weight': 0.6})
('revised simplex algorithm', 'recursion', {'weight': 0.6})
('revised simplex algorithm', 'mathematica', {'weight': 0.6})
('revised simplex algorithm', 'quicksort', {'weight': 0.6})
('revised simplex algorithm', 'recursion (computer science)', {'weight': 0.6})
('revised simplex algorithm', 'checkerboard', {'weight': 0.6})
('revised simplex algorithm', 'computer science', {'weight': 0.6})
('revised simplex algorithm', 'brute-force search', {'weight': 0.6})
('revised simplex algorithm', 'mathematics', {'weight': 0.6})
('revised simplex algorithm', 'depth-first search', {'weight': 0.6})
('revised simplex algorithm', 'top-down and bottom-up design', {'weight': 0.6})
('revised simplex algorithm', 'correspondence problem', {'weight': 0.6})
('revised simplex algorithm', 'transcription factor', {'weight': 0.6})
('revised simplex algorithm', 'tree decomposition', {'weight': 0.6})
('revised simplex algorithm', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('revised simplex algorithm', 'structural alignment', {'weight': 0.6})
('revised simplex algorithm', 'local convergence', {'weight': 0.6})
('revised simplex algorithm', 'knapsack problem', {'weight': 0.6})
('revised simplex algorithm', 'graph algorithm', {'weight': 0.6})
('revised simplex algorithm', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('revised simplex algorithm', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('revised simplex algorithm', 'hidden markov model', {'weight': 0.6})
('revised simplex algorithm', 'string (computer science)', {'weight': 0.6})
('revised simplex algorithm', 'bioinformatics', {'weight': 0.6})
('revised simplex algorithm', 'computational complexity of mathematical operations', {'weight': 0.6})
('revised simplex algorithm', 'mathematical optimization', {'weight': 0.6})
('revised simplex algorithm', 'local search (optimization)', {'weight': 0.6})
('revised simplex algorithm', 'artificial neural networks', {'weight': 0.6})
('revised simplex algorithm', 'introduction to algorithms', {'weight': 0.6})
('revised simplex algorithm', 'thomas h. cormen', {'weight': 0.6})
('revised simplex algorithm', 'music information retrieval', {'weight': 0.6})
('revised simplex algorithm', 'beat (music)', {'weight': 0.6})
('revised simplex algorithm', 'longest common subsequence problem', {'weight': 0.6})
('revised simplex algorithm', 'convex minimization', {'weight': 0.6})
('revised simplex algorithm', 'successive parabolic interpolation', {'weight': 0.6})
('revised simplex algorithm', 'fibonacci sequence', {'weight': 0.6})
('revised simplex algorithm', 'maximum subarray problem', {'weight': 0.6})
('revised simplex algorithm', 'convex optimization', {'weight': 0.6})
('revised simplex algorithm', 'memoization', {'weight': 0.6})
('revised simplex algorithm', 'richard bellman', {'weight': 0.6})
('revised simplex algorithm', 'exponential growth', {'weight': 0.6})
('revised simplex algorithm', 'charles e. leiserson', {'weight': 0.6})
('revised simplex algorithm', 'charles erwin wilson', {'weight': 0.6})
('revised simplex algorithm', 'interval scheduling', {'weight': 0.6})
('revised simplex algorithm', 'chart parser', {'weight': 0.6})
('revised simplex algorithm', 'travelling salesman problem', {'weight': 0.6})
('revised simplex algorithm', 'bellman equation', {'weight': 0.6})
('subset sum problem', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('subset sum problem', 'photoshop', {'weight': 0.6})
('subset sum problem', 'sequence alignment', {'weight': 0.6})
('subset sum problem', 'flow network', {'weight': 0.6})
('subset sum problem', 'ellipsoid method', {'weight': 0.6})
('subset sum problem', 'chain matrix multiplication', {'weight': 0.6})
('subset sum problem', 'ieee', {'weight': 0.6})
('subset sum problem', 'backtracking', {'weight': 0.6})
('subset sum problem', 'nonlinear conjugate gradient method', {'weight': 0.6})
('subset sum problem', 'dynamic problem', {'weight': 0.6})
('subset sum problem', 'trust region', {'weight': 0.6})
('subset sum problem', 'function (mathematics)', {'weight': 0.6})
('subset sum problem', 'minimum spanning tree', {'weight': 0.6})
('subset sum problem', 'context-free grammar', {'weight': 0.6})
('subset sum problem', 'branch and cut', {'weight': 0.6})
('subset sum problem', 'state variable', {'weight': 0.6})
('subset sum problem', 'treewidth', {'weight': 0.6})
('subset sum problem', 'overlapping subproblem', {'weight': 0.6})
('subset sum problem', 'taylor & francis', {'weight': 0.6})
('subset sum problem', 'cutting-plane method', {'weight': 0.6})
('subset sum problem', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('subset sum problem', 'method of undetermined coefficients', {'weight': 0.6})
('subset sum problem', 'combinatorial optimization', {'weight': 0.6})
('subset sum problem', "newton's method in optimization", {'weight': 0.6})
('subset sum problem', 'matrix chain multiplication', {'weight': 0.6})
('subset sum problem', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('subset sum problem', 'dynamic time warping', {'weight': 0.6})
('subset sum problem', 'dynamic programming language', {'weight': 0.6})
('subset sum problem', 'call-by-need', {'weight': 0.6})
('subset sum problem', 'big-o notation', {'weight': 0.6})
('subset sum problem', 'comparison of optimization software', {'weight': 0.6})
('subset sum problem', 'quadratic programming', {'weight': 0.6})
('subset sum problem', 'common lisp', {'weight': 0.6})
('subset sum problem', 'barrier function', {'weight': 0.6})
('subset sum problem', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('subset sum problem', 'gradient descent', {'weight': 0.6})
('subset sum problem', 'patricia selinger', {'weight': 0.6})
('subset sum problem', 'discounting', {'weight': 0.6})
('subset sum problem', 'ronald l. rivest', {'weight': 0.6})
('subset sum problem', 'iterative method', {'weight': 0.6})
('subset sum problem', 'limited-memory bfgs', {'weight': 0.6})
('subset sum problem', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('subset sum problem', 'longest common substring problem', {'weight': 0.6})
('subset sum problem', 'clifford stein', {'weight': 0.6})
('subset sum problem', 'computer chess', {'weight': 0.6})
('subset sum problem', '3sum', {'weight': 0.7})
('subset sum problem', 'linear programming', {'weight': 0.6})
('subset sum problem', 'bitonic tour', {'weight': 0.6})
('subset sum problem', 'linear search problem', {'weight': 0.6})
('subset sum problem', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('subset sum problem', 'systems analysis', {'weight': 0.6})
('subset sum problem', 'capital (economics)', {'weight': 0.6})
('subset sum problem', 'levenshtein distance', {'weight': 0.6})
('subset sum problem', 'nonlinear programming', {'weight': 0.6})
('subset sum problem', 'computational complexity of mathematical operations', {'weight': 0.6})
('subset sum problem', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('subset sum problem', 'gradient', {'weight': 0.6})
('subset sum problem', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('subset sum problem', 'bulletin of the american mathematical society', {'weight': 0.6})
('subset sum problem', 'u.s. english', {'weight': 0.6})
('subset sum problem', 'refutation table', {'weight': 0.6})
('subset sum problem', 'heuristic algorithm', {'weight': 0.6})
('subset sum problem', 'successive linear programming', {'weight': 0.6})
('subset sum problem', 'optimal substructure', {'weight': 0.6})
('subset sum problem', 'programming language', {'weight': 0.6})
('subset sum problem', 'mergesort', {'weight': 0.6})
('subset sum problem', "dijkstra's algorithm", {'weight': 0.6})
('subset sum problem', 'subgradient method', {'weight': 0.6})
('subset sum problem', 'call-by-name', {'weight': 0.6})
('subset sum problem', 'longest increasing subsequence problem', {'weight': 0.6})
('subset sum problem', 'edward prescott', {'weight': 0.6})
('subset sum problem', 'exponential time', {'weight': 0.6})
('subset sum problem', 'principle of optimality', {'weight': 0.6})
('subset sum problem', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('subset sum problem', 'mathematical game', {'weight': 0.6})
('subset sum problem', 'nancy stokey', {'weight': 0.6})
('subset sum problem', 'approximation algorithm', {'weight': 0.6})
('subset sum problem', 'discrete-time', {'weight': 0.6})
('subset sum problem', 'cyk algorithm', {'weight': 0.6})
('subset sum problem', 'markov decision process', {'weight': 0.6})
('subset sum problem', "powell's method", {'weight': 0.6})
('subset sum problem', 'wolfe conditions', {'weight': 0.6})
('subset sum problem', 'convexity in economics', {'weight': 0.6})
('subset sum problem', 'transposition table', {'weight': 0.6})
('subset sum problem', 'economics', {'weight': 0.6})
('subset sum problem', 'backward induction', {'weight': 0.6})
('subset sum problem', 'golden section search', {'weight': 0.6})
('subset sum problem', 'edit distance', {'weight': 0.6})
('subset sum problem', 'tree structure', {'weight': 0.6})
('subset sum problem', 'exchange algorithm', {'weight': 0.6})
('subset sum problem', 'dover publications', {'weight': 0.6})
('subset sum problem', 'seam carving', {'weight': 0.6})
('subset sum problem', 'recursive least squares', {'weight': 0.6})
('subset sum problem', 'metaheuristic', {'weight': 0.6})
('subset sum problem', 'quasi-newton method', {'weight': 0.6})
('subset sum problem', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('subset sum problem', 'robert e. lucas', {'weight': 0.6})
('subset sum problem', 'non-convexity (economics)', {'weight': 0.6})
('subset sum problem', 'sr1 formula', {'weight': 0.6})
('subset sum problem', 'mathematical reviews', {'weight': 0.6})
('subset sum problem', 'puzzle', {'weight': 0.6})
('subset sum problem', 'associative array', {'weight': 0.6})
('subset sum problem', 'shortest path problem', {'weight': 0.6})
('subset sum problem', 'dynamic algorithm', {'weight': 0.6})
('subset sum problem', 'augmented lagrangian method', {'weight': 0.6})
('subset sum problem', 'charles delisi', {'weight': 0.6})
('subset sum problem', 'greedy algorithm', {'weight': 0.6})
('subset sum problem', "karmarkar's algorithm", {'weight': 0.6})
('subset sum problem', 'lattice models', {'weight': 0.6})
('subset sum problem', 'utility', {'weight': 0.6})
('subset sum problem', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('subset sum problem', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('subset sum problem', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('subset sum problem', 'international standard book number', {'weight': 0.6})
('subset sum problem', 'undirected graph', {'weight': 0.6})
('subset sum problem', 'scheme (programming language)', {'weight': 0.6})
('subset sum problem', 'rna structure', {'weight': 0.6})
('subset sum problem', 'hanoi', {'weight': 0.6})
('subset sum problem', 'perl', {'weight': 0.6})
('subset sum problem', 'digital object identifier', {'weight': 0.6})
('subset sum problem', 'sequential quadratic programming', {'weight': 0.6})
('subset sum problem', "dinic's algorithm", {'weight': 0.6})
('subset sum problem', 'pseudo-polynomial time', {'weight': 0.6})
('subset sum problem', 'partition problem', {'weight': 0.6})
('subset sum problem', 'stochastic programming', {'weight': 0.6})
('subset sum problem', 'hill climbing', {'weight': 0.6})
('subset sum problem', 'top-down', {'weight': 0.6})
('subset sum problem', 'de boor algorithm', {'weight': 0.6})
('subset sum problem', 'optimization algorithm', {'weight': 0.6})
('subset sum problem', "kruskal's algorithm", {'weight': 0.6})
('subset sum problem', 'jacques philippe marie binet', {'weight': 0.6})
('subset sum problem', 'tabu search', {'weight': 0.6})
('subset sum problem', 'divide and conquer algorithm', {'weight': 0.6})
('subset sum problem', "johnson's algorithm", {'weight': 0.6})
('subset sum problem', 'evolutionary algorithm', {'weight': 0.6})
('subset sum problem', 'clique-width', {'weight': 0.6})
('subset sum problem', 'weakly np-complete problems', {'weight': 0.5})
('subset sum problem', 'dynamic programming', {'weight': 0.6})
('subset sum problem', 'subroutine', {'weight': 0.6})
('subset sum problem', 'simulated annealing', {'weight': 0.6})
('subset sum problem', 'tower of hanoi', {'weight': 0.6})
('subset sum problem', 'branch and bound', {'weight': 0.6})
('subset sum problem', 'engineering', {'weight': 0.6})
('subset sum problem', 'matroid', {'weight': 0.6})
('subset sum problem', 'viterbi algorithm', {'weight': 0.6})
('subset sum problem', "lemke's algorithm", {'weight': 0.6})
('subset sum problem', 'simplex algorithm', {'weight': 0.6})
('subset sum problem', 'local search (optimization)', {'weight': 0.6})
('subset sum problem', 'hessian matrix', {'weight': 0.6})
('subset sum problem', 'ibm system r', {'weight': 0.6})
('subset sum problem', 'penalty method', {'weight': 0.6})
('subset sum problem', 'prolog', {'weight': 0.6})
('subset sum problem', 'time-invariant system', {'weight': 0.6})
('subset sum problem', 'criss-cross algorithm', {'weight': 0.6})
('subset sum problem', 'revised simplex algorithm', {'weight': 0.6})
('subset sum problem', 'the mathematical association of america', {'weight': 0.6})
('subset sum problem', 'line search', {'weight': 0.6})
('subset sum problem', 'j (programming language)', {'weight': 0.6})
('subset sum problem', 'word wrap', {'weight': 0.6})
('subset sum problem', 'subset sum problem', {'weight': 1})
('subset sum problem', 'integer programming', {'weight': 0.6})
('subset sum problem', 'nucleosome', {'weight': 0.6})
('subset sum problem', 'earley algorithm', {'weight': 0.6})
('subset sum problem', 'referential transparency (computer science)', {'weight': 0.6})
('subset sum problem', 'recursion', {'weight': 0.6})
('subset sum problem', 'mathematica', {'weight': 0.6})
('subset sum problem', 'quicksort', {'weight': 0.6})
('subset sum problem', 'recursion (computer science)', {'weight': 0.6})
('subset sum problem', 'checkerboard', {'weight': 0.6})
('subset sum problem', 'computer science', {'weight': 0.6})
('subset sum problem', 'brute-force search', {'weight': 0.6})
('subset sum problem', 'mathematics', {'weight': 0.6})
('subset sum problem', 'depth-first search', {'weight': 0.6})
('subset sum problem', 'top-down and bottom-up design', {'weight': 0.6})
('subset sum problem', 'correspondence problem', {'weight': 0.6})
('subset sum problem', 'transcription factor', {'weight': 0.6})
('subset sum problem', 'tree decomposition', {'weight': 0.6})
('subset sum problem', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('subset sum problem', 'structural alignment', {'weight': 0.6})
('subset sum problem', 'local convergence', {'weight': 0.6})
('subset sum problem', 'knapsack problem', {'weight': 0.6})
('subset sum problem', 'graph algorithm', {'weight': 0.6})
('subset sum problem', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('subset sum problem', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('subset sum problem', 'hidden markov model', {'weight': 0.6})
('subset sum problem', 'string (computer science)', {'weight': 0.6})
('subset sum problem', 'bioinformatics', {'weight': 0.6})
('subset sum problem', 'genetics', {'weight': 0.6})
('subset sum problem', 'mathematical optimization', {'weight': 0.6})
('subset sum problem', 'artificial neural networks', {'weight': 0.6})
('subset sum problem', 'introduction to algorithms', {'weight': 0.6})
('subset sum problem', 'thomas h. cormen', {'weight': 0.6})
('subset sum problem', 'music information retrieval', {'weight': 0.6})
('subset sum problem', 'beat (music)', {'weight': 0.6})
('subset sum problem', 'longest common subsequence problem', {'weight': 0.6})
('subset sum problem', 'convex minimization', {'weight': 0.6})
('subset sum problem', 'successive parabolic interpolation', {'weight': 0.6})
('subset sum problem', 'fibonacci sequence', {'weight': 0.6})
('subset sum problem', 'maximum subarray problem', {'weight': 0.6})
('subset sum problem', 'convex optimization', {'weight': 0.6})
('subset sum problem', 'memoization', {'weight': 0.6})
('subset sum problem', 'merkle\xe2\x80\x93hellman knapsack cryptosystem', {'weight': 0.7})
('subset sum problem', 'richard bellman', {'weight': 0.6})
('subset sum problem', 'exponential growth', {'weight': 0.6})
('subset sum problem', 'charles e. leiserson', {'weight': 0.6})
('subset sum problem', 'charles erwin wilson', {'weight': 0.6})
('subset sum problem', 'interval scheduling', {'weight': 0.6})
('subset sum problem', 'chart parser', {'weight': 0.6})
('subset sum problem', 'travelling salesman problem', {'weight': 0.6})
('subset sum problem', 'bellman equation', {'weight': 0.6})
('integer programming', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('integer programming', 'photoshop', {'weight': 0.6})
('integer programming', 'sequence alignment', {'weight': 0.6})
('integer programming', 'ellipsoid method', {'weight': 0.6})
('integer programming', 'chain matrix multiplication', {'weight': 0.6})
('integer programming', 'ieee', {'weight': 0.6})
('integer programming', 'backtracking', {'weight': 0.6})
('integer programming', 'nonlinear conjugate gradient method', {'weight': 0.6})
('integer programming', 'dynamic problem', {'weight': 0.6})
('integer programming', 'trust region', {'weight': 0.6})
('integer programming', 'function (mathematics)', {'weight': 0.6})
('integer programming', 'minimum spanning tree', {'weight': 0.6})
('integer programming', 'context-free grammar', {'weight': 0.6})
('integer programming', 'branch and cut', {'weight': 0.6})
('integer programming', 'state variable', {'weight': 0.6})
('integer programming', 'treewidth', {'weight': 0.6})
('integer programming', 'overlapping subproblem', {'weight': 0.6})
('integer programming', 'refutation table', {'weight': 0.6})
('integer programming', 'cutting-plane method', {'weight': 0.6})
('integer programming', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('integer programming', 'method of undetermined coefficients', {'weight': 0.6})
('integer programming', 'flow network', {'weight': 0.6})
('integer programming', "newton's method in optimization", {'weight': 0.6})
('integer programming', 'matrix chain multiplication', {'weight': 0.6})
('integer programming', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('integer programming', 'dynamic time warping', {'weight': 0.6})
('integer programming', 'dynamic programming language', {'weight': 0.6})
('integer programming', 'call-by-need', {'weight': 0.6})
('integer programming', 'big-o notation', {'weight': 0.6})
('integer programming', 'comparison of optimization software', {'weight': 0.6})
('integer programming', 'quadratic programming', {'weight': 0.6})
('integer programming', 'common lisp', {'weight': 0.6})
('integer programming', 'barrier function', {'weight': 0.6})
('integer programming', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('integer programming', 'gradient descent', {'weight': 0.6})
('integer programming', 'patricia selinger', {'weight': 0.6})
('integer programming', 'discounting', {'weight': 0.6})
('integer programming', 'ronald l. rivest', {'weight': 0.6})
('integer programming', 'iterative method', {'weight': 0.6})
('integer programming', 'limited-memory bfgs', {'weight': 0.6})
('integer programming', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('integer programming', 'longest common substring problem', {'weight': 0.6})
('integer programming', 'clifford stein', {'weight': 0.6})
('integer programming', 'computer chess', {'weight': 0.6})
('integer programming', 'linear programming', {'weight': 0.6})
('integer programming', 'bitonic tour', {'weight': 0.6})
('integer programming', 'linear search problem', {'weight': 0.6})
('integer programming', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('integer programming', 'systems analysis', {'weight': 0.6})
('integer programming', 'capital (economics)', {'weight': 0.6})
('integer programming', 'levenshtein distance', {'weight': 0.6})
('integer programming', 'nonlinear programming', {'weight': 0.6})
('integer programming', 'computational complexity of mathematical operations', {'weight': 0.6})
('integer programming', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('integer programming', 'gradient', {'weight': 0.6})
('integer programming', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('integer programming', 'bulletin of the american mathematical society', {'weight': 0.6})
('integer programming', 'u.s. english', {'weight': 0.6})
('integer programming', 'combinatorial optimization', {'weight': 0.6})
('integer programming', 'heuristic algorithm', {'weight': 0.6})
('integer programming', 'successive linear programming', {'weight': 0.6})
('integer programming', 'optimal substructure', {'weight': 0.6})
('integer programming', 'taylor & francis', {'weight': 0.6})
('integer programming', 'programming language', {'weight': 0.6})
('integer programming', 'mergesort', {'weight': 0.6})
('integer programming', "dijkstra's algorithm", {'weight': 0.6})
('integer programming', 'subgradient method', {'weight': 0.6})
('integer programming', 'call-by-name', {'weight': 0.6})
('integer programming', 'longest increasing subsequence problem', {'weight': 0.6})
('integer programming', 'edward prescott', {'weight': 0.6})
('integer programming', 'exponential time', {'weight': 0.6})
('integer programming', 'principle of optimality', {'weight': 0.6})
('integer programming', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('integer programming', 'mathematical game', {'weight': 0.6})
('integer programming', 'nancy stokey', {'weight': 0.6})
('integer programming', 'approximation algorithm', {'weight': 0.6})
('integer programming', 'discrete-time', {'weight': 0.6})
('integer programming', 'cyk algorithm', {'weight': 0.6})
('integer programming', 'markov decision process', {'weight': 0.6})
('integer programming', "powell's method", {'weight': 0.6})
('integer programming', 'wolfe conditions', {'weight': 0.6})
('integer programming', 'convexity in economics', {'weight': 0.6})
('integer programming', 'transposition table', {'weight': 0.6})
('integer programming', 'economics', {'weight': 0.6})
('integer programming', 'backward induction', {'weight': 0.6})
('integer programming', 'golden section search', {'weight': 0.6})
('integer programming', 'edit distance', {'weight': 0.6})
('integer programming', 'tree structure', {'weight': 0.6})
('integer programming', 'exchange algorithm', {'weight': 0.6})
('integer programming', 'dover publications', {'weight': 0.6})
('integer programming', 'seam carving', {'weight': 0.6})
('integer programming', 'recursive least squares', {'weight': 0.6})
('integer programming', 'metaheuristic', {'weight': 0.6})
('integer programming', 'quasi-newton method', {'weight': 0.6})
('integer programming', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('integer programming', 'robert e. lucas', {'weight': 0.6})
('integer programming', 'non-convexity (economics)', {'weight': 0.6})
('integer programming', 'sr1 formula', {'weight': 0.6})
('integer programming', 'mathematical reviews', {'weight': 0.6})
('integer programming', 'puzzle', {'weight': 0.6})
('integer programming', 'associative array', {'weight': 0.6})
('integer programming', 'shortest path problem', {'weight': 0.6})
('integer programming', 'dynamic algorithm', {'weight': 0.6})
('integer programming', 'augmented lagrangian method', {'weight': 0.6})
('integer programming', 'charles delisi', {'weight': 0.6})
('integer programming', 'greedy algorithm', {'weight': 0.6})
('integer programming', "karmarkar's algorithm", {'weight': 0.6})
('integer programming', 'lattice models', {'weight': 0.6})
('integer programming', 'utility', {'weight': 0.6})
('integer programming', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('integer programming', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('integer programming', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('integer programming', 'international standard book number', {'weight': 0.6})
('integer programming', 'undirected graph', {'weight': 0.6})
('integer programming', 'scheme (programming language)', {'weight': 0.6})
('integer programming', 'rna structure', {'weight': 0.6})
('integer programming', 'hanoi', {'weight': 0.6})
('integer programming', 'perl', {'weight': 0.6})
('integer programming', 'digital object identifier', {'weight': 0.6})
('integer programming', 'sequential quadratic programming', {'weight': 0.6})
('integer programming', "dinic's algorithm", {'weight': 0.6})
('integer programming', 'pseudo-polynomial time', {'weight': 0.6})
('integer programming', 'partition problem', {'weight': 0.6})
('integer programming', 'operations research', {'weight': 0.5})
('integer programming', 'hill climbing', {'weight': 0.6})
('integer programming', 'top-down', {'weight': 0.6})
('integer programming', 'de boor algorithm', {'weight': 0.6})
('integer programming', 'optimization algorithm', {'weight': 0.6})
('integer programming', "kruskal's algorithm", {'weight': 0.6})
('integer programming', 'jacques philippe marie binet', {'weight': 0.6})
('integer programming', 'tabu search', {'weight': 0.6})
('integer programming', 'divide and conquer algorithm', {'weight': 0.6})
('integer programming', "johnson's algorithm", {'weight': 0.6})
('integer programming', 'evolutionary algorithm', {'weight': 0.6})
('integer programming', 'clique-width', {'weight': 0.6})
('integer programming', 'dynamic programming', {'weight': 0.6})
('integer programming', 'subroutine', {'weight': 0.6})
('integer programming', 'simulated annealing', {'weight': 0.6})
('integer programming', 'tower of hanoi', {'weight': 0.6})
('integer programming', 'branch and bound', {'weight': 0.6})
('integer programming', 'engineering', {'weight': 0.6})
('integer programming', 'matroid', {'weight': 0.6})
('integer programming', 'viterbi algorithm', {'weight': 0.6})
('integer programming', "lemke's algorithm", {'weight': 0.6})
('integer programming', 'simplex algorithm', {'weight': 0.6})
('integer programming', 'stochastic programming', {'weight': 0.6})
('integer programming', 'hessian matrix', {'weight': 0.6})
('integer programming', 'ibm system r', {'weight': 0.6})
('integer programming', 'penalty method', {'weight': 0.6})
('integer programming', 'prolog', {'weight': 0.6})
('integer programming', 'time-invariant system', {'weight': 0.6})
('integer programming', 'criss-cross algorithm', {'weight': 0.6})
('integer programming', 'revised simplex algorithm', {'weight': 0.6})
('integer programming', 'the mathematical association of america', {'weight': 0.6})
('integer programming', 'line search', {'weight': 0.6})
('integer programming', 'j (programming language)', {'weight': 0.6})
('integer programming', 'word wrap', {'weight': 0.6})
('integer programming', 'subset sum problem', {'weight': 0.6})
('integer programming', 'integer programming', {'weight': 1})
('integer programming', 'nucleosome', {'weight': 0.6})
('integer programming', 'earley algorithm', {'weight': 0.6})
('integer programming', 'referential transparency (computer science)', {'weight': 0.6})
('integer programming', 'recursion', {'weight': 0.6})
('integer programming', 'mathematica', {'weight': 0.6})
('integer programming', 'quicksort', {'weight': 0.6})
('integer programming', 'recursion (computer science)', {'weight': 0.6})
('integer programming', 'checkerboard', {'weight': 0.6})
('integer programming', 'computer science', {'weight': 0.6})
('integer programming', 'brute-force search', {'weight': 0.6})
('integer programming', 'mathematics', {'weight': 0.6})
('integer programming', 'depth-first search', {'weight': 0.6})
('integer programming', 'top-down and bottom-up design', {'weight': 0.6})
('integer programming', 'correspondence problem', {'weight': 0.6})
('integer programming', 'transcription factor', {'weight': 0.6})
('integer programming', 'tree decomposition', {'weight': 0.6})
('integer programming', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('integer programming', 'structural alignment', {'weight': 0.6})
('integer programming', 'local convergence', {'weight': 0.6})
('integer programming', 'knapsack problem', {'weight': 0.6})
('integer programming', 'graph algorithm', {'weight': 0.6})
('integer programming', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('integer programming', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('integer programming', 'hidden markov model', {'weight': 0.6})
('integer programming', 'string (computer science)', {'weight': 0.6})
('integer programming', 'bioinformatics', {'weight': 0.6})
('integer programming', 'genetics', {'weight': 0.6})
('integer programming', 'mathematical optimization', {'weight': 0.6})
('integer programming', 'local search (optimization)', {'weight': 0.6})
('integer programming', 'artificial neural networks', {'weight': 0.6})
('integer programming', 'introduction to algorithms', {'weight': 0.6})
('integer programming', 'thomas h. cormen', {'weight': 0.6})
('integer programming', 'music information retrieval', {'weight': 0.6})
('integer programming', 'beat (music)', {'weight': 0.6})
('integer programming', 'longest common subsequence problem', {'weight': 0.6})
('integer programming', 'convex minimization', {'weight': 0.6})
('integer programming', 'successive parabolic interpolation', {'weight': 0.6})
('integer programming', 'fibonacci sequence', {'weight': 0.6})
('integer programming', 'maximum subarray problem', {'weight': 0.6})
('integer programming', 'convex optimization', {'weight': 0.6})
('integer programming', 'memoization', {'weight': 0.6})
('integer programming', 'richard bellman', {'weight': 0.6})
('integer programming', 'exponential growth', {'weight': 0.6})
('integer programming', 'charles e. leiserson', {'weight': 0.6})
('integer programming', 'charles erwin wilson', {'weight': 0.6})
('integer programming', 'interval scheduling', {'weight': 0.6})
('integer programming', 'chart parser', {'weight': 0.6})
('integer programming', 'travelling salesman problem', {'weight': 0.6})
('integer programming', 'bellman equation', {'weight': 0.6})
('recursion', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('recursion', 'photoshop', {'weight': 0.6})
('recursion', 'sequence alignment', {'weight': 0.6})
('recursion', 'flow network', {'weight': 0.6})
('recursion', 'charles erwin wilson', {'weight': 0.6})
('recursion', 'autoregressive model', {'weight': 0.7})
('recursion', 'ellipsoid method', {'weight': 0.6})
('recursion', 'chain matrix multiplication', {'weight': 0.6})
('recursion', 'ieee', {'weight': 0.6})
('recursion', 'backtracking', {'weight': 0.6})
('recursion', 'nonlinear conjugate gradient method', {'weight': 0.6})
('recursion', 'dynamic problem', {'weight': 0.6})
('recursion', 'trust region', {'weight': 0.6})
('recursion', 'function (mathematics)', {'weight': 0.6})
('recursion', 'minimum spanning tree', {'weight': 0.6})
('recursion', 'context-free grammar', {'weight': 0.6})
('recursion', 'split levinson recursion', {'weight': 0.7})
('recursion', 'branch and cut', {'weight': 0.6})
('recursion', 'state variable', {'weight': 0.6})
('recursion', 'treewidth', {'weight': 0.6})
('recursion', 'overlapping subproblem', {'weight': 0.6})
('recursion', 'taylor & francis', {'weight': 0.6})
('recursion', 'cutting-plane method', {'weight': 0.6})
('recursion', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('recursion', 'method of undetermined coefficients', {'weight': 0.6})
('recursion', 'combinatorial optimization', {'weight': 0.6})
('recursion', "newton's method in optimization", {'weight': 0.6})
('recursion', 'matrices', {'weight': 0.5})
('recursion', 'matrix chain multiplication', {'weight': 0.6})
('recursion', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('recursion', 'dynamic time warping', {'weight': 0.6})
('recursion', 'dynamic programming language', {'weight': 0.6})
('recursion', 'call-by-need', {'weight': 0.6})
('recursion', 'big-o notation', {'weight': 0.6})
('recursion', 'comparison of optimization software', {'weight': 0.6})
('recursion', 'quadratic programming', {'weight': 0.6})
('recursion', 'common lisp', {'weight': 0.6})
('recursion', 'barrier function', {'weight': 0.6})
('recursion', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('recursion', 'gradient descent', {'weight': 0.6})
('recursion', 'patricia selinger', {'weight': 0.6})
('recursion', 'discounting', {'weight': 0.6})
('recursion', 'ronald l. rivest', {'weight': 0.6})
('recursion', 'iterative method', {'weight': 0.6})
('recursion', 'limited-memory bfgs', {'weight': 0.6})
('recursion', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('recursion', 'longest common substring problem', {'weight': 0.6})
('recursion', 'numerical analysis', {'weight': 0.5})
('recursion', 'clifford stein', {'weight': 0.6})
('recursion', 'computer chess', {'weight': 0.6})
('recursion', 'linear programming', {'weight': 0.6})
('recursion', 'bitonic tour', {'weight': 0.6})
('recursion', 'linear search problem', {'weight': 0.6})
('recursion', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('recursion', 'systems analysis', {'weight': 0.6})
('recursion', 'capital (economics)', {'weight': 0.6})
('recursion', 'levenshtein distance', {'weight': 0.6})
('recursion', 'nonlinear programming', {'weight': 0.6})
('recursion', 'computational complexity of mathematical operations', {'weight': 0.6})
('recursion', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('recursion', 'gradient', {'weight': 0.6})
('recursion', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('recursion', 'bulletin of the american mathematical society', {'weight': 0.6})
('recursion', 'u.s. english', {'weight': 0.6})
('recursion', 'refutation table', {'weight': 0.6})
('recursion', 'heuristic algorithm', {'weight': 0.6})
('recursion', 'successive linear programming', {'weight': 0.6})
('recursion', 'optimal substructure', {'weight': 0.6})
('recursion', 'programming language', {'weight': 0.6})
('recursion', 'mergesort', {'weight': 0.6})
('recursion', "dijkstra's algorithm", {'weight': 0.6})
('recursion', 'subgradient method', {'weight': 0.6})
('recursion', 'call-by-name', {'weight': 0.6})
('recursion', 'longest increasing subsequence problem', {'weight': 0.6})
('recursion', 'edward prescott', {'weight': 0.6})
('recursion', 'exponential time', {'weight': 0.6})
('recursion', 'principle of optimality', {'weight': 0.6})
('recursion', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('recursion', 'mathematical game', {'weight': 0.6})
('recursion', 'nancy stokey', {'weight': 0.6})
('recursion', 'approximation algorithm', {'weight': 0.6})
('recursion', 'discrete-time', {'weight': 0.6})
('recursion', 'cyk algorithm', {'weight': 0.6})
('recursion', 'markov decision process', {'weight': 0.6})
('recursion', "powell's method", {'weight': 0.6})
('recursion', 'wolfe conditions', {'weight': 0.6})
('recursion', 'convexity in economics', {'weight': 0.6})
('recursion', 'transposition table', {'weight': 0.6})
('recursion', 'economics', {'weight': 0.6})
('recursion', 'backward induction', {'weight': 0.6})
('recursion', 'golden section search', {'weight': 0.6})
('recursion', 'edit distance', {'weight': 0.6})
('recursion', 'tree structure', {'weight': 0.6})
('recursion', 'exchange algorithm', {'weight': 0.6})
('recursion', 'dover publications', {'weight': 0.6})
('recursion', 'seam carving', {'weight': 0.6})
('recursion', 'recursive least squares', {'weight': 0.6})
('recursion', 'metaheuristic', {'weight': 0.6})
('recursion', 'quasi-newton method', {'weight': 0.6})
('recursion', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('recursion', 'robert e. lucas', {'weight': 0.6})
('recursion', 'non-convexity (economics)', {'weight': 0.6})
('recursion', 'sr1 formula', {'weight': 0.6})
('recursion', 'mathematical reviews', {'weight': 0.6})
('recursion', 'puzzle', {'weight': 0.6})
('recursion', 'associative array', {'weight': 0.6})
('recursion', 'shortest path problem', {'weight': 0.6})
('recursion', 'dynamic algorithm', {'weight': 0.6})
('recursion', 'augmented lagrangian method', {'weight': 0.6})
('recursion', 'charles delisi', {'weight': 0.6})
('recursion', 'greedy algorithm', {'weight': 0.6})
('recursion', "karmarkar's algorithm", {'weight': 0.6})
('recursion', 'linear prediction', {'weight': 0.7})
('recursion', 'lattice models', {'weight': 0.6})
('recursion', 'utility', {'weight': 0.6})
('recursion', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('recursion', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('recursion', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('recursion', 'international standard book number', {'weight': 0.6})
('recursion', 'undirected graph', {'weight': 0.6})
('recursion', 'scheme (programming language)', {'weight': 0.6})
('recursion', 'rna structure', {'weight': 0.6})
('recursion', 'hanoi', {'weight': 0.6})
('recursion', 'perl', {'weight': 0.6})
('recursion', 'digital object identifier', {'weight': 0.6})
('recursion', 'sequential quadratic programming', {'weight': 0.6})
('recursion', "dinic's algorithm", {'weight': 0.6})
('recursion', 'pseudo-polynomial time', {'weight': 0.6})
('recursion', 'partition problem', {'weight': 0.6})
('recursion', 'stochastic programming', {'weight': 0.6})
('recursion', 'hill climbing', {'weight': 0.6})
('recursion', 'top-down', {'weight': 0.6})
('recursion', 'de boor algorithm', {'weight': 0.6})
('recursion', 'optimization algorithm', {'weight': 0.6})
('recursion', "kruskal's algorithm", {'weight': 0.6})
('recursion', 'jacques philippe marie binet', {'weight': 0.6})
('recursion', 'tabu search', {'weight': 0.6})
('recursion', 'divide and conquer algorithm', {'weight': 0.6})
('recursion', "johnson's algorithm", {'weight': 0.6})
('recursion', 'evolutionary algorithm', {'weight': 0.6})
('recursion', 'clique-width', {'weight': 0.6})
('recursion', 'dynamic programming', {'weight': 0.6})
('recursion', 'subroutine', {'weight': 0.6})
('recursion', 'simulated annealing', {'weight': 0.6})
('recursion', 'tower of hanoi', {'weight': 0.6})
('recursion', 'branch and bound', {'weight': 0.6})
('recursion', 'engineering', {'weight': 0.6})
('recursion', 'matroid', {'weight': 0.6})
('recursion', 'viterbi algorithm', {'weight': 0.6})
('recursion', "lemke's algorithm", {'weight': 0.6})
('recursion', 'simplex algorithm', {'weight': 0.6})
('recursion', 'local search (optimization)', {'weight': 0.6})
('recursion', 'hessian matrix', {'weight': 0.6})
('recursion', 'ibm system r', {'weight': 0.6})
('recursion', 'penalty method', {'weight': 0.6})
('recursion', 'prolog', {'weight': 0.6})
('recursion', 'time-invariant system', {'weight': 0.6})
('recursion', 'criss-cross algorithm', {'weight': 0.6})
('recursion', 'revised simplex algorithm', {'weight': 0.6})
('recursion', 'the mathematical association of america', {'weight': 0.6})
('recursion', 'line search', {'weight': 0.6})
('recursion', 'j (programming language)', {'weight': 0.6})
('recursion', 'word wrap', {'weight': 0.6})
('recursion', 'subset sum problem', {'weight': 0.6})
('recursion', 'integer programming', {'weight': 0.6})
('recursion', 'nucleosome', {'weight': 0.6})
('recursion', 'earley algorithm', {'weight': 0.6})
('recursion', 'referential transparency (computer science)', {'weight': 0.6})
('recursion', 'recursion', {'weight': 1})
('recursion', 'mathematica', {'weight': 0.6})
('recursion', 'quicksort', {'weight': 0.6})
('recursion', 'recursion (computer science)', {'weight': 0.6})
('recursion', 'computer science', {'weight': 0.6})
('recursion', 'brute-force search', {'weight': 0.6})
('recursion', 'mathematics', {'weight': 0.6})
('recursion', 'depth-first search', {'weight': 0.6})
('recursion', 'top-down and bottom-up design', {'weight': 0.6})
('recursion', 'correspondence problem', {'weight': 0.6})
('recursion', 'transcription factor', {'weight': 0.6})
('recursion', 'tree decomposition', {'weight': 0.6})
('recursion', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('recursion', 'structural alignment', {'weight': 0.6})
('recursion', 'local convergence', {'weight': 0.6})
('recursion', 'knapsack problem', {'weight': 0.6})
('recursion', 'graph algorithm', {'weight': 0.6})
('recursion', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('recursion', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('recursion', 'hidden markov model', {'weight': 0.6})
('recursion', 'string (computer science)', {'weight': 0.6})
('recursion', 'bioinformatics', {'weight': 0.6})
('recursion', 'genetics', {'weight': 0.6})
('recursion', 'mathematical optimization', {'weight': 0.6})
('recursion', 'artificial neural networks', {'weight': 0.6})
('recursion', 'introduction to algorithms', {'weight': 0.6})
('recursion', 'thomas h. cormen', {'weight': 0.6})
('recursion', 'music information retrieval', {'weight': 0.6})
('recursion', 'beat (music)', {'weight': 0.6})
('recursion', 'longest common subsequence problem', {'weight': 0.6})
('recursion', 'convex minimization', {'weight': 0.6})
('recursion', 'successive parabolic interpolation', {'weight': 0.6})
('recursion', 'fibonacci sequence', {'weight': 0.6})
('recursion', 'maximum subarray problem', {'weight': 0.6})
('recursion', 'convex optimization', {'weight': 0.6})
('recursion', 'memoization', {'weight': 0.6})
('recursion', 'richard bellman', {'weight': 0.6})
('recursion', 'exponential growth', {'weight': 0.6})
('recursion', 'charles e. leiserson', {'weight': 0.6})
('recursion', 'checkerboard', {'weight': 0.6})
('recursion', 'interval scheduling', {'weight': 0.6})
('recursion', 'chart parser', {'weight': 0.6})
('recursion', 'travelling salesman problem', {'weight': 0.6})
('recursion', 'bellman equation', {'weight': 0.6})
('brute-force search', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('brute-force search', 'photoshop', {'weight': 0.6})
('brute-force search', 'sequence alignment', {'weight': 0.6})
('brute-force search', 'flow network', {'weight': 0.6})
('brute-force search', 'ellipsoid method', {'weight': 0.6})
('brute-force search', 'chain matrix multiplication', {'weight': 0.6})
('brute-force search', 'ieee', {'weight': 0.6})
('brute-force search', 'backtracking', {'weight': 0.6})
('brute-force search', 'nonlinear conjugate gradient method', {'weight': 0.6})
('brute-force search', 'dynamic problem', {'weight': 0.6})
('brute-force search', 'trust region', {'weight': 0.6})
('brute-force search', 'function (mathematics)', {'weight': 0.6})
('brute-force search', 'minimum spanning tree', {'weight': 0.6})
('brute-force search', 'context-free grammar', {'weight': 0.6})
('brute-force search', 'branch and cut', {'weight': 0.6})
('brute-force search', 'state variable', {'weight': 0.6})
('brute-force search', 'treewidth', {'weight': 0.6})
('brute-force search', 'overlapping subproblem', {'weight': 0.6})
('brute-force search', 'taylor & francis', {'weight': 0.6})
('brute-force search', 'big o notation', {'weight': 0.7})
('brute-force search', 'cutting-plane method', {'weight': 0.6})
('brute-force search', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('brute-force search', 'method of undetermined coefficients', {'weight': 0.6})
('brute-force search', 'combinatorial optimization', {'weight': 0.6})
('brute-force search', "newton's method in optimization", {'weight': 0.6})
('brute-force search', 'matrix chain multiplication', {'weight': 0.6})
('brute-force search', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('brute-force search', 'dynamic time warping', {'weight': 0.6})
('brute-force search', 'dynamic programming language', {'weight': 0.6})
('brute-force search', 'call-by-need', {'weight': 0.6})
('brute-force search', 'big-o notation', {'weight': 0.6})
('brute-force search', 'comparison of optimization software', {'weight': 0.6})
('brute-force search', 'quadratic programming', {'weight': 0.6})
('brute-force search', 'common lisp', {'weight': 0.6})
('brute-force search', 'barrier function', {'weight': 0.6})
('brute-force search', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('brute-force search', 'gradient descent', {'weight': 0.6})
('brute-force search', 'patricia selinger', {'weight': 0.6})
('brute-force search', 'discounting', {'weight': 0.6})
('brute-force search', 'ronald l. rivest', {'weight': 0.6})
('brute-force search', 'iterative method', {'weight': 0.6})
('brute-force search', 'limited-memory bfgs', {'weight': 0.6})
('brute-force search', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('brute-force search', 'longest common substring problem', {'weight': 0.6})
('brute-force search', 'clifford stein', {'weight': 0.6})
('brute-force search', 'computer chess', {'weight': 0.6})
('brute-force search', 'linear programming', {'weight': 0.6})
('brute-force search', 'bitonic tour', {'weight': 0.6})
('brute-force search', 'linear search problem', {'weight': 0.6})
('brute-force search', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('brute-force search', 'systems analysis', {'weight': 0.6})
('brute-force search', 'capital (economics)', {'weight': 0.6})
('brute-force search', 'levenshtein distance', {'weight': 0.6})
('brute-force search', 'nonlinear programming', {'weight': 0.6})
('brute-force search', 'computational complexity of mathematical operations', {'weight': 0.6})
('brute-force search', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('brute-force search', 'gradient', {'weight': 0.6})
('brute-force search', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('brute-force search', 'bulletin of the american mathematical society', {'weight': 0.6})
('brute-force search', 'u.s. english', {'weight': 0.6})
('brute-force search', 'refutation table', {'weight': 0.6})
('brute-force search', 'heuristic algorithm', {'weight': 0.6})
('brute-force search', 'successive linear programming', {'weight': 0.6})
('brute-force search', 'optimal substructure', {'weight': 0.6})
('brute-force search', 'programming language', {'weight': 0.6})
('brute-force search', 'mergesort', {'weight': 0.6})
('brute-force search', "dijkstra's algorithm", {'weight': 0.6})
('brute-force search', 'subgradient method', {'weight': 0.6})
('brute-force search', 'call-by-name', {'weight': 0.6})
('brute-force search', 'longest increasing subsequence problem', {'weight': 0.6})
('brute-force search', 'edward prescott', {'weight': 0.6})
('brute-force search', 'exponential time', {'weight': 0.6})
('brute-force search', 'principle of optimality', {'weight': 0.6})
('brute-force search', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('brute-force search', 'mathematical game', {'weight': 0.6})
('brute-force search', 'nancy stokey', {'weight': 0.6})
('brute-force search', 'approximation algorithm', {'weight': 0.6})
('brute-force search', 'discrete-time', {'weight': 0.6})
('brute-force search', 'cyk algorithm', {'weight': 0.6})
('brute-force search', 'markov decision process', {'weight': 0.6})
('brute-force search', "powell's method", {'weight': 0.6})
('brute-force search', 'wolfe conditions', {'weight': 0.6})
('brute-force search', 'convexity in economics', {'weight': 0.6})
('brute-force search', 'transposition table', {'weight': 0.6})
('brute-force search', 'economics', {'weight': 0.6})
('brute-force search', 'backward induction', {'weight': 0.6})
('brute-force search', 'golden section search', {'weight': 0.6})
('brute-force search', 'edit distance', {'weight': 0.6})
('brute-force search', 'tree structure', {'weight': 0.6})
('brute-force search', 'exchange algorithm', {'weight': 0.6})
('brute-force search', 'dover publications', {'weight': 0.6})
('brute-force search', 'seam carving', {'weight': 0.6})
('brute-force search', 'recursive least squares', {'weight': 0.6})
('brute-force search', 'metaheuristic', {'weight': 0.6})
('brute-force search', 'quasi-newton method', {'weight': 0.6})
('brute-force search', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('brute-force search', 'robert e. lucas', {'weight': 0.6})
('brute-force search', 'non-convexity (economics)', {'weight': 0.6})
('brute-force search', 'search algorithms', {'weight': 0.5})
('brute-force search', 'sr1 formula', {'weight': 0.6})
('brute-force search', 'mathematical reviews', {'weight': 0.6})
('brute-force search', 'puzzle', {'weight': 0.6})
('brute-force search', 'associative array', {'weight': 0.6})
('brute-force search', 'shortest path problem', {'weight': 0.6})
('brute-force search', 'dynamic algorithm', {'weight': 0.6})
('brute-force search', 'augmented lagrangian method', {'weight': 0.6})
('brute-force search', 'charles delisi', {'weight': 0.6})
('brute-force search', 'greedy algorithm', {'weight': 0.6})
('brute-force search', "karmarkar's algorithm", {'weight': 0.6})
('brute-force search', 'lattice models', {'weight': 0.6})
('brute-force search', 'utility', {'weight': 0.6})
('brute-force search', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('brute-force search', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('brute-force search', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('brute-force search', 'international standard book number', {'weight': 0.6})
('brute-force search', 'undirected graph', {'weight': 0.6})
('brute-force search', 'scheme (programming language)', {'weight': 0.6})
('brute-force search', 'rna structure', {'weight': 0.6})
('brute-force search', 'hanoi', {'weight': 0.6})
('brute-force search', 'perl', {'weight': 0.6})
('brute-force search', 'digital object identifier', {'weight': 0.6})
('brute-force search', 'sequential quadratic programming', {'weight': 0.6})
('brute-force search', "dinic's algorithm", {'weight': 0.6})
('brute-force search', 'pseudo-polynomial time', {'weight': 0.6})
('brute-force search', 'partition problem', {'weight': 0.6})
('brute-force search', 'stochastic programming', {'weight': 0.6})
('brute-force search', 'brute force attack', {'weight': 0.7})
('brute-force search', 'hill climbing', {'weight': 0.6})
('brute-force search', 'top-down', {'weight': 0.6})
('brute-force search', 'de boor algorithm', {'weight': 0.6})
('brute-force search', 'optimization algorithm', {'weight': 0.6})
('brute-force search', "kruskal's algorithm", {'weight': 0.6})
('brute-force search', 'jacques philippe marie binet', {'weight': 0.6})
('brute-force search', 'tabu search', {'weight': 0.6})
('brute-force search', 'computer science portal', {'weight': 0.7})
('brute-force search', 'divide and conquer algorithm', {'weight': 0.6})
('brute-force search', "johnson's algorithm", {'weight': 0.6})
('brute-force search', 'evolutionary algorithm', {'weight': 0.6})
('brute-force search', 'clique-width', {'weight': 0.6})
('brute-force search', 'dynamic programming', {'weight': 0.6})
('brute-force search', 'subroutine', {'weight': 0.6})
('brute-force search', 'simulated annealing', {'weight': 0.6})
('brute-force search', 'tower of hanoi', {'weight': 0.6})
('brute-force search', 'branch and bound', {'weight': 0.6})
('brute-force search', 'engineering', {'weight': 0.6})
('brute-force search', 'matroid', {'weight': 0.6})
('brute-force search', 'viterbi algorithm', {'weight': 0.6})
('brute-force search', "lemke's algorithm", {'weight': 0.6})
('brute-force search', 'simplex algorithm', {'weight': 0.6})
('brute-force search', 'local search (optimization)', {'weight': 0.6})
('brute-force search', 'hessian matrix', {'weight': 0.6})
('brute-force search', 'ibm system r', {'weight': 0.6})
('brute-force search', 'penalty method', {'weight': 0.6})
('brute-force search', 'prolog', {'weight': 0.6})
('brute-force search', 'time-invariant system', {'weight': 0.6})
('brute-force search', 'criss-cross algorithm', {'weight': 0.6})
('brute-force search', 'revised simplex algorithm', {'weight': 0.6})
('brute-force search', 'the mathematical association of america', {'weight': 0.6})
('brute-force search', 'line search', {'weight': 0.6})
('brute-force search', 'j (programming language)', {'weight': 0.6})
('brute-force search', 'word wrap', {'weight': 0.6})
('brute-force search', 'subset sum problem', {'weight': 0.6})
('brute-force search', 'integer programming', {'weight': 0.6})
('brute-force search', 'nucleosome', {'weight': 0.6})
('brute-force search', 'earley algorithm', {'weight': 0.6})
('brute-force search', 'referential transparency (computer science)', {'weight': 0.6})
('brute-force search', 'recursion', {'weight': 0.6})
('brute-force search', 'mathematica', {'weight': 0.6})
('brute-force search', 'quicksort', {'weight': 0.6})
('brute-force search', 'recursion (computer science)', {'weight': 0.6})
('brute-force search', 'checkerboard', {'weight': 0.6})
('brute-force search', 'computer science', {'weight': 0.6})
('brute-force search', 'brute-force search', {'weight': 1})
('brute-force search', 'mathematics', {'weight': 0.6})
('brute-force search', 'depth-first search', {'weight': 0.6})
('brute-force search', 'top-down and bottom-up design', {'weight': 0.6})
('brute-force search', 'correspondence problem', {'weight': 0.6})
('brute-force search', 'transcription factor', {'weight': 0.6})
('brute-force search', 'tree decomposition', {'weight': 0.6})
('brute-force search', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('brute-force search', 'structural alignment', {'weight': 0.6})
('brute-force search', 'local convergence', {'weight': 0.6})
('brute-force search', 'knapsack problem', {'weight': 0.6})
('brute-force search', 'graph algorithm', {'weight': 0.6})
('brute-force search', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('brute-force search', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('brute-force search', 'hidden markov model', {'weight': 0.6})
('brute-force search', 'string (computer science)', {'weight': 0.6})
('brute-force search', 'bioinformatics', {'weight': 0.6})
('brute-force search', 'genetics', {'weight': 0.6})
('brute-force search', 'mathematical optimization', {'weight': 0.6})
('brute-force search', 'artificial neural networks', {'weight': 0.6})
('brute-force search', 'introduction to algorithms', {'weight': 0.6})
('brute-force search', 'thomas h. cormen', {'weight': 0.6})
('brute-force search', 'music information retrieval', {'weight': 0.6})
('brute-force search', 'beat (music)', {'weight': 0.6})
('brute-force search', 'longest common subsequence problem', {'weight': 0.6})
('brute-force search', 'convex minimization', {'weight': 0.6})
('brute-force search', 'successive parabolic interpolation', {'weight': 0.6})
('brute-force search', 'fibonacci sequence', {'weight': 0.6})
('brute-force search', 'maximum subarray problem', {'weight': 0.6})
('brute-force search', 'convex optimization', {'weight': 0.6})
('brute-force search', 'memoization', {'weight': 0.6})
('brute-force search', 'richard bellman', {'weight': 0.6})
('brute-force search', 'exponential growth', {'weight': 0.6})
('brute-force search', 'charles e. leiserson', {'weight': 0.6})
('brute-force search', 'charles erwin wilson', {'weight': 0.6})
('brute-force search', 'interval scheduling', {'weight': 0.6})
('brute-force search', 'chart parser', {'weight': 0.6})
('brute-force search', 'travelling salesman problem', {'weight': 0.6})
('brute-force search', 'how basic bruteforce tool can be used to crack command line application - tool', {'weight': 0.7})
('brute-force search', 'bellman equation', {'weight': 0.6})
('top-down and bottom-up design', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('top-down and bottom-up design', 'photoshop', {'weight': 0.6})
('top-down and bottom-up design', 'sequence alignment', {'weight': 0.6})
('top-down and bottom-up design', 'flow network', {'weight': 0.6})
('top-down and bottom-up design', 'ellipsoid method', {'weight': 0.6})
('top-down and bottom-up design', 'chain matrix multiplication', {'weight': 0.6})
('top-down and bottom-up design', 'ieee', {'weight': 0.6})
('top-down and bottom-up design', 'backtracking', {'weight': 0.6})
('top-down and bottom-up design', 'sr1 formula', {'weight': 0.6})
('top-down and bottom-up design', 'nonlinear conjugate gradient method', {'weight': 0.6})
('top-down and bottom-up design', 'dynamic problem', {'weight': 0.6})
('top-down and bottom-up design', 'trust region', {'weight': 0.6})
('top-down and bottom-up design', 'function (mathematics)', {'weight': 0.6})
('top-down and bottom-up design', 'minimum spanning tree', {'weight': 0.6})
('top-down and bottom-up design', 'context-free grammar', {'weight': 0.6})
('top-down and bottom-up design', 'branch and cut', {'weight': 0.6})
('top-down and bottom-up design', 'state variable', {'weight': 0.6})
('top-down and bottom-up design', 'treewidth', {'weight': 0.6})
('top-down and bottom-up design', 'overlapping subproblem', {'weight': 0.6})
('top-down and bottom-up design', 'taylor & francis', {'weight': 0.6})
('top-down and bottom-up design', 'cutting-plane method', {'weight': 0.6})
('top-down and bottom-up design', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('top-down and bottom-up design', 'method of undetermined coefficients', {'weight': 0.6})
('top-down and bottom-up design', 'combinatorial optimization', {'weight': 0.6})
('top-down and bottom-up design', "newton's method in optimization", {'weight': 0.6})
('top-down and bottom-up design', 'matrix chain multiplication', {'weight': 0.6})
('top-down and bottom-up design', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('top-down and bottom-up design', 'dynamic time warping', {'weight': 0.6})
('top-down and bottom-up design', 'dynamic programming language', {'weight': 0.6})
('top-down and bottom-up design', 'call-by-need', {'weight': 0.6})
('top-down and bottom-up design', 'big-o notation', {'weight': 0.6})
('top-down and bottom-up design', 'comparison of optimization software', {'weight': 0.6})
('top-down and bottom-up design', 'quadratic programming', {'weight': 0.6})
('top-down and bottom-up design', 'common lisp', {'weight': 0.6})
('top-down and bottom-up design', 'barrier function', {'weight': 0.6})
('top-down and bottom-up design', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('top-down and bottom-up design', 'gradient descent', {'weight': 0.6})
('top-down and bottom-up design', 'patricia selinger', {'weight': 0.6})
('top-down and bottom-up design', 'discounting', {'weight': 0.6})
('top-down and bottom-up design', 'ronald l. rivest', {'weight': 0.6})
('top-down and bottom-up design', 'iterative method', {'weight': 0.6})
('top-down and bottom-up design', 'limited-memory bfgs', {'weight': 0.6})
('top-down and bottom-up design', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('top-down and bottom-up design', 'longest common substring problem', {'weight': 0.6})
('top-down and bottom-up design', 'clifford stein', {'weight': 0.6})
('top-down and bottom-up design', 'computer chess', {'weight': 0.6})
('top-down and bottom-up design', 'linear programming', {'weight': 0.6})
('top-down and bottom-up design', 'bitonic tour', {'weight': 0.6})
('top-down and bottom-up design', 'linear search problem', {'weight': 0.6})
('top-down and bottom-up design', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('top-down and bottom-up design', 'software design', {'weight': 0.5})
('top-down and bottom-up design', 'capital (economics)', {'weight': 0.6})
('top-down and bottom-up design', 'levenshtein distance', {'weight': 0.6})
('top-down and bottom-up design', 'nonlinear programming', {'weight': 0.6})
('top-down and bottom-up design', 'computational complexity of mathematical operations', {'weight': 0.6})
('top-down and bottom-up design', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('top-down and bottom-up design', 'gradient', {'weight': 0.6})
('top-down and bottom-up design', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('top-down and bottom-up design', 'bulletin of the american mathematical society', {'weight': 0.6})
('top-down and bottom-up design', 'u.s. english', {'weight': 0.6})
('top-down and bottom-up design', 'refutation table', {'weight': 0.6})
('top-down and bottom-up design', 'heuristic algorithm', {'weight': 0.6})
('top-down and bottom-up design', 'successive linear programming', {'weight': 0.6})
('top-down and bottom-up design', 'optimal substructure', {'weight': 0.6})
('top-down and bottom-up design', 'programming language', {'weight': 0.6})
('top-down and bottom-up design', 'mergesort', {'weight': 0.6})
('top-down and bottom-up design', "dijkstra's algorithm", {'weight': 0.6})
('top-down and bottom-up design', 'subgradient method', {'weight': 0.6})
('top-down and bottom-up design', 'call-by-name', {'weight': 0.6})
('top-down and bottom-up design', 'longest increasing subsequence problem', {'weight': 0.6})
('top-down and bottom-up design', 'edward prescott', {'weight': 0.6})
('top-down and bottom-up design', 'exponential time', {'weight': 0.6})
('top-down and bottom-up design', 'principle of optimality', {'weight': 0.6})
('top-down and bottom-up design', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('top-down and bottom-up design', 'mathematical game', {'weight': 0.6})
('top-down and bottom-up design', 'nancy stokey', {'weight': 0.6})
('top-down and bottom-up design', 'approximation algorithm', {'weight': 0.6})
('top-down and bottom-up design', 'discrete-time', {'weight': 0.6})
('top-down and bottom-up design', 'cyk algorithm', {'weight': 0.6})
('top-down and bottom-up design', 'markov decision process', {'weight': 0.6})
('top-down and bottom-up design', "powell's method", {'weight': 0.6})
('top-down and bottom-up design', 'wolfe conditions', {'weight': 0.6})
('top-down and bottom-up design', 'convexity in economics', {'weight': 0.6})
('top-down and bottom-up design', 'transposition table', {'weight': 0.6})
('top-down and bottom-up design', 'economics', {'weight': 0.6})
('top-down and bottom-up design', 'backward induction', {'weight': 0.6})
('top-down and bottom-up design', 'golden section search', {'weight': 0.6})
('top-down and bottom-up design', 'edit distance', {'weight': 0.6})
('top-down and bottom-up design', 'tree structure', {'weight': 0.6})
('top-down and bottom-up design', 'exchange algorithm', {'weight': 0.6})
('top-down and bottom-up design', 'dover publications', {'weight': 0.6})
('top-down and bottom-up design', 'seam carving', {'weight': 0.6})
('top-down and bottom-up design', 'recursive least squares', {'weight': 0.6})
('top-down and bottom-up design', 'metaheuristic', {'weight': 0.6})
('top-down and bottom-up design', 'quasi-newton method', {'weight': 0.6})
('top-down and bottom-up design', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('top-down and bottom-up design', 'robert e. lucas', {'weight': 0.6})
('top-down and bottom-up design', 'non-convexity (economics)', {'weight': 0.6})
('top-down and bottom-up design', 'dichotomies', {'weight': 0.5})
('top-down and bottom-up design', 'mathematical reviews', {'weight': 0.6})
('top-down and bottom-up design', 'the cathedral and the bazaar', {'weight': 0.7})
('top-down and bottom-up design', 'puzzle', {'weight': 0.6})
('top-down and bottom-up design', 'associative array', {'weight': 0.6})
('top-down and bottom-up design', 'shortest path problem', {'weight': 0.6})
('top-down and bottom-up design', 'dynamic algorithm', {'weight': 0.6})
('top-down and bottom-up design', 'augmented lagrangian method', {'weight': 0.6})
('top-down and bottom-up design', 'charles delisi', {'weight': 0.6})
('top-down and bottom-up design', 'greedy algorithm', {'weight': 0.6})
('top-down and bottom-up design', "karmarkar's algorithm", {'weight': 0.6})
('top-down and bottom-up design', 'lattice models', {'weight': 0.6})
('top-down and bottom-up design', 'utility', {'weight': 0.6})
('top-down and bottom-up design', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('top-down and bottom-up design', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('top-down and bottom-up design', 'neuropsychology', {'weight': 0.5})
('top-down and bottom-up design', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('top-down and bottom-up design', 'international standard book number', {'weight': 0.6})
('top-down and bottom-up design', 'undirected graph', {'weight': 0.6})
('top-down and bottom-up design', 'scheme (programming language)', {'weight': 0.6})
('top-down and bottom-up design', 'rna structure', {'weight': 0.6})
('top-down and bottom-up design', 'hanoi', {'weight': 0.6})
('top-down and bottom-up design', 'perl', {'weight': 0.6})
('top-down and bottom-up design', 'digital object identifier', {'weight': 0.6})
('top-down and bottom-up design', 'information science', {'weight': 0.5})
('top-down and bottom-up design', 'sequential quadratic programming', {'weight': 0.6})
('top-down and bottom-up design', "dinic's algorithm", {'weight': 0.6})
('top-down and bottom-up design', 'pseudo-polynomial time', {'weight': 0.6})
('top-down and bottom-up design', 'partition problem', {'weight': 0.6})
('top-down and bottom-up design', 'stochastic programming', {'weight': 0.6})
('top-down and bottom-up design', 'hill climbing', {'weight': 0.6})
('top-down and bottom-up design', 'top-down', {'weight': 0.6})
('top-down and bottom-up design', 'de boor algorithm', {'weight': 0.6})
('top-down and bottom-up design', 'optimization algorithm', {'weight': 0.6})
('top-down and bottom-up design', "kruskal's algorithm", {'weight': 0.6})
('top-down and bottom-up design', 'jacques philippe marie binet', {'weight': 0.6})
('top-down and bottom-up design', 'tabu search', {'weight': 0.6})
('top-down and bottom-up design', 'divide and conquer algorithm', {'weight': 0.6})
('top-down and bottom-up design', "johnson's algorithm", {'weight': 0.6})
('top-down and bottom-up design', 'evolutionary algorithm', {'weight': 0.6})
('top-down and bottom-up design', 'clique-width', {'weight': 0.6})
('top-down and bottom-up design', 'systems analysis', {'weight': 0.6})
('top-down and bottom-up design', 'dynamic programming', {'weight': 0.6})
('top-down and bottom-up design', 'subroutine', {'weight': 0.6})
('top-down and bottom-up design', 'simulated annealing', {'weight': 0.6})
('top-down and bottom-up design', 'tower of hanoi', {'weight': 0.6})
('top-down and bottom-up design', 'branch and bound', {'weight': 0.6})
('top-down and bottom-up design', 'engineering', {'weight': 0.6})
('top-down and bottom-up design', 'matroid', {'weight': 0.6})
('top-down and bottom-up design', 'viterbi algorithm', {'weight': 0.6})
('top-down and bottom-up design', "lemke's algorithm", {'weight': 0.6})
('top-down and bottom-up design', 'simplex algorithm', {'weight': 0.6})
('top-down and bottom-up design', 'local search (optimization)', {'weight': 0.6})
('top-down and bottom-up design', 'hessian matrix', {'weight': 0.6})
('top-down and bottom-up design', 'ibm system r', {'weight': 0.6})
('top-down and bottom-up design', 'penalty method', {'weight': 0.6})
('top-down and bottom-up design', 'prolog', {'weight': 0.6})
('top-down and bottom-up design', 'time-invariant system', {'weight': 0.6})
('top-down and bottom-up design', 'criss-cross algorithm', {'weight': 0.6})
('top-down and bottom-up design', 'revised simplex algorithm', {'weight': 0.6})
('top-down and bottom-up design', 'the mathematical association of america', {'weight': 0.6})
('top-down and bottom-up design', 'line search', {'weight': 0.6})
('top-down and bottom-up design', 'j (programming language)', {'weight': 0.6})
('top-down and bottom-up design', 'word wrap', {'weight': 0.6})
('top-down and bottom-up design', 'subset sum problem', {'weight': 0.6})
('top-down and bottom-up design', 'integer programming', {'weight': 0.6})
('top-down and bottom-up design', 'nucleosome', {'weight': 0.6})
('top-down and bottom-up design', 'earley algorithm', {'weight': 0.6})
('top-down and bottom-up design', 'referential transparency (computer science)', {'weight': 0.6})
('top-down and bottom-up design', 'recursion', {'weight': 0.6})
('top-down and bottom-up design', 'mathematica', {'weight': 0.6})
('top-down and bottom-up design', 'quicksort', {'weight': 0.6})
('top-down and bottom-up design', 'recursion (computer science)', {'weight': 0.6})
('top-down and bottom-up design', 'checkerboard', {'weight': 0.6})
('top-down and bottom-up design', 'computer science', {'weight': 0.6})
('top-down and bottom-up design', 'brute-force search', {'weight': 0.6})
('top-down and bottom-up design', 'mathematics', {'weight': 0.6})
('top-down and bottom-up design', 'depth-first search', {'weight': 0.6})
('top-down and bottom-up design', 'top-down and bottom-up design', {'weight': 1})
('top-down and bottom-up design', 'correspondence problem', {'weight': 0.6})
('top-down and bottom-up design', 'transcription factor', {'weight': 0.6})
('top-down and bottom-up design', 'tree decomposition', {'weight': 0.6})
('top-down and bottom-up design', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('top-down and bottom-up design', 'structural alignment', {'weight': 0.6})
('top-down and bottom-up design', 'local convergence', {'weight': 0.6})
('top-down and bottom-up design', 'knapsack problem', {'weight': 0.6})
('top-down and bottom-up design', 'graph algorithm', {'weight': 0.6})
('top-down and bottom-up design', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('top-down and bottom-up design', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('top-down and bottom-up design', 'hidden markov model', {'weight': 0.6})
('top-down and bottom-up design', 'string (computer science)', {'weight': 0.6})
('top-down and bottom-up design', 'bioinformatics', {'weight': 0.6})
('top-down and bottom-up design', 'genetics', {'weight': 0.6})
('top-down and bottom-up design', 'mathematical optimization', {'weight': 0.6})
('top-down and bottom-up design', 'artificial neural networks', {'weight': 0.6})
('top-down and bottom-up design', 'introduction to algorithms', {'weight': 0.6})
('top-down and bottom-up design', 'thomas h. cormen', {'weight': 0.6})
('top-down and bottom-up design', 'music information retrieval', {'weight': 0.6})
('top-down and bottom-up design', 'beat (music)', {'weight': 0.6})
('top-down and bottom-up design', 'longest common subsequence problem', {'weight': 0.6})
('top-down and bottom-up design', 'convex minimization', {'weight': 0.6})
('top-down and bottom-up design', 'successive parabolic interpolation', {'weight': 0.6})
('top-down and bottom-up design', 'fibonacci sequence', {'weight': 0.6})
('top-down and bottom-up design', 'maximum subarray problem', {'weight': 0.6})
('top-down and bottom-up design', 'convex optimization', {'weight': 0.6})
('top-down and bottom-up design', 'memoization', {'weight': 0.6})
('top-down and bottom-up design', 'richard bellman', {'weight': 0.6})
('top-down and bottom-up design', 'exponential growth', {'weight': 0.6})
('top-down and bottom-up design', 'charles e. leiserson', {'weight': 0.6})
('top-down and bottom-up design', 'charles erwin wilson', {'weight': 0.6})
('top-down and bottom-up design', 'interval scheduling', {'weight': 0.6})
('top-down and bottom-up design', 'chart parser', {'weight': 0.6})
('top-down and bottom-up design', 'travelling salesman problem', {'weight': 0.6})
('top-down and bottom-up design', 'bellman equation', {'weight': 0.6})
('transcription factor', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('transcription factor', 'photoshop', {'weight': 0.6})
('transcription factor', 'sequence alignment', {'weight': 0.6})
('transcription factor', 'flow network', {'weight': 0.6})
('transcription factor', 'ellipsoid method', {'weight': 0.6})
('transcription factor', 'chain matrix multiplication', {'weight': 0.6})
('transcription factor', 'ieee', {'weight': 0.6})
('transcription factor', 'backtracking', {'weight': 0.6})
('transcription factor', 'nonlinear conjugate gradient method', {'weight': 0.6})
('transcription factor', 'dynamic problem', {'weight': 0.6})
('transcription factor', 'approximation algorithm', {'weight': 0.6})
('transcription factor', 'trust region', {'weight': 0.6})
('transcription factor', 'function (mathematics)', {'weight': 0.6})
('transcription factor', 'minimum spanning tree', {'weight': 0.6})
('transcription factor', 'context-free grammar', {'weight': 0.6})
('transcription factor', 'branch and cut', {'weight': 0.6})
('transcription factor', 'state variable', {'weight': 0.6})
('transcription factor', 'treewidth', {'weight': 0.6})
('transcription factor', 'overlapping subproblem', {'weight': 0.6})
('transcription factor', 'taylor & francis', {'weight': 0.6})
('transcription factor', 'phylogenetic footprinting', {'weight': 0.7})
('transcription factor', 'cutting-plane method', {'weight': 0.6})
('transcription factor', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('transcription factor', 'method of undetermined coefficients', {'weight': 0.6})
('transcription factor', 'combinatorial optimization', {'weight': 0.6})
('transcription factor', "newton's method in optimization", {'weight': 0.6})
('transcription factor', 'matrix chain multiplication', {'weight': 0.6})
('transcription factor', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('transcription factor', 'dynamic time warping', {'weight': 0.6})
('transcription factor', 'dynamic programming language', {'weight': 0.6})
('transcription factor', 'call-by-need', {'weight': 0.6})
('transcription factor', 'big-o notation', {'weight': 0.6})
('transcription factor', 'comparison of optimization software', {'weight': 0.6})
('transcription factor', 'quadratic programming', {'weight': 0.6})
('transcription factor', 'common lisp', {'weight': 0.6})
('transcription factor', 'barrier function', {'weight': 0.6})
('transcription factor', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('transcription factor', 'gradient descent', {'weight': 0.6})
('transcription factor', 'patricia selinger', {'weight': 0.6})
('transcription factor', 'discounting', {'weight': 0.6})
('transcription factor', 'ronald l. rivest', {'weight': 0.6})
('transcription factor', 'iterative method', {'weight': 0.6})
('transcription factor', 'limited-memory bfgs', {'weight': 0.6})
('transcription factor', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('transcription factor', 'longest common substring problem', {'weight': 0.6})
('transcription factor', 'clifford stein', {'weight': 0.6})
('transcription factor', 'computer chess', {'weight': 0.6})
('transcription factor', 'linear programming', {'weight': 0.6})
('transcription factor', 'bitonic tour', {'weight': 0.6})
('transcription factor', 'linear search problem', {'weight': 0.6})
('transcription factor', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('transcription factor', 'systems analysis', {'weight': 0.6})
('transcription factor', 'capital (economics)', {'weight': 0.6})
('transcription factor', 'levenshtein distance', {'weight': 0.6})
('transcription factor', 'nonlinear programming', {'weight': 0.6})
('transcription factor', 'genetics', {'weight': 0.6})
('transcription factor', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('transcription factor', 'gradient', {'weight': 0.6})
('transcription factor', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('transcription factor', 'local convergence', {'weight': 0.6})
('transcription factor', 'bulletin of the american mathematical society', {'weight': 0.6})
('transcription factor', 'u.s. english', {'weight': 0.6})
('transcription factor', 'refutation table', {'weight': 0.6})
('transcription factor', 'heuristic algorithm', {'weight': 0.6})
('transcription factor', 'successive linear programming', {'weight': 0.6})
('transcription factor', 'optimal substructure', {'weight': 0.6})
('transcription factor', 'gene expression', {'weight': 0.5})
('transcription factor', 'programming language', {'weight': 0.6})
('transcription factor', 'mergesort', {'weight': 0.6})
('transcription factor', "dijkstra's algorithm", {'weight': 0.6})
('transcription factor', 'subgradient method', {'weight': 0.6})
('transcription factor', 'call-by-name', {'weight': 0.6})
('transcription factor', 'longest increasing subsequence problem', {'weight': 0.6})
('transcription factor', 'edward prescott', {'weight': 0.6})
('transcription factor', 'exponential time', {'weight': 0.6})
('transcription factor', 'transfac database', {'weight': 0.7})
('transcription factor', 'principle of optimality', {'weight': 0.6})
('transcription factor', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('transcription factor', 'mathematical game', {'weight': 0.6})
('transcription factor', 'nancy stokey', {'weight': 0.6})
('transcription factor', 'transcription factors', {'weight': 0.5})
('transcription factor', 'discrete-time', {'weight': 0.6})
('transcription factor', 'cyk algorithm', {'weight': 0.6})
('transcription factor', 'markov decision process', {'weight': 0.6})
('transcription factor', "powell's method", {'weight': 0.6})
('transcription factor', 'wolfe conditions', {'weight': 0.6})
('transcription factor', 'convexity in economics', {'weight': 0.6})
('transcription factor', 'transposition table', {'weight': 0.6})
('transcription factor', 'economics', {'weight': 0.6})
('transcription factor', 'backward induction', {'weight': 0.6})
('transcription factor', 'golden section search', {'weight': 0.6})
('transcription factor', 'edit distance', {'weight': 0.6})
('transcription factor', 'tree structure', {'weight': 0.6})
('transcription factor', 'exchange algorithm', {'weight': 0.6})
('transcription factor', 'dover publications', {'weight': 0.6})
('transcription factor', 'seam carving', {'weight': 0.6})
('transcription factor', 'recursive least squares', {'weight': 0.6})
('transcription factor', 'metaheuristic', {'weight': 0.6})
('transcription factor', 'quasi-newton method', {'weight': 0.6})
('transcription factor', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('transcription factor', 'robert e. lucas', {'weight': 0.6})
('transcription factor', 'non-convexity (economics)', {'weight': 0.6})
('transcription factor', 'sr1 formula', {'weight': 0.6})
('transcription factor', 'mathematical reviews', {'weight': 0.6})
('transcription factor', 'puzzle', {'weight': 0.6})
('transcription factor', 'associative array', {'weight': 0.6})
('transcription factor', 'shortest path problem', {'weight': 0.6})
('transcription factor', 'dynamic algorithm', {'weight': 0.6})
('transcription factor', 'augmented lagrangian method', {'weight': 0.6})
('transcription factor', 'charles delisi', {'weight': 0.6})
('transcription factor', 'greedy algorithm', {'weight': 0.6})
('transcription factor', "karmarkar's algorithm", {'weight': 0.6})
('transcription factor', 'lattice models', {'weight': 0.6})
('transcription factor', 'utility', {'weight': 0.6})
('transcription factor', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('transcription factor', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('transcription factor', 'dna', {'weight': 0.5})
('transcription factor', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('transcription factor', 'international standard book number', {'weight': 0.6})
('transcription factor', 'undirected graph', {'weight': 0.6})
('transcription factor', 'scheme (programming language)', {'weight': 0.6})
('transcription factor', 'rna structure', {'weight': 0.6})
('transcription factor', 'hanoi', {'weight': 0.6})
('transcription factor', 'perl', {'weight': 0.6})
('transcription factor', 'digital object identifier', {'weight': 0.6})
('transcription factor', 'sequential quadratic programming', {'weight': 0.6})
('transcription factor', "dinic's algorithm", {'weight': 0.6})
('transcription factor', 'pseudo-polynomial time', {'weight': 0.6})
('transcription factor', 'partition problem', {'weight': 0.6})
('transcription factor', 'stochastic programming', {'weight': 0.6})
('transcription factor', 'hill climbing', {'weight': 0.6})
('transcription factor', 'top-down', {'weight': 0.6})
('transcription factor', 'de boor algorithm', {'weight': 0.6})
('transcription factor', 'optimization algorithm', {'weight': 0.6})
('transcription factor', "kruskal's algorithm", {'weight': 0.6})
('transcription factor', 'jacques philippe marie binet', {'weight': 0.6})
('transcription factor', 'tabu search', {'weight': 0.6})
('transcription factor', 'divide and conquer algorithm', {'weight': 0.6})
('transcription factor', "johnson's algorithm", {'weight': 0.6})
('transcription factor', 'evolutionary algorithm', {'weight': 0.6})
('transcription factor', 'clique-width', {'weight': 0.6})
('transcription factor', 'dynamic programming', {'weight': 0.6})
('transcription factor', 'subroutine', {'weight': 0.6})
('transcription factor', 'simulated annealing', {'weight': 0.6})
('transcription factor', 'tower of hanoi', {'weight': 0.6})
('transcription factor', 'branch and bound', {'weight': 0.6})
('transcription factor', 'engineering', {'weight': 0.6})
('transcription factor', 'matroid', {'weight': 0.6})
('transcription factor', 'viterbi algorithm', {'weight': 0.6})
('transcription factor', "lemke's algorithm", {'weight': 0.6})
('transcription factor', 'simplex algorithm', {'weight': 0.6})
('transcription factor', 'local search (optimization)', {'weight': 0.6})
('transcription factor', 'hessian matrix', {'weight': 0.6})
('transcription factor', 'ibm system r', {'weight': 0.6})
('transcription factor', 'penalty method', {'weight': 0.6})
('transcription factor', 'prolog', {'weight': 0.6})
('transcription factor', 'time-invariant system', {'weight': 0.6})
('transcription factor', 'criss-cross algorithm', {'weight': 0.6})
('transcription factor', 'revised simplex algorithm', {'weight': 0.6})
('transcription factor', 'the mathematical association of america', {'weight': 0.6})
('transcription factor', 'line search', {'weight': 0.6})
('transcription factor', 'j (programming language)', {'weight': 0.6})
('transcription factor', 'word wrap', {'weight': 0.6})
('transcription factor', 'dna-binding protein', {'weight': 0.7})
('transcription factor', 'subset sum problem', {'weight': 0.6})
('transcription factor', 'integer programming', {'weight': 0.6})
('transcription factor', 'nucleosome', {'weight': 0.6})
('transcription factor', 'cdx protein family', {'weight': 0.7})
('transcription factor', 'earley algorithm', {'weight': 0.6})
('transcription factor', 'referential transparency (computer science)', {'weight': 0.6})
('transcription factor', 'recursion', {'weight': 0.6})
('transcription factor', 'mathematica', {'weight': 0.6})
('transcription factor', 'quicksort', {'weight': 0.6})
('transcription factor', 'inhibitor of dna-binding protein', {'weight': 0.7})
('transcription factor', 'recursion (computer science)', {'weight': 0.6})
('transcription factor', 'checkerboard', {'weight': 0.6})
('transcription factor', 'computer science', {'weight': 0.6})
('transcription factor', 'brute-force search', {'weight': 0.6})
('transcription factor', 'mathematics', {'weight': 0.6})
('transcription factor', 'depth-first search', {'weight': 0.6})
('transcription factor', 'top-down and bottom-up design', {'weight': 0.6})
('transcription factor', 'correspondence problem', {'weight': 0.6})
('transcription factor', 'transcription factor', {'weight': 1})
('transcription factor', 'tree decomposition', {'weight': 0.6})
('transcription factor', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('transcription factor', 'structural alignment', {'weight': 0.6})
('transcription factor', 'protein families', {'weight': 0.5})
('transcription factor', 'knapsack problem', {'weight': 0.6})
('transcription factor', 'graph algorithm', {'weight': 0.6})
('transcription factor', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('transcription factor', 'biophysics', {'weight': 0.5})
('transcription factor', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('transcription factor', 'hidden markov model', {'weight': 0.6})
('transcription factor', 'string (computer science)', {'weight': 0.6})
('transcription factor', 'bioinformatics', {'weight': 0.6})
('transcription factor', 'computational complexity of mathematical operations', {'weight': 0.6})
('transcription factor', 'mathematical optimization', {'weight': 0.6})
('transcription factor', 'nuclear receptor', {'weight': 0.7})
('transcription factor', 'artificial neural networks', {'weight': 0.6})
('transcription factor', 'introduction to algorithms', {'weight': 0.6})
('transcription factor', 'thomas h. cormen', {'weight': 0.6})
('transcription factor', 'music information retrieval', {'weight': 0.6})
('transcription factor', 'beat (music)', {'weight': 0.6})
('transcription factor', 'longest common subsequence problem', {'weight': 0.6})
('transcription factor', 'convex minimization', {'weight': 0.6})
('transcription factor', 'successive parabolic interpolation', {'weight': 0.6})
('transcription factor', 'fibonacci sequence', {'weight': 0.6})
('transcription factor', 'maximum subarray problem', {'weight': 0.6})
('transcription factor', 'convex optimization', {'weight': 0.6})
('transcription factor', 'memoization', {'weight': 0.6})
('transcription factor', 'richard bellman', {'weight': 0.6})
('transcription factor', 'exponential growth', {'weight': 0.6})
('transcription factor', 'charles e. leiserson', {'weight': 0.6})
('transcription factor', 'charles erwin wilson', {'weight': 0.6})
('transcription factor', 'interval scheduling', {'weight': 0.6})
('transcription factor', 'chart parser', {'weight': 0.6})
('transcription factor', 'travelling salesman problem', {'weight': 0.6})
('transcription factor', 'bellman equation', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'photoshop', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'sequence alignment', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'flow network', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'ellipsoid method', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'chain matrix multiplication', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'ieee', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'backtracking', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'nonlinear conjugate gradient method', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'dynamic problem', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'trust region', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'function (mathematics)', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'minimum spanning tree', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'context-free grammar', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'branch and cut', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'state variable', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'treewidth', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'overlapping subproblem', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'taylor & francis', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'cutting-plane method', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'method of undetermined coefficients', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'combinatorial optimization', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', "newton's method in optimization", {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'matrix chain multiplication', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'dynamic time warping', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'dynamic programming language', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'call-by-need', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'big-o notation', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'comparison of optimization software', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'quadratic programming', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'common lisp', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'barrier function', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'gradient descent', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'patricia selinger', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'discounting', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'ronald l. rivest', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'iterative method', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'limited-memory bfgs', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'longest common substring problem', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'clifford stein', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'computer chess', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'linear programming', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'bitonic tour', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'linear search problem', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'systems analysis', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'capital (economics)', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'levenshtein distance', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'nonlinear programming', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'computational complexity of mathematical operations', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'gradient', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'bulletin of the american mathematical society', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'u.s. english', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'refutation table', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'heuristic algorithm', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'successive linear programming', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'optimal substructure', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'programming language', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'mergesort', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', "dijkstra's algorithm", {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'subgradient method', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'call-by-name', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'longest increasing subsequence problem', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'edward prescott', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'exponential time', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'principle of optimality', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'mathematical game', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'nancy stokey', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'approximation algorithm', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'discrete-time', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'cyk algorithm', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'markov decision process', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', "powell's method", {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'wolfe conditions', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'convexity in economics', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'transposition table', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'economics', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'backward induction', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'golden section search', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'edit distance', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'tree structure', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'exchange algorithm', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'dover publications', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'seam carving', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'recursive least squares', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'metaheuristic', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'quasi-newton method', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'robert e. lucas', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'non-convexity (economics)', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'sr1 formula', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'mathematical reviews', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'puzzle', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'associative array', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'shortest path problem', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'dynamic algorithm', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'augmented lagrangian method', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'charles delisi', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'greedy algorithm', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', "karmarkar's algorithm", {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'lattice models', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'utility', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'international standard book number', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'undirected graph', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'scheme (programming language)', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'rna structure', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'hanoi', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'perl', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'digital object identifier', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'sequential quadratic programming', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', "dinic's algorithm", {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'pseudo-polynomial time', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'partition problem', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'stochastic programming', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'hill climbing', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'top-down', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'de boor algorithm', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'optimization algorithm', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', "kruskal's algorithm", {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'jacques philippe marie binet', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'tabu search', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'divide and conquer algorithm', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', "johnson's algorithm", {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'evolutionary algorithm', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'clique-width', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'dynamic programming', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'subroutine', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'simulated annealing', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'tower of hanoi', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'branch and bound', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'engineering', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'matroid', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'viterbi algorithm', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', "lemke's algorithm", {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'simplex algorithm', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'local search (optimization)', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'hessian matrix', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'ibm system r', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'penalty method', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'prolog', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'time-invariant system', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'criss-cross algorithm', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'revised simplex algorithm', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'the mathematical association of america', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'line search', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'j (programming language)', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'word wrap', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'subset sum problem', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'integer programming', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'nucleosome', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'earley algorithm', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'referential transparency (computer science)', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'recursion', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'mathematica', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'quicksort', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'recursion (computer science)', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'checkerboard', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'computer science', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'brute-force search', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'mathematics', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'depth-first search', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'top-down and bottom-up design', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'correspondence problem', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'transcription factor', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'tree decomposition', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'duckworth\xe2\x80\x93lewis method', {'weight': 1})
('duckworth\xe2\x80\x93lewis method', 'structural alignment', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'local convergence', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'knapsack problem', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'graph algorithm', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'hidden markov model', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'string (computer science)', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'bioinformatics', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'genetics', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'mathematical optimization', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'artificial neural networks', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'introduction to algorithms', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'thomas h. cormen', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'music information retrieval', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'beat (music)', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'longest common subsequence problem', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'convex minimization', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'successive parabolic interpolation', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'fibonacci sequence', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'maximum subarray problem', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'convex optimization', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'memoization', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'richard bellman', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'exponential growth', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'charles e. leiserson', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'charles erwin wilson', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'interval scheduling', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'chart parser', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'travelling salesman problem', {'weight': 0.6})
('duckworth\xe2\x80\x93lewis method', 'bellman equation', {'weight': 0.6})
('structural alignment', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('structural alignment', 'photoshop', {'weight': 0.6})
('structural alignment', 'sequence alignment', {'weight': 0.7})
('structural alignment', 'flow network', {'weight': 0.6})
('structural alignment', 'ellipsoid method', {'weight': 0.6})
('structural alignment', 'chain matrix multiplication', {'weight': 0.6})
('structural alignment', 'ieee', {'weight': 0.6})
('structural alignment', 'backtracking', {'weight': 0.6})
('structural alignment', 'nonlinear conjugate gradient method', {'weight': 0.6})
('structural alignment', 'dynamic problem', {'weight': 0.6})
('structural alignment', 'trust region', {'weight': 0.6})
('structural alignment', 'function (mathematics)', {'weight': 0.6})
('structural alignment', 'minimum spanning tree', {'weight': 0.6})
('structural alignment', 'context-free grammar', {'weight': 0.6})
('structural alignment', 'branch and cut', {'weight': 0.6})
('structural alignment', 'state variable', {'weight': 0.6})
('structural alignment', 'treewidth', {'weight': 0.6})
('structural alignment', 'overlapping subproblem', {'weight': 0.6})
('structural alignment', 'taylor & francis', {'weight': 0.6})
('structural alignment', 'cutting-plane method', {'weight': 0.6})
('structural alignment', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('structural alignment', 'method of undetermined coefficients', {'weight': 0.6})
('structural alignment', 'combinatorial optimization', {'weight': 0.6})
('structural alignment', "newton's method in optimization", {'weight': 0.6})
('structural alignment', 'matrix chain multiplication', {'weight': 0.6})
('structural alignment', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('structural alignment', 'dynamic time warping', {'weight': 0.6})
('structural alignment', 'dynamic programming language', {'weight': 0.6})
('structural alignment', 'call-by-need', {'weight': 0.6})
('structural alignment', 'big-o notation', {'weight': 0.6})
('structural alignment', 'protein methods', {'weight': 0.5})
('structural alignment', 'comparison of optimization software', {'weight': 0.6})
('structural alignment', 'quadratic programming', {'weight': 0.6})
('structural alignment', 'common lisp', {'weight': 0.6})
('structural alignment', 'barrier function', {'weight': 0.6})
('structural alignment', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('structural alignment', 'gradient descent', {'weight': 0.6})
('structural alignment', 'patricia selinger', {'weight': 0.6})
('structural alignment', 'discounting', {'weight': 0.6})
('structural alignment', 'ronald l. rivest', {'weight': 0.6})
('structural alignment', 'iterative method', {'weight': 0.6})
('structural alignment', 'limited-memory bfgs', {'weight': 0.6})
('structural alignment', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('structural alignment', 'longest common substring problem', {'weight': 0.6})
('structural alignment', 'clifford stein', {'weight': 0.6})
('structural alignment', 'computer chess', {'weight': 0.6})
('structural alignment', 'linear programming', {'weight': 0.6})
('structural alignment', 'bitonic tour', {'weight': 0.6})
('structural alignment', 'linear search problem', {'weight': 0.6})
('structural alignment', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('structural alignment', 'systems analysis', {'weight': 0.6})
('structural alignment', 'capital (economics)', {'weight': 0.6})
('structural alignment', 'levenshtein distance', {'weight': 0.6})
('structural alignment', 'nonlinear programming', {'weight': 0.6})
('structural alignment', 'computational complexity of mathematical operations', {'weight': 0.6})
('structural alignment', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('structural alignment', 'gradient', {'weight': 0.6})
('structural alignment', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('structural alignment', 'bulletin of the american mathematical society', {'weight': 0.6})
('structural alignment', 'u.s. english', {'weight': 0.6})
('structural alignment', 'refutation table', {'weight': 0.6})
('structural alignment', 'heuristic algorithm', {'weight': 0.6})
('structural alignment', 'successive linear programming', {'weight': 0.6})
('structural alignment', 'optimal substructure', {'weight': 0.6})
('structural alignment', 'programming language', {'weight': 0.6})
('structural alignment', 'mergesort', {'weight': 0.6})
('structural alignment', "dijkstra's algorithm", {'weight': 0.6})
('structural alignment', 'subgradient method', {'weight': 0.6})
('structural alignment', 'call-by-name', {'weight': 0.6})
('structural alignment', 'longest increasing subsequence problem', {'weight': 0.6})
('structural alignment', 'edward prescott', {'weight': 0.6})
('structural alignment', 'exponential time', {'weight': 0.6})
('structural alignment', 'principle of optimality', {'weight': 0.6})
('structural alignment', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('structural alignment', 'mathematical game', {'weight': 0.6})
('structural alignment', 'nancy stokey', {'weight': 0.6})
('structural alignment', 'structural classification of proteins', {'weight': 0.7})
('structural alignment', 'approximation algorithm', {'weight': 0.6})
('structural alignment', 'discrete-time', {'weight': 0.6})
('structural alignment', 'cyk algorithm', {'weight': 0.6})
('structural alignment', 'markov decision process', {'weight': 0.6})
('structural alignment', "powell's method", {'weight': 0.6})
('structural alignment', 'wolfe conditions', {'weight': 0.6})
('structural alignment', 'convexity in economics', {'weight': 0.6})
('structural alignment', 'transposition table', {'weight': 0.6})
('structural alignment', 'economics', {'weight': 0.6})
('structural alignment', 'backward induction', {'weight': 0.6})
('structural alignment', 'golden section search', {'weight': 0.6})
('structural alignment', 'edit distance', {'weight': 0.6})
('structural alignment', 'tree structure', {'weight': 0.6})
('structural alignment', 'exchange algorithm', {'weight': 0.6})
('structural alignment', 'dover publications', {'weight': 0.6})
('structural alignment', 'seam carving', {'weight': 0.6})
('structural alignment', 'recursive least squares', {'weight': 0.6})
('structural alignment', 'metaheuristic', {'weight': 0.6})
('structural alignment', 'quasi-newton method', {'weight': 0.6})
('structural alignment', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('structural alignment', 'robert e. lucas', {'weight': 0.6})
('structural alignment', 'non-convexity (economics)', {'weight': 0.6})
('structural alignment', 'sr1 formula', {'weight': 0.6})
('structural alignment', 'mathematical reviews', {'weight': 0.6})
('structural alignment', 'puzzle', {'weight': 0.6})
('structural alignment', 'associative array', {'weight': 0.6})
('structural alignment', 'shortest path problem', {'weight': 0.6})
('structural alignment', 'dynamic algorithm', {'weight': 0.6})
('structural alignment', 'augmented lagrangian method', {'weight': 0.6})
('structural alignment', 'charles delisi', {'weight': 0.6})
('structural alignment', 'greedy algorithm', {'weight': 0.6})
('structural alignment', "karmarkar's algorithm", {'weight': 0.6})
('structural alignment', 'lattice models', {'weight': 0.6})
('structural alignment', 'utility', {'weight': 0.6})
('structural alignment', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('structural alignment', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('structural alignment', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('structural alignment', 'international standard book number', {'weight': 0.6})
('structural alignment', 'undirected graph', {'weight': 0.6})
('structural alignment', 'scheme (programming language)', {'weight': 0.6})
('structural alignment', 'rna structure', {'weight': 0.6})
('structural alignment', 'hanoi', {'weight': 0.6})
('structural alignment', 'perl', {'weight': 0.6})
('structural alignment', 'digital object identifier', {'weight': 0.6})
('structural alignment', 'sequential quadratic programming', {'weight': 0.6})
('structural alignment', "dinic's algorithm", {'weight': 0.6})
('structural alignment', 'pseudo-polynomial time', {'weight': 0.6})
('structural alignment', 'partition problem', {'weight': 0.6})
('structural alignment', 'stochastic programming', {'weight': 0.6})
('structural alignment', 'hill climbing', {'weight': 0.6})
('structural alignment', 'top-down', {'weight': 0.6})
('structural alignment', 'de boor algorithm', {'weight': 0.6})
('structural alignment', 'optimization algorithm', {'weight': 0.6})
('structural alignment', "kruskal's algorithm", {'weight': 0.6})
('structural alignment', 'jacques philippe marie binet', {'weight': 0.6})
('structural alignment', 'tabu search', {'weight': 0.6})
('structural alignment', 'divide and conquer algorithm', {'weight': 0.6})
('structural alignment', "johnson's algorithm", {'weight': 0.6})
('structural alignment', 'evolutionary algorithm', {'weight': 0.6})
('structural alignment', 'clique-width', {'weight': 0.6})
('structural alignment', 'dynamic programming', {'weight': 0.6})
('structural alignment', 'subroutine', {'weight': 0.6})
('structural alignment', 'simulated annealing', {'weight': 0.6})
('structural alignment', 'tower of hanoi', {'weight': 0.6})
('structural alignment', 'branch and bound', {'weight': 0.6})
('structural alignment', 'engineering', {'weight': 0.6})
('structural alignment', 'matroid', {'weight': 0.6})
('structural alignment', 'viterbi algorithm', {'weight': 0.6})
('structural alignment', "lemke's algorithm", {'weight': 0.6})
('structural alignment', 'simplex algorithm', {'weight': 0.6})
('structural alignment', 'local search (optimization)', {'weight': 0.6})
('structural alignment', 'hessian matrix', {'weight': 0.6})
('structural alignment', 'ibm system r', {'weight': 0.6})
('structural alignment', 'penalty method', {'weight': 0.6})
('structural alignment', 'prolog', {'weight': 0.6})
('structural alignment', 'time-invariant system', {'weight': 0.6})
('structural alignment', 'criss-cross algorithm', {'weight': 0.6})
('structural alignment', 'revised simplex algorithm', {'weight': 0.6})
('structural alignment', 'the mathematical association of america', {'weight': 0.6})
('structural alignment', 'superpose', {'weight': 0.7})
('structural alignment', 'line search', {'weight': 0.6})
('structural alignment', 'j (programming language)', {'weight': 0.6})
('structural alignment', 'word wrap', {'weight': 0.6})
('structural alignment', 'multiple sequence alignment', {'weight': 0.7})
('structural alignment', 'subset sum problem', {'weight': 0.6})
('structural alignment', 'integer programming', {'weight': 0.6})
('structural alignment', 'nucleosome', {'weight': 0.6})
('structural alignment', 'earley algorithm', {'weight': 0.6})
('structural alignment', 'referential transparency (computer science)', {'weight': 0.6})
('structural alignment', 'list of sequence alignment software', {'weight': 0.7})
('structural alignment', 'recursion', {'weight': 0.6})
('structural alignment', 'mathematica', {'weight': 0.6})
('structural alignment', 'quicksort', {'weight': 0.6})
('structural alignment', 'recursion (computer science)', {'weight': 0.6})
('structural alignment', 'checkerboard', {'weight': 0.6})
('structural alignment', 'computer science', {'weight': 0.6})
('structural alignment', 'brute-force search', {'weight': 0.6})
('structural alignment', 'mathematics', {'weight': 0.6})
('structural alignment', 'depth-first search', {'weight': 0.6})
('structural alignment', 'top-down and bottom-up design', {'weight': 0.6})
('structural alignment', 'correspondence problem', {'weight': 0.6})
('structural alignment', 'transcription factor', {'weight': 0.6})
('structural alignment', 'tree decomposition', {'weight': 0.6})
('structural alignment', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('structural alignment', 'structural alignment', {'weight': 1})
('structural alignment', 'local convergence', {'weight': 0.6})
('structural alignment', 'knapsack problem', {'weight': 0.6})
('structural alignment', 'graph algorithm', {'weight': 0.6})
('structural alignment', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('structural alignment', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('structural alignment', 'hidden markov model', {'weight': 0.6})
('structural alignment', 'string (computer science)', {'weight': 0.6})
('structural alignment', 'bioinformatics', {'weight': 0.6})
('structural alignment', 'genetics', {'weight': 0.6})
('structural alignment', 'mathematical optimization', {'weight': 0.6})
('structural alignment', 'artificial neural networks', {'weight': 0.6})
('structural alignment', 'introduction to algorithms', {'weight': 0.6})
('structural alignment', 'thomas h. cormen', {'weight': 0.6})
('structural alignment', 'music information retrieval', {'weight': 0.6})
('structural alignment', 'beat (music)', {'weight': 0.6})
('structural alignment', 'longest common subsequence problem', {'weight': 0.6})
('structural alignment', 'convex minimization', {'weight': 0.6})
('structural alignment', 'successive parabolic interpolation', {'weight': 0.6})
('structural alignment', 'fibonacci sequence', {'weight': 0.6})
('structural alignment', 'maximum subarray problem', {'weight': 0.6})
('structural alignment', 'convex optimization', {'weight': 0.6})
('structural alignment', 'memoization', {'weight': 0.6})
('structural alignment', 'richard bellman', {'weight': 0.6})
('structural alignment', 'exponential growth', {'weight': 0.6})
('structural alignment', 'charles e. leiserson', {'weight': 0.6})
('structural alignment', 'charles erwin wilson', {'weight': 0.6})
('structural alignment', 'interval scheduling', {'weight': 0.6})
('structural alignment', 'chart parser', {'weight': 0.6})
('structural alignment', 'travelling salesman problem', {'weight': 0.6})
('structural alignment', 'bellman equation', {'weight': 0.6})
('local convergence', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('local convergence', 'photoshop', {'weight': 0.6})
('local convergence', 'sequence alignment', {'weight': 0.6})
('local convergence', 'flow network', {'weight': 0.6})
('local convergence', 'ellipsoid method', {'weight': 0.6})
('local convergence', 'chain matrix multiplication', {'weight': 0.6})
('local convergence', 'ieee', {'weight': 0.6})
('local convergence', 'backtracking', {'weight': 0.6})
('local convergence', 'nonlinear conjugate gradient method', {'weight': 0.6})
('local convergence', 'dynamic problem', {'weight': 0.6})
('local convergence', 'trust region', {'weight': 0.6})
('local convergence', 'function (mathematics)', {'weight': 0.6})
('local convergence', 'minimum spanning tree', {'weight': 0.6})
('local convergence', 'context-free grammar', {'weight': 0.6})
('local convergence', 'branch and cut', {'weight': 0.6})
('local convergence', 'state variable', {'weight': 0.6})
('local convergence', 'treewidth', {'weight': 0.6})
('local convergence', 'optimization algorithms and methods', {'weight': 0.5})
('local convergence', 'overlapping subproblem', {'weight': 0.6})
('local convergence', 'taylor & francis', {'weight': 0.6})
('local convergence', 'cutting-plane method', {'weight': 0.6})
('local convergence', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('local convergence', 'method of undetermined coefficients', {'weight': 0.6})
('local convergence', 'combinatorial optimization', {'weight': 0.6})
('local convergence', "newton's method in optimization", {'weight': 0.6})
('local convergence', 'matrix chain multiplication', {'weight': 0.6})
('local convergence', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('local convergence', 'dynamic time warping', {'weight': 0.6})
('local convergence', 'dynamic programming language', {'weight': 0.6})
('local convergence', 'call-by-need', {'weight': 0.6})
('local convergence', 'big-o notation', {'weight': 0.6})
('local convergence', 'comparison of optimization software', {'weight': 0.6})
('local convergence', 'quadratic programming', {'weight': 0.6})
('local convergence', 'common lisp', {'weight': 0.6})
('local convergence', 'barrier function', {'weight': 0.6})
('local convergence', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('local convergence', 'gradient descent', {'weight': 0.6})
('local convergence', 'patricia selinger', {'weight': 0.6})
('local convergence', 'discounting', {'weight': 0.6})
('local convergence', 'ronald l. rivest', {'weight': 0.6})
('local convergence', 'iterative method', {'weight': 0.6})
('local convergence', 'limited-memory bfgs', {'weight': 0.6})
('local convergence', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('local convergence', 'longest common substring problem', {'weight': 0.6})
('local convergence', 'numerical analysis', {'weight': 0.5})
('local convergence', 'clifford stein', {'weight': 0.6})
('local convergence', 'computer chess', {'weight': 0.6})
('local convergence', 'linear programming', {'weight': 0.6})
('local convergence', 'bitonic tour', {'weight': 0.6})
('local convergence', 'linear search problem', {'weight': 0.6})
('local convergence', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('local convergence', 'systems analysis', {'weight': 0.6})
('local convergence', 'capital (economics)', {'weight': 0.6})
('local convergence', 'levenshtein distance', {'weight': 0.6})
('local convergence', 'nonlinear programming', {'weight': 0.6})
('local convergence', 'computational complexity of mathematical operations', {'weight': 0.6})
('local convergence', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('local convergence', 'gradient', {'weight': 0.6})
('local convergence', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('local convergence', 'convex minimization', {'weight': 0.6})
('local convergence', 'bulletin of the american mathematical society', {'weight': 0.6})
('local convergence', 'u.s. english', {'weight': 0.6})
('local convergence', 'refutation table', {'weight': 0.6})
('local convergence', 'heuristic algorithm', {'weight': 0.6})
('local convergence', 'successive linear programming', {'weight': 0.6})
('local convergence', 'optimal substructure', {'weight': 0.6})
('local convergence', 'programming language', {'weight': 0.6})
('local convergence', 'mergesort', {'weight': 0.6})
('local convergence', "dijkstra's algorithm", {'weight': 0.6})
('local convergence', 'subgradient method', {'weight': 0.6})
('local convergence', 'call-by-name', {'weight': 0.6})
('local convergence', 'longest increasing subsequence problem', {'weight': 0.6})
('local convergence', 'edward prescott', {'weight': 0.6})
('local convergence', 'exponential time', {'weight': 0.6})
('local convergence', 'principle of optimality', {'weight': 0.6})
('local convergence', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('local convergence', 'mathematical game', {'weight': 0.6})
('local convergence', 'nancy stokey', {'weight': 0.6})
('local convergence', 'approximation algorithm', {'weight': 0.6})
('local convergence', 'discrete-time', {'weight': 0.6})
('local convergence', 'cyk algorithm', {'weight': 0.6})
('local convergence', 'markov decision process', {'weight': 0.6})
('local convergence', "powell's method", {'weight': 0.6})
('local convergence', 'wolfe conditions', {'weight': 0.6})
('local convergence', 'convexity in economics', {'weight': 0.6})
('local convergence', 'transposition table', {'weight': 0.6})
('local convergence', 'economics', {'weight': 0.6})
('local convergence', 'backward induction', {'weight': 0.6})
('local convergence', 'golden section search', {'weight': 0.6})
('local convergence', 'edit distance', {'weight': 0.6})
('local convergence', 'tree structure', {'weight': 0.6})
('local convergence', 'exchange algorithm', {'weight': 0.6})
('local convergence', 'dover publications', {'weight': 0.6})
('local convergence', 'seam carving', {'weight': 0.6})
('local convergence', 'recursive least squares', {'weight': 0.6})
('local convergence', 'metaheuristic', {'weight': 0.6})
('local convergence', 'quasi-newton method', {'weight': 0.6})
('local convergence', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('local convergence', 'robert e. lucas', {'weight': 0.6})
('local convergence', 'non-convexity (economics)', {'weight': 0.6})
('local convergence', 'sr1 formula', {'weight': 0.6})
('local convergence', 'mathematical reviews', {'weight': 0.6})
('local convergence', 'puzzle', {'weight': 0.6})
('local convergence', 'associative array', {'weight': 0.6})
('local convergence', 'shortest path problem', {'weight': 0.6})
('local convergence', 'dynamic algorithm', {'weight': 0.6})
('local convergence', 'augmented lagrangian method', {'weight': 0.6})
('local convergence', 'charles delisi', {'weight': 0.6})
('local convergence', 'greedy algorithm', {'weight': 0.6})
('local convergence', "karmarkar's algorithm", {'weight': 0.6})
('local convergence', 'lattice models', {'weight': 0.6})
('local convergence', 'utility', {'weight': 0.6})
('local convergence', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('local convergence', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('local convergence', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('local convergence', 'international standard book number', {'weight': 0.6})
('local convergence', 'undirected graph', {'weight': 0.6})
('local convergence', 'scheme (programming language)', {'weight': 0.6})
('local convergence', 'rna structure', {'weight': 0.6})
('local convergence', 'hanoi', {'weight': 0.6})
('local convergence', 'perl', {'weight': 0.6})
('local convergence', 'digital object identifier', {'weight': 0.6})
('local convergence', 'sequential quadratic programming', {'weight': 0.6})
('local convergence', "dinic's algorithm", {'weight': 0.6})
('local convergence', 'pseudo-polynomial time', {'weight': 0.6})
('local convergence', 'partition problem', {'weight': 0.6})
('local convergence', 'stochastic programming', {'weight': 0.6})
('local convergence', 'hill climbing', {'weight': 0.6})
('local convergence', 'top-down', {'weight': 0.6})
('local convergence', 'de boor algorithm', {'weight': 0.6})
('local convergence', 'optimization algorithm', {'weight': 0.6})
('local convergence', "kruskal's algorithm", {'weight': 0.6})
('local convergence', 'jacques philippe marie binet', {'weight': 0.6})
('local convergence', 'tabu search', {'weight': 0.6})
('local convergence', 'divide and conquer algorithm', {'weight': 0.6})
('local convergence', 'iterative methods', {'weight': 0.5})
('local convergence', "johnson's algorithm", {'weight': 0.6})
('local convergence', 'evolutionary algorithm', {'weight': 0.6})
('local convergence', 'clique-width', {'weight': 0.6})
('local convergence', 'dynamic programming', {'weight': 0.6})
('local convergence', 'subroutine', {'weight': 0.6})
('local convergence', 'simulated annealing', {'weight': 0.6})
('local convergence', 'tower of hanoi', {'weight': 0.6})
('local convergence', 'branch and bound', {'weight': 0.6})
('local convergence', 'engineering', {'weight': 0.6})
('local convergence', 'matroid', {'weight': 0.6})
('local convergence', 'viterbi algorithm', {'weight': 0.6})
('local convergence', "lemke's algorithm", {'weight': 0.6})
('local convergence', 'simplex algorithm', {'weight': 0.6})
('local convergence', 'local search (optimization)', {'weight': 0.6})
('local convergence', 'hessian matrix', {'weight': 0.6})
('local convergence', 'ibm system r', {'weight': 0.6})
('local convergence', 'penalty method', {'weight': 0.6})
('local convergence', 'prolog', {'weight': 0.6})
('local convergence', 'time-invariant system', {'weight': 0.6})
('local convergence', 'criss-cross algorithm', {'weight': 0.6})
('local convergence', 'revised simplex algorithm', {'weight': 0.6})
('local convergence', 'the mathematical association of america', {'weight': 0.6})
('local convergence', 'line search', {'weight': 0.6})
('local convergence', 'j (programming language)', {'weight': 0.6})
('local convergence', 'word wrap', {'weight': 0.6})
('local convergence', 'subset sum problem', {'weight': 0.6})
('local convergence', 'integer programming', {'weight': 0.6})
('local convergence', 'nucleosome', {'weight': 0.6})
('local convergence', 'earley algorithm', {'weight': 0.6})
('local convergence', 'mathematical analysis stubs', {'weight': 0.5})
('local convergence', 'recursion', {'weight': 0.6})
('local convergence', 'mathematica', {'weight': 0.6})
('local convergence', 'quicksort', {'weight': 0.6})
('local convergence', 'recursion (computer science)', {'weight': 0.6})
('local convergence', 'checkerboard', {'weight': 0.6})
('local convergence', 'computer science', {'weight': 0.6})
('local convergence', 'brute-force search', {'weight': 0.6})
('local convergence', 'mathematics', {'weight': 0.6})
('local convergence', 'depth-first search', {'weight': 0.6})
('local convergence', 'top-down and bottom-up design', {'weight': 0.6})
('local convergence', 'correspondence problem', {'weight': 0.6})
('local convergence', 'transcription factor', {'weight': 0.6})
('local convergence', 'tree decomposition', {'weight': 0.6})
('local convergence', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('local convergence', 'structural alignment', {'weight': 0.6})
('local convergence', 'local convergence', {'weight': 1})
('local convergence', 'knapsack problem', {'weight': 0.6})
('local convergence', 'graph algorithm', {'weight': 0.6})
('local convergence', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('local convergence', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('local convergence', 'hidden markov model', {'weight': 0.6})
('local convergence', 'string (computer science)', {'weight': 0.6})
('local convergence', 'bioinformatics', {'weight': 0.6})
('local convergence', 'genetics', {'weight': 0.6})
('local convergence', 'mathematical optimization', {'weight': 0.6})
('local convergence', 'artificial neural networks', {'weight': 0.6})
('local convergence', 'introduction to algorithms', {'weight': 0.6})
('local convergence', 'thomas h. cormen', {'weight': 0.6})
('local convergence', 'music information retrieval', {'weight': 0.6})
('local convergence', 'beat (music)', {'weight': 0.6})
('local convergence', 'longest common subsequence problem', {'weight': 0.6})
('local convergence', 'referential transparency (computer science)', {'weight': 0.6})
('local convergence', 'successive parabolic interpolation', {'weight': 0.6})
('local convergence', 'fibonacci sequence', {'weight': 0.6})
('local convergence', 'maximum subarray problem', {'weight': 0.6})
('local convergence', 'convex optimization', {'weight': 0.6})
('local convergence', 'memoization', {'weight': 0.6})
('local convergence', 'richard bellman', {'weight': 0.6})
('local convergence', 'exponential growth', {'weight': 0.6})
('local convergence', 'charles e. leiserson', {'weight': 0.6})
('local convergence', 'charles erwin wilson', {'weight': 0.6})
('local convergence', 'interval scheduling', {'weight': 0.6})
('local convergence', 'chart parser', {'weight': 0.6})
('local convergence', 'travelling salesman problem', {'weight': 0.6})
('local convergence', 'bellman equation', {'weight': 0.6})
('metaheuristic', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('metaheuristic', 'photoshop', {'weight': 0.6})
('metaheuristic', 'sequence alignment', {'weight': 0.6})
('metaheuristic', 'flow network', {'weight': 0.6})
('metaheuristic', 'ellipsoid method', {'weight': 0.6})
('metaheuristic', 'chain matrix multiplication', {'weight': 0.6})
('metaheuristic', 'ieee', {'weight': 0.6})
('metaheuristic', 'backtracking', {'weight': 0.6})
('metaheuristic', 'nonlinear conjugate gradient method', {'weight': 0.6})
('metaheuristic', 'dynamic problem', {'weight': 0.6})
('metaheuristic', 'genetic algorithms', {'weight': 0.7})
('metaheuristic', 'trust region', {'weight': 0.6})
('metaheuristic', 'function (mathematics)', {'weight': 0.6})
('metaheuristic', 'minimum spanning tree', {'weight': 0.6})
('metaheuristic', 'meta-optimization', {'weight': 0.7})
('metaheuristic', 'context-free grammar', {'weight': 0.6})
('metaheuristic', 'branch and cut', {'weight': 0.6})
('metaheuristic', 'state variable', {'weight': 0.6})
('metaheuristic', 'treewidth', {'weight': 0.6})
('metaheuristic', 'overlapping subproblem', {'weight': 0.6})
('metaheuristic', 'taylor & francis', {'weight': 0.6})
('metaheuristic', 'cutting-plane method', {'weight': 0.6})
('metaheuristic', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('metaheuristic', 'method of undetermined coefficients', {'weight': 0.6})
('metaheuristic', 'combinatorial optimization', {'weight': 0.6})
('metaheuristic', "newton's method in optimization", {'weight': 0.6})
('metaheuristic', 'matrix chain multiplication', {'weight': 0.6})
('metaheuristic', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('metaheuristic', 'dynamic time warping', {'weight': 0.6})
('metaheuristic', 'dynamic programming language', {'weight': 0.6})
('metaheuristic', 'call-by-need', {'weight': 0.6})
('metaheuristic', 'big-o notation', {'weight': 0.6})
('metaheuristic', 'comparison of optimization software', {'weight': 0.6})
('metaheuristic', 'quadratic programming', {'weight': 0.6})
('metaheuristic', 'common lisp', {'weight': 0.6})
('metaheuristic', 'barrier function', {'weight': 0.6})
('metaheuristic', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('metaheuristic', 'gradient descent', {'weight': 0.6})
('metaheuristic', 'patricia selinger', {'weight': 0.6})
('metaheuristic', 'discounting', {'weight': 0.6})
('metaheuristic', 'ronald l. rivest', {'weight': 0.6})
('metaheuristic', 'iterative method', {'weight': 0.6})
('metaheuristic', 'limited-memory bfgs', {'weight': 0.6})
('metaheuristic', 'matheuristics', {'weight': 0.7})
('metaheuristic', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('metaheuristic', 'longest common substring problem', {'weight': 0.6})
('metaheuristic', 'clifford stein', {'weight': 0.6})
('metaheuristic', 'computer chess', {'weight': 0.6})
('metaheuristic', 'linear programming', {'weight': 0.6})
('metaheuristic', 'bitonic tour', {'weight': 0.6})
('metaheuristic', 'linear search problem', {'weight': 0.6})
('metaheuristic', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('metaheuristic', 'systems analysis', {'weight': 0.6})
('metaheuristic', 'capital (economics)', {'weight': 0.6})
('metaheuristic', 'levenshtein distance', {'weight': 0.6})
('metaheuristic', 'nonlinear programming', {'weight': 0.6})
('metaheuristic', 'computational complexity of mathematical operations', {'weight': 0.6})
('metaheuristic', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('metaheuristic', 'gradient', {'weight': 0.6})
('metaheuristic', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('metaheuristic', 'bulletin of the american mathematical society', {'weight': 0.6})
('metaheuristic', 'u.s. english', {'weight': 0.6})
('metaheuristic', 'refutation table', {'weight': 0.6})
('metaheuristic', 'heuristic algorithm', {'weight': 0.6})
('metaheuristic', 'successive linear programming', {'weight': 0.6})
('metaheuristic', 'optimal substructure', {'weight': 0.6})
('metaheuristic', 'programming language', {'weight': 0.6})
('metaheuristic', 'mergesort', {'weight': 0.6})
('metaheuristic', "dijkstra's algorithm", {'weight': 0.6})
('metaheuristic', 'subgradient method', {'weight': 0.6})
('metaheuristic', 'call-by-name', {'weight': 0.6})
('metaheuristic', 'longest increasing subsequence problem', {'weight': 0.6})
('metaheuristic', 'edward prescott', {'weight': 0.6})
('metaheuristic', 'exponential time', {'weight': 0.6})
('metaheuristic', 'principle of optimality', {'weight': 0.6})
('metaheuristic', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('metaheuristic', 'mathematical game', {'weight': 0.6})
('metaheuristic', 'nancy stokey', {'weight': 0.6})
('metaheuristic', 'approximation algorithm', {'weight': 0.6})
('metaheuristic', 'discrete-time', {'weight': 0.6})
('metaheuristic', 'cyk algorithm', {'weight': 0.6})
('metaheuristic', 'markov decision process', {'weight': 0.6})
('metaheuristic', "powell's method", {'weight': 0.6})
('metaheuristic', 'wolfe conditions', {'weight': 0.6})
('metaheuristic', 'convexity in economics', {'weight': 0.6})
('metaheuristic', 'transposition table', {'weight': 0.6})
('metaheuristic', 'economics', {'weight': 0.6})
('metaheuristic', 'backward induction', {'weight': 0.6})
('metaheuristic', 'golden section search', {'weight': 0.6})
('metaheuristic', 'edit distance', {'weight': 0.6})
('metaheuristic', 'tree structure', {'weight': 0.6})
('metaheuristic', 'exchange algorithm', {'weight': 0.6})
('metaheuristic', 'dover publications', {'weight': 0.6})
('metaheuristic', 'seam carving', {'weight': 0.6})
('metaheuristic', 'recursive least squares', {'weight': 0.6})
('metaheuristic', 'metaheuristic', {'weight': 1})
('metaheuristic', 'quasi-newton method', {'weight': 0.6})
('metaheuristic', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('metaheuristic', 'robert e. lucas', {'weight': 0.6})
('metaheuristic', 'non-convexity (economics)', {'weight': 0.6})
('metaheuristic', 'swarm intelligence', {'weight': 0.7})
('metaheuristic', 'sr1 formula', {'weight': 0.6})
('metaheuristic', 'mathematical reviews', {'weight': 0.6})
('metaheuristic', 'puzzle', {'weight': 0.6})
('metaheuristic', 'associative array', {'weight': 0.6})
('metaheuristic', 'shortest path problem', {'weight': 0.6})
('metaheuristic', 'dynamic algorithm', {'weight': 0.6})
('metaheuristic', 'augmented lagrangian method', {'weight': 0.6})
('metaheuristic', 'charles delisi', {'weight': 0.6})
('metaheuristic', 'greedy algorithm', {'weight': 0.6})
('metaheuristic', "karmarkar's algorithm", {'weight': 0.6})
('metaheuristic', 'lattice models', {'weight': 0.6})
('metaheuristic', 'utility', {'weight': 0.6})
('metaheuristic', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('metaheuristic', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('metaheuristic', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('metaheuristic', 'international standard book number', {'weight': 0.6})
('metaheuristic', 'undirected graph', {'weight': 0.6})
('metaheuristic', 'scheme (programming language)', {'weight': 0.6})
('metaheuristic', 'rna structure', {'weight': 0.6})
('metaheuristic', 'hanoi', {'weight': 0.6})
('metaheuristic', 'perl', {'weight': 0.6})
('metaheuristic', 'digital object identifier', {'weight': 0.6})
('metaheuristic', 'sequential quadratic programming', {'weight': 0.6})
('metaheuristic', "dinic's algorithm", {'weight': 0.6})
('metaheuristic', 'pseudo-polynomial time', {'weight': 0.6})
('metaheuristic', 'partition problem', {'weight': 0.6})
('metaheuristic', 'operations research', {'weight': 0.5})
('metaheuristic', 'hill climbing', {'weight': 0.6})
('metaheuristic', 'top-down', {'weight': 0.6})
('metaheuristic', 'de boor algorithm', {'weight': 0.6})
('metaheuristic', 'optimization algorithm', {'weight': 0.6})
('metaheuristic', "kruskal's algorithm", {'weight': 0.6})
('metaheuristic', 'stochastic search', {'weight': 0.7})
('metaheuristic', 'jacques philippe marie binet', {'weight': 0.6})
('metaheuristic', 'tabu search', {'weight': 0.6})
('metaheuristic', 'divide and conquer algorithm', {'weight': 0.6})
('metaheuristic', "johnson's algorithm", {'weight': 0.6})
('metaheuristic', 'evolutionary algorithm', {'weight': 0.6})
('metaheuristic', 'clique-width', {'weight': 0.6})
('metaheuristic', 'dynamic programming', {'weight': 0.6})
('metaheuristic', 'subroutine', {'weight': 0.6})
('metaheuristic', 'simulated annealing', {'weight': 0.7})
('metaheuristic', 'tower of hanoi', {'weight': 0.6})
('metaheuristic', 'branch and bound', {'weight': 0.6})
('metaheuristic', 'engineering', {'weight': 0.6})
('metaheuristic', 'matroid', {'weight': 0.6})
('metaheuristic', 'viterbi algorithm', {'weight': 0.6})
('metaheuristic', "lemke's algorithm", {'weight': 0.6})
('metaheuristic', 'simplex algorithm', {'weight': 0.6})
('metaheuristic', 'stochastic programming', {'weight': 0.6})
('metaheuristic', 'hessian matrix', {'weight': 0.6})
('metaheuristic', 'ibm system r', {'weight': 0.6})
('metaheuristic', 'penalty method', {'weight': 0.6})
('metaheuristic', 'prolog', {'weight': 0.6})
('metaheuristic', 'time-invariant system', {'weight': 0.6})
('metaheuristic', 'criss-cross algorithm', {'weight': 0.6})
('metaheuristic', 'revised simplex algorithm', {'weight': 0.6})
('metaheuristic', 'the mathematical association of america', {'weight': 0.6})
('metaheuristic', 'line search', {'weight': 0.6})
('metaheuristic', 'j (programming language)', {'weight': 0.6})
('metaheuristic', 'word wrap', {'weight': 0.6})
('metaheuristic', 'subset sum problem', {'weight': 0.6})
('metaheuristic', 'integer programming', {'weight': 0.6})
('metaheuristic', 'nucleosome', {'weight': 0.6})
('metaheuristic', 'earley algorithm', {'weight': 0.6})
('metaheuristic', 'referential transparency (computer science)', {'weight': 0.6})
('metaheuristic', 'recursion', {'weight': 0.6})
('metaheuristic', 'mathematica', {'weight': 0.6})
('metaheuristic', 'quicksort', {'weight': 0.6})
('metaheuristic', 'recursion (computer science)', {'weight': 0.6})
('metaheuristic', 'checkerboard', {'weight': 0.6})
('metaheuristic', 'computer science', {'weight': 0.6})
('metaheuristic', 'brute-force search', {'weight': 0.6})
('metaheuristic', 'mathematics', {'weight': 0.6})
('metaheuristic', 'depth-first search', {'weight': 0.6})
('metaheuristic', 'top-down and bottom-up design', {'weight': 0.6})
('metaheuristic', 'correspondence problem', {'weight': 0.6})
('metaheuristic', 'transcription factor', {'weight': 0.6})
('metaheuristic', 'tree decomposition', {'weight': 0.6})
('metaheuristic', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('metaheuristic', 'structural alignment', {'weight': 0.6})
('metaheuristic', 'local convergence', {'weight': 0.6})
('metaheuristic', 'knapsack problem', {'weight': 0.6})
('metaheuristic', 'graph algorithm', {'weight': 0.6})
('metaheuristic', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('metaheuristic', 'hyper-heuristics', {'weight': 0.7})
('metaheuristic', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('metaheuristic', 'hidden markov model', {'weight': 0.6})
('metaheuristic', 'string (computer science)', {'weight': 0.6})
('metaheuristic', 'bioinformatics', {'weight': 0.6})
('metaheuristic', 'genetics', {'weight': 0.6})
('metaheuristic', 'mathematical optimization', {'weight': 0.6})
('metaheuristic', 'local search (optimization)', {'weight': 0.6})
('metaheuristic', 'artificial neural networks', {'weight': 0.6})
('metaheuristic', 'introduction to algorithms', {'weight': 0.6})
('metaheuristic', 'thomas h. cormen', {'weight': 0.6})
('metaheuristic', 'music information retrieval', {'weight': 0.6})
('metaheuristic', 'beat (music)', {'weight': 0.6})
('metaheuristic', 'longest common subsequence problem', {'weight': 0.6})
('metaheuristic', 'convex minimization', {'weight': 0.6})
('metaheuristic', 'successive parabolic interpolation', {'weight': 0.6})
('metaheuristic', 'fibonacci sequence', {'weight': 0.6})
('metaheuristic', 'maximum subarray problem', {'weight': 0.6})
('metaheuristic', 'convex optimization', {'weight': 0.6})
('metaheuristic', 'memoization', {'weight': 0.6})
('metaheuristic', 'richard bellman', {'weight': 0.6})
('metaheuristic', 'exponential growth', {'weight': 0.6})
('metaheuristic', 'charles e. leiserson', {'weight': 0.6})
('metaheuristic', 'charles erwin wilson', {'weight': 0.6})
('metaheuristic', 'interval scheduling', {'weight': 0.6})
('metaheuristic', 'chart parser', {'weight': 0.6})
('metaheuristic', 'travelling salesman problem', {'weight': 0.6})
('metaheuristic', 'bellman equation', {'weight': 0.6})
('metaheuristic', 'metaheuristics', {'weight': 0.5})
('hidden markov model', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('hidden markov model', 'photoshop', {'weight': 0.6})
('hidden markov model', 'sequence alignment', {'weight': 0.6})
('hidden markov model', 'flow network', {'weight': 0.6})
('hidden markov model', 'baum\xe2\x80\x93welch algorithm', {'weight': 0.7})
('hidden markov model', 'sequential dynamical system', {'weight': 0.7})
('hidden markov model', 'ellipsoid method', {'weight': 0.6})
('hidden markov model', 'chain matrix multiplication', {'weight': 0.6})
('hidden markov model', 'ieee', {'weight': 0.6})
('hidden markov model', 'backtracking', {'weight': 0.6})
('hidden markov model', 'nonlinear conjugate gradient method', {'weight': 0.6})
('hidden markov model', 'dynamic problem', {'weight': 0.6})
('hidden markov model', 'trust region', {'weight': 0.6})
('hidden markov model', 'function (mathematics)', {'weight': 0.6})
('hidden markov model', 'minimum spanning tree', {'weight': 0.6})
('hidden markov model', 'context-free grammar', {'weight': 0.6})
('hidden markov model', 'branch and cut', {'weight': 0.6})
('hidden markov model', 'state variable', {'weight': 0.6})
('hidden markov model', 'hhpred / hhsearch', {'weight': 0.7})
('hidden markov model', 'treewidth', {'weight': 0.6})
('hidden markov model', 'overlapping subproblem', {'weight': 0.6})
('hidden markov model', 'taylor & francis', {'weight': 0.6})
('hidden markov model', 'bayesian inference', {'weight': 0.7})
('hidden markov model', 'hidden semi-markov model', {'weight': 0.7})
('hidden markov model', 'cutting-plane method', {'weight': 0.6})
('hidden markov model', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('hidden markov model', 'method of undetermined coefficients', {'weight': 0.6})
('hidden markov model', 'combinatorial optimization', {'weight': 0.6})
('hidden markov model', "newton's method in optimization", {'weight': 0.6})
('hidden markov model', 'matrix chain multiplication', {'weight': 0.6})
('hidden markov model', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('hidden markov model', 'dynamic time warping', {'weight': 0.6})
('hidden markov model', 'dynamic programming language', {'weight': 0.6})
('hidden markov model', 'call-by-need', {'weight': 0.6})
('hidden markov model', 'big-o notation', {'weight': 0.6})
('hidden markov model', 'comparison of optimization software', {'weight': 0.6})
('hidden markov model', 'quadratic programming', {'weight': 0.6})
('hidden markov model', 'common lisp', {'weight': 0.6})
('hidden markov model', 'barrier function', {'weight': 0.6})
('hidden markov model', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('hidden markov model', 'gradient descent', {'weight': 0.6})
('hidden markov model', 'patricia selinger', {'weight': 0.6})
('hidden markov model', 'discounting', {'weight': 0.6})
('hidden markov model', 'ronald l. rivest', {'weight': 0.6})
('hidden markov model', 'iterative method', {'weight': 0.6})
('hidden markov model', 'limited-memory bfgs', {'weight': 0.6})
('hidden markov model', 'variable-order markov model', {'weight': 0.7})
('hidden markov model', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('hidden markov model', 'longest common substring problem', {'weight': 0.6})
('hidden markov model', 'clifford stein', {'weight': 0.6})
('hidden markov model', 'computer chess', {'weight': 0.6})
('hidden markov model', 'linear programming', {'weight': 0.6})
('hidden markov model', 'bitonic tour', {'weight': 0.6})
('hidden markov model', 'linear search problem', {'weight': 0.6})
('hidden markov model', 'hmmer', {'weight': 0.7})
('hidden markov model', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('hidden markov model', 'systems analysis', {'weight': 0.6})
('hidden markov model', 'capital (economics)', {'weight': 0.6})
('hidden markov model', 'levenshtein distance', {'weight': 0.6})
('hidden markov model', 'nonlinear programming', {'weight': 0.6})
('hidden markov model', 'conditional random field', {'weight': 0.7})
('hidden markov model', 'bayesian programming', {'weight': 0.7})
('hidden markov model', 'computational complexity of mathematical operations', {'weight': 0.6})
('hidden markov model', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('hidden markov model', 'gradient', {'weight': 0.6})
('hidden markov model', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('hidden markov model', "lemke's algorithm", {'weight': 0.6})
('hidden markov model', 'layered hidden markov model', {'weight': 0.7})
('hidden markov model', 'bulletin of the american mathematical society', {'weight': 0.6})
('hidden markov model', 'u.s. english', {'weight': 0.6})
('hidden markov model', 'refutation table', {'weight': 0.6})
('hidden markov model', 'heuristic algorithm', {'weight': 0.6})
('hidden markov model', 'successive linear programming', {'weight': 0.6})
('hidden markov model', 'optimal substructure', {'weight': 0.6})
('hidden markov model', 'programming language', {'weight': 0.6})
('hidden markov model', 'mergesort', {'weight': 0.6})
('hidden markov model', "dijkstra's algorithm", {'weight': 0.6})
('hidden markov model', 'subgradient method', {'weight': 0.6})
('hidden markov model', 'call-by-name', {'weight': 0.6})
('hidden markov model', 'longest increasing subsequence problem', {'weight': 0.6})
('hidden markov model', 'edward prescott', {'weight': 0.6})
('hidden markov model', 'exponential time', {'weight': 0.6})
('hidden markov model', 'estimation theory', {'weight': 0.7})
('hidden markov model', 'principle of optimality', {'weight': 0.6})
('hidden markov model', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('hidden markov model', 'mathematical game', {'weight': 0.6})
('hidden markov model', 'nancy stokey', {'weight': 0.6})
('hidden markov model', 'approximation algorithm', {'weight': 0.6})
('hidden markov model', 'discrete-time', {'weight': 0.6})
('hidden markov model', 'cyk algorithm', {'weight': 0.6})
('hidden markov model', 'markov decision process', {'weight': 0.6})
('hidden markov model', "powell's method", {'weight': 0.6})
('hidden markov model', 'wolfe conditions', {'weight': 0.6})
('hidden markov model', 'convexity in economics', {'weight': 0.6})
('hidden markov model', 'transposition table', {'weight': 0.6})
('hidden markov model', 'economics', {'weight': 0.6})
('hidden markov model', 'backward induction', {'weight': 0.6})
('hidden markov model', 'time series', {'weight': 0.7})
('hidden markov model', 'golden section search', {'weight': 0.6})
('hidden markov model', 'edit distance', {'weight': 0.6})
('hidden markov model', 'tree structure', {'weight': 0.6})
('hidden markov model', 'exchange algorithm', {'weight': 0.6})
('hidden markov model', 'dover publications', {'weight': 0.6})
('hidden markov model', 'seam carving', {'weight': 0.6})
('hidden markov model', 'recursive least squares', {'weight': 0.6})
('hidden markov model', 'metaheuristic', {'weight': 0.6})
('hidden markov model', 'quasi-newton method', {'weight': 0.6})
('hidden markov model', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('hidden markov model', 'robert e. lucas', {'weight': 0.6})
('hidden markov model', 'non-convexity (economics)', {'weight': 0.6})
('hidden markov model', 'sr1 formula', {'weight': 0.6})
('hidden markov model', 'mathematical reviews', {'weight': 0.6})
('hidden markov model', 'puzzle', {'weight': 0.6})
('hidden markov model', 'associative array', {'weight': 0.6})
('hidden markov model', 'shortest path problem', {'weight': 0.6})
('hidden markov model', 'dynamic algorithm', {'weight': 0.6})
('hidden markov model', 'augmented lagrangian method', {'weight': 0.6})
('hidden markov model', 'charles delisi', {'weight': 0.6})
('hidden markov model', 'greedy algorithm', {'weight': 0.6})
('hidden markov model', "karmarkar's algorithm", {'weight': 0.6})
('hidden markov model', 'lattice models', {'weight': 0.6})
('hidden markov model', 'utility', {'weight': 0.6})
('hidden markov model', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('hidden markov model', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('hidden markov model', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('hidden markov model', 'international standard book number', {'weight': 0.6})
('hidden markov model', 'undirected graph', {'weight': 0.6})
('hidden markov model', 'scheme (programming language)', {'weight': 0.6})
('hidden markov model', 'rna structure', {'weight': 0.6})
('hidden markov model', 'hanoi', {'weight': 0.6})
('hidden markov model', 'perl', {'weight': 0.6})
('hidden markov model', 'digital object identifier', {'weight': 0.6})
('hidden markov model', 'sequential quadratic programming', {'weight': 0.6})
('hidden markov model', "dinic's algorithm", {'weight': 0.6})
('hidden markov model', 'pseudo-polynomial time', {'weight': 0.6})
('hidden markov model', 'partition problem', {'weight': 0.6})
('hidden markov model', 'stochastic programming', {'weight': 0.6})
('hidden markov model', 'hierarchical hidden markov model', {'weight': 0.7})
('hidden markov model', 'hill climbing', {'weight': 0.6})
('hidden markov model', 'top-down', {'weight': 0.6})
('hidden markov model', 'de boor algorithm', {'weight': 0.6})
('hidden markov model', 'optimization algorithm', {'weight': 0.6})
('hidden markov model', "kruskal's algorithm", {'weight': 0.6})
('hidden markov model', 'jacques philippe marie binet', {'weight': 0.6})
('hidden markov model', 'tabu search', {'weight': 0.6})
('hidden markov model', 'divide and conquer algorithm', {'weight': 0.6})
('hidden markov model', 'stochastic context-free grammar', {'weight': 0.7})
('hidden markov model', "johnson's algorithm", {'weight': 0.6})
('hidden markov model', 'evolutionary algorithm', {'weight': 0.6})
('hidden markov model', 'clique-width', {'weight': 0.6})
('hidden markov model', 'hidden bernoulli model', {'weight': 0.7})
('hidden markov model', 'dynamic programming', {'weight': 0.6})
('hidden markov model', 'subroutine', {'weight': 0.6})
('hidden markov model', 'simulated annealing', {'weight': 0.6})
('hidden markov model', 'tower of hanoi', {'weight': 0.6})
('hidden markov model', 'branch and bound', {'weight': 0.6})
('hidden markov model', 'engineering', {'weight': 0.6})
('hidden markov model', 'matroid', {'weight': 0.6})
('hidden markov model', 'viterbi algorithm', {'weight': 0.7})
('hidden markov model', 'hidden markov models', {'weight': 0.5})
('hidden markov model', 'simplex algorithm', {'weight': 0.6})
('hidden markov model', 'local search (optimization)', {'weight': 0.6})
('hidden markov model', 'hessian matrix', {'weight': 0.6})
('hidden markov model', 'ibm system r', {'weight': 0.6})
('hidden markov model', 'penalty method', {'weight': 0.6})
('hidden markov model', 'prolog', {'weight': 0.6})
('hidden markov model', 'time-invariant system', {'weight': 0.6})
('hidden markov model', 'criss-cross algorithm', {'weight': 0.6})
('hidden markov model', 'revised simplex algorithm', {'weight': 0.6})
('hidden markov model', 'the mathematical association of america', {'weight': 0.6})
('hidden markov model', 'line search', {'weight': 0.6})
('hidden markov model', 'j (programming language)', {'weight': 0.6})
('hidden markov model', 'word wrap', {'weight': 0.6})
('hidden markov model', 'subset sum problem', {'weight': 0.6})
('hidden markov model', 'integer programming', {'weight': 0.6})
('hidden markov model', 'nucleosome', {'weight': 0.6})
('hidden markov model', 'earley algorithm', {'weight': 0.6})
('hidden markov model', 'referential transparency (computer science)', {'weight': 0.6})
('hidden markov model', 'poisson hidden markov model', {'weight': 0.7})
('hidden markov model', 'recursion', {'weight': 0.6})
('hidden markov model', 'mathematica', {'weight': 0.6})
('hidden markov model', 'quicksort', {'weight': 0.6})
('hidden markov model', 'recursion (computer science)', {'weight': 0.6})
('hidden markov model', 'checkerboard', {'weight': 0.6})
('hidden markov model', 'computer science', {'weight': 0.6})
('hidden markov model', 'brute-force search', {'weight': 0.6})
('hidden markov model', 'mathematics', {'weight': 0.6})
('hidden markov model', 'depth-first search', {'weight': 0.6})
('hidden markov model', 'top-down and bottom-up design', {'weight': 0.6})
('hidden markov model', 'correspondence problem', {'weight': 0.6})
('hidden markov model', 'transcription factor', {'weight': 0.6})
('hidden markov model', 'tree decomposition', {'weight': 0.6})
('hidden markov model', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('hidden markov model', 'structural alignment', {'weight': 0.6})
('hidden markov model', 'local convergence', {'weight': 0.6})
('hidden markov model', 'knapsack problem', {'weight': 0.6})
('hidden markov model', 'graph algorithm', {'weight': 0.6})
('hidden markov model', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('hidden markov model', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('hidden markov model', 'hidden markov model', {'weight': 1})
('hidden markov model', 'string (computer science)', {'weight': 0.6})
('hidden markov model', 'bioinformatics', {'weight': 0.6})
('hidden markov model', 'genetics', {'weight': 0.6})
('hidden markov model', 'mathematical optimization', {'weight': 0.6})
('hidden markov model', 'artificial neural networks', {'weight': 0.6})
('hidden markov model', 'introduction to algorithms', {'weight': 0.6})
('hidden markov model', 'thomas h. cormen', {'weight': 0.6})
('hidden markov model', 'music information retrieval', {'weight': 0.6})
('hidden markov model', 'beat (music)', {'weight': 0.6})
('hidden markov model', 'longest common subsequence problem', {'weight': 0.6})
('hidden markov model', 'convex minimization', {'weight': 0.6})
('hidden markov model', 'markov models', {'weight': 0.5})
('hidden markov model', 'successive parabolic interpolation', {'weight': 0.6})
('hidden markov model', 'fibonacci sequence', {'weight': 0.6})
('hidden markov model', 'maximum subarray problem', {'weight': 0.6})
('hidden markov model', 'convex optimization', {'weight': 0.6})
('hidden markov model', 'memoization', {'weight': 0.6})
('hidden markov model', 'andrey markov', {'weight': 0.7})
('hidden markov model', 'richard bellman', {'weight': 0.6})
('hidden markov model', 'exponential growth', {'weight': 0.6})
('hidden markov model', 'charles e. leiserson', {'weight': 0.6})
('hidden markov model', 'charles erwin wilson', {'weight': 0.6})
('hidden markov model', 'interval scheduling', {'weight': 0.6})
('hidden markov model', 'chart parser', {'weight': 0.6})
('hidden markov model', 'travelling salesman problem', {'weight': 0.6})
('hidden markov model', 'bellman equation', {'weight': 0.6})
('artificial neural networks', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('artificial neural networks', 'photoshop', {'weight': 0.6})
('artificial neural networks', 'sequence alignment', {'weight': 0.6})
('artificial neural networks', 'flow network', {'weight': 0.6})
('artificial neural networks', 'time delay neural network', {'weight': 0.7})
('artificial neural networks', 'computational statistics', {'weight': 0.5})
('artificial neural networks', 'convolutional neural network', {'weight': 0.7})
('artificial neural networks', 'neuroevolution', {'weight': 0.7})
('artificial neural networks', 'habituation', {'weight': 0.7})
('artificial neural networks', 'charles erwin wilson', {'weight': 0.6})
('artificial neural networks', 'ellipsoid method', {'weight': 0.6})
('artificial neural networks', 'chain matrix multiplication', {'weight': 0.6})
('artificial neural networks', 'ieee', {'weight': 0.6})
('artificial neural networks', 'backtracking', {'weight': 0.6})
('artificial neural networks', 'nonlinear conjugate gradient method', {'weight': 0.6})
('artificial neural networks', 'dynamic problem', {'weight': 0.6})
('artificial neural networks', 'nonlinear system identification', {'weight': 0.7})
('artificial neural networks', 'trust region', {'weight': 0.6})
('artificial neural networks', 'function (mathematics)', {'weight': 0.6})
('artificial neural networks', 'in situ adaptive tabulation', {'weight': 0.7})
('artificial neural networks', 'minimum spanning tree', {'weight': 0.6})
('artificial neural networks', 'connectionist expert system', {'weight': 0.7})
('artificial neural networks', 'context-free grammar', {'weight': 0.6})
('artificial neural networks', 'tensor product network', {'weight': 0.7})
('artificial neural networks', 'connectomics', {'weight': 0.7})
('artificial neural networks', 'branch and cut', {'weight': 0.6})
('artificial neural networks', 'state variable', {'weight': 0.6})
('artificial neural networks', 'treewidth', {'weight': 0.6})
('artificial neural networks', 'overlapping subproblem', {'weight': 0.6})
('artificial neural networks', 'taylor & francis', {'weight': 0.6})
('artificial neural networks', 'cutting-plane method', {'weight': 0.6})
('artificial neural networks', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('artificial neural networks', 'method of undetermined coefficients', {'weight': 0.6})
('artificial neural networks', 'combinatorial optimization', {'weight': 0.6})
('artificial neural networks', "newton's method in optimization", {'weight': 0.6})
('artificial neural networks', 'biologically inspired computing', {'weight': 0.7})
('artificial neural networks', 'encog', {'weight': 0.7})
('artificial neural networks', 'matrix chain multiplication', {'weight': 0.6})
('artificial neural networks', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('artificial neural networks', 'dynamic time warping', {'weight': 0.6})
('artificial neural networks', 'dynamic programming language', {'weight': 0.6})
('artificial neural networks', 'call-by-need', {'weight': 0.6})
('artificial neural networks', 'big-o notation', {'weight': 0.6})
('artificial neural networks', 'comparison of optimization software', {'weight': 0.6})
('artificial neural networks', 'quadratic programming', {'weight': 0.6})
('artificial neural networks', 'common lisp', {'weight': 0.6})
('artificial neural networks', 'barrier function', {'weight': 0.6})
('artificial neural networks', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('artificial neural networks', 'gradient descent', {'weight': 0.6})
('artificial neural networks', 'patricia selinger', {'weight': 0.6})
('artificial neural networks', 'discounting', {'weight': 0.6})
('artificial neural networks', 'artificial life', {'weight': 0.7})
('artificial neural networks', 'ronald l. rivest', {'weight': 0.6})
('artificial neural networks', 'iterative method', {'weight': 0.6})
('artificial neural networks', 'limited-memory bfgs', {'weight': 0.6})
('artificial neural networks', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('artificial neural networks', 'classification algorithms', {'weight': 0.5})
('artificial neural networks', 'longest common substring problem', {'weight': 0.6})
('artificial neural networks', 'clifford stein', {'weight': 0.6})
('artificial neural networks', 'computer chess', {'weight': 0.6})
('artificial neural networks', 'linear programming', {'weight': 0.6})
('artificial neural networks', 'bitonic tour', {'weight': 0.6})
('artificial neural networks', 'linear search problem', {'weight': 0.6})
('artificial neural networks', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('artificial neural networks', 'systems analysis', {'weight': 0.6})
('artificial neural networks', 'capital (economics)', {'weight': 0.6})
('artificial neural networks', 'systolic array', {'weight': 0.7})
('artificial neural networks', 'fuzzy logic', {'weight': 0.7})
('artificial neural networks', 'levenshtein distance', {'weight': 0.6})
('artificial neural networks', 'nonlinear programming', {'weight': 0.6})
('artificial neural networks', 'computational complexity of mathematical operations', {'weight': 0.6})
('artificial neural networks', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('artificial neural networks', 'gradient', {'weight': 0.6})
('artificial neural networks', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('artificial neural networks', 'genetic algorithm', {'weight': 0.7})
('artificial neural networks', 'cultured neuronal networks', {'weight': 0.7})
('artificial neural networks', 'bulletin of the american mathematical society', {'weight': 0.6})
('artificial neural networks', 'models of neural computation', {'weight': 0.7})
('artificial neural networks', 'u.s. english', {'weight': 0.6})
('artificial neural networks', 'refutation table', {'weight': 0.6})
('artificial neural networks', 'neural gas', {'weight': 0.7})
('artificial neural networks', 'heuristic algorithm', {'weight': 0.6})
('artificial neural networks', 'successive linear programming', {'weight': 0.6})
('artificial neural networks', 'optimal substructure', {'weight': 0.6})
('artificial neural networks', 'neuroscience', {'weight': 0.7})
('artificial neural networks', 'ni1000', {'weight': 0.7})
('artificial neural networks', 'programming language', {'weight': 0.6})
('artificial neural networks', 'associative memory', {'weight': 0.7})
('artificial neural networks', 'mergesort', {'weight': 0.6})
('artificial neural networks', "dijkstra's algorithm", {'weight': 0.6})
('artificial neural networks', 'subgradient method', {'weight': 0.6})
('artificial neural networks', 'mathematical psychology', {'weight': 0.5})
('artificial neural networks', 'call-by-name', {'weight': 0.6})
('artificial neural networks', 'deep learning', {'weight': 0.7})
('artificial neural networks', 'longest increasing subsequence problem', {'weight': 0.6})
('artificial neural networks', 'edward prescott', {'weight': 0.6})
('artificial neural networks', 'exponential time', {'weight': 0.6})
('artificial neural networks', 'principle of optimality', {'weight': 0.6})
('artificial neural networks', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('artificial neural networks', 'mathematical game', {'weight': 0.6})
('artificial neural networks', 'nancy stokey', {'weight': 0.6})
('artificial neural networks', 'approximation algorithm', {'weight': 0.6})
('artificial neural networks', 'discrete-time', {'weight': 0.6})
('artificial neural networks', 'cyk algorithm', {'weight': 0.6})
('artificial neural networks', 'markov decision process', {'weight': 0.6})
('artificial neural networks', "powell's method", {'weight': 0.6})
('artificial neural networks', 'wolfe conditions', {'weight': 0.6})
('artificial neural networks', 'convexity in economics', {'weight': 0.6})
('artificial neural networks', 'neural network software', {'weight': 0.7})
('artificial neural networks', 'transposition table', {'weight': 0.6})
('artificial neural networks', 'computational neuroscience', {'weight': 0.5})
('artificial neural networks', 'economics', {'weight': 0.6})
('artificial neural networks', 'backward induction', {'weight': 0.6})
('artificial neural networks', 'golden section search', {'weight': 0.6})
('artificial neural networks', 'edit distance', {'weight': 0.6})
('artificial neural networks', 'tree structure', {'weight': 0.6})
('artificial neural networks', 'exchange algorithm', {'weight': 0.6})
('artificial neural networks', 'dover publications', {'weight': 0.6})
('artificial neural networks', 'seam carving', {'weight': 0.6})
('artificial neural networks', 'recursive least squares', {'weight': 0.6})
('artificial neural networks', 'metaheuristic', {'weight': 0.6})
('artificial neural networks', 'quasi-newton method', {'weight': 0.6})
('artificial neural networks', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('artificial neural networks', 'robert e. lucas', {'weight': 0.6})
('artificial neural networks', 'non-convexity (economics)', {'weight': 0.6})
('artificial neural networks', 'optical neural network', {'weight': 0.7})
('artificial neural networks', 'autoencoder', {'weight': 0.7})
('artificial neural networks', 'sr1 formula', {'weight': 0.6})
('artificial neural networks', 'mathematical reviews', {'weight': 0.6})
('artificial neural networks', 'puzzle', {'weight': 0.6})
('artificial neural networks', 'associative array', {'weight': 0.6})
('artificial neural networks', 'shortest path problem', {'weight': 0.6})
('artificial neural networks', 'spiking neural network', {'weight': 0.7})
('artificial neural networks', 'dynamic algorithm', {'weight': 0.6})
('artificial neural networks', 'augmented lagrangian method', {'weight': 0.6})
('artificial neural networks', 'charles delisi', {'weight': 0.6})
('artificial neural networks', 'greedy algorithm', {'weight': 0.6})
('artificial neural networks', "karmarkar's algorithm", {'weight': 0.6})
('artificial neural networks', 'multilinear subspace learning', {'weight': 0.7})
('artificial neural networks', 'lattice models', {'weight': 0.6})
('artificial neural networks', 'utility', {'weight': 0.6})
('artificial neural networks', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('artificial neural networks', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('artificial neural networks', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('artificial neural networks', 'international standard book number', {'weight': 0.6})
('artificial neural networks', 'undirected graph', {'weight': 0.6})
('artificial neural networks', 'scheme (programming language)', {'weight': 0.6})
('artificial neural networks', 'rna structure', {'weight': 0.6})
('artificial neural networks', 'hanoi', {'weight': 0.6})
('artificial neural networks', 'perl', {'weight': 0.6})
('artificial neural networks', 'digital object identifier', {'weight': 0.6})
('artificial neural networks', 'sequential quadratic programming', {'weight': 0.6})
('artificial neural networks', 'beam robotics', {'weight': 0.7})
('artificial neural networks', "dinic's algorithm", {'weight': 0.6})
('artificial neural networks', 'pseudo-polynomial time', {'weight': 0.6})
('artificial neural networks', 'partition problem', {'weight': 0.6})
('artificial neural networks', 'stochastic programming', {'weight': 0.6})
('artificial neural networks', 'self-organizing map', {'weight': 0.7})
('artificial neural networks', 'hill climbing', {'weight': 0.6})
('artificial neural networks', 'digital morphogenesis', {'weight': 0.7})
('artificial neural networks', 'top-down', {'weight': 0.6})
('artificial neural networks', 'de boor algorithm', {'weight': 0.6})
('artificial neural networks', 'optimization algorithm', {'weight': 0.6})
('artificial neural networks', "kruskal's algorithm", {'weight': 0.6})
('artificial neural networks', 'jacques philippe marie binet', {'weight': 0.6})
('artificial neural networks', 'neural coding', {'weight': 0.7})
('artificial neural networks', 'tabu search', {'weight': 0.6})
('artificial neural networks', 'divide and conquer algorithm', {'weight': 0.6})
('artificial neural networks', 'blue brain', {'weight': 0.7})
('artificial neural networks', "johnson's algorithm", {'weight': 0.6})
('artificial neural networks', 'parallel distributed processing', {'weight': 0.7})
('artificial neural networks', 'evolutionary algorithm', {'weight': 0.6})
('artificial neural networks', 'clique-width', {'weight': 0.6})
('artificial neural networks', 'dynamic programming', {'weight': 0.6})
('artificial neural networks', 'subroutine', {'weight': 0.6})
('artificial neural networks', 'simulated annealing', {'weight': 0.6})
('artificial neural networks', 'tower of hanoi', {'weight': 0.6})
('artificial neural networks', 'adaline', {'weight': 0.7})
('artificial neural networks', 'branch and bound', {'weight': 0.6})
('artificial neural networks', 'engineering', {'weight': 0.6})
('artificial neural networks', 'matroid', {'weight': 0.6})
('artificial neural networks', 'viterbi algorithm', {'weight': 0.6})
('artificial neural networks', "lemke's algorithm", {'weight': 0.6})
('artificial neural networks', 'simplex algorithm', {'weight': 0.6})
('artificial neural networks', 'local search (optimization)', {'weight': 0.6})
('artificial neural networks', 'hessian matrix', {'weight': 0.6})
('artificial neural networks', 'cognitive architecture', {'weight': 0.7})
('artificial neural networks', 'ibm system r', {'weight': 0.6})
('artificial neural networks', 'penalty method', {'weight': 0.6})
('artificial neural networks', 'prolog', {'weight': 0.6})
('artificial neural networks', '20q', {'weight': 0.7})
('artificial neural networks', 'time-invariant system', {'weight': 0.6})
('artificial neural networks', 'criss-cross algorithm', {'weight': 0.6})
('artificial neural networks', 'revised simplex algorithm', {'weight': 0.6})
('artificial neural networks', 'biological cybernetics', {'weight': 0.7})
('artificial neural networks', 'the mathematical association of america', {'weight': 0.6})
('artificial neural networks', 'line search', {'weight': 0.6})
('artificial neural networks', 'j (programming language)', {'weight': 0.6})
('artificial neural networks', 'cognitive science', {'weight': 0.7})
('artificial neural networks', 'word wrap', {'weight': 0.6})
('artificial neural networks', 'subset sum problem', {'weight': 0.6})
('artificial neural networks', 'integer programming', {'weight': 0.6})
('artificial neural networks', 'nucleosome', {'weight': 0.6})
('artificial neural networks', 'earley algorithm', {'weight': 0.6})
('artificial neural networks', 'referential transparency (computer science)', {'weight': 0.6})
('artificial neural networks', 'recursion', {'weight': 0.6})
('artificial neural networks', 'parallel constraint satisfaction processes', {'weight': 0.7})
('artificial neural networks', 'mathematica', {'weight': 0.6})
('artificial neural networks', 'quicksort', {'weight': 0.6})
('artificial neural networks', 'recursion (computer science)', {'weight': 0.6})
('artificial neural networks', 'gene expression programming', {'weight': 0.7})
('artificial neural networks', 'computer science', {'weight': 0.6})
('artificial neural networks', 'radial basis function network', {'weight': 0.7})
('artificial neural networks', 'brute-force search', {'weight': 0.6})
('artificial neural networks', 'mathematics', {'weight': 0.6})
('artificial neural networks', 'depth-first search', {'weight': 0.6})
('artificial neural networks', 'top-down and bottom-up design', {'weight': 0.6})
('artificial neural networks', 'correspondence problem', {'weight': 0.6})
('artificial neural networks', 'transcription factor', {'weight': 0.6})
('artificial neural networks', 'tree decomposition', {'weight': 0.6})
('artificial neural networks', 'catastrophic interference', {'weight': 0.7})
('artificial neural networks', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('artificial neural networks', 'structural alignment', {'weight': 0.6})
('artificial neural networks', 'local convergence', {'weight': 0.6})
('artificial neural networks', 'group method of data handling', {'weight': 0.7})
('artificial neural networks', 'knapsack problem', {'weight': 0.6})
('artificial neural networks', 'graph algorithm', {'weight': 0.6})
('artificial neural networks', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('artificial neural networks', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('artificial neural networks', 'hidden markov model', {'weight': 0.6})
('artificial neural networks', 'string (computer science)', {'weight': 0.6})
('artificial neural networks', 'bioinformatics', {'weight': 0.6})
('artificial neural networks', 'adaptive resonance theory', {'weight': 0.7})
('artificial neural networks', 'genetics', {'weight': 0.6})
('artificial neural networks', 'mathematical optimization', {'weight': 0.6})
('artificial neural networks', 'cerebellar model articulation controller', {'weight': 0.7})
('artificial neural networks', 'artificial neural networks', {'weight': 1})
('artificial neural networks', 'introduction to algorithms', {'weight': 0.6})
('artificial neural networks', 'thomas h. cormen', {'weight': 0.6})
('artificial neural networks', 'recurrent neural networks', {'weight': 0.7})
('artificial neural networks', 'music information retrieval', {'weight': 0.6})
('artificial neural networks', 'beat (music)', {'weight': 0.6})
('artificial neural networks', 'longest common subsequence problem', {'weight': 0.6})
('artificial neural networks', 'convex minimization', {'weight': 0.6})
('artificial neural networks', 'successive parabolic interpolation', {'weight': 0.6})
('artificial neural networks', 'fibonacci sequence', {'weight': 0.6})
('artificial neural networks', 'maximum subarray problem', {'weight': 0.6})
('artificial neural networks', 'convex optimization', {'weight': 0.6})
('artificial neural networks', 'memoization', {'weight': 0.6})
('artificial neural networks', 'richard bellman', {'weight': 0.6})
('artificial neural networks', 'exponential growth', {'weight': 0.6})
('artificial neural networks', 'charles e. leiserson', {'weight': 0.6})
('artificial neural networks', 'backpropagation', {'weight': 0.7})
('artificial neural networks', 'checkerboard', {'weight': 0.6})
('artificial neural networks', 'interval scheduling', {'weight': 0.6})
('artificial neural networks', 'chart parser', {'weight': 0.6})
('artificial neural networks', 'travelling salesman problem', {'weight': 0.6})
('artificial neural networks', 'bellman equation', {'weight': 0.6})
('thomas h. cormen', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('thomas h. cormen', 'photoshop', {'weight': 0.6})
('thomas h. cormen', 'sequence alignment', {'weight': 0.6})
('thomas h. cormen', 'flow network', {'weight': 0.6})
('thomas h. cormen', 'ellipsoid method', {'weight': 0.6})
('thomas h. cormen', 'chain matrix multiplication', {'weight': 0.6})
('thomas h. cormen', 'ieee', {'weight': 0.6})
('thomas h. cormen', 'backtracking', {'weight': 0.6})
('thomas h. cormen', 'nonlinear conjugate gradient method', {'weight': 0.6})
('thomas h. cormen', 'dynamic problem', {'weight': 0.6})
('thomas h. cormen', 'trust region', {'weight': 0.6})
('thomas h. cormen', 'function (mathematics)', {'weight': 0.6})
('thomas h. cormen', 'minimum spanning tree', {'weight': 0.6})
('thomas h. cormen', 'context-free grammar', {'weight': 0.6})
('thomas h. cormen', 'branch and cut', {'weight': 0.6})
('thomas h. cormen', 'state variable', {'weight': 0.6})
('thomas h. cormen', 'treewidth', {'weight': 0.6})
('thomas h. cormen', 'overlapping subproblem', {'weight': 0.6})
('thomas h. cormen', 'taylor & francis', {'weight': 0.6})
('thomas h. cormen', 'cutting-plane method', {'weight': 0.6})
('thomas h. cormen', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('thomas h. cormen', 'method of undetermined coefficients', {'weight': 0.6})
('thomas h. cormen', 'combinatorial optimization', {'weight': 0.6})
('thomas h. cormen', "newton's method in optimization", {'weight': 0.6})
('thomas h. cormen', 'matrix chain multiplication', {'weight': 0.6})
('thomas h. cormen', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('thomas h. cormen', 'dynamic time warping', {'weight': 0.6})
('thomas h. cormen', 'dynamic programming language', {'weight': 0.6})
('thomas h. cormen', 'call-by-need', {'weight': 0.6})
('thomas h. cormen', 'big-o notation', {'weight': 0.6})
('thomas h. cormen', 'comparison of optimization software', {'weight': 0.6})
('thomas h. cormen', 'quadratic programming', {'weight': 0.6})
('thomas h. cormen', 'common lisp', {'weight': 0.6})
('thomas h. cormen', 'barrier function', {'weight': 0.6})
('thomas h. cormen', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('thomas h. cormen', 'gradient descent', {'weight': 0.6})
('thomas h. cormen', 'patricia selinger', {'weight': 0.6})
('thomas h. cormen', 'discounting', {'weight': 0.6})
('thomas h. cormen', 'ronald l. rivest', {'weight': 0.6})
('thomas h. cormen', 'iterative method', {'weight': 0.6})
('thomas h. cormen', 'limited-memory bfgs', {'weight': 0.6})
('thomas h. cormen', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('thomas h. cormen', 'longest common substring problem', {'weight': 0.6})
('thomas h. cormen', 'clifford stein', {'weight': 0.6})
('thomas h. cormen', 'computer chess', {'weight': 0.6})
('thomas h. cormen', 'linear programming', {'weight': 0.6})
('thomas h. cormen', 'bitonic tour', {'weight': 0.6})
('thomas h. cormen', 'linear search problem', {'weight': 0.6})
('thomas h. cormen', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('thomas h. cormen', 'systems analysis', {'weight': 0.6})
('thomas h. cormen', 'capital (economics)', {'weight': 0.6})
('thomas h. cormen', 'levenshtein distance', {'weight': 0.6})
('thomas h. cormen', 'nonlinear programming', {'weight': 0.6})
('thomas h. cormen', 'computational complexity of mathematical operations', {'weight': 0.6})
('thomas h. cormen', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('thomas h. cormen', 'gradient', {'weight': 0.6})
('thomas h. cormen', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('thomas h. cormen', 'bulletin of the american mathematical society', {'weight': 0.6})
('thomas h. cormen', 'u.s. english', {'weight': 0.6})
('thomas h. cormen', 'refutation table', {'weight': 0.6})
('thomas h. cormen', 'heuristic algorithm', {'weight': 0.6})
('thomas h. cormen', 'successive linear programming', {'weight': 0.6})
('thomas h. cormen', 'optimal substructure', {'weight': 0.6})
('thomas h. cormen', 'programming language', {'weight': 0.6})
('thomas h. cormen', 'mergesort', {'weight': 0.6})
('thomas h. cormen', "dijkstra's algorithm", {'weight': 0.6})
('thomas h. cormen', 'subgradient method', {'weight': 0.6})
('thomas h. cormen', 'call-by-name', {'weight': 0.6})
('thomas h. cormen', 'longest increasing subsequence problem', {'weight': 0.6})
('thomas h. cormen', 'edward prescott', {'weight': 0.6})
('thomas h. cormen', 'exponential time', {'weight': 0.6})
('thomas h. cormen', 'principle of optimality', {'weight': 0.6})
('thomas h. cormen', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('thomas h. cormen', 'mathematical game', {'weight': 0.6})
('thomas h. cormen', 'nancy stokey', {'weight': 0.6})
('thomas h. cormen', 'approximation algorithm', {'weight': 0.6})
('thomas h. cormen', 'discrete-time', {'weight': 0.6})
('thomas h. cormen', 'cyk algorithm', {'weight': 0.6})
('thomas h. cormen', 'markov decision process', {'weight': 0.6})
('thomas h. cormen', "powell's method", {'weight': 0.6})
('thomas h. cormen', 'wolfe conditions', {'weight': 0.6})
('thomas h. cormen', 'convexity in economics', {'weight': 0.6})
('thomas h. cormen', 'transposition table', {'weight': 0.6})
('thomas h. cormen', 'economics', {'weight': 0.6})
('thomas h. cormen', 'backward induction', {'weight': 0.6})
('thomas h. cormen', 'golden section search', {'weight': 0.6})
('thomas h. cormen', 'edit distance', {'weight': 0.6})
('thomas h. cormen', 'tree structure', {'weight': 0.6})
('thomas h. cormen', 'exchange algorithm', {'weight': 0.6})
('thomas h. cormen', 'dover publications', {'weight': 0.6})
('thomas h. cormen', 'seam carving', {'weight': 0.6})
('thomas h. cormen', 'recursive least squares', {'weight': 0.6})
('thomas h. cormen', 'metaheuristic', {'weight': 0.6})
('thomas h. cormen', 'quasi-newton method', {'weight': 0.6})
('thomas h. cormen', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('thomas h. cormen', 'robert e. lucas', {'weight': 0.6})
('thomas h. cormen', 'non-convexity (economics)', {'weight': 0.6})
('thomas h. cormen', 'sr1 formula', {'weight': 0.6})
('thomas h. cormen', 'mathematical reviews', {'weight': 0.6})
('thomas h. cormen', 'puzzle', {'weight': 0.6})
('thomas h. cormen', 'associative array', {'weight': 0.6})
('thomas h. cormen', 'shortest path problem', {'weight': 0.6})
('thomas h. cormen', 'dynamic algorithm', {'weight': 0.6})
('thomas h. cormen', 'augmented lagrangian method', {'weight': 0.6})
('thomas h. cormen', 'charles delisi', {'weight': 0.6})
('thomas h. cormen', 'greedy algorithm', {'weight': 0.6})
('thomas h. cormen', "karmarkar's algorithm", {'weight': 0.6})
('thomas h. cormen', 'lattice models', {'weight': 0.6})
('thomas h. cormen', 'utility', {'weight': 0.6})
('thomas h. cormen', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('thomas h. cormen', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('thomas h. cormen', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('thomas h. cormen', 'international standard book number', {'weight': 0.6})
('thomas h. cormen', 'undirected graph', {'weight': 0.6})
('thomas h. cormen', 'scheme (programming language)', {'weight': 0.6})
('thomas h. cormen', 'rna structure', {'weight': 0.6})
('thomas h. cormen', 'hanoi', {'weight': 0.6})
('thomas h. cormen', 'perl', {'weight': 0.6})
('thomas h. cormen', 'digital object identifier', {'weight': 0.6})
('thomas h. cormen', 'sequential quadratic programming', {'weight': 0.6})
('thomas h. cormen', "dinic's algorithm", {'weight': 0.6})
('thomas h. cormen', 'pseudo-polynomial time', {'weight': 0.6})
('thomas h. cormen', 'partition problem', {'weight': 0.6})
('thomas h. cormen', 'stochastic programming', {'weight': 0.6})
('thomas h. cormen', 'hill climbing', {'weight': 0.6})
('thomas h. cormen', 'top-down', {'weight': 0.6})
('thomas h. cormen', 'de boor algorithm', {'weight': 0.6})
('thomas h. cormen', 'optimization algorithm', {'weight': 0.6})
('thomas h. cormen', "kruskal's algorithm", {'weight': 0.6})
('thomas h. cormen', 'jacques philippe marie binet', {'weight': 0.6})
('thomas h. cormen', 'tabu search', {'weight': 0.6})
('thomas h. cormen', 'divide and conquer algorithm', {'weight': 0.6})
('thomas h. cormen', "johnson's algorithm", {'weight': 0.6})
('thomas h. cormen', 'evolutionary algorithm', {'weight': 0.6})
('thomas h. cormen', 'clique-width', {'weight': 0.6})
('thomas h. cormen', 'dynamic programming', {'weight': 0.6})
('thomas h. cormen', 'subroutine', {'weight': 0.6})
('thomas h. cormen', 'simulated annealing', {'weight': 0.6})
('thomas h. cormen', 'tower of hanoi', {'weight': 0.6})
('thomas h. cormen', 'branch and bound', {'weight': 0.6})
('thomas h. cormen', 'engineering', {'weight': 0.6})
('thomas h. cormen', 'matroid', {'weight': 0.6})
('thomas h. cormen', 'viterbi algorithm', {'weight': 0.6})
('thomas h. cormen', "lemke's algorithm", {'weight': 0.6})
('thomas h. cormen', 'simplex algorithm', {'weight': 0.6})
('thomas h. cormen', 'local search (optimization)', {'weight': 0.6})
('thomas h. cormen', 'hessian matrix', {'weight': 0.6})
('thomas h. cormen', 'ibm system r', {'weight': 0.6})
('thomas h. cormen', 'penalty method', {'weight': 0.6})
('thomas h. cormen', 'prolog', {'weight': 0.6})
('thomas h. cormen', 'time-invariant system', {'weight': 0.6})
('thomas h. cormen', 'criss-cross algorithm', {'weight': 0.6})
('thomas h. cormen', 'revised simplex algorithm', {'weight': 0.6})
('thomas h. cormen', 'the mathematical association of america', {'weight': 0.6})
('thomas h. cormen', 'line search', {'weight': 0.6})
('thomas h. cormen', 'j (programming language)', {'weight': 0.6})
('thomas h. cormen', 'word wrap', {'weight': 0.6})
('thomas h. cormen', 'subset sum problem', {'weight': 0.6})
('thomas h. cormen', 'integer programming', {'weight': 0.6})
('thomas h. cormen', 'nucleosome', {'weight': 0.6})
('thomas h. cormen', 'earley algorithm', {'weight': 0.6})
('thomas h. cormen', 'referential transparency (computer science)', {'weight': 0.6})
('thomas h. cormen', 'recursion', {'weight': 0.6})
('thomas h. cormen', 'mathematica', {'weight': 0.6})
('thomas h. cormen', 'quicksort', {'weight': 0.6})
('thomas h. cormen', 'recursion (computer science)', {'weight': 0.6})
('thomas h. cormen', 'checkerboard', {'weight': 0.6})
('thomas h. cormen', 'computer science', {'weight': 0.6})
('thomas h. cormen', 'brute-force search', {'weight': 0.6})
('thomas h. cormen', 'mathematics', {'weight': 0.6})
('thomas h. cormen', 'depth-first search', {'weight': 0.6})
('thomas h. cormen', 'top-down and bottom-up design', {'weight': 0.6})
('thomas h. cormen', 'correspondence problem', {'weight': 0.6})
('thomas h. cormen', 'transcription factor', {'weight': 0.6})
('thomas h. cormen', 'tree decomposition', {'weight': 0.6})
('thomas h. cormen', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('thomas h. cormen', 'structural alignment', {'weight': 0.6})
('thomas h. cormen', 'local convergence', {'weight': 0.6})
('thomas h. cormen', 'knapsack problem', {'weight': 0.6})
('thomas h. cormen', 'graph algorithm', {'weight': 0.6})
('thomas h. cormen', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('thomas h. cormen', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('thomas h. cormen', 'hidden markov model', {'weight': 0.6})
('thomas h. cormen', 'string (computer science)', {'weight': 0.6})
('thomas h. cormen', 'bioinformatics', {'weight': 0.6})
('thomas h. cormen', 'genetics', {'weight': 0.6})
('thomas h. cormen', 'mathematical optimization', {'weight': 0.6})
('thomas h. cormen', 'artificial neural networks', {'weight': 0.6})
('thomas h. cormen', 'introduction to algorithms', {'weight': 0.6})
('thomas h. cormen', 'thomas h. cormen', {'weight': 1})
('thomas h. cormen', 'music information retrieval', {'weight': 0.6})
('thomas h. cormen', 'beat (music)', {'weight': 0.6})
('thomas h. cormen', 'longest common subsequence problem', {'weight': 0.6})
('thomas h. cormen', 'convex minimization', {'weight': 0.6})
('thomas h. cormen', 'successive parabolic interpolation', {'weight': 0.6})
('thomas h. cormen', 'fibonacci sequence', {'weight': 0.6})
('thomas h. cormen', 'maximum subarray problem', {'weight': 0.6})
('thomas h. cormen', 'convex optimization', {'weight': 0.6})
('thomas h. cormen', 'memoization', {'weight': 0.6})
('thomas h. cormen', 'richard bellman', {'weight': 0.6})
('thomas h. cormen', 'exponential growth', {'weight': 0.6})
('thomas h. cormen', 'charles e. leiserson', {'weight': 0.6})
('thomas h. cormen', 'charles erwin wilson', {'weight': 0.6})
('thomas h. cormen', 'interval scheduling', {'weight': 0.6})
('thomas h. cormen', 'chart parser', {'weight': 0.6})
('thomas h. cormen', 'travelling salesman problem', {'weight': 0.6})
('thomas h. cormen', 'bellman equation', {'weight': 0.6})
('earley algorithm', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('earley algorithm', 'photoshop', {'weight': 0.6})
('earley algorithm', 'sequence alignment', {'weight': 0.6})
('earley algorithm', 'flow network', {'weight': 0.6})
('earley algorithm', 'ellipsoid method', {'weight': 0.6})
('earley algorithm', 'chain matrix multiplication', {'weight': 0.6})
('earley algorithm', 'ieee', {'weight': 0.6})
('earley algorithm', 'backtracking', {'weight': 0.6})
('earley algorithm', 'nonlinear conjugate gradient method', {'weight': 0.6})
('earley algorithm', 'dynamic problem', {'weight': 0.6})
('earley algorithm', 'trust region', {'weight': 0.6})
('earley algorithm', 'function (mathematics)', {'weight': 0.6})
('earley algorithm', 'minimum spanning tree', {'weight': 0.6})
('earley algorithm', 'context-free grammar', {'weight': 0.7})
('earley algorithm', 'branch and cut', {'weight': 0.6})
('earley algorithm', 'state variable', {'weight': 0.6})
('earley algorithm', 'treewidth', {'weight': 0.6})
('earley algorithm', 'overlapping subproblem', {'weight': 0.6})
('earley algorithm', 'taylor & francis', {'weight': 0.6})
('earley algorithm', 'cutting-plane method', {'weight': 0.6})
('earley algorithm', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('earley algorithm', 'method of undetermined coefficients', {'weight': 0.6})
('earley algorithm', 'combinatorial optimization', {'weight': 0.6})
('earley algorithm', "newton's method in optimization", {'weight': 0.6})
('earley algorithm', 'matrix chain multiplication', {'weight': 0.6})
('earley algorithm', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('earley algorithm', 'dynamic time warping', {'weight': 0.6})
('earley algorithm', 'dynamic programming language', {'weight': 0.6})
('earley algorithm', 'call-by-need', {'weight': 0.6})
('earley algorithm', 'big-o notation', {'weight': 0.6})
('earley algorithm', 'comparison of optimization software', {'weight': 0.6})
('earley algorithm', 'quadratic programming', {'weight': 0.6})
('earley algorithm', 'common lisp', {'weight': 0.6})
('earley algorithm', 'barrier function', {'weight': 0.6})
('earley algorithm', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('earley algorithm', 'gradient descent', {'weight': 0.6})
('earley algorithm', 'patricia selinger', {'weight': 0.6})
('earley algorithm', 'discounting', {'weight': 0.6})
('earley algorithm', 'ronald l. rivest', {'weight': 0.6})
('earley algorithm', 'iterative method', {'weight': 0.6})
('earley algorithm', 'limited-memory bfgs', {'weight': 0.6})
('earley algorithm', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('earley algorithm', 'longest common substring problem', {'weight': 0.6})
('earley algorithm', 'clifford stein', {'weight': 0.6})
('earley algorithm', 'computer chess', {'weight': 0.6})
('earley algorithm', 'linear programming', {'weight': 0.6})
('earley algorithm', 'bitonic tour', {'weight': 0.6})
('earley algorithm', 'linear search problem', {'weight': 0.6})
('earley algorithm', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('earley algorithm', 'systems analysis', {'weight': 0.6})
('earley algorithm', 'capital (economics)', {'weight': 0.6})
('earley algorithm', 'levenshtein distance', {'weight': 0.6})
('earley algorithm', 'nonlinear programming', {'weight': 0.6})
('earley algorithm', 'computational complexity of mathematical operations', {'weight': 0.6})
('earley algorithm', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('earley algorithm', 'gradient', {'weight': 0.6})
('earley algorithm', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('earley algorithm', 'bulletin of the american mathematical society', {'weight': 0.6})
('earley algorithm', 'u.s. english', {'weight': 0.6})
('earley algorithm', 'refutation table', {'weight': 0.6})
('earley algorithm', 'parsing algorithms', {'weight': 0.7})
('earley algorithm', 'successive linear programming', {'weight': 0.6})
('earley algorithm', 'optimal substructure', {'weight': 0.6})
('earley algorithm', 'programming language', {'weight': 0.6})
('earley algorithm', 'mergesort', {'weight': 0.6})
('earley algorithm', "dijkstra's algorithm", {'weight': 0.6})
('earley algorithm', 'subgradient method', {'weight': 0.6})
('earley algorithm', 'call-by-name', {'weight': 0.6})
('earley algorithm', 'longest increasing subsequence problem', {'weight': 0.6})
('earley algorithm', 'edward prescott', {'weight': 0.6})
('earley algorithm', 'exponential time', {'weight': 0.6})
('earley algorithm', 'principle of optimality', {'weight': 0.6})
('earley algorithm', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('earley algorithm', 'mathematical game', {'weight': 0.6})
('earley algorithm', 'nancy stokey', {'weight': 0.6})
('earley algorithm', 'approximation algorithm', {'weight': 0.6})
('earley algorithm', 'discrete-time', {'weight': 0.6})
('earley algorithm', 'cyk algorithm', {'weight': 0.7})
('earley algorithm', 'markov decision process', {'weight': 0.6})
('earley algorithm', "powell's method", {'weight': 0.6})
('earley algorithm', 'wolfe conditions', {'weight': 0.6})
('earley algorithm', 'convexity in economics', {'weight': 0.6})
('earley algorithm', 'transposition table', {'weight': 0.6})
('earley algorithm', 'economics', {'weight': 0.6})
('earley algorithm', 'backward induction', {'weight': 0.6})
('earley algorithm', 'golden section search', {'weight': 0.6})
('earley algorithm', 'edit distance', {'weight': 0.6})
('earley algorithm', 'tree structure', {'weight': 0.6})
('earley algorithm', 'exchange algorithm', {'weight': 0.6})
('earley algorithm', 'dover publications', {'weight': 0.6})
('earley algorithm', 'seam carving', {'weight': 0.6})
('earley algorithm', 'recursive least squares', {'weight': 0.6})
('earley algorithm', 'metaheuristic', {'weight': 0.6})
('earley algorithm', 'quasi-newton method', {'weight': 0.6})
('earley algorithm', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('earley algorithm', 'robert e. lucas', {'weight': 0.6})
('earley algorithm', 'non-convexity (economics)', {'weight': 0.6})
('earley algorithm', 'sr1 formula', {'weight': 0.6})
('earley algorithm', 'mathematical reviews', {'weight': 0.6})
('earley algorithm', 'puzzle', {'weight': 0.6})
('earley algorithm', 'associative array', {'weight': 0.6})
('earley algorithm', 'shortest path problem', {'weight': 0.6})
('earley algorithm', 'dynamic algorithm', {'weight': 0.6})
('earley algorithm', 'augmented lagrangian method', {'weight': 0.6})
('earley algorithm', 'charles delisi', {'weight': 0.6})
('earley algorithm', 'greedy algorithm', {'weight': 0.6})
('earley algorithm', "karmarkar's algorithm", {'weight': 0.6})
('earley algorithm', 'lattice models', {'weight': 0.6})
('earley algorithm', 'utility', {'weight': 0.6})
('earley algorithm', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('earley algorithm', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('earley algorithm', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('earley algorithm', 'international standard book number', {'weight': 0.6})
('earley algorithm', 'undirected graph', {'weight': 0.6})
('earley algorithm', 'scheme (programming language)', {'weight': 0.6})
('earley algorithm', 'rna structure', {'weight': 0.6})
('earley algorithm', 'hanoi', {'weight': 0.6})
('earley algorithm', 'perl', {'weight': 0.6})
('earley algorithm', 'digital object identifier', {'weight': 0.6})
('earley algorithm', 'sequential quadratic programming', {'weight': 0.6})
('earley algorithm', "dinic's algorithm", {'weight': 0.6})
('earley algorithm', 'pseudo-polynomial time', {'weight': 0.6})
('earley algorithm', 'partition problem', {'weight': 0.6})
('earley algorithm', 'stochastic programming', {'weight': 0.6})
('earley algorithm', 'hill climbing', {'weight': 0.6})
('earley algorithm', 'top-down', {'weight': 0.6})
('earley algorithm', 'de boor algorithm', {'weight': 0.6})
('earley algorithm', 'optimization algorithm', {'weight': 0.6})
('earley algorithm', "kruskal's algorithm", {'weight': 0.6})
('earley algorithm', 'jacques philippe marie binet', {'weight': 0.6})
('earley algorithm', 'tabu search', {'weight': 0.6})
('earley algorithm', 'divide and conquer algorithm', {'weight': 0.6})
('earley algorithm', "johnson's algorithm", {'weight': 0.6})
('earley algorithm', 'evolutionary algorithm', {'weight': 0.6})
('earley algorithm', 'clique-width', {'weight': 0.6})
('earley algorithm', 'dynamic programming', {'weight': 0.6})
('earley algorithm', 'subroutine', {'weight': 0.6})
('earley algorithm', 'line search', {'weight': 0.6})
('earley algorithm', 'simulated annealing', {'weight': 0.6})
('earley algorithm', 'tower of hanoi', {'weight': 0.6})
('earley algorithm', 'branch and bound', {'weight': 0.6})
('earley algorithm', 'engineering', {'weight': 0.6})
('earley algorithm', 'matroid', {'weight': 0.6})
('earley algorithm', 'viterbi algorithm', {'weight': 0.6})
('earley algorithm', "lemke's algorithm", {'weight': 0.6})
('earley algorithm', 'simplex algorithm', {'weight': 0.6})
('earley algorithm', 'local search (optimization)', {'weight': 0.6})
('earley algorithm', 'hessian matrix', {'weight': 0.6})
('earley algorithm', 'ibm system r', {'weight': 0.6})
('earley algorithm', 'penalty method', {'weight': 0.6})
('earley algorithm', 'prolog', {'weight': 0.6})
('earley algorithm', 'time-invariant system', {'weight': 0.6})
('earley algorithm', 'criss-cross algorithm', {'weight': 0.6})
('earley algorithm', 'revised simplex algorithm', {'weight': 0.6})
('earley algorithm', 'the mathematical association of america', {'weight': 0.6})
('earley algorithm', 'heuristic algorithm', {'weight': 0.6})
('earley algorithm', 'j (programming language)', {'weight': 0.6})
('earley algorithm', 'word wrap', {'weight': 0.6})
('earley algorithm', 'subset sum problem', {'weight': 0.6})
('earley algorithm', 'integer programming', {'weight': 0.6})
('earley algorithm', 'nucleosome', {'weight': 0.6})
('earley algorithm', 'earley algorithm', {'weight': 1})
('earley algorithm', 'referential transparency (computer science)', {'weight': 0.6})
('earley algorithm', 'recursion', {'weight': 0.6})
('earley algorithm', 'mathematica', {'weight': 0.6})
('earley algorithm', 'quicksort', {'weight': 0.6})
('earley algorithm', 'recursion (computer science)', {'weight': 0.6})
('earley algorithm', 'checkerboard', {'weight': 0.6})
('earley algorithm', 'computer science', {'weight': 0.6})
('earley algorithm', 'brute-force search', {'weight': 0.6})
('earley algorithm', 'mathematics', {'weight': 0.6})
('earley algorithm', 'depth-first search', {'weight': 0.6})
('earley algorithm', 'top-down and bottom-up design', {'weight': 0.6})
('earley algorithm', 'correspondence problem', {'weight': 0.6})
('earley algorithm', 'transcription factor', {'weight': 0.6})
('earley algorithm', 'tree decomposition', {'weight': 0.6})
('earley algorithm', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('earley algorithm', 'structural alignment', {'weight': 0.6})
('earley algorithm', 'local convergence', {'weight': 0.6})
('earley algorithm', 'knapsack problem', {'weight': 0.6})
('earley algorithm', 'graph algorithm', {'weight': 0.6})
('earley algorithm', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('earley algorithm', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('earley algorithm', 'hidden markov model', {'weight': 0.6})
('earley algorithm', 'string (computer science)', {'weight': 0.6})
('earley algorithm', 'bioinformatics', {'weight': 0.6})
('earley algorithm', 'genetics', {'weight': 0.6})
('earley algorithm', 'mathematical optimization', {'weight': 0.6})
('earley algorithm', 'artificial neural networks', {'weight': 0.6})
('earley algorithm', 'introduction to algorithms', {'weight': 0.6})
('earley algorithm', 'thomas h. cormen', {'weight': 0.6})
('earley algorithm', 'music information retrieval', {'weight': 0.6})
('earley algorithm', 'beat (music)', {'weight': 0.6})
('earley algorithm', 'longest common subsequence problem', {'weight': 0.6})
('earley algorithm', 'convex minimization', {'weight': 0.6})
('earley algorithm', 'successive parabolic interpolation', {'weight': 0.6})
('earley algorithm', 'fibonacci sequence', {'weight': 0.6})
('earley algorithm', 'maximum subarray problem', {'weight': 0.6})
('earley algorithm', 'convex optimization', {'weight': 0.6})
('earley algorithm', 'memoization', {'weight': 0.6})
('earley algorithm', 'richard bellman', {'weight': 0.6})
('earley algorithm', 'exponential growth', {'weight': 0.6})
('earley algorithm', 'charles e. leiserson', {'weight': 0.6})
('earley algorithm', 'charles erwin wilson', {'weight': 0.6})
('earley algorithm', 'interval scheduling', {'weight': 0.6})
('earley algorithm', 'chart parser', {'weight': 0.6})
('earley algorithm', 'travelling salesman problem', {'weight': 0.6})
('earley algorithm', 'bellman equation', {'weight': 0.6})
('longest common subsequence problem', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('longest common subsequence problem', 'photoshop', {'weight': 0.6})
('longest common subsequence problem', 'sequence alignment', {'weight': 0.6})
('longest common subsequence problem', 'flow network', {'weight': 0.6})
('longest common subsequence problem', 'ellipsoid method', {'weight': 0.6})
('longest common subsequence problem', 'chain matrix multiplication', {'weight': 0.6})
('longest common subsequence problem', 'ieee', {'weight': 0.6})
('longest common subsequence problem', 'backtracking', {'weight': 0.6})
('longest common subsequence problem', 'sr1 formula', {'weight': 0.6})
('longest common subsequence problem', 'nonlinear conjugate gradient method', {'weight': 0.6})
('longest common subsequence problem', 'dynamic problem', {'weight': 0.6})
('longest common subsequence problem', 'trust region', {'weight': 0.6})
('longest common subsequence problem', 'function (mathematics)', {'weight': 0.6})
('longest common subsequence problem', 'minimum spanning tree', {'weight': 0.6})
('longest common subsequence problem', 'context-free grammar', {'weight': 0.6})
('longest common subsequence problem', 'branch and cut', {'weight': 0.6})
('longest common subsequence problem', 'state variable', {'weight': 0.6})
('longest common subsequence problem', 'treewidth', {'weight': 0.6})
('longest common subsequence problem', 'overlapping subproblem', {'weight': 0.6})
('longest common subsequence problem', 'taylor & francis', {'weight': 0.6})
('longest common subsequence problem', 'cutting-plane method', {'weight': 0.6})
('longest common subsequence problem', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('longest common subsequence problem', 'method of undetermined coefficients', {'weight': 0.6})
('longest common subsequence problem', 'combinatorial optimization', {'weight': 0.6})
('longest common subsequence problem', "newton's method in optimization", {'weight': 0.6})
('longest common subsequence problem', 'matrix chain multiplication', {'weight': 0.6})
('longest common subsequence problem', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('longest common subsequence problem', 'dynamic time warping', {'weight': 0.6})
('longest common subsequence problem', 'dynamic programming language', {'weight': 0.6})
('longest common subsequence problem', 'call-by-need', {'weight': 0.6})
('longest common subsequence problem', 'big-o notation', {'weight': 0.6})
('longest common subsequence problem', 'comparison of optimization software', {'weight': 0.6})
('longest common subsequence problem', 'quadratic programming', {'weight': 0.6})
('longest common subsequence problem', 'common lisp', {'weight': 0.6})
('longest common subsequence problem', 'barrier function', {'weight': 0.6})
('longest common subsequence problem', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('longest common subsequence problem', 'longest increasing subsequence', {'weight': 0.7})
('longest common subsequence problem', 'gradient descent', {'weight': 0.6})
('longest common subsequence problem', 'patricia selinger', {'weight': 0.6})
('longest common subsequence problem', 'discounting', {'weight': 0.6})
('longest common subsequence problem', 'ronald l. rivest', {'weight': 0.6})
('longest common subsequence problem', 'iterative method', {'weight': 0.6})
('longest common subsequence problem', 'limited-memory bfgs', {'weight': 0.6})
('longest common subsequence problem', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('longest common subsequence problem', 'longest common substring problem', {'weight': 0.6})
('longest common subsequence problem', 'clifford stein', {'weight': 0.6})
('longest common subsequence problem', 'computer chess', {'weight': 0.6})
('longest common subsequence problem', 'linear programming', {'weight': 0.6})
('longest common subsequence problem', 'bitonic tour', {'weight': 0.6})
('longest common subsequence problem', 'linear search problem', {'weight': 0.6})
('longest common subsequence problem', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('longest common subsequence problem', 'systems analysis', {'weight': 0.6})
('longest common subsequence problem', 'capital (economics)', {'weight': 0.6})
('longest common subsequence problem', 'levenshtein distance', {'weight': 0.7})
('longest common subsequence problem', 'nonlinear programming', {'weight': 0.6})
('longest common subsequence problem', 'computational complexity of mathematical operations', {'weight': 0.6})
('longest common subsequence problem', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('longest common subsequence problem', 'gradient', {'weight': 0.6})
('longest common subsequence problem', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('longest common subsequence problem', 'bulletin of the american mathematical society', {'weight': 0.6})
('longest common subsequence problem', 'problems on strings', {'weight': 0.5})
('longest common subsequence problem', 'u.s. english', {'weight': 0.6})
('longest common subsequence problem', 'refutation table', {'weight': 0.6})
('longest common subsequence problem', 'heuristic algorithm', {'weight': 0.6})
('longest common subsequence problem', 'successive linear programming', {'weight': 0.6})
('longest common subsequence problem', 'optimal substructure', {'weight': 0.6})
('longest common subsequence problem', 'programming language', {'weight': 0.6})
('longest common subsequence problem', 'mergesort', {'weight': 0.6})
('longest common subsequence problem', "dijkstra's algorithm", {'weight': 0.6})
('longest common subsequence problem', 'subgradient method', {'weight': 0.6})
('longest common subsequence problem', 'call-by-name', {'weight': 0.6})
('longest common subsequence problem', 'longest increasing subsequence problem', {'weight': 0.6})
('longest common subsequence problem', 'edward prescott', {'weight': 0.6})
('longest common subsequence problem', 'exponential time', {'weight': 0.6})
('longest common subsequence problem', 'principle of optimality', {'weight': 0.6})
('longest common subsequence problem', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('longest common subsequence problem', 'mathematical game', {'weight': 0.6})
('longest common subsequence problem', 'nancy stokey', {'weight': 0.6})
('longest common subsequence problem', 'approximation algorithm', {'weight': 0.6})
('longest common subsequence problem', 'discrete-time', {'weight': 0.6})
('longest common subsequence problem', 'cyk algorithm', {'weight': 0.6})
('longest common subsequence problem', 'markov decision process', {'weight': 0.6})
('longest common subsequence problem', "powell's method", {'weight': 0.6})
('longest common subsequence problem', 'wolfe conditions', {'weight': 0.6})
('longest common subsequence problem', 'convexity in economics', {'weight': 0.6})
('longest common subsequence problem', 'transposition table', {'weight': 0.6})
('longest common subsequence problem', 'economics', {'weight': 0.6})
('longest common subsequence problem', 'backward induction', {'weight': 0.6})
('longest common subsequence problem', 'golden section search', {'weight': 0.6})
('longest common subsequence problem', 'edit distance', {'weight': 0.6})
('longest common subsequence problem', 'tree structure', {'weight': 0.6})
('longest common subsequence problem', 'longest alternating subsequence', {'weight': 0.7})
('longest common subsequence problem', 'exchange algorithm', {'weight': 0.6})
('longest common subsequence problem', 'dover publications', {'weight': 0.6})
('longest common subsequence problem', 'seam carving', {'weight': 0.6})
('longest common subsequence problem', 'recursive least squares', {'weight': 0.6})
('longest common subsequence problem', 'metaheuristic', {'weight': 0.6})
('longest common subsequence problem', 'quasi-newton method', {'weight': 0.6})
('longest common subsequence problem', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('longest common subsequence problem', 'robert e. lucas', {'weight': 0.6})
('longest common subsequence problem', 'non-convexity (economics)', {'weight': 0.6})
('longest common subsequence problem', 'np-complete problems', {'weight': 0.5})
('longest common subsequence problem', 'mathematical reviews', {'weight': 0.6})
('longest common subsequence problem', 'puzzle', {'weight': 0.6})
('longest common subsequence problem', 'associative array', {'weight': 0.6})
('longest common subsequence problem', 'shortest path problem', {'weight': 0.6})
('longest common subsequence problem', 'dynamic algorithm', {'weight': 0.6})
('longest common subsequence problem', 'augmented lagrangian method', {'weight': 0.6})
('longest common subsequence problem', 'charles delisi', {'weight': 0.6})
('longest common subsequence problem', 'greedy algorithm', {'weight': 0.6})
('longest common subsequence problem', "karmarkar's algorithm", {'weight': 0.6})
('longest common subsequence problem', 'lattice models', {'weight': 0.6})
('longest common subsequence problem', 'utility', {'weight': 0.6})
('longest common subsequence problem', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('longest common subsequence problem', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('longest common subsequence problem', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('longest common subsequence problem', 'international standard book number', {'weight': 0.6})
('longest common subsequence problem', 'combinatorics', {'weight': 0.5})
('longest common subsequence problem', 'undirected graph', {'weight': 0.6})
('longest common subsequence problem', 'scheme (programming language)', {'weight': 0.6})
('longest common subsequence problem', 'rna structure', {'weight': 0.6})
('longest common subsequence problem', 'hanoi', {'weight': 0.6})
('longest common subsequence problem', 'perl', {'weight': 0.6})
('longest common subsequence problem', 'digital object identifier', {'weight': 0.6})
('longest common subsequence problem', 'sequential quadratic programming', {'weight': 0.6})
('longest common subsequence problem', "dinic's algorithm", {'weight': 0.6})
('longest common subsequence problem', 'pseudo-polynomial time', {'weight': 0.6})
('longest common subsequence problem', 'partition problem', {'weight': 0.6})
('longest common subsequence problem', 'stochastic programming', {'weight': 0.6})
('longest common subsequence problem', 'hill climbing', {'weight': 0.6})
('longest common subsequence problem', 'top-down', {'weight': 0.6})
('longest common subsequence problem', 'de boor algorithm', {'weight': 0.6})
('longest common subsequence problem', 'optimization algorithm', {'weight': 0.6})
('longest common subsequence problem', "kruskal's algorithm", {'weight': 0.6})
('longest common subsequence problem', 'jacques philippe marie binet', {'weight': 0.6})
('longest common subsequence problem', 'tabu search', {'weight': 0.6})
('longest common subsequence problem', 'divide and conquer algorithm', {'weight': 0.6})
('longest common subsequence problem', "johnson's algorithm", {'weight': 0.6})
('longest common subsequence problem', 'evolutionary algorithm', {'weight': 0.6})
('longest common subsequence problem', 'clique-width', {'weight': 0.6})
('longest common subsequence problem', 'dynamic programming', {'weight': 0.6})
('longest common subsequence problem', 'subroutine', {'weight': 0.6})
('longest common subsequence problem', 'simulated annealing', {'weight': 0.6})
('longest common subsequence problem', 'tower of hanoi', {'weight': 0.6})
('longest common subsequence problem', 'branch and bound', {'weight': 0.6})
('longest common subsequence problem', 'engineering', {'weight': 0.6})
('longest common subsequence problem', 'matroid', {'weight': 0.6})
('longest common subsequence problem', 'viterbi algorithm', {'weight': 0.6})
('longest common subsequence problem', "lemke's algorithm", {'weight': 0.6})
('longest common subsequence problem', 'simplex algorithm', {'weight': 0.6})
('longest common subsequence problem', 'local search (optimization)', {'weight': 0.6})
('longest common subsequence problem', 'hessian matrix', {'weight': 0.6})
('longest common subsequence problem', 'ibm system r', {'weight': 0.6})
('longest common subsequence problem', 'penalty method', {'weight': 0.6})
('longest common subsequence problem', 'prolog', {'weight': 0.6})
('longest common subsequence problem', 'time-invariant system', {'weight': 0.6})
('longest common subsequence problem', 'criss-cross algorithm', {'weight': 0.6})
('longest common subsequence problem', 'revised simplex algorithm', {'weight': 0.6})
('longest common subsequence problem', 'the mathematical association of america', {'weight': 0.6})
('longest common subsequence problem', 'line search', {'weight': 0.6})
('longest common subsequence problem', 'j (programming language)', {'weight': 0.6})
('longest common subsequence problem', 'word wrap', {'weight': 0.6})
('longest common subsequence problem', 'subset sum problem', {'weight': 0.6})
('longest common subsequence problem', 'integer programming', {'weight': 0.6})
('longest common subsequence problem', 'nucleosome', {'weight': 0.6})
('longest common subsequence problem', 'earley algorithm', {'weight': 0.6})
('longest common subsequence problem', 'referential transparency (computer science)', {'weight': 0.6})
('longest common subsequence problem', 'recursion', {'weight': 0.6})
('longest common subsequence problem', 'mathematica', {'weight': 0.6})
('longest common subsequence problem', 'quicksort', {'weight': 0.6})
('longest common subsequence problem', 'recursion (computer science)', {'weight': 0.6})
('longest common subsequence problem', 'checkerboard', {'weight': 0.6})
('longest common subsequence problem', 'computer science', {'weight': 0.6})
('longest common subsequence problem', 'brute-force search', {'weight': 0.6})
('longest common subsequence problem', 'mathematics', {'weight': 0.6})
('longest common subsequence problem', 'depth-first search', {'weight': 0.6})
('longest common subsequence problem', 'top-down and bottom-up design', {'weight': 0.6})
('longest common subsequence problem', 'correspondence problem', {'weight': 0.6})
('longest common subsequence problem', 'transcription factor', {'weight': 0.6})
('longest common subsequence problem', 'tree decomposition', {'weight': 0.6})
('longest common subsequence problem', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('longest common subsequence problem', 'structural alignment', {'weight': 0.6})
('longest common subsequence problem', 'local convergence', {'weight': 0.6})
('longest common subsequence problem', 'knapsack problem', {'weight': 0.6})
('longest common subsequence problem', 'graph algorithm', {'weight': 0.6})
('longest common subsequence problem', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('longest common subsequence problem', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('longest common subsequence problem', 'hidden markov model', {'weight': 0.6})
('longest common subsequence problem', 'string (computer science)', {'weight': 0.6})
('longest common subsequence problem', 'bioinformatics', {'weight': 0.6})
('longest common subsequence problem', 'genetics', {'weight': 0.6})
('longest common subsequence problem', 'mathematical optimization', {'weight': 0.6})
('longest common subsequence problem', 'artificial neural networks', {'weight': 0.6})
('longest common subsequence problem', 'introduction to algorithms', {'weight': 0.6})
('longest common subsequence problem', 'thomas h. cormen', {'weight': 0.6})
('longest common subsequence problem', 'music information retrieval', {'weight': 0.6})
('longest common subsequence problem', 'beat (music)', {'weight': 0.6})
('longest common subsequence problem', 'longest common subsequence problem', {'weight': 1})
('longest common subsequence problem', 'polynomial-time problems', {'weight': 0.5})
('longest common subsequence problem', 'convex minimization', {'weight': 0.6})
('longest common subsequence problem', 'successive parabolic interpolation', {'weight': 0.6})
('longest common subsequence problem', 'fibonacci sequence', {'weight': 0.6})
('longest common subsequence problem', 'maximum subarray problem', {'weight': 0.6})
('longest common subsequence problem', 'convex optimization', {'weight': 0.6})
('longest common subsequence problem', 'memoization', {'weight': 0.6})
('longest common subsequence problem', 'richard bellman', {'weight': 0.6})
('longest common subsequence problem', 'exponential growth', {'weight': 0.6})
('longest common subsequence problem', 'charles e. leiserson', {'weight': 0.6})
('longest common subsequence problem', 'charles erwin wilson', {'weight': 0.6})
('longest common subsequence problem', 'interval scheduling', {'weight': 0.6})
('longest common subsequence problem', 'chart parser', {'weight': 0.6})
('longest common subsequence problem', 'travelling salesman problem', {'weight': 0.6})
('longest common subsequence problem', 'bellman equation', {'weight': 0.6})
('tabu search', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('tabu search', 'photoshop', {'weight': 0.6})
('tabu search', 'sequence alignment', {'weight': 0.6})
('tabu search', 'flow network', {'weight': 0.6})
('tabu search', 'ellipsoid method', {'weight': 0.6})
('tabu search', 'chain matrix multiplication', {'weight': 0.6})
('tabu search', 'ieee', {'weight': 0.6})
('tabu search', 'backtracking', {'weight': 0.6})
('tabu search', 'nonlinear conjugate gradient method', {'weight': 0.6})
('tabu search', 'dynamic problem', {'weight': 0.6})
('tabu search', 'trust region', {'weight': 0.6})
('tabu search', 'function (mathematics)', {'weight': 0.6})
('tabu search', 'minimum spanning tree', {'weight': 0.6})
('tabu search', 'context-free grammar', {'weight': 0.6})
('tabu search', 'branch and cut', {'weight': 0.6})
('tabu search', 'state variable', {'weight': 0.6})
('tabu search', 'treewidth', {'weight': 0.6})
('tabu search', 'optimization algorithms and methods', {'weight': 0.5})
('tabu search', 'overlapping subproblem', {'weight': 0.6})
('tabu search', 'taylor & francis', {'weight': 0.6})
('tabu search', 'cutting-plane method', {'weight': 0.6})
('tabu search', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('tabu search', 'method of undetermined coefficients', {'weight': 0.6})
('tabu search', 'combinatorial optimization', {'weight': 0.6})
('tabu search', "newton's method in optimization", {'weight': 0.6})
('tabu search', 'matrix chain multiplication', {'weight': 0.6})
('tabu search', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('tabu search', 'dynamic time warping', {'weight': 0.6})
('tabu search', 'dynamic programming language', {'weight': 0.6})
('tabu search', 'call-by-need', {'weight': 0.6})
('tabu search', 'big-o notation', {'weight': 0.6})
('tabu search', 'comparison of optimization software', {'weight': 0.6})
('tabu search', 'quadratic programming', {'weight': 0.6})
('tabu search', 'common lisp', {'weight': 0.6})
('tabu search', 'barrier function', {'weight': 0.6})
('tabu search', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('tabu search', 'gradient descent', {'weight': 0.6})
('tabu search', 'patricia selinger', {'weight': 0.6})
('tabu search', 'discounting', {'weight': 0.6})
('tabu search', 'ronald l. rivest', {'weight': 0.6})
('tabu search', 'iterative method', {'weight': 0.6})
('tabu search', 'limited-memory bfgs', {'weight': 0.6})
('tabu search', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('tabu search', 'longest common substring problem', {'weight': 0.6})
('tabu search', 'clifford stein', {'weight': 0.6})
('tabu search', 'computer chess', {'weight': 0.6})
('tabu search', 'linear programming', {'weight': 0.6})
('tabu search', 'bitonic tour', {'weight': 0.6})
('tabu search', 'linear search problem', {'weight': 0.6})
('tabu search', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('tabu search', 'systems analysis', {'weight': 0.6})
('tabu search', 'capital (economics)', {'weight': 0.6})
('tabu search', 'levenshtein distance', {'weight': 0.6})
('tabu search', 'nonlinear programming', {'weight': 0.6})
('tabu search', 'computational complexity of mathematical operations', {'weight': 0.6})
('tabu search', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('tabu search', 'gradient', {'weight': 0.6})
('tabu search', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('tabu search', 'bulletin of the american mathematical society', {'weight': 0.6})
('tabu search', 'u.s. english', {'weight': 0.6})
('tabu search', 'refutation table', {'weight': 0.6})
('tabu search', 'heuristic algorithm', {'weight': 0.6})
('tabu search', 'successive linear programming', {'weight': 0.6})
('tabu search', 'optimal substructure', {'weight': 0.6})
('tabu search', 'programming language', {'weight': 0.6})
('tabu search', 'mergesort', {'weight': 0.6})
('tabu search', "dijkstra's algorithm", {'weight': 0.6})
('tabu search', 'subgradient method', {'weight': 0.6})
('tabu search', 'call-by-name', {'weight': 0.6})
('tabu search', 'longest increasing subsequence problem', {'weight': 0.6})
('tabu search', 'edward prescott', {'weight': 0.6})
('tabu search', 'exponential time', {'weight': 0.6})
('tabu search', 'principle of optimality', {'weight': 0.6})
('tabu search', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('tabu search', 'mathematical game', {'weight': 0.6})
('tabu search', 'nancy stokey', {'weight': 0.6})
('tabu search', 'approximation algorithm', {'weight': 0.6})
('tabu search', 'discrete-time', {'weight': 0.6})
('tabu search', 'cyk algorithm', {'weight': 0.6})
('tabu search', '1989 introductions', {'weight': 0.5})
('tabu search', "powell's method", {'weight': 0.6})
('tabu search', 'wolfe conditions', {'weight': 0.6})
('tabu search', 'convexity in economics', {'weight': 0.6})
('tabu search', 'transposition table', {'weight': 0.6})
('tabu search', 'economics', {'weight': 0.6})
('tabu search', 'backward induction', {'weight': 0.6})
('tabu search', 'golden section search', {'weight': 0.6})
('tabu search', 'edit distance', {'weight': 0.6})
('tabu search', 'tree structure', {'weight': 0.6})
('tabu search', 'exchange algorithm', {'weight': 0.6})
('tabu search', 'dover publications', {'weight': 0.6})
('tabu search', 'seam carving', {'weight': 0.6})
('tabu search', 'recursive least squares', {'weight': 0.6})
('tabu search', 'metaheuristic', {'weight': 0.6})
('tabu search', 'quasi-newton method', {'weight': 0.6})
('tabu search', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('tabu search', 'robert e. lucas', {'weight': 0.6})
('tabu search', 'non-convexity (economics)', {'weight': 0.6})
('tabu search', 'sr1 formula', {'weight': 0.6})
('tabu search', 'mathematical reviews', {'weight': 0.6})
('tabu search', 'puzzle', {'weight': 0.6})
('tabu search', 'associative array', {'weight': 0.6})
('tabu search', 'shortest path problem', {'weight': 0.6})
('tabu search', 'dynamic algorithm', {'weight': 0.6})
('tabu search', 'augmented lagrangian method', {'weight': 0.6})
('tabu search', 'charles delisi', {'weight': 0.6})
('tabu search', 'greedy algorithm', {'weight': 0.6})
('tabu search', "karmarkar's algorithm", {'weight': 0.6})
('tabu search', 'lattice models', {'weight': 0.6})
('tabu search', 'utility', {'weight': 0.6})
('tabu search', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('tabu search', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('tabu search', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('tabu search', 'international standard book number', {'weight': 0.6})
('tabu search', 'undirected graph', {'weight': 0.6})
('tabu search', 'scheme (programming language)', {'weight': 0.6})
('tabu search', 'rna structure', {'weight': 0.6})
('tabu search', 'hanoi', {'weight': 0.6})
('tabu search', 'perl', {'weight': 0.6})
('tabu search', 'digital object identifier', {'weight': 0.6})
('tabu search', 'sequential quadratic programming', {'weight': 0.6})
('tabu search', 'markov decision process', {'weight': 0.6})
('tabu search', "dinic's algorithm", {'weight': 0.6})
('tabu search', 'pseudo-polynomial time', {'weight': 0.6})
('tabu search', 'partition problem', {'weight': 0.6})
('tabu search', 'stochastic programming', {'weight': 0.6})
('tabu search', 'hill climbing', {'weight': 0.6})
('tabu search', 'top-down', {'weight': 0.6})
('tabu search', 'de boor algorithm', {'weight': 0.6})
('tabu search', 'optimization algorithm', {'weight': 0.6})
('tabu search', "kruskal's algorithm", {'weight': 0.6})
('tabu search', 'jacques philippe marie binet', {'weight': 0.6})
('tabu search', 'tabu search', {'weight': 1})
('tabu search', 'divide and conquer algorithm', {'weight': 0.6})
('tabu search', "johnson's algorithm", {'weight': 0.6})
('tabu search', 'evolutionary algorithm', {'weight': 0.6})
('tabu search', 'clique-width', {'weight': 0.6})
('tabu search', 'dynamic programming', {'weight': 0.6})
('tabu search', 'subroutine', {'weight': 0.6})
('tabu search', 'simulated annealing', {'weight': 0.6})
('tabu search', 'tower of hanoi', {'weight': 0.6})
('tabu search', 'branch and bound', {'weight': 0.6})
('tabu search', 'j (programming language)', {'weight': 0.6})
('tabu search', 'matroid', {'weight': 0.6})
('tabu search', 'viterbi algorithm', {'weight': 0.6})
('tabu search', "lemke's algorithm", {'weight': 0.6})
('tabu search', 'simplex algorithm', {'weight': 0.6})
('tabu search', 'local search (optimization)', {'weight': 0.6})
('tabu search', 'hessian matrix', {'weight': 0.6})
('tabu search', 'ibm system r', {'weight': 0.6})
('tabu search', 'penalty method', {'weight': 0.6})
('tabu search', 'prolog', {'weight': 0.6})
('tabu search', 'time-invariant system', {'weight': 0.6})
('tabu search', 'criss-cross algorithm', {'weight': 0.6})
('tabu search', 'revised simplex algorithm', {'weight': 0.6})
('tabu search', 'the mathematical association of america', {'weight': 0.6})
('tabu search', 'line search', {'weight': 0.6})
('tabu search', 'engineering', {'weight': 0.6})
('tabu search', 'word wrap', {'weight': 0.6})
('tabu search', 'subset sum problem', {'weight': 0.6})
('tabu search', 'integer programming', {'weight': 0.6})
('tabu search', 'nucleosome', {'weight': 0.6})
('tabu search', 'earley algorithm', {'weight': 0.6})
('tabu search', 'referential transparency (computer science)', {'weight': 0.6})
('tabu search', 'recursion', {'weight': 0.6})
('tabu search', 'mathematica', {'weight': 0.6})
('tabu search', 'quicksort', {'weight': 0.6})
('tabu search', 'recursion (computer science)', {'weight': 0.6})
('tabu search', 'checkerboard', {'weight': 0.6})
('tabu search', 'computer science', {'weight': 0.6})
('tabu search', 'brute-force search', {'weight': 0.6})
('tabu search', 'mathematics', {'weight': 0.6})
('tabu search', 'depth-first search', {'weight': 0.6})
('tabu search', 'top-down and bottom-up design', {'weight': 0.6})
('tabu search', 'correspondence problem', {'weight': 0.6})
('tabu search', 'transcription factor', {'weight': 0.6})
('tabu search', 'tree decomposition', {'weight': 0.6})
('tabu search', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('tabu search', 'structural alignment', {'weight': 0.6})
('tabu search', 'local convergence', {'weight': 0.6})
('tabu search', 'knapsack problem', {'weight': 0.6})
('tabu search', 'graph algorithm', {'weight': 0.6})
('tabu search', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('tabu search', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('tabu search', 'hidden markov model', {'weight': 0.6})
('tabu search', 'string (computer science)', {'weight': 0.6})
('tabu search', 'bioinformatics', {'weight': 0.6})
('tabu search', 'genetics', {'weight': 0.6})
('tabu search', 'mathematical optimization', {'weight': 0.6})
('tabu search', 'artificial neural networks', {'weight': 0.6})
('tabu search', 'introduction to algorithms', {'weight': 0.6})
('tabu search', 'thomas h. cormen', {'weight': 0.6})
('tabu search', 'music information retrieval', {'weight': 0.6})
('tabu search', 'beat (music)', {'weight': 0.6})
('tabu search', 'longest common subsequence problem', {'weight': 0.6})
('tabu search', 'convex minimization', {'weight': 0.6})
('tabu search', 'successive parabolic interpolation', {'weight': 0.6})
('tabu search', 'fibonacci sequence', {'weight': 0.6})
('tabu search', 'maximum subarray problem', {'weight': 0.6})
('tabu search', 'convex optimization', {'weight': 0.6})
('tabu search', 'memoization', {'weight': 0.6})
('tabu search', 'richard bellman', {'weight': 0.6})
('tabu search', 'exponential growth', {'weight': 0.6})
('tabu search', 'charles e. leiserson', {'weight': 0.6})
('tabu search', 'charles erwin wilson', {'weight': 0.6})
('tabu search', 'interval scheduling', {'weight': 0.6})
('tabu search', 'chart parser', {'weight': 0.6})
('tabu search', 'travelling salesman problem', {'weight': 0.6})
('tabu search', 'bellman equation', {'weight': 0.6})
('dynamic problem', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('dynamic problem', 'photoshop', {'weight': 0.6})
('dynamic problem', 'sequence alignment', {'weight': 0.6})
('dynamic problem', 'flow network', {'weight': 0.6})
('dynamic problem', 'ellipsoid method', {'weight': 0.6})
('dynamic problem', 'chain matrix multiplication', {'weight': 0.6})
('dynamic problem', 'ieee', {'weight': 0.6})
('dynamic problem', 'backtracking', {'weight': 0.6})
('dynamic problem', 'sr1 formula', {'weight': 0.6})
('dynamic problem', 'nonlinear conjugate gradient method', {'weight': 0.6})
('dynamic problem', 'dynamic problem', {'weight': 1})
('dynamic problem', 'trust region', {'weight': 0.6})
('dynamic problem', 'function (mathematics)', {'weight': 0.6})
('dynamic problem', 'minimum spanning tree', {'weight': 0.6})
('dynamic problem', 'context-free grammar', {'weight': 0.6})
('dynamic problem', 'branch and cut', {'weight': 0.6})
('dynamic problem', 'state variable', {'weight': 0.6})
('dynamic problem', 'treewidth', {'weight': 0.6})
('dynamic problem', 'overlapping subproblem', {'weight': 0.6})
('dynamic problem', 'taylor & francis', {'weight': 0.6})
('dynamic problem', 'cutting-plane method', {'weight': 0.6})
('dynamic problem', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('dynamic problem', 'method of undetermined coefficients', {'weight': 0.6})
('dynamic problem', 'combinatorial optimization', {'weight': 0.6})
('dynamic problem', "newton's method in optimization", {'weight': 0.6})
('dynamic problem', 'matrix chain multiplication', {'weight': 0.6})
('dynamic problem', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('dynamic problem', 'dynamic time warping', {'weight': 0.6})
('dynamic problem', 'dynamic programming language', {'weight': 0.6})
('dynamic problem', 'call-by-need', {'weight': 0.6})
('dynamic problem', 'big-o notation', {'weight': 0.6})
('dynamic problem', 'comparison of optimization software', {'weight': 0.6})
('dynamic problem', 'quadratic programming', {'weight': 0.6})
('dynamic problem', 'common lisp', {'weight': 0.6})
('dynamic problem', 'barrier function', {'weight': 0.6})
('dynamic problem', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('dynamic problem', 'gradient descent', {'weight': 0.6})
('dynamic problem', 'patricia selinger', {'weight': 0.6})
('dynamic problem', 'discounting', {'weight': 0.6})
('dynamic problem', 'ronald l. rivest', {'weight': 0.6})
('dynamic problem', 'iterative method', {'weight': 0.6})
('dynamic problem', 'limited-memory bfgs', {'weight': 0.6})
('dynamic problem', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('dynamic problem', 'longest common substring problem', {'weight': 0.6})
('dynamic problem', 'clifford stein', {'weight': 0.6})
('dynamic problem', 'computer chess', {'weight': 0.6})
('dynamic problem', 'linear programming', {'weight': 0.6})
('dynamic problem', 'bitonic tour', {'weight': 0.6})
('dynamic problem', 'linear search problem', {'weight': 0.6})
('dynamic problem', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('dynamic problem', 'systems analysis', {'weight': 0.6})
('dynamic problem', 'capital (economics)', {'weight': 0.6})
('dynamic problem', 'levenshtein distance', {'weight': 0.6})
('dynamic problem', 'nonlinear programming', {'weight': 0.6})
('dynamic problem', 'computational complexity of mathematical operations', {'weight': 0.6})
('dynamic problem', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('dynamic problem', 'gradient', {'weight': 0.6})
('dynamic problem', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('dynamic problem', 'bulletin of the american mathematical society', {'weight': 0.6})
('dynamic problem', 'u.s. english', {'weight': 0.6})
('dynamic problem', 'refutation table', {'weight': 0.6})
('dynamic problem', 'heuristic algorithm', {'weight': 0.6})
('dynamic problem', 'successive linear programming', {'weight': 0.6})
('dynamic problem', 'optimal substructure', {'weight': 0.6})
('dynamic problem', 'programming language', {'weight': 0.6})
('dynamic problem', 'mergesort', {'weight': 0.6})
('dynamic problem', "dijkstra's algorithm", {'weight': 0.6})
('dynamic problem', 'subgradient method', {'weight': 0.6})
('dynamic problem', 'call-by-name', {'weight': 0.6})
('dynamic problem', 'longest increasing subsequence problem', {'weight': 0.6})
('dynamic problem', 'edward prescott', {'weight': 0.6})
('dynamic problem', 'exponential time', {'weight': 0.6})
('dynamic problem', 'principle of optimality', {'weight': 0.6})
('dynamic problem', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('dynamic problem', 'mathematical game', {'weight': 0.6})
('dynamic problem', 'nancy stokey', {'weight': 0.6})
('dynamic problem', 'approximation algorithm', {'weight': 0.6})
('dynamic problem', 'discrete-time', {'weight': 0.6})
('dynamic problem', 'cyk algorithm', {'weight': 0.6})
('dynamic problem', 'markov decision process', {'weight': 0.6})
('dynamic problem', 'dynamization', {'weight': 0.7})
('dynamic problem', "powell's method", {'weight': 0.6})
('dynamic problem', 'wolfe conditions', {'weight': 0.6})
('dynamic problem', 'convexity in economics', {'weight': 0.6})
('dynamic problem', 'transposition table', {'weight': 0.6})
('dynamic problem', 'economics', {'weight': 0.6})
('dynamic problem', 'backward induction', {'weight': 0.6})
('dynamic problem', 'golden section search', {'weight': 0.6})
('dynamic problem', 'edit distance', {'weight': 0.6})
('dynamic problem', 'tree structure', {'weight': 0.6})
('dynamic problem', 'exchange algorithm', {'weight': 0.6})
('dynamic problem', 'dover publications', {'weight': 0.6})
('dynamic problem', 'seam carving', {'weight': 0.6})
('dynamic problem', 'recursive least squares', {'weight': 0.6})
('dynamic problem', 'metaheuristic', {'weight': 0.6})
('dynamic problem', 'quasi-newton method', {'weight': 0.6})
('dynamic problem', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('dynamic problem', 'robert e. lucas', {'weight': 0.6})
('dynamic problem', 'non-convexity (economics)', {'weight': 0.6})
('dynamic problem', 'computational complexity theory', {'weight': 0.5})
('dynamic problem', 'mathematical reviews', {'weight': 0.6})
('dynamic problem', 'puzzle', {'weight': 0.6})
('dynamic problem', 'associative array', {'weight': 0.6})
('dynamic problem', 'shortest path problem', {'weight': 0.6})
('dynamic problem', 'dynamic algorithm', {'weight': 0.6})
('dynamic problem', 'augmented lagrangian method', {'weight': 0.6})
('dynamic problem', 'charles delisi', {'weight': 0.6})
('dynamic problem', 'greedy algorithm', {'weight': 0.6})
('dynamic problem', "karmarkar's algorithm", {'weight': 0.6})
('dynamic problem', 'lattice models', {'weight': 0.6})
('dynamic problem', 'utility', {'weight': 0.6})
('dynamic problem', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('dynamic problem', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('dynamic problem', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('dynamic problem', 'international standard book number', {'weight': 0.6})
('dynamic problem', 'undirected graph', {'weight': 0.6})
('dynamic problem', 'scheme (programming language)', {'weight': 0.6})
('dynamic problem', 'rna structure', {'weight': 0.6})
('dynamic problem', 'hanoi', {'weight': 0.6})
('dynamic problem', 'perl', {'weight': 0.6})
('dynamic problem', 'digital object identifier', {'weight': 0.6})
('dynamic problem', 'sequential quadratic programming', {'weight': 0.6})
('dynamic problem', "dinic's algorithm", {'weight': 0.6})
('dynamic problem', 'pseudo-polynomial time', {'weight': 0.6})
('dynamic problem', 'partition problem', {'weight': 0.6})
('dynamic problem', 'stochastic programming', {'weight': 0.6})
('dynamic problem', 'hill climbing', {'weight': 0.6})
('dynamic problem', 'top-down', {'weight': 0.6})
('dynamic problem', 'de boor algorithm', {'weight': 0.6})
('dynamic problem', 'optimization algorithm', {'weight': 0.6})
('dynamic problem', "kruskal's algorithm", {'weight': 0.6})
('dynamic problem', 'jacques philippe marie binet', {'weight': 0.6})
('dynamic problem', 'tabu search', {'weight': 0.6})
('dynamic problem', 'divide and conquer algorithm', {'weight': 0.6})
('dynamic problem', "johnson's algorithm", {'weight': 0.6})
('dynamic problem', 'evolutionary algorithm', {'weight': 0.6})
('dynamic problem', 'clique-width', {'weight': 0.6})
('dynamic problem', 'dynamic programming', {'weight': 0.6})
('dynamic problem', 'subroutine', {'weight': 0.6})
('dynamic problem', 'simulated annealing', {'weight': 0.6})
('dynamic problem', 'tower of hanoi', {'weight': 0.6})
('dynamic problem', 'branch and bound', {'weight': 0.6})
('dynamic problem', 'engineering', {'weight': 0.6})
('dynamic problem', 'matroid', {'weight': 0.6})
('dynamic problem', 'viterbi algorithm', {'weight': 0.6})
('dynamic problem', "lemke's algorithm", {'weight': 0.6})
('dynamic problem', 'simplex algorithm', {'weight': 0.6})
('dynamic problem', 'local search (optimization)', {'weight': 0.6})
('dynamic problem', 'hessian matrix', {'weight': 0.6})
('dynamic problem', 'ibm system r', {'weight': 0.6})
('dynamic problem', 'penalty method', {'weight': 0.6})
('dynamic problem', 'prolog', {'weight': 0.6})
('dynamic problem', 'time-invariant system', {'weight': 0.6})
('dynamic problem', 'criss-cross algorithm', {'weight': 0.6})
('dynamic problem', 'revised simplex algorithm', {'weight': 0.6})
('dynamic problem', 'the mathematical association of america', {'weight': 0.6})
('dynamic problem', 'line search', {'weight': 0.6})
('dynamic problem', 'j (programming language)', {'weight': 0.6})
('dynamic problem', 'word wrap', {'weight': 0.6})
('dynamic problem', 'subset sum problem', {'weight': 0.6})
('dynamic problem', 'integer programming', {'weight': 0.6})
('dynamic problem', 'nucleosome', {'weight': 0.6})
('dynamic problem', 'dynamic connectivity', {'weight': 0.7})
('dynamic problem', 'earley algorithm', {'weight': 0.6})
('dynamic problem', 'referential transparency (computer science)', {'weight': 0.6})
('dynamic problem', 'recursion', {'weight': 0.6})
('dynamic problem', 'mathematica', {'weight': 0.6})
('dynamic problem', 'quicksort', {'weight': 0.6})
('dynamic problem', 'recursion (computer science)', {'weight': 0.6})
('dynamic problem', 'checkerboard', {'weight': 0.6})
('dynamic problem', 'computer science', {'weight': 0.6})
('dynamic problem', 'brute-force search', {'weight': 0.6})
('dynamic problem', 'mathematics', {'weight': 0.6})
('dynamic problem', 'depth-first search', {'weight': 0.6})
('dynamic problem', 'top-down and bottom-up design', {'weight': 0.6})
('dynamic problem', 'correspondence problem', {'weight': 0.6})
('dynamic problem', 'transcription factor', {'weight': 0.6})
('dynamic problem', 'tree decomposition', {'weight': 0.6})
('dynamic problem', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('dynamic problem', 'structural alignment', {'weight': 0.6})
('dynamic problem', 'local convergence', {'weight': 0.6})
('dynamic problem', 'knapsack problem', {'weight': 0.6})
('dynamic problem', 'graph algorithm', {'weight': 0.6})
('dynamic problem', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('dynamic problem', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('dynamic problem', 'hidden markov model', {'weight': 0.6})
('dynamic problem', 'string (computer science)', {'weight': 0.6})
('dynamic problem', 'bioinformatics', {'weight': 0.6})
('dynamic problem', 'genetics', {'weight': 0.6})
('dynamic problem', 'mathematical optimization', {'weight': 0.6})
('dynamic problem', 'artificial neural networks', {'weight': 0.6})
('dynamic problem', 'introduction to algorithms', {'weight': 0.6})
('dynamic problem', 'thomas h. cormen', {'weight': 0.6})
('dynamic problem', 'music information retrieval', {'weight': 0.6})
('dynamic problem', 'beat (music)', {'weight': 0.6})
('dynamic problem', 'longest common subsequence problem', {'weight': 0.6})
('dynamic problem', 'convex minimization', {'weight': 0.6})
('dynamic problem', 'successive parabolic interpolation', {'weight': 0.6})
('dynamic problem', 'fibonacci sequence', {'weight': 0.6})
('dynamic problem', 'maximum subarray problem', {'weight': 0.6})
('dynamic problem', 'convex optimization', {'weight': 0.6})
('dynamic problem', 'memoization', {'weight': 0.6})
('dynamic problem', 'richard bellman', {'weight': 0.6})
('dynamic problem', 'exponential growth', {'weight': 0.6})
('dynamic problem', 'charles e. leiserson', {'weight': 0.6})
('dynamic problem', 'charles erwin wilson', {'weight': 0.6})
('dynamic problem', 'interval scheduling', {'weight': 0.6})
('dynamic problem', 'chart parser', {'weight': 0.6})
('dynamic problem', 'travelling salesman problem', {'weight': 0.6})
('dynamic problem', 'bellman equation', {'weight': 0.6})
('recursion (computer science)', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('recursion (computer science)', 'photoshop', {'weight': 0.6})
('recursion (computer science)', 'sequence alignment', {'weight': 0.6})
('recursion (computer science)', 'flow network', {'weight': 0.6})
('recursion (computer science)', 'ellipsoid method', {'weight': 0.6})
('recursion (computer science)', 'chain matrix multiplication', {'weight': 0.6})
('recursion (computer science)', 'ieee', {'weight': 0.6})
('recursion (computer science)', 'backtracking', {'weight': 0.6})
('recursion (computer science)', 'programming idioms', {'weight': 0.5})
('recursion (computer science)', 'dynamic problem', {'weight': 0.6})
('recursion (computer science)', 'approximation algorithm', {'weight': 0.6})
('recursion (computer science)', 'subroutines', {'weight': 0.5})
('recursion (computer science)', 'function (mathematics)', {'weight': 0.6})
('recursion (computer science)', 'minimum spanning tree', {'weight': 0.6})
('recursion (computer science)', 'context-free grammar', {'weight': 0.6})
('recursion (computer science)', 'branch and cut', {'weight': 0.6})
('recursion (computer science)', 'state variable', {'weight': 0.6})
('recursion (computer science)', 'treewidth', {'weight': 0.6})
('recursion (computer science)', 'sierpi\xe5\x84ski curve', {'weight': 0.7})
('recursion (computer science)', 'overlapping subproblem', {'weight': 0.6})
('recursion (computer science)', 'taylor & francis', {'weight': 0.6})
('recursion (computer science)', 'cutting-plane method', {'weight': 0.6})
('recursion (computer science)', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('recursion (computer science)', 'method of undetermined coefficients', {'weight': 0.6})
('recursion (computer science)', 'combinatorial optimization', {'weight': 0.6})
('recursion (computer science)', "newton's method in optimization", {'weight': 0.6})
('recursion (computer science)', 'computability theory', {'weight': 0.5})
('recursion (computer science)', 'matrix chain multiplication', {'weight': 0.6})
('recursion (computer science)', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('recursion (computer science)', 'dynamic time warping', {'weight': 0.6})
('recursion (computer science)', 'takeuchi function', {'weight': 0.7})
('recursion (computer science)', 'dynamic programming language', {'weight': 0.6})
('recursion (computer science)', 'call-by-need', {'weight': 0.6})
('recursion (computer science)', 'big-o notation', {'weight': 0.6})
('recursion (computer science)', 'comparison of optimization software', {'weight': 0.6})
('recursion (computer science)', 'quadratic programming', {'weight': 0.6})
('recursion (computer science)', 'common lisp', {'weight': 0.6})
('recursion (computer science)', 'barrier function', {'weight': 0.6})
('recursion (computer science)', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('recursion (computer science)', 'gradient descent', {'weight': 0.6})
('recursion (computer science)', 'patricia selinger', {'weight': 0.6})
('recursion (computer science)', 'discounting', {'weight': 0.6})
('recursion (computer science)', 'ronald l. rivest', {'weight': 0.6})
('recursion (computer science)', 'iterative method', {'weight': 0.6})
('recursion (computer science)', 'limited-memory bfgs', {'weight': 0.6})
('recursion (computer science)', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('recursion (computer science)', 'longest common substring problem', {'weight': 0.6})
('recursion (computer science)', 'clifford stein', {'weight': 0.6})
('recursion (computer science)', 'open recursion', {'weight': 0.7})
('recursion (computer science)', 'computer chess', {'weight': 0.6})
('recursion (computer science)', 'linear programming', {'weight': 0.6})
('recursion (computer science)', 'bitonic tour', {'weight': 0.6})
('recursion (computer science)', 'linear search problem', {'weight': 0.6})
('recursion (computer science)', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('recursion (computer science)', 'systems analysis', {'weight': 0.6})
('recursion (computer science)', 'capital (economics)', {'weight': 0.6})
('recursion (computer science)', 'levenshtein distance', {'weight': 0.6})
('recursion (computer science)', 'nonlinear programming', {'weight': 0.6})
('recursion (computer science)', 'genetics', {'weight': 0.6})
('recursion (computer science)', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('recursion (computer science)', 'gradient', {'weight': 0.6})
('recursion (computer science)', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('recursion (computer science)', 'ackermann function', {'weight': 0.7})
('recursion (computer science)', 'bulletin of the american mathematical society', {'weight': 0.6})
('recursion (computer science)', 'u.s. english', {'weight': 0.6})
('recursion (computer science)', 'refutation table', {'weight': 0.6})
('recursion (computer science)', 'heuristic algorithm', {'weight': 0.6})
('recursion (computer science)', 'successive linear programming', {'weight': 0.6})
('recursion (computer science)', 'optimal substructure', {'weight': 0.6})
('recursion (computer science)', 'programming language', {'weight': 0.6})
('recursion (computer science)', 'mergesort', {'weight': 0.6})
('recursion (computer science)', "dijkstra's algorithm", {'weight': 0.6})
('recursion (computer science)', 'subgradient method', {'weight': 0.6})
('recursion (computer science)', 'call-by-name', {'weight': 0.6})
('recursion (computer science)', 'longest increasing subsequence problem', {'weight': 0.6})
('recursion (computer science)', 'edward prescott', {'weight': 0.6})
('recursion (computer science)', 'exponential time', {'weight': 0.6})
('recursion (computer science)', '\xee\xbc-recursive function', {'weight': 0.7})
('recursion (computer science)', 'principle of optimality', {'weight': 0.6})
('recursion (computer science)', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('recursion (computer science)', 'mathematical game', {'weight': 0.6})
('recursion (computer science)', 'nancy stokey', {'weight': 0.6})
('recursion (computer science)', 'nonlinear conjugate gradient method', {'weight': 0.6})
('recursion (computer science)', 'discrete-time', {'weight': 0.6})
('recursion (computer science)', 'cyk algorithm', {'weight': 0.6})
('recursion (computer science)', 'markov decision process', {'weight': 0.6})
('recursion (computer science)', 'trust region', {'weight': 0.6})
('recursion (computer science)', "powell's method", {'weight': 0.6})
('recursion (computer science)', 'wolfe conditions', {'weight': 0.6})
('recursion (computer science)', 'convexity in economics', {'weight': 0.6})
('recursion (computer science)', 'transposition table', {'weight': 0.6})
('recursion (computer science)', 'economics', {'weight': 0.6})
('recursion (computer science)', 'backward induction', {'weight': 0.6})
('recursion (computer science)', 'golden section search', {'weight': 0.6})
('recursion (computer science)', 'edit distance', {'weight': 0.6})
('recursion (computer science)', 'tree structure', {'weight': 0.6})
('recursion (computer science)', 'exchange algorithm', {'weight': 0.6})
('recursion (computer science)', 'dover publications', {'weight': 0.6})
('recursion (computer science)', 'seam carving', {'weight': 0.6})
('recursion (computer science)', 'recursive least squares', {'weight': 0.6})
('recursion (computer science)', 'metaheuristic', {'weight': 0.6})
('recursion (computer science)', 'theoretical computer science', {'weight': 0.5})
('recursion (computer science)', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('recursion (computer science)', 'robert e. lucas', {'weight': 0.6})
('recursion (computer science)', 'non-convexity (economics)', {'weight': 0.6})
('recursion (computer science)', 'sr1 formula', {'weight': 0.6})
('recursion (computer science)', 'mathematical reviews', {'weight': 0.6})
('recursion (computer science)', 'puzzle', {'weight': 0.6})
('recursion (computer science)', 'associative array', {'weight': 0.6})
('recursion (computer science)', 'shortest path problem', {'weight': 0.6})
('recursion (computer science)', 'hierarchical and recursive queries in sql', {'weight': 0.7})
('recursion (computer science)', 'dynamic algorithm', {'weight': 0.6})
('recursion (computer science)', 'augmented lagrangian method', {'weight': 0.6})
('recursion (computer science)', 'charles delisi', {'weight': 0.6})
('recursion (computer science)', 'greedy algorithm', {'weight': 0.6})
('recursion (computer science)', "karmarkar's algorithm", {'weight': 0.6})
('recursion (computer science)', 'lattice models', {'weight': 0.6})
('recursion (computer science)', 'utility', {'weight': 0.6})
('recursion (computer science)', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('recursion (computer science)', 'quasi-newton method', {'weight': 0.6})
('recursion (computer science)', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('recursion (computer science)', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('recursion (computer science)', 'international standard book number', {'weight': 0.6})
('recursion (computer science)', 'undirected graph', {'weight': 0.6})
('recursion (computer science)', 'scheme (programming language)', {'weight': 0.6})
('recursion (computer science)', 'rna structure', {'weight': 0.6})
('recursion (computer science)', 'hanoi', {'weight': 0.6})
('recursion (computer science)', 'perl', {'weight': 0.6})
('recursion (computer science)', 'digital object identifier', {'weight': 0.6})
('recursion (computer science)', 'sequential quadratic programming', {'weight': 0.6})
('recursion (computer science)', "dinic's algorithm", {'weight': 0.6})
('recursion (computer science)', 'pseudo-polynomial time', {'weight': 0.6})
('recursion (computer science)', 'partition problem', {'weight': 0.6})
('recursion (computer science)', 'stochastic programming', {'weight': 0.6})
('recursion (computer science)', 'hill climbing', {'weight': 0.6})
('recursion (computer science)', 'top-down', {'weight': 0.6})
('recursion (computer science)', 'de boor algorithm', {'weight': 0.6})
('recursion (computer science)', 'optimization algorithm', {'weight': 0.6})
('recursion (computer science)', "kruskal's algorithm", {'weight': 0.6})
('recursion (computer science)', 'jacques philippe marie binet', {'weight': 0.6})
('recursion (computer science)', 'tabu search', {'weight': 0.6})
('recursion (computer science)', 'divide and conquer algorithm', {'weight': 0.6})
('recursion (computer science)', "johnson's algorithm", {'weight': 0.6})
('recursion (computer science)', 'evolutionary algorithm', {'weight': 0.6})
('recursion (computer science)', 'clique-width', {'weight': 0.6})
('recursion (computer science)', 'dynamic programming', {'weight': 0.6})
('recursion (computer science)', 'subroutine', {'weight': 0.6})
('recursion (computer science)', 'simulated annealing', {'weight': 0.6})
('recursion (computer science)', 'tower of hanoi', {'weight': 0.6})
('recursion (computer science)', 'functional programming', {'weight': 0.7})
('recursion (computer science)', 'branch and bound', {'weight': 0.6})
('recursion (computer science)', 'engineering', {'weight': 0.6})
('recursion (computer science)', 'matroid', {'weight': 0.6})
('recursion (computer science)', 'viterbi algorithm', {'weight': 0.6})
('recursion (computer science)', "lemke's algorithm", {'weight': 0.6})
('recursion (computer science)', 'simplex algorithm', {'weight': 0.6})
('recursion (computer science)', 'local search (optimization)', {'weight': 0.6})
('recursion (computer science)', 'hessian matrix', {'weight': 0.6})
('recursion (computer science)', 'ibm system r', {'weight': 0.6})
('recursion (computer science)', 'penalty method', {'weight': 0.6})
('recursion (computer science)', 'prolog', {'weight': 0.6})
('recursion (computer science)', 'time-invariant system', {'weight': 0.6})
('recursion (computer science)', 'criss-cross algorithm', {'weight': 0.6})
('recursion (computer science)', 'revised simplex algorithm', {'weight': 0.6})
('recursion (computer science)', 'the mathematical association of america', {'weight': 0.6})
('recursion (computer science)', 'line search', {'weight': 0.6})
('recursion (computer science)', 'j (programming language)', {'weight': 0.6})
('recursion (computer science)', 'word wrap', {'weight': 0.6})
('recursion (computer science)', 'subset sum problem', {'weight': 0.6})
('recursion (computer science)', 'integer programming', {'weight': 0.6})
('recursion (computer science)', 'nucleosome', {'weight': 0.6})
('recursion (computer science)', 'earley algorithm', {'weight': 0.6})
('recursion (computer science)', 'referential transparency (computer science)', {'weight': 0.6})
('recursion (computer science)', 'recursion', {'weight': 0.7})
('recursion (computer science)', 'mathematica', {'weight': 0.6})
('recursion (computer science)', 'quicksort', {'weight': 0.6})
('recursion (computer science)', 'recursion (computer science)', {'weight': 1})
('recursion (computer science)', 'checkerboard', {'weight': 0.6})
('recursion (computer science)', 'computer science', {'weight': 0.6})
('recursion (computer science)', 'kleene\xe2\x80\x93rosser paradox', {'weight': 0.7})
('recursion (computer science)', 'brute-force search', {'weight': 0.6})
('recursion (computer science)', 'mathematics', {'weight': 0.6})
('recursion (computer science)', 'depth-first search', {'weight': 0.6})
('recursion (computer science)', 'top-down and bottom-up design', {'weight': 0.6})
('recursion (computer science)', 'correspondence problem', {'weight': 0.6})
('recursion (computer science)', 'transcription factor', {'weight': 0.6})
('recursion (computer science)', 'tree decomposition', {'weight': 0.6})
('recursion (computer science)', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('recursion (computer science)', 'structural alignment', {'weight': 0.6})
('recursion (computer science)', 'local convergence', {'weight': 0.6})
('recursion (computer science)', 'corecursion', {'weight': 0.7})
('recursion (computer science)', 'knapsack problem', {'weight': 0.6})
('recursion (computer science)', 'graph algorithm', {'weight': 0.6})
('recursion (computer science)', 'mccarthy 91 function', {'weight': 0.7})
('recursion (computer science)', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('recursion (computer science)', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('recursion (computer science)', 'hidden markov model', {'weight': 0.6})
('recursion (computer science)', 'string (computer science)', {'weight': 0.6})
('recursion (computer science)', 'bioinformatics', {'weight': 0.6})
('recursion (computer science)', 'computational complexity of mathematical operations', {'weight': 0.6})
('recursion (computer science)', 'mathematical optimization', {'weight': 0.6})
('recursion (computer science)', 'artificial neural networks', {'weight': 0.6})
('recursion (computer science)', 'introduction to algorithms', {'weight': 0.6})
('recursion (computer science)', 'thomas h. cormen', {'weight': 0.6})
('recursion (computer science)', 'music information retrieval', {'weight': 0.6})
('recursion (computer science)', 'beat (music)', {'weight': 0.6})
('recursion (computer science)', 'longest common subsequence problem', {'weight': 0.6})
('recursion (computer science)', 'convex minimization', {'weight': 0.6})
('recursion (computer science)', 'successive parabolic interpolation', {'weight': 0.6})
('recursion (computer science)', 'fibonacci sequence', {'weight': 0.6})
('recursion (computer science)', 'maximum subarray problem', {'weight': 0.6})
('recursion (computer science)', 'convex optimization', {'weight': 0.6})
('recursion (computer science)', 'memoization', {'weight': 0.7})
('recursion (computer science)', 'richard bellman', {'weight': 0.6})
('recursion (computer science)', 'exponential growth', {'weight': 0.6})
('recursion (computer science)', 'charles e. leiserson', {'weight': 0.6})
('recursion (computer science)', 'charles erwin wilson', {'weight': 0.6})
('recursion (computer science)', 'interval scheduling', {'weight': 0.6})
('recursion (computer science)', 'chart parser', {'weight': 0.6})
('recursion (computer science)', 'primitive recursive function', {'weight': 0.7})
('recursion (computer science)', 'travelling salesman problem', {'weight': 0.6})
('recursion (computer science)', 'bellman equation', {'weight': 0.6})
('treewidth', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('treewidth', 'photoshop', {'weight': 0.6})
('treewidth', 'sequence alignment', {'weight': 0.6})
('treewidth', 'flow network', {'weight': 0.6})
('treewidth', 'graph minor theory', {'weight': 0.5})
('treewidth', 'ellipsoid method', {'weight': 0.6})
('treewidth', 'chain matrix multiplication', {'weight': 0.6})
('treewidth', 'ieee', {'weight': 0.6})
('treewidth', 'backtracking', {'weight': 0.6})
('treewidth', 'nonlinear conjugate gradient method', {'weight': 0.6})
('treewidth', 'dynamic problem', {'weight': 0.6})
('treewidth', 'trust region', {'weight': 0.6})
('treewidth', 'function (mathematics)', {'weight': 0.6})
('treewidth', 'minimum spanning tree', {'weight': 0.6})
('treewidth', 'context-free grammar', {'weight': 0.6})
('treewidth', 'branch and cut', {'weight': 0.6})
('treewidth', 'state variable', {'weight': 0.6})
('treewidth', 'treewidth', {'weight': 1})
('treewidth', 'overlapping subproblem', {'weight': 0.6})
('treewidth', 'taylor & francis', {'weight': 0.6})
('treewidth', 'cutting-plane method', {'weight': 0.6})
('treewidth', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('treewidth', 'method of undetermined coefficients', {'weight': 0.6})
('treewidth', 'combinatorial optimization', {'weight': 0.6})
('treewidth', "newton's method in optimization", {'weight': 0.6})
('treewidth', 'matrix chain multiplication', {'weight': 0.6})
('treewidth', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('treewidth', 'dynamic time warping', {'weight': 0.6})
('treewidth', 'dynamic programming language', {'weight': 0.6})
('treewidth', 'call-by-need', {'weight': 0.6})
('treewidth', 'big-o notation', {'weight': 0.6})
('treewidth', 'comparison of optimization software', {'weight': 0.6})
('treewidth', 'quadratic programming', {'weight': 0.6})
('treewidth', 'common lisp', {'weight': 0.6})
('treewidth', 'barrier function', {'weight': 0.6})
('treewidth', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('treewidth', 'gradient descent', {'weight': 0.6})
('treewidth', 'patricia selinger', {'weight': 0.6})
('treewidth', 'discounting', {'weight': 0.6})
('treewidth', 'ronald l. rivest', {'weight': 0.6})
('treewidth', 'iterative method', {'weight': 0.6})
('treewidth', 'limited-memory bfgs', {'weight': 0.6})
('treewidth', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('treewidth', 'longest common substring problem', {'weight': 0.6})
('treewidth', 'clifford stein', {'weight': 0.6})
('treewidth', 'computer chess', {'weight': 0.6})
('treewidth', 'linear programming', {'weight': 0.6})
('treewidth', 'bitonic tour', {'weight': 0.6})
('treewidth', 'linear search problem', {'weight': 0.6})
('treewidth', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('treewidth', 'systems analysis', {'weight': 0.6})
('treewidth', 'capital (economics)', {'weight': 0.6})
('treewidth', 'levenshtein distance', {'weight': 0.6})
('treewidth', 'nonlinear programming', {'weight': 0.6})
('treewidth', 'computational complexity of mathematical operations', {'weight': 0.6})
('treewidth', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('treewidth', 'gradient', {'weight': 0.6})
('treewidth', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('treewidth', 'bulletin of the american mathematical society', {'weight': 0.6})
('treewidth', 'u.s. english', {'weight': 0.6})
('treewidth', 'refutation table', {'weight': 0.6})
('treewidth', 'heuristic algorithm', {'weight': 0.6})
('treewidth', 'successive linear programming', {'weight': 0.6})
('treewidth', 'optimal substructure', {'weight': 0.6})
('treewidth', 'programming language', {'weight': 0.6})
('treewidth', 'mergesort', {'weight': 0.6})
('treewidth', "dijkstra's algorithm", {'weight': 0.6})
('treewidth', 'subgradient method', {'weight': 0.6})
('treewidth', 'call-by-name', {'weight': 0.6})
('treewidth', 'longest increasing subsequence problem', {'weight': 0.6})
('treewidth', 'edward prescott', {'weight': 0.6})
('treewidth', 'exponential time', {'weight': 0.6})
('treewidth', 'principle of optimality', {'weight': 0.6})
('treewidth', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('treewidth', 'mathematical game', {'weight': 0.6})
('treewidth', 'nancy stokey', {'weight': 0.6})
('treewidth', 'approximation algorithm', {'weight': 0.6})
('treewidth', 'discrete-time', {'weight': 0.6})
('treewidth', 'cyk algorithm', {'weight': 0.6})
('treewidth', 'markov decision process', {'weight': 0.6})
('treewidth', "powell's method", {'weight': 0.6})
('treewidth', 'wolfe conditions', {'weight': 0.6})
('treewidth', 'convexity in economics', {'weight': 0.6})
('treewidth', 'transposition table', {'weight': 0.6})
('treewidth', 'economics', {'weight': 0.6})
('treewidth', 'backward induction', {'weight': 0.6})
('treewidth', 'golden section search', {'weight': 0.6})
('treewidth', 'edit distance', {'weight': 0.6})
('treewidth', 'tree structure', {'weight': 0.6})
('treewidth', 'exchange algorithm', {'weight': 0.6})
('treewidth', 'dover publications', {'weight': 0.6})
('treewidth', 'seam carving', {'weight': 0.6})
('treewidth', 'recursive least squares', {'weight': 0.6})
('treewidth', 'metaheuristic', {'weight': 0.6})
('treewidth', 'quasi-newton method', {'weight': 0.6})
('treewidth', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('treewidth', 'robert e. lucas', {'weight': 0.6})
('treewidth', 'non-convexity (economics)', {'weight': 0.6})
('treewidth', 'sr1 formula', {'weight': 0.6})
('treewidth', 'mathematical reviews', {'weight': 0.6})
('treewidth', 'puzzle', {'weight': 0.6})
('treewidth', 'associative array', {'weight': 0.6})
('treewidth', 'shortest path problem', {'weight': 0.6})
('treewidth', 'dynamic algorithm', {'weight': 0.6})
('treewidth', 'augmented lagrangian method', {'weight': 0.6})
('treewidth', 'charles delisi', {'weight': 0.6})
('treewidth', 'greedy algorithm', {'weight': 0.6})
('treewidth', "karmarkar's algorithm", {'weight': 0.6})
('treewidth', 'lattice models', {'weight': 0.6})
('treewidth', 'utility', {'weight': 0.6})
('treewidth', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('treewidth', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('treewidth', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('treewidth', 'international standard book number', {'weight': 0.6})
('treewidth', 'undirected graph', {'weight': 0.6})
('treewidth', 'scheme (programming language)', {'weight': 0.6})
('treewidth', 'rna structure', {'weight': 0.6})
('treewidth', 'hanoi', {'weight': 0.6})
('treewidth', 'perl', {'weight': 0.6})
('treewidth', 'digital object identifier', {'weight': 0.6})
('treewidth', 'sequential quadratic programming', {'weight': 0.6})
('treewidth', "dinic's algorithm", {'weight': 0.6})
('treewidth', 'pseudo-polynomial time', {'weight': 0.6})
('treewidth', 'partition problem', {'weight': 0.6})
('treewidth', 'stochastic programming', {'weight': 0.6})
('treewidth', 'hill climbing', {'weight': 0.6})
('treewidth', 'top-down', {'weight': 0.6})
('treewidth', 'de boor algorithm', {'weight': 0.6})
('treewidth', 'optimization algorithm', {'weight': 0.6})
('treewidth', "kruskal's algorithm", {'weight': 0.6})
('treewidth', 'jacques philippe marie binet', {'weight': 0.6})
('treewidth', 'tabu search', {'weight': 0.6})
('treewidth', 'graph invariants', {'weight': 0.5})
('treewidth', 'divide and conquer algorithm', {'weight': 0.6})
('treewidth', "johnson's algorithm", {'weight': 0.6})
('treewidth', 'evolutionary algorithm', {'weight': 0.6})
('treewidth', 'clique-width', {'weight': 0.6})
('treewidth', 'dynamic programming', {'weight': 0.6})
('treewidth', 'subroutine', {'weight': 0.6})
('treewidth', 'simulated annealing', {'weight': 0.6})
('treewidth', 'tower of hanoi', {'weight': 0.6})
('treewidth', 'branch and bound', {'weight': 0.6})
('treewidth', 'engineering', {'weight': 0.6})
('treewidth', 'matroid', {'weight': 0.6})
('treewidth', 'viterbi algorithm', {'weight': 0.6})
('treewidth', "lemke's algorithm", {'weight': 0.6})
('treewidth', 'simplex algorithm', {'weight': 0.6})
('treewidth', 'local search (optimization)', {'weight': 0.6})
('treewidth', 'hessian matrix', {'weight': 0.6})
('treewidth', 'ibm system r', {'weight': 0.6})
('treewidth', 'penalty method', {'weight': 0.6})
('treewidth', 'prolog', {'weight': 0.6})
('treewidth', 'time-invariant system', {'weight': 0.6})
('treewidth', 'criss-cross algorithm', {'weight': 0.6})
('treewidth', 'revised simplex algorithm', {'weight': 0.6})
('treewidth', 'the mathematical association of america', {'weight': 0.6})
('treewidth', 'line search', {'weight': 0.6})
('treewidth', 'j (programming language)', {'weight': 0.6})
('treewidth', 'word wrap', {'weight': 0.6})
('treewidth', 'subset sum problem', {'weight': 0.6})
('treewidth', 'integer programming', {'weight': 0.6})
('treewidth', 'nucleosome', {'weight': 0.6})
('treewidth', 'earley algorithm', {'weight': 0.6})
('treewidth', 'referential transparency (computer science)', {'weight': 0.6})
('treewidth', 'recursion', {'weight': 0.6})
('treewidth', 'mathematica', {'weight': 0.6})
('treewidth', 'quicksort', {'weight': 0.6})
('treewidth', 'recursion (computer science)', {'weight': 0.6})
('treewidth', 'checkerboard', {'weight': 0.6})
('treewidth', 'computer science', {'weight': 0.6})
('treewidth', 'brute-force search', {'weight': 0.6})
('treewidth', 'mathematics', {'weight': 0.6})
('treewidth', 'depth-first search', {'weight': 0.6})
('treewidth', 'top-down and bottom-up design', {'weight': 0.6})
('treewidth', 'correspondence problem', {'weight': 0.6})
('treewidth', 'transcription factor', {'weight': 0.6})
('treewidth', 'tree decomposition', {'weight': 0.6})
('treewidth', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('treewidth', 'structural alignment', {'weight': 0.6})
('treewidth', 'local convergence', {'weight': 0.6})
('treewidth', 'knapsack problem', {'weight': 0.6})
('treewidth', 'graph algorithm', {'weight': 0.6})
('treewidth', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('treewidth', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('treewidth', 'hidden markov model', {'weight': 0.6})
('treewidth', 'string (computer science)', {'weight': 0.6})
('treewidth', 'bioinformatics', {'weight': 0.6})
('treewidth', 'genetics', {'weight': 0.6})
('treewidth', 'mathematical optimization', {'weight': 0.6})
('treewidth', 'artificial neural networks', {'weight': 0.6})
('treewidth', 'introduction to algorithms', {'weight': 0.6})
('treewidth', 'thomas h. cormen', {'weight': 0.6})
('treewidth', 'music information retrieval', {'weight': 0.6})
('treewidth', 'beat (music)', {'weight': 0.6})
('treewidth', 'longest common subsequence problem', {'weight': 0.6})
('treewidth', 'convex minimization', {'weight': 0.6})
('treewidth', 'successive parabolic interpolation', {'weight': 0.6})
('treewidth', 'fibonacci sequence', {'weight': 0.6})
('treewidth', 'maximum subarray problem', {'weight': 0.6})
('treewidth', 'convex optimization', {'weight': 0.6})
('treewidth', 'memoization', {'weight': 0.6})
('treewidth', 'richard bellman', {'weight': 0.6})
('treewidth', 'exponential growth', {'weight': 0.6})
('treewidth', 'charles e. leiserson', {'weight': 0.6})
('treewidth', 'charles erwin wilson', {'weight': 0.6})
('treewidth', 'interval scheduling', {'weight': 0.6})
('treewidth', 'chart parser', {'weight': 0.6})
('treewidth', 'travelling salesman problem', {'weight': 0.6})
('treewidth', 'bellman equation', {'weight': 0.6})
('overlapping subproblem', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('overlapping subproblem', 'photoshop', {'weight': 0.6})
('overlapping subproblem', 'sequence alignment', {'weight': 0.6})
('overlapping subproblem', 'flow network', {'weight': 0.6})
('overlapping subproblem', 'ellipsoid method', {'weight': 0.6})
('overlapping subproblem', 'chain matrix multiplication', {'weight': 0.6})
('overlapping subproblem', 'ieee', {'weight': 0.6})
('overlapping subproblem', 'backtracking', {'weight': 0.6})
('overlapping subproblem', 'nonlinear conjugate gradient method', {'weight': 0.6})
('overlapping subproblem', 'dynamic problem', {'weight': 0.6})
('overlapping subproblem', 'trust region', {'weight': 0.6})
('overlapping subproblem', 'function (mathematics)', {'weight': 0.6})
('overlapping subproblem', 'minimum spanning tree', {'weight': 0.6})
('overlapping subproblem', 'context-free grammar', {'weight': 0.6})
('overlapping subproblem', 'branch and cut', {'weight': 0.6})
('overlapping subproblem', 'state variable', {'weight': 0.6})
('overlapping subproblem', 'treewidth', {'weight': 0.6})
('overlapping subproblem', 'overlapping subproblem', {'weight': 1})
('overlapping subproblem', 'taylor & francis', {'weight': 0.6})
('overlapping subproblem', 'brute-force search', {'weight': 0.6})
('overlapping subproblem', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('overlapping subproblem', 'method of undetermined coefficients', {'weight': 0.6})
('overlapping subproblem', 'combinatorial optimization', {'weight': 0.6})
('overlapping subproblem', "newton's method in optimization", {'weight': 0.6})
('overlapping subproblem', 'matrix chain multiplication', {'weight': 0.6})
('overlapping subproblem', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('overlapping subproblem', 'dynamic time warping', {'weight': 0.6})
('overlapping subproblem', 'dynamic programming language', {'weight': 0.6})
('overlapping subproblem', 'call-by-need', {'weight': 0.6})
('overlapping subproblem', 'big-o notation', {'weight': 0.6})
('overlapping subproblem', 'comparison of optimization software', {'weight': 0.6})
('overlapping subproblem', 'quadratic programming', {'weight': 0.6})
('overlapping subproblem', 'common lisp', {'weight': 0.6})
('overlapping subproblem', 'barrier function', {'weight': 0.6})
('overlapping subproblem', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('overlapping subproblem', 'gradient descent', {'weight': 0.6})
('overlapping subproblem', 'patricia selinger', {'weight': 0.6})
('overlapping subproblem', 'discounting', {'weight': 0.6})
('overlapping subproblem', 'ronald l. rivest', {'weight': 0.6})
('overlapping subproblem', 'iterative method', {'weight': 0.6})
('overlapping subproblem', 'limited-memory bfgs', {'weight': 0.6})
('overlapping subproblem', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('overlapping subproblem', 'longest common substring problem', {'weight': 0.6})
('overlapping subproblem', 'clifford stein', {'weight': 0.6})
('overlapping subproblem', 'computer chess', {'weight': 0.6})
('overlapping subproblem', 'linear programming', {'weight': 0.6})
('overlapping subproblem', 'bitonic tour', {'weight': 0.6})
('overlapping subproblem', 'linear search problem', {'weight': 0.6})
('overlapping subproblem', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('overlapping subproblem', 'systems analysis', {'weight': 0.6})
('overlapping subproblem', 'cutting-plane method', {'weight': 0.6})
('overlapping subproblem', 'capital (economics)', {'weight': 0.6})
('overlapping subproblem', 'levenshtein distance', {'weight': 0.6})
('overlapping subproblem', 'nonlinear programming', {'weight': 0.6})
('overlapping subproblem', 'computational complexity of mathematical operations', {'weight': 0.6})
('overlapping subproblem', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('overlapping subproblem', 'gradient', {'weight': 0.6})
('overlapping subproblem', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('overlapping subproblem', 'bulletin of the american mathematical society', {'weight': 0.6})
('overlapping subproblem', 'u.s. english', {'weight': 0.6})
('overlapping subproblem', 'refutation table', {'weight': 0.6})
('overlapping subproblem', 'heuristic algorithm', {'weight': 0.6})
('overlapping subproblem', 'successive linear programming', {'weight': 0.6})
('overlapping subproblem', 'optimal substructure', {'weight': 0.6})
('overlapping subproblem', 'programming language', {'weight': 0.6})
('overlapping subproblem', 'mergesort', {'weight': 0.6})
('overlapping subproblem', "dijkstra's algorithm", {'weight': 0.6})
('overlapping subproblem', 'subgradient method', {'weight': 0.6})
('overlapping subproblem', 'call-by-name', {'weight': 0.6})
('overlapping subproblem', 'longest increasing subsequence problem', {'weight': 0.6})
('overlapping subproblem', 'edward prescott', {'weight': 0.6})
('overlapping subproblem', 'exponential time', {'weight': 0.6})
('overlapping subproblem', 'principle of optimality', {'weight': 0.6})
('overlapping subproblem', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('overlapping subproblem', 'mathematical game', {'weight': 0.6})
('overlapping subproblem', 'nancy stokey', {'weight': 0.6})
('overlapping subproblem', 'approximation algorithm', {'weight': 0.6})
('overlapping subproblem', 'discrete-time', {'weight': 0.6})
('overlapping subproblem', 'cyk algorithm', {'weight': 0.6})
('overlapping subproblem', 'markov decision process', {'weight': 0.6})
('overlapping subproblem', "powell's method", {'weight': 0.6})
('overlapping subproblem', 'wolfe conditions', {'weight': 0.6})
('overlapping subproblem', 'convexity in economics', {'weight': 0.6})
('overlapping subproblem', 'transposition table', {'weight': 0.6})
('overlapping subproblem', 'economics', {'weight': 0.6})
('overlapping subproblem', 'backward induction', {'weight': 0.6})
('overlapping subproblem', 'golden section search', {'weight': 0.6})
('overlapping subproblem', 'edit distance', {'weight': 0.6})
('overlapping subproblem', 'tree structure', {'weight': 0.6})
('overlapping subproblem', 'exchange algorithm', {'weight': 0.6})
('overlapping subproblem', 'dover publications', {'weight': 0.6})
('overlapping subproblem', 'seam carving', {'weight': 0.6})
('overlapping subproblem', 'recursive least squares', {'weight': 0.6})
('overlapping subproblem', 'metaheuristic', {'weight': 0.6})
('overlapping subproblem', 'quasi-newton method', {'weight': 0.6})
('overlapping subproblem', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('overlapping subproblem', 'robert e. lucas', {'weight': 0.6})
('overlapping subproblem', 'non-convexity (economics)', {'weight': 0.6})
('overlapping subproblem', 'sr1 formula', {'weight': 0.6})
('overlapping subproblem', 'mathematical reviews', {'weight': 0.6})
('overlapping subproblem', 'puzzle', {'weight': 0.6})
('overlapping subproblem', 'associative array', {'weight': 0.6})
('overlapping subproblem', 'shortest path problem', {'weight': 0.6})
('overlapping subproblem', 'dynamic algorithm', {'weight': 0.6})
('overlapping subproblem', 'augmented lagrangian method', {'weight': 0.6})
('overlapping subproblem', 'charles delisi', {'weight': 0.6})
('overlapping subproblem', 'greedy algorithm', {'weight': 0.6})
('overlapping subproblem', "karmarkar's algorithm", {'weight': 0.6})
('overlapping subproblem', 'lattice models', {'weight': 0.6})
('overlapping subproblem', 'utility', {'weight': 0.6})
('overlapping subproblem', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('overlapping subproblem', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('overlapping subproblem', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('overlapping subproblem', 'international standard book number', {'weight': 0.6})
('overlapping subproblem', 'undirected graph', {'weight': 0.6})
('overlapping subproblem', 'scheme (programming language)', {'weight': 0.6})
('overlapping subproblem', 'rna structure', {'weight': 0.6})
('overlapping subproblem', 'hanoi', {'weight': 0.6})
('overlapping subproblem', 'perl', {'weight': 0.6})
('overlapping subproblem', 'digital object identifier', {'weight': 0.6})
('overlapping subproblem', 'sequential quadratic programming', {'weight': 0.6})
('overlapping subproblem', "dinic's algorithm", {'weight': 0.6})
('overlapping subproblem', 'pseudo-polynomial time', {'weight': 0.6})
('overlapping subproblem', 'partition problem', {'weight': 0.6})
('overlapping subproblem', 'stochastic programming', {'weight': 0.6})
('overlapping subproblem', 'hill climbing', {'weight': 0.6})
('overlapping subproblem', 'top-down', {'weight': 0.6})
('overlapping subproblem', 'de boor algorithm', {'weight': 0.6})
('overlapping subproblem', 'optimization algorithm', {'weight': 0.6})
('overlapping subproblem', "kruskal's algorithm", {'weight': 0.6})
('overlapping subproblem', 'jacques philippe marie binet', {'weight': 0.6})
('overlapping subproblem', 'tabu search', {'weight': 0.6})
('overlapping subproblem', 'divide and conquer algorithm', {'weight': 0.6})
('overlapping subproblem', "johnson's algorithm", {'weight': 0.6})
('overlapping subproblem', 'evolutionary algorithm', {'weight': 0.6})
('overlapping subproblem', 'clique-width', {'weight': 0.6})
('overlapping subproblem', 'dynamic programming', {'weight': 0.6})
('overlapping subproblem', 'subroutine', {'weight': 0.6})
('overlapping subproblem', 'simulated annealing', {'weight': 0.6})
('overlapping subproblem', 'tower of hanoi', {'weight': 0.6})
('overlapping subproblem', 'branch and bound', {'weight': 0.6})
('overlapping subproblem', 'engineering', {'weight': 0.6})
('overlapping subproblem', 'matroid', {'weight': 0.6})
('overlapping subproblem', 'viterbi algorithm', {'weight': 0.6})
('overlapping subproblem', "lemke's algorithm", {'weight': 0.6})
('overlapping subproblem', 'simplex algorithm', {'weight': 0.6})
('overlapping subproblem', 'local search (optimization)', {'weight': 0.6})
('overlapping subproblem', 'hessian matrix', {'weight': 0.6})
('overlapping subproblem', 'ibm system r', {'weight': 0.6})
('overlapping subproblem', 'penalty method', {'weight': 0.6})
('overlapping subproblem', 'prolog', {'weight': 0.6})
('overlapping subproblem', 'time-invariant system', {'weight': 0.6})
('overlapping subproblem', 'criss-cross algorithm', {'weight': 0.6})
('overlapping subproblem', 'revised simplex algorithm', {'weight': 0.6})
('overlapping subproblem', 'the mathematical association of america', {'weight': 0.6})
('overlapping subproblem', 'line search', {'weight': 0.6})
('overlapping subproblem', 'j (programming language)', {'weight': 0.6})
('overlapping subproblem', 'word wrap', {'weight': 0.6})
('overlapping subproblem', 'subset sum problem', {'weight': 0.6})
('overlapping subproblem', 'integer programming', {'weight': 0.6})
('overlapping subproblem', 'nucleosome', {'weight': 0.6})
('overlapping subproblem', 'earley algorithm', {'weight': 0.6})
('overlapping subproblem', 'referential transparency (computer science)', {'weight': 0.6})
('overlapping subproblem', 'recursion', {'weight': 0.6})
('overlapping subproblem', 'mathematica', {'weight': 0.6})
('overlapping subproblem', 'quicksort', {'weight': 0.6})
('overlapping subproblem', 'recursion (computer science)', {'weight': 0.6})
('overlapping subproblem', 'checkerboard', {'weight': 0.6})
('overlapping subproblem', 'computer science', {'weight': 0.6})
('overlapping subproblem', 'computer science stubs', {'weight': 0.5})
('overlapping subproblem', 'mathematics', {'weight': 0.6})
('overlapping subproblem', 'depth-first search', {'weight': 0.6})
('overlapping subproblem', 'top-down and bottom-up design', {'weight': 0.6})
('overlapping subproblem', 'correspondence problem', {'weight': 0.6})
('overlapping subproblem', 'transcription factor', {'weight': 0.6})
('overlapping subproblem', 'tree decomposition', {'weight': 0.6})
('overlapping subproblem', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('overlapping subproblem', 'structural alignment', {'weight': 0.6})
('overlapping subproblem', 'local convergence', {'weight': 0.6})
('overlapping subproblem', 'knapsack problem', {'weight': 0.6})
('overlapping subproblem', 'graph algorithm', {'weight': 0.6})
('overlapping subproblem', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('overlapping subproblem', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('overlapping subproblem', 'hidden markov model', {'weight': 0.6})
('overlapping subproblem', 'string (computer science)', {'weight': 0.6})
('overlapping subproblem', 'bioinformatics', {'weight': 0.6})
('overlapping subproblem', 'genetics', {'weight': 0.6})
('overlapping subproblem', 'mathematical optimization', {'weight': 0.6})
('overlapping subproblem', 'artificial neural networks', {'weight': 0.6})
('overlapping subproblem', 'introduction to algorithms', {'weight': 0.6})
('overlapping subproblem', 'thomas h. cormen', {'weight': 0.6})
('overlapping subproblem', 'music information retrieval', {'weight': 0.6})
('overlapping subproblem', 'beat (music)', {'weight': 0.6})
('overlapping subproblem', 'longest common subsequence problem', {'weight': 0.6})
('overlapping subproblem', 'convex minimization', {'weight': 0.6})
('overlapping subproblem', 'successive parabolic interpolation', {'weight': 0.6})
('overlapping subproblem', 'fibonacci sequence', {'weight': 0.6})
('overlapping subproblem', 'maximum subarray problem', {'weight': 0.6})
('overlapping subproblem', 'convex optimization', {'weight': 0.6})
('overlapping subproblem', 'memoization', {'weight': 0.6})
('overlapping subproblem', 'richard bellman', {'weight': 0.6})
('overlapping subproblem', 'exponential growth', {'weight': 0.6})
('overlapping subproblem', 'charles e. leiserson', {'weight': 0.6})
('overlapping subproblem', 'charles erwin wilson', {'weight': 0.6})
('overlapping subproblem', 'interval scheduling', {'weight': 0.6})
('overlapping subproblem', 'chart parser', {'weight': 0.6})
('overlapping subproblem', 'travelling salesman problem', {'weight': 0.6})
('overlapping subproblem', 'bellman equation', {'weight': 0.6})
('digital object identifier', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('digital object identifier', 'photoshop', {'weight': 0.6})
('digital object identifier', 'sequence alignment', {'weight': 0.6})
('digital object identifier', 'flow network', {'weight': 0.6})
('digital object identifier', 'orcid', {'weight': 0.7})
('digital object identifier', 'ellipsoid method', {'weight': 0.6})
('digital object identifier', 'chain matrix multiplication', {'weight': 0.6})
('digital object identifier', 'ieee', {'weight': 0.6})
('digital object identifier', 'backtracking', {'weight': 0.6})
('digital object identifier', 'nonlinear conjugate gradient method', {'weight': 0.6})
('digital object identifier', 'dynamic problem', {'weight': 0.6})
('digital object identifier', 'trust region', {'weight': 0.6})
('digital object identifier', 'function (mathematics)', {'weight': 0.6})
('digital object identifier', 'minimum spanning tree', {'weight': 0.6})
('digital object identifier', 'context-free grammar', {'weight': 0.6})
('digital object identifier', 'branch and cut', {'weight': 0.6})
('digital object identifier', 'state variable', {'weight': 0.6})
('digital object identifier', 'object identifier', {'weight': 0.7})
('digital object identifier', 'treewidth', {'weight': 0.6})
('digital object identifier', 'overlapping subproblem', {'weight': 0.6})
('digital object identifier', 'taylor & francis', {'weight': 0.6})
('digital object identifier', 'indexing', {'weight': 0.5})
('digital object identifier', 'cutting-plane method', {'weight': 0.6})
('digital object identifier', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('digital object identifier', 'method of undetermined coefficients', {'weight': 0.6})
('digital object identifier', 'combinatorial optimization', {'weight': 0.6})
('digital object identifier', "newton's method in optimization", {'weight': 0.6})
('digital object identifier', 'metadata standards', {'weight': 0.7})
('digital object identifier', 'matrix chain multiplication', {'weight': 0.6})
('digital object identifier', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('digital object identifier', 'crossref', {'weight': 0.7})
('digital object identifier', 'dynamic time warping', {'weight': 0.6})
('digital object identifier', 'dynamic programming language', {'weight': 0.6})
('digital object identifier', 'call-by-need', {'weight': 0.6})
('digital object identifier', 'big-o notation', {'weight': 0.6})
('digital object identifier', 'comparison of optimization software', {'weight': 0.6})
('digital object identifier', 'quadratic programming', {'weight': 0.6})
('digital object identifier', 'common lisp', {'weight': 0.6})
('digital object identifier', 'barrier function', {'weight': 0.6})
('digital object identifier', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('digital object identifier', 'gradient descent', {'weight': 0.6})
('digital object identifier', 'patricia selinger', {'weight': 0.6})
('digital object identifier', 'discounting', {'weight': 0.6})
('digital object identifier', 'ronald l. rivest', {'weight': 0.6})
('digital object identifier', 'iterative method', {'weight': 0.6})
('digital object identifier', 'limited-memory bfgs', {'weight': 0.6})
('digital object identifier', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('digital object identifier', 'longest common substring problem', {'weight': 0.6})
('digital object identifier', 'clifford stein', {'weight': 0.6})
('digital object identifier', 'computer chess', {'weight': 0.6})
('digital object identifier', 'linear programming', {'weight': 0.6})
('digital object identifier', 'bitonic tour', {'weight': 0.6})
('digital object identifier', 'linear search problem', {'weight': 0.6})
('digital object identifier', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('digital object identifier', 'systems analysis', {'weight': 0.6})
('digital object identifier', 'capital (economics)', {'weight': 0.6})
('digital object identifier', 'levenshtein distance', {'weight': 0.6})
('digital object identifier', 'nonlinear programming', {'weight': 0.6})
('digital object identifier', 'computational complexity of mathematical operations', {'weight': 0.6})
('digital object identifier', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('digital object identifier', 'gradient', {'weight': 0.6})
('digital object identifier', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('digital object identifier', 'bulletin of the american mathematical society', {'weight': 0.6})
('digital object identifier', 'u.s. english', {'weight': 0.6})
('digital object identifier', 'refutation table', {'weight': 0.6})
('digital object identifier', 'heuristic algorithm', {'weight': 0.6})
('digital object identifier', 'successive linear programming', {'weight': 0.6})
('digital object identifier', 'optimal substructure', {'weight': 0.6})
('digital object identifier', 'programming language', {'weight': 0.6})
('digital object identifier', 'mergesort', {'weight': 0.6})
('digital object identifier', "dijkstra's algorithm", {'weight': 0.6})
('digital object identifier', 'subgradient method', {'weight': 0.6})
('digital object identifier', 'digital identity', {'weight': 0.7})
('digital object identifier', 'call-by-name', {'weight': 0.6})
('digital object identifier', 'longest increasing subsequence problem', {'weight': 0.6})
('digital object identifier', 'edward prescott', {'weight': 0.6})
('digital object identifier', 'exponential time', {'weight': 0.6})
('digital object identifier', 'principle of optimality', {'weight': 0.6})
('digital object identifier', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('digital object identifier', 'mathematical game', {'weight': 0.6})
('digital object identifier', 'nancy stokey', {'weight': 0.6})
('digital object identifier', 'approximation algorithm', {'weight': 0.6})
('digital object identifier', 'discrete-time', {'weight': 0.6})
('digital object identifier', 'cyk algorithm', {'weight': 0.6})
('digital object identifier', 'markov decision process', {'weight': 0.6})
('digital object identifier', "powell's method", {'weight': 0.6})
('digital object identifier', 'wolfe conditions', {'weight': 0.6})
('digital object identifier', 'convexity in economics', {'weight': 0.6})
('digital object identifier', 'criss-cross algorithm', {'weight': 0.6})
('digital object identifier', 'transposition table', {'weight': 0.6})
('digital object identifier', 'economics', {'weight': 0.6})
('digital object identifier', 'backward induction', {'weight': 0.6})
('digital object identifier', 'golden section search', {'weight': 0.6})
('digital object identifier', 'edit distance', {'weight': 0.6})
('digital object identifier', 'tree structure', {'weight': 0.6})
('digital object identifier', 'exchange algorithm', {'weight': 0.6})
('digital object identifier', 'dover publications', {'weight': 0.6})
('digital object identifier', 'seam carving', {'weight': 0.6})
('digital object identifier', 'recursive least squares', {'weight': 0.6})
('digital object identifier', 'metaheuristic', {'weight': 0.6})
('digital object identifier', 'quasi-newton method', {'weight': 0.6})
('digital object identifier', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('digital object identifier', 'robert e. lucas', {'weight': 0.6})
('digital object identifier', 'non-convexity (economics)', {'weight': 0.6})
('digital object identifier', 'sr1 formula', {'weight': 0.6})
('digital object identifier', 'mathematical reviews', {'weight': 0.6})
('digital object identifier', 'datacite', {'weight': 0.7})
('digital object identifier', 'puzzle', {'weight': 0.6})
('digital object identifier', 'associative array', {'weight': 0.6})
('digital object identifier', 'shortest path problem', {'weight': 0.6})
('digital object identifier', 'dynamic algorithm', {'weight': 0.6})
('digital object identifier', 'augmented lagrangian method', {'weight': 0.6})
('digital object identifier', 'charles delisi', {'weight': 0.6})
('digital object identifier', 'greedy algorithm', {'weight': 0.6})
('digital object identifier', "karmarkar's algorithm", {'weight': 0.6})
('digital object identifier', 'lattice models', {'weight': 0.6})
('digital object identifier', 'utility', {'weight': 0.6})
('digital object identifier', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('digital object identifier', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('digital object identifier', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('digital object identifier', 'international standard book number', {'weight': 0.6})
('digital object identifier', 'undirected graph', {'weight': 0.6})
('digital object identifier', 'scheme (programming language)', {'weight': 0.6})
('digital object identifier', 'rna structure', {'weight': 0.6})
('digital object identifier', 'hanoi', {'weight': 0.6})
('digital object identifier', 'perl', {'weight': 0.6})
('digital object identifier', 'digital object identifier', {'weight': 1})
('digital object identifier', 'sequential quadratic programming', {'weight': 0.6})
('digital object identifier', "dinic's algorithm", {'weight': 0.6})
('digital object identifier', 'pseudo-polynomial time', {'weight': 0.6})
('digital object identifier', 'partition problem', {'weight': 0.6})
('digital object identifier', 'stochastic programming', {'weight': 0.6})
('digital object identifier', 'hill climbing', {'weight': 0.6})
('digital object identifier', 'top-down', {'weight': 0.6})
('digital object identifier', 'de boor algorithm', {'weight': 0.6})
('digital object identifier', 'optimization algorithm', {'weight': 0.6})
('digital object identifier', "kruskal's algorithm", {'weight': 0.6})
('digital object identifier', 'electronic documents', {'weight': 0.5})
('digital object identifier', 'permalink', {'weight': 0.7})
('digital object identifier', 'jacques philippe marie binet', {'weight': 0.6})
('digital object identifier', 'tabu search', {'weight': 0.6})
('digital object identifier', 'divide and conquer algorithm', {'weight': 0.6})
('digital object identifier', "johnson's algorithm", {'weight': 0.6})
('digital object identifier', 'evolutionary algorithm', {'weight': 0.6})
('digital object identifier', 'clique-width', {'weight': 0.6})
('digital object identifier', 'dynamic programming', {'weight': 0.6})
('digital object identifier', 'subroutine', {'weight': 0.6})
('digital object identifier', 'simulated annealing', {'weight': 0.6})
('digital object identifier', 'tower of hanoi', {'weight': 0.6})
('digital object identifier', 'branch and bound', {'weight': 0.6})
('digital object identifier', 'engineering', {'weight': 0.6})
('digital object identifier', 'matroid', {'weight': 0.6})
('digital object identifier', 'viterbi algorithm', {'weight': 0.6})
('digital object identifier', "lemke's algorithm", {'weight': 0.6})
('digital object identifier', 'simplex algorithm', {'weight': 0.6})
('digital object identifier', 'local search (optimization)', {'weight': 0.6})
('digital object identifier', 'hessian matrix', {'weight': 0.6})
('digital object identifier', 'ibm system r', {'weight': 0.6})
('digital object identifier', 'penalty method', {'weight': 0.6})
('digital object identifier', 'prolog', {'weight': 0.6})
('digital object identifier', 'time-invariant system', {'weight': 0.6})
('digital object identifier', 'convex optimization', {'weight': 0.6})
('digital object identifier', 'revised simplex algorithm', {'weight': 0.6})
('digital object identifier', 'the mathematical association of america', {'weight': 0.6})
('digital object identifier', 'line search', {'weight': 0.6})
('digital object identifier', 'j (programming language)', {'weight': 0.6})
('digital object identifier', 'publisher item identifier', {'weight': 0.7})
('digital object identifier', 'word wrap', {'weight': 0.6})
('digital object identifier', 'subset sum problem', {'weight': 0.6})
('digital object identifier', 'integer programming', {'weight': 0.6})
('digital object identifier', 'nucleosome', {'weight': 0.6})
('digital object identifier', 'earley algorithm', {'weight': 0.6})
('digital object identifier', 'referential transparency (computer science)', {'weight': 0.6})
('digital object identifier', 'scientific literature', {'weight': 0.7})
('digital object identifier', 'recursion', {'weight': 0.6})
('digital object identifier', 'mathematica', {'weight': 0.6})
('digital object identifier', 'quicksort', {'weight': 0.6})
('digital object identifier', 'recursion (computer science)', {'weight': 0.6})
('digital object identifier', 'checkerboard', {'weight': 0.6})
('digital object identifier', 'computer science', {'weight': 0.6})
('digital object identifier', 'academic publishing', {'weight': 0.5})
('digital object identifier', 'brute-force search', {'weight': 0.6})
('digital object identifier', 'mathematics', {'weight': 0.6})
('digital object identifier', 'pmid', {'weight': 0.7})
('digital object identifier', 'depth-first search', {'weight': 0.6})
('digital object identifier', 'top-down and bottom-up design', {'weight': 0.6})
('digital object identifier', 'correspondence problem', {'weight': 0.6})
('digital object identifier', 'transcription factor', {'weight': 0.6})
('digital object identifier', 'tree decomposition', {'weight': 0.6})
('digital object identifier', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('digital object identifier', 'structural alignment', {'weight': 0.6})
('digital object identifier', 'local convergence', {'weight': 0.6})
('digital object identifier', 'knapsack problem', {'weight': 0.6})
('digital object identifier', 'graph algorithm', {'weight': 0.6})
('digital object identifier', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('digital object identifier', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('digital object identifier', 'hidden markov model', {'weight': 0.6})
('digital object identifier', 'string (computer science)', {'weight': 0.6})
('digital object identifier', 'bioinformatics', {'weight': 0.6})
('digital object identifier', 'genetics', {'weight': 0.6})
('digital object identifier', 'mathematical optimization', {'weight': 0.6})
('digital object identifier', 'artificial neural networks', {'weight': 0.6})
('digital object identifier', 'introduction to algorithms', {'weight': 0.6})
('digital object identifier', 'thomas h. cormen', {'weight': 0.6})
('digital object identifier', 'universally unique identifier', {'weight': 0.7})
('digital object identifier', 'music information retrieval', {'weight': 0.6})
('digital object identifier', 'beat (music)', {'weight': 0.6})
('digital object identifier', 'longest common subsequence problem', {'weight': 0.6})
('digital object identifier', 'convex minimization', {'weight': 0.6})
('digital object identifier', 'successive parabolic interpolation', {'weight': 0.6})
('digital object identifier', 'fibonacci sequence', {'weight': 0.6})
('digital object identifier', 'maximum subarray problem', {'weight': 0.6})
('digital object identifier', 'identifiers', {'weight': 0.5})
('digital object identifier', 'memoization', {'weight': 0.6})
('digital object identifier', 'richard bellman', {'weight': 0.6})
('digital object identifier', 'exponential growth', {'weight': 0.6})
('digital object identifier', 'charles e. leiserson', {'weight': 0.6})
('digital object identifier', 'charles erwin wilson', {'weight': 0.6})
('digital object identifier', 'interval scheduling', {'weight': 0.6})
('digital object identifier', 'chart parser', {'weight': 0.6})
('digital object identifier', 'travelling salesman problem', {'weight': 0.6})
('digital object identifier', 'bellman equation', {'weight': 0.6})
('dynamic time warping', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('dynamic time warping', 'photoshop', {'weight': 0.6})
('dynamic time warping', 'sequence alignment', {'weight': 0.6})
('dynamic time warping', 'flow network', {'weight': 0.6})
('dynamic time warping', 'ellipsoid method', {'weight': 0.6})
('dynamic time warping', 'chain matrix multiplication', {'weight': 0.6})
('dynamic time warping', 'ieee', {'weight': 0.6})
('dynamic time warping', 'backtracking', {'weight': 0.6})
('dynamic time warping', 'nonlinear conjugate gradient method', {'weight': 0.6})
('dynamic time warping', 'time series analysis', {'weight': 0.5})
('dynamic time warping', 'dynamic problem', {'weight': 0.6})
('dynamic time warping', 'trust region', {'weight': 0.6})
('dynamic time warping', 'function (mathematics)', {'weight': 0.6})
('dynamic time warping', 'minimum spanning tree', {'weight': 0.6})
('dynamic time warping', 'context-free grammar', {'weight': 0.6})
('dynamic time warping', 'branch and cut', {'weight': 0.6})
('dynamic time warping', 'state variable', {'weight': 0.6})
('dynamic time warping', 'treewidth', {'weight': 0.6})
('dynamic time warping', 'overlapping subproblem', {'weight': 0.6})
('dynamic time warping', 'taylor & francis', {'weight': 0.6})
('dynamic time warping', 'cutting-plane method', {'weight': 0.6})
('dynamic time warping', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('dynamic time warping', 'method of undetermined coefficients', {'weight': 0.6})
('dynamic time warping', 'combinatorial optimization', {'weight': 0.6})
('dynamic time warping', "newton's method in optimization", {'weight': 0.6})
('dynamic time warping', 'matrix chain multiplication', {'weight': 0.6})
('dynamic time warping', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('dynamic time warping', 'dynamic time warping', {'weight': 1})
('dynamic time warping', 'dynamic programming language', {'weight': 0.6})
('dynamic time warping', 'call-by-need', {'weight': 0.6})
('dynamic time warping', 'big-o notation', {'weight': 0.6})
('dynamic time warping', 'comparison of optimization software', {'weight': 0.6})
('dynamic time warping', 'quadratic programming', {'weight': 0.6})
('dynamic time warping', 'common lisp', {'weight': 0.6})
('dynamic time warping', 'barrier function', {'weight': 0.6})
('dynamic time warping', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('dynamic time warping', 'gradient descent', {'weight': 0.6})
('dynamic time warping', 'patricia selinger', {'weight': 0.6})
('dynamic time warping', 'discounting', {'weight': 0.6})
('dynamic time warping', 'ronald l. rivest', {'weight': 0.6})
('dynamic time warping', 'iterative method', {'weight': 0.6})
('dynamic time warping', 'limited-memory bfgs', {'weight': 0.6})
('dynamic time warping', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('dynamic time warping', 'longest common substring problem', {'weight': 0.6})
('dynamic time warping', 'clifford stein', {'weight': 0.6})
('dynamic time warping', 'computer chess', {'weight': 0.6})
('dynamic time warping', 'linear programming', {'weight': 0.6})
('dynamic time warping', 'bitonic tour', {'weight': 0.6})
('dynamic time warping', 'linear search problem', {'weight': 0.6})
('dynamic time warping', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('dynamic time warping', 'systems analysis', {'weight': 0.6})
('dynamic time warping', 'capital (economics)', {'weight': 0.6})
('dynamic time warping', 'levenshtein distance', {'weight': 0.7})
('dynamic time warping', 'nonlinear programming', {'weight': 0.6})
('dynamic time warping', 'computational complexity of mathematical operations', {'weight': 0.6})
('dynamic time warping', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('dynamic time warping', 'gradient', {'weight': 0.6})
('dynamic time warping', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('dynamic time warping', 'bulletin of the american mathematical society', {'weight': 0.6})
('dynamic time warping', 'u.s. english', {'weight': 0.6})
('dynamic time warping', 'refutation table', {'weight': 0.6})
('dynamic time warping', 'heuristic algorithm', {'weight': 0.6})
('dynamic time warping', 'successive linear programming', {'weight': 0.6})
('dynamic time warping', 'optimal substructure', {'weight': 0.6})
('dynamic time warping', 'elastic matching', {'weight': 0.7})
('dynamic time warping', 'programming language', {'weight': 0.6})
('dynamic time warping', 'mergesort', {'weight': 0.6})
('dynamic time warping', "dijkstra's algorithm", {'weight': 0.6})
('dynamic time warping', 'subgradient method', {'weight': 0.6})
('dynamic time warping', 'call-by-name', {'weight': 0.6})
('dynamic time warping', 'longest increasing subsequence problem', {'weight': 0.6})
('dynamic time warping', 'edward prescott', {'weight': 0.6})
('dynamic time warping', 'exponential time', {'weight': 0.6})
('dynamic time warping', 'principle of optimality', {'weight': 0.6})
('dynamic time warping', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('dynamic time warping', 'mathematical game', {'weight': 0.6})
('dynamic time warping', 'nancy stokey', {'weight': 0.6})
('dynamic time warping', 'approximation algorithm', {'weight': 0.6})
('dynamic time warping', 'discrete-time', {'weight': 0.6})
('dynamic time warping', 'cyk algorithm', {'weight': 0.6})
('dynamic time warping', 'markov decision process', {'weight': 0.6})
('dynamic time warping', "powell's method", {'weight': 0.6})
('dynamic time warping', 'wolfe conditions', {'weight': 0.6})
('dynamic time warping', 'convexity in economics', {'weight': 0.6})
('dynamic time warping', 'transposition table', {'weight': 0.6})
('dynamic time warping', 'penalty method', {'weight': 0.6})
('dynamic time warping', 'economics', {'weight': 0.6})
('dynamic time warping', 'backward induction', {'weight': 0.6})
('dynamic time warping', 'golden section search', {'weight': 0.6})
('dynamic time warping', 'edit distance', {'weight': 0.6})
('dynamic time warping', 'tree structure', {'weight': 0.6})
('dynamic time warping', 'exchange algorithm', {'weight': 0.6})
('dynamic time warping', 'dover publications', {'weight': 0.6})
('dynamic time warping', 'seam carving', {'weight': 0.6})
('dynamic time warping', 'recursive least squares', {'weight': 0.6})
('dynamic time warping', 'metaheuristic', {'weight': 0.6})
('dynamic time warping', 'quasi-newton method', {'weight': 0.6})
('dynamic time warping', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('dynamic time warping', 'robert e. lucas', {'weight': 0.6})
('dynamic time warping', 'non-convexity (economics)', {'weight': 0.6})
('dynamic time warping', 'sr1 formula', {'weight': 0.6})
('dynamic time warping', 'mathematical reviews', {'weight': 0.6})
('dynamic time warping', 'puzzle', {'weight': 0.6})
('dynamic time warping', 'associative array', {'weight': 0.6})
('dynamic time warping', 'shortest path problem', {'weight': 0.6})
('dynamic time warping', 'dynamic algorithm', {'weight': 0.6})
('dynamic time warping', 'augmented lagrangian method', {'weight': 0.6})
('dynamic time warping', 'charles delisi', {'weight': 0.6})
('dynamic time warping', 'greedy algorithm', {'weight': 0.6})
('dynamic time warping', "karmarkar's algorithm", {'weight': 0.6})
('dynamic time warping', 'lattice models', {'weight': 0.6})
('dynamic time warping', 'utility', {'weight': 0.6})
('dynamic time warping', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('dynamic time warping', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('dynamic time warping', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('dynamic time warping', 'international standard book number', {'weight': 0.6})
('dynamic time warping', 'undirected graph', {'weight': 0.6})
('dynamic time warping', 'scheme (programming language)', {'weight': 0.6})
('dynamic time warping', 'rna structure', {'weight': 0.6})
('dynamic time warping', 'hanoi', {'weight': 0.6})
('dynamic time warping', 'perl', {'weight': 0.6})
('dynamic time warping', 'digital object identifier', {'weight': 0.6})
('dynamic time warping', 'sequential quadratic programming', {'weight': 0.6})
('dynamic time warping', "dinic's algorithm", {'weight': 0.6})
('dynamic time warping', 'pseudo-polynomial time', {'weight': 0.6})
('dynamic time warping', 'partition problem', {'weight': 0.6})
('dynamic time warping', 'stochastic programming', {'weight': 0.6})
('dynamic time warping', 'hill climbing', {'weight': 0.6})
('dynamic time warping', 'top-down', {'weight': 0.6})
('dynamic time warping', 'de boor algorithm', {'weight': 0.6})
('dynamic time warping', 'optimization algorithm', {'weight': 0.6})
('dynamic time warping', "kruskal's algorithm", {'weight': 0.6})
('dynamic time warping', 'jacques philippe marie binet', {'weight': 0.6})
('dynamic time warping', 'tabu search', {'weight': 0.6})
('dynamic time warping', 'divide and conquer algorithm', {'weight': 0.6})
('dynamic time warping', "johnson's algorithm", {'weight': 0.6})
('dynamic time warping', 'evolutionary algorithm', {'weight': 0.6})
('dynamic time warping', 'clique-width', {'weight': 0.6})
('dynamic time warping', 'dynamic programming', {'weight': 0.6})
('dynamic time warping', 'subroutine', {'weight': 0.6})
('dynamic time warping', 'simulated annealing', {'weight': 0.6})
('dynamic time warping', 'tower of hanoi', {'weight': 0.6})
('dynamic time warping', 'branch and bound', {'weight': 0.6})
('dynamic time warping', 'engineering', {'weight': 0.6})
('dynamic time warping', 'matroid', {'weight': 0.6})
('dynamic time warping', 'viterbi algorithm', {'weight': 0.6})
('dynamic time warping', "lemke's algorithm", {'weight': 0.6})
('dynamic time warping', 'simplex algorithm', {'weight': 0.6})
('dynamic time warping', 'local search (optimization)', {'weight': 0.6})
('dynamic time warping', 'hessian matrix', {'weight': 0.6})
('dynamic time warping', 'ibm system r', {'weight': 0.6})
('dynamic time warping', 'machine learning algorithms', {'weight': 0.5})
('dynamic time warping', 'prolog', {'weight': 0.6})
('dynamic time warping', 'time-invariant system', {'weight': 0.6})
('dynamic time warping', 'criss-cross algorithm', {'weight': 0.6})
('dynamic time warping', 'revised simplex algorithm', {'weight': 0.6})
('dynamic time warping', 'the mathematical association of america', {'weight': 0.6})
('dynamic time warping', 'line search', {'weight': 0.6})
('dynamic time warping', 'j (programming language)', {'weight': 0.6})
('dynamic time warping', 'word wrap', {'weight': 0.6})
('dynamic time warping', 'subset sum problem', {'weight': 0.6})
('dynamic time warping', 'integer programming', {'weight': 0.6})
('dynamic time warping', 'nucleosome', {'weight': 0.6})
('dynamic time warping', 'earley algorithm', {'weight': 0.6})
('dynamic time warping', 'referential transparency (computer science)', {'weight': 0.6})
('dynamic time warping', 'recursion', {'weight': 0.6})
('dynamic time warping', 'mathematica', {'weight': 0.6})
('dynamic time warping', 'quicksort', {'weight': 0.6})
('dynamic time warping', 'recursion (computer science)', {'weight': 0.6})
('dynamic time warping', 'checkerboard', {'weight': 0.6})
('dynamic time warping', 'computer science', {'weight': 0.6})
('dynamic time warping', 'brute-force search', {'weight': 0.6})
('dynamic time warping', 'mathematics', {'weight': 0.6})
('dynamic time warping', 'depth-first search', {'weight': 0.6})
('dynamic time warping', 'top-down and bottom-up design', {'weight': 0.6})
('dynamic time warping', 'correspondence problem', {'weight': 0.6})
('dynamic time warping', 'transcription factor', {'weight': 0.6})
('dynamic time warping', 'tree decomposition', {'weight': 0.6})
('dynamic time warping', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('dynamic time warping', 'structural alignment', {'weight': 0.6})
('dynamic time warping', 'local convergence', {'weight': 0.6})
('dynamic time warping', 'knapsack problem', {'weight': 0.6})
('dynamic time warping', 'graph algorithm', {'weight': 0.6})
('dynamic time warping', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('dynamic time warping', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('dynamic time warping', 'hidden markov model', {'weight': 0.6})
('dynamic time warping', 'string (computer science)', {'weight': 0.6})
('dynamic time warping', 'bioinformatics', {'weight': 0.6})
('dynamic time warping', 'genetics', {'weight': 0.6})
('dynamic time warping', 'mathematical optimization', {'weight': 0.6})
('dynamic time warping', 'artificial neural networks', {'weight': 0.6})
('dynamic time warping', 'introduction to algorithms', {'weight': 0.6})
('dynamic time warping', 'thomas h. cormen', {'weight': 0.6})
('dynamic time warping', 'music information retrieval', {'weight': 0.6})
('dynamic time warping', 'beat (music)', {'weight': 0.6})
('dynamic time warping', 'longest common subsequence problem', {'weight': 0.6})
('dynamic time warping', 'convex minimization', {'weight': 0.6})
('dynamic time warping', 'successive parabolic interpolation', {'weight': 0.6})
('dynamic time warping', 'fibonacci sequence', {'weight': 0.6})
('dynamic time warping', 'maximum subarray problem', {'weight': 0.6})
('dynamic time warping', 'convex optimization', {'weight': 0.6})
('dynamic time warping', 'memoization', {'weight': 0.6})
('dynamic time warping', 'richard bellman', {'weight': 0.6})
('dynamic time warping', 'exponential growth', {'weight': 0.6})
('dynamic time warping', 'charles e. leiserson', {'weight': 0.6})
('dynamic time warping', 'charles erwin wilson', {'weight': 0.6})
('dynamic time warping', 'interval scheduling', {'weight': 0.6})
('dynamic time warping', 'chart parser', {'weight': 0.6})
('dynamic time warping', 'travelling salesman problem', {'weight': 0.6})
('dynamic time warping', 'bellman equation', {'weight': 0.6})
('big-o notation', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('big-o notation', 'photoshop', {'weight': 0.6})
('big-o notation', 'sequence alignment', {'weight': 0.6})
('big-o notation', 'flow network', {'weight': 0.6})
('big-o notation', 'big o in probability notation', {'weight': 0.7})
('big-o notation', 'ellipsoid method', {'weight': 0.6})
('big-o notation', 'chain matrix multiplication', {'weight': 0.6})
('big-o notation', 'ieee', {'weight': 0.6})
('big-o notation', 'backtracking', {'weight': 0.6})
('big-o notation', 'nonlinear conjugate gradient method', {'weight': 0.6})
('big-o notation', 'dynamic problem', {'weight': 0.6})
('big-o notation', 'limit superior and limit inferior', {'weight': 0.7})
('big-o notation', 'trust region', {'weight': 0.6})
('big-o notation', 'function (mathematics)', {'weight': 0.6})
('big-o notation', 'minimum spanning tree', {'weight': 0.6})
('big-o notation', 'context-free grammar', {'weight': 0.6})
('big-o notation', 'branch and cut', {'weight': 0.6})
('big-o notation', 'state variable', {'weight': 0.6})
('big-o notation', 'treewidth', {'weight': 0.6})
('big-o notation', 'overlapping subproblem', {'weight': 0.6})
('big-o notation', 'taylor & francis', {'weight': 0.6})
('big-o notation', 'cutting-plane method', {'weight': 0.6})
('big-o notation', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('big-o notation', 'method of undetermined coefficients', {'weight': 0.6})
('big-o notation', 'combinatorial optimization', {'weight': 0.6})
('big-o notation', "newton's method in optimization", {'weight': 0.6})
('big-o notation', 'matrix chain multiplication', {'weight': 0.6})
('big-o notation', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('big-o notation', 'dynamic time warping', {'weight': 0.6})
('big-o notation', 'dynamic programming language', {'weight': 0.6})
('big-o notation', 'call-by-need', {'weight': 0.6})
('big-o notation', 'big-o notation', {'weight': 1})
('big-o notation', 'comparison of optimization software', {'weight': 0.6})
('big-o notation', 'quadratic programming', {'weight': 0.6})
('big-o notation', 'common lisp', {'weight': 0.6})
('big-o notation', 'barrier function', {'weight': 0.6})
('big-o notation', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('big-o notation', 'gradient descent', {'weight': 0.6})
('big-o notation', 'patricia selinger', {'weight': 0.6})
('big-o notation', 'discounting', {'weight': 0.6})
('big-o notation', 'ronald l. rivest', {'weight': 0.6})
('big-o notation', 'iterative method', {'weight': 0.6})
('big-o notation', 'limited-memory bfgs', {'weight': 0.6})
('big-o notation', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('big-o notation', 'longest common substring problem', {'weight': 0.6})
('big-o notation', 'clifford stein', {'weight': 0.6})
('big-o notation', 'computer chess', {'weight': 0.6})
('big-o notation', 'linear programming', {'weight': 0.6})
('big-o notation', 'bitonic tour', {'weight': 0.6})
('big-o notation', 'linear search problem', {'weight': 0.6})
('big-o notation', "nachbin's theorem", {'weight': 0.7})
('big-o notation', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('big-o notation', 'systems analysis', {'weight': 0.6})
('big-o notation', 'capital (economics)', {'weight': 0.6})
('big-o notation', 'levenshtein distance', {'weight': 0.6})
('big-o notation', 'nonlinear programming', {'weight': 0.6})
('big-o notation', 'computational complexity of mathematical operations', {'weight': 0.6})
('big-o notation', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('big-o notation', 'gradient', {'weight': 0.6})
('big-o notation', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('big-o notation', 'bulletin of the american mathematical society', {'weight': 0.6})
('big-o notation', 'u.s. english', {'weight': 0.6})
('big-o notation', 'refutation table', {'weight': 0.6})
('big-o notation', 'heuristic algorithm', {'weight': 0.6})
('big-o notation', 'successive linear programming', {'weight': 0.6})
('big-o notation', 'optimal substructure', {'weight': 0.6})
('big-o notation', 'complex analytic', {'weight': 0.7})
('big-o notation', 'programming language', {'weight': 0.6})
('big-o notation', 'mergesort', {'weight': 0.6})
('big-o notation', "dijkstra's algorithm", {'weight': 0.6})
('big-o notation', 'subgradient method', {'weight': 0.6})
('big-o notation', 'asymptotic expansion', {'weight': 0.7})
('big-o notation', 'call-by-name', {'weight': 0.6})
('big-o notation', 'asymptotically optimal', {'weight': 0.7})
('big-o notation', 'longest increasing subsequence problem', {'weight': 0.6})
('big-o notation', 'edward prescott', {'weight': 0.6})
('big-o notation', 'exponential time', {'weight': 0.6})
('big-o notation', 'principle of optimality', {'weight': 0.6})
('big-o notation', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('big-o notation', 'mathematical game', {'weight': 0.6})
('big-o notation', 'nancy stokey', {'weight': 0.6})
('big-o notation', 'approximation algorithm', {'weight': 0.6})
('big-o notation', 'discrete-time', {'weight': 0.6})
('big-o notation', 'cyk algorithm', {'weight': 0.6})
('big-o notation', 'markov decision process', {'weight': 0.6})
('big-o notation', "powell's method", {'weight': 0.6})
('big-o notation', 'wolfe conditions', {'weight': 0.6})
('big-o notation', 'convexity in economics', {'weight': 0.6})
('big-o notation', 'transposition table', {'weight': 0.6})
('big-o notation', 'economics', {'weight': 0.6})
('big-o notation', 'backward induction', {'weight': 0.6})
('big-o notation', 'golden section search', {'weight': 0.6})
('big-o notation', 'edit distance', {'weight': 0.6})
('big-o notation', 'tree structure', {'weight': 0.6})
('big-o notation', 'exchange algorithm', {'weight': 0.6})
('big-o notation', 'dover publications', {'weight': 0.6})
('big-o notation', 'seam carving', {'weight': 0.6})
('big-o notation', 'recursive least squares', {'weight': 0.6})
('big-o notation', 'metaheuristic', {'weight': 0.6})
('big-o notation', 'quasi-newton method', {'weight': 0.6})
('big-o notation', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('big-o notation', 'robert e. lucas', {'weight': 0.6})
('big-o notation', 'non-convexity (economics)', {'weight': 0.6})
('big-o notation', 'sr1 formula', {'weight': 0.6})
('big-o notation', 'mathematical reviews', {'weight': 0.6})
('big-o notation', 'puzzle', {'weight': 0.6})
('big-o notation', 'associative array', {'weight': 0.6})
('big-o notation', 'shortest path problem', {'weight': 0.6})
('big-o notation', 'dynamic algorithm', {'weight': 0.6})
('big-o notation', 'augmented lagrangian method', {'weight': 0.6})
('big-o notation', 'charles delisi', {'weight': 0.6})
('big-o notation', 'greedy algorithm', {'weight': 0.6})
('big-o notation', "karmarkar's algorithm", {'weight': 0.6})
('big-o notation', 'lattice models', {'weight': 0.6})
('big-o notation', 'utility', {'weight': 0.6})
('big-o notation', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('big-o notation', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('big-o notation', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('big-o notation', 'international standard book number', {'weight': 0.6})
('big-o notation', 'undirected graph', {'weight': 0.6})
('big-o notation', 'scheme (programming language)', {'weight': 0.6})
('big-o notation', 'rna structure', {'weight': 0.6})
('big-o notation', 'hanoi', {'weight': 0.6})
('big-o notation', 'perl', {'weight': 0.6})
('big-o notation', 'digital object identifier', {'weight': 0.6})
('big-o notation', 'sequential quadratic programming', {'weight': 0.6})
('big-o notation', "dinic's algorithm", {'weight': 0.6})
('big-o notation', 'pseudo-polynomial time', {'weight': 0.6})
('big-o notation', 'partition problem', {'weight': 0.6})
('big-o notation', 'stochastic programming', {'weight': 0.6})
('big-o notation', 'analysis of algorithms', {'weight': 0.5})
('big-o notation', 'hill climbing', {'weight': 0.6})
('big-o notation', 'top-down', {'weight': 0.6})
('big-o notation', 'de boor algorithm', {'weight': 0.6})
('big-o notation', 'optimization algorithm', {'weight': 0.6})
('big-o notation', "kruskal's algorithm", {'weight': 0.6})
('big-o notation', 'jacques philippe marie binet', {'weight': 0.6})
('big-o notation', 'tabu search', {'weight': 0.6})
('big-o notation', 'divide and conquer algorithm', {'weight': 0.6})
('big-o notation', "johnson's algorithm", {'weight': 0.6})
('big-o notation', 'evolutionary algorithm', {'weight': 0.6})
('big-o notation', 'clique-width', {'weight': 0.6})
('big-o notation', 'dynamic programming', {'weight': 0.6})
('big-o notation', 'subroutine', {'weight': 0.6})
('big-o notation', 'simulated annealing', {'weight': 0.6})
('big-o notation', 'tower of hanoi', {'weight': 0.6})
('big-o notation', 'branch and bound', {'weight': 0.6})
('big-o notation', 'engineering', {'weight': 0.6})
('big-o notation', 'matroid', {'weight': 0.6})
('big-o notation', 'viterbi algorithm', {'weight': 0.6})
('big-o notation', "lemke's algorithm", {'weight': 0.6})
('big-o notation', 'simplex algorithm', {'weight': 0.6})
('big-o notation', 'local search (optimization)', {'weight': 0.6})
('big-o notation', 'hessian matrix', {'weight': 0.6})
('big-o notation', 'ibm system r', {'weight': 0.6})
('big-o notation', 'penalty method', {'weight': 0.6})
('big-o notation', 'prolog', {'weight': 0.6})
('big-o notation', 'time-invariant system', {'weight': 0.6})
('big-o notation', 'criss-cross algorithm', {'weight': 0.6})
('big-o notation', 'revised simplex algorithm', {'weight': 0.6})
('big-o notation', 'the mathematical association of america', {'weight': 0.6})
('big-o notation', 'asymptotic analysis', {'weight': 0.5})
('big-o notation', 'line search', {'weight': 0.6})
('big-o notation', 'j (programming language)', {'weight': 0.6})
('big-o notation', 'word wrap', {'weight': 0.6})
('big-o notation', 'subset sum problem', {'weight': 0.6})
('big-o notation', 'integer programming', {'weight': 0.6})
('big-o notation', 'nucleosome', {'weight': 0.6})
('big-o notation', 'integral transforms', {'weight': 0.7})
('big-o notation', 'earley algorithm', {'weight': 0.6})
('big-o notation', 'referential transparency (computer science)', {'weight': 0.6})
('big-o notation', 'recursion', {'weight': 0.6})
('big-o notation', 'mathematica', {'weight': 0.6})
('big-o notation', 'quicksort', {'weight': 0.6})
('big-o notation', 'recursion (computer science)', {'weight': 0.6})
('big-o notation', 'checkerboard', {'weight': 0.6})
('big-o notation', 'computer science', {'weight': 0.6})
('big-o notation', 'mathematical notation', {'weight': 0.5})
('big-o notation', 'brute-force search', {'weight': 0.6})
('big-o notation', 'mathematics', {'weight': 0.6})
('big-o notation', 'depth-first search', {'weight': 0.6})
('big-o notation', 'top-down and bottom-up design', {'weight': 0.6})
('big-o notation', 'correspondence problem', {'weight': 0.6})
('big-o notation', 'transcription factor', {'weight': 0.6})
('big-o notation', 'tree decomposition', {'weight': 0.6})
('big-o notation', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('big-o notation', 'structural alignment', {'weight': 0.6})
('big-o notation', 'local convergence', {'weight': 0.6})
('big-o notation', 'knapsack problem', {'weight': 0.6})
('big-o notation', 'graph algorithm', {'weight': 0.6})
('big-o notation', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('big-o notation', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('big-o notation', 'hidden markov model', {'weight': 0.6})
('big-o notation', 'string (computer science)', {'weight': 0.6})
('big-o notation', 'bioinformatics', {'weight': 0.6})
('big-o notation', 'genetics', {'weight': 0.6})
('big-o notation', 'mathematical optimization', {'weight': 0.6})
('big-o notation', 'artificial neural networks', {'weight': 0.6})
('big-o notation', 'introduction to algorithms', {'weight': 0.6})
('big-o notation', 'thomas h. cormen', {'weight': 0.6})
('big-o notation', 'music information retrieval', {'weight': 0.6})
('big-o notation', 'beat (music)', {'weight': 0.6})
('big-o notation', 'longest common subsequence problem', {'weight': 0.6})
('big-o notation', 'convex minimization', {'weight': 0.6})
('big-o notation', 'successive parabolic interpolation', {'weight': 0.6})
('big-o notation', 'fibonacci sequence', {'weight': 0.6})
('big-o notation', 'maximum subarray problem', {'weight': 0.6})
('big-o notation', 'convex optimization', {'weight': 0.6})
('big-o notation', 'memoization', {'weight': 0.6})
('big-o notation', 'richard bellman', {'weight': 0.6})
('big-o notation', 'exponential growth', {'weight': 0.6})
('big-o notation', 'charles e. leiserson', {'weight': 0.6})
('big-o notation', 'charles erwin wilson', {'weight': 0.6})
('big-o notation', 'interval scheduling', {'weight': 0.6})
('big-o notation', 'chart parser', {'weight': 0.6})
('big-o notation', 'travelling salesman problem', {'weight': 0.6})
('big-o notation', 'bellman equation', {'weight': 0.6})
('quadratic programming', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('quadratic programming', 'photoshop', {'weight': 0.6})
('quadratic programming', 'sequence alignment', {'weight': 0.6})
('quadratic programming', 'flow network', {'weight': 0.6})
('quadratic programming', 'ellipsoid method', {'weight': 0.6})
('quadratic programming', 'chain matrix multiplication', {'weight': 0.6})
('quadratic programming', 'ieee', {'weight': 0.6})
('quadratic programming', 'backtracking', {'weight': 0.6})
('quadratic programming', 'nonlinear conjugate gradient method', {'weight': 0.6})
('quadratic programming', 'dynamic problem', {'weight': 0.6})
('quadratic programming', 'trust region', {'weight': 0.6})
('quadratic programming', 'function (mathematics)', {'weight': 0.6})
('quadratic programming', 'minimum spanning tree', {'weight': 0.6})
('quadratic programming', 'context-free grammar', {'weight': 0.6})
('quadratic programming', 'branch and cut', {'weight': 0.6})
('quadratic programming', 'state variable', {'weight': 0.6})
('quadratic programming', 'treewidth', {'weight': 0.6})
('quadratic programming', 'optimization algorithms and methods', {'weight': 0.5})
('quadratic programming', 'overlapping subproblem', {'weight': 0.6})
('quadratic programming', 'taylor & francis', {'weight': 0.6})
('quadratic programming', 'cutting-plane method', {'weight': 0.6})
('quadratic programming', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('quadratic programming', 'method of undetermined coefficients', {'weight': 0.6})
('quadratic programming', 'combinatorial optimization', {'weight': 0.6})
('quadratic programming', "newton's method in optimization", {'weight': 0.6})
('quadratic programming', 'matrix chain multiplication', {'weight': 0.6})
('quadratic programming', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('quadratic programming', 'dynamic time warping', {'weight': 0.6})
('quadratic programming', 'dynamic programming language', {'weight': 0.6})
('quadratic programming', 'call-by-need', {'weight': 0.6})
('quadratic programming', 'big-o notation', {'weight': 0.6})
('quadratic programming', 'comparison of optimization software', {'weight': 0.6})
('quadratic programming', 'quadratic programming', {'weight': 1})
('quadratic programming', 'common lisp', {'weight': 0.6})
('quadratic programming', 'barrier function', {'weight': 0.6})
('quadratic programming', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('quadratic programming', 'gradient descent', {'weight': 0.6})
('quadratic programming', 'patricia selinger', {'weight': 0.6})
('quadratic programming', 'discounting', {'weight': 0.6})
('quadratic programming', 'ronald l. rivest', {'weight': 0.6})
('quadratic programming', 'iterative method', {'weight': 0.6})
('quadratic programming', 'limited-memory bfgs', {'weight': 0.6})
('quadratic programming', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('quadratic programming', 'longest common substring problem', {'weight': 0.6})
('quadratic programming', 'clifford stein', {'weight': 0.6})
('quadratic programming', 'computer chess', {'weight': 0.6})
('quadratic programming', 'linear programming', {'weight': 0.6})
('quadratic programming', 'bitonic tour', {'weight': 0.6})
('quadratic programming', 'linear search problem', {'weight': 0.6})
('quadratic programming', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('quadratic programming', 'systems analysis', {'weight': 0.6})
('quadratic programming', 'capital (economics)', {'weight': 0.6})
('quadratic programming', 'levenshtein distance', {'weight': 0.6})
('quadratic programming', 'applied mathematics stubs', {'weight': 0.5})
('quadratic programming', 'nonlinear programming', {'weight': 0.6})
('quadratic programming', 'computational complexity of mathematical operations', {'weight': 0.6})
('quadratic programming', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('quadratic programming', 'gradient', {'weight': 0.6})
('quadratic programming', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('quadratic programming', 'bulletin of the american mathematical society', {'weight': 0.6})
('quadratic programming', 'u.s. english', {'weight': 0.6})
('quadratic programming', 'refutation table', {'weight': 0.6})
('quadratic programming', 'heuristic algorithm', {'weight': 0.6})
('quadratic programming', 'successive linear programming', {'weight': 0.6})
('quadratic programming', 'optimal substructure', {'weight': 0.6})
('quadratic programming', 'programming language', {'weight': 0.6})
('quadratic programming', 'mergesort', {'weight': 0.6})
('quadratic programming', "dijkstra's algorithm", {'weight': 0.6})
('quadratic programming', 'subgradient method', {'weight': 0.6})
('quadratic programming', 'call-by-name', {'weight': 0.6})
('quadratic programming', 'longest increasing subsequence problem', {'weight': 0.6})
('quadratic programming', 'edward prescott', {'weight': 0.6})
('quadratic programming', 'exponential time', {'weight': 0.6})
('quadratic programming', 'principle of optimality', {'weight': 0.6})
('quadratic programming', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('quadratic programming', 'mathematical game', {'weight': 0.6})
('quadratic programming', 'nancy stokey', {'weight': 0.6})
('quadratic programming', 'approximation algorithm', {'weight': 0.6})
('quadratic programming', 'discrete-time', {'weight': 0.6})
('quadratic programming', 'cyk algorithm', {'weight': 0.6})
('quadratic programming', 'markov decision process', {'weight': 0.6})
('quadratic programming', "powell's method", {'weight': 0.6})
('quadratic programming', 'wolfe conditions', {'weight': 0.6})
('quadratic programming', 'convexity in economics', {'weight': 0.6})
('quadratic programming', 'transposition table', {'weight': 0.6})
('quadratic programming', 'economics', {'weight': 0.6})
('quadratic programming', 'backward induction', {'weight': 0.6})
('quadratic programming', 'golden section search', {'weight': 0.6})
('quadratic programming', 'edit distance', {'weight': 0.6})
('quadratic programming', 'tree structure', {'weight': 0.6})
('quadratic programming', 'exchange algorithm', {'weight': 0.6})
('quadratic programming', 'dover publications', {'weight': 0.6})
('quadratic programming', 'seam carving', {'weight': 0.6})
('quadratic programming', 'recursive least squares', {'weight': 0.6})
('quadratic programming', 'metaheuristic', {'weight': 0.6})
('quadratic programming', 'quasi-newton method', {'weight': 0.6})
('quadratic programming', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('quadratic programming', 'robert e. lucas', {'weight': 0.6})
('quadratic programming', 'non-convexity (economics)', {'weight': 0.6})
('quadratic programming', 'sr1 formula', {'weight': 0.6})
('quadratic programming', 'mathematical reviews', {'weight': 0.6})
('quadratic programming', 'puzzle', {'weight': 0.6})
('quadratic programming', 'associative array', {'weight': 0.6})
('quadratic programming', 'shortest path problem', {'weight': 0.6})
('quadratic programming', 'dynamic algorithm', {'weight': 0.6})
('quadratic programming', 'augmented lagrangian method', {'weight': 0.6})
('quadratic programming', 'charles delisi', {'weight': 0.6})
('quadratic programming', 'greedy algorithm', {'weight': 0.6})
('quadratic programming', "karmarkar's algorithm", {'weight': 0.6})
('quadratic programming', 'lattice models', {'weight': 0.6})
('quadratic programming', 'utility', {'weight': 0.6})
('quadratic programming', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('quadratic programming', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('quadratic programming', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('quadratic programming', 'international standard book number', {'weight': 0.6})
('quadratic programming', 'secant method', {'weight': 0.7})
('quadratic programming', 'undirected graph', {'weight': 0.6})
('quadratic programming', 'scheme (programming language)', {'weight': 0.6})
('quadratic programming', 'rna structure', {'weight': 0.6})
('quadratic programming', 'hanoi', {'weight': 0.6})
('quadratic programming', 'perl', {'weight': 0.6})
('quadratic programming', 'digital object identifier', {'weight': 0.6})
('quadratic programming', 'sequential quadratic programming', {'weight': 0.6})
('quadratic programming', "dinic's algorithm", {'weight': 0.6})
('quadratic programming', 'pseudo-polynomial time', {'weight': 0.6})
('quadratic programming', 'partition problem', {'weight': 0.6})
('quadratic programming', 'stochastic programming', {'weight': 0.6})
('quadratic programming', 'hill climbing', {'weight': 0.6})
('quadratic programming', 'top-down', {'weight': 0.6})
('quadratic programming', 'de boor algorithm', {'weight': 0.6})
('quadratic programming', 'optimization algorithm', {'weight': 0.6})
('quadratic programming', "kruskal's algorithm", {'weight': 0.6})
('quadratic programming', 'jacques philippe marie binet', {'weight': 0.6})
('quadratic programming', 'tabu search', {'weight': 0.6})
('quadratic programming', 'divide and conquer algorithm', {'weight': 0.6})
('quadratic programming', "johnson's algorithm", {'weight': 0.6})
('quadratic programming', 'evolutionary algorithm', {'weight': 0.6})
('quadratic programming', 'clique-width', {'weight': 0.6})
('quadratic programming', 'dynamic programming', {'weight': 0.6})
('quadratic programming', 'subroutine', {'weight': 0.6})
('quadratic programming', "newton's method", {'weight': 0.7})
('quadratic programming', 'simulated annealing', {'weight': 0.6})
('quadratic programming', 'tower of hanoi', {'weight': 0.6})
('quadratic programming', 'branch and bound', {'weight': 0.6})
('quadratic programming', 'engineering', {'weight': 0.6})
('quadratic programming', 'matroid', {'weight': 0.6})
('quadratic programming', 'viterbi algorithm', {'weight': 0.6})
('quadratic programming', "lemke's algorithm", {'weight': 0.6})
('quadratic programming', 'simplex algorithm', {'weight': 0.6})
('quadratic programming', 'local search (optimization)', {'weight': 0.6})
('quadratic programming', 'hessian matrix', {'weight': 0.6})
('quadratic programming', 'ibm system r', {'weight': 0.6})
('quadratic programming', 'penalty method', {'weight': 0.6})
('quadratic programming', 'prolog', {'weight': 0.6})
('quadratic programming', 'time-invariant system', {'weight': 0.6})
('quadratic programming', 'criss-cross algorithm', {'weight': 0.6})
('quadratic programming', 'revised simplex algorithm', {'weight': 0.6})
('quadratic programming', 'the mathematical association of america', {'weight': 0.6})
('quadratic programming', 'line search', {'weight': 0.6})
('quadratic programming', 'j (programming language)', {'weight': 0.6})
('quadratic programming', 'word wrap', {'weight': 0.6})
('quadratic programming', 'sequential linear programming', {'weight': 0.7})
('quadratic programming', 'subset sum problem', {'weight': 0.6})
('quadratic programming', 'integer programming', {'weight': 0.6})
('quadratic programming', 'nucleosome', {'weight': 0.6})
('quadratic programming', 'earley algorithm', {'weight': 0.6})
('quadratic programming', 'referential transparency (computer science)', {'weight': 0.6})
('quadratic programming', 'recursion', {'weight': 0.6})
('quadratic programming', 'mathematica', {'weight': 0.6})
('quadratic programming', 'quicksort', {'weight': 0.6})
('quadratic programming', 'recursion (computer science)', {'weight': 0.6})
('quadratic programming', 'checkerboard', {'weight': 0.6})
('quadratic programming', 'computer science', {'weight': 0.6})
('quadratic programming', 'brute-force search', {'weight': 0.6})
('quadratic programming', 'mathematics', {'weight': 0.6})
('quadratic programming', 'depth-first search', {'weight': 0.6})
('quadratic programming', 'top-down and bottom-up design', {'weight': 0.6})
('quadratic programming', 'correspondence problem', {'weight': 0.6})
('quadratic programming', 'transcription factor', {'weight': 0.6})
('quadratic programming', 'tree decomposition', {'weight': 0.6})
('quadratic programming', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('quadratic programming', 'structural alignment', {'weight': 0.6})
('quadratic programming', 'local convergence', {'weight': 0.6})
('quadratic programming', 'knapsack problem', {'weight': 0.6})
('quadratic programming', 'graph algorithm', {'weight': 0.6})
('quadratic programming', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('quadratic programming', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('quadratic programming', 'hidden markov model', {'weight': 0.6})
('quadratic programming', 'string (computer science)', {'weight': 0.6})
('quadratic programming', 'bioinformatics', {'weight': 0.6})
('quadratic programming', 'genetics', {'weight': 0.6})
('quadratic programming', 'mathematical optimization', {'weight': 0.6})
('quadratic programming', 'artificial neural networks', {'weight': 0.6})
('quadratic programming', 'introduction to algorithms', {'weight': 0.6})
('quadratic programming', 'thomas h. cormen', {'weight': 0.6})
('quadratic programming', 'music information retrieval', {'weight': 0.6})
('quadratic programming', 'beat (music)', {'weight': 0.6})
('quadratic programming', 'longest common subsequence problem', {'weight': 0.6})
('quadratic programming', 'convex minimization', {'weight': 0.6})
('quadratic programming', 'successive parabolic interpolation', {'weight': 0.6})
('quadratic programming', 'fibonacci sequence', {'weight': 0.6})
('quadratic programming', 'maximum subarray problem', {'weight': 0.6})
('quadratic programming', 'convex optimization', {'weight': 0.6})
('quadratic programming', 'memoization', {'weight': 0.6})
('quadratic programming', 'richard bellman', {'weight': 0.6})
('quadratic programming', 'exponential growth', {'weight': 0.6})
('quadratic programming', 'charles e. leiserson', {'weight': 0.6})
('quadratic programming', 'charles erwin wilson', {'weight': 0.6})
('quadratic programming', 'interval scheduling', {'weight': 0.6})
('quadratic programming', 'chart parser', {'weight': 0.6})
('quadratic programming', 'travelling salesman problem', {'weight': 0.6})
('quadratic programming', 'bellman equation', {'weight': 0.6})
('heuristic algorithm', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('heuristic algorithm', 'heuristics', {'weight': 0.5})
('heuristic algorithm', 'sequence alignment', {'weight': 0.6})
('heuristic algorithm', 'flow network', {'weight': 0.6})
('heuristic algorithm', 'photoshop', {'weight': 0.6})
('heuristic algorithm', 'ellipsoid method', {'weight': 0.6})
('heuristic algorithm', 'chain matrix multiplication', {'weight': 0.6})
('heuristic algorithm', 'ieee', {'weight': 0.6})
('heuristic algorithm', 'backtracking', {'weight': 0.6})
('heuristic algorithm', 'heuristic', {'weight': 0.7})
('heuristic algorithm', 'nonlinear conjugate gradient method', {'weight': 0.6})
('heuristic algorithm', 'dynamic problem', {'weight': 0.6})
('heuristic algorithm', 'trust region', {'weight': 0.6})
('heuristic algorithm', 'function (mathematics)', {'weight': 0.6})
('heuristic algorithm', 'minimum spanning tree', {'weight': 0.6})
('heuristic algorithm', 'heuristic function', {'weight': 0.7})
('heuristic algorithm', 'context-free grammar', {'weight': 0.6})
('heuristic algorithm', 'branch and cut', {'weight': 0.6})
('heuristic algorithm', 'state variable', {'weight': 0.6})
('heuristic algorithm', 'treewidth', {'weight': 0.6})
('heuristic algorithm', 'overlapping subproblem', {'weight': 0.6})
('heuristic algorithm', 'taylor & francis', {'weight': 0.6})
('heuristic algorithm', 'cutting-plane method', {'weight': 0.6})
('heuristic algorithm', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('heuristic algorithm', 'method of undetermined coefficients', {'weight': 0.6})
('heuristic algorithm', 'combinatorial optimization', {'weight': 0.6})
('heuristic algorithm', "newton's method in optimization", {'weight': 0.6})
('heuristic algorithm', 'matrix chain multiplication', {'weight': 0.6})
('heuristic algorithm', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('heuristic algorithm', 'dynamic time warping', {'weight': 0.6})
('heuristic algorithm', 'dynamic programming language', {'weight': 0.6})
('heuristic algorithm', 'call-by-need', {'weight': 0.6})
('heuristic algorithm', 'big-o notation', {'weight': 0.6})
('heuristic algorithm', 'comparison of optimization software', {'weight': 0.6})
('heuristic algorithm', 'quadratic programming', {'weight': 0.6})
('heuristic algorithm', 'common lisp', {'weight': 0.6})
('heuristic algorithm', 'barrier function', {'weight': 0.6})
('heuristic algorithm', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('heuristic algorithm', 'gradient descent', {'weight': 0.6})
('heuristic algorithm', 'patricia selinger', {'weight': 0.6})
('heuristic algorithm', 'discounting', {'weight': 0.6})
('heuristic algorithm', 'ronald l. rivest', {'weight': 0.6})
('heuristic algorithm', 'iterative method', {'weight': 0.6})
('heuristic algorithm', 'limited-memory bfgs', {'weight': 0.6})
('heuristic algorithm', 'matheuristics', {'weight': 0.7})
('heuristic algorithm', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('heuristic algorithm', 'longest common substring problem', {'weight': 0.6})
('heuristic algorithm', 'clifford stein', {'weight': 0.6})
('heuristic algorithm', 'problem solving', {'weight': 0.5})
('heuristic algorithm', 'computer chess', {'weight': 0.6})
('heuristic algorithm', 'linear programming', {'weight': 0.6})
('heuristic algorithm', 'bitonic tour', {'weight': 0.6})
('heuristic algorithm', 'linear search problem', {'weight': 0.6})
('heuristic algorithm', 'reactive search optimization', {'weight': 0.7})
('heuristic algorithm', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('heuristic algorithm', 'systems analysis', {'weight': 0.6})
('heuristic algorithm', 'heuristic algorithms', {'weight': 0.5})
('heuristic algorithm', 'capital (economics)', {'weight': 0.6})
('heuristic algorithm', 'levenshtein distance', {'weight': 0.6})
('heuristic algorithm', 'heuristic routing', {'weight': 0.7})
('heuristic algorithm', 'nonlinear programming', {'weight': 0.6})
('heuristic algorithm', 'computational complexity of mathematical operations', {'weight': 0.6})
('heuristic algorithm', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('heuristic algorithm', 'gradient', {'weight': 0.6})
('heuristic algorithm', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('heuristic algorithm', 'genetic algorithm', {'weight': 0.7})
('heuristic algorithm', 'bulletin of the american mathematical society', {'weight': 0.6})
('heuristic algorithm', 'u.s. english', {'weight': 0.6})
('heuristic algorithm', 'refutation table', {'weight': 0.6})
('heuristic algorithm', 'heuristic algorithm', {'weight': 1})
('heuristic algorithm', 'successive linear programming', {'weight': 0.6})
('heuristic algorithm', 'optimal substructure', {'weight': 0.6})
('heuristic algorithm', 'programming language', {'weight': 0.6})
('heuristic algorithm', 'mergesort', {'weight': 0.6})
('heuristic algorithm', "dijkstra's algorithm", {'weight': 0.6})
('heuristic algorithm', 'subgradient method', {'weight': 0.6})
('heuristic algorithm', 'call-by-name', {'weight': 0.6})
('heuristic algorithm', 'longest increasing subsequence problem', {'weight': 0.6})
('heuristic algorithm', 'edward prescott', {'weight': 0.6})
('heuristic algorithm', 'exponential time', {'weight': 0.6})
('heuristic algorithm', 'principle of optimality', {'weight': 0.6})
('heuristic algorithm', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('heuristic algorithm', 'mathematical game', {'weight': 0.6})
('heuristic algorithm', 'nancy stokey', {'weight': 0.6})
('heuristic algorithm', 'approximation algorithm', {'weight': 0.6})
('heuristic algorithm', 'heuristic evaluation', {'weight': 0.7})
('heuristic algorithm', 'discrete-time', {'weight': 0.6})
('heuristic algorithm', 'cyk algorithm', {'weight': 0.6})
('heuristic algorithm', 'markov decision process', {'weight': 0.6})
('heuristic algorithm', "powell's method", {'weight': 0.6})
('heuristic algorithm', 'wolfe conditions', {'weight': 0.6})
('heuristic algorithm', 'convexity in economics', {'weight': 0.6})
('heuristic algorithm', 'transposition table', {'weight': 0.6})
('heuristic algorithm', 'economics', {'weight': 0.6})
('heuristic algorithm', 'backward induction', {'weight': 0.6})
('heuristic algorithm', 'golden section search', {'weight': 0.6})
('heuristic algorithm', 'edit distance', {'weight': 0.6})
('heuristic algorithm', 'tree structure', {'weight': 0.6})
('heuristic algorithm', 'exchange algorithm', {'weight': 0.6})
('heuristic algorithm', 'dover publications', {'weight': 0.6})
('heuristic algorithm', 'seam carving', {'weight': 0.6})
('heuristic algorithm', 'recursive least squares', {'weight': 0.6})
('heuristic algorithm', 'metaheuristic', {'weight': 0.7})
('heuristic algorithm', 'quasi-newton method', {'weight': 0.6})
('heuristic algorithm', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('heuristic algorithm', 'robert e. lucas', {'weight': 0.6})
('heuristic algorithm', 'non-convexity (economics)', {'weight': 0.6})
('heuristic algorithm', 'sr1 formula', {'weight': 0.6})
('heuristic algorithm', 'mathematical reviews', {'weight': 0.6})
('heuristic algorithm', 'puzzle', {'weight': 0.6})
('heuristic algorithm', 'associative array', {'weight': 0.6})
('heuristic algorithm', 'shortest path problem', {'weight': 0.6})
('heuristic algorithm', 'dynamic algorithm', {'weight': 0.6})
('heuristic algorithm', 'augmented lagrangian method', {'weight': 0.6})
('heuristic algorithm', 'charles delisi', {'weight': 0.6})
('heuristic algorithm', 'greedy algorithm', {'weight': 0.6})
('heuristic algorithm', "karmarkar's algorithm", {'weight': 0.6})
('heuristic algorithm', 'lattice models', {'weight': 0.6})
('heuristic algorithm', 'utility', {'weight': 0.6})
('heuristic algorithm', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('heuristic algorithm', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('heuristic algorithm', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('heuristic algorithm', 'international standard book number', {'weight': 0.6})
('heuristic algorithm', 'undirected graph', {'weight': 0.6})
('heuristic algorithm', 'scheme (programming language)', {'weight': 0.6})
('heuristic algorithm', 'rna structure', {'weight': 0.6})
('heuristic algorithm', 'hanoi', {'weight': 0.6})
('heuristic algorithm', 'perl', {'weight': 0.6})
('heuristic algorithm', 'digital object identifier', {'weight': 0.6})
('heuristic algorithm', 'sequential quadratic programming', {'weight': 0.6})
('heuristic algorithm', "dinic's algorithm", {'weight': 0.6})
('heuristic algorithm', 'pseudo-polynomial time', {'weight': 0.6})
('heuristic algorithm', 'partition problem', {'weight': 0.6})
('heuristic algorithm', 'stochastic programming', {'weight': 0.6})
('heuristic algorithm', 'hill climbing', {'weight': 0.6})
('heuristic algorithm', 'top-down', {'weight': 0.6})
('heuristic algorithm', 'de boor algorithm', {'weight': 0.6})
('heuristic algorithm', 'optimization algorithm', {'weight': 0.6})
('heuristic algorithm', "kruskal's algorithm", {'weight': 0.6})
('heuristic algorithm', 'jacques philippe marie binet', {'weight': 0.6})
('heuristic algorithm', 'tabu search', {'weight': 0.6})
('heuristic algorithm', 'divide and conquer algorithm', {'weight': 0.6})
('heuristic algorithm', "johnson's algorithm", {'weight': 0.6})
('heuristic algorithm', 'evolutionary algorithm', {'weight': 0.6})
('heuristic algorithm', 'clique-width', {'weight': 0.6})
('heuristic algorithm', 'dynamic programming', {'weight': 0.6})
('heuristic algorithm', 'subroutine', {'weight': 0.6})
('heuristic algorithm', 'simulated annealing', {'weight': 0.6})
('heuristic algorithm', 'tower of hanoi', {'weight': 0.6})
('heuristic algorithm', 'machine learning', {'weight': 0.7})
('heuristic algorithm', 'branch and bound', {'weight': 0.6})
('heuristic algorithm', 'engineering', {'weight': 0.6})
('heuristic algorithm', 'matroid', {'weight': 0.6})
('heuristic algorithm', 'viterbi algorithm', {'weight': 0.6})
('heuristic algorithm', "lemke's algorithm", {'weight': 0.6})
('heuristic algorithm', 'simplex algorithm', {'weight': 0.6})
('heuristic algorithm', 'local search (optimization)', {'weight': 0.6})
('heuristic algorithm', 'hessian matrix', {'weight': 0.6})
('heuristic algorithm', 'ibm system r', {'weight': 0.6})
('heuristic algorithm', 'penalty method', {'weight': 0.6})
('heuristic algorithm', 'prolog', {'weight': 0.6})
('heuristic algorithm', 'time-invariant system', {'weight': 0.6})
('heuristic algorithm', 'criss-cross algorithm', {'weight': 0.6})
('heuristic algorithm', 'revised simplex algorithm', {'weight': 0.6})
('heuristic algorithm', 'the mathematical association of america', {'weight': 0.6})
('heuristic algorithm', 'line search', {'weight': 0.6})
('heuristic algorithm', 'j (programming language)', {'weight': 0.6})
('heuristic algorithm', 'word wrap', {'weight': 0.6})
('heuristic algorithm', 'usability', {'weight': 0.7})
('heuristic algorithm', 'subset sum problem', {'weight': 0.6})
('heuristic algorithm', 'integer programming', {'weight': 0.6})
('heuristic algorithm', 'nucleosome', {'weight': 0.6})
('heuristic algorithm', 'earley algorithm', {'weight': 0.6})
('heuristic algorithm', 'referential transparency (computer science)', {'weight': 0.6})
('heuristic algorithm', 'recursion', {'weight': 0.6})
('heuristic algorithm', 'mathematica', {'weight': 0.6})
('heuristic algorithm', 'quicksort', {'weight': 0.6})
('heuristic algorithm', 'recursion (computer science)', {'weight': 0.6})
('heuristic algorithm', 'checkerboard', {'weight': 0.6})
('heuristic algorithm', 'computer science', {'weight': 0.6})
('heuristic algorithm', 'brute-force search', {'weight': 0.6})
('heuristic algorithm', 'mathematics', {'weight': 0.6})
('heuristic algorithm', 'depth-first search', {'weight': 0.6})
('heuristic algorithm', 'top-down and bottom-up design', {'weight': 0.6})
('heuristic algorithm', 'correspondence problem', {'weight': 0.6})
('heuristic algorithm', 'transcription factor', {'weight': 0.6})
('heuristic algorithm', 'tree decomposition', {'weight': 0.6})
('heuristic algorithm', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('heuristic algorithm', 'structural alignment', {'weight': 0.6})
('heuristic algorithm', 'local convergence', {'weight': 0.6})
('heuristic algorithm', 'knapsack problem', {'weight': 0.6})
('heuristic algorithm', 'graph algorithm', {'weight': 0.6})
('heuristic algorithm', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('heuristic algorithm', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('heuristic algorithm', 'hidden markov model', {'weight': 0.6})
('heuristic algorithm', 'string (computer science)', {'weight': 0.6})
('heuristic algorithm', 'bioinformatics', {'weight': 0.6})
('heuristic algorithm', 'genetics', {'weight': 0.6})
('heuristic algorithm', 'mathematical optimization', {'weight': 0.6})
('heuristic algorithm', 'artificial neural networks', {'weight': 0.6})
('heuristic algorithm', 'introduction to algorithms', {'weight': 0.6})
('heuristic algorithm', 'thomas h. cormen', {'weight': 0.6})
('heuristic algorithm', 'music information retrieval', {'weight': 0.6})
('heuristic algorithm', 'beat (music)', {'weight': 0.6})
('heuristic algorithm', 'longest common subsequence problem', {'weight': 0.6})
('heuristic algorithm', 'convex minimization', {'weight': 0.6})
('heuristic algorithm', 'algorithm', {'weight': 0.7})
('heuristic algorithm', 'successive parabolic interpolation', {'weight': 0.6})
('heuristic algorithm', 'fibonacci sequence', {'weight': 0.6})
('heuristic algorithm', 'maximum subarray problem', {'weight': 0.6})
('heuristic algorithm', 'convex optimization', {'weight': 0.6})
('heuristic algorithm', 'memoization', {'weight': 0.6})
('heuristic algorithm', 'richard bellman', {'weight': 0.6})
('heuristic algorithm', 'exponential growth', {'weight': 0.6})
('heuristic algorithm', 'charles e. leiserson', {'weight': 0.6})
('heuristic algorithm', 'charles erwin wilson', {'weight': 0.6})
('heuristic algorithm', 'interval scheduling', {'weight': 0.6})
('heuristic algorithm', 'chart parser', {'weight': 0.6})
('heuristic algorithm', 'travelling salesman problem', {'weight': 0.6})
('heuristic algorithm', 'bellman equation', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'photoshop', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'sequence alignment', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'flow network', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'ellipsoid method', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'chain matrix multiplication', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'ieee', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'backtracking', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'nonlinear conjugate gradient method', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'dynamic problem', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'trust region', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'function (mathematics)', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'minimum spanning tree', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'context-free grammar', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'branch and cut', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'state variable', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'treewidth', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'overlapping subproblem', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'taylor & francis', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'cutting-plane method', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'method of undetermined coefficients', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'combinatorial optimization', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', "newton's method in optimization", {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'matrix chain multiplication', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'dynamic time warping', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'dynamic programming language', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'call-by-need', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'big-o notation', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'comparison of optimization software', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'quadratic programming', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'common lisp', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'barrier function', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'gradient descent', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'patricia selinger', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'discounting', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'ronald l. rivest', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'iterative method', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'limited-memory bfgs', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 1})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'longest common substring problem', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'clifford stein', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'computer chess', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'linear programming', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'bitonic tour', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'linear search problem', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'systems analysis', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'capital (economics)', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'levenshtein distance', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'nonlinear programming', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'computational complexity of mathematical operations', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'gradient', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'bulletin of the american mathematical society', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'u.s. english', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'refutation table', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'heuristic algorithm', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'successive linear programming', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'optimal substructure', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'programming language', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'mergesort', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', "dijkstra's algorithm", {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'subgradient method', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'call-by-name', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'longest increasing subsequence problem', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'edward prescott', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'exponential time', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'principle of optimality', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'mathematical game', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'nancy stokey', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'approximation algorithm', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'discrete-time', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'cyk algorithm', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'markov decision process', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', "powell's method", {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'wolfe conditions', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'convexity in economics', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'transposition table', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'economics', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'backward induction', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'golden section search', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'edit distance', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'tree structure', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'exchange algorithm', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'dover publications', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'seam carving', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'recursive least squares', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'metaheuristic', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'quasi-newton method', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'robert e. lucas', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'non-convexity (economics)', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'sr1 formula', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'mathematical reviews', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'puzzle', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'associative array', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'shortest path problem', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'dynamic algorithm', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'augmented lagrangian method', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'charles delisi', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'greedy algorithm', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', "karmarkar's algorithm", {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'lattice models', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'utility', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'international standard book number', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'undirected graph', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'scheme (programming language)', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'rna structure', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'hanoi', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'perl', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'digital object identifier', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'sequential quadratic programming', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', "dinic's algorithm", {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'pseudo-polynomial time', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'partition problem', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'stochastic programming', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'hill climbing', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'top-down', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'de boor algorithm', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'optimization algorithm', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', "kruskal's algorithm", {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'jacques philippe marie binet', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'tabu search', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'divide and conquer algorithm', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', "johnson's algorithm", {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'evolutionary algorithm', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'clique-width', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'dynamic programming', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'subroutine', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'simulated annealing', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'tower of hanoi', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'branch and bound', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'engineering', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'matroid', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'viterbi algorithm', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', "lemke's algorithm", {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'simplex algorithm', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'local search (optimization)', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'hessian matrix', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'ibm system r', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'penalty method', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'prolog', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'time-invariant system', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'criss-cross algorithm', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'revised simplex algorithm', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'the mathematical association of america', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'line search', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'j (programming language)', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'word wrap', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'subset sum problem', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'integer programming', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'nucleosome', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'earley algorithm', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'referential transparency (computer science)', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'recursion', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'mathematica', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'quicksort', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'recursion (computer science)', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'checkerboard', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'computer science', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'brute-force search', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'mathematics', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'depth-first search', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'top-down and bottom-up design', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'correspondence problem', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'transcription factor', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'tree decomposition', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'structural alignment', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'local convergence', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'knapsack problem', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'graph algorithm', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'hidden markov model', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'string (computer science)', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'bioinformatics', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'genetics', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'mathematical optimization', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'artificial neural networks', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'introduction to algorithms', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'thomas h. cormen', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'music information retrieval', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'beat (music)', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'longest common subsequence problem', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'convex minimization', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'successive parabolic interpolation', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'fibonacci sequence', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'maximum subarray problem', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'convex optimization', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'memoization', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'richard bellman', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'exponential growth', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'charles e. leiserson', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'charles erwin wilson', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'interval scheduling', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'chart parser', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'travelling salesman problem', {'weight': 0.6})
('davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', 'bellman equation', {'weight': 0.6})
('longest common substring problem', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('longest common substring problem', 'photoshop', {'weight': 0.6})
('longest common substring problem', 'sequence alignment', {'weight': 0.6})
('longest common substring problem', 'flow network', {'weight': 0.6})
('longest common substring problem', 'ellipsoid method', {'weight': 0.6})
('longest common substring problem', 'chain matrix multiplication', {'weight': 0.6})
('longest common substring problem', 'ieee', {'weight': 0.6})
('longest common substring problem', 'backtracking', {'weight': 0.6})
('longest common substring problem', 'nonlinear conjugate gradient method', {'weight': 0.6})
('longest common substring problem', 'dynamic problem', {'weight': 0.6})
('longest common substring problem', 'longest palindromic substring', {'weight': 0.7})
('longest common substring problem', 'trust region', {'weight': 0.6})
('longest common substring problem', 'function (mathematics)', {'weight': 0.6})
('longest common substring problem', 'minimum spanning tree', {'weight': 0.6})
('longest common substring problem', 'context-free grammar', {'weight': 0.6})
('longest common substring problem', 'branch and cut', {'weight': 0.6})
('longest common substring problem', 'state variable', {'weight': 0.6})
('longest common substring problem', 'treewidth', {'weight': 0.6})
('longest common substring problem', 'overlapping subproblem', {'weight': 0.6})
('longest common substring problem', 'taylor & francis', {'weight': 0.6})
('longest common substring problem', 'cutting-plane method', {'weight': 0.6})
('longest common substring problem', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('longest common substring problem', 'method of undetermined coefficients', {'weight': 0.6})
('longest common substring problem', 'combinatorial optimization', {'weight': 0.6})
('longest common substring problem', "newton's method in optimization", {'weight': 0.6})
('longest common substring problem', 'matrix chain multiplication', {'weight': 0.6})
('longest common substring problem', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('longest common substring problem', 'dynamic time warping', {'weight': 0.6})
('longest common substring problem', 'dynamic programming language', {'weight': 0.6})
('longest common substring problem', 'call-by-need', {'weight': 0.6})
('longest common substring problem', 'big-o notation', {'weight': 0.6})
('longest common substring problem', 'comparison of optimization software', {'weight': 0.6})
('longest common substring problem', 'quadratic programming', {'weight': 0.6})
('longest common substring problem', 'common lisp', {'weight': 0.6})
('longest common substring problem', 'barrier function', {'weight': 0.6})
('longest common substring problem', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('longest common substring problem', 'gradient descent', {'weight': 0.6})
('longest common substring problem', 'patricia selinger', {'weight': 0.6})
('longest common substring problem', 'discounting', {'weight': 0.6})
('longest common substring problem', 'ronald l. rivest', {'weight': 0.6})
('longest common substring problem', 'iterative method', {'weight': 0.6})
('longest common substring problem', 'limited-memory bfgs', {'weight': 0.6})
('longest common substring problem', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('longest common substring problem', 'longest common substring problem', {'weight': 1})
('longest common substring problem', 'clifford stein', {'weight': 0.6})
('longest common substring problem', 'computer chess', {'weight': 0.6})
('longest common substring problem', 'linear programming', {'weight': 0.6})
('longest common substring problem', 'bitonic tour', {'weight': 0.6})
('longest common substring problem', 'linear search problem', {'weight': 0.6})
('longest common substring problem', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('longest common substring problem', 'systems analysis', {'weight': 0.6})
('longest common substring problem', 'capital (economics)', {'weight': 0.6})
('longest common substring problem', 'levenshtein distance', {'weight': 0.6})
('longest common substring problem', 'nonlinear programming', {'weight': 0.6})
('longest common substring problem', 'computational complexity of mathematical operations', {'weight': 0.6})
('longest common substring problem', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('longest common substring problem', 'gradient', {'weight': 0.6})
('longest common substring problem', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('longest common substring problem', 'bulletin of the american mathematical society', {'weight': 0.6})
('longest common substring problem', 'problems on strings', {'weight': 0.5})
('longest common substring problem', 'u.s. english', {'weight': 0.6})
('longest common substring problem', 'refutation table', {'weight': 0.6})
('longest common substring problem', 'heuristic algorithm', {'weight': 0.6})
('longest common substring problem', 'successive linear programming', {'weight': 0.6})
('longest common substring problem', 'optimal substructure', {'weight': 0.6})
('longest common substring problem', 'programming language', {'weight': 0.6})
('longest common substring problem', 'mergesort', {'weight': 0.6})
('longest common substring problem', "dijkstra's algorithm", {'weight': 0.6})
('longest common substring problem', 'subgradient method', {'weight': 0.6})
('longest common substring problem', 'call-by-name', {'weight': 0.6})
('longest common substring problem', 'longest increasing subsequence problem', {'weight': 0.6})
('longest common substring problem', 'edward prescott', {'weight': 0.6})
('longest common substring problem', 'exponential time', {'weight': 0.6})
('longest common substring problem', 'principle of optimality', {'weight': 0.6})
('longest common substring problem', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('longest common substring problem', 'mathematical game', {'weight': 0.6})
('longest common substring problem', 'nancy stokey', {'weight': 0.6})
('longest common substring problem', 'approximation algorithm', {'weight': 0.6})
('longest common substring problem', 'discrete-time', {'weight': 0.6})
('longest common substring problem', 'cyk algorithm', {'weight': 0.6})
('longest common substring problem', 'markov decision process', {'weight': 0.6})
('longest common substring problem', "powell's method", {'weight': 0.6})
('longest common substring problem', 'wolfe conditions', {'weight': 0.6})
('longest common substring problem', 'convexity in economics', {'weight': 0.6})
('longest common substring problem', 'transposition table', {'weight': 0.6})
('longest common substring problem', 'economics', {'weight': 0.6})
('longest common substring problem', 'backward induction', {'weight': 0.6})
('longest common substring problem', 'golden section search', {'weight': 0.6})
('longest common substring problem', 'edit distance', {'weight': 0.6})
('longest common substring problem', 'tree structure', {'weight': 0.6})
('longest common substring problem', 'exchange algorithm', {'weight': 0.6})
('longest common substring problem', 'dover publications', {'weight': 0.6})
('longest common substring problem', 'seam carving', {'weight': 0.6})
('longest common substring problem', 'recursive least squares', {'weight': 0.6})
('longest common substring problem', 'metaheuristic', {'weight': 0.6})
('longest common substring problem', 'quasi-newton method', {'weight': 0.6})
('longest common substring problem', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('longest common substring problem', 'robert e. lucas', {'weight': 0.6})
('longest common substring problem', 'non-convexity (economics)', {'weight': 0.6})
('longest common substring problem', 'sr1 formula', {'weight': 0.6})
('longest common substring problem', 'mathematical reviews', {'weight': 0.6})
('longest common substring problem', 'puzzle', {'weight': 0.6})
('longest common substring problem', 'associative array', {'weight': 0.6})
('longest common substring problem', 'shortest path problem', {'weight': 0.6})
('longest common substring problem', 'dynamic algorithm', {'weight': 0.6})
('longest common substring problem', 'augmented lagrangian method', {'weight': 0.6})
('longest common substring problem', 'charles delisi', {'weight': 0.6})
('longest common substring problem', 'greedy algorithm', {'weight': 0.6})
('longest common substring problem', "karmarkar's algorithm", {'weight': 0.6})
('longest common substring problem', 'lattice models', {'weight': 0.6})
('longest common substring problem', 'utility', {'weight': 0.6})
('longest common substring problem', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('longest common substring problem', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('longest common substring problem', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('longest common substring problem', 'international standard book number', {'weight': 0.6})
('longest common substring problem', 'undirected graph', {'weight': 0.6})
('longest common substring problem', 'scheme (programming language)', {'weight': 0.6})
('longest common substring problem', 'rna structure', {'weight': 0.6})
('longest common substring problem', 'hanoi', {'weight': 0.6})
('longest common substring problem', 'perl', {'weight': 0.6})
('longest common substring problem', 'digital object identifier', {'weight': 0.6})
('longest common substring problem', 'sequential quadratic programming', {'weight': 0.6})
('longest common substring problem', "dinic's algorithm", {'weight': 0.6})
('longest common substring problem', 'pseudo-polynomial time', {'weight': 0.6})
('longest common substring problem', 'partition problem', {'weight': 0.6})
('longest common substring problem', 'stochastic programming', {'weight': 0.6})
('longest common substring problem', 'hill climbing', {'weight': 0.6})
('longest common substring problem', 'top-down', {'weight': 0.6})
('longest common substring problem', 'de boor algorithm', {'weight': 0.6})
('longest common substring problem', 'optimization algorithm', {'weight': 0.6})
('longest common substring problem', "kruskal's algorithm", {'weight': 0.6})
('longest common substring problem', 'jacques philippe marie binet', {'weight': 0.6})
('longest common substring problem', 'tabu search', {'weight': 0.6})
('longest common substring problem', 'divide and conquer algorithm', {'weight': 0.6})
('longest common substring problem', "johnson's algorithm", {'weight': 0.6})
('longest common substring problem', 'evolutionary algorithm', {'weight': 0.6})
('longest common substring problem', 'clique-width', {'weight': 0.6})
('longest common substring problem', 'dynamic programming', {'weight': 0.6})
('longest common substring problem', 'subroutine', {'weight': 0.6})
('longest common substring problem', 'simulated annealing', {'weight': 0.6})
('longest common substring problem', 'tower of hanoi', {'weight': 0.6})
('longest common substring problem', 'branch and bound', {'weight': 0.6})
('longest common substring problem', 'engineering', {'weight': 0.6})
('longest common substring problem', 'matroid', {'weight': 0.6})
('longest common substring problem', 'viterbi algorithm', {'weight': 0.6})
('longest common substring problem', "lemke's algorithm", {'weight': 0.6})
('longest common substring problem', 'simplex algorithm', {'weight': 0.6})
('longest common substring problem', 'local search (optimization)', {'weight': 0.6})
('longest common substring problem', 'hessian matrix', {'weight': 0.6})
('longest common substring problem', 'ibm system r', {'weight': 0.6})
('longest common substring problem', 'penalty method', {'weight': 0.6})
('longest common substring problem', 'prolog', {'weight': 0.6})
('longest common substring problem', 'time-invariant system', {'weight': 0.6})
('longest common substring problem', 'criss-cross algorithm', {'weight': 0.6})
('longest common substring problem', 'revised simplex algorithm', {'weight': 0.6})
('longest common substring problem', 'the mathematical association of america', {'weight': 0.6})
('longest common substring problem', 'line search', {'weight': 0.6})
('longest common substring problem', 'j (programming language)', {'weight': 0.6})
('longest common substring problem', 'word wrap', {'weight': 0.6})
('longest common substring problem', 'subset sum problem', {'weight': 0.6})
('longest common substring problem', 'integer programming', {'weight': 0.6})
('longest common substring problem', 'nucleosome', {'weight': 0.6})
('longest common substring problem', 'earley algorithm', {'weight': 0.6})
('longest common substring problem', 'referential transparency (computer science)', {'weight': 0.6})
('longest common substring problem', 'recursion', {'weight': 0.6})
('longest common substring problem', 'mathematica', {'weight': 0.6})
('longest common substring problem', 'quicksort', {'weight': 0.6})
('longest common substring problem', 'recursion (computer science)', {'weight': 0.6})
('longest common substring problem', 'checkerboard', {'weight': 0.6})
('longest common substring problem', 'computer science', {'weight': 0.6})
('longest common substring problem', 'brute-force search', {'weight': 0.6})
('longest common substring problem', 'mathematics', {'weight': 0.6})
('longest common substring problem', 'depth-first search', {'weight': 0.6})
('longest common substring problem', 'top-down and bottom-up design', {'weight': 0.6})
('longest common substring problem', 'correspondence problem', {'weight': 0.6})
('longest common substring problem', 'transcription factor', {'weight': 0.6})
('longest common substring problem', 'tree decomposition', {'weight': 0.6})
('longest common substring problem', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('longest common substring problem', 'structural alignment', {'weight': 0.6})
('longest common substring problem', 'local convergence', {'weight': 0.6})
('longest common substring problem', 'knapsack problem', {'weight': 0.6})
('longest common substring problem', 'graph algorithm', {'weight': 0.6})
('longest common substring problem', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('longest common substring problem', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('longest common substring problem', 'hidden markov model', {'weight': 0.6})
('longest common substring problem', 'string (computer science)', {'weight': 0.6})
('longest common substring problem', 'bioinformatics', {'weight': 0.6})
('longest common substring problem', 'genetics', {'weight': 0.6})
('longest common substring problem', 'mathematical optimization', {'weight': 0.6})
('longest common substring problem', 'artificial neural networks', {'weight': 0.6})
('longest common substring problem', 'introduction to algorithms', {'weight': 0.6})
('longest common substring problem', 'thomas h. cormen', {'weight': 0.6})
('longest common substring problem', 'music information retrieval', {'weight': 0.6})
('longest common substring problem', 'beat (music)', {'weight': 0.6})
('longest common substring problem', 'longest common subsequence problem', {'weight': 0.6})
('longest common substring problem', 'convex minimization', {'weight': 0.6})
('longest common substring problem', 'successive parabolic interpolation', {'weight': 0.6})
('longest common substring problem', 'fibonacci sequence', {'weight': 0.6})
('longest common substring problem', 'maximum subarray problem', {'weight': 0.6})
('longest common substring problem', 'convex optimization', {'weight': 0.6})
('longest common substring problem', 'memoization', {'weight': 0.6})
('longest common substring problem', 'richard bellman', {'weight': 0.6})
('longest common substring problem', 'exponential growth', {'weight': 0.6})
('longest common substring problem', 'charles e. leiserson', {'weight': 0.6})
('longest common substring problem', 'charles erwin wilson', {'weight': 0.6})
('longest common substring problem', 'interval scheduling', {'weight': 0.6})
('longest common substring problem', 'chart parser', {'weight': 0.6})
('longest common substring problem', 'travelling salesman problem', {'weight': 0.6})
('longest common substring problem', 'bellman equation', {'weight': 0.6})
("johnson's algorithm", 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
("johnson's algorithm", 'photoshop', {'weight': 0.6})
("johnson's algorithm", 'sequence alignment', {'weight': 0.6})
("johnson's algorithm", 'flow network', {'weight': 0.6})
("johnson's algorithm", 'ellipsoid method', {'weight': 0.6})
("johnson's algorithm", 'chain matrix multiplication', {'weight': 0.6})
("johnson's algorithm", 'ieee', {'weight': 0.6})
("johnson's algorithm", 'backtracking', {'weight': 0.6})
("johnson's algorithm", 'nonlinear conjugate gradient method', {'weight': 0.6})
("johnson's algorithm", 'dynamic problem', {'weight': 0.6})
("johnson's algorithm", 'trust region', {'weight': 0.6})
("johnson's algorithm", 'function (mathematics)', {'weight': 0.6})
("johnson's algorithm", 'minimum spanning tree', {'weight': 0.6})
("johnson's algorithm", 'context-free grammar', {'weight': 0.6})
("johnson's algorithm", 'branch and cut', {'weight': 0.6})
("johnson's algorithm", 'state variable', {'weight': 0.6})
("johnson's algorithm", 'treewidth', {'weight': 0.6})
("johnson's algorithm", 'overlapping subproblem', {'weight': 0.6})
("johnson's algorithm", 'taylor & francis', {'weight': 0.6})
("johnson's algorithm", 'cutting-plane method', {'weight': 0.6})
("johnson's algorithm", 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
("johnson's algorithm", 'method of undetermined coefficients', {'weight': 0.6})
("johnson's algorithm", 'combinatorial optimization', {'weight': 0.6})
("johnson's algorithm", "newton's method in optimization", {'weight': 0.6})
("johnson's algorithm", 'matrix chain multiplication', {'weight': 0.6})
("johnson's algorithm", 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
("johnson's algorithm", 'dynamic time warping', {'weight': 0.6})
("johnson's algorithm", 'dynamic programming language', {'weight': 0.6})
("johnson's algorithm", 'call-by-need', {'weight': 0.6})
("johnson's algorithm", 'big-o notation', {'weight': 0.6})
("johnson's algorithm", 'graph algorithms', {'weight': 0.5})
("johnson's algorithm", 'comparison of optimization software', {'weight': 0.6})
("johnson's algorithm", 'quadratic programming', {'weight': 0.6})
("johnson's algorithm", 'common lisp', {'weight': 0.6})
("johnson's algorithm", 'barrier function', {'weight': 0.6})
("johnson's algorithm", 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
("johnson's algorithm", 'gradient descent', {'weight': 0.6})
("johnson's algorithm", 'patricia selinger', {'weight': 0.6})
("johnson's algorithm", 'discounting', {'weight': 0.6})
("johnson's algorithm", 'ronald l. rivest', {'weight': 0.6})
("johnson's algorithm", 'iterative method', {'weight': 0.6})
("johnson's algorithm", 'limited-memory bfgs', {'weight': 0.6})
("johnson's algorithm", 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
("johnson's algorithm", 'longest common substring problem', {'weight': 0.6})
("johnson's algorithm", 'clifford stein', {'weight': 0.6})
("johnson's algorithm", 'computer chess', {'weight': 0.6})
("johnson's algorithm", 'linear programming', {'weight': 0.6})
("johnson's algorithm", 'bitonic tour', {'weight': 0.6})
("johnson's algorithm", 'linear search problem', {'weight': 0.6})
("johnson's algorithm", 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
("johnson's algorithm", 'systems analysis', {'weight': 0.6})
("johnson's algorithm", 'capital (economics)', {'weight': 0.6})
("johnson's algorithm", 'levenshtein distance', {'weight': 0.6})
("johnson's algorithm", 'nonlinear programming', {'weight': 0.6})
("johnson's algorithm", 'computational complexity of mathematical operations', {'weight': 0.6})
("johnson's algorithm", 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
("johnson's algorithm", 'gradient', {'weight': 0.6})
("johnson's algorithm", 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
("johnson's algorithm", 'bulletin of the american mathematical society', {'weight': 0.6})
("johnson's algorithm", 'u.s. english', {'weight': 0.6})
("johnson's algorithm", 'refutation table', {'weight': 0.6})
("johnson's algorithm", 'heuristic algorithm', {'weight': 0.6})
("johnson's algorithm", 'successive linear programming', {'weight': 0.6})
("johnson's algorithm", 'optimal substructure', {'weight': 0.6})
("johnson's algorithm", 'programming language', {'weight': 0.6})
("johnson's algorithm", 'mergesort', {'weight': 0.6})
("johnson's algorithm", "dijkstra's algorithm", {'weight': 0.6})
("johnson's algorithm", 'subgradient method', {'weight': 0.6})
("johnson's algorithm", 'call-by-name', {'weight': 0.6})
("johnson's algorithm", 'longest increasing subsequence problem', {'weight': 0.6})
("johnson's algorithm", 'edward prescott', {'weight': 0.6})
("johnson's algorithm", 'exponential time', {'weight': 0.6})
("johnson's algorithm", 'principle of optimality', {'weight': 0.6})
("johnson's algorithm", "bor\xe5\xafvka's algorithm", {'weight': 0.6})
("johnson's algorithm", 'mathematical game', {'weight': 0.6})
("johnson's algorithm", 'nancy stokey', {'weight': 0.6})
("johnson's algorithm", 'approximation algorithm', {'weight': 0.6})
("johnson's algorithm", 'discrete-time', {'weight': 0.6})
("johnson's algorithm", 'cyk algorithm', {'weight': 0.6})
("johnson's algorithm", 'markov decision process', {'weight': 0.6})
("johnson's algorithm", "powell's method", {'weight': 0.6})
("johnson's algorithm", 'wolfe conditions', {'weight': 0.6})
("johnson's algorithm", 'convexity in economics', {'weight': 0.6})
("johnson's algorithm", 'transposition table', {'weight': 0.6})
("johnson's algorithm", 'economics', {'weight': 0.6})
("johnson's algorithm", 'backward induction', {'weight': 0.6})
("johnson's algorithm", 'golden section search', {'weight': 0.6})
("johnson's algorithm", 'edit distance', {'weight': 0.6})
("johnson's algorithm", 'tree structure', {'weight': 0.6})
("johnson's algorithm", 'exchange algorithm', {'weight': 0.6})
("johnson's algorithm", 'dover publications', {'weight': 0.6})
("johnson's algorithm", 'seam carving', {'weight': 0.6})
("johnson's algorithm", 'recursive least squares', {'weight': 0.6})
("johnson's algorithm", 'metaheuristic', {'weight': 0.6})
("johnson's algorithm", 'quasi-newton method', {'weight': 0.6})
("johnson's algorithm", 'on-line encyclopedia of integer sequences', {'weight': 0.6})
("johnson's algorithm", 'robert e. lucas', {'weight': 0.6})
("johnson's algorithm", 'non-convexity (economics)', {'weight': 0.6})
("johnson's algorithm", 'sr1 formula', {'weight': 0.6})
("johnson's algorithm", 'mathematical reviews', {'weight': 0.6})
("johnson's algorithm", 'puzzle', {'weight': 0.6})
("johnson's algorithm", 'associative array', {'weight': 0.6})
("johnson's algorithm", 'shortest path problem', {'weight': 0.6})
("johnson's algorithm", 'dynamic algorithm', {'weight': 0.6})
("johnson's algorithm", 'augmented lagrangian method', {'weight': 0.6})
("johnson's algorithm", 'charles delisi', {'weight': 0.6})
("johnson's algorithm", 'greedy algorithm', {'weight': 0.6})
("johnson's algorithm", "karmarkar's algorithm", {'weight': 0.6})
("johnson's algorithm", 'lattice models', {'weight': 0.6})
("johnson's algorithm", 'utility', {'weight': 0.6})
("johnson's algorithm", 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
("johnson's algorithm", 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
("johnson's algorithm", 'push-relabel maximum flow algorithm', {'weight': 0.6})
("johnson's algorithm", 'international standard book number', {'weight': 0.6})
("johnson's algorithm", 'undirected graph', {'weight': 0.6})
("johnson's algorithm", 'scheme (programming language)', {'weight': 0.6})
("johnson's algorithm", 'rna structure', {'weight': 0.6})
("johnson's algorithm", 'hanoi', {'weight': 0.6})
("johnson's algorithm", 'perl', {'weight': 0.6})
("johnson's algorithm", 'digital object identifier', {'weight': 0.6})
("johnson's algorithm", 'sequential quadratic programming', {'weight': 0.6})
("johnson's algorithm", "dinic's algorithm", {'weight': 0.6})
("johnson's algorithm", 'pseudo-polynomial time', {'weight': 0.6})
("johnson's algorithm", 'partition problem', {'weight': 0.6})
("johnson's algorithm", 'stochastic programming', {'weight': 0.6})
("johnson's algorithm", 'hill climbing', {'weight': 0.6})
("johnson's algorithm", 'top-down', {'weight': 0.6})
("johnson's algorithm", 'de boor algorithm', {'weight': 0.6})
("johnson's algorithm", 'optimization algorithm', {'weight': 0.6})
("johnson's algorithm", "kruskal's algorithm", {'weight': 0.6})
("johnson's algorithm", 'jacques philippe marie binet', {'weight': 0.6})
("johnson's algorithm", 'tabu search', {'weight': 0.6})
("johnson's algorithm", 'divide and conquer algorithm', {'weight': 0.6})
("johnson's algorithm", "johnson's algorithm", {'weight': 1})
("johnson's algorithm", 'evolutionary algorithm', {'weight': 0.6})
("johnson's algorithm", 'clique-width', {'weight': 0.6})
("johnson's algorithm", 'dynamic programming', {'weight': 0.6})
("johnson's algorithm", 'subroutine', {'weight': 0.6})
("johnson's algorithm", 'simulated annealing', {'weight': 0.6})
("johnson's algorithm", 'tower of hanoi', {'weight': 0.6})
("johnson's algorithm", 'branch and bound', {'weight': 0.6})
("johnson's algorithm", 'engineering', {'weight': 0.6})
("johnson's algorithm", 'matroid', {'weight': 0.6})
("johnson's algorithm", 'viterbi algorithm', {'weight': 0.6})
("johnson's algorithm", "lemke's algorithm", {'weight': 0.6})
("johnson's algorithm", 'simplex algorithm', {'weight': 0.6})
("johnson's algorithm", 'local search (optimization)', {'weight': 0.6})
("johnson's algorithm", 'hessian matrix', {'weight': 0.6})
("johnson's algorithm", 'ibm system r', {'weight': 0.6})
("johnson's algorithm", 'penalty method', {'weight': 0.6})
("johnson's algorithm", 'prolog', {'weight': 0.6})
("johnson's algorithm", 'time-invariant system', {'weight': 0.6})
("johnson's algorithm", 'criss-cross algorithm', {'weight': 0.6})
("johnson's algorithm", 'revised simplex algorithm', {'weight': 0.6})
("johnson's algorithm", 'the mathematical association of america', {'weight': 0.6})
("johnson's algorithm", 'line search', {'weight': 0.6})
("johnson's algorithm", 'j (programming language)', {'weight': 0.6})
("johnson's algorithm", 'word wrap', {'weight': 0.6})
("johnson's algorithm", 'subset sum problem', {'weight': 0.6})
("johnson's algorithm", 'integer programming', {'weight': 0.6})
("johnson's algorithm", 'nucleosome', {'weight': 0.6})
("johnson's algorithm", 'earley algorithm', {'weight': 0.6})
("johnson's algorithm", 'referential transparency (computer science)', {'weight': 0.6})
("johnson's algorithm", 'recursion', {'weight': 0.6})
("johnson's algorithm", 'mathematica', {'weight': 0.6})
("johnson's algorithm", 'quicksort', {'weight': 0.6})
("johnson's algorithm", 'recursion (computer science)', {'weight': 0.6})
("johnson's algorithm", 'checkerboard', {'weight': 0.6})
("johnson's algorithm", 'computer science', {'weight': 0.6})
("johnson's algorithm", 'brute-force search', {'weight': 0.6})
("johnson's algorithm", 'mathematics', {'weight': 0.6})
("johnson's algorithm", 'depth-first search', {'weight': 0.6})
("johnson's algorithm", 'top-down and bottom-up design', {'weight': 0.6})
("johnson's algorithm", 'correspondence problem', {'weight': 0.6})
("johnson's algorithm", 'transcription factor', {'weight': 0.6})
("johnson's algorithm", 'tree decomposition', {'weight': 0.6})
("johnson's algorithm", 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
("johnson's algorithm", 'structural alignment', {'weight': 0.6})
("johnson's algorithm", 'local convergence', {'weight': 0.6})
("johnson's algorithm", 'knapsack problem', {'weight': 0.6})
("johnson's algorithm", 'graph algorithm', {'weight': 0.6})
("johnson's algorithm", 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
("johnson's algorithm", 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
("johnson's algorithm", 'hidden markov model', {'weight': 0.6})
("johnson's algorithm", 'string (computer science)', {'weight': 0.6})
("johnson's algorithm", 'bioinformatics', {'weight': 0.6})
("johnson's algorithm", 'genetics', {'weight': 0.6})
("johnson's algorithm", 'mathematical optimization', {'weight': 0.6})
("johnson's algorithm", 'artificial neural networks', {'weight': 0.6})
("johnson's algorithm", 'introduction to algorithms', {'weight': 0.6})
("johnson's algorithm", 'thomas h. cormen', {'weight': 0.6})
("johnson's algorithm", 'music information retrieval', {'weight': 0.6})
("johnson's algorithm", 'beat (music)', {'weight': 0.6})
("johnson's algorithm", 'longest common subsequence problem', {'weight': 0.6})
("johnson's algorithm", 'convex minimization', {'weight': 0.6})
("johnson's algorithm", 'successive parabolic interpolation', {'weight': 0.6})
("johnson's algorithm", 'fibonacci sequence', {'weight': 0.6})
("johnson's algorithm", 'maximum subarray problem', {'weight': 0.6})
("johnson's algorithm", 'convex optimization', {'weight': 0.6})
("johnson's algorithm", 'memoization', {'weight': 0.6})
("johnson's algorithm", 'richard bellman', {'weight': 0.6})
("johnson's algorithm", 'exponential growth', {'weight': 0.6})
("johnson's algorithm", 'charles e. leiserson', {'weight': 0.6})
("johnson's algorithm", 'charles erwin wilson', {'weight': 0.6})
("johnson's algorithm", 'interval scheduling', {'weight': 0.6})
("johnson's algorithm", 'chart parser', {'weight': 0.6})
("johnson's algorithm", 'travelling salesman problem', {'weight': 0.6})
("johnson's algorithm", 'bellman equation', {'weight': 0.6})
('capital (economics)', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('capital (economics)', 'photoshop', {'weight': 0.6})
('capital (economics)', 'sequence alignment', {'weight': 0.6})
('capital (economics)', 'constant capital', {'weight': 0.7})
('capital (economics)', 'flow network', {'weight': 0.6})
('capital (economics)', 'das kapital', {'weight': 0.7})
('capital (economics)', 'ellipsoid method', {'weight': 0.6})
('capital (economics)', 'chain matrix multiplication', {'weight': 0.6})
('capital (economics)', 'ieee', {'weight': 0.6})
('capital (economics)', 'backtracking', {'weight': 0.6})
('capital (economics)', 'nonlinear conjugate gradient method', {'weight': 0.6})
('capital (economics)', 'dynamic problem', {'weight': 0.6})
('capital (economics)', 'trust region', {'weight': 0.6})
('capital (economics)', 'function (mathematics)', {'weight': 0.6})
('capital (economics)', 'simplex algorithm', {'weight': 0.6})
('capital (economics)', 'minimum spanning tree', {'weight': 0.6})
('capital (economics)', 'context-free grammar', {'weight': 0.6})
('capital (economics)', 'capital good', {'weight': 0.7})
('capital (economics)', 'branch and cut', {'weight': 0.6})
('capital (economics)', 'state variable', {'weight': 0.6})
('capital (economics)', 'treewidth', {'weight': 0.6})
('capital (economics)', 'overlapping subproblem', {'weight': 0.6})
('capital (economics)', 'taylor & francis', {'weight': 0.6})
('capital (economics)', 'cutting-plane method', {'weight': 0.6})
('capital (economics)', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('capital (economics)', 'method of undetermined coefficients', {'weight': 0.6})
('capital (economics)', 'combinatorial optimization', {'weight': 0.6})
('capital (economics)', "newton's method in optimization", {'weight': 0.6})
('capital (economics)', 'matrix chain multiplication', {'weight': 0.6})
('capital (economics)', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('capital (economics)', 'dynamic time warping', {'weight': 0.6})
('capital (economics)', 'dynamic programming language', {'weight': 0.6})
('capital (economics)', 'call-by-need', {'weight': 0.6})
('capital (economics)', 'big-o notation', {'weight': 0.6})
('capital (economics)', 'comparison of optimization software', {'weight': 0.6})
('capital (economics)', 'quadratic programming', {'weight': 0.6})
('capital (economics)', 'common lisp', {'weight': 0.6})
('capital (economics)', 'barrier function', {'weight': 0.6})
('capital (economics)', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('capital (economics)', 'gradient descent', {'weight': 0.6})
('capital (economics)', 'patricia selinger', {'weight': 0.6})
('capital (economics)', 'discounting', {'weight': 0.6})
('capital (economics)', 'ronald l. rivest', {'weight': 0.6})
('capital (economics)', 'iterative method', {'weight': 0.6})
('capital (economics)', 'limited-memory bfgs', {'weight': 0.6})
('capital (economics)', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('capital (economics)', 'longest common substring problem', {'weight': 0.6})
('capital (economics)', 'venture capital', {'weight': 0.7})
('capital (economics)', 'clifford stein', {'weight': 0.6})
('capital (economics)', 'computer chess', {'weight': 0.6})
('capital (economics)', 'linear programming', {'weight': 0.6})
('capital (economics)', 'bitonic tour', {'weight': 0.6})
('capital (economics)', 'linear search problem', {'weight': 0.6})
('capital (economics)', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('capital (economics)', 'systems analysis', {'weight': 0.6})
('capital (economics)', 'capital (economics)', {'weight': 1})
('capital (economics)', 'levenshtein distance', {'weight': 0.6})
('capital (economics)', 'nonlinear programming', {'weight': 0.6})
('capital (economics)', 'computational complexity of mathematical operations', {'weight': 0.6})
('capital (economics)', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('capital (economics)', 'gradient', {'weight': 0.6})
('capital (economics)', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('capital (economics)', 'convex minimization', {'weight': 0.6})
('capital (economics)', 'bulletin of the american mathematical society', {'weight': 0.6})
('capital (economics)', 'u.s. english', {'weight': 0.6})
('capital (economics)', 'refutation table', {'weight': 0.6})
('capital (economics)', 'heuristic algorithm', {'weight': 0.6})
('capital (economics)', 'successive linear programming', {'weight': 0.6})
('capital (economics)', 'optimal substructure', {'weight': 0.6})
('capital (economics)', 'programming language', {'weight': 0.6})
('capital (economics)', 'mergesort', {'weight': 0.6})
('capital (economics)', "dijkstra's algorithm", {'weight': 0.6})
('capital (economics)', 'subgradient method', {'weight': 0.6})
('capital (economics)', 'call-by-name', {'weight': 0.6})
('capital (economics)', 'longest increasing subsequence problem', {'weight': 0.6})
('capital (economics)', 'edward prescott', {'weight': 0.6})
('capital (economics)', 'exponential time', {'weight': 0.6})
('capital (economics)', 'principle of optimality', {'weight': 0.6})
('capital (economics)', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('capital (economics)', 'organic composition of capital', {'weight': 0.7})
('capital (economics)', 'mathematical game', {'weight': 0.6})
('capital (economics)', 'nancy stokey', {'weight': 0.6})
('capital (economics)', 'approximation algorithm', {'weight': 0.6})
('capital (economics)', 'discrete-time', {'weight': 0.6})
('capital (economics)', 'cyk algorithm', {'weight': 0.6})
('capital (economics)', 'markov decision process', {'weight': 0.6})
('capital (economics)', "powell's method", {'weight': 0.6})
('capital (economics)', 'wolfe conditions', {'weight': 0.6})
('capital (economics)', 'convexity in economics', {'weight': 0.6})
('capital (economics)', 'transposition table', {'weight': 0.6})
('capital (economics)', 'organizational capital', {'weight': 0.7})
('capital (economics)', 'economics', {'weight': 0.6})
('capital (economics)', 'backward induction', {'weight': 0.6})
('capital (economics)', 'golden section search', {'weight': 0.6})
('capital (economics)', 'edit distance', {'weight': 0.6})
('capital (economics)', 'tree structure', {'weight': 0.6})
('capital (economics)', 'exchange algorithm', {'weight': 0.6})
('capital (economics)', 'dover publications', {'weight': 0.6})
('capital (economics)', 'seam carving', {'weight': 0.6})
('capital (economics)', 'recursive least squares', {'weight': 0.6})
('capital (economics)', 'metaheuristic', {'weight': 0.6})
('capital (economics)', 'quasi-newton method', {'weight': 0.6})
('capital (economics)', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('capital (economics)', 'robert e. lucas', {'weight': 0.6})
('capital (economics)', 'non-convexity (economics)', {'weight': 0.6})
('capital (economics)', 'sr1 formula', {'weight': 0.6})
('capital (economics)', 'the accumulation of capital', {'weight': 0.7})
('capital (economics)', 'mathematical reviews', {'weight': 0.6})
('capital (economics)', 'puzzle', {'weight': 0.6})
('capital (economics)', 'associative array', {'weight': 0.6})
('capital (economics)', 'shortest path problem', {'weight': 0.6})
('capital (economics)', 'dynamic algorithm', {'weight': 0.6})
('capital (economics)', 'augmented lagrangian method', {'weight': 0.6})
('capital (economics)', 'charles delisi', {'weight': 0.6})
('capital (economics)', 'greedy algorithm', {'weight': 0.6})
('capital (economics)', "karmarkar's algorithm", {'weight': 0.6})
('capital (economics)', 'cambridge capital controversy', {'weight': 0.7})
('capital (economics)', 'lattice models', {'weight': 0.6})
('capital (economics)', 'utility', {'weight': 0.6})
('capital (economics)', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('capital (economics)', 'variable capital', {'weight': 0.7})
('capital (economics)', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('capital (economics)', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('capital (economics)', 'international standard book number', {'weight': 0.6})
('capital (economics)', 'undirected graph', {'weight': 0.6})
('capital (economics)', 'scheme (programming language)', {'weight': 0.6})
('capital (economics)', 'rna structure', {'weight': 0.6})
('capital (economics)', 'hanoi', {'weight': 0.6})
('capital (economics)', 'perl', {'weight': 0.6})
('capital (economics)', 'capital deepening', {'weight': 0.7})
('capital (economics)', 'digital object identifier', {'weight': 0.6})
('capital (economics)', 'sequential quadratic programming', {'weight': 0.6})
('capital (economics)', "dinic's algorithm", {'weight': 0.6})
('capital (economics)', 'pseudo-polynomial time', {'weight': 0.6})
('capital (economics)', 'partition problem', {'weight': 0.6})
('capital (economics)', 'stochastic programming', {'weight': 0.6})
('capital (economics)', 'hill climbing', {'weight': 0.6})
('capital (economics)', 'top-down', {'weight': 0.6})
('capital (economics)', 'de boor algorithm', {'weight': 0.6})
('capital (economics)', 'optimization algorithm', {'weight': 0.6})
('capital (economics)', "kruskal's algorithm", {'weight': 0.6})
('capital (economics)', 'jacques philippe marie binet', {'weight': 0.6})
('capital (economics)', 'tabu search', {'weight': 0.6})
('capital (economics)', 'divide and conquer algorithm', {'weight': 0.6})
('capital (economics)', "johnson's algorithm", {'weight': 0.6})
('capital (economics)', 'evolutionary algorithm', {'weight': 0.6})
('capital (economics)', 'clique-width', {'weight': 0.6})
('capital (economics)', 'dynamic programming', {'weight': 0.6})
('capital (economics)', 'subroutine', {'weight': 0.6})
('capital (economics)', 'simulated annealing', {'weight': 0.6})
('capital (economics)', 'tower of hanoi', {'weight': 0.6})
('capital (economics)', 'factors of production', {'weight': 0.7})
('capital (economics)', 'branch and bound', {'weight': 0.6})
('capital (economics)', 'engineering', {'weight': 0.6})
('capital (economics)', 'matroid', {'weight': 0.6})
('capital (economics)', 'viterbi algorithm', {'weight': 0.6})
('capital (economics)', "lemke's algorithm", {'weight': 0.6})
('capital (economics)', 'political economy', {'weight': 0.5})
('capital (economics)', 'local search (optimization)', {'weight': 0.6})
('capital (economics)', 'hessian matrix', {'weight': 0.6})
('capital (economics)', 'ibm system r', {'weight': 0.6})
('capital (economics)', 'penalty method', {'weight': 0.6})
('capital (economics)', 'prolog', {'weight': 0.6})
('capital (economics)', 'time-invariant system', {'weight': 0.6})
('capital (economics)', 'criss-cross algorithm', {'weight': 0.6})
('capital (economics)', 'revised simplex algorithm', {'weight': 0.6})
('capital (economics)', 'the mathematical association of america', {'weight': 0.6})
('capital (economics)', 'line search', {'weight': 0.6})
('capital (economics)', 'j (programming language)', {'weight': 0.6})
('capital (economics)', 'word wrap', {'weight': 0.6})
('capital (economics)', 'physical capital', {'weight': 0.7})
('capital (economics)', 'capitalism', {'weight': 0.7})
('capital (economics)', 'subset sum problem', {'weight': 0.6})
('capital (economics)', 'integer programming', {'weight': 0.6})
('capital (economics)', 'nucleosome', {'weight': 0.6})
('capital (economics)', 'earley algorithm', {'weight': 0.6})
('capital (economics)', 'economics terminology', {'weight': 0.5})
('capital (economics)', 'recursion', {'weight': 0.6})
('capital (economics)', 'mathematica', {'weight': 0.6})
('capital (economics)', 'quicksort', {'weight': 0.6})
('capital (economics)', 'recursion (computer science)', {'weight': 0.6})
('capital (economics)', 'checkerboard', {'weight': 0.6})
('capital (economics)', 'computer science', {'weight': 0.6})
('capital (economics)', 'wealth (economics)', {'weight': 0.7})
('capital (economics)', 'brute-force search', {'weight': 0.6})
('capital (economics)', 'mathematics', {'weight': 0.6})
('capital (economics)', 'depth-first search', {'weight': 0.6})
('capital (economics)', 'top-down and bottom-up design', {'weight': 0.6})
('capital (economics)', 'correspondence problem', {'weight': 0.6})
('capital (economics)', 'transcription factor', {'weight': 0.6})
('capital (economics)', 'tree decomposition', {'weight': 0.6})
('capital (economics)', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('capital (economics)', 'structural alignment', {'weight': 0.6})
('capital (economics)', 'local convergence', {'weight': 0.6})
('capital (economics)', 'knapsack problem', {'weight': 0.6})
('capital (economics)', 'graph algorithm', {'weight': 0.6})
('capital (economics)', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('capital (economics)', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('capital (economics)', 'hidden markov model', {'weight': 0.6})
('capital (economics)', 'string (computer science)', {'weight': 0.6})
('capital (economics)', 'bioinformatics', {'weight': 0.6})
('capital (economics)', 'capital accumulation', {'weight': 0.7})
('capital (economics)', 'genetics', {'weight': 0.6})
('capital (economics)', 'mathematical optimization', {'weight': 0.6})
('capital (economics)', 'artificial neural networks', {'weight': 0.6})
('capital (economics)', 'introduction to algorithms', {'weight': 0.6})
('capital (economics)', 'thomas h. cormen', {'weight': 0.6})
('capital (economics)', 'music information retrieval', {'weight': 0.6})
('capital (economics)', 'beat (music)', {'weight': 0.6})
('capital (economics)', 'longest common subsequence problem', {'weight': 0.6})
('capital (economics)', 'referential transparency (computer science)', {'weight': 0.6})
('capital (economics)', 'successive parabolic interpolation', {'weight': 0.6})
('capital (economics)', 'fibonacci sequence', {'weight': 0.6})
('capital (economics)', 'maximum subarray problem', {'weight': 0.6})
('capital (economics)', 'convex optimization', {'weight': 0.6})
('capital (economics)', 'capitalist mode of production', {'weight': 0.7})
('capital (economics)', 'memoization', {'weight': 0.6})
('capital (economics)', 'richard bellman', {'weight': 0.6})
('capital (economics)', 'exponential growth', {'weight': 0.6})
('capital (economics)', 'charles e. leiserson', {'weight': 0.6})
('capital (economics)', 'charles erwin wilson', {'weight': 0.6})
('capital (economics)', 'interval scheduling', {'weight': 0.6})
('capital (economics)', 'means of production', {'weight': 0.7})
('capital (economics)', 'chart parser', {'weight': 0.6})
('capital (economics)', 'travelling salesman problem', {'weight': 0.6})
('capital (economics)', 'bellman equation', {'weight': 0.6})
('genetics', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('genetics', 'photoshop', {'weight': 0.6})
('genetics', 'sequence alignment', {'weight': 0.6})
('genetics', 'flow network', {'weight': 0.6})
('genetics', 'ellipsoid method', {'weight': 0.6})
('genetics', 'chain matrix multiplication', {'weight': 0.6})
('genetics', 'ieee', {'weight': 0.6})
('genetics', 'backtracking', {'weight': 0.6})
('genetics', 'nonlinear conjugate gradient method', {'weight': 0.6})
('genetics', 'dynamic problem', {'weight': 0.6})
('genetics', 'genetic disorder', {'weight': 0.7})
('genetics', 'trust region', {'weight': 0.6})
('genetics', 'function (mathematics)', {'weight': 0.6})
('genetics', 'minimum spanning tree', {'weight': 0.6})
('genetics', 'context-free grammar', {'weight': 0.6})
('genetics', 'branch and cut', {'weight': 0.6})
('genetics', 'state variable', {'weight': 0.6})
('genetics', 'treewidth', {'weight': 0.6})
('genetics', 'overlapping subproblem', {'weight': 0.6})
('genetics', 'taylor & francis', {'weight': 0.6})
('genetics', 'evolution', {'weight': 0.7})
('genetics', 'eugenics', {'weight': 0.7})
('genetics', 'cutting-plane method', {'weight': 0.6})
('genetics', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('genetics', 'method of undetermined coefficients', {'weight': 0.6})
('genetics', 'combinatorial optimization', {'weight': 0.6})
('genetics', "newton's method in optimization", {'weight': 0.6})
('genetics', 'matrix chain multiplication', {'weight': 0.6})
('genetics', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('genetics', 'dynamic time warping', {'weight': 0.6})
('genetics', 'dynamic programming language', {'weight': 0.6})
('genetics', 'call-by-need', {'weight': 0.6})
('genetics', 'big-o notation', {'weight': 0.6})
('genetics', 'comparison of optimization software', {'weight': 0.6})
('genetics', 'quadratic programming', {'weight': 0.6})
('genetics', 'common lisp', {'weight': 0.6})
('genetics', 'barrier function', {'weight': 0.6})
('genetics', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('genetics', 'gradient descent', {'weight': 0.6})
('genetics', 'patricia selinger', {'weight': 0.6})
('genetics', 'discounting', {'weight': 0.6})
('genetics', 'ronald l. rivest', {'weight': 0.6})
('genetics', 'iterative method', {'weight': 0.6})
('genetics', 'limited-memory bfgs', {'weight': 0.6})
('genetics', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('genetics', 'longest common substring problem', {'weight': 0.6})
('genetics', 'clifford stein', {'weight': 0.6})
('genetics', 'computer chess', {'weight': 0.6})
('genetics', 'linear programming', {'weight': 0.6})
('genetics', 'bitonic tour', {'weight': 0.6})
('genetics', 'linear search problem', {'weight': 0.6})
('genetics', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('genetics', 'systems analysis', {'weight': 0.6})
('genetics', 'capital (economics)', {'weight': 0.6})
('genetics', 'levenshtein distance', {'weight': 0.6})
('genetics', 'nonlinear programming', {'weight': 0.6})
('genetics', 'genetics', {'weight': 1})
('genetics', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('genetics', 'gradient', {'weight': 0.6})
('genetics', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('genetics', 'genetic engineering', {'weight': 0.7})
('genetics', 'bulletin of the american mathematical society', {'weight': 0.6})
('genetics', 'u.s. english', {'weight': 0.6})
('genetics', 'refutation table', {'weight': 0.6})
('genetics', 'heuristic algorithm', {'weight': 0.6})
('genetics', 'successive linear programming', {'weight': 0.6})
('genetics', 'optimal substructure', {'weight': 0.6})
('genetics', 'programming language', {'weight': 0.6})
('genetics', 'mergesort', {'weight': 0.6})
('genetics', "dijkstra's algorithm", {'weight': 0.6})
('genetics', 'subgradient method', {'weight': 0.6})
('genetics', 'call-by-name', {'weight': 0.6})
('genetics', 'longest increasing subsequence problem', {'weight': 0.6})
('genetics', 'edward prescott', {'weight': 0.6})
('genetics', 'exponential time', {'weight': 0.6})
('genetics', 'principle of optimality', {'weight': 0.6})
('genetics', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('genetics', 'mathematical game', {'weight': 0.6})
('genetics', 'nancy stokey', {'weight': 0.6})
('genetics', 'approximation algorithm', {'weight': 0.6})
('genetics', 'discrete-time', {'weight': 0.6})
('genetics', 'cyk algorithm', {'weight': 0.6})
('genetics', 'markov decision process', {'weight': 0.6})
('genetics', "powell's method", {'weight': 0.6})
('genetics', 'wolfe conditions', {'weight': 0.6})
('genetics', 'convexity in economics', {'weight': 0.6})
('genetics', 'transposition table', {'weight': 0.6})
('genetics', 'economics', {'weight': 0.6})
('genetics', 'backward induction', {'weight': 0.6})
('genetics', 'golden section search', {'weight': 0.6})
('genetics', 'edit distance', {'weight': 0.6})
('genetics', 'tree structure', {'weight': 0.6})
('genetics', 'exchange algorithm', {'weight': 0.6})
('genetics', 'dover publications', {'weight': 0.6})
('genetics', 'seam carving', {'weight': 0.6})
('genetics', 'recursive least squares', {'weight': 0.6})
('genetics', 'metaheuristic', {'weight': 0.6})
('genetics', 'quasi-newton method', {'weight': 0.6})
('genetics', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('genetics', 'robert e. lucas', {'weight': 0.6})
('genetics', 'molecular tools for gene study', {'weight': 0.7})
('genetics', 'non-convexity (economics)', {'weight': 0.6})
('genetics', 'sr1 formula', {'weight': 0.6})
('genetics', 'mathematical reviews', {'weight': 0.6})
('genetics', 'puzzle', {'weight': 0.6})
('genetics', 'associative array', {'weight': 0.6})
('genetics', 'shortest path problem', {'weight': 0.6})
('genetics', 'dynamic algorithm', {'weight': 0.6})
('genetics', 'augmented lagrangian method', {'weight': 0.6})
('genetics', 'charles delisi', {'weight': 0.6})
('genetics', 'greedy algorithm', {'weight': 0.6})
('genetics', "karmarkar's algorithm", {'weight': 0.6})
('genetics', 'lattice models', {'weight': 0.6})
('genetics', 'utility', {'weight': 0.6})
('genetics', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('genetics', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('genetics', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('genetics', 'international standard book number', {'weight': 0.6})
('genetics', 'undirected graph', {'weight': 0.6})
('genetics', 'scheme (programming language)', {'weight': 0.6})
('genetics', 'rna structure', {'weight': 0.6})
('genetics', 'hanoi', {'weight': 0.6})
('genetics', 'perl', {'weight': 0.6})
('genetics', 'mutation', {'weight': 0.7})
('genetics', 'digital object identifier', {'weight': 0.6})
('genetics', 'sequential quadratic programming', {'weight': 0.6})
('genetics', "dinic's algorithm", {'weight': 0.6})
('genetics', 'pseudo-polynomial time', {'weight': 0.6})
('genetics', 'embryology', {'weight': 0.7})
('genetics', 'partition problem', {'weight': 0.6})
('genetics', 'stochastic programming', {'weight': 0.6})
('genetics', 'hill climbing', {'weight': 0.6})
('genetics', 'top-down', {'weight': 0.6})
('genetics', 'de boor algorithm', {'weight': 0.6})
('genetics', 'outline of genetics', {'weight': 0.7})
('genetics', 'optimization algorithm', {'weight': 0.6})
('genetics', "kruskal's algorithm", {'weight': 0.6})
('genetics', 'jacques philippe marie binet', {'weight': 0.6})
('genetics', 'tabu search', {'weight': 0.6})
('genetics', 'divide and conquer algorithm', {'weight': 0.6})
('genetics', "johnson's algorithm", {'weight': 0.6})
('genetics', 'evolutionary algorithm', {'weight': 0.6})
('genetics', 'clique-width', {'weight': 0.6})
('genetics', 'dynamic programming', {'weight': 0.6})
('genetics', 'subroutine', {'weight': 0.6})
('genetics', 'simulated annealing', {'weight': 0.6})
('genetics', 'tower of hanoi', {'weight': 0.6})
('genetics', 'branch and bound', {'weight': 0.6})
('genetics', 'engineering', {'weight': 0.6})
('genetics', 'matroid', {'weight': 0.6})
('genetics', 'viterbi algorithm', {'weight': 0.6})
('genetics', "lemke's algorithm", {'weight': 0.6})
('genetics', 'simplex algorithm', {'weight': 0.6})
('genetics', 'local search (optimization)', {'weight': 0.6})
('genetics', 'hessian matrix', {'weight': 0.6})
('genetics', 'ibm system r', {'weight': 0.6})
('genetics', 'penalty method', {'weight': 0.6})
('genetics', 'prolog', {'weight': 0.6})
('genetics', 'time-invariant system', {'weight': 0.6})
('genetics', 'criss-cross algorithm', {'weight': 0.6})
('genetics', 'revised simplex algorithm', {'weight': 0.6})
('genetics', 'index of genetics articles', {'weight': 0.7})
('genetics', 'the mathematical association of america', {'weight': 0.6})
('genetics', 'line search', {'weight': 0.6})
('genetics', 'j (programming language)', {'weight': 0.6})
('genetics', 'word wrap', {'weight': 0.6})
('genetics', 'biology portal', {'weight': 0.7})
('genetics', 'subset sum problem', {'weight': 0.6})
('genetics', 'integer programming', {'weight': 0.6})
('genetics', 'timeline of the history of genetics', {'weight': 0.7})
('genetics', 'nucleosome', {'weight': 0.6})
('genetics', 'earley algorithm', {'weight': 0.6})
('genetics', 'referential transparency (computer science)', {'weight': 0.6})
('genetics', 'recursion', {'weight': 0.6})
('genetics', 'mathematica', {'weight': 0.6})
('genetics', 'quicksort', {'weight': 0.6})
('genetics', 'recursion (computer science)', {'weight': 0.6})
('genetics', 'checkerboard', {'weight': 0.6})
('genetics', 'computer science', {'weight': 0.6})
('genetics', 'brute-force search', {'weight': 0.6})
('genetics', 'mathematics', {'weight': 0.6})
('genetics', 'depth-first search', {'weight': 0.6})
('genetics', 'top-down and bottom-up design', {'weight': 0.6})
('genetics', 'correspondence problem', {'weight': 0.6})
('genetics', 'transcription factor', {'weight': 0.6})
('genetics', 'tree decomposition', {'weight': 0.6})
('genetics', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('genetics', 'structural alignment', {'weight': 0.6})
('genetics', 'local convergence', {'weight': 0.6})
('genetics', 'knapsack problem', {'weight': 0.6})
('genetics', 'graph algorithm', {'weight': 0.6})
('genetics', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('genetics', 'genetic enhancement', {'weight': 0.7})
('genetics', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('genetics', 'hidden markov model', {'weight': 0.6})
('genetics', 'string (computer science)', {'weight': 0.6})
('genetics', 'bioinformatics', {'weight': 0.6})
('genetics', 'computational complexity of mathematical operations', {'weight': 0.6})
('genetics', 'mathematical optimization', {'weight': 0.6})
('genetics', 'artificial neural networks', {'weight': 0.6})
('genetics', 'introduction to algorithms', {'weight': 0.6})
('genetics', 'thomas h. cormen', {'weight': 0.6})
('genetics', 'music information retrieval', {'weight': 0.6})
('genetics', 'beat (music)', {'weight': 0.6})
('genetics', 'longest common subsequence problem', {'weight': 0.6})
('genetics', 'bacterial genome size', {'weight': 0.7})
('genetics', 'convex minimization', {'weight': 0.6})
('genetics', 'successive parabolic interpolation', {'weight': 0.6})
('genetics', 'fibonacci sequence', {'weight': 0.6})
('genetics', 'maximum subarray problem', {'weight': 0.6})
('genetics', 'convex optimization', {'weight': 0.6})
('genetics', 'memoization', {'weight': 0.6})
('genetics', 'richard bellman', {'weight': 0.6})
('genetics', 'exponential growth', {'weight': 0.6})
('genetics', 'charles e. leiserson', {'weight': 0.6})
('genetics', 'charles erwin wilson', {'weight': 0.6})
('genetics', 'interval scheduling', {'weight': 0.6})
('genetics', 'medical genetics', {'weight': 0.7})
('genetics', 'chart parser', {'weight': 0.6})
('genetics', 'travelling salesman problem', {'weight': 0.6})
('genetics', 'bellman equation', {'weight': 0.6})
('refutation table', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('refutation table', 'photoshop', {'weight': 0.6})
('refutation table', 'sequence alignment', {'weight': 0.6})
('refutation table', 'flow network', {'weight': 0.6})
('refutation table', 'ellipsoid method', {'weight': 0.6})
('refutation table', 'chain matrix multiplication', {'weight': 0.6})
('refutation table', 'ieee', {'weight': 0.6})
('refutation table', 'backtracking', {'weight': 0.6})
('refutation table', 'nonlinear conjugate gradient method', {'weight': 0.6})
('refutation table', 'dynamic problem', {'weight': 0.6})
('refutation table', 'trust region', {'weight': 0.6})
('refutation table', 'function (mathematics)', {'weight': 0.6})
('refutation table', 'minimum spanning tree', {'weight': 0.6})
('refutation table', 'context-free grammar', {'weight': 0.6})
('refutation table', 'branch and cut', {'weight': 0.6})
('refutation table', 'state variable', {'weight': 0.6})
('refutation table', 'treewidth', {'weight': 0.6})
('refutation table', 'overlapping subproblem', {'weight': 0.6})
('refutation table', 'taylor & francis', {'weight': 0.6})
('refutation table', 'alpha-beta pruning', {'weight': 0.7})
('refutation table', 'cutting-plane method', {'weight': 0.6})
('refutation table', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('refutation table', 'method of undetermined coefficients', {'weight': 0.6})
('refutation table', 'combinatorial optimization', {'weight': 0.6})
('refutation table', "newton's method in optimization", {'weight': 0.6})
('refutation table', 'matrix chain multiplication', {'weight': 0.6})
('refutation table', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('refutation table', 'dynamic time warping', {'weight': 0.6})
('refutation table', 'dynamic programming language', {'weight': 0.6})
('refutation table', 'call-by-need', {'weight': 0.6})
('refutation table', 'big-o notation', {'weight': 0.6})
('refutation table', 'comparison of optimization software', {'weight': 0.6})
('refutation table', 'quadratic programming', {'weight': 0.6})
('refutation table', 'common lisp', {'weight': 0.6})
('refutation table', 'barrier function', {'weight': 0.6})
('refutation table', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('refutation table', 'gradient descent', {'weight': 0.6})
('refutation table', 'patricia selinger', {'weight': 0.6})
('refutation table', 'discounting', {'weight': 0.6})
('refutation table', 'ronald l. rivest', {'weight': 0.6})
('refutation table', 'iterative method', {'weight': 0.6})
('refutation table', 'limited-memory bfgs', {'weight': 0.6})
('refutation table', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('refutation table', 'longest common substring problem', {'weight': 0.6})
('refutation table', 'clifford stein', {'weight': 0.6})
('refutation table', 'mergesort', {'weight': 0.6})
('refutation table', 'linear programming', {'weight': 0.6})
('refutation table', 'bitonic tour', {'weight': 0.6})
('refutation table', 'linear search problem', {'weight': 0.6})
('refutation table', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('refutation table', 'systems analysis', {'weight': 0.6})
('refutation table', 'capital (economics)', {'weight': 0.6})
('refutation table', 'levenshtein distance', {'weight': 0.6})
('refutation table', 'nonlinear programming', {'weight': 0.6})
('refutation table', 'zobrist hashing', {'weight': 0.7})
('refutation table', 'computational complexity of mathematical operations', {'weight': 0.6})
('refutation table', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('refutation table', 'gradient', {'weight': 0.6})
('refutation table', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('refutation table', 'bulletin of the american mathematical society', {'weight': 0.6})
('refutation table', 'u.s. english', {'weight': 0.6})
('refutation table', 'refutation table', {'weight': 1})
('refutation table', 'heuristic algorithm', {'weight': 0.6})
('refutation table', 'successive linear programming', {'weight': 0.6})
('refutation table', 'optimal substructure', {'weight': 0.6})
('refutation table', 'programming language', {'weight': 0.6})
('refutation table', 'computer chess', {'weight': 0.6})
('refutation table', "dijkstra's algorithm", {'weight': 0.6})
('refutation table', 'subgradient method', {'weight': 0.6})
('refutation table', 'call-by-name', {'weight': 0.6})
('refutation table', 'longest increasing subsequence problem', {'weight': 0.6})
('refutation table', 'edward prescott', {'weight': 0.6})
('refutation table', 'exponential time', {'weight': 0.6})
('refutation table', 'principle of optimality', {'weight': 0.6})
('refutation table', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('refutation table', 'mathematical game', {'weight': 0.6})
('refutation table', 'nancy stokey', {'weight': 0.6})
('refutation table', 'approximation algorithm', {'weight': 0.6})
('refutation table', 'discrete-time', {'weight': 0.6})
('refutation table', 'cyk algorithm', {'weight': 0.6})
('refutation table', 'markov decision process', {'weight': 0.6})
('refutation table', "powell's method", {'weight': 0.6})
('refutation table', 'wolfe conditions', {'weight': 0.6})
('refutation table', 'convexity in economics', {'weight': 0.6})
('refutation table', 'transposition table', {'weight': 0.6})
('refutation table', 'economics', {'weight': 0.6})
('refutation table', 'backward induction', {'weight': 0.6})
('refutation table', 'golden section search', {'weight': 0.6})
('refutation table', 'edit distance', {'weight': 0.6})
('refutation table', 'tree structure', {'weight': 0.6})
('refutation table', 'exchange algorithm', {'weight': 0.6})
('refutation table', 'dover publications', {'weight': 0.6})
('refutation table', 'seam carving', {'weight': 0.6})
('refutation table', 'recursive least squares', {'weight': 0.6})
('refutation table', 'metaheuristic', {'weight': 0.6})
('refutation table', 'quasi-newton method', {'weight': 0.6})
('refutation table', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('refutation table', 'robert e. lucas', {'weight': 0.6})
('refutation table', 'non-convexity (economics)', {'weight': 0.6})
('refutation table', 'sr1 formula', {'weight': 0.6})
('refutation table', 'mathematical reviews', {'weight': 0.6})
('refutation table', 'puzzle', {'weight': 0.6})
('refutation table', 'associative array', {'weight': 0.6})
('refutation table', 'shortest path problem', {'weight': 0.6})
('refutation table', 'dynamic algorithm', {'weight': 0.6})
('refutation table', 'augmented lagrangian method', {'weight': 0.6})
('refutation table', 'charles delisi', {'weight': 0.6})
('refutation table', 'greedy algorithm', {'weight': 0.6})
('refutation table', "karmarkar's algorithm", {'weight': 0.6})
('refutation table', 'lattice models', {'weight': 0.6})
('refutation table', 'utility', {'weight': 0.6})
('refutation table', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('refutation table', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('refutation table', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('refutation table', 'international standard book number', {'weight': 0.6})
('refutation table', 'undirected graph', {'weight': 0.6})
('refutation table', 'scheme (programming language)', {'weight': 0.6})
('refutation table', 'rna structure', {'weight': 0.6})
('refutation table', 'hanoi', {'weight': 0.6})
('refutation table', 'perl', {'weight': 0.6})
('refutation table', 'digital object identifier', {'weight': 0.6})
('refutation table', 'sequential quadratic programming', {'weight': 0.6})
('refutation table', "dinic's algorithm", {'weight': 0.6})
('refutation table', 'pseudo-polynomial time', {'weight': 0.6})
('refutation table', 'partition problem', {'weight': 0.6})
('refutation table', 'stochastic programming', {'weight': 0.6})
('refutation table', 'hill climbing', {'weight': 0.6})
('refutation table', 'top-down', {'weight': 0.6})
('refutation table', 'de boor algorithm', {'weight': 0.6})
('refutation table', 'optimization algorithm', {'weight': 0.6})
('refutation table', "kruskal's algorithm", {'weight': 0.6})
('refutation table', 'jacques philippe marie binet', {'weight': 0.6})
('refutation table', 'tabu search', {'weight': 0.6})
('refutation table', 'divide and conquer algorithm', {'weight': 0.6})
('refutation table', "johnson's algorithm", {'weight': 0.6})
('refutation table', 'evolutionary algorithm', {'weight': 0.6})
('refutation table', 'clique-width', {'weight': 0.6})
('refutation table', 'dynamic programming', {'weight': 0.6})
('refutation table', 'subroutine', {'weight': 0.6})
('refutation table', 'game artificial intelligence', {'weight': 0.5})
('refutation table', 'simulated annealing', {'weight': 0.6})
('refutation table', 'tower of hanoi', {'weight': 0.6})
('refutation table', 'branch and bound', {'weight': 0.6})
('refutation table', 'engineering', {'weight': 0.6})
('refutation table', 'matroid', {'weight': 0.6})
('refutation table', 'viterbi algorithm', {'weight': 0.6})
('refutation table', "lemke's algorithm", {'weight': 0.6})
('refutation table', 'simplex algorithm', {'weight': 0.6})
('refutation table', 'local search (optimization)', {'weight': 0.6})
('refutation table', 'hessian matrix', {'weight': 0.6})
('refutation table', 'ibm system r', {'weight': 0.6})
('refutation table', 'penalty method', {'weight': 0.6})
('refutation table', 'prolog', {'weight': 0.6})
('refutation table', 'time-invariant system', {'weight': 0.6})
('refutation table', 'criss-cross algorithm', {'weight': 0.6})
('refutation table', 'revised simplex algorithm', {'weight': 0.6})
('refutation table', 'the mathematical association of america', {'weight': 0.6})
('refutation table', 'minimax algorithm', {'weight': 0.7})
('refutation table', 'line search', {'weight': 0.6})
('refutation table', 'j (programming language)', {'weight': 0.6})
('refutation table', 'word wrap', {'weight': 0.6})
('refutation table', 'subset sum problem', {'weight': 0.6})
('refutation table', 'integer programming', {'weight': 0.6})
('refutation table', 'nucleosome', {'weight': 0.6})
('refutation table', 'earley algorithm', {'weight': 0.6})
('refutation table', 'referential transparency (computer science)', {'weight': 0.6})
('refutation table', 'recursion', {'weight': 0.6})
('refutation table', 'mathematica', {'weight': 0.6})
('refutation table', 'quicksort', {'weight': 0.6})
('refutation table', 'recursion (computer science)', {'weight': 0.6})
('refutation table', 'checkerboard', {'weight': 0.6})
('refutation table', 'computer science', {'weight': 0.6})
('refutation table', 'brute-force search', {'weight': 0.6})
('refutation table', 'mathematics', {'weight': 0.6})
('refutation table', 'depth-first search', {'weight': 0.6})
('refutation table', 'top-down and bottom-up design', {'weight': 0.6})
('refutation table', 'correspondence problem', {'weight': 0.6})
('refutation table', 'transcription factor', {'weight': 0.6})
('refutation table', 'tree decomposition', {'weight': 0.6})
('refutation table', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('refutation table', 'structural alignment', {'weight': 0.6})
('refutation table', 'local convergence', {'weight': 0.6})
('refutation table', 'knapsack problem', {'weight': 0.6})
('refutation table', 'graph algorithm', {'weight': 0.6})
('refutation table', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('refutation table', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('refutation table', 'hidden markov model', {'weight': 0.6})
('refutation table', 'string (computer science)', {'weight': 0.6})
('refutation table', 'bioinformatics', {'weight': 0.6})
('refutation table', 'genetics', {'weight': 0.6})
('refutation table', 'mathematical optimization', {'weight': 0.6})
('refutation table', 'artificial neural networks', {'weight': 0.6})
('refutation table', 'introduction to algorithms', {'weight': 0.6})
('refutation table', 'thomas h. cormen', {'weight': 0.6})
('refutation table', 'music information retrieval', {'weight': 0.6})
('refutation table', 'beat (music)', {'weight': 0.6})
('refutation table', 'longest common subsequence problem', {'weight': 0.6})
('refutation table', 'convex minimization', {'weight': 0.6})
('refutation table', 'successive parabolic interpolation', {'weight': 0.6})
('refutation table', 'fibonacci sequence', {'weight': 0.6})
('refutation table', 'maximum subarray problem', {'weight': 0.6})
('refutation table', 'convex optimization', {'weight': 0.6})
('refutation table', 'memoization', {'weight': 0.6})
('refutation table', 'richard bellman', {'weight': 0.6})
('refutation table', 'exponential growth', {'weight': 0.6})
('refutation table', 'charles e. leiserson', {'weight': 0.6})
('refutation table', 'charles erwin wilson', {'weight': 0.6})
('refutation table', 'interval scheduling', {'weight': 0.6})
('refutation table', 'chart parser', {'weight': 0.6})
('refutation table', 'travelling salesman problem', {'weight': 0.6})
('refutation table', 'bellman equation', {'weight': 0.6})
('call-by-need', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('call-by-need', 'photoshop', {'weight': 0.6})
('call-by-need', 'sequence alignment', {'weight': 0.6})
('call-by-need', 'flow network', {'weight': 0.6})
('call-by-need', 'lambda calculus', {'weight': 0.7})
('call-by-need', 'programming language topics', {'weight': 0.5})
('call-by-need', 'ellipsoid method', {'weight': 0.6})
('call-by-need', 'chain matrix multiplication', {'weight': 0.6})
('call-by-need', 'ieee', {'weight': 0.6})
('call-by-need', 'backtracking', {'weight': 0.6})
('call-by-need', 'comparison of programming languages', {'weight': 0.7})
('call-by-need', 'nonlinear conjugate gradient method', {'weight': 0.6})
('call-by-need', 'dynamic problem', {'weight': 0.6})
('call-by-need', 'trust region', {'weight': 0.6})
('call-by-need', 'function (mathematics)', {'weight': 0.6})
('call-by-need', 'minimum spanning tree', {'weight': 0.6})
('call-by-need', 'context-free grammar', {'weight': 0.6})
('call-by-need', 'branch and cut', {'weight': 0.6})
('call-by-need', 'state variable', {'weight': 0.6})
('call-by-need', 'treewidth', {'weight': 0.6})
('call-by-need', 'overlapping subproblem', {'weight': 0.6})
('call-by-need', 'taylor & francis', {'weight': 0.6})
('call-by-need', 'cutting-plane method', {'weight': 0.6})
('call-by-need', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('call-by-need', 'method of undetermined coefficients', {'weight': 0.6})
('call-by-need', 'combinatorial optimization', {'weight': 0.6})
('call-by-need', "newton's method in optimization", {'weight': 0.6})
('call-by-need', 'matrix chain multiplication', {'weight': 0.6})
('call-by-need', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('call-by-need', 'dynamic time warping', {'weight': 0.6})
('call-by-need', 'dynamic programming language', {'weight': 0.6})
('call-by-need', 'call-by-need', {'weight': 1})
('call-by-need', 'big-o notation', {'weight': 0.6})
('call-by-need', 'comparison of optimization software', {'weight': 0.6})
('call-by-need', 'quadratic programming', {'weight': 0.6})
('call-by-need', 'common lisp', {'weight': 0.6})
('call-by-need', 'barrier function', {'weight': 0.6})
('call-by-need', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('call-by-need', 'gradient descent', {'weight': 0.6})
('call-by-need', 'patricia selinger', {'weight': 0.6})
('call-by-need', 'discounting', {'weight': 0.6})
('call-by-need', 'ronald l. rivest', {'weight': 0.6})
('call-by-need', 'iterative method', {'weight': 0.6})
('call-by-need', 'limited-memory bfgs', {'weight': 0.6})
('call-by-need', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('call-by-need', 'longest common substring problem', {'weight': 0.6})
('call-by-need', 'clifford stein', {'weight': 0.6})
('call-by-need', 'computer chess', {'weight': 0.6})
('call-by-need', 'linear programming', {'weight': 0.6})
('call-by-need', 'bitonic tour', {'weight': 0.6})
('call-by-need', 'linear search problem', {'weight': 0.6})
('call-by-need', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('call-by-need', 'systems analysis', {'weight': 0.6})
('call-by-need', 'capital (economics)', {'weight': 0.6})
('call-by-need', 'levenshtein distance', {'weight': 0.6})
('call-by-need', 'nonlinear programming', {'weight': 0.6})
('call-by-need', 'parameter (computer science)', {'weight': 0.7})
('call-by-need', 'computational complexity of mathematical operations', {'weight': 0.6})
('call-by-need', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('call-by-need', 'gradient', {'weight': 0.6})
('call-by-need', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('call-by-need', 'bulletin of the american mathematical society', {'weight': 0.6})
('call-by-need', 'u.s. english', {'weight': 0.6})
('call-by-need', 'refutation table', {'weight': 0.6})
('call-by-need', 'heuristic algorithm', {'weight': 0.6})
('call-by-need', 'successive linear programming', {'weight': 0.6})
('call-by-need', 'optimal substructure', {'weight': 0.6})
('call-by-need', 'programming language', {'weight': 0.6})
('call-by-need', 'mergesort', {'weight': 0.6})
('call-by-need', "dijkstra's algorithm", {'weight': 0.6})
('call-by-need', 'subgradient method', {'weight': 0.6})
('call-by-need', 'call-by-name', {'weight': 0.6})
('call-by-need', 'longest increasing subsequence problem', {'weight': 0.6})
('call-by-need', 'edward prescott', {'weight': 0.6})
('call-by-need', 'exponential time', {'weight': 0.6})
('call-by-need', 'principle of optimality', {'weight': 0.6})
('call-by-need', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('call-by-need', 'mathematical game', {'weight': 0.6})
('call-by-need', 'nancy stokey', {'weight': 0.6})
('call-by-need', 'approximation algorithm', {'weight': 0.6})
('call-by-need', 'discrete-time', {'weight': 0.6})
('call-by-need', 'cyk algorithm', {'weight': 0.6})
('call-by-need', 'markov decision process', {'weight': 0.6})
('call-by-need', "powell's method", {'weight': 0.6})
('call-by-need', 'wolfe conditions', {'weight': 0.6})
('call-by-need', 'convexity in economics', {'weight': 0.6})
('call-by-need', 'transposition table', {'weight': 0.6})
('call-by-need', 'economics', {'weight': 0.6})
('call-by-need', 'backward induction', {'weight': 0.6})
('call-by-need', 'golden section search', {'weight': 0.6})
('call-by-need', 'edit distance', {'weight': 0.6})
('call-by-need', 'tree structure', {'weight': 0.6})
('call-by-need', 'exchange algorithm', {'weight': 0.6})
('call-by-need', 'evaluation strategy', {'weight': 0.5})
('call-by-need', 'dover publications', {'weight': 0.6})
('call-by-need', 'seam carving', {'weight': 0.6})
('call-by-need', 'recursive least squares', {'weight': 0.6})
('call-by-need', 'metaheuristic', {'weight': 0.6})
('call-by-need', 'quasi-newton method', {'weight': 0.6})
('call-by-need', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('call-by-need', 'robert e. lucas', {'weight': 0.6})
('call-by-need', 'non-convexity (economics)', {'weight': 0.6})
('call-by-need', 'sr1 formula', {'weight': 0.6})
('call-by-need', 'mathematical reviews', {'weight': 0.6})
('call-by-need', 'puzzle', {'weight': 0.6})
('call-by-need', 'associative array', {'weight': 0.6})
('call-by-need', 'shortest path problem', {'weight': 0.6})
('call-by-need', 'dynamic algorithm', {'weight': 0.6})
('call-by-need', 'augmented lagrangian method', {'weight': 0.6})
('call-by-need', 'charles delisi', {'weight': 0.6})
('call-by-need', 'greedy algorithm', {'weight': 0.6})
('call-by-need', "karmarkar's algorithm", {'weight': 0.6})
('call-by-need', 'lattice models', {'weight': 0.6})
('call-by-need', 'utility', {'weight': 0.6})
('call-by-need', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('call-by-need', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('call-by-need', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('call-by-need', 'international standard book number', {'weight': 0.6})
('call-by-need', 'undirected graph', {'weight': 0.6})
('call-by-need', 'scheme (programming language)', {'weight': 0.6})
('call-by-need', 'rna structure', {'weight': 0.6})
('call-by-need', 'hanoi', {'weight': 0.6})
('call-by-need', 'perl', {'weight': 0.6})
('call-by-need', 'digital object identifier', {'weight': 0.6})
('call-by-need', 'sequential quadratic programming', {'weight': 0.6})
('call-by-need', 'eval()', {'weight': 0.7})
('call-by-need', "dinic's algorithm", {'weight': 0.6})
('call-by-need', 'pseudo-polynomial time', {'weight': 0.6})
('call-by-need', 'partition problem', {'weight': 0.6})
('call-by-need', 'stochastic programming', {'weight': 0.6})
('call-by-need', 'hill climbing', {'weight': 0.6})
('call-by-need', 'top-down', {'weight': 0.6})
('call-by-need', 'de boor algorithm', {'weight': 0.6})
('call-by-need', 'optimization algorithm', {'weight': 0.6})
('call-by-need', "kruskal's algorithm", {'weight': 0.6})
('call-by-need', 'jacques philippe marie binet', {'weight': 0.6})
('call-by-need', 'tabu search', {'weight': 0.6})
('call-by-need', 'divide and conquer algorithm', {'weight': 0.6})
('call-by-need', "johnson's algorithm", {'weight': 0.6})
('call-by-need', 'evolutionary algorithm', {'weight': 0.6})
('call-by-need', 'clique-width', {'weight': 0.6})
('call-by-need', 'dynamic programming', {'weight': 0.6})
('call-by-need', 'subroutine', {'weight': 0.6})
('call-by-need', 'simulated annealing', {'weight': 0.6})
('call-by-need', 'tower of hanoi', {'weight': 0.6})
('call-by-need', 'branch and bound', {'weight': 0.6})
('call-by-need', 'engineering', {'weight': 0.6})
('call-by-need', 'matroid', {'weight': 0.6})
('call-by-need', 'viterbi algorithm', {'weight': 0.6})
('call-by-need', "lemke's algorithm", {'weight': 0.6})
('call-by-need', 'simplex algorithm', {'weight': 0.6})
('call-by-need', 'local search (optimization)', {'weight': 0.6})
('call-by-need', 'hessian matrix', {'weight': 0.6})
('call-by-need', 'ibm system r', {'weight': 0.6})
('call-by-need', 'penalty method', {'weight': 0.6})
('call-by-need', 'prolog', {'weight': 0.6})
('call-by-need', 'time-invariant system', {'weight': 0.6})
('call-by-need', 'criss-cross algorithm', {'weight': 0.6})
('call-by-need', 'revised simplex algorithm', {'weight': 0.6})
('call-by-need', 'the mathematical association of america', {'weight': 0.6})
('call-by-need', 'line search', {'weight': 0.6})
('call-by-need', 'j (programming language)', {'weight': 0.6})
('call-by-need', 'word wrap', {'weight': 0.6})
('call-by-need', 'subset sum problem', {'weight': 0.6})
('call-by-need', 'integer programming', {'weight': 0.6})
('call-by-need', 'nucleosome', {'weight': 0.6})
('call-by-need', 'earley algorithm', {'weight': 0.6})
('call-by-need', 'referential transparency (computer science)', {'weight': 0.6})
('call-by-need', 'beta normal form', {'weight': 0.7})
('call-by-need', 'recursion', {'weight': 0.6})
('call-by-need', 'mathematica', {'weight': 0.6})
('call-by-need', 'quicksort', {'weight': 0.6})
('call-by-need', 'recursion (computer science)', {'weight': 0.6})
('call-by-need', 'checkerboard', {'weight': 0.6})
('call-by-need', 'computer science', {'weight': 0.6})
('call-by-need', 'brute-force search', {'weight': 0.6})
('call-by-need', 'mathematics', {'weight': 0.6})
('call-by-need', 'depth-first search', {'weight': 0.6})
('call-by-need', 'top-down and bottom-up design', {'weight': 0.6})
('call-by-need', 'correspondence problem', {'weight': 0.6})
('call-by-need', 'transcription factor', {'weight': 0.6})
('call-by-need', 'tree decomposition', {'weight': 0.6})
('call-by-need', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('call-by-need', 'structural alignment', {'weight': 0.6})
('call-by-need', 'local convergence', {'weight': 0.6})
('call-by-need', 'knapsack problem', {'weight': 0.6})
('call-by-need', 'graph algorithm', {'weight': 0.6})
('call-by-need', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('call-by-need', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('call-by-need', 'hidden markov model', {'weight': 0.6})
('call-by-need', 'string (computer science)', {'weight': 0.6})
('call-by-need', 'bioinformatics', {'weight': 0.6})
('call-by-need', 'genetics', {'weight': 0.6})
('call-by-need', 'mathematical optimization', {'weight': 0.6})
('call-by-need', 'artificial neural networks', {'weight': 0.6})
('call-by-need', 'introduction to algorithms', {'weight': 0.6})
('call-by-need', 'thomas h. cormen', {'weight': 0.6})
('call-by-need', 'music information retrieval', {'weight': 0.6})
('call-by-need', 'beat (music)', {'weight': 0.6})
('call-by-need', 'longest common subsequence problem', {'weight': 0.6})
('call-by-need', 'convex minimization', {'weight': 0.6})
('call-by-need', 'successive parabolic interpolation', {'weight': 0.6})
('call-by-need', 'fibonacci sequence', {'weight': 0.6})
('call-by-need', 'maximum subarray problem', {'weight': 0.6})
('call-by-need', 'convex optimization', {'weight': 0.6})
('call-by-need', 'memoization', {'weight': 0.6})
('call-by-need', 'richard bellman', {'weight': 0.6})
('call-by-need', 'exponential growth', {'weight': 0.6})
('call-by-need', 'charles e. leiserson', {'weight': 0.6})
('call-by-need', 'charles erwin wilson', {'weight': 0.6})
('call-by-need', 'interval scheduling', {'weight': 0.6})
('call-by-need', 'chart parser', {'weight': 0.6})
('call-by-need', 'travelling salesman problem', {'weight': 0.6})
('call-by-need', 'bellman equation', {'weight': 0.6})
('programming language', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('programming language', 'photoshop', {'weight': 0.6})
('programming language', 'sequence alignment', {'weight': 0.6})
('programming language', 'flow network', {'weight': 0.6})
('programming language', 'programming languages used in most popular websites', {'weight': 0.7})
('programming language', 'list of programming language researchers', {'weight': 0.7})
('programming language', 'dialect (computing)', {'weight': 0.7})
('programming language', 'computer programming', {'weight': 0.7})
('programming language', 'ellipsoid method', {'weight': 0.6})
('programming language', 'chain matrix multiplication', {'weight': 0.6})
('programming language', 'ieee', {'weight': 0.6})
('programming language', 'backtracking', {'weight': 0.6})
('programming language', 'comparison of programming languages', {'weight': 0.7})
('programming language', 'nonlinear conjugate gradient method', {'weight': 0.6})
('programming language', 'dynamic problem', {'weight': 0.6})
('programming language', 'trust region', {'weight': 0.6})
('programming language', 'function (mathematics)', {'weight': 0.6})
('programming language', 'minimum spanning tree', {'weight': 0.6})
('programming language', 'context-free grammar', {'weight': 0.6})
('programming language', 'outline of computer science', {'weight': 0.7})
('programming language', 'branch and cut', {'weight': 0.6})
('programming language', 'state variable', {'weight': 0.6})
('programming language', 'pseudocode', {'weight': 0.7})
('programming language', 'treewidth', {'weight': 0.6})
('programming language', 'notation', {'weight': 0.5})
('programming language', 'overlapping subproblem', {'weight': 0.6})
('programming language', 'taylor & francis', {'weight': 0.6})
('programming language', 'list of software engineering topics', {'weight': 0.7})
('programming language', 'cutting-plane method', {'weight': 0.6})
('programming language', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('programming language', 'method of undetermined coefficients', {'weight': 0.6})
('programming language', 'combinatorial optimization', {'weight': 0.6})
('programming language', "newton's method in optimization", {'weight': 0.6})
('programming language', 'matrix chain multiplication', {'weight': 0.6})
('programming language', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('programming language', 'dynamic time warping', {'weight': 0.6})
('programming language', 'dynamic programming language', {'weight': 0.6})
('programming language', 'call-by-need', {'weight': 0.6})
('programming language', 'big-o notation', {'weight': 0.6})
('programming language', 'comparison of optimization software', {'weight': 0.6})
('programming language', 'quadratic programming', {'weight': 0.6})
('programming language', 'common lisp', {'weight': 0.6})
('programming language', 'barrier function', {'weight': 0.6})
('programming language', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('programming language', 'gradient descent', {'weight': 0.6})
('programming language', 'patricia selinger', {'weight': 0.6})
('programming language', 'discounting', {'weight': 0.6})
('programming language', 'ronald l. rivest', {'weight': 0.6})
('programming language', 'iterative method', {'weight': 0.6})
('programming language', 'limited-memory bfgs', {'weight': 0.6})
('programming language', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('programming language', 'longest common substring problem', {'weight': 0.6})
('programming language', 'clifford stein', {'weight': 0.6})
('programming language', 'computer chess', {'weight': 0.6})
('programming language', 'linear programming', {'weight': 0.6})
('programming language', 'bitonic tour', {'weight': 0.6})
('programming language', 'linear search problem', {'weight': 0.6})
('programming language', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('programming language', 'systems analysis', {'weight': 0.6})
('programming language', 'capital (economics)', {'weight': 0.6})
('programming language', 'programming language theory', {'weight': 0.7})
('programming language', 'levenshtein distance', {'weight': 0.6})
('programming language', 'nonlinear programming', {'weight': 0.6})
('programming language', 'computational complexity of mathematical operations', {'weight': 0.6})
('programming language', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('programming language', 'programming languages', {'weight': 0.5})
('programming language', 'gradient', {'weight': 0.6})
('programming language', 'educational programming language', {'weight': 0.7})
('programming language', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('programming language', 'bulletin of the american mathematical society', {'weight': 0.6})
('programming language', 'u.s. english', {'weight': 0.6})
('programming language', 'refutation table', {'weight': 0.6})
('programming language', 'heuristic algorithm', {'weight': 0.6})
('programming language', 'successive linear programming', {'weight': 0.6})
('programming language', 'optimal substructure', {'weight': 0.6})
('programming language', 'programming language', {'weight': 1})
('programming language', 'mergesort', {'weight': 0.6})
('programming language', "dijkstra's algorithm", {'weight': 0.6})
('programming language', 'subgradient method', {'weight': 0.6})
('programming language', 'call-by-name', {'weight': 0.6})
('programming language', 'longest increasing subsequence problem', {'weight': 0.6})
('programming language', 'edward prescott', {'weight': 0.6})
('programming language', 'exponential time', {'weight': 0.6})
('programming language', 'principle of optimality', {'weight': 0.6})
('programming language', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('programming language', 'comparison of programming languages (basic instructions)', {'weight': 0.7})
('programming language', 'mathematical game', {'weight': 0.6})
('programming language', 'nancy stokey', {'weight': 0.6})
('programming language', 'approximation algorithm', {'weight': 0.6})
('programming language', 'discrete-time', {'weight': 0.6})
('programming language', 'cyk algorithm', {'weight': 0.6})
('programming language', 'markov decision process', {'weight': 0.6})
('programming language', "powell's method", {'weight': 0.6})
('programming language', 'wolfe conditions', {'weight': 0.6})
('programming language', 'convexity in economics', {'weight': 0.6})
('programming language', 'transposition table', {'weight': 0.6})
('programming language', 'economics', {'weight': 0.6})
('programming language', 'backward induction', {'weight': 0.6})
('programming language', 'golden section search', {'weight': 0.6})
('programming language', 'edit distance', {'weight': 0.6})
('programming language', 'tree structure', {'weight': 0.6})
('programming language', 'exchange algorithm', {'weight': 0.6})
('programming language', 'dover publications', {'weight': 0.6})
('programming language', 'seam carving', {'weight': 0.6})
('programming language', 'recursive least squares', {'weight': 0.6})
('programming language', 'metaheuristic', {'weight': 0.6})
('programming language', 'quasi-newton method', {'weight': 0.6})
('programming language', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('programming language', 'robert e. lucas', {'weight': 0.6})
('programming language', 'non-convexity (economics)', {'weight': 0.6})
('programming language', 'sr1 formula', {'weight': 0.6})
('programming language', 'mathematical reviews', {'weight': 0.6})
('programming language', 'puzzle', {'weight': 0.6})
('programming language', 'associative array', {'weight': 0.6})
('programming language', 'lists of programming languages', {'weight': 0.7})
('programming language', 'shortest path problem', {'weight': 0.6})
('programming language', 'dynamic algorithm', {'weight': 0.6})
('programming language', 'augmented lagrangian method', {'weight': 0.6})
('programming language', 'charles delisi', {'weight': 0.6})
('programming language', 'greedy algorithm', {'weight': 0.6})
('programming language', "karmarkar's algorithm", {'weight': 0.6})
('programming language', 'lattice models', {'weight': 0.6})
('programming language', 'utility', {'weight': 0.6})
('programming language', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('programming language', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('programming language', 'invariant based programming', {'weight': 0.7})
('programming language', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('programming language', 'international standard book number', {'weight': 0.6})
('programming language', 'undirected graph', {'weight': 0.6})
('programming language', 'scheme (programming language)', {'weight': 0.6})
('programming language', 'rna structure', {'weight': 0.6})
('programming language', 'hanoi', {'weight': 0.6})
('programming language', 'perl', {'weight': 0.6})
('programming language', 'digital object identifier', {'weight': 0.6})
('programming language', 'sequential quadratic programming', {'weight': 0.6})
('programming language', "dinic's algorithm", {'weight': 0.6})
('programming language', 'pseudo-polynomial time', {'weight': 0.6})
('programming language', 'partition problem', {'weight': 0.6})
('programming language', 'stochastic programming', {'weight': 0.6})
('programming language', 'hill climbing', {'weight': 0.6})
('programming language', 'top-down', {'weight': 0.6})
('programming language', 'de boor algorithm', {'weight': 0.6})
('programming language', 'computer programming portal', {'weight': 0.7})
('programming language', 'optimization algorithm', {'weight': 0.6})
('programming language', "kruskal's algorithm", {'weight': 0.6})
('programming language', 'jacques philippe marie binet', {'weight': 0.6})
('programming language', 'tabu search', {'weight': 0.6})
('programming language', 'computer science portal', {'weight': 0.7})
('programming language', 'divide and conquer algorithm', {'weight': 0.6})
('programming language', "johnson's algorithm", {'weight': 0.6})
('programming language', 'evolutionary algorithm', {'weight': 0.6})
('programming language', 'clique-width', {'weight': 0.6})
('programming language', 'dynamic programming', {'weight': 0.6})
('programming language', 'subroutine', {'weight': 0.6})
('programming language', 'literate programming', {'weight': 0.7})
('programming language', 'simulated annealing', {'weight': 0.6})
('programming language', 'tower of hanoi', {'weight': 0.6})
('programming language', 'branch and bound', {'weight': 0.6})
('programming language', 'engineering', {'weight': 0.6})
('programming language', 'matroid', {'weight': 0.6})
('programming language', 'viterbi algorithm', {'weight': 0.6})
('programming language', "lemke's algorithm", {'weight': 0.6})
('programming language', 'simplex algorithm', {'weight': 0.6})
('programming language', 'local search (optimization)', {'weight': 0.6})
('programming language', 'hessian matrix', {'weight': 0.6})
('programming language', 'ibm system r', {'weight': 0.6})
('programming language', 'penalty method', {'weight': 0.6})
('programming language', 'prolog', {'weight': 0.6})
('programming language', 'time-invariant system', {'weight': 0.6})
('programming language', 'criss-cross algorithm', {'weight': 0.6})
('programming language', 'revised simplex algorithm', {'weight': 0.6})
('programming language', 'the mathematical association of america', {'weight': 0.6})
('programming language', 'line search', {'weight': 0.6})
('programming language', 'j (programming language)', {'weight': 0.6})
('programming language', 'word wrap', {'weight': 0.6})
('programming language', 'subset sum problem', {'weight': 0.6})
('programming language', 'integer programming', {'weight': 0.6})
('programming language', 'nucleosome', {'weight': 0.6})
('programming language', 'earley algorithm', {'weight': 0.6})
('programming language', 'referential transparency (computer science)', {'weight': 0.6})
('programming language', 'recursion', {'weight': 0.6})
('programming language', 'mathematica', {'weight': 0.6})
('programming language', 'quicksort', {'weight': 0.6})
('programming language', 'scientific language', {'weight': 0.7})
('programming language', 'recursion (computer science)', {'weight': 0.6})
('programming language', 'checkerboard', {'weight': 0.6})
('programming language', 'computer science', {'weight': 0.7})
('programming language', 'brute-force search', {'weight': 0.6})
('programming language', 'mathematics', {'weight': 0.6})
('programming language', 'depth-first search', {'weight': 0.6})
('programming language', 'top-down and bottom-up design', {'weight': 0.6})
('programming language', 'correspondence problem', {'weight': 0.6})
('programming language', 'transcription factor', {'weight': 0.6})
('programming language', 'tree decomposition', {'weight': 0.6})
('programming language', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('programming language', 'structural alignment', {'weight': 0.6})
('programming language', 'local convergence', {'weight': 0.6})
('programming language', 'knapsack problem', {'weight': 0.6})
('programming language', 'graph algorithm', {'weight': 0.6})
('programming language', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('programming language', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('programming language', 'hidden markov model', {'weight': 0.6})
('programming language', 'string (computer science)', {'weight': 0.6})
('programming language', 'bioinformatics', {'weight': 0.6})
('programming language', 'genetics', {'weight': 0.6})
('programming language', 'mathematical optimization', {'weight': 0.6})
('programming language', 'artificial neural networks', {'weight': 0.6})
('programming language', 'introduction to algorithms', {'weight': 0.6})
('programming language', 'thomas h. cormen', {'weight': 0.6})
('programming language', 'music information retrieval', {'weight': 0.6})
('programming language', 'beat (music)', {'weight': 0.6})
('programming language', 'longest common subsequence problem', {'weight': 0.6})
('programming language', 'convex minimization', {'weight': 0.6})
('programming language', 'software engineering', {'weight': 0.7})
('programming language', 'successive parabolic interpolation', {'weight': 0.6})
('programming language', 'fibonacci sequence', {'weight': 0.6})
('programming language', 'maximum subarray problem', {'weight': 0.6})
('programming language', 'convex optimization', {'weight': 0.6})
('programming language', 'memoization', {'weight': 0.6})
('programming language', 'richard bellman', {'weight': 0.6})
('programming language', 'exponential growth', {'weight': 0.6})
('programming language', 'charles e. leiserson', {'weight': 0.6})
('programming language', 'charles erwin wilson', {'weight': 0.6})
('programming language', 'interval scheduling', {'weight': 0.6})
('programming language', 'chart parser', {'weight': 0.6})
('programming language', 'travelling salesman problem', {'weight': 0.6})
('programming language', 'bellman equation', {'weight': 0.6})
('correspondence problem', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('correspondence problem', 'photoshop', {'weight': 0.6})
('correspondence problem', 'sequence alignment', {'weight': 0.6})
('correspondence problem', 'flow network', {'weight': 0.6})
('correspondence problem', 'ellipsoid method', {'weight': 0.6})
('correspondence problem', 'chain matrix multiplication', {'weight': 0.6})
('correspondence problem', 'ieee', {'weight': 0.6})
('correspondence problem', 'backtracking', {'weight': 0.6})
('correspondence problem', 'nonlinear conjugate gradient method', {'weight': 0.6})
('correspondence problem', 'dynamic problem', {'weight': 0.6})
('correspondence problem', 'trust region', {'weight': 0.6})
('correspondence problem', 'function (mathematics)', {'weight': 0.6})
('correspondence problem', 'minimum spanning tree', {'weight': 0.6})
('correspondence problem', 'context-free grammar', {'weight': 0.6})
('correspondence problem', 'branch and cut', {'weight': 0.6})
('correspondence problem', 'state variable', {'weight': 0.6})
('correspondence problem', 'treewidth', {'weight': 0.6})
('correspondence problem', 'overlapping subproblem', {'weight': 0.6})
('correspondence problem', 'taylor & francis', {'weight': 0.6})
('correspondence problem', 'cutting-plane method', {'weight': 0.6})
('correspondence problem', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('correspondence problem', 'method of undetermined coefficients', {'weight': 0.6})
('correspondence problem', 'combinatorial optimization', {'weight': 0.6})
('correspondence problem', "newton's method in optimization", {'weight': 0.6})
('correspondence problem', 'matrix chain multiplication', {'weight': 0.6})
('correspondence problem', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('correspondence problem', 'dynamic time warping', {'weight': 0.6})
('correspondence problem', 'dynamic programming language', {'weight': 0.6})
('correspondence problem', 'call-by-need', {'weight': 0.6})
('correspondence problem', 'big-o notation', {'weight': 0.6})
('correspondence problem', 'comparison of optimization software', {'weight': 0.6})
('correspondence problem', 'quadratic programming', {'weight': 0.6})
('correspondence problem', 'common lisp', {'weight': 0.6})
('correspondence problem', 'barrier function', {'weight': 0.6})
('correspondence problem', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('correspondence problem', 'gradient descent', {'weight': 0.6})
('correspondence problem', 'patricia selinger', {'weight': 0.6})
('correspondence problem', 'discounting', {'weight': 0.6})
('correspondence problem', 'the joint compatibility branch and bound algorithm', {'weight': 0.7})
('correspondence problem', 'ronald l. rivest', {'weight': 0.6})
('correspondence problem', 'iterative method', {'weight': 0.6})
('correspondence problem', 'limited-memory bfgs', {'weight': 0.6})
('correspondence problem', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('correspondence problem', 'longest common substring problem', {'weight': 0.6})
('correspondence problem', 'clifford stein', {'weight': 0.6})
('correspondence problem', 'stereopsis', {'weight': 0.7})
('correspondence problem', 'computer chess', {'weight': 0.6})
('correspondence problem', 'linear programming', {'weight': 0.6})
('correspondence problem', 'bitonic tour', {'weight': 0.6})
('correspondence problem', 'linear search problem', {'weight': 0.6})
('correspondence problem', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('correspondence problem', 'systems analysis', {'weight': 0.6})
('correspondence problem', 'parallax', {'weight': 0.7})
('correspondence problem', 'capital (economics)', {'weight': 0.6})
('correspondence problem', 'levenshtein distance', {'weight': 0.6})
('correspondence problem', 'nonlinear programming', {'weight': 0.6})
('correspondence problem', 'computational complexity of mathematical operations', {'weight': 0.6})
('correspondence problem', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('correspondence problem', 'gradient', {'weight': 0.6})
('correspondence problem', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('correspondence problem', 'bulletin of the american mathematical society', {'weight': 0.6})
('correspondence problem', 'u.s. english', {'weight': 0.6})
('correspondence problem', 'refutation table', {'weight': 0.6})
('correspondence problem', 'heuristic algorithm', {'weight': 0.6})
('correspondence problem', 'successive linear programming', {'weight': 0.6})
('correspondence problem', 'optimal substructure', {'weight': 0.6})
('correspondence problem', 'programming language', {'weight': 0.6})
('correspondence problem', 'mergesort', {'weight': 0.6})
('correspondence problem', "dijkstra's algorithm", {'weight': 0.6})
('correspondence problem', 'subgradient method', {'weight': 0.6})
('correspondence problem', 'call-by-name', {'weight': 0.6})
('correspondence problem', 'longest increasing subsequence problem', {'weight': 0.6})
('correspondence problem', 'edward prescott', {'weight': 0.6})
('correspondence problem', 'exponential time', {'weight': 0.6})
('correspondence problem', 'principle of optimality', {'weight': 0.6})
('correspondence problem', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('correspondence problem', 'mathematical game', {'weight': 0.6})
('correspondence problem', 'nancy stokey', {'weight': 0.6})
('correspondence problem', 'approximation algorithm', {'weight': 0.6})
('correspondence problem', 'discrete-time', {'weight': 0.6})
('correspondence problem', 'cyk algorithm', {'weight': 0.6})
('correspondence problem', 'markov decision process', {'weight': 0.6})
('correspondence problem', 'stereoscopy', {'weight': 0.7})
('correspondence problem', "powell's method", {'weight': 0.6})
('correspondence problem', 'image registration', {'weight': 0.7})
('correspondence problem', 'wolfe conditions', {'weight': 0.6})
('correspondence problem', 'convexity in economics', {'weight': 0.6})
('correspondence problem', 'transposition table', {'weight': 0.6})
('correspondence problem', 'economics', {'weight': 0.6})
('correspondence problem', 'backward induction', {'weight': 0.6})
('correspondence problem', 'golden section search', {'weight': 0.6})
('correspondence problem', 'edit distance', {'weight': 0.6})
('correspondence problem', 'tree structure', {'weight': 0.6})
('correspondence problem', 'exchange algorithm', {'weight': 0.6})
('correspondence problem', 'dover publications', {'weight': 0.6})
('correspondence problem', 'seam carving', {'weight': 0.6})
('correspondence problem', 'recursive least squares', {'weight': 0.6})
('correspondence problem', 'metaheuristic', {'weight': 0.6})
('correspondence problem', 'quasi-newton method', {'weight': 0.6})
('correspondence problem', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('correspondence problem', 'robert e. lucas', {'weight': 0.6})
('correspondence problem', 'non-convexity (economics)', {'weight': 0.6})
('correspondence problem', 'geometry in computer vision', {'weight': 0.5})
('correspondence problem', 'sr1 formula', {'weight': 0.6})
('correspondence problem', 'mathematical reviews', {'weight': 0.6})
('correspondence problem', 'puzzle', {'weight': 0.6})
('correspondence problem', 'associative array', {'weight': 0.6})
('correspondence problem', 'shortest path problem', {'weight': 0.6})
('correspondence problem', 'dynamic algorithm', {'weight': 0.6})
('correspondence problem', 'augmented lagrangian method', {'weight': 0.6})
('correspondence problem', 'charles delisi', {'weight': 0.6})
('correspondence problem', 'greedy algorithm', {'weight': 0.6})
('correspondence problem', "karmarkar's algorithm", {'weight': 0.6})
('correspondence problem', 'lattice models', {'weight': 0.6})
('correspondence problem', 'utility', {'weight': 0.6})
('correspondence problem', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('correspondence problem', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('correspondence problem', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('correspondence problem', 'international standard book number', {'weight': 0.6})
('correspondence problem', 'undirected graph', {'weight': 0.6})
('correspondence problem', 'scheme (programming language)', {'weight': 0.6})
('correspondence problem', 'rna structure', {'weight': 0.6})
('correspondence problem', 'hanoi', {'weight': 0.6})
('correspondence problem', 'perl', {'weight': 0.6})
('correspondence problem', 'digital object identifier', {'weight': 0.6})
('correspondence problem', 'sequential quadratic programming', {'weight': 0.6})
('correspondence problem', "dinic's algorithm", {'weight': 0.6})
('correspondence problem', 'pseudo-polynomial time', {'weight': 0.6})
('correspondence problem', 'partition problem', {'weight': 0.6})
('correspondence problem', 'stochastic programming', {'weight': 0.6})
('correspondence problem', 'hill climbing', {'weight': 0.6})
('correspondence problem', 'top-down', {'weight': 0.6})
('correspondence problem', 'de boor algorithm', {'weight': 0.6})
('correspondence problem', 'optimization algorithm', {'weight': 0.6})
('correspondence problem', "kruskal's algorithm", {'weight': 0.6})
('correspondence problem', 'jacques philippe marie binet', {'weight': 0.6})
('correspondence problem', 'tabu search', {'weight': 0.6})
('correspondence problem', 'divide and conquer algorithm', {'weight': 0.6})
('correspondence problem', "johnson's algorithm", {'weight': 0.6})
('correspondence problem', 'evolutionary algorithm', {'weight': 0.6})
('correspondence problem', 'clique-width', {'weight': 0.6})
('correspondence problem', 'dynamic programming', {'weight': 0.6})
('correspondence problem', 'subroutine', {'weight': 0.6})
('correspondence problem', 'fundamental matrix', {'weight': 0.7})
('correspondence problem', 'simulated annealing', {'weight': 0.6})
('correspondence problem', 'tower of hanoi', {'weight': 0.6})
('correspondence problem', 'branch and bound', {'weight': 0.6})
('correspondence problem', 'engineering', {'weight': 0.6})
('correspondence problem', 'matroid', {'weight': 0.6})
('correspondence problem', 'viterbi algorithm', {'weight': 0.6})
('correspondence problem', "lemke's algorithm", {'weight': 0.6})
('correspondence problem', 'simplex algorithm', {'weight': 0.6})
('correspondence problem', 'local search (optimization)', {'weight': 0.6})
('correspondence problem', 'hessian matrix', {'weight': 0.6})
('correspondence problem', 'ibm system r', {'weight': 0.6})
('correspondence problem', 'penalty method', {'weight': 0.6})
('correspondence problem', 'prolog', {'weight': 0.6})
('correspondence problem', 'time-invariant system', {'weight': 0.6})
('correspondence problem', 'criss-cross algorithm', {'weight': 0.6})
('correspondence problem', 'revised simplex algorithm', {'weight': 0.6})
('correspondence problem', 'the mathematical association of america', {'weight': 0.6})
('correspondence problem', 'photogrammetry', {'weight': 0.7})
('correspondence problem', 'line search', {'weight': 0.6})
('correspondence problem', 'j (programming language)', {'weight': 0.6})
('correspondence problem', 'word wrap', {'weight': 0.6})
('correspondence problem', 'subset sum problem', {'weight': 0.6})
('correspondence problem', 'integer programming', {'weight': 0.6})
('correspondence problem', 'nucleosome', {'weight': 0.6})
('correspondence problem', 'earley algorithm', {'weight': 0.6})
('correspondence problem', 'referential transparency (computer science)', {'weight': 0.6})
('correspondence problem', 'recursion', {'weight': 0.6})
('correspondence problem', 'mathematica', {'weight': 0.6})
('correspondence problem', 'quicksort', {'weight': 0.6})
('correspondence problem', 'recursion (computer science)', {'weight': 0.6})
('correspondence problem', 'checkerboard', {'weight': 0.6})
('correspondence problem', 'depth perception', {'weight': 0.7})
('correspondence problem', 'computer science', {'weight': 0.6})
('correspondence problem', 'brute-force search', {'weight': 0.6})
('correspondence problem', 'mathematics', {'weight': 0.6})
('correspondence problem', 'depth-first search', {'weight': 0.6})
('correspondence problem', 'top-down and bottom-up design', {'weight': 0.6})
('correspondence problem', 'correspondence problem', {'weight': 1})
('correspondence problem', 'transcription factor', {'weight': 0.6})
('correspondence problem', 'tree decomposition', {'weight': 0.6})
('correspondence problem', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('correspondence problem', 'structural alignment', {'weight': 0.6})
('correspondence problem', 'local convergence', {'weight': 0.6})
('correspondence problem', 'computer vision', {'weight': 0.7})
('correspondence problem', 'knapsack problem', {'weight': 0.6})
('correspondence problem', 'graph algorithm', {'weight': 0.6})
('correspondence problem', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('correspondence problem', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('correspondence problem', 'hidden markov model', {'weight': 0.6})
('correspondence problem', 'string (computer science)', {'weight': 0.6})
('correspondence problem', 'bioinformatics', {'weight': 0.6})
('correspondence problem', 'genetics', {'weight': 0.6})
('correspondence problem', 'mathematical optimization', {'weight': 0.6})
('correspondence problem', 'artificial neural networks', {'weight': 0.6})
('correspondence problem', 'introduction to algorithms', {'weight': 0.6})
('correspondence problem', 'thomas h. cormen', {'weight': 0.6})
('correspondence problem', 'music information retrieval', {'weight': 0.6})
('correspondence problem', 'beat (music)', {'weight': 0.6})
('correspondence problem', 'longest common subsequence problem', {'weight': 0.6})
('correspondence problem', 'convex minimization', {'weight': 0.6})
('correspondence problem', 'epipolar geometry', {'weight': 0.7})
('correspondence problem', 'successive parabolic interpolation', {'weight': 0.6})
('correspondence problem', 'fibonacci sequence', {'weight': 0.6})
('correspondence problem', 'maximum subarray problem', {'weight': 0.6})
('correspondence problem', 'convex optimization', {'weight': 0.6})
('correspondence problem', 'memoization', {'weight': 0.6})
('correspondence problem', 'richard bellman', {'weight': 0.6})
('correspondence problem', 'exponential growth', {'weight': 0.6})
('correspondence problem', 'charles e. leiserson', {'weight': 0.6})
('correspondence problem', 'charles erwin wilson', {'weight': 0.6})
('correspondence problem', 'interval scheduling', {'weight': 0.6})
('correspondence problem', 'chart parser', {'weight': 0.6})
('correspondence problem', 'travelling salesman problem', {'weight': 0.6})
('correspondence problem', 'bellman equation', {'weight': 0.6})
('approximation algorithm', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('approximation algorithm', 'photoshop', {'weight': 0.6})
('approximation algorithm', 'sequence alignment', {'weight': 0.6})
('approximation algorithm', 'flow network', {'weight': 0.6})
('approximation algorithm', 'ellipsoid method', {'weight': 0.6})
('approximation algorithm', 'chain matrix multiplication', {'weight': 0.6})
('approximation algorithm', 'ieee', {'weight': 0.6})
('approximation algorithm', 'backtracking', {'weight': 0.6})
('approximation algorithm', 'sr1 formula', {'weight': 0.6})
('approximation algorithm', 'nonlinear conjugate gradient method', {'weight': 0.6})
('approximation algorithm', 'dynamic problem', {'weight': 0.6})
('approximation algorithm', 'trust region', {'weight': 0.6})
('approximation algorithm', 'function (mathematics)', {'weight': 0.6})
('approximation algorithm', 'minimum spanning tree', {'weight': 0.6})
('approximation algorithm', 'context-free grammar', {'weight': 0.6})
('approximation algorithm', 'branch and cut', {'weight': 0.6})
('approximation algorithm', 'state variable', {'weight': 0.6})
('approximation algorithm', 'domination analysis', {'weight': 0.7})
('approximation algorithm', 'treewidth', {'weight': 0.6})
('approximation algorithm', 'overlapping subproblem', {'weight': 0.6})
('approximation algorithm', 'taylor & francis', {'weight': 0.6})
('approximation algorithm', 'cutting-plane method', {'weight': 0.6})
('approximation algorithm', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('approximation algorithm', 'method of undetermined coefficients', {'weight': 0.6})
('approximation algorithm', 'combinatorial optimization', {'weight': 0.6})
('approximation algorithm', "newton's method in optimization", {'weight': 0.6})
('approximation algorithm', 'matrix chain multiplication', {'weight': 0.6})
('approximation algorithm', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('approximation algorithm', 'dynamic time warping', {'weight': 0.6})
('approximation algorithm', 'dynamic programming language', {'weight': 0.6})
('approximation algorithm', 'call-by-need', {'weight': 0.6})
('approximation algorithm', 'big-o notation', {'weight': 0.6})
('approximation algorithm', 'comparison of optimization software', {'weight': 0.6})
('approximation algorithm', 'quadratic programming', {'weight': 0.6})
('approximation algorithm', 'common lisp', {'weight': 0.6})
('approximation algorithm', 'barrier function', {'weight': 0.6})
('approximation algorithm', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('approximation algorithm', 'gradient descent', {'weight': 0.6})
('approximation algorithm', 'patricia selinger', {'weight': 0.6})
('approximation algorithm', 'discounting', {'weight': 0.6})
('approximation algorithm', 'ronald l. rivest', {'weight': 0.6})
('approximation algorithm', 'iterative method', {'weight': 0.6})
('approximation algorithm', 'limited-memory bfgs', {'weight': 0.6})
('approximation algorithm', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('approximation algorithm', 'longest common substring problem', {'weight': 0.6})
('approximation algorithm', 'clifford stein', {'weight': 0.6})
('approximation algorithm', 'computer chess', {'weight': 0.6})
('approximation algorithm', 'linear programming', {'weight': 0.6})
('approximation algorithm', 'bitonic tour', {'weight': 0.6})
('approximation algorithm', 'linear search problem', {'weight': 0.6})
('approximation algorithm', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('approximation algorithm', 'systems analysis', {'weight': 0.6})
('approximation algorithm', 'capital (economics)', {'weight': 0.6})
('approximation algorithm', 'levenshtein distance', {'weight': 0.6})
('approximation algorithm', 'nonlinear programming', {'weight': 0.6})
('approximation algorithm', 'computational complexity of mathematical operations', {'weight': 0.6})
('approximation algorithm', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('approximation algorithm', 'gradient', {'weight': 0.6})
('approximation algorithm', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('approximation algorithm', 'bulletin of the american mathematical society', {'weight': 0.6})
('approximation algorithm', 'approximation-preserving reduction', {'weight': 0.7})
('approximation algorithm', 'u.s. english', {'weight': 0.6})
('approximation algorithm', 'refutation table', {'weight': 0.6})
('approximation algorithm', 'heuristic algorithm', {'weight': 0.6})
('approximation algorithm', 'successive linear programming', {'weight': 0.6})
('approximation algorithm', 'optimal substructure', {'weight': 0.6})
('approximation algorithm', 'programming language', {'weight': 0.6})
('approximation algorithm', 'mergesort', {'weight': 0.6})
('approximation algorithm', "dijkstra's algorithm", {'weight': 0.6})
('approximation algorithm', 'subgradient method', {'weight': 0.6})
('approximation algorithm', 'call-by-name', {'weight': 0.6})
('approximation algorithm', 'longest increasing subsequence problem', {'weight': 0.6})
('approximation algorithm', 'edward prescott', {'weight': 0.6})
('approximation algorithm', 'exponential time', {'weight': 0.6})
('approximation algorithm', 'principle of optimality', {'weight': 0.6})
('approximation algorithm', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('approximation algorithm', 'mathematical game', {'weight': 0.6})
('approximation algorithm', 'nancy stokey', {'weight': 0.6})
('approximation algorithm', 'approximation algorithm', {'weight': 1})
('approximation algorithm', 'discrete-time', {'weight': 0.6})
('approximation algorithm', 'cyk algorithm', {'weight': 0.6})
('approximation algorithm', 'markov decision process', {'weight': 0.6})
('approximation algorithm', "powell's method", {'weight': 0.6})
('approximation algorithm', 'wolfe conditions', {'weight': 0.6})
('approximation algorithm', 'convexity in economics', {'weight': 0.6})
('approximation algorithm', 'transposition table', {'weight': 0.6})
('approximation algorithm', 'economics', {'weight': 0.6})
('approximation algorithm', 'backward induction', {'weight': 0.6})
('approximation algorithm', 'golden section search', {'weight': 0.6})
('approximation algorithm', 'edit distance', {'weight': 0.6})
('approximation algorithm', 'tree structure', {'weight': 0.6})
('approximation algorithm', 'exchange algorithm', {'weight': 0.6})
('approximation algorithm', 'dover publications', {'weight': 0.6})
('approximation algorithm', 'seam carving', {'weight': 0.6})
('approximation algorithm', 'recursive least squares', {'weight': 0.6})
('approximation algorithm', 'metaheuristic', {'weight': 0.6})
('approximation algorithm', 'quasi-newton method', {'weight': 0.6})
('approximation algorithm', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('approximation algorithm', 'robert e. lucas', {'weight': 0.6})
('approximation algorithm', 'non-convexity (economics)', {'weight': 0.6})
('approximation algorithm', 'apx', {'weight': 0.7})
('approximation algorithm', 'computational complexity theory', {'weight': 0.5})
('approximation algorithm', 'mathematical reviews', {'weight': 0.6})
('approximation algorithm', 'puzzle', {'weight': 0.6})
('approximation algorithm', 'associative array', {'weight': 0.6})
('approximation algorithm', 'shortest path problem', {'weight': 0.6})
('approximation algorithm', 'ptas', {'weight': 0.7})
('approximation algorithm', 'dynamic algorithm', {'weight': 0.6})
('approximation algorithm', 'augmented lagrangian method', {'weight': 0.6})
('approximation algorithm', 'charles delisi', {'weight': 0.6})
('approximation algorithm', 'greedy algorithm', {'weight': 0.6})
('approximation algorithm', "karmarkar's algorithm", {'weight': 0.6})
('approximation algorithm', 'lattice models', {'weight': 0.6})
('approximation algorithm', 'utility', {'weight': 0.6})
('approximation algorithm', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('approximation algorithm', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('approximation algorithm', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('approximation algorithm', 'international standard book number', {'weight': 0.6})
('approximation algorithm', 'undirected graph', {'weight': 0.6})
('approximation algorithm', 'scheme (programming language)', {'weight': 0.6})
('approximation algorithm', 'rna structure', {'weight': 0.6})
('approximation algorithm', 'hanoi', {'weight': 0.6})
('approximation algorithm', 'perl', {'weight': 0.6})
('approximation algorithm', 'digital object identifier', {'weight': 0.6})
('approximation algorithm', 'sequential quadratic programming', {'weight': 0.6})
('approximation algorithm', "dinic's algorithm", {'weight': 0.6})
('approximation algorithm', 'pseudo-polynomial time', {'weight': 0.6})
('approximation algorithm', 'partition problem', {'weight': 0.6})
('approximation algorithm', 'stochastic programming', {'weight': 0.6})
('approximation algorithm', 'hill climbing', {'weight': 0.6})
('approximation algorithm', 'top-down', {'weight': 0.6})
('approximation algorithm', 'de boor algorithm', {'weight': 0.6})
('approximation algorithm', 'optimization algorithm', {'weight': 0.6})
('approximation algorithm', "kruskal's algorithm", {'weight': 0.6})
('approximation algorithm', 'jacques philippe marie binet', {'weight': 0.6})
('approximation algorithm', 'tabu search', {'weight': 0.6})
('approximation algorithm', 'divide and conquer algorithm', {'weight': 0.6})
('approximation algorithm', "johnson's algorithm", {'weight': 0.6})
('approximation algorithm', 'evolutionary algorithm', {'weight': 0.6})
('approximation algorithm', 'clique-width', {'weight': 0.6})
('approximation algorithm', 'dynamic programming', {'weight': 0.6})
('approximation algorithm', 'subroutine', {'weight': 0.6})
('approximation algorithm', 'simulated annealing', {'weight': 0.6})
('approximation algorithm', 'tower of hanoi', {'weight': 0.6})
('approximation algorithm', 'branch and bound', {'weight': 0.6})
('approximation algorithm', 'engineering', {'weight': 0.6})
('approximation algorithm', 'matroid', {'weight': 0.6})
('approximation algorithm', 'viterbi algorithm', {'weight': 0.6})
('approximation algorithm', "lemke's algorithm", {'weight': 0.6})
('approximation algorithm', 'simplex algorithm', {'weight': 0.6})
('approximation algorithm', 'local search (optimization)', {'weight': 0.6})
('approximation algorithm', 'hessian matrix', {'weight': 0.6})
('approximation algorithm', 'ibm system r', {'weight': 0.6})
('approximation algorithm', 'penalty method', {'weight': 0.6})
('approximation algorithm', 'prolog', {'weight': 0.6})
('approximation algorithm', 'approximation algorithms', {'weight': 0.5})
('approximation algorithm', 'time-invariant system', {'weight': 0.6})
('approximation algorithm', 'criss-cross algorithm', {'weight': 0.6})
('approximation algorithm', 'revised simplex algorithm', {'weight': 0.6})
('approximation algorithm', 'the mathematical association of america', {'weight': 0.6})
('approximation algorithm', 'line search', {'weight': 0.6})
('approximation algorithm', 'j (programming language)', {'weight': 0.6})
('approximation algorithm', 'word wrap', {'weight': 0.6})
('approximation algorithm', 'subset sum problem', {'weight': 0.6})
('approximation algorithm', 'integer programming', {'weight': 0.6})
('approximation algorithm', 'nucleosome', {'weight': 0.6})
('approximation algorithm', 'earley algorithm', {'weight': 0.6})
('approximation algorithm', 'referential transparency (computer science)', {'weight': 0.6})
('approximation algorithm', 'recursion', {'weight': 0.6})
('approximation algorithm', 'mathematica', {'weight': 0.6})
('approximation algorithm', 'quicksort', {'weight': 0.6})
('approximation algorithm', 'recursion (computer science)', {'weight': 0.6})
('approximation algorithm', 'checkerboard', {'weight': 0.6})
('approximation algorithm', 'computer science', {'weight': 0.6})
('approximation algorithm', 'brute-force search', {'weight': 0.6})
('approximation algorithm', 'mathematics', {'weight': 0.6})
('approximation algorithm', 'depth-first search', {'weight': 0.6})
('approximation algorithm', 'top-down and bottom-up design', {'weight': 0.6})
('approximation algorithm', 'correspondence problem', {'weight': 0.6})
('approximation algorithm', 'transcription factor', {'weight': 0.6})
('approximation algorithm', 'tree decomposition', {'weight': 0.6})
('approximation algorithm', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('approximation algorithm', 'structural alignment', {'weight': 0.6})
('approximation algorithm', 'local convergence', {'weight': 0.6})
('approximation algorithm', 'knapsack problem', {'weight': 0.6})
('approximation algorithm', 'graph algorithm', {'weight': 0.6})
('approximation algorithm', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('approximation algorithm', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('approximation algorithm', 'hidden markov model', {'weight': 0.6})
('approximation algorithm', 'string (computer science)', {'weight': 0.6})
('approximation algorithm', 'bioinformatics', {'weight': 0.6})
('approximation algorithm', 'genetics', {'weight': 0.6})
('approximation algorithm', 'mathematical optimization', {'weight': 0.6})
('approximation algorithm', 'artificial neural networks', {'weight': 0.6})
('approximation algorithm', 'introduction to algorithms', {'weight': 0.6})
('approximation algorithm', 'thomas h. cormen', {'weight': 0.6})
('approximation algorithm', 'music information retrieval', {'weight': 0.6})
('approximation algorithm', 'beat (music)', {'weight': 0.6})
('approximation algorithm', 'longest common subsequence problem', {'weight': 0.6})
('approximation algorithm', 'convex minimization', {'weight': 0.6})
('approximation algorithm', 'successive parabolic interpolation', {'weight': 0.6})
('approximation algorithm', 'fibonacci sequence', {'weight': 0.6})
('approximation algorithm', 'maximum subarray problem', {'weight': 0.6})
('approximation algorithm', 'convex optimization', {'weight': 0.6})
('approximation algorithm', 'memoization', {'weight': 0.6})
('approximation algorithm', 'richard bellman', {'weight': 0.6})
('approximation algorithm', 'exponential growth', {'weight': 0.6})
('approximation algorithm', 'charles e. leiserson', {'weight': 0.6})
('approximation algorithm', 'charles erwin wilson', {'weight': 0.6})
('approximation algorithm', 'interval scheduling', {'weight': 0.6})
('approximation algorithm', 'chart parser', {'weight': 0.6})
('approximation algorithm', 'travelling salesman problem', {'weight': 0.6})
('approximation algorithm', 'bellman equation', {'weight': 0.6})
('transposition table', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('transposition table', 'photoshop', {'weight': 0.6})
('transposition table', 'sequence alignment', {'weight': 0.6})
('transposition table', 'flow network', {'weight': 0.6})
('transposition table', 'ellipsoid method', {'weight': 0.6})
('transposition table', 'chain matrix multiplication', {'weight': 0.6})
('transposition table', 'ieee', {'weight': 0.6})
('transposition table', 'backtracking', {'weight': 0.6})
('transposition table', 'nonlinear conjugate gradient method', {'weight': 0.6})
('transposition table', 'dynamic problem', {'weight': 0.6})
('transposition table', 'trust region', {'weight': 0.6})
('transposition table', 'function (mathematics)', {'weight': 0.6})
('transposition table', 'minimum spanning tree', {'weight': 0.6})
('transposition table', 'context-free grammar', {'weight': 0.6})
('transposition table', 'branch and cut', {'weight': 0.6})
('transposition table', 'state variable', {'weight': 0.6})
('transposition table', 'treewidth', {'weight': 0.6})
('transposition table', 'overlapping subproblem', {'weight': 0.6})
('transposition table', 'taylor & francis', {'weight': 0.6})
('transposition table', 'alpha-beta pruning', {'weight': 0.7})
('transposition table', 'cutting-plane method', {'weight': 0.6})
('transposition table', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('transposition table', 'method of undetermined coefficients', {'weight': 0.6})
('transposition table', 'combinatorial optimization', {'weight': 0.6})
('transposition table', "newton's method in optimization", {'weight': 0.6})
('transposition table', 'matrix chain multiplication', {'weight': 0.6})
('transposition table', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('transposition table', 'dynamic time warping', {'weight': 0.6})
('transposition table', 'dynamic programming language', {'weight': 0.6})
('transposition table', 'call-by-need', {'weight': 0.6})
('transposition table', 'big-o notation', {'weight': 0.6})
('transposition table', 'comparison of optimization software', {'weight': 0.6})
('transposition table', 'quadratic programming', {'weight': 0.6})
('transposition table', 'common lisp', {'weight': 0.6})
('transposition table', 'barrier function', {'weight': 0.6})
('transposition table', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('transposition table', 'gradient descent', {'weight': 0.6})
('transposition table', 'patricia selinger', {'weight': 0.6})
('transposition table', 'discounting', {'weight': 0.6})
('transposition table', 'ronald l. rivest', {'weight': 0.6})
('transposition table', 'iterative method', {'weight': 0.6})
('transposition table', 'limited-memory bfgs', {'weight': 0.6})
('transposition table', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('transposition table', 'longest common substring problem', {'weight': 0.6})
('transposition table', 'clifford stein', {'weight': 0.6})
('transposition table', 'mergesort', {'weight': 0.6})
('transposition table', 'linear programming', {'weight': 0.6})
('transposition table', 'bitonic tour', {'weight': 0.6})
('transposition table', 'linear search problem', {'weight': 0.6})
('transposition table', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('transposition table', 'systems analysis', {'weight': 0.6})
('transposition table', 'capital (economics)', {'weight': 0.6})
('transposition table', 'levenshtein distance', {'weight': 0.6})
('transposition table', 'nonlinear programming', {'weight': 0.6})
('transposition table', 'zobrist hashing', {'weight': 0.7})
('transposition table', 'computational complexity of mathematical operations', {'weight': 0.6})
('transposition table', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('transposition table', 'gradient', {'weight': 0.6})
('transposition table', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('transposition table', 'bulletin of the american mathematical society', {'weight': 0.6})
('transposition table', 'u.s. english', {'weight': 0.6})
('transposition table', 'refutation table', {'weight': 0.6})
('transposition table', 'heuristic algorithm', {'weight': 0.6})
('transposition table', 'successive linear programming', {'weight': 0.6})
('transposition table', 'optimal substructure', {'weight': 0.6})
('transposition table', 'programming language', {'weight': 0.6})
('transposition table', 'computer chess', {'weight': 0.6})
('transposition table', "dijkstra's algorithm", {'weight': 0.6})
('transposition table', 'subgradient method', {'weight': 0.6})
('transposition table', 'call-by-name', {'weight': 0.6})
('transposition table', 'longest increasing subsequence problem', {'weight': 0.6})
('transposition table', 'edward prescott', {'weight': 0.6})
('transposition table', 'exponential time', {'weight': 0.6})
('transposition table', 'principle of optimality', {'weight': 0.6})
('transposition table', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('transposition table', 'mathematical game', {'weight': 0.6})
('transposition table', 'nancy stokey', {'weight': 0.6})
('transposition table', 'approximation algorithm', {'weight': 0.6})
('transposition table', 'discrete-time', {'weight': 0.6})
('transposition table', 'cyk algorithm', {'weight': 0.6})
('transposition table', 'markov decision process', {'weight': 0.6})
('transposition table', "powell's method", {'weight': 0.6})
('transposition table', 'wolfe conditions', {'weight': 0.6})
('transposition table', 'convexity in economics', {'weight': 0.6})
('transposition table', 'transposition table', {'weight': 1})
('transposition table', 'economics', {'weight': 0.6})
('transposition table', 'backward induction', {'weight': 0.6})
('transposition table', 'golden section search', {'weight': 0.6})
('transposition table', 'edit distance', {'weight': 0.6})
('transposition table', 'tree structure', {'weight': 0.6})
('transposition table', 'exchange algorithm', {'weight': 0.6})
('transposition table', 'dover publications', {'weight': 0.6})
('transposition table', 'seam carving', {'weight': 0.6})
('transposition table', 'recursive least squares', {'weight': 0.6})
('transposition table', 'metaheuristic', {'weight': 0.6})
('transposition table', 'quasi-newton method', {'weight': 0.6})
('transposition table', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('transposition table', 'robert e. lucas', {'weight': 0.6})
('transposition table', 'non-convexity (economics)', {'weight': 0.6})
('transposition table', 'sr1 formula', {'weight': 0.6})
('transposition table', 'mathematical reviews', {'weight': 0.6})
('transposition table', 'puzzle', {'weight': 0.6})
('transposition table', 'associative array', {'weight': 0.6})
('transposition table', 'shortest path problem', {'weight': 0.6})
('transposition table', 'dynamic algorithm', {'weight': 0.6})
('transposition table', 'augmented lagrangian method', {'weight': 0.6})
('transposition table', 'charles delisi', {'weight': 0.6})
('transposition table', 'greedy algorithm', {'weight': 0.6})
('transposition table', "karmarkar's algorithm", {'weight': 0.6})
('transposition table', 'lattice models', {'weight': 0.6})
('transposition table', 'utility', {'weight': 0.6})
('transposition table', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('transposition table', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('transposition table', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('transposition table', 'international standard book number', {'weight': 0.6})
('transposition table', 'undirected graph', {'weight': 0.6})
('transposition table', 'scheme (programming language)', {'weight': 0.6})
('transposition table', 'rna structure', {'weight': 0.6})
('transposition table', 'hanoi', {'weight': 0.6})
('transposition table', 'perl', {'weight': 0.6})
('transposition table', 'digital object identifier', {'weight': 0.6})
('transposition table', 'sequential quadratic programming', {'weight': 0.6})
('transposition table', "dinic's algorithm", {'weight': 0.6})
('transposition table', 'pseudo-polynomial time', {'weight': 0.6})
('transposition table', 'partition problem', {'weight': 0.6})
('transposition table', 'stochastic programming', {'weight': 0.6})
('transposition table', 'hill climbing', {'weight': 0.6})
('transposition table', 'top-down', {'weight': 0.6})
('transposition table', 'de boor algorithm', {'weight': 0.6})
('transposition table', 'optimization algorithm', {'weight': 0.6})
('transposition table', "kruskal's algorithm", {'weight': 0.6})
('transposition table', 'jacques philippe marie binet', {'weight': 0.6})
('transposition table', 'tabu search', {'weight': 0.6})
('transposition table', 'divide and conquer algorithm', {'weight': 0.6})
('transposition table', "johnson's algorithm", {'weight': 0.6})
('transposition table', 'evolutionary algorithm', {'weight': 0.6})
('transposition table', 'clique-width', {'weight': 0.6})
('transposition table', 'dynamic programming', {'weight': 0.6})
('transposition table', 'subroutine', {'weight': 0.6})
('transposition table', 'game artificial intelligence', {'weight': 0.5})
('transposition table', 'simulated annealing', {'weight': 0.6})
('transposition table', 'tower of hanoi', {'weight': 0.6})
('transposition table', 'branch and bound', {'weight': 0.6})
('transposition table', 'engineering', {'weight': 0.6})
('transposition table', 'matroid', {'weight': 0.6})
('transposition table', 'viterbi algorithm', {'weight': 0.6})
('transposition table', "lemke's algorithm", {'weight': 0.6})
('transposition table', 'simplex algorithm', {'weight': 0.6})
('transposition table', 'local search (optimization)', {'weight': 0.6})
('transposition table', 'hessian matrix', {'weight': 0.6})
('transposition table', 'ibm system r', {'weight': 0.6})
('transposition table', 'penalty method', {'weight': 0.6})
('transposition table', 'prolog', {'weight': 0.6})
('transposition table', 'time-invariant system', {'weight': 0.6})
('transposition table', 'criss-cross algorithm', {'weight': 0.6})
('transposition table', 'revised simplex algorithm', {'weight': 0.6})
('transposition table', 'the mathematical association of america', {'weight': 0.6})
('transposition table', 'minimax algorithm', {'weight': 0.7})
('transposition table', 'line search', {'weight': 0.6})
('transposition table', 'j (programming language)', {'weight': 0.6})
('transposition table', 'word wrap', {'weight': 0.6})
('transposition table', 'subset sum problem', {'weight': 0.6})
('transposition table', 'integer programming', {'weight': 0.6})
('transposition table', 'nucleosome', {'weight': 0.6})
('transposition table', 'earley algorithm', {'weight': 0.6})
('transposition table', 'referential transparency (computer science)', {'weight': 0.6})
('transposition table', 'recursion', {'weight': 0.6})
('transposition table', 'mathematica', {'weight': 0.6})
('transposition table', 'quicksort', {'weight': 0.6})
('transposition table', 'recursion (computer science)', {'weight': 0.6})
('transposition table', 'checkerboard', {'weight': 0.6})
('transposition table', 'computer science', {'weight': 0.6})
('transposition table', 'brute-force search', {'weight': 0.6})
('transposition table', 'mathematics', {'weight': 0.6})
('transposition table', 'depth-first search', {'weight': 0.6})
('transposition table', 'top-down and bottom-up design', {'weight': 0.6})
('transposition table', 'correspondence problem', {'weight': 0.6})
('transposition table', 'transcription factor', {'weight': 0.6})
('transposition table', 'tree decomposition', {'weight': 0.6})
('transposition table', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('transposition table', 'structural alignment', {'weight': 0.6})
('transposition table', 'local convergence', {'weight': 0.6})
('transposition table', 'knapsack problem', {'weight': 0.6})
('transposition table', 'graph algorithm', {'weight': 0.6})
('transposition table', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('transposition table', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('transposition table', 'hidden markov model', {'weight': 0.6})
('transposition table', 'string (computer science)', {'weight': 0.6})
('transposition table', 'bioinformatics', {'weight': 0.6})
('transposition table', 'genetics', {'weight': 0.6})
('transposition table', 'mathematical optimization', {'weight': 0.6})
('transposition table', 'artificial neural networks', {'weight': 0.6})
('transposition table', 'introduction to algorithms', {'weight': 0.6})
('transposition table', 'thomas h. cormen', {'weight': 0.6})
('transposition table', 'music information retrieval', {'weight': 0.6})
('transposition table', 'beat (music)', {'weight': 0.6})
('transposition table', 'longest common subsequence problem', {'weight': 0.6})
('transposition table', 'convex minimization', {'weight': 0.6})
('transposition table', 'successive parabolic interpolation', {'weight': 0.6})
('transposition table', 'fibonacci sequence', {'weight': 0.6})
('transposition table', 'maximum subarray problem', {'weight': 0.6})
('transposition table', 'convex optimization', {'weight': 0.6})
('transposition table', 'memoization', {'weight': 0.6})
('transposition table', 'richard bellman', {'weight': 0.6})
('transposition table', 'exponential growth', {'weight': 0.6})
('transposition table', 'charles e. leiserson', {'weight': 0.6})
('transposition table', 'charles erwin wilson', {'weight': 0.6})
('transposition table', 'interval scheduling', {'weight': 0.6})
('transposition table', 'chart parser', {'weight': 0.6})
('transposition table', 'travelling salesman problem', {'weight': 0.6})
('transposition table', 'bellman equation', {'weight': 0.6})
('edit distance', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('edit distance', 'photoshop', {'weight': 0.6})
('edit distance', 'sequence alignment', {'weight': 0.6})
('edit distance', 'flow network', {'weight': 0.6})
('edit distance', 'ellipsoid method', {'weight': 0.6})
('edit distance', 'chain matrix multiplication', {'weight': 0.6})
('edit distance', 'ieee', {'weight': 0.6})
('edit distance', 'backtracking', {'weight': 0.6})
('edit distance', 'nonlinear conjugate gradient method', {'weight': 0.6})
('edit distance', 'dynamic problem', {'weight': 0.6})
('edit distance', 'trust region', {'weight': 0.6})
('edit distance', 'function (mathematics)', {'weight': 0.6})
('edit distance', 'minimum spanning tree', {'weight': 0.6})
('edit distance', 'context-free grammar', {'weight': 0.6})
('edit distance', 'branch and cut', {'weight': 0.6})
('edit distance', 'state variable', {'weight': 0.6})
('edit distance', 'evolutionary algorithm', {'weight': 0.6})
('edit distance', 'treewidth', {'weight': 0.6})
('edit distance', 'overlapping subproblem', {'weight': 0.6})
('edit distance', 'taylor & francis', {'weight': 0.6})
('edit distance', 'cutting-plane method', {'weight': 0.6})
('edit distance', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('edit distance', 'method of undetermined coefficients', {'weight': 0.6})
('edit distance', 'combinatorial optimization', {'weight': 0.6})
('edit distance', "newton's method in optimization", {'weight': 0.6})
('edit distance', 'matrix chain multiplication', {'weight': 0.6})
('edit distance', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('edit distance', 'dynamic time warping', {'weight': 0.6})
('edit distance', 'dynamic programming language', {'weight': 0.6})
('edit distance', 'call-by-need', {'weight': 0.6})
('edit distance', 'big-o notation', {'weight': 0.6})
('edit distance', 'comparison of optimization software', {'weight': 0.6})
('edit distance', 'quadratic programming', {'weight': 0.6})
('edit distance', 'common lisp', {'weight': 0.6})
('edit distance', 'barrier function', {'weight': 0.6})
('edit distance', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('edit distance', 'gradient descent', {'weight': 0.6})
('edit distance', 'patricia selinger', {'weight': 0.6})
('edit distance', 'discounting', {'weight': 0.6})
('edit distance', 'ronald l. rivest', {'weight': 0.6})
('edit distance', 'iterative method', {'weight': 0.6})
('edit distance', 'limited-memory bfgs', {'weight': 0.6})
('edit distance', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('edit distance', 'longest common substring problem', {'weight': 0.6})
('edit distance', 'clifford stein', {'weight': 0.6})
('edit distance', 'computer chess', {'weight': 0.6})
('edit distance', 'linear programming', {'weight': 0.6})
('edit distance', 'bitonic tour', {'weight': 0.6})
('edit distance', 'linear search problem', {'weight': 0.6})
('edit distance', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('edit distance', 'systems analysis', {'weight': 0.6})
('edit distance', 'capital (economics)', {'weight': 0.6})
('edit distance', 'levenshtein distance', {'weight': 0.6})
('edit distance', 'nonlinear programming', {'weight': 0.6})
('edit distance', 'computational complexity of mathematical operations', {'weight': 0.6})
('edit distance', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('edit distance', 'gradient', {'weight': 0.6})
('edit distance', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('edit distance', 'bulletin of the american mathematical society', {'weight': 0.6})
('edit distance', 'u.s. english', {'weight': 0.6})
('edit distance', 'refutation table', {'weight': 0.6})
('edit distance', 'heuristic algorithm', {'weight': 0.6})
('edit distance', 'successive linear programming', {'weight': 0.6})
('edit distance', 'optimal substructure', {'weight': 0.6})
('edit distance', 'programming language', {'weight': 0.6})
('edit distance', 'mergesort', {'weight': 0.6})
('edit distance', "dijkstra's algorithm", {'weight': 0.6})
('edit distance', 'subgradient method', {'weight': 0.6})
('edit distance', 'call-by-name', {'weight': 0.6})
('edit distance', 'longest increasing subsequence problem', {'weight': 0.6})
('edit distance', 'edward prescott', {'weight': 0.6})
('edit distance', 'exponential time', {'weight': 0.6})
('edit distance', 'principle of optimality', {'weight': 0.6})
('edit distance', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('edit distance', 'mathematical game', {'weight': 0.6})
('edit distance', 'nancy stokey', {'weight': 0.6})
('edit distance', 'approximation algorithm', {'weight': 0.6})
('edit distance', 'discrete-time', {'weight': 0.6})
('edit distance', 'cyk algorithm', {'weight': 0.6})
('edit distance', 'markov decision process', {'weight': 0.6})
('edit distance', "powell's method", {'weight': 0.6})
('edit distance', 'wolfe conditions', {'weight': 0.6})
('edit distance', 'convexity in economics', {'weight': 0.6})
('edit distance', 'transposition table', {'weight': 0.6})
('edit distance', 'economics', {'weight': 0.6})
('edit distance', 'backward induction', {'weight': 0.6})
('edit distance', 'golden section search', {'weight': 0.6})
('edit distance', 'edit distance', {'weight': 1})
('edit distance', 'tree structure', {'weight': 0.6})
('edit distance', 'exchange algorithm', {'weight': 0.6})
('edit distance', 'dover publications', {'weight': 0.6})
('edit distance', 'seam carving', {'weight': 0.6})
('edit distance', 'recursive least squares', {'weight': 0.6})
('edit distance', 'metaheuristic', {'weight': 0.6})
('edit distance', 'quasi-newton method', {'weight': 0.6})
('edit distance', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('edit distance', 'robert e. lucas', {'weight': 0.6})
('edit distance', 'non-convexity (economics)', {'weight': 0.6})
('edit distance', 'sr1 formula', {'weight': 0.6})
('edit distance', 'mathematical reviews', {'weight': 0.6})
('edit distance', 'puzzle', {'weight': 0.6})
('edit distance', 'associative array', {'weight': 0.6})
('edit distance', 'shortest path problem', {'weight': 0.6})
('edit distance', 'dynamic algorithm', {'weight': 0.6})
('edit distance', 'augmented lagrangian method', {'weight': 0.6})
('edit distance', 'charles delisi', {'weight': 0.6})
('edit distance', 'greedy algorithm', {'weight': 0.6})
('edit distance', "karmarkar's algorithm", {'weight': 0.6})
('edit distance', 'lattice models', {'weight': 0.6})
('edit distance', 'utility', {'weight': 0.6})
('edit distance', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('edit distance', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('edit distance', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('edit distance', 'international standard book number', {'weight': 0.6})
('edit distance', 'undirected graph', {'weight': 0.6})
('edit distance', 'scheme (programming language)', {'weight': 0.6})
('edit distance', 'rna structure', {'weight': 0.6})
('edit distance', 'hanoi', {'weight': 0.6})
('edit distance', 'perl', {'weight': 0.6})
('edit distance', 'digital object identifier', {'weight': 0.6})
('edit distance', 'sequential quadratic programming', {'weight': 0.6})
('edit distance', "dinic's algorithm", {'weight': 0.6})
('edit distance', 'pseudo-polynomial time', {'weight': 0.6})
('edit distance', 'partition problem', {'weight': 0.6})
('edit distance', 'stochastic programming', {'weight': 0.6})
('edit distance', 'hill climbing', {'weight': 0.6})
('edit distance', 'top-down', {'weight': 0.6})
('edit distance', 'de boor algorithm', {'weight': 0.6})
('edit distance', 'optimization algorithm', {'weight': 0.6})
('edit distance', "kruskal's algorithm", {'weight': 0.6})
('edit distance', 'jacques philippe marie binet', {'weight': 0.6})
('edit distance', 'tabu search', {'weight': 0.6})
('edit distance', 'divide and conquer algorithm', {'weight': 0.6})
('edit distance', "johnson's algorithm", {'weight': 0.6})
('edit distance', 'string similarity measures', {'weight': 0.5})
('edit distance', 'clique-width', {'weight': 0.6})
('edit distance', 'dynamic programming', {'weight': 0.6})
('edit distance', 'subroutine', {'weight': 0.6})
('edit distance', 'simulated annealing', {'weight': 0.6})
('edit distance', 'tower of hanoi', {'weight': 0.6})
('edit distance', 'branch and bound', {'weight': 0.6})
('edit distance', 'engineering', {'weight': 0.6})
('edit distance', 'matroid', {'weight': 0.6})
('edit distance', 'viterbi algorithm', {'weight': 0.6})
('edit distance', "lemke's algorithm", {'weight': 0.6})
('edit distance', 'simplex algorithm', {'weight': 0.6})
('edit distance', 'local search (optimization)', {'weight': 0.6})
('edit distance', 'hessian matrix', {'weight': 0.6})
('edit distance', 'ibm system r', {'weight': 0.6})
('edit distance', 'penalty method', {'weight': 0.6})
('edit distance', 'prolog', {'weight': 0.6})
('edit distance', 'time-invariant system', {'weight': 0.6})
('edit distance', 'criss-cross algorithm', {'weight': 0.6})
('edit distance', 'revised simplex algorithm', {'weight': 0.6})
('edit distance', 'the mathematical association of america', {'weight': 0.6})
('edit distance', 'line search', {'weight': 0.6})
('edit distance', 'j (programming language)', {'weight': 0.6})
('edit distance', 'word wrap', {'weight': 0.6})
('edit distance', 'subset sum problem', {'weight': 0.6})
('edit distance', 'integer programming', {'weight': 0.6})
('edit distance', 'nucleosome', {'weight': 0.6})
('edit distance', 'earley algorithm', {'weight': 0.6})
('edit distance', 'referential transparency (computer science)', {'weight': 0.6})
('edit distance', 'recursion', {'weight': 0.6})
('edit distance', 'mathematica', {'weight': 0.6})
('edit distance', 'quicksort', {'weight': 0.6})
('edit distance', 'recursion (computer science)', {'weight': 0.6})
('edit distance', 'checkerboard', {'weight': 0.6})
('edit distance', 'computer science', {'weight': 0.6})
('edit distance', 'brute-force search', {'weight': 0.6})
('edit distance', 'mathematics', {'weight': 0.6})
('edit distance', 'depth-first search', {'weight': 0.6})
('edit distance', 'top-down and bottom-up design', {'weight': 0.6})
('edit distance', 'correspondence problem', {'weight': 0.6})
('edit distance', 'transcription factor', {'weight': 0.6})
('edit distance', 'tree decomposition', {'weight': 0.6})
('edit distance', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('edit distance', 'structural alignment', {'weight': 0.6})
('edit distance', 'local convergence', {'weight': 0.6})
('edit distance', 'knapsack problem', {'weight': 0.6})
('edit distance', 'graph algorithm', {'weight': 0.6})
('edit distance', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('edit distance', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('edit distance', 'hidden markov model', {'weight': 0.6})
('edit distance', 'string (computer science)', {'weight': 0.6})
('edit distance', 'bioinformatics', {'weight': 0.6})
('edit distance', 'genetics', {'weight': 0.6})
('edit distance', 'mathematical optimization', {'weight': 0.6})
('edit distance', 'artificial neural networks', {'weight': 0.6})
('edit distance', 'introduction to algorithms', {'weight': 0.6})
('edit distance', 'thomas h. cormen', {'weight': 0.6})
('edit distance', 'music information retrieval', {'weight': 0.6})
('edit distance', 'beat (music)', {'weight': 0.6})
('edit distance', 'longest common subsequence problem', {'weight': 0.6})
('edit distance', 'convex minimization', {'weight': 0.6})
('edit distance', 'successive parabolic interpolation', {'weight': 0.6})
('edit distance', 'fibonacci sequence', {'weight': 0.6})
('edit distance', 'maximum subarray problem', {'weight': 0.6})
('edit distance', 'convex optimization', {'weight': 0.6})
('edit distance', 'memoization', {'weight': 0.6})
('edit distance', 'richard bellman', {'weight': 0.6})
('edit distance', 'exponential growth', {'weight': 0.6})
('edit distance', 'charles e. leiserson', {'weight': 0.6})
('edit distance', 'charles erwin wilson', {'weight': 0.6})
('edit distance', 'interval scheduling', {'weight': 0.6})
('edit distance', 'chart parser', {'weight': 0.6})
('edit distance', 'travelling salesman problem', {'weight': 0.6})
('edit distance', 'bellman equation', {'weight': 0.6})
('quasi-newton method', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('quasi-newton method', 'photoshop', {'weight': 0.6})
('quasi-newton method', 'sequence alignment', {'weight': 0.6})
('quasi-newton method', 'flow network', {'weight': 0.6})
('quasi-newton method', 'ellipsoid method', {'weight': 0.6})
('quasi-newton method', 'chain matrix multiplication', {'weight': 0.6})
('quasi-newton method', 'ieee', {'weight': 0.6})
('quasi-newton method', 'backtracking', {'weight': 0.6})
('quasi-newton method', 'nonlinear conjugate gradient method', {'weight': 0.6})
('quasi-newton method', 'dynamic problem', {'weight': 0.6})
('quasi-newton method', 'trust region', {'weight': 0.6})
('quasi-newton method', 'function (mathematics)', {'weight': 0.6})
('quasi-newton method', 'minimum spanning tree', {'weight': 0.6})
('quasi-newton method', 'context-free grammar', {'weight': 0.6})
('quasi-newton method', 'branch and cut', {'weight': 0.6})
('quasi-newton method', 'state variable', {'weight': 0.6})
('quasi-newton method', 'treewidth', {'weight': 0.6})
('quasi-newton method', 'overlapping subproblem', {'weight': 0.6})
('quasi-newton method', 'taylor & francis', {'weight': 0.6})
('quasi-newton method', 'cutting-plane method', {'weight': 0.6})
('quasi-newton method', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('quasi-newton method', 'method of undetermined coefficients', {'weight': 0.6})
('quasi-newton method', 'combinatorial optimization', {'weight': 0.6})
('quasi-newton method', "newton's method in optimization", {'weight': 0.6})
('quasi-newton method', 'matrix chain multiplication', {'weight': 0.6})
('quasi-newton method', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('quasi-newton method', 'dynamic time warping', {'weight': 0.6})
('quasi-newton method', 'dynamic programming language', {'weight': 0.6})
('quasi-newton method', 'call-by-need', {'weight': 0.6})
('quasi-newton method', 'big-o notation', {'weight': 0.6})
('quasi-newton method', 'comparison of optimization software', {'weight': 0.6})
('quasi-newton method', 'quadratic programming', {'weight': 0.6})
('quasi-newton method', 'common lisp', {'weight': 0.6})
('quasi-newton method', 'barrier function', {'weight': 0.6})
('quasi-newton method', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('quasi-newton method', 'gradient descent', {'weight': 0.6})
('quasi-newton method', 'patricia selinger', {'weight': 0.6})
('quasi-newton method', 'discounting', {'weight': 0.6})
('quasi-newton method', 'ronald l. rivest', {'weight': 0.6})
('quasi-newton method', 'iterative method', {'weight': 0.6})
('quasi-newton method', 'limited-memory bfgs', {'weight': 0.6})
('quasi-newton method', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('quasi-newton method', 'longest common substring problem', {'weight': 0.6})
('quasi-newton method', 'clifford stein', {'weight': 0.6})
('quasi-newton method', 'computer chess', {'weight': 0.6})
('quasi-newton method', 'linear programming', {'weight': 0.6})
('quasi-newton method', 'bitonic tour', {'weight': 0.6})
('quasi-newton method', 'linear search problem', {'weight': 0.6})
('quasi-newton method', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('quasi-newton method', 'systems analysis', {'weight': 0.6})
('quasi-newton method', 'capital (economics)', {'weight': 0.6})
('quasi-newton method', 'levenshtein distance', {'weight': 0.6})
('quasi-newton method', 'nonlinear programming', {'weight': 0.6})
('quasi-newton method', 'computational complexity of mathematical operations', {'weight': 0.6})
('quasi-newton method', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('quasi-newton method', 'gradient', {'weight': 0.6})
('quasi-newton method', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('quasi-newton method', 'bulletin of the american mathematical society', {'weight': 0.6})
('quasi-newton method', 'u.s. english', {'weight': 0.6})
('quasi-newton method', 'refutation table', {'weight': 0.6})
('quasi-newton method', 'heuristic algorithm', {'weight': 0.6})
('quasi-newton method', 'successive linear programming', {'weight': 0.6})
('quasi-newton method', 'optimal substructure', {'weight': 0.6})
('quasi-newton method', 'programming language', {'weight': 0.6})
('quasi-newton method', 'mergesort', {'weight': 0.6})
('quasi-newton method', "dijkstra's algorithm", {'weight': 0.6})
('quasi-newton method', 'subgradient method', {'weight': 0.6})
('quasi-newton method', 'call-by-name', {'weight': 0.6})
('quasi-newton method', 'longest increasing subsequence problem', {'weight': 0.6})
('quasi-newton method', 'edward prescott', {'weight': 0.6})
('quasi-newton method', 'exponential time', {'weight': 0.6})
('quasi-newton method', 'principle of optimality', {'weight': 0.6})
('quasi-newton method', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('quasi-newton method', 'mathematical game', {'weight': 0.6})
('quasi-newton method', 'nancy stokey', {'weight': 0.6})
('quasi-newton method', 'approximation algorithm', {'weight': 0.6})
('quasi-newton method', 'discrete-time', {'weight': 0.6})
('quasi-newton method', 'cyk algorithm', {'weight': 0.6})
('quasi-newton method', 'markov decision process', {'weight': 0.6})
('quasi-newton method', "powell's method", {'weight': 0.6})
('quasi-newton method', 'wolfe conditions', {'weight': 0.6})
('quasi-newton method', 'convexity in economics', {'weight': 0.6})
('quasi-newton method', 'transposition table', {'weight': 0.6})
('quasi-newton method', 'economics', {'weight': 0.6})
('quasi-newton method', 'backward induction', {'weight': 0.6})
('quasi-newton method', 'golden section search', {'weight': 0.6})
('quasi-newton method', 'edit distance', {'weight': 0.6})
('quasi-newton method', 'tree structure', {'weight': 0.6})
('quasi-newton method', 'exchange algorithm', {'weight': 0.6})
('quasi-newton method', 'dover publications', {'weight': 0.6})
('quasi-newton method', 'seam carving', {'weight': 0.6})
('quasi-newton method', 'recursive least squares', {'weight': 0.6})
('quasi-newton method', 'metaheuristic', {'weight': 0.6})
('quasi-newton method', 'quasi-newton method', {'weight': 1})
('quasi-newton method', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('quasi-newton method', 'robert e. lucas', {'weight': 0.6})
('quasi-newton method', 'non-convexity (economics)', {'weight': 0.6})
('quasi-newton method', 'sr1 formula', {'weight': 0.6})
('quasi-newton method', 'mathematical reviews', {'weight': 0.6})
('quasi-newton method', 'puzzle', {'weight': 0.6})
('quasi-newton method', 'associative array', {'weight': 0.6})
('quasi-newton method', 'shortest path problem', {'weight': 0.6})
('quasi-newton method', 'dynamic algorithm', {'weight': 0.6})
('quasi-newton method', 'augmented lagrangian method', {'weight': 0.6})
('quasi-newton method', 'charles delisi', {'weight': 0.6})
('quasi-newton method', 'greedy algorithm', {'weight': 0.6})
('quasi-newton method', "karmarkar's algorithm", {'weight': 0.6})
('quasi-newton method', 'lattice models', {'weight': 0.6})
('quasi-newton method', 'utility', {'weight': 0.6})
('quasi-newton method', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('quasi-newton method', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('quasi-newton method', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('quasi-newton method', 'international standard book number', {'weight': 0.6})
('quasi-newton method', 'undirected graph', {'weight': 0.6})
('quasi-newton method', 'scheme (programming language)', {'weight': 0.6})
('quasi-newton method', 'rna structure', {'weight': 0.6})
('quasi-newton method', 'hanoi', {'weight': 0.6})
('quasi-newton method', 'perl', {'weight': 0.6})
('quasi-newton method', 'digital object identifier', {'weight': 0.6})
('quasi-newton method', 'sequential quadratic programming', {'weight': 0.6})
('quasi-newton method', "dinic's algorithm", {'weight': 0.6})
('quasi-newton method', 'pseudo-polynomial time', {'weight': 0.6})
('quasi-newton method', 'partition problem', {'weight': 0.6})
('quasi-newton method', 'stochastic programming', {'weight': 0.6})
('quasi-newton method', 'hill climbing', {'weight': 0.6})
('quasi-newton method', 'top-down', {'weight': 0.6})
('quasi-newton method', 'de boor algorithm', {'weight': 0.6})
('quasi-newton method', 'optimization algorithm', {'weight': 0.6})
('quasi-newton method', "kruskal's algorithm", {'weight': 0.6})
('quasi-newton method', 'jacques philippe marie binet', {'weight': 0.6})
('quasi-newton method', 'tabu search', {'weight': 0.6})
('quasi-newton method', 'divide and conquer algorithm', {'weight': 0.6})
('quasi-newton method', "johnson's algorithm", {'weight': 0.6})
('quasi-newton method', 'evolutionary algorithm', {'weight': 0.6})
('quasi-newton method', 'clique-width', {'weight': 0.6})
('quasi-newton method', 'dynamic programming', {'weight': 0.6})
('quasi-newton method', 'subroutine', {'weight': 0.6})
('quasi-newton method', 'simulated annealing', {'weight': 0.6})
('quasi-newton method', 'tower of hanoi', {'weight': 0.6})
('quasi-newton method', 'branch and bound', {'weight': 0.6})
('quasi-newton method', 'engineering', {'weight': 0.6})
('quasi-newton method', 'matroid', {'weight': 0.6})
('quasi-newton method', 'viterbi algorithm', {'weight': 0.6})
('quasi-newton method', "lemke's algorithm", {'weight': 0.6})
('quasi-newton method', 'simplex algorithm', {'weight': 0.6})
('quasi-newton method', 'local search (optimization)', {'weight': 0.6})
('quasi-newton method', 'hessian matrix', {'weight': 0.6})
('quasi-newton method', 'ibm system r', {'weight': 0.6})
('quasi-newton method', 'penalty method', {'weight': 0.6})
('quasi-newton method', 'prolog', {'weight': 0.6})
('quasi-newton method', 'time-invariant system', {'weight': 0.6})
('quasi-newton method', 'criss-cross algorithm', {'weight': 0.6})
('quasi-newton method', 'revised simplex algorithm', {'weight': 0.6})
('quasi-newton method', 'the mathematical association of america', {'weight': 0.6})
('quasi-newton method', 'line search', {'weight': 0.6})
('quasi-newton method', 'j (programming language)', {'weight': 0.6})
('quasi-newton method', 'word wrap', {'weight': 0.6})
('quasi-newton method', 'subset sum problem', {'weight': 0.6})
('quasi-newton method', 'integer programming', {'weight': 0.6})
('quasi-newton method', 'nucleosome', {'weight': 0.6})
('quasi-newton method', 'earley algorithm', {'weight': 0.6})
('quasi-newton method', 'referential transparency (computer science)', {'weight': 0.6})
('quasi-newton method', 'recursion', {'weight': 0.6})
('quasi-newton method', 'mathematica', {'weight': 0.6})
('quasi-newton method', 'quicksort', {'weight': 0.6})
('quasi-newton method', 'recursion (computer science)', {'weight': 0.6})
('quasi-newton method', 'checkerboard', {'weight': 0.6})
('quasi-newton method', 'computer science', {'weight': 0.6})
('quasi-newton method', 'brute-force search', {'weight': 0.6})
('quasi-newton method', 'mathematics', {'weight': 0.6})
('quasi-newton method', 'depth-first search', {'weight': 0.6})
('quasi-newton method', 'top-down and bottom-up design', {'weight': 0.6})
('quasi-newton method', 'correspondence problem', {'weight': 0.6})
('quasi-newton method', 'transcription factor', {'weight': 0.6})
('quasi-newton method', 'tree decomposition', {'weight': 0.6})
('quasi-newton method', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('quasi-newton method', 'structural alignment', {'weight': 0.6})
('quasi-newton method', 'local convergence', {'weight': 0.6})
('quasi-newton method', 'knapsack problem', {'weight': 0.6})
('quasi-newton method', 'graph algorithm', {'weight': 0.6})
('quasi-newton method', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('quasi-newton method', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('quasi-newton method', 'hidden markov model', {'weight': 0.6})
('quasi-newton method', 'string (computer science)', {'weight': 0.6})
('quasi-newton method', 'bioinformatics', {'weight': 0.6})
('quasi-newton method', 'genetics', {'weight': 0.6})
('quasi-newton method', 'mathematical optimization', {'weight': 0.6})
('quasi-newton method', 'artificial neural networks', {'weight': 0.6})
('quasi-newton method', 'introduction to algorithms', {'weight': 0.6})
('quasi-newton method', 'thomas h. cormen', {'weight': 0.6})
('quasi-newton method', 'music information retrieval', {'weight': 0.6})
('quasi-newton method', 'beat (music)', {'weight': 0.6})
('quasi-newton method', 'longest common subsequence problem', {'weight': 0.6})
('quasi-newton method', 'convex minimization', {'weight': 0.6})
('quasi-newton method', 'successive parabolic interpolation', {'weight': 0.6})
('quasi-newton method', 'fibonacci sequence', {'weight': 0.6})
('quasi-newton method', 'maximum subarray problem', {'weight': 0.6})
('quasi-newton method', 'convex optimization', {'weight': 0.6})
('quasi-newton method', 'memoization', {'weight': 0.6})
('quasi-newton method', 'richard bellman', {'weight': 0.6})
('quasi-newton method', 'exponential growth', {'weight': 0.6})
('quasi-newton method', 'charles e. leiserson', {'weight': 0.6})
('quasi-newton method', 'charles erwin wilson', {'weight': 0.6})
('quasi-newton method', 'interval scheduling', {'weight': 0.6})
('quasi-newton method', 'chart parser', {'weight': 0.6})
('quasi-newton method', 'travelling salesman problem', {'weight': 0.6})
('quasi-newton method', 'bellman equation', {'weight': 0.6})
('scheme (programming language)', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('scheme (programming language)', 'photoshop', {'weight': 0.6})
('scheme (programming language)', 'sequence alignment', {'weight': 0.6})
('scheme (programming language)', 'flow network', {'weight': 0.6})
('scheme (programming language)', '[46]', {'weight': 0.7})
('scheme (programming language)', 'ellipsoid method', {'weight': 0.6})
('scheme (programming language)', 'chain matrix multiplication', {'weight': 0.6})
('scheme (programming language)', 'ieee', {'weight': 0.6})
('scheme (programming language)', 'backtracking', {'weight': 0.6})
('scheme (programming language)', 'nonlinear conjugate gradient method', {'weight': 0.6})
('scheme (programming language)', 'dynamic problem', {'weight': 0.6})
('scheme (programming language)', 'trust region', {'weight': 0.6})
('scheme (programming language)', 'function (mathematics)', {'weight': 0.6})
('scheme (programming language)', 'minimum spanning tree', {'weight': 0.6})
('scheme (programming language)', 'context-free grammar', {'weight': 0.6})
('scheme (programming language)', 'branch and cut', {'weight': 0.6})
('scheme (programming language)', 'state variable', {'weight': 0.6})
('scheme (programming language)', 'structure and interpretation of computer programs', {'weight': 0.7})
('scheme (programming language)', 'sxml', {'weight': 0.7})
('scheme (programming language)', 'treewidth', {'weight': 0.6})
('scheme (programming language)', 'how to design programs', {'weight': 0.7})
('scheme (programming language)', 'articles with example scheme code', {'weight': 0.5})
('scheme (programming language)', 'overlapping subproblem', {'weight': 0.6})
('scheme (programming language)', 'taylor & francis', {'weight': 0.6})
('scheme (programming language)', 'cutting-plane method', {'weight': 0.6})
('scheme (programming language)', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('scheme (programming language)', 'method of undetermined coefficients', {'weight': 0.6})
('scheme (programming language)', 'combinatorial optimization', {'weight': 0.6})
('scheme (programming language)', "newton's method in optimization", {'weight': 0.6})
('scheme (programming language)', 'mit/gnu scheme', {'weight': 0.7})
('scheme (programming language)', 'matrix chain multiplication', {'weight': 0.6})
('scheme (programming language)', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('scheme (programming language)', 'dynamic time warping', {'weight': 0.6})
('scheme (programming language)', 'dynamic programming language', {'weight': 0.6})
('scheme (programming language)', 'call-by-need', {'weight': 0.6})
('scheme (programming language)', 'big-o notation', {'weight': 0.6})
('scheme (programming language)', 'comparison of optimization software', {'weight': 0.6})
('scheme (programming language)', 'quadratic programming', {'weight': 0.6})
('scheme (programming language)', 'common lisp', {'weight': 0.6})
('scheme (programming language)', 'barrier function', {'weight': 0.6})
('scheme (programming language)', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('scheme (programming language)', 'gradient descent', {'weight': 0.6})
('scheme (programming language)', 'patricia selinger', {'weight': 0.6})
('scheme (programming language)', 'discounting', {'weight': 0.6})
('scheme (programming language)', 'ronald l. rivest', {'weight': 0.6})
('scheme (programming language)', 'iterative method', {'weight': 0.6})
('scheme (programming language)', 'limited-memory bfgs', {'weight': 0.6})
('scheme (programming language)', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('scheme (programming language)', 'longest common substring problem', {'weight': 0.6})
('scheme (programming language)', 'clifford stein', {'weight': 0.6})
('scheme (programming language)', 'computer chess', {'weight': 0.6})
('scheme (programming language)', 'linear programming', {'weight': 0.6})
('scheme (programming language)', 'bitonic tour', {'weight': 0.6})
('scheme (programming language)', 'linear search problem', {'weight': 0.6})
('scheme (programming language)', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('scheme (programming language)', 'systems analysis', {'weight': 0.6})
('scheme (programming language)', 'capital (economics)', {'weight': 0.6})
('scheme (programming language)', 'levenshtein distance', {'weight': 0.6})
('scheme (programming language)', 'nonlinear programming', {'weight': 0.6})
('scheme (programming language)', 'computational complexity of mathematical operations', {'weight': 0.6})
('scheme (programming language)', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('scheme (programming language)', 'gradient', {'weight': 0.6})
('scheme (programming language)', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('scheme (programming language)', 'bulletin of the american mathematical society', {'weight': 0.6})
('scheme (programming language)', 'u.s. english', {'weight': 0.6})
('scheme (programming language)', 'refutation table', {'weight': 0.6})
('scheme (programming language)', 'heuristic algorithm', {'weight': 0.6})
('scheme (programming language)', 'successive linear programming', {'weight': 0.6})
('scheme (programming language)', 'optimal substructure', {'weight': 0.6})
('scheme (programming language)', 'programming language', {'weight': 0.6})
('scheme (programming language)', 'mergesort', {'weight': 0.6})
('scheme (programming language)', "dijkstra's algorithm", {'weight': 0.6})
('scheme (programming language)', 'subgradient method', {'weight': 0.6})
('scheme (programming language)', 'call-by-name', {'weight': 0.6})
('scheme (programming language)', 'longest increasing subsequence problem', {'weight': 0.6})
('scheme (programming language)', 'edward prescott', {'weight': 0.6})
('scheme (programming language)', 'exponential time', {'weight': 0.6})
('scheme (programming language)', 'principle of optimality', {'weight': 0.6})
('scheme (programming language)', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('scheme (programming language)', 'mathematical game', {'weight': 0.6})
('scheme (programming language)', 'nancy stokey', {'weight': 0.6})
('scheme (programming language)', 'approximation algorithm', {'weight': 0.6})
('scheme (programming language)', 'discrete-time', {'weight': 0.6})
('scheme (programming language)', 'cyk algorithm', {'weight': 0.6})
('scheme (programming language)', 'markov decision process', {'weight': 0.6})
('scheme (programming language)', "powell's method", {'weight': 0.6})
('scheme (programming language)', 'wolfe conditions', {'weight': 0.6})
('scheme (programming language)', 'convexity in economics', {'weight': 0.6})
('scheme (programming language)', 'transposition table', {'weight': 0.6})
('scheme (programming language)', 'economics', {'weight': 0.6})
('scheme (programming language)', 'backward induction', {'weight': 0.6})
('scheme (programming language)', 'golden section search', {'weight': 0.6})
('scheme (programming language)', 'edit distance', {'weight': 0.6})
('scheme (programming language)', 'tree structure', {'weight': 0.6})
('scheme (programming language)', 'exchange algorithm', {'weight': 0.6})
('scheme (programming language)', 'dover publications', {'weight': 0.6})
('scheme (programming language)', 'seam carving', {'weight': 0.6})
('scheme (programming language)', 'recursive least squares', {'weight': 0.6})
('scheme (programming language)', 'metaheuristic', {'weight': 0.6})
('scheme (programming language)', 'quasi-newton method', {'weight': 0.6})
('scheme (programming language)', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('scheme (programming language)', 'robert e. lucas', {'weight': 0.6})
('scheme (programming language)', 'non-convexity (economics)', {'weight': 0.6})
('scheme (programming language)', 'sr1 formula', {'weight': 0.6})
('scheme (programming language)', 'mathematical reviews', {'weight': 0.6})
('scheme (programming language)', 'puzzle', {'weight': 0.6})
('scheme (programming language)', 'associative array', {'weight': 0.6})
('scheme (programming language)', 'shortest path problem', {'weight': 0.6})
('scheme (programming language)', 'dynamic algorithm', {'weight': 0.6})
('scheme (programming language)', 'augmented lagrangian method', {'weight': 0.6})
('scheme (programming language)', 'charles delisi', {'weight': 0.6})
('scheme (programming language)', 'greedy algorithm', {'weight': 0.6})
('scheme (programming language)', "karmarkar's algorithm", {'weight': 0.6})
('scheme (programming language)', 'essentials of programming languages', {'weight': 0.7})
('scheme (programming language)', 'lattice models', {'weight': 0.6})
('scheme (programming language)', 'utility', {'weight': 0.6})
('scheme (programming language)', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('scheme (programming language)', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('scheme (programming language)', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('scheme (programming language)', 'international standard book number', {'weight': 0.6})
('scheme (programming language)', 'undirected graph', {'weight': 0.6})
('scheme (programming language)', 'scheme (programming language)', {'weight': 1})
('scheme (programming language)', 'rna structure', {'weight': 0.6})
('scheme (programming language)', 'hanoi', {'weight': 0.6})
('scheme (programming language)', 'perl', {'weight': 0.6})
('scheme (programming language)', 'digital object identifier', {'weight': 0.6})
('scheme (programming language)', 'sequential quadratic programming', {'weight': 0.6})
('scheme (programming language)', "dinic's algorithm", {'weight': 0.6})
('scheme (programming language)', 'pseudo-polynomial time', {'weight': 0.6})
('scheme (programming language)', 'partition problem', {'weight': 0.6})
('scheme (programming language)', 'stochastic programming', {'weight': 0.6})
('scheme (programming language)', 'hill climbing', {'weight': 0.6})
('scheme (programming language)', 'top-down', {'weight': 0.6})
('scheme (programming language)', 'de boor algorithm', {'weight': 0.6})
('scheme (programming language)', 'computer programming portal', {'weight': 0.7})
('scheme (programming language)', 'optimization algorithm', {'weight': 0.6})
('scheme (programming language)', "kruskal's algorithm", {'weight': 0.6})
('scheme (programming language)', 'lisp in small pieces', {'weight': 0.7})
('scheme (programming language)', 'jacques philippe marie binet', {'weight': 0.6})
('scheme (programming language)', 'tabu search', {'weight': 0.6})
('scheme (programming language)', 'divide and conquer algorithm', {'weight': 0.6})
('scheme (programming language)', "johnson's algorithm", {'weight': 0.6})
('scheme (programming language)', 'evolutionary algorithm', {'weight': 0.6})
('scheme (programming language)', 'clique-width', {'weight': 0.6})
('scheme (programming language)', 'dynamic programming', {'weight': 0.6})
('scheme (programming language)', 'subroutine', {'weight': 0.6})
('scheme (programming language)', 'simulated annealing', {'weight': 0.6})
('scheme (programming language)', 'tower of hanoi', {'weight': 0.6})
('scheme (programming language)', 'branch and bound', {'weight': 0.6})
('scheme (programming language)', 'engineering', {'weight': 0.6})
('scheme (programming language)', 'matroid', {'weight': 0.6})
('scheme (programming language)', 'viterbi algorithm', {'weight': 0.6})
('scheme (programming language)', "lemke's algorithm", {'weight': 0.6})
('scheme (programming language)', 'simplex algorithm', {'weight': 0.6})
('scheme (programming language)', 'local search (optimization)', {'weight': 0.6})
('scheme (programming language)', 'hessian matrix', {'weight': 0.6})
('scheme (programming language)', 'academic programming languages', {'weight': 0.5})
('scheme (programming language)', 'ibm system r', {'weight': 0.6})
('scheme (programming language)', 'penalty method', {'weight': 0.6})
('scheme (programming language)', 'prolog', {'weight': 0.6})
('scheme (programming language)', 'time-invariant system', {'weight': 0.6})
('scheme (programming language)', 'criss-cross algorithm', {'weight': 0.6})
('scheme (programming language)', 'revised simplex algorithm', {'weight': 0.6})
('scheme (programming language)', 'stalin compiler', {'weight': 0.7})
('scheme (programming language)', 'the mathematical association of america', {'weight': 0.6})
('scheme (programming language)', 'line search', {'weight': 0.6})
('scheme (programming language)', 'j (programming language)', {'weight': 0.6})
('scheme (programming language)', 'word wrap', {'weight': 0.6})
('scheme (programming language)', 'subset sum problem', {'weight': 0.6})
('scheme (programming language)', 'integer programming', {'weight': 0.6})
('scheme (programming language)', 'nucleosome', {'weight': 0.6})
('scheme (programming language)', 'programming languages created in 1975', {'weight': 0.5})
('scheme (programming language)', 'earley algorithm', {'weight': 0.6})
('scheme (programming language)', 'referential transparency (computer science)', {'weight': 0.6})
('scheme (programming language)', 'call-with-current-continuation', {'weight': 0.7})
('scheme (programming language)', 'recursion', {'weight': 0.6})
('scheme (programming language)', 'mathematica', {'weight': 0.6})
('scheme (programming language)', 'quicksort', {'weight': 0.6})
('scheme (programming language)', 'recursion (computer science)', {'weight': 0.6})
('scheme (programming language)', 'checkerboard', {'weight': 0.6})
('scheme (programming language)', 'computer science', {'weight': 0.7})
('scheme (programming language)', 'brute-force search', {'weight': 0.6})
('scheme (programming language)', 'mathematics', {'weight': 0.6})
('scheme (programming language)', 'depth-first search', {'weight': 0.6})
('scheme (programming language)', 'top-down and bottom-up design', {'weight': 0.6})
('scheme (programming language)', 'correspondence problem', {'weight': 0.6})
('scheme (programming language)', 'transcription factor', {'weight': 0.6})
('scheme (programming language)', 'tree decomposition', {'weight': 0.6})
('scheme (programming language)', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('scheme (programming language)', 'structural alignment', {'weight': 0.6})
('scheme (programming language)', 'local convergence', {'weight': 0.6})
('scheme (programming language)', 'knapsack problem', {'weight': 0.6})
('scheme (programming language)', 'graph algorithm', {'weight': 0.6})
('scheme (programming language)', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('scheme (programming language)', 'programming languages created in the 1970s', {'weight': 0.5})
('scheme (programming language)', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('scheme (programming language)', 'hidden markov model', {'weight': 0.6})
('scheme (programming language)', 'string (computer science)', {'weight': 0.6})
('scheme (programming language)', 'bioinformatics', {'weight': 0.6})
('scheme (programming language)', 'genetics', {'weight': 0.6})
('scheme (programming language)', 'mathematical optimization', {'weight': 0.6})
('scheme (programming language)', 'artificial neural networks', {'weight': 0.6})
('scheme (programming language)', 'introduction to algorithms', {'weight': 0.6})
('scheme (programming language)', 'thomas h. cormen', {'weight': 0.6})
('scheme (programming language)', 'music information retrieval', {'weight': 0.6})
('scheme (programming language)', 'beat (music)', {'weight': 0.6})
('scheme (programming language)', 'longest common subsequence problem', {'weight': 0.6})
('scheme (programming language)', 'convex minimization', {'weight': 0.6})
('scheme (programming language)', 'successive parabolic interpolation', {'weight': 0.6})
('scheme (programming language)', 'fibonacci sequence', {'weight': 0.6})
('scheme (programming language)', 'maximum subarray problem', {'weight': 0.6})
('scheme (programming language)', 'convex optimization', {'weight': 0.6})
('scheme (programming language)', 'memoization', {'weight': 0.6})
('scheme (programming language)', 'richard bellman', {'weight': 0.6})
('scheme (programming language)', 'exponential growth', {'weight': 0.6})
('scheme (programming language)', 'charles e. leiserson', {'weight': 0.6})
('scheme (programming language)', 'charles erwin wilson', {'weight': 0.6})
('scheme (programming language)', 'interval scheduling', {'weight': 0.6})
('scheme (programming language)', 'chart parser', {'weight': 0.6})
('scheme (programming language)', 'travelling salesman problem', {'weight': 0.6})
('scheme (programming language)', 'bellman equation', {'weight': 0.6})
('puzzle', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('puzzle', 'photoshop', {'weight': 0.6})
('puzzle', 'sequence alignment', {'weight': 0.6})
('puzzle', 'flow network', {'weight': 0.6})
('puzzle', 'ellipsoid method', {'weight': 0.6})
('puzzle', 'chain matrix multiplication', {'weight': 0.6})
('puzzle', 'ieee', {'weight': 0.6})
('puzzle', 'backtracking', {'weight': 0.6})
('puzzle', 'nonlinear conjugate gradient method', {'weight': 0.6})
('puzzle', 'dynamic problem', {'weight': 0.6})
('puzzle', 'trust region', {'weight': 0.6})
('puzzle', 'function (mathematics)', {'weight': 0.6})
('puzzle', 'minimum spanning tree', {'weight': 0.6})
('puzzle', 'context-free grammar', {'weight': 0.6})
('puzzle', 'branch and cut', {'weight': 0.6})
('puzzle', 'state variable', {'weight': 0.6})
('puzzle', 'treewidth', {'weight': 0.6})
('puzzle', 'overlapping subproblem', {'weight': 0.6})
('puzzle', 'taylor & francis', {'weight': 0.6})
('puzzle', 'puzzles', {'weight': 0.5})
('puzzle', 'cutting-plane method', {'weight': 0.6})
('puzzle', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('puzzle', 'method of undetermined coefficients', {'weight': 0.6})
('puzzle', 'combinatorial optimization', {'weight': 0.6})
('puzzle', "newton's method in optimization", {'weight': 0.6})
('puzzle', 'matrix chain multiplication', {'weight': 0.6})
('puzzle', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('puzzle', 'dynamic time warping', {'weight': 0.6})
('puzzle', 'dynamic programming language', {'weight': 0.6})
('puzzle', 'call-by-need', {'weight': 0.6})
('puzzle', 'big-o notation', {'weight': 0.6})
('puzzle', 'comparison of optimization software', {'weight': 0.6})
('puzzle', 'quadratic programming', {'weight': 0.6})
('puzzle', 'common lisp', {'weight': 0.6})
('puzzle', 'barrier function', {'weight': 0.6})
('puzzle', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('puzzle', 'gradient descent', {'weight': 0.6})
('puzzle', 'patricia selinger', {'weight': 0.6})
('puzzle', 'discounting', {'weight': 0.6})
('puzzle', 'puzzle designers', {'weight': 0.5})
('puzzle', 'ronald l. rivest', {'weight': 0.6})
('puzzle', 'iterative method', {'weight': 0.6})
('puzzle', 'limited-memory bfgs', {'weight': 0.6})
('puzzle', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('puzzle', 'longest common substring problem', {'weight': 0.6})
('puzzle', 'clifford stein', {'weight': 0.6})
('puzzle', 'problem solving', {'weight': 0.5})
('puzzle', 'computer chess', {'weight': 0.6})
('puzzle', 'linear programming', {'weight': 0.6})
('puzzle', 'bitonic tour', {'weight': 0.6})
('puzzle', 'linear search problem', {'weight': 0.6})
('puzzle', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('puzzle', 'systems analysis', {'weight': 0.6})
('puzzle', 'capital (economics)', {'weight': 0.6})
('puzzle', 'levenshtein distance', {'weight': 0.6})
('puzzle', 'nonlinear programming', {'weight': 0.6})
('puzzle', 'puzzle jewelry', {'weight': 0.7})
('puzzle', 'computational complexity of mathematical operations', {'weight': 0.6})
('puzzle', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('puzzle', 'gradient', {'weight': 0.6})
('puzzle', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('puzzle', 'bulletin of the american mathematical society', {'weight': 0.6})
('puzzle', 'lattice models', {'weight': 0.6})
('puzzle', 'refutation table', {'weight': 0.6})
('puzzle', 'heuristic algorithm', {'weight': 0.6})
('puzzle', 'successive linear programming', {'weight': 0.6})
('puzzle', 'optimal substructure', {'weight': 0.6})
('puzzle', 'puzzle books', {'weight': 0.5})
('puzzle', 'programming language', {'weight': 0.6})
('puzzle', 'mergesort', {'weight': 0.6})
('puzzle', "dijkstra's algorithm", {'weight': 0.6})
('puzzle', 'subgradient method', {'weight': 0.6})
('puzzle', 'call-by-name', {'weight': 0.6})
('puzzle', 'longest increasing subsequence problem', {'weight': 0.6})
('puzzle', 'edward prescott', {'weight': 0.6})
('puzzle', 'exponential time', {'weight': 0.6})
('puzzle', 'principle of optimality', {'weight': 0.6})
('puzzle', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('puzzle', 'mathematical game', {'weight': 0.6})
('puzzle', 'nancy stokey', {'weight': 0.6})
('puzzle', 'approximation algorithm', {'weight': 0.6})
('puzzle', 'discrete-time', {'weight': 0.6})
('puzzle', 'cyk algorithm', {'weight': 0.6})
('puzzle', 'markov decision process', {'weight': 0.6})
('puzzle', "powell's method", {'weight': 0.6})
('puzzle', 'wolfe conditions', {'weight': 0.6})
('puzzle', 'convexity in economics', {'weight': 0.6})
('puzzle', 'transposition table', {'weight': 0.6})
('puzzle', 'economics', {'weight': 0.6})
('puzzle', 'backward induction', {'weight': 0.6})
('puzzle', 'golden section search', {'weight': 0.6})
('puzzle', 'edit distance', {'weight': 0.6})
('puzzle', 'tree structure', {'weight': 0.6})
('puzzle', 'exchange algorithm', {'weight': 0.6})
('puzzle', 'dover publications', {'weight': 0.6})
('puzzle', 'seam carving', {'weight': 0.6})
('puzzle', 'recursive least squares', {'weight': 0.6})
('puzzle', 'metaheuristic', {'weight': 0.6})
('puzzle', 'quasi-newton method', {'weight': 0.6})
('puzzle', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('puzzle', 'robert e. lucas', {'weight': 0.6})
('puzzle', 'non-convexity (economics)', {'weight': 0.6})
('puzzle', 'riddle', {'weight': 0.7})
('puzzle', 'sr1 formula', {'weight': 0.6})
('puzzle', 'mathematical reviews', {'weight': 0.6})
('puzzle', 'puzzle', {'weight': 1})
('puzzle', 'associative array', {'weight': 0.6})
('puzzle', 'shortest path problem', {'weight': 0.6})
('puzzle', 'economic puzzles', {'weight': 0.5})
('puzzle', 'dynamic algorithm', {'weight': 0.6})
('puzzle', 'augmented lagrangian method', {'weight': 0.6})
('puzzle', 'puzzle video games', {'weight': 0.5})
('puzzle', 'greedy algorithm', {'weight': 0.6})
('puzzle', "karmarkar's algorithm", {'weight': 0.6})
('puzzle', 'u.s. english', {'weight': 0.6})
('puzzle', 'utility', {'weight': 0.6})
('puzzle', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('puzzle', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('puzzle', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('puzzle', 'international standard book number', {'weight': 0.6})
('puzzle', 'undirected graph', {'weight': 0.6})
('puzzle', 'scheme (programming language)', {'weight': 0.6})
('puzzle', 'rna structure', {'weight': 0.6})
('puzzle', 'hanoi', {'weight': 0.6})
('puzzle', 'perl', {'weight': 0.6})
('puzzle', 'digital object identifier', {'weight': 0.6})
('puzzle', 'sequential quadratic programming', {'weight': 0.6})
('puzzle', "dinic's algorithm", {'weight': 0.6})
('puzzle', 'pseudo-polynomial time', {'weight': 0.6})
('puzzle', 'partition problem', {'weight': 0.6})
('puzzle', 'stochastic programming', {'weight': 0.6})
('puzzle', 'hill climbing', {'weight': 0.6})
('puzzle', 'top-down', {'weight': 0.6})
('puzzle', 'de boor algorithm', {'weight': 0.6})
('puzzle', 'optimization algorithm', {'weight': 0.6})
('puzzle', "kruskal's algorithm", {'weight': 0.6})
('puzzle', 'jacques philippe marie binet', {'weight': 0.6})
('puzzle', 'tabu search', {'weight': 0.6})
('puzzle', 'divide and conquer algorithm', {'weight': 0.6})
('puzzle', "johnson's algorithm", {'weight': 0.6})
('puzzle', 'evolutionary algorithm', {'weight': 0.6})
('puzzle', 'clique-width', {'weight': 0.6})
('puzzle', 'dynamic programming', {'weight': 0.6})
('puzzle', 'subroutine', {'weight': 0.6})
('puzzle', 'simulated annealing', {'weight': 0.6})
('puzzle', 'tower of hanoi', {'weight': 0.6})
('puzzle', 'branch and bound', {'weight': 0.6})
('puzzle', 'engineering', {'weight': 0.6})
('puzzle', 'matroid', {'weight': 0.6})
('puzzle', 'viterbi algorithm', {'weight': 0.6})
('puzzle', "lemke's algorithm", {'weight': 0.6})
('puzzle', 'list of nikoli puzzle types', {'weight': 0.7})
('puzzle', 'simplex algorithm', {'weight': 0.6})
('puzzle', 'local search (optimization)', {'weight': 0.6})
('puzzle', 'hessian matrix', {'weight': 0.6})
('puzzle', 'ibm system r', {'weight': 0.6})
('puzzle', 'penalty method', {'weight': 0.6})
('puzzle', 'prolog', {'weight': 0.6})
('puzzle', 'time-invariant system', {'weight': 0.6})
('puzzle', 'criss-cross algorithm', {'weight': 0.6})
('puzzle', 'revised simplex algorithm', {'weight': 0.6})
('puzzle', 'the mathematical association of america', {'weight': 0.6})
('puzzle', 'line search', {'weight': 0.6})
('puzzle', 'j (programming language)', {'weight': 0.6})
('puzzle', 'word wrap', {'weight': 0.6})
('puzzle', 'subset sum problem', {'weight': 0.6})
('puzzle', 'integer programming', {'weight': 0.6})
('puzzle', 'nucleosome', {'weight': 0.6})
('puzzle', 'earley algorithm', {'weight': 0.6})
('puzzle', 'referential transparency (computer science)', {'weight': 0.6})
('puzzle', 'recursion', {'weight': 0.6})
('puzzle', 'mathematica', {'weight': 0.6})
('puzzle', 'quicksort', {'weight': 0.6})
('puzzle', 'recursion (computer science)', {'weight': 0.6})
('puzzle', 'checkerboard', {'weight': 0.6})
('puzzle', 'computer science', {'weight': 0.6})
('puzzle', 'brute-force search', {'weight': 0.6})
('puzzle', 'mathematics', {'weight': 0.6})
('puzzle', 'depth-first search', {'weight': 0.6})
('puzzle', 'top-down and bottom-up design', {'weight': 0.6})
('puzzle', 'correspondence problem', {'weight': 0.6})
('puzzle', 'transcription factor', {'weight': 0.6})
('puzzle', 'tree decomposition', {'weight': 0.6})
('puzzle', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('puzzle', 'structural alignment', {'weight': 0.6})
('puzzle', 'local convergence', {'weight': 0.6})
('puzzle', 'charles delisi', {'weight': 0.6})
('puzzle', 'knapsack problem', {'weight': 0.6})
('puzzle', 'graph algorithm', {'weight': 0.6})
('puzzle', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('puzzle', 'three cups problem', {'weight': 0.7})
('puzzle', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('puzzle', 'hidden markov model', {'weight': 0.6})
('puzzle', 'string (computer science)', {'weight': 0.6})
('puzzle', 'bioinformatics', {'weight': 0.6})
('puzzle', 'genetics', {'weight': 0.6})
('puzzle', 'mathematical optimization', {'weight': 0.6})
('puzzle', 'artificial neural networks', {'weight': 0.6})
('puzzle', 'introduction to algorithms', {'weight': 0.6})
('puzzle', 'thomas h. cormen', {'weight': 0.6})
('puzzle', 'music information retrieval', {'weight': 0.6})
('puzzle', 'beat (music)', {'weight': 0.6})
('puzzle', 'longest common subsequence problem', {'weight': 0.6})
('puzzle', 'convex minimization', {'weight': 0.6})
('puzzle', 'successive parabolic interpolation', {'weight': 0.6})
('puzzle', 'fibonacci sequence', {'weight': 0.6})
('puzzle', 'maximum subarray problem', {'weight': 0.6})
('puzzle', 'convex optimization', {'weight': 0.6})
('puzzle', 'memoization', {'weight': 0.6})
('puzzle', 'richard bellman', {'weight': 0.6})
('puzzle', 'exponential growth', {'weight': 0.6})
('puzzle', 'charles e. leiserson', {'weight': 0.6})
('puzzle', 'charles erwin wilson', {'weight': 0.6})
('puzzle', 'interval scheduling', {'weight': 0.6})
('puzzle', 'chart parser', {'weight': 0.6})
('puzzle', 'travelling salesman problem', {'weight': 0.6})
('puzzle', 'bellman equation', {'weight': 0.6})
('puzzle', 'list of impossible puzzles', {'weight': 0.7})
('charles delisi', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('charles delisi', 'photoshop', {'weight': 0.6})
('charles delisi', 'sequence alignment', {'weight': 0.6})
('charles delisi', 'flow network', {'weight': 0.6})
('charles delisi', 'ellipsoid method', {'weight': 0.6})
('charles delisi', 'chain matrix multiplication', {'weight': 0.6})
('charles delisi', 'ieee', {'weight': 0.6})
('charles delisi', 'backtracking', {'weight': 0.6})
('charles delisi', 'nonlinear conjugate gradient method', {'weight': 0.6})
('charles delisi', 'dynamic problem', {'weight': 0.6})
('charles delisi', 'trust region', {'weight': 0.6})
('charles delisi', 'function (mathematics)', {'weight': 0.6})
('charles delisi', 'minimum spanning tree', {'weight': 0.6})
('charles delisi', 'context-free grammar', {'weight': 0.6})
('charles delisi', 'branch and cut', {'weight': 0.6})
('charles delisi', 'state variable', {'weight': 0.6})
('charles delisi', 'treewidth', {'weight': 0.6})
('charles delisi', 'overlapping subproblem', {'weight': 0.6})
('charles delisi', 'taylor & francis', {'weight': 0.6})
('charles delisi', 'cutting-plane method', {'weight': 0.6})
('charles delisi', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('charles delisi', 'method of undetermined coefficients', {'weight': 0.6})
('charles delisi', 'combinatorial optimization', {'weight': 0.6})
('charles delisi', "newton's method in optimization", {'weight': 0.6})
('charles delisi', 'matrix chain multiplication', {'weight': 0.6})
('charles delisi', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('charles delisi', 'dynamic time warping', {'weight': 0.6})
('charles delisi', 'dynamic programming language', {'weight': 0.6})
('charles delisi', 'call-by-need', {'weight': 0.6})
('charles delisi', 'big-o notation', {'weight': 0.6})
('charles delisi', 'comparison of optimization software', {'weight': 0.6})
('charles delisi', 'quadratic programming', {'weight': 0.6})
('charles delisi', 'common lisp', {'weight': 0.6})
('charles delisi', 'barrier function', {'weight': 0.6})
('charles delisi', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('charles delisi', 'gradient descent', {'weight': 0.6})
('charles delisi', 'patricia selinger', {'weight': 0.6})
('charles delisi', 'discounting', {'weight': 0.6})
('charles delisi', 'ronald l. rivest', {'weight': 0.6})
('charles delisi', 'iterative method', {'weight': 0.6})
('charles delisi', 'limited-memory bfgs', {'weight': 0.6})
('charles delisi', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('charles delisi', 'longest common substring problem', {'weight': 0.6})
('charles delisi', 'clifford stein', {'weight': 0.6})
('charles delisi', 'computer chess', {'weight': 0.6})
('charles delisi', 'linear programming', {'weight': 0.6})
('charles delisi', 'bitonic tour', {'weight': 0.6})
('charles delisi', 'linear search problem', {'weight': 0.6})
('charles delisi', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('charles delisi', 'systems analysis', {'weight': 0.6})
('charles delisi', 'capital (economics)', {'weight': 0.6})
('charles delisi', 'levenshtein distance', {'weight': 0.6})
('charles delisi', 'nonlinear programming', {'weight': 0.6})
('charles delisi', 'computational complexity of mathematical operations', {'weight': 0.6})
('charles delisi', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('charles delisi', 'gradient', {'weight': 0.6})
('charles delisi', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('charles delisi', 'bulletin of the american mathematical society', {'weight': 0.6})
('charles delisi', 'u.s. english', {'weight': 0.6})
('charles delisi', 'refutation table', {'weight': 0.6})
('charles delisi', 'heuristic algorithm', {'weight': 0.6})
('charles delisi', 'successive linear programming', {'weight': 0.6})
('charles delisi', 'optimal substructure', {'weight': 0.6})
('charles delisi', 'programming language', {'weight': 0.6})
('charles delisi', 'mergesort', {'weight': 0.6})
('charles delisi', "dijkstra's algorithm", {'weight': 0.6})
('charles delisi', 'subgradient method', {'weight': 0.6})
('charles delisi', 'call-by-name', {'weight': 0.6})
('charles delisi', 'longest increasing subsequence problem', {'weight': 0.6})
('charles delisi', 'edward prescott', {'weight': 0.6})
('charles delisi', 'exponential time', {'weight': 0.6})
('charles delisi', 'principle of optimality', {'weight': 0.6})
('charles delisi', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('charles delisi', 'mathematical game', {'weight': 0.6})
('charles delisi', 'nancy stokey', {'weight': 0.6})
('charles delisi', 'approximation algorithm', {'weight': 0.6})
('charles delisi', 'discrete-time', {'weight': 0.6})
('charles delisi', 'cyk algorithm', {'weight': 0.6})
('charles delisi', 'markov decision process', {'weight': 0.6})
('charles delisi', "powell's method", {'weight': 0.6})
('charles delisi', 'wolfe conditions', {'weight': 0.6})
('charles delisi', 'convexity in economics', {'weight': 0.6})
('charles delisi', 'transposition table', {'weight': 0.6})
('charles delisi', 'economics', {'weight': 0.6})
('charles delisi', 'backward induction', {'weight': 0.6})
('charles delisi', 'golden section search', {'weight': 0.6})
('charles delisi', 'edit distance', {'weight': 0.6})
('charles delisi', 'tree structure', {'weight': 0.6})
('charles delisi', 'exchange algorithm', {'weight': 0.6})
('charles delisi', 'dover publications', {'weight': 0.6})
('charles delisi', 'seam carving', {'weight': 0.6})
('charles delisi', 'recursive least squares', {'weight': 0.6})
('charles delisi', 'metaheuristic', {'weight': 0.6})
('charles delisi', 'quasi-newton method', {'weight': 0.6})
('charles delisi', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('charles delisi', 'robert e. lucas', {'weight': 0.6})
('charles delisi', 'non-convexity (economics)', {'weight': 0.6})
('charles delisi', 'sr1 formula', {'weight': 0.6})
('charles delisi', 'mathematical reviews', {'weight': 0.6})
('charles delisi', 'puzzle', {'weight': 0.6})
('charles delisi', 'associative array', {'weight': 0.6})
('charles delisi', 'shortest path problem', {'weight': 0.6})
('charles delisi', 'dynamic algorithm', {'weight': 0.6})
('charles delisi', 'augmented lagrangian method', {'weight': 0.6})
('charles delisi', 'charles delisi', {'weight': 1})
('charles delisi', 'greedy algorithm', {'weight': 0.6})
('charles delisi', "karmarkar's algorithm", {'weight': 0.6})
('charles delisi', 'lattice models', {'weight': 0.6})
('charles delisi', 'utility', {'weight': 0.6})
('charles delisi', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('charles delisi', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('charles delisi', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('charles delisi', 'international standard book number', {'weight': 0.6})
('charles delisi', 'undirected graph', {'weight': 0.6})
('charles delisi', 'scheme (programming language)', {'weight': 0.6})
('charles delisi', 'rna structure', {'weight': 0.6})
('charles delisi', 'hanoi', {'weight': 0.6})
('charles delisi', 'perl', {'weight': 0.6})
('charles delisi', 'digital object identifier', {'weight': 0.6})
('charles delisi', 'sequential quadratic programming', {'weight': 0.6})
('charles delisi', "dinic's algorithm", {'weight': 0.6})
('charles delisi', 'pseudo-polynomial time', {'weight': 0.6})
('charles delisi', 'partition problem', {'weight': 0.6})
('charles delisi', 'stochastic programming', {'weight': 0.6})
('charles delisi', 'hill climbing', {'weight': 0.6})
('charles delisi', 'top-down', {'weight': 0.6})
('charles delisi', 'de boor algorithm', {'weight': 0.6})
('charles delisi', 'optimization algorithm', {'weight': 0.6})
('charles delisi', "kruskal's algorithm", {'weight': 0.6})
('charles delisi', 'jacques philippe marie binet', {'weight': 0.6})
('charles delisi', 'tabu search', {'weight': 0.6})
('charles delisi', 'divide and conquer algorithm', {'weight': 0.6})
('charles delisi', "johnson's algorithm", {'weight': 0.6})
('charles delisi', 'evolutionary algorithm', {'weight': 0.6})
('charles delisi', 'clique-width', {'weight': 0.6})
('charles delisi', 'dynamic programming', {'weight': 0.6})
('charles delisi', 'subroutine', {'weight': 0.6})
('charles delisi', 'simulated annealing', {'weight': 0.6})
('charles delisi', 'tower of hanoi', {'weight': 0.6})
('charles delisi', 'branch and bound', {'weight': 0.6})
('charles delisi', 'engineering', {'weight': 0.6})
('charles delisi', 'matroid', {'weight': 0.6})
('charles delisi', 'viterbi algorithm', {'weight': 0.6})
('charles delisi', "lemke's algorithm", {'weight': 0.6})
('charles delisi', 'simplex algorithm', {'weight': 0.6})
('charles delisi', 'local search (optimization)', {'weight': 0.6})
('charles delisi', 'hessian matrix', {'weight': 0.6})
('charles delisi', 'ibm system r', {'weight': 0.6})
('charles delisi', 'penalty method', {'weight': 0.6})
('charles delisi', 'prolog', {'weight': 0.6})
('charles delisi', 'time-invariant system', {'weight': 0.6})
('charles delisi', 'criss-cross algorithm', {'weight': 0.6})
('charles delisi', 'revised simplex algorithm', {'weight': 0.6})
('charles delisi', 'the mathematical association of america', {'weight': 0.6})
('charles delisi', 'line search', {'weight': 0.6})
('charles delisi', 'j (programming language)', {'weight': 0.6})
('charles delisi', 'word wrap', {'weight': 0.6})
('charles delisi', 'subset sum problem', {'weight': 0.6})
('charles delisi', 'integer programming', {'weight': 0.6})
('charles delisi', 'nucleosome', {'weight': 0.6})
('charles delisi', 'earley algorithm', {'weight': 0.6})
('charles delisi', 'referential transparency (computer science)', {'weight': 0.6})
('charles delisi', 'recursion', {'weight': 0.6})
('charles delisi', 'mathematica', {'weight': 0.6})
('charles delisi', 'quicksort', {'weight': 0.6})
('charles delisi', 'recursion (computer science)', {'weight': 0.6})
('charles delisi', 'checkerboard', {'weight': 0.6})
('charles delisi', 'computer science', {'weight': 0.6})
('charles delisi', 'brute-force search', {'weight': 0.6})
('charles delisi', 'mathematics', {'weight': 0.6})
('charles delisi', 'depth-first search', {'weight': 0.6})
('charles delisi', 'top-down and bottom-up design', {'weight': 0.6})
('charles delisi', 'correspondence problem', {'weight': 0.6})
('charles delisi', 'transcription factor', {'weight': 0.6})
('charles delisi', 'tree decomposition', {'weight': 0.6})
('charles delisi', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('charles delisi', 'structural alignment', {'weight': 0.6})
('charles delisi', 'local convergence', {'weight': 0.6})
('charles delisi', 'knapsack problem', {'weight': 0.6})
('charles delisi', 'graph algorithm', {'weight': 0.6})
('charles delisi', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('charles delisi', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('charles delisi', 'hidden markov model', {'weight': 0.6})
('charles delisi', 'string (computer science)', {'weight': 0.6})
('charles delisi', 'bioinformatics', {'weight': 0.6})
('charles delisi', 'genetics', {'weight': 0.6})
('charles delisi', 'mathematical optimization', {'weight': 0.6})
('charles delisi', 'artificial neural networks', {'weight': 0.6})
('charles delisi', 'introduction to algorithms', {'weight': 0.6})
('charles delisi', 'thomas h. cormen', {'weight': 0.6})
('charles delisi', 'music information retrieval', {'weight': 0.6})
('charles delisi', 'beat (music)', {'weight': 0.6})
('charles delisi', 'longest common subsequence problem', {'weight': 0.6})
('charles delisi', 'convex minimization', {'weight': 0.6})
('charles delisi', 'successive parabolic interpolation', {'weight': 0.6})
('charles delisi', 'fibonacci sequence', {'weight': 0.6})
('charles delisi', 'maximum subarray problem', {'weight': 0.6})
('charles delisi', 'convex optimization', {'weight': 0.6})
('charles delisi', 'memoization', {'weight': 0.6})
('charles delisi', 'richard bellman', {'weight': 0.6})
('charles delisi', 'exponential growth', {'weight': 0.6})
('charles delisi', 'charles e. leiserson', {'weight': 0.6})
('charles delisi', 'charles erwin wilson', {'weight': 0.6})
('charles delisi', 'interval scheduling', {'weight': 0.6})
('charles delisi', 'chart parser', {'weight': 0.6})
('charles delisi', 'travelling salesman problem', {'weight': 0.6})
('charles delisi', 'bellman equation', {'weight': 0.6})
('utility', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('utility', 'photoshop', {'weight': 0.6})
('utility', 'sequence alignment', {'weight': 0.6})
('utility', 'flow network', {'weight': 0.6})
('utility', 'ellipsoid method', {'weight': 0.6})
('utility', 'chain matrix multiplication', {'weight': 0.6})
('utility', 'ieee', {'weight': 0.6})
('utility', 'backtracking', {'weight': 0.6})
('utility', 'nonlinear conjugate gradient method', {'weight': 0.6})
('utility', 'dynamic problem', {'weight': 0.6})
('utility', 'trust region', {'weight': 0.6})
('utility', 'function (mathematics)', {'weight': 0.6})
('utility', 'minimum spanning tree', {'weight': 0.6})
('utility', 'context-free grammar', {'weight': 0.6})
('utility', 'branch and cut', {'weight': 0.6})
('utility', 'state variable', {'weight': 0.6})
('utility', 'associative array', {'weight': 0.6})
('utility', 'treewidth', {'weight': 0.6})
('utility', 'overlapping subproblem', {'weight': 0.6})
('utility', 'taylor & francis', {'weight': 0.6})
('utility', 'cutting-plane method', {'weight': 0.6})
('utility', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('utility', 'method of undetermined coefficients', {'weight': 0.6})
('utility', 'combinatorial optimization', {'weight': 0.6})
('utility', "newton's method in optimization", {'weight': 0.6})
('utility', 'matrix chain multiplication', {'weight': 0.6})
('utility', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('utility', 'dynamic time warping', {'weight': 0.6})
('utility', 'dynamic programming language', {'weight': 0.6})
('utility', 'call-by-need', {'weight': 0.6})
('utility', 'big-o notation', {'weight': 0.6})
('utility', 'comparison of optimization software', {'weight': 0.6})
('utility', 'quadratic programming', {'weight': 0.6})
('utility', 'common lisp', {'weight': 0.6})
('utility', 'barrier function', {'weight': 0.6})
('utility', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('utility', 'gradient descent', {'weight': 0.6})
('utility', 'patricia selinger', {'weight': 0.6})
('utility', 'discounting', {'weight': 0.6})
('utility', 'ronald l. rivest', {'weight': 0.6})
('utility', 'iterative method', {'weight': 0.6})
('utility', 'limited-memory bfgs', {'weight': 0.6})
('utility', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('utility', 'longest common substring problem', {'weight': 0.6})
('utility', 'clifford stein', {'weight': 0.6})
('utility', 'computer chess', {'weight': 0.6})
('utility', 'linear programming', {'weight': 0.6})
('utility', 'bitonic tour', {'weight': 0.6})
('utility', 'linear search problem', {'weight': 0.6})
('utility', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('utility', 'systems analysis', {'weight': 0.6})
('utility', 'capital (economics)', {'weight': 0.6})
('utility', 'marginal utility', {'weight': 0.7})
('utility', 'levenshtein distance', {'weight': 0.6})
('utility', 'nonlinear programming', {'weight': 0.6})
('utility', 'computational complexity of mathematical operations', {'weight': 0.6})
('utility', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('utility', 'gradient', {'weight': 0.6})
('utility', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('utility', 'bulletin of the american mathematical society', {'weight': 0.6})
('utility', 'u.s. english', {'weight': 0.6})
('utility', 'refutation table', {'weight': 0.6})
('utility', 'heuristic algorithm', {'weight': 0.6})
('utility', 'successive linear programming', {'weight': 0.6})
('utility', 'utility', {'weight': 1})
('utility', 'programming language', {'weight': 0.6})
('utility', 'mergesort', {'weight': 0.6})
('utility', "dijkstra's algorithm", {'weight': 0.6})
('utility', 'subgradient method', {'weight': 0.6})
('utility', 'call-by-name', {'weight': 0.6})
('utility', 'longest increasing subsequence problem', {'weight': 0.6})
('utility', 'edward prescott', {'weight': 0.6})
('utility', 'exponential time', {'weight': 0.6})
('utility', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('utility', 'principle of optimality', {'weight': 0.6})
('utility', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('utility', 'mathematical game', {'weight': 0.6})
('utility', 'nancy stokey', {'weight': 0.6})
('utility', 'approximation algorithm', {'weight': 0.6})
('utility', 'discrete-time', {'weight': 0.6})
('utility', 'cyk algorithm', {'weight': 0.6})
('utility', 'markov decision process', {'weight': 0.6})
('utility', "powell's method", {'weight': 0.6})
('utility', 'wolfe conditions', {'weight': 0.6})
('utility', 'convexity in economics', {'weight': 0.6})
('utility', 'transposition table', {'weight': 0.6})
('utility', 'economics', {'weight': 0.6})
('utility', 'backward induction', {'weight': 0.6})
('utility', 'golden section search', {'weight': 0.6})
('utility', 'edit distance', {'weight': 0.6})
('utility', 'tree structure', {'weight': 0.6})
('utility', 'exchange algorithm', {'weight': 0.6})
('utility', 'dover publications', {'weight': 0.6})
('utility', 'seam carving', {'weight': 0.6})
('utility', 'recursive least squares', {'weight': 0.6})
('utility', 'metaheuristic', {'weight': 0.6})
('utility', 'quasi-newton method', {'weight': 0.6})
('utility', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('utility', 'robert e. lucas', {'weight': 0.6})
('utility', 'non-convexity (economics)', {'weight': 0.6})
('utility', 'sr1 formula', {'weight': 0.6})
('utility', 'mathematical reviews', {'weight': 0.6})
('utility', 'puzzle', {'weight': 0.6})
('utility', 'ethical principles', {'weight': 0.5})
('utility', 'shortest path problem', {'weight': 0.6})
('utility', 'dynamic algorithm', {'weight': 0.6})
('utility', 'augmented lagrangian method', {'weight': 0.6})
('utility', 'charles delisi', {'weight': 0.6})
('utility', 'greedy algorithm', {'weight': 0.6})
('utility', "karmarkar's algorithm", {'weight': 0.6})
('utility', 'lattice models', {'weight': 0.6})
('utility', 'optimal substructure', {'weight': 0.6})
('utility', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('utility', 'decision theory', {'weight': 0.5})
('utility', 'law of demand', {'weight': 0.7})
('utility', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('utility', 'international standard book number', {'weight': 0.6})
('utility', 'undirected graph', {'weight': 0.6})
('utility', 'scheme (programming language)', {'weight': 0.6})
('utility', 'rna structure', {'weight': 0.6})
('utility', 'hanoi', {'weight': 0.6})
('utility', 'perl', {'weight': 0.6})
('utility', 'digital object identifier', {'weight': 0.6})
('utility', 'sequential quadratic programming', {'weight': 0.6})
('utility', "dinic's algorithm", {'weight': 0.6})
('utility', 'pseudo-polynomial time', {'weight': 0.6})
('utility', 'partition problem', {'weight': 0.6})
('utility', 'stochastic programming', {'weight': 0.6})
('utility', 'hill climbing', {'weight': 0.6})
('utility', 'top-down', {'weight': 0.6})
('utility', 'de boor algorithm', {'weight': 0.6})
('utility', 'optimization algorithm', {'weight': 0.6})
('utility', "kruskal's algorithm", {'weight': 0.6})
('utility', 'jacques philippe marie binet', {'weight': 0.6})
('utility', 'tabu search', {'weight': 0.6})
('utility', 'divide and conquer algorithm', {'weight': 0.6})
('utility', "johnson's algorithm", {'weight': 0.6})
('utility', 'evolutionary algorithm', {'weight': 0.6})
('utility', 'clique-width', {'weight': 0.6})
('utility', 'dynamic programming', {'weight': 0.6})
('utility', 'subroutine', {'weight': 0.6})
('utility', 'simulated annealing', {'weight': 0.6})
('utility', 'tower of hanoi', {'weight': 0.6})
('utility', 'branch and bound', {'weight': 0.6})
('utility', 'engineering', {'weight': 0.6})
('utility', 'matroid', {'weight': 0.6})
('utility', 'viterbi algorithm', {'weight': 0.6})
('utility', "lemke's algorithm", {'weight': 0.6})
('utility', 'simplex algorithm', {'weight': 0.6})
('utility', 'local search (optimization)', {'weight': 0.6})
('utility', 'hessian matrix', {'weight': 0.6})
('utility', 'demand curve', {'weight': 0.7})
('utility', 'ibm system r', {'weight': 0.6})
('utility', 'penalty method', {'weight': 0.6})
('utility', 'prolog', {'weight': 0.6})
('utility', 'time-invariant system', {'weight': 0.6})
('utility', 'criss-cross algorithm', {'weight': 0.6})
('utility', 'revised simplex algorithm', {'weight': 0.6})
('utility', 'indifference curve', {'weight': 0.7})
('utility', 'the mathematical association of america', {'weight': 0.6})
('utility', 'ordinal utility', {'weight': 0.7})
('utility', 'line search', {'weight': 0.6})
('utility', 'j (programming language)', {'weight': 0.6})
('utility', 'word wrap', {'weight': 0.6})
('utility', 'subset sum problem', {'weight': 0.6})
('utility', 'integer programming', {'weight': 0.6})
('utility', 'nucleosome', {'weight': 0.6})
('utility', 'earley algorithm', {'weight': 0.6})
('utility', 'referential transparency (computer science)', {'weight': 0.6})
('utility', 'recursion', {'weight': 0.6})
('utility', 'mathematica', {'weight': 0.6})
('utility', 'quicksort', {'weight': 0.6})
('utility', 'recursion (computer science)', {'weight': 0.6})
('utility', 'checkerboard', {'weight': 0.6})
('utility', 'computer science', {'weight': 0.6})
('utility', 'brute-force search', {'weight': 0.6})
('utility', 'mathematics', {'weight': 0.6})
('utility', 'depth-first search', {'weight': 0.6})
('utility', 'top-down and bottom-up design', {'weight': 0.6})
('utility', 'correspondence problem', {'weight': 0.6})
('utility', 'transcription factor', {'weight': 0.6})
('utility', 'tree decomposition', {'weight': 0.6})
('utility', 'cardinal utility', {'weight': 0.7})
('utility', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('utility', 'structural alignment', {'weight': 0.6})
('utility', 'local convergence', {'weight': 0.6})
('utility', 'knapsack problem', {'weight': 0.6})
('utility', 'graph algorithm', {'weight': 0.6})
('utility', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('utility', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('utility', 'hidden markov model', {'weight': 0.6})
('utility', 'string (computer science)', {'weight': 0.6})
('utility', 'bioinformatics', {'weight': 0.6})
('utility', 'genetics', {'weight': 0.6})
('utility', 'mathematical optimization', {'weight': 0.6})
('utility', 'artificial neural networks', {'weight': 0.6})
('utility', 'introduction to algorithms', {'weight': 0.6})
('utility', 'thomas h. cormen', {'weight': 0.6})
('utility', 'music information retrieval', {'weight': 0.6})
('utility', 'beat (music)', {'weight': 0.6})
('utility', 'longest common subsequence problem', {'weight': 0.6})
('utility', 'convex minimization', {'weight': 0.6})
('utility', 'successive parabolic interpolation', {'weight': 0.6})
('utility', 'fibonacci sequence', {'weight': 0.6})
('utility', 'maximum subarray problem', {'weight': 0.6})
('utility', 'convex optimization', {'weight': 0.6})
('utility', 'memoization', {'weight': 0.6})
('utility', 'richard bellman', {'weight': 0.6})
('utility', 'exponential growth', {'weight': 0.6})
('utility', 'charles e. leiserson', {'weight': 0.6})
('utility', 'charles erwin wilson', {'weight': 0.6})
('utility', 'interval scheduling', {'weight': 0.6})
('utility', 'economics of uncertainty', {'weight': 0.5})
('utility', 'chart parser', {'weight': 0.6})
('utility', 'travelling salesman problem', {'weight': 0.6})
('utility', 'bellman equation', {'weight': 0.6})
("dinic's algorithm", 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
("dinic's algorithm", 'photoshop', {'weight': 0.6})
("dinic's algorithm", 'sequence alignment', {'weight': 0.6})
("dinic's algorithm", 'flow network', {'weight': 0.6})
("dinic's algorithm", 'ellipsoid method', {'weight': 0.6})
("dinic's algorithm", 'chain matrix multiplication', {'weight': 0.6})
("dinic's algorithm", 'ieee', {'weight': 0.6})
("dinic's algorithm", 'backtracking', {'weight': 0.6})
("dinic's algorithm", 'nonlinear conjugate gradient method', {'weight': 0.6})
("dinic's algorithm", 'dynamic problem', {'weight': 0.6})
("dinic's algorithm", 'trust region', {'weight': 0.6})
("dinic's algorithm", 'function (mathematics)', {'weight': 0.6})
("dinic's algorithm", 'minimum spanning tree', {'weight': 0.6})
("dinic's algorithm", 'context-free grammar', {'weight': 0.6})
("dinic's algorithm", 'branch and cut', {'weight': 0.6})
("dinic's algorithm", 'state variable', {'weight': 0.6})
("dinic's algorithm", 'treewidth', {'weight': 0.6})
("dinic's algorithm", 'overlapping subproblem', {'weight': 0.6})
("dinic's algorithm", 'taylor & francis', {'weight': 0.6})
("dinic's algorithm", 'cutting-plane method', {'weight': 0.6})
("dinic's algorithm", 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
("dinic's algorithm", 'method of undetermined coefficients', {'weight': 0.6})
("dinic's algorithm", 'combinatorial optimization', {'weight': 0.6})
("dinic's algorithm", "newton's method in optimization", {'weight': 0.6})
("dinic's algorithm", 'matrix chain multiplication', {'weight': 0.6})
("dinic's algorithm", 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
("dinic's algorithm", 'dynamic time warping', {'weight': 0.6})
("dinic's algorithm", 'dynamic programming language', {'weight': 0.6})
("dinic's algorithm", 'call-by-need', {'weight': 0.6})
("dinic's algorithm", 'big-o notation', {'weight': 0.6})
("dinic's algorithm", 'graph algorithms', {'weight': 0.5})
("dinic's algorithm", 'comparison of optimization software', {'weight': 0.6})
("dinic's algorithm", 'quadratic programming', {'weight': 0.6})
("dinic's algorithm", 'common lisp', {'weight': 0.6})
("dinic's algorithm", 'barrier function', {'weight': 0.6})
("dinic's algorithm", 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
("dinic's algorithm", 'gradient descent', {'weight': 0.6})
("dinic's algorithm", 'patricia selinger', {'weight': 0.6})
("dinic's algorithm", 'discounting', {'weight': 0.6})
("dinic's algorithm", 'ronald l. rivest', {'weight': 0.6})
("dinic's algorithm", 'iterative method', {'weight': 0.6})
("dinic's algorithm", 'limited-memory bfgs', {'weight': 0.6})
("dinic's algorithm", 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
("dinic's algorithm", 'longest common substring problem', {'weight': 0.6})
("dinic's algorithm", 'clifford stein', {'weight': 0.6})
("dinic's algorithm", 'network flow', {'weight': 0.5})
("dinic's algorithm", 'computer chess', {'weight': 0.6})
("dinic's algorithm", 'linear programming', {'weight': 0.6})
("dinic's algorithm", 'bitonic tour', {'weight': 0.6})
("dinic's algorithm", 'linear search problem', {'weight': 0.6})
("dinic's algorithm", 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
("dinic's algorithm", 'systems analysis', {'weight': 0.6})
("dinic's algorithm", 'capital (economics)', {'weight': 0.6})
("dinic's algorithm", 'levenshtein distance', {'weight': 0.6})
("dinic's algorithm", 'nonlinear programming', {'weight': 0.6})
("dinic's algorithm", 'computational complexity of mathematical operations', {'weight': 0.6})
("dinic's algorithm", 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.7})
("dinic's algorithm", 'gradient', {'weight': 0.6})
("dinic's algorithm", 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
("dinic's algorithm", 'maximum flow problem', {'weight': 0.7})
("dinic's algorithm", 'bulletin of the american mathematical society', {'weight': 0.6})
("dinic's algorithm", 'u.s. english', {'weight': 0.6})
("dinic's algorithm", 'refutation table', {'weight': 0.6})
("dinic's algorithm", 'heuristic algorithm', {'weight': 0.6})
("dinic's algorithm", 'successive linear programming', {'weight': 0.6})
("dinic's algorithm", 'optimal substructure', {'weight': 0.6})
("dinic's algorithm", 'programming language', {'weight': 0.6})
("dinic's algorithm", 'mergesort', {'weight': 0.6})
("dinic's algorithm", "dijkstra's algorithm", {'weight': 0.6})
("dinic's algorithm", 'subgradient method', {'weight': 0.6})
("dinic's algorithm", 'call-by-name', {'weight': 0.6})
("dinic's algorithm", 'longest increasing subsequence problem', {'weight': 0.6})
("dinic's algorithm", 'edward prescott', {'weight': 0.6})
("dinic's algorithm", 'exponential time', {'weight': 0.6})
("dinic's algorithm", 'principle of optimality', {'weight': 0.6})
("dinic's algorithm", "bor\xe5\xafvka's algorithm", {'weight': 0.6})
("dinic's algorithm", 'mathematical game', {'weight': 0.6})
("dinic's algorithm", 'nancy stokey', {'weight': 0.6})
("dinic's algorithm", 'approximation algorithm', {'weight': 0.6})
("dinic's algorithm", 'discrete-time', {'weight': 0.6})
("dinic's algorithm", 'cyk algorithm', {'weight': 0.6})
("dinic's algorithm", 'markov decision process', {'weight': 0.6})
("dinic's algorithm", "powell's method", {'weight': 0.6})
("dinic's algorithm", 'wolfe conditions', {'weight': 0.6})
("dinic's algorithm", 'convexity in economics', {'weight': 0.6})
("dinic's algorithm", 'transposition table', {'weight': 0.6})
("dinic's algorithm", 'economics', {'weight': 0.6})
("dinic's algorithm", 'backward induction', {'weight': 0.6})
("dinic's algorithm", 'golden section search', {'weight': 0.6})
("dinic's algorithm", 'edit distance', {'weight': 0.6})
("dinic's algorithm", 'tree structure', {'weight': 0.6})
("dinic's algorithm", 'exchange algorithm', {'weight': 0.6})
("dinic's algorithm", 'dover publications', {'weight': 0.6})
("dinic's algorithm", 'seam carving', {'weight': 0.6})
("dinic's algorithm", 'recursive least squares', {'weight': 0.6})
("dinic's algorithm", 'metaheuristic', {'weight': 0.6})
("dinic's algorithm", 'quasi-newton method', {'weight': 0.6})
("dinic's algorithm", 'on-line encyclopedia of integer sequences', {'weight': 0.6})
("dinic's algorithm", 'robert e. lucas', {'weight': 0.6})
("dinic's algorithm", 'non-convexity (economics)', {'weight': 0.6})
("dinic's algorithm", 'sr1 formula', {'weight': 0.6})
("dinic's algorithm", 'mathematical reviews', {'weight': 0.6})
("dinic's algorithm", 'puzzle', {'weight': 0.6})
("dinic's algorithm", 'associative array', {'weight': 0.6})
("dinic's algorithm", 'shortest path problem', {'weight': 0.6})
("dinic's algorithm", 'dynamic algorithm', {'weight': 0.6})
("dinic's algorithm", 'augmented lagrangian method', {'weight': 0.6})
("dinic's algorithm", 'charles delisi', {'weight': 0.6})
("dinic's algorithm", 'greedy algorithm', {'weight': 0.6})
("dinic's algorithm", "karmarkar's algorithm", {'weight': 0.6})
("dinic's algorithm", 'lattice models', {'weight': 0.6})
("dinic's algorithm", 'utility', {'weight': 0.6})
("dinic's algorithm", 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
("dinic's algorithm", 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
("dinic's algorithm", 'push-relabel maximum flow algorithm', {'weight': 0.6})
("dinic's algorithm", 'international standard book number', {'weight': 0.6})
("dinic's algorithm", 'undirected graph', {'weight': 0.6})
("dinic's algorithm", 'scheme (programming language)', {'weight': 0.6})
("dinic's algorithm", 'rna structure', {'weight': 0.6})
("dinic's algorithm", 'hanoi', {'weight': 0.6})
("dinic's algorithm", 'perl', {'weight': 0.6})
("dinic's algorithm", 'digital object identifier', {'weight': 0.6})
("dinic's algorithm", 'sequential quadratic programming', {'weight': 0.6})
("dinic's algorithm", "dinic's algorithm", {'weight': 1})
("dinic's algorithm", 'pseudo-polynomial time', {'weight': 0.6})
("dinic's algorithm", 'partition problem', {'weight': 0.6})
("dinic's algorithm", 'stochastic programming', {'weight': 0.6})
("dinic's algorithm", 'hill climbing', {'weight': 0.6})
("dinic's algorithm", 'top-down', {'weight': 0.6})
("dinic's algorithm", 'de boor algorithm', {'weight': 0.6})
("dinic's algorithm", 'optimization algorithm', {'weight': 0.6})
("dinic's algorithm", "kruskal's algorithm", {'weight': 0.6})
("dinic's algorithm", 'jacques philippe marie binet', {'weight': 0.6})
("dinic's algorithm", 'tabu search', {'weight': 0.6})
("dinic's algorithm", 'divide and conquer algorithm', {'weight': 0.6})
("dinic's algorithm", "johnson's algorithm", {'weight': 0.6})
("dinic's algorithm", 'evolutionary algorithm', {'weight': 0.6})
("dinic's algorithm", 'clique-width', {'weight': 0.6})
("dinic's algorithm", 'dynamic programming', {'weight': 0.6})
("dinic's algorithm", 'subroutine', {'weight': 0.6})
("dinic's algorithm", 'simulated annealing', {'weight': 0.6})
("dinic's algorithm", 'tower of hanoi', {'weight': 0.6})
("dinic's algorithm", 'branch and bound', {'weight': 0.6})
("dinic's algorithm", 'engineering', {'weight': 0.6})
("dinic's algorithm", 'matroid', {'weight': 0.6})
("dinic's algorithm", 'viterbi algorithm', {'weight': 0.6})
("dinic's algorithm", "lemke's algorithm", {'weight': 0.6})
("dinic's algorithm", 'simplex algorithm', {'weight': 0.6})
("dinic's algorithm", 'local search (optimization)', {'weight': 0.6})
("dinic's algorithm", 'hessian matrix', {'weight': 0.6})
("dinic's algorithm", 'ibm system r', {'weight': 0.6})
("dinic's algorithm", 'penalty method', {'weight': 0.6})
("dinic's algorithm", 'prolog', {'weight': 0.6})
("dinic's algorithm", 'time-invariant system', {'weight': 0.6})
("dinic's algorithm", 'criss-cross algorithm', {'weight': 0.6})
("dinic's algorithm", 'revised simplex algorithm', {'weight': 0.6})
("dinic's algorithm", 'the mathematical association of america', {'weight': 0.6})
("dinic's algorithm", 'line search', {'weight': 0.6})
("dinic's algorithm", 'j (programming language)', {'weight': 0.6})
("dinic's algorithm", 'word wrap', {'weight': 0.6})
("dinic's algorithm", 'subset sum problem', {'weight': 0.6})
("dinic's algorithm", 'integer programming', {'weight': 0.6})
("dinic's algorithm", 'nucleosome', {'weight': 0.6})
("dinic's algorithm", 'earley algorithm', {'weight': 0.6})
("dinic's algorithm", 'referential transparency (computer science)', {'weight': 0.6})
("dinic's algorithm", 'recursion', {'weight': 0.6})
("dinic's algorithm", 'mathematica', {'weight': 0.6})
("dinic's algorithm", 'quicksort', {'weight': 0.6})
("dinic's algorithm", 'recursion (computer science)', {'weight': 0.6})
("dinic's algorithm", 'checkerboard', {'weight': 0.6})
("dinic's algorithm", 'computer science', {'weight': 0.6})
("dinic's algorithm", 'brute-force search', {'weight': 0.6})
("dinic's algorithm", 'mathematics', {'weight': 0.6})
("dinic's algorithm", 'depth-first search', {'weight': 0.6})
("dinic's algorithm", 'top-down and bottom-up design', {'weight': 0.6})
("dinic's algorithm", 'correspondence problem', {'weight': 0.6})
("dinic's algorithm", 'transcription factor', {'weight': 0.6})
("dinic's algorithm", 'tree decomposition', {'weight': 0.6})
("dinic's algorithm", 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
("dinic's algorithm", 'structural alignment', {'weight': 0.6})
("dinic's algorithm", 'local convergence', {'weight': 0.6})
("dinic's algorithm", 'knapsack problem', {'weight': 0.6})
("dinic's algorithm", 'graph algorithm', {'weight': 0.6})
("dinic's algorithm", 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
("dinic's algorithm", 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
("dinic's algorithm", 'hidden markov model', {'weight': 0.6})
("dinic's algorithm", 'string (computer science)', {'weight': 0.6})
("dinic's algorithm", 'bioinformatics', {'weight': 0.6})
("dinic's algorithm", 'genetics', {'weight': 0.6})
("dinic's algorithm", 'mathematical optimization', {'weight': 0.6})
("dinic's algorithm", 'artificial neural networks', {'weight': 0.6})
("dinic's algorithm", 'introduction to algorithms', {'weight': 0.6})
("dinic's algorithm", 'thomas h. cormen', {'weight': 0.6})
("dinic's algorithm", 'music information retrieval', {'weight': 0.6})
("dinic's algorithm", 'beat (music)', {'weight': 0.6})
("dinic's algorithm", 'longest common subsequence problem', {'weight': 0.6})
("dinic's algorithm", 'convex minimization', {'weight': 0.6})
("dinic's algorithm", 'successive parabolic interpolation', {'weight': 0.6})
("dinic's algorithm", 'fibonacci sequence', {'weight': 0.6})
("dinic's algorithm", 'maximum subarray problem', {'weight': 0.6})
("dinic's algorithm", 'convex optimization', {'weight': 0.6})
("dinic's algorithm", 'memoization', {'weight': 0.6})
("dinic's algorithm", 'richard bellman', {'weight': 0.6})
("dinic's algorithm", 'exponential growth', {'weight': 0.6})
("dinic's algorithm", 'charles e. leiserson', {'weight': 0.6})
("dinic's algorithm", 'charles erwin wilson', {'weight': 0.6})
("dinic's algorithm", 'interval scheduling', {'weight': 0.6})
("dinic's algorithm", 'chart parser', {'weight': 0.6})
("dinic's algorithm", 'travelling salesman problem', {'weight': 0.6})
("dinic's algorithm", 'bellman equation', {'weight': 0.6})
('systems engineering', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('systems engineering', 'photoshop', {'weight': 0.6})
('systems engineering', 'sequence alignment', {'weight': 0.6})
('systems engineering', 'flow network', {'weight': 0.6})
('systems engineering', 'engineering portal', {'weight': 0.7})
('systems engineering', 'list of types of systems engineering', {'weight': 0.7})
('systems engineering', 'management cybernetics', {'weight': 0.7})
('systems engineering', 'ellipsoid method', {'weight': 0.6})
('systems engineering', 'chain matrix multiplication', {'weight': 0.6})
('systems engineering', 'ieee', {'weight': 0.6})
('systems engineering', 'backtracking', {'weight': 0.6})
('systems engineering', 'nonlinear conjugate gradient method', {'weight': 0.6})
('systems engineering', 'list of systems engineers', {'weight': 0.7})
('systems engineering', 'dynamic problem', {'weight': 0.6})
('systems engineering', 'mathematical reviews', {'weight': 0.6})
('systems engineering', 'trust region', {'weight': 0.6})
('systems engineering', 'function (mathematics)', {'weight': 0.6})
('systems engineering', 'minimum spanning tree', {'weight': 0.6})
('systems engineering', 'context-free grammar', {'weight': 0.6})
('systems engineering', 'branch and cut', {'weight': 0.6})
('systems engineering', 'state variable', {'weight': 0.6})
('systems engineering', 'treewidth', {'weight': 0.6})
('systems engineering', 'overlapping subproblem', {'weight': 0.6})
('systems engineering', 'taylor & francis', {'weight': 0.6})
('systems engineering', 'cutting-plane method', {'weight': 0.6})
('systems engineering', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('systems engineering', 'method of undetermined coefficients', {'weight': 0.6})
('systems engineering', 'combinatorial optimization', {'weight': 0.6})
('systems engineering', "newton's method in optimization", {'weight': 0.6})
('systems engineering', 'matrix chain multiplication', {'weight': 0.6})
('systems engineering', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('systems engineering', 'dynamic time warping', {'weight': 0.6})
('systems engineering', 'dynamic programming language', {'weight': 0.6})
('systems engineering', 'call-by-need', {'weight': 0.6})
('systems engineering', 'big-o notation', {'weight': 0.6})
('systems engineering', 'comparison of optimization software', {'weight': 0.6})
('systems engineering', 'quadratic programming', {'weight': 0.6})
('systems engineering', 'common lisp', {'weight': 0.6})
('systems engineering', 'barrier function', {'weight': 0.6})
('systems engineering', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('systems engineering', 'gradient descent', {'weight': 0.6})
('systems engineering', 'patricia selinger', {'weight': 0.6})
('systems engineering', 'discounting', {'weight': 0.6})
('systems engineering', 'systems thinking', {'weight': 0.7})
('systems engineering', 'ronald l. rivest', {'weight': 0.6})
('systems engineering', 'iterative method', {'weight': 0.6})
('systems engineering', 'limited-memory bfgs', {'weight': 0.6})
('systems engineering', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('systems engineering', 'longest common substring problem', {'weight': 0.6})
('systems engineering', 'clifford stein', {'weight': 0.6})
('systems engineering', 'computer chess', {'weight': 0.6})
('systems engineering', 'interdisciplinarity', {'weight': 0.7})
('systems engineering', 'linear programming', {'weight': 0.6})
('systems engineering', 'bitonic tour', {'weight': 0.6})
('systems engineering', 'linear search problem', {'weight': 0.6})
('systems engineering', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('systems engineering', 'systems analysis', {'weight': 0.6})
('systems engineering', 'capital (economics)', {'weight': 0.6})
('systems engineering', 'levenshtein distance', {'weight': 0.6})
('systems engineering', 'nonlinear programming', {'weight': 0.6})
('systems engineering', 'value stream mapping', {'weight': 0.7})
('systems engineering', 'computational complexity of mathematical operations', {'weight': 0.6})
('systems engineering', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('systems engineering', 'gradient', {'weight': 0.6})
('systems engineering', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('systems engineering', 'bulletin of the american mathematical society', {'weight': 0.6})
('systems engineering', 'u.s. english', {'weight': 0.6})
('systems engineering', 'refutation table', {'weight': 0.6})
('systems engineering', 'heuristic algorithm', {'weight': 0.6})
('systems engineering', 'successive linear programming', {'weight': 0.6})
('systems engineering', 'optimal substructure', {'weight': 0.6})
('systems engineering', 'programming language', {'weight': 0.6})
('systems engineering', 'mergesort', {'weight': 0.6})
('systems engineering', "dijkstra's algorithm", {'weight': 0.6})
('systems engineering', 'subgradient method', {'weight': 0.6})
('systems engineering', 'call-by-name', {'weight': 0.6})
('systems engineering', 'longest increasing subsequence problem', {'weight': 0.6})
('systems engineering', 'edward prescott', {'weight': 0.6})
('systems engineering', 'exponential time', {'weight': 0.6})
('systems engineering', 'principle of optimality', {'weight': 0.6})
('systems engineering', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('systems engineering', 'mathematical game', {'weight': 0.6})
('systems engineering', 'nancy stokey', {'weight': 0.6})
('systems engineering', 'approximation algorithm', {'weight': 0.6})
('systems engineering', 'discrete-time', {'weight': 0.6})
('systems engineering', 'cyk algorithm', {'weight': 0.6})
('systems engineering', 'markov decision process', {'weight': 0.6})
('systems engineering', "powell's method", {'weight': 0.6})
('systems engineering', 'enterprise systems engineering', {'weight': 0.7})
('systems engineering', 'wolfe conditions', {'weight': 0.6})
('systems engineering', 'convexity in economics', {'weight': 0.6})
('systems engineering', 'transposition table', {'weight': 0.6})
('systems engineering', 'economics', {'weight': 0.6})
('systems engineering', 'backward induction', {'weight': 0.6})
('systems engineering', 'golden section search', {'weight': 0.6})
('systems engineering', 'edit distance', {'weight': 0.6})
('systems engineering', 'tree structure', {'weight': 0.6})
('systems engineering', 'exchange algorithm', {'weight': 0.6})
('systems engineering', 'dover publications', {'weight': 0.6})
('systems engineering', 'seam carving', {'weight': 0.6})
('systems engineering', 'recursive least squares', {'weight': 0.6})
('systems engineering', 'metaheuristic', {'weight': 0.6})
('systems engineering', 'quasi-newton method', {'weight': 0.6})
('systems engineering', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('systems engineering', 'robert e. lucas', {'weight': 0.6})
('systems engineering', 'non-convexity (economics)', {'weight': 0.6})
('systems engineering', 'structured systems analysis and design method', {'weight': 0.7})
('systems engineering', 'sr1 formula', {'weight': 0.6})
('systems engineering', 'occupations', {'weight': 0.5})
('systems engineering', 'puzzle', {'weight': 0.6})
('systems engineering', 'associative array', {'weight': 0.6})
('systems engineering', 'shortest path problem', {'weight': 0.6})
('systems engineering', 'dynamic algorithm', {'weight': 0.6})
('systems engineering', 'augmented lagrangian method', {'weight': 0.6})
('systems engineering', 'charles delisi', {'weight': 0.6})
('systems engineering', 'greedy algorithm', {'weight': 0.6})
('systems engineering', "karmarkar's algorithm", {'weight': 0.6})
('systems engineering', 'lattice models', {'weight': 0.6})
('systems engineering', 'utility', {'weight': 0.6})
('systems engineering', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('systems engineering', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('systems engineering', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('systems engineering', 'international standard book number', {'weight': 0.6})
('systems engineering', 'undirected graph', {'weight': 0.6})
('systems engineering', 'scheme (programming language)', {'weight': 0.6})
('systems engineering', 'rna structure', {'weight': 0.6})
('systems engineering', 'hanoi', {'weight': 0.6})
('systems engineering', 'perl', {'weight': 0.6})
('systems engineering', 'digital object identifier', {'weight': 0.6})
('systems engineering', 'sequential quadratic programming', {'weight': 0.6})
('systems engineering', "dinic's algorithm", {'weight': 0.6})
('systems engineering', 'pseudo-polynomial time', {'weight': 0.6})
('systems engineering', 'systems science portal', {'weight': 0.7})
('systems engineering', 'partition problem', {'weight': 0.6})
('systems engineering', 'stochastic programming', {'weight': 0.6})
('systems engineering', 'systems engineering', {'weight': 1})
('systems engineering', 'hill climbing', {'weight': 0.6})
('systems engineering', 'top-down', {'weight': 0.6})
('systems engineering', 'de boor algorithm', {'weight': 0.6})
('systems engineering', 'optimization algorithm', {'weight': 0.6})
('systems engineering', "kruskal's algorithm", {'weight': 0.6})
('systems engineering', 'theory of constraints', {'weight': 0.7})
('systems engineering', 'jacques philippe marie binet', {'weight': 0.6})
('systems engineering', 'system of systems engineering', {'weight': 0.7})
('systems engineering', 'tabu search', {'weight': 0.6})
('systems engineering', 'divide and conquer algorithm', {'weight': 0.6})
('systems engineering', "johnson's algorithm", {'weight': 0.6})
('systems engineering', 'evolutionary algorithm', {'weight': 0.6})
('systems engineering', 'clique-width', {'weight': 0.6})
('systems engineering', 'dynamic programming', {'weight': 0.6})
('systems engineering', 'subroutine', {'weight': 0.6})
('systems engineering', 'simulated annealing', {'weight': 0.6})
('systems engineering', 'tower of hanoi', {'weight': 0.6})
('systems engineering', 'branch and bound', {'weight': 0.6})
('systems engineering', 'engineering', {'weight': 0.6})
('systems engineering', 'matroid', {'weight': 0.6})
('systems engineering', 'viterbi algorithm', {'weight': 0.6})
('systems engineering', "lemke's algorithm", {'weight': 0.6})
('systems engineering', 'simplex algorithm', {'weight': 0.6})
('systems engineering', 'local search (optimization)', {'weight': 0.6})
('systems engineering', 'hessian matrix', {'weight': 0.6})
('systems engineering', 'ibm system r', {'weight': 0.6})
('systems engineering', 'penalty method', {'weight': 0.6})
('systems engineering', 'prolog', {'weight': 0.6})
('systems engineering', 'time-invariant system', {'weight': 0.6})
('systems engineering', 'criss-cross algorithm', {'weight': 0.6})
('systems engineering', 'revised simplex algorithm', {'weight': 0.6})
('systems engineering', 'the mathematical association of america', {'weight': 0.6})
('systems engineering', 'line search', {'weight': 0.6})
('systems engineering', 'j (programming language)', {'weight': 0.6})
('systems engineering', 'word wrap', {'weight': 0.6})
('systems engineering', 'subset sum problem', {'weight': 0.6})
('systems engineering', 'integer programming', {'weight': 0.6})
('systems engineering', 'engineering disciplines', {'weight': 0.5})
('systems engineering', 'nucleosome', {'weight': 0.6})
('systems engineering', 'earley algorithm', {'weight': 0.6})
('systems engineering', 'referential transparency (computer science)', {'weight': 0.6})
('systems engineering', 'recursion', {'weight': 0.6})
('systems engineering', 'mathematica', {'weight': 0.6})
('systems engineering', 'quicksort', {'weight': 0.6})
('systems engineering', 'recursion (computer science)', {'weight': 0.6})
('systems engineering', 'checkerboard', {'weight': 0.6})
('systems engineering', 'computer science', {'weight': 0.6})
('systems engineering', 'brute-force search', {'weight': 0.6})
('systems engineering', 'mathematics', {'weight': 0.6})
('systems engineering', 'depth-first search', {'weight': 0.6})
('systems engineering', 'top-down and bottom-up design', {'weight': 0.6})
('systems engineering', 'correspondence problem', {'weight': 0.6})
('systems engineering', 'transcription factor', {'weight': 0.6})
('systems engineering', 'tree decomposition', {'weight': 0.6})
('systems engineering', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('systems engineering', 'structural alignment', {'weight': 0.6})
('systems engineering', 'local convergence', {'weight': 0.6})
('systems engineering', 'knapsack problem', {'weight': 0.6})
('systems engineering', 'graph algorithm', {'weight': 0.6})
('systems engineering', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('systems engineering', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('systems engineering', 'hidden markov model', {'weight': 0.6})
('systems engineering', 'string (computer science)', {'weight': 0.6})
('systems engineering', 'bioinformatics', {'weight': 0.6})
('systems engineering', 'genetics', {'weight': 0.6})
('systems engineering', 'mathematical optimization', {'weight': 0.6})
('systems engineering', 'artificial neural networks', {'weight': 0.6})
('systems engineering', 'introduction to algorithms', {'weight': 0.6})
('systems engineering', 'thomas h. cormen', {'weight': 0.6})
('systems engineering', 'music information retrieval', {'weight': 0.6})
('systems engineering', 'list of production topics', {'weight': 0.7})
('systems engineering', 'beat (music)', {'weight': 0.6})
('systems engineering', 'longest common subsequence problem', {'weight': 0.6})
('systems engineering', 'convex minimization', {'weight': 0.6})
('systems engineering', 'successive parabolic interpolation', {'weight': 0.6})
('systems engineering', 'fibonacci sequence', {'weight': 0.6})
('systems engineering', 'maximum subarray problem', {'weight': 0.6})
('systems engineering', 'convex optimization', {'weight': 0.6})
('systems engineering', 'memoization', {'weight': 0.6})
('systems engineering', 'richard bellman', {'weight': 0.6})
('systems engineering', 'exponential growth', {'weight': 0.6})
('systems engineering', 'charles e. leiserson', {'weight': 0.6})
('systems engineering', 'charles erwin wilson', {'weight': 0.6})
('systems engineering', 'interval scheduling', {'weight': 0.6})
('systems engineering', 'chart parser', {'weight': 0.6})
('systems engineering', 'travelling salesman problem', {'weight': 0.6})
('systems engineering', 'bellman equation', {'weight': 0.6})
('hill climbing', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('hill climbing', 'photoshop', {'weight': 0.6})
('hill climbing', 'sequence alignment', {'weight': 0.6})
('hill climbing', 'flow network', {'weight': 0.6})
('hill climbing', 'ellipsoid method', {'weight': 0.6})
('hill climbing', 'chain matrix multiplication', {'weight': 0.6})
('hill climbing', 'ieee', {'weight': 0.6})
('hill climbing', 'backtracking', {'weight': 0.6})
('hill climbing', 'nonlinear conjugate gradient method', {'weight': 0.6})
('hill climbing', 'dynamic problem', {'weight': 0.6})
('hill climbing', 'trust region', {'weight': 0.6})
('hill climbing', 'function (mathematics)', {'weight': 0.6})
('hill climbing', 'minimum spanning tree', {'weight': 0.6})
('hill climbing', 'context-free grammar', {'weight': 0.6})
('hill climbing', 'branch and cut', {'weight': 0.6})
('hill climbing', 'state variable', {'weight': 0.6})
('hill climbing', 'treewidth', {'weight': 0.6})
('hill climbing', 'optimization algorithms and methods', {'weight': 0.5})
('hill climbing', 'overlapping subproblem', {'weight': 0.6})
('hill climbing', 'taylor & francis', {'weight': 0.6})
('hill climbing', 'cutting-plane method', {'weight': 0.6})
('hill climbing', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('hill climbing', 'method of undetermined coefficients', {'weight': 0.6})
('hill climbing', 'combinatorial optimization', {'weight': 0.6})
('hill climbing', "newton's method in optimization", {'weight': 0.6})
('hill climbing', 'matrix chain multiplication', {'weight': 0.6})
('hill climbing', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('hill climbing', 'dynamic time warping', {'weight': 0.6})
('hill climbing', 'dynamic programming language', {'weight': 0.6})
('hill climbing', 'call-by-need', {'weight': 0.6})
('hill climbing', 'big-o notation', {'weight': 0.6})
('hill climbing', 'comparison of optimization software', {'weight': 0.6})
('hill climbing', 'quadratic programming', {'weight': 0.6})
('hill climbing', 'common lisp', {'weight': 0.6})
('hill climbing', 'barrier function', {'weight': 0.6})
('hill climbing', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('hill climbing', 'gradient descent', {'weight': 0.7})
('hill climbing', 'patricia selinger', {'weight': 0.6})
('hill climbing', 'discounting', {'weight': 0.6})
('hill climbing', 'ronald l. rivest', {'weight': 0.6})
('hill climbing', 'iterative method', {'weight': 0.6})
('hill climbing', 'limited-memory bfgs', {'weight': 0.6})
('hill climbing', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('hill climbing', 'longest common substring problem', {'weight': 0.6})
('hill climbing', 'clifford stein', {'weight': 0.6})
('hill climbing', 't\xe3\xa2tonnement', {'weight': 0.7})
('hill climbing', 'computer chess', {'weight': 0.6})
('hill climbing', 'linear programming', {'weight': 0.6})
('hill climbing', 'bitonic tour', {'weight': 0.6})
('hill climbing', 'linear search problem', {'weight': 0.6})
('hill climbing', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('hill climbing', 'systems analysis', {'weight': 0.6})
('hill climbing', 'capital (economics)', {'weight': 0.6})
('hill climbing', 'levenshtein distance', {'weight': 0.6})
('hill climbing', 'nonlinear programming', {'weight': 0.6})
('hill climbing', 'computational complexity of mathematical operations', {'weight': 0.6})
('hill climbing', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('hill climbing', 'gradient', {'weight': 0.6})
('hill climbing', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('hill climbing', 'bulletin of the american mathematical society', {'weight': 0.6})
('hill climbing', 'u.s. english', {'weight': 0.6})
('hill climbing', 'refutation table', {'weight': 0.6})
('hill climbing', 'heuristic algorithm', {'weight': 0.6})
('hill climbing', 'successive linear programming', {'weight': 0.6})
('hill climbing', 'optimal substructure', {'weight': 0.6})
('hill climbing', 'programming language', {'weight': 0.6})
('hill climbing', 'mergesort', {'weight': 0.6})
('hill climbing', "dijkstra's algorithm", {'weight': 0.6})
('hill climbing', 'subgradient method', {'weight': 0.6})
('hill climbing', 'call-by-name', {'weight': 0.6})
('hill climbing', 'longest increasing subsequence problem', {'weight': 0.6})
('hill climbing', 'edward prescott', {'weight': 0.6})
('hill climbing', 'exponential time', {'weight': 0.6})
('hill climbing', 'principle of optimality', {'weight': 0.6})
('hill climbing', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('hill climbing', 'mathematical game', {'weight': 0.6})
('hill climbing', 'nancy stokey', {'weight': 0.6})
('hill climbing', 'approximation algorithm', {'weight': 0.6})
('hill climbing', 'discrete-time', {'weight': 0.6})
('hill climbing', 'cyk algorithm', {'weight': 0.6})
('hill climbing', 'markov decision process', {'weight': 0.6})
('hill climbing', "powell's method", {'weight': 0.6})
('hill climbing', 'wolfe conditions', {'weight': 0.6})
('hill climbing', 'convexity in economics', {'weight': 0.6})
('hill climbing', 'transposition table', {'weight': 0.6})
('hill climbing', 'economics', {'weight': 0.6})
('hill climbing', 'backward induction', {'weight': 0.6})
('hill climbing', 'golden section search', {'weight': 0.6})
('hill climbing', 'edit distance', {'weight': 0.6})
('hill climbing', 'tree structure', {'weight': 0.6})
('hill climbing', 'exchange algorithm', {'weight': 0.6})
('hill climbing', 'dover publications', {'weight': 0.6})
('hill climbing', 'seam carving', {'weight': 0.6})
('hill climbing', 'recursive least squares', {'weight': 0.6})
('hill climbing', 'metaheuristic', {'weight': 0.6})
('hill climbing', 'quasi-newton method', {'weight': 0.6})
('hill climbing', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('hill climbing', 'robert e. lucas', {'weight': 0.6})
('hill climbing', 'non-convexity (economics)', {'weight': 0.6})
('hill climbing', 'search algorithms', {'weight': 0.5})
('hill climbing', 'sr1 formula', {'weight': 0.6})
('hill climbing', 'mathematical reviews', {'weight': 0.6})
('hill climbing', 'puzzle', {'weight': 0.6})
('hill climbing', 'associative array', {'weight': 0.6})
('hill climbing', 'shortest path problem', {'weight': 0.6})
('hill climbing', 'dynamic algorithm', {'weight': 0.6})
('hill climbing', 'augmented lagrangian method', {'weight': 0.6})
('hill climbing', 'charles delisi', {'weight': 0.6})
('hill climbing', 'greedy algorithm', {'weight': 0.7})
('hill climbing', "karmarkar's algorithm", {'weight': 0.6})
('hill climbing', 'lattice models', {'weight': 0.6})
('hill climbing', 'utility', {'weight': 0.6})
('hill climbing', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('hill climbing', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('hill climbing', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('hill climbing', 'international standard book number', {'weight': 0.6})
('hill climbing', 'undirected graph', {'weight': 0.6})
('hill climbing', 'scheme (programming language)', {'weight': 0.6})
('hill climbing', 'rna structure', {'weight': 0.6})
('hill climbing', 'hanoi', {'weight': 0.6})
('hill climbing', 'perl', {'weight': 0.6})
('hill climbing', 'digital object identifier', {'weight': 0.6})
('hill climbing', 'sequential quadratic programming', {'weight': 0.6})
('hill climbing', "dinic's algorithm", {'weight': 0.6})
('hill climbing', 'pseudo-polynomial time', {'weight': 0.6})
('hill climbing', 'partition problem', {'weight': 0.6})
('hill climbing', 'stochastic programming', {'weight': 0.6})
('hill climbing', 'hill climbing', {'weight': 1})
('hill climbing', 'top-down', {'weight': 0.6})
('hill climbing', 'de boor algorithm', {'weight': 0.6})
('hill climbing', 'optimization algorithm', {'weight': 0.6})
('hill climbing', "kruskal's algorithm", {'weight': 0.6})
('hill climbing', 'jacques philippe marie binet', {'weight': 0.6})
('hill climbing', 'tabu search', {'weight': 0.6})
('hill climbing', 'divide and conquer algorithm', {'weight': 0.6})
('hill climbing', "johnson's algorithm", {'weight': 0.6})
('hill climbing', 'evolutionary algorithm', {'weight': 0.6})
('hill climbing', 'clique-width', {'weight': 0.6})
('hill climbing', 'dynamic programming', {'weight': 0.6})
('hill climbing', 'subroutine', {'weight': 0.6})
('hill climbing', 'simulated annealing', {'weight': 0.6})
('hill climbing', 'tower of hanoi', {'weight': 0.6})
('hill climbing', 'mean-shift', {'weight': 0.7})
('hill climbing', 'branch and bound', {'weight': 0.6})
('hill climbing', 'engineering', {'weight': 0.6})
('hill climbing', 'matroid', {'weight': 0.6})
('hill climbing', 'viterbi algorithm', {'weight': 0.6})
('hill climbing', "lemke's algorithm", {'weight': 0.6})
('hill climbing', 'simplex algorithm', {'weight': 0.6})
('hill climbing', 'local search (optimization)', {'weight': 0.6})
('hill climbing', 'hessian matrix', {'weight': 0.6})
('hill climbing', 'ibm system r', {'weight': 0.6})
('hill climbing', 'penalty method', {'weight': 0.6})
('hill climbing', 'prolog', {'weight': 0.6})
('hill climbing', 'time-invariant system', {'weight': 0.6})
('hill climbing', 'criss-cross algorithm', {'weight': 0.6})
('hill climbing', 'revised simplex algorithm', {'weight': 0.6})
('hill climbing', 'the mathematical association of america', {'weight': 0.6})
('hill climbing', 'line search', {'weight': 0.6})
('hill climbing', 'j (programming language)', {'weight': 0.6})
('hill climbing', 'word wrap', {'weight': 0.6})
('hill climbing', 'subset sum problem', {'weight': 0.6})
('hill climbing', 'integer programming', {'weight': 0.6})
('hill climbing', 'nucleosome', {'weight': 0.6})
('hill climbing', 'earley algorithm', {'weight': 0.6})
('hill climbing', 'referential transparency (computer science)', {'weight': 0.6})
('hill climbing', 'recursion', {'weight': 0.6})
('hill climbing', 'mathematica', {'weight': 0.6})
('hill climbing', 'quicksort', {'weight': 0.6})
('hill climbing', 'recursion (computer science)', {'weight': 0.6})
('hill climbing', 'checkerboard', {'weight': 0.6})
('hill climbing', 'computer science', {'weight': 0.6})
('hill climbing', 'brute-force search', {'weight': 0.6})
('hill climbing', 'mathematics', {'weight': 0.6})
('hill climbing', 'depth-first search', {'weight': 0.6})
('hill climbing', 'top-down and bottom-up design', {'weight': 0.6})
('hill climbing', 'correspondence problem', {'weight': 0.6})
('hill climbing', 'transcription factor', {'weight': 0.6})
('hill climbing', 'tree decomposition', {'weight': 0.6})
('hill climbing', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('hill climbing', 'structural alignment', {'weight': 0.6})
('hill climbing', 'local convergence', {'weight': 0.6})
('hill climbing', 'knapsack problem', {'weight': 0.6})
('hill climbing', 'graph algorithm', {'weight': 0.6})
('hill climbing', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('hill climbing', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('hill climbing', 'hidden markov model', {'weight': 0.6})
('hill climbing', 'string (computer science)', {'weight': 0.6})
('hill climbing', 'bioinformatics', {'weight': 0.6})
('hill climbing', 'genetics', {'weight': 0.6})
('hill climbing', 'mathematical optimization', {'weight': 0.6})
('hill climbing', 'artificial neural networks', {'weight': 0.6})
('hill climbing', 'introduction to algorithms', {'weight': 0.6})
('hill climbing', 'thomas h. cormen', {'weight': 0.6})
('hill climbing', 'music information retrieval', {'weight': 0.6})
('hill climbing', 'beat (music)', {'weight': 0.6})
('hill climbing', 'longest common subsequence problem', {'weight': 0.6})
('hill climbing', 'convex minimization', {'weight': 0.6})
('hill climbing', 'successive parabolic interpolation', {'weight': 0.6})
('hill climbing', 'fibonacci sequence', {'weight': 0.6})
('hill climbing', 'maximum subarray problem', {'weight': 0.6})
('hill climbing', 'convex optimization', {'weight': 0.6})
('hill climbing', 'memoization', {'weight': 0.6})
('hill climbing', 'richard bellman', {'weight': 0.6})
('hill climbing', 'exponential growth', {'weight': 0.6})
('hill climbing', 'charles e. leiserson', {'weight': 0.6})
('hill climbing', 'charles erwin wilson', {'weight': 0.6})
('hill climbing', 'interval scheduling', {'weight': 0.6})
('hill climbing', 'chart parser', {'weight': 0.6})
('hill climbing', 'travelling salesman problem', {'weight': 0.6})
('hill climbing', 'bellman equation', {'weight': 0.6})
('de boor algorithm', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('de boor algorithm', 'photoshop', {'weight': 0.6})
('de boor algorithm', 'sequence alignment', {'weight': 0.6})
('de boor algorithm', 'flow network', {'weight': 0.6})
('de boor algorithm', 'ellipsoid method', {'weight': 0.6})
('de boor algorithm', 'chain matrix multiplication', {'weight': 0.6})
('de boor algorithm', 'ieee', {'weight': 0.6})
('de boor algorithm', 'backtracking', {'weight': 0.6})
('de boor algorithm', 'nonlinear conjugate gradient method', {'weight': 0.6})
('de boor algorithm', 'dynamic problem', {'weight': 0.6})
('de boor algorithm', 'trust region', {'weight': 0.6})
('de boor algorithm', 'function (mathematics)', {'weight': 0.6})
('de boor algorithm', 'minimum spanning tree', {'weight': 0.6})
('de boor algorithm', 'context-free grammar', {'weight': 0.6})
('de boor algorithm', 'branch and cut', {'weight': 0.6})
('de boor algorithm', 'state variable', {'weight': 0.6})
('de boor algorithm', 'treewidth', {'weight': 0.6})
('de boor algorithm', 'overlapping subproblem', {'weight': 0.6})
('de boor algorithm', 'taylor & francis', {'weight': 0.6})
('de boor algorithm', 'cutting-plane method', {'weight': 0.6})
('de boor algorithm', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('de boor algorithm', 'method of undetermined coefficients', {'weight': 0.6})
('de boor algorithm', 'combinatorial optimization', {'weight': 0.6})
('de boor algorithm', "newton's method in optimization", {'weight': 0.6})
('de boor algorithm', 'matrix chain multiplication', {'weight': 0.6})
('de boor algorithm', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('de boor algorithm', 'dynamic time warping', {'weight': 0.6})
('de boor algorithm', 'dynamic programming language', {'weight': 0.6})
('de boor algorithm', 'call-by-need', {'weight': 0.6})
('de boor algorithm', 'big-o notation', {'weight': 0.6})
('de boor algorithm', 'comparison of optimization software', {'weight': 0.6})
('de boor algorithm', 'quadratic programming', {'weight': 0.6})
('de boor algorithm', 'common lisp', {'weight': 0.6})
('de boor algorithm', 'barrier function', {'weight': 0.6})
('de boor algorithm', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('de boor algorithm', 'gradient descent', {'weight': 0.6})
('de boor algorithm', 'patricia selinger', {'weight': 0.6})
('de boor algorithm', 'discounting', {'weight': 0.6})
('de boor algorithm', 'ronald l. rivest', {'weight': 0.6})
('de boor algorithm', 'iterative method', {'weight': 0.6})
('de boor algorithm', 'limited-memory bfgs', {'weight': 0.6})
('de boor algorithm', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('de boor algorithm', 'longest common substring problem', {'weight': 0.6})
('de boor algorithm', 'clifford stein', {'weight': 0.6})
('de boor algorithm', 'computer chess', {'weight': 0.6})
('de boor algorithm', 'linear programming', {'weight': 0.6})
('de boor algorithm', 'bitonic tour', {'weight': 0.6})
('de boor algorithm', 'linear search problem', {'weight': 0.6})
('de boor algorithm', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('de boor algorithm', 'systems analysis', {'weight': 0.6})
('de boor algorithm', 'capital (economics)', {'weight': 0.6})
('de boor algorithm', 'levenshtein distance', {'weight': 0.6})
('de boor algorithm', 'nonlinear programming', {'weight': 0.6})
('de boor algorithm', 'computational complexity of mathematical operations', {'weight': 0.6})
('de boor algorithm', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('de boor algorithm', 'gradient', {'weight': 0.6})
('de boor algorithm', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('de boor algorithm', 'bulletin of the american mathematical society', {'weight': 0.6})
('de boor algorithm', 'u.s. english', {'weight': 0.6})
('de boor algorithm', 'refutation table', {'weight': 0.6})
('de boor algorithm', 'heuristic algorithm', {'weight': 0.6})
('de boor algorithm', 'successive linear programming', {'weight': 0.6})
('de boor algorithm', 'optimal substructure', {'weight': 0.6})
('de boor algorithm', 'programming language', {'weight': 0.6})
('de boor algorithm', 'mergesort', {'weight': 0.6})
('de boor algorithm', "dijkstra's algorithm", {'weight': 0.6})
('de boor algorithm', 'subgradient method', {'weight': 0.6})
('de boor algorithm', 'call-by-name', {'weight': 0.6})
('de boor algorithm', 'longest increasing subsequence problem', {'weight': 0.6})
('de boor algorithm', 'edward prescott', {'weight': 0.6})
('de boor algorithm', 'exponential time', {'weight': 0.6})
('de boor algorithm', 'principle of optimality', {'weight': 0.6})
('de boor algorithm', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('de boor algorithm', 'mathematical game', {'weight': 0.6})
('de boor algorithm', 'nancy stokey', {'weight': 0.6})
('de boor algorithm', 'approximation algorithm', {'weight': 0.6})
('de boor algorithm', 'discrete-time', {'weight': 0.6})
('de boor algorithm', 'cyk algorithm', {'weight': 0.6})
('de boor algorithm', 'markov decision process', {'weight': 0.6})
('de boor algorithm', "powell's method", {'weight': 0.6})
('de boor algorithm', 'wolfe conditions', {'weight': 0.6})
('de boor algorithm', 'convexity in economics', {'weight': 0.6})
('de boor algorithm', 'transposition table', {'weight': 0.6})
('de boor algorithm', 'economics', {'weight': 0.6})
('de boor algorithm', 'backward induction', {'weight': 0.6})
('de boor algorithm', 'golden section search', {'weight': 0.6})
('de boor algorithm', 'edit distance', {'weight': 0.6})
('de boor algorithm', 'tree structure', {'weight': 0.6})
('de boor algorithm', 'exchange algorithm', {'weight': 0.6})
('de boor algorithm', 'dover publications', {'weight': 0.6})
('de boor algorithm', 'seam carving', {'weight': 0.6})
('de boor algorithm', 'recursive least squares', {'weight': 0.6})
('de boor algorithm', 'metaheuristic', {'weight': 0.6})
('de boor algorithm', 'quasi-newton method', {'weight': 0.6})
('de boor algorithm', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('de boor algorithm', 'robert e. lucas', {'weight': 0.6})
('de boor algorithm', 'non-convexity (economics)', {'weight': 0.6})
('de boor algorithm', 'sr1 formula', {'weight': 0.6})
('de boor algorithm', 'mathematical reviews', {'weight': 0.6})
('de boor algorithm', 'puzzle', {'weight': 0.6})
('de boor algorithm', 'associative array', {'weight': 0.6})
('de boor algorithm', 'shortest path problem', {'weight': 0.6})
('de boor algorithm', 'dynamic algorithm', {'weight': 0.6})
('de boor algorithm', 'augmented lagrangian method', {'weight': 0.6})
('de boor algorithm', 'charles delisi', {'weight': 0.6})
('de boor algorithm', 'greedy algorithm', {'weight': 0.6})
('de boor algorithm', "karmarkar's algorithm", {'weight': 0.6})
('de boor algorithm', 'lattice models', {'weight': 0.6})
('de boor algorithm', 'utility', {'weight': 0.6})
('de boor algorithm', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('de boor algorithm', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('de boor algorithm', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('de boor algorithm', 'international standard book number', {'weight': 0.6})
('de boor algorithm', 'undirected graph', {'weight': 0.6})
('de boor algorithm', 'scheme (programming language)', {'weight': 0.6})
('de boor algorithm', 'rna structure', {'weight': 0.6})
('de boor algorithm', 'hanoi', {'weight': 0.6})
('de boor algorithm', 'perl', {'weight': 0.6})
('de boor algorithm', 'digital object identifier', {'weight': 0.6})
('de boor algorithm', 'sequential quadratic programming', {'weight': 0.6})
('de boor algorithm', "dinic's algorithm", {'weight': 0.6})
('de boor algorithm', 'pseudo-polynomial time', {'weight': 0.6})
('de boor algorithm', 'partition problem', {'weight': 0.6})
('de boor algorithm', 'stochastic programming', {'weight': 0.6})
('de boor algorithm', 'hill climbing', {'weight': 0.6})
('de boor algorithm', 'top-down', {'weight': 0.6})
('de boor algorithm', 'de boor algorithm', {'weight': 1})
('de boor algorithm', 'optimization algorithm', {'weight': 0.6})
('de boor algorithm', "kruskal's algorithm", {'weight': 0.6})
('de boor algorithm', 'jacques philippe marie binet', {'weight': 0.6})
('de boor algorithm', 'tabu search', {'weight': 0.6})
('de boor algorithm', 'divide and conquer algorithm', {'weight': 0.6})
('de boor algorithm', "johnson's algorithm", {'weight': 0.6})
('de boor algorithm', 'evolutionary algorithm', {'weight': 0.6})
('de boor algorithm', 'clique-width', {'weight': 0.6})
('de boor algorithm', 'dynamic programming', {'weight': 0.6})
('de boor algorithm', 'subroutine', {'weight': 0.6})
('de boor algorithm', 'simulated annealing', {'weight': 0.6})
('de boor algorithm', 'tower of hanoi', {'weight': 0.6})
('de boor algorithm', 'branch and bound', {'weight': 0.6})
('de boor algorithm', 'engineering', {'weight': 0.6})
('de boor algorithm', 'matroid', {'weight': 0.6})
('de boor algorithm', 'viterbi algorithm', {'weight': 0.6})
('de boor algorithm', "lemke's algorithm", {'weight': 0.6})
('de boor algorithm', 'simplex algorithm', {'weight': 0.6})
('de boor algorithm', 'local search (optimization)', {'weight': 0.6})
('de boor algorithm', 'hessian matrix', {'weight': 0.6})
('de boor algorithm', 'ibm system r', {'weight': 0.6})
('de boor algorithm', 'penalty method', {'weight': 0.6})
('de boor algorithm', 'prolog', {'weight': 0.6})
('de boor algorithm', 'time-invariant system', {'weight': 0.6})
('de boor algorithm', 'criss-cross algorithm', {'weight': 0.6})
('de boor algorithm', 'revised simplex algorithm', {'weight': 0.6})
('de boor algorithm', 'the mathematical association of america', {'weight': 0.6})
('de boor algorithm', 'line search', {'weight': 0.6})
('de boor algorithm', 'j (programming language)', {'weight': 0.6})
('de boor algorithm', 'word wrap', {'weight': 0.6})
('de boor algorithm', 'subset sum problem', {'weight': 0.6})
('de boor algorithm', 'integer programming', {'weight': 0.6})
('de boor algorithm', 'nucleosome', {'weight': 0.6})
('de boor algorithm', 'earley algorithm', {'weight': 0.6})
('de boor algorithm', 'referential transparency (computer science)', {'weight': 0.6})
('de boor algorithm', 'recursion', {'weight': 0.6})
('de boor algorithm', 'mathematica', {'weight': 0.6})
('de boor algorithm', 'quicksort', {'weight': 0.6})
('de boor algorithm', 'recursion (computer science)', {'weight': 0.6})
('de boor algorithm', 'checkerboard', {'weight': 0.6})
('de boor algorithm', 'computer science', {'weight': 0.6})
('de boor algorithm', 'brute-force search', {'weight': 0.6})
('de boor algorithm', 'mathematics', {'weight': 0.6})
('de boor algorithm', 'depth-first search', {'weight': 0.6})
('de boor algorithm', 'top-down and bottom-up design', {'weight': 0.6})
('de boor algorithm', 'correspondence problem', {'weight': 0.6})
('de boor algorithm', 'transcription factor', {'weight': 0.6})
('de boor algorithm', 'tree decomposition', {'weight': 0.6})
('de boor algorithm', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('de boor algorithm', 'structural alignment', {'weight': 0.6})
('de boor algorithm', 'local convergence', {'weight': 0.6})
('de boor algorithm', 'knapsack problem', {'weight': 0.6})
('de boor algorithm', 'graph algorithm', {'weight': 0.6})
('de boor algorithm', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('de boor algorithm', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('de boor algorithm', 'hidden markov model', {'weight': 0.6})
('de boor algorithm', 'string (computer science)', {'weight': 0.6})
('de boor algorithm', 'bioinformatics', {'weight': 0.6})
('de boor algorithm', 'genetics', {'weight': 0.6})
('de boor algorithm', 'mathematical optimization', {'weight': 0.6})
('de boor algorithm', 'artificial neural networks', {'weight': 0.6})
('de boor algorithm', 'introduction to algorithms', {'weight': 0.6})
('de boor algorithm', 'thomas h. cormen', {'weight': 0.6})
('de boor algorithm', 'music information retrieval', {'weight': 0.6})
('de boor algorithm', 'beat (music)', {'weight': 0.6})
('de boor algorithm', 'longest common subsequence problem', {'weight': 0.6})
('de boor algorithm', 'convex minimization', {'weight': 0.6})
('de boor algorithm', 'successive parabolic interpolation', {'weight': 0.6})
('de boor algorithm', 'fibonacci sequence', {'weight': 0.6})
('de boor algorithm', 'maximum subarray problem', {'weight': 0.6})
('de boor algorithm', 'convex optimization', {'weight': 0.6})
('de boor algorithm', 'memoization', {'weight': 0.6})
('de boor algorithm', 'richard bellman', {'weight': 0.6})
('de boor algorithm', 'exponential growth', {'weight': 0.6})
('de boor algorithm', 'charles e. leiserson', {'weight': 0.6})
('de boor algorithm', 'charles erwin wilson', {'weight': 0.6})
('de boor algorithm', 'interval scheduling', {'weight': 0.6})
('de boor algorithm', 'chart parser', {'weight': 0.6})
('de boor algorithm', 'travelling salesman problem', {'weight': 0.6})
('de boor algorithm', 'bellman equation', {'weight': 0.6})
('optimization algorithm', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('optimization algorithm', 'photoshop', {'weight': 0.6})
('optimization algorithm', 'sequence alignment', {'weight': 0.6})
('optimization algorithm', 'flow network', {'weight': 0.6})
('optimization algorithm', 'ellipsoid method', {'weight': 0.6})
('optimization algorithm', 'chain matrix multiplication', {'weight': 0.6})
('optimization algorithm', 'ieee', {'weight': 0.6})
('optimization algorithm', 'backtracking', {'weight': 0.6})
('optimization algorithm', 'nonlinear conjugate gradient method', {'weight': 0.6})
('optimization algorithm', 'dynamic problem', {'weight': 0.6})
('optimization algorithm', 'trust region', {'weight': 0.6})
('optimization algorithm', 'function (mathematics)', {'weight': 0.6})
('optimization algorithm', 'minimum spanning tree', {'weight': 0.6})
('optimization algorithm', 'mathematical optimization software', {'weight': 0.7})
('optimization algorithm', 'context-free grammar', {'weight': 0.6})
('optimization algorithm', 'branch and cut', {'weight': 0.6})
('optimization algorithm', 'state variable', {'weight': 0.6})
('optimization algorithm', 'least squares', {'weight': 0.7})
('optimization algorithm', 'treewidth', {'weight': 0.6})
('optimization algorithm', 'overlapping subproblem', {'weight': 0.6})
('optimization algorithm', 'taylor & francis', {'weight': 0.6})
('optimization algorithm', 'cutting-plane method', {'weight': 0.6})
('optimization algorithm', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('optimization algorithm', 'method of undetermined coefficients', {'weight': 0.6})
('optimization algorithm', 'combinatorial optimization', {'weight': 0.6})
('optimization algorithm', "newton's method in optimization", {'weight': 0.6})
('optimization algorithm', 'matrix chain multiplication', {'weight': 0.6})
('optimization algorithm', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('optimization algorithm', 'dynamic time warping', {'weight': 0.6})
('optimization algorithm', 'dynamic programming language', {'weight': 0.6})
('optimization algorithm', 'call-by-need', {'weight': 0.6})
('optimization algorithm', 'big-o notation', {'weight': 0.6})
('optimization algorithm', 'comparison of optimization software', {'weight': 0.6})
('optimization algorithm', 'quadratic programming', {'weight': 0.6})
('optimization algorithm', 'common lisp', {'weight': 0.6})
('optimization algorithm', 'barrier function', {'weight': 0.6})
('optimization algorithm', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('optimization algorithm', 'gradient descent', {'weight': 0.6})
('optimization algorithm', 'patricia selinger', {'weight': 0.6})
('optimization algorithm', 'discounting', {'weight': 0.6})
('optimization algorithm', 'ronald l. rivest', {'weight': 0.6})
('optimization algorithm', 'iterative method', {'weight': 0.6})
('optimization algorithm', 'important publications in optimization', {'weight': 0.7})
('optimization algorithm', 'limited-memory bfgs', {'weight': 0.6})
('optimization algorithm', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('optimization algorithm', 'longest common substring problem', {'weight': 0.6})
('optimization algorithm', 'clifford stein', {'weight': 0.6})
('optimization algorithm', 'computer chess', {'weight': 0.6})
('optimization algorithm', 'linear programming', {'weight': 0.6})
('optimization algorithm', 'bitonic tour', {'weight': 0.6})
('optimization algorithm', 'linear search problem', {'weight': 0.6})
('optimization algorithm', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('optimization algorithm', 'systems analysis', {'weight': 0.6})
('optimization algorithm', 'capital (economics)', {'weight': 0.6})
('optimization algorithm', 'levenshtein distance', {'weight': 0.6})
('optimization algorithm', 'nonlinear programming', {'weight': 0.6})
('optimization algorithm', 'computational complexity of mathematical operations', {'weight': 0.6})
('optimization algorithm', 'process optimization', {'weight': 0.7})
('optimization algorithm', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('optimization algorithm', 'gradient', {'weight': 0.6})
('optimization algorithm', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('optimization algorithm', 'mathematical optimization algorithms', {'weight': 0.7})
('optimization algorithm', 'bulletin of the american mathematical society', {'weight': 0.6})
('optimization algorithm', 'u.s. english', {'weight': 0.6})
('optimization algorithm', 'refutation table', {'weight': 0.6})
('optimization algorithm', 'heuristic algorithm', {'weight': 0.6})
('optimization algorithm', 'successive linear programming', {'weight': 0.6})
('optimization algorithm', 'optimal substructure', {'weight': 0.6})
('optimization algorithm', 'programming language', {'weight': 0.6})
('optimization algorithm', 'mergesort', {'weight': 0.6})
('optimization algorithm', "dijkstra's algorithm", {'weight': 0.6})
('optimization algorithm', 'subgradient method', {'weight': 0.6})
('optimization algorithm', 'call-by-name', {'weight': 0.6})
('optimization algorithm', 'longest increasing subsequence problem', {'weight': 0.6})
('optimization algorithm', 'edward prescott', {'weight': 0.6})
('optimization algorithm', 'exponential time', {'weight': 0.6})
('optimization algorithm', 'principle of optimality', {'weight': 0.6})
('optimization algorithm', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('optimization algorithm', 'mathematical game', {'weight': 0.6})
('optimization algorithm', 'nancy stokey', {'weight': 0.6})
('optimization algorithm', 'approximation algorithm', {'weight': 0.6})
('optimization algorithm', 'discrete-time', {'weight': 0.6})
('optimization algorithm', 'cyk algorithm', {'weight': 0.6})
('optimization algorithm', 'markov decision process', {'weight': 0.6})
('optimization algorithm', "powell's method", {'weight': 0.6})
('optimization algorithm', 'wolfe conditions', {'weight': 0.6})
('optimization algorithm', 'convexity in economics', {'weight': 0.6})
('optimization algorithm', 'transposition table', {'weight': 0.6})
('optimization algorithm', 'economics', {'weight': 0.6})
('optimization algorithm', 'backward induction', {'weight': 0.6})
('optimization algorithm', 'golden section search', {'weight': 0.6})
('optimization algorithm', 'edit distance', {'weight': 0.6})
('optimization algorithm', 'tree structure', {'weight': 0.6})
('optimization algorithm', 'exchange algorithm', {'weight': 0.6})
('optimization algorithm', 'dover publications', {'weight': 0.6})
('optimization algorithm', 'seam carving', {'weight': 0.6})
('optimization algorithm', 'recursive least squares', {'weight': 0.6})
('optimization algorithm', 'metaheuristic', {'weight': 0.6})
('optimization algorithm', 'quasi-newton method', {'weight': 0.6})
('optimization algorithm', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('optimization algorithm', 'robert e. lucas', {'weight': 0.6})
('optimization algorithm', 'non-convexity (economics)', {'weight': 0.6})
('optimization algorithm', 'sr1 formula', {'weight': 0.6})
('optimization algorithm', 'mathematical reviews', {'weight': 0.6})
('optimization algorithm', 'puzzle', {'weight': 0.6})
('optimization algorithm', 'associative array', {'weight': 0.6})
('optimization algorithm', 'shortest path problem', {'weight': 0.6})
('optimization algorithm', 'dynamic algorithm', {'weight': 0.6})
('optimization algorithm', 'augmented lagrangian method', {'weight': 0.6})
('optimization algorithm', 'charles delisi', {'weight': 0.6})
('optimization algorithm', 'greedy algorithm', {'weight': 0.6})
('optimization algorithm', "karmarkar's algorithm", {'weight': 0.6})
('optimization algorithm', 'lattice models', {'weight': 0.6})
('optimization algorithm', 'utility', {'weight': 0.6})
('optimization algorithm', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('optimization algorithm', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('optimization algorithm', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('optimization algorithm', 'international standard book number', {'weight': 0.6})
('optimization algorithm', 'undirected graph', {'weight': 0.6})
('optimization algorithm', 'scheme (programming language)', {'weight': 0.6})
('optimization algorithm', 'rna structure', {'weight': 0.6})
('optimization algorithm', 'hanoi', {'weight': 0.6})
('optimization algorithm', 'perl', {'weight': 0.6})
('optimization algorithm', 'digital object identifier', {'weight': 0.6})
('optimization algorithm', 'sequential quadratic programming', {'weight': 0.6})
('optimization algorithm', "dinic's algorithm", {'weight': 0.6})
('optimization algorithm', 'pseudo-polynomial time', {'weight': 0.6})
('optimization algorithm', 'partition problem', {'weight': 0.6})
('optimization algorithm', 'operations research', {'weight': 0.5})
('optimization algorithm', 'mathematical optimization society', {'weight': 0.7})
('optimization algorithm', 'hill climbing', {'weight': 0.6})
('optimization algorithm', 'top-down', {'weight': 0.6})
('optimization algorithm', 'de boor algorithm', {'weight': 0.6})
('optimization algorithm', 'optimization algorithm', {'weight': 1})
('optimization algorithm', "kruskal's algorithm", {'weight': 0.6})
('optimization algorithm', 'jacques philippe marie binet', {'weight': 0.6})
('optimization algorithm', 'tabu search', {'weight': 0.6})
('optimization algorithm', 'divide and conquer algorithm', {'weight': 0.6})
('optimization algorithm', "johnson's algorithm", {'weight': 0.6})
('optimization algorithm', 'variational calculus', {'weight': 0.7})
('optimization algorithm', 'evolutionary algorithm', {'weight': 0.6})
('optimization algorithm', 'clique-width', {'weight': 0.6})
('optimization algorithm', 'dynamic programming', {'weight': 0.6})
('optimization algorithm', 'subroutine', {'weight': 0.6})
('optimization algorithm', 'simulated annealing', {'weight': 0.6})
('optimization algorithm', 'tower of hanoi', {'weight': 0.6})
('optimization algorithm', 'branch and bound', {'weight': 0.6})
('optimization algorithm', 'engineering', {'weight': 0.6})
('optimization algorithm', 'matroid', {'weight': 0.6})
('optimization algorithm', 'viterbi algorithm', {'weight': 0.6})
('optimization algorithm', "lemke's algorithm", {'weight': 0.6})
('optimization algorithm', 'simplex algorithm', {'weight': 0.6})
('optimization algorithm', 'stochastic programming', {'weight': 0.6})
('optimization algorithm', 'hessian matrix', {'weight': 0.6})
('optimization algorithm', 'ibm system r', {'weight': 0.6})
('optimization algorithm', 'penalty method', {'weight': 0.6})
('optimization algorithm', 'prolog', {'weight': 0.6})
('optimization algorithm', 'time-invariant system', {'weight': 0.6})
('optimization algorithm', 'criss-cross algorithm', {'weight': 0.6})
('optimization algorithm', 'revised simplex algorithm', {'weight': 0.6})
('optimization algorithm', 'the mathematical association of america', {'weight': 0.6})
('optimization algorithm', 'line search', {'weight': 0.6})
('optimization algorithm', 'j (programming language)', {'weight': 0.6})
('optimization algorithm', 'word wrap', {'weight': 0.6})
('optimization algorithm', 'subset sum problem', {'weight': 0.6})
('optimization algorithm', 'integer programming', {'weight': 0.6})
('optimization algorithm', 'nucleosome', {'weight': 0.6})
('optimization algorithm', 'earley algorithm', {'weight': 0.6})
('optimization algorithm', 'referential transparency (computer science)', {'weight': 0.6})
('optimization algorithm', 'goal programming', {'weight': 0.7})
('optimization algorithm', 'recursion', {'weight': 0.6})
('optimization algorithm', 'mathematica', {'weight': 0.6})
('optimization algorithm', 'quicksort', {'weight': 0.6})
('optimization algorithm', 'recursion (computer science)', {'weight': 0.6})
('optimization algorithm', 'checkerboard', {'weight': 0.6})
('optimization algorithm', 'computer science', {'weight': 0.6})
('optimization algorithm', 'brute-force search', {'weight': 0.6})
('optimization algorithm', 'mathematics', {'weight': 0.6})
('optimization algorithm', 'depth-first search', {'weight': 0.6})
('optimization algorithm', 'top-down and bottom-up design', {'weight': 0.6})
('optimization algorithm', 'correspondence problem', {'weight': 0.6})
('optimization algorithm', 'transcription factor', {'weight': 0.6})
('optimization algorithm', 'tree decomposition', {'weight': 0.6})
('optimization algorithm', 'curve fitting', {'weight': 0.7})
('optimization algorithm', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('optimization algorithm', 'structural alignment', {'weight': 0.6})
('optimization algorithm', 'local convergence', {'weight': 0.6})
('optimization algorithm', 'knapsack problem', {'weight': 0.6})
('optimization algorithm', 'graph algorithm', {'weight': 0.6})
('optimization algorithm', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('optimization algorithm', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('optimization algorithm', 'hidden markov model', {'weight': 0.6})
('optimization algorithm', 'string (computer science)', {'weight': 0.6})
('optimization algorithm', 'bioinformatics', {'weight': 0.6})
('optimization algorithm', 'genetics', {'weight': 0.6})
('optimization algorithm', 'mathematical optimization', {'weight': 0.6})
('optimization algorithm', 'local search (optimization)', {'weight': 0.6})
('optimization algorithm', 'artificial neural networks', {'weight': 0.6})
('optimization algorithm', 'introduction to algorithms', {'weight': 0.6})
('optimization algorithm', 'thomas h. cormen', {'weight': 0.6})
('optimization algorithm', 'brachistochrone', {'weight': 0.7})
('optimization algorithm', 'music information retrieval', {'weight': 0.6})
('optimization algorithm', 'beat (music)', {'weight': 0.6})
('optimization algorithm', 'longest common subsequence problem', {'weight': 0.6})
('optimization algorithm', 'convex minimization', {'weight': 0.6})
('optimization algorithm', 'successive parabolic interpolation', {'weight': 0.6})
('optimization algorithm', 'fibonacci sequence', {'weight': 0.6})
('optimization algorithm', 'maximum subarray problem', {'weight': 0.6})
('optimization algorithm', 'convex optimization', {'weight': 0.6})
('optimization algorithm', 'memoization', {'weight': 0.6})
('optimization algorithm', 'richard bellman', {'weight': 0.6})
('optimization algorithm', 'exponential growth', {'weight': 0.6})
('optimization algorithm', 'charles e. leiserson', {'weight': 0.6})
('optimization algorithm', 'charles erwin wilson', {'weight': 0.6})
('optimization algorithm', 'interval scheduling', {'weight': 0.6})
('optimization algorithm', 'chart parser', {'weight': 0.6})
('optimization algorithm', 'travelling salesman problem', {'weight': 0.6})
('optimization algorithm', 'bellman equation', {'weight': 0.6})
('jacques philippe marie binet', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('jacques philippe marie binet', 'photoshop', {'weight': 0.6})
('jacques philippe marie binet', 'sequence alignment', {'weight': 0.6})
('jacques philippe marie binet', 'flow network', {'weight': 0.6})
('jacques philippe marie binet', 'ellipsoid method', {'weight': 0.6})
('jacques philippe marie binet', 'chain matrix multiplication', {'weight': 0.6})
('jacques philippe marie binet', 'ieee', {'weight': 0.6})
('jacques philippe marie binet', 'backtracking', {'weight': 0.6})
('jacques philippe marie binet', 'nonlinear conjugate gradient method', {'weight': 0.6})
('jacques philippe marie binet', 'dynamic problem', {'weight': 0.6})
('jacques philippe marie binet', 'trust region', {'weight': 0.6})
('jacques philippe marie binet', 'function (mathematics)', {'weight': 0.6})
('jacques philippe marie binet', 'minimum spanning tree', {'weight': 0.6})
('jacques philippe marie binet', 'context-free grammar', {'weight': 0.6})
('jacques philippe marie binet', 'branch and cut', {'weight': 0.6})
('jacques philippe marie binet', 'state variable', {'weight': 0.6})
('jacques philippe marie binet', 'treewidth', {'weight': 0.6})
('jacques philippe marie binet', 'overlapping subproblem', {'weight': 0.6})
('jacques philippe marie binet', '19th-century french mathematicians', {'weight': 0.5})
('jacques philippe marie binet', 'cutting-plane method', {'weight': 0.6})
('jacques philippe marie binet', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('jacques philippe marie binet', 'method of undetermined coefficients', {'weight': 0.6})
('jacques philippe marie binet', 'combinatorial optimization', {'weight': 0.6})
('jacques philippe marie binet', "newton's method in optimization", {'weight': 0.6})
('jacques philippe marie binet', 'matrix chain multiplication', {'weight': 0.6})
('jacques philippe marie binet', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('jacques philippe marie binet', 'dynamic time warping', {'weight': 0.6})
('jacques philippe marie binet', 'dynamic programming language', {'weight': 0.6})
('jacques philippe marie binet', 'call-by-need', {'weight': 0.6})
('jacques philippe marie binet', 'big-o notation', {'weight': 0.6})
('jacques philippe marie binet', 'comparison of optimization software', {'weight': 0.6})
('jacques philippe marie binet', 'quadratic programming', {'weight': 0.6})
('jacques philippe marie binet', 'common lisp', {'weight': 0.6})
('jacques philippe marie binet', 'barrier function', {'weight': 0.6})
('jacques philippe marie binet', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('jacques philippe marie binet', 'gradient descent', {'weight': 0.6})
('jacques philippe marie binet', 'patricia selinger', {'weight': 0.6})
('jacques philippe marie binet', 'discounting', {'weight': 0.6})
('jacques philippe marie binet', 'ronald l. rivest', {'weight': 0.6})
('jacques philippe marie binet', 'iterative method', {'weight': 0.6})
('jacques philippe marie binet', 'limited-memory bfgs', {'weight': 0.6})
('jacques philippe marie binet', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('jacques philippe marie binet', 'longest common substring problem', {'weight': 0.6})
('jacques philippe marie binet', 'clifford stein', {'weight': 0.6})
('jacques philippe marie binet', 'computer chess', {'weight': 0.6})
('jacques philippe marie binet', 'linear programming', {'weight': 0.6})
('jacques philippe marie binet', 'bitonic tour', {'weight': 0.6})
('jacques philippe marie binet', 'linear search problem', {'weight': 0.6})
('jacques philippe marie binet', '1786 births', {'weight': 0.5})
('jacques philippe marie binet', 'systems analysis', {'weight': 0.6})
('jacques philippe marie binet', 'capital (economics)', {'weight': 0.6})
('jacques philippe marie binet', 'levenshtein distance', {'weight': 0.6})
('jacques philippe marie binet', 'nonlinear programming', {'weight': 0.6})
('jacques philippe marie binet', 'computational complexity of mathematical operations', {'weight': 0.6})
('jacques philippe marie binet', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('jacques philippe marie binet', 'gradient', {'weight': 0.6})
('jacques philippe marie binet', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('jacques philippe marie binet', 'bulletin of the american mathematical society', {'weight': 0.6})
('jacques philippe marie binet', 'u.s. english', {'weight': 0.6})
('jacques philippe marie binet', 'refutation table', {'weight': 0.6})
('jacques philippe marie binet', 'heuristic algorithm', {'weight': 0.6})
('jacques philippe marie binet', 'successive linear programming', {'weight': 0.6})
('jacques philippe marie binet', 'optimal substructure', {'weight': 0.6})
('jacques philippe marie binet', 'taylor & francis', {'weight': 0.6})
('jacques philippe marie binet', 'programming language', {'weight': 0.6})
('jacques philippe marie binet', 'mergesort', {'weight': 0.6})
('jacques philippe marie binet', "dijkstra's algorithm", {'weight': 0.6})
('jacques philippe marie binet', 'subgradient method', {'weight': 0.6})
('jacques philippe marie binet', 'call-by-name', {'weight': 0.6})
('jacques philippe marie binet', 'longest increasing subsequence problem', {'weight': 0.6})
('jacques philippe marie binet', 'edward prescott', {'weight': 0.6})
('jacques philippe marie binet', 'exponential time', {'weight': 0.6})
('jacques philippe marie binet', 'principle of optimality', {'weight': 0.6})
('jacques philippe marie binet', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('jacques philippe marie binet', 'mathematical game', {'weight': 0.6})
('jacques philippe marie binet', 'nancy stokey', {'weight': 0.6})
('jacques philippe marie binet', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('jacques philippe marie binet', 'approximation algorithm', {'weight': 0.6})
('jacques philippe marie binet', 'discrete-time', {'weight': 0.6})
('jacques philippe marie binet', 'cyk algorithm', {'weight': 0.6})
('jacques philippe marie binet', 'markov decision process', {'weight': 0.6})
('jacques philippe marie binet', "powell's method", {'weight': 0.6})
('jacques philippe marie binet', 'wolfe conditions', {'weight': 0.6})
('jacques philippe marie binet', 'convexity in economics', {'weight': 0.6})
('jacques philippe marie binet', 'transposition table', {'weight': 0.6})
('jacques philippe marie binet', 'economics', {'weight': 0.6})
('jacques philippe marie binet', 'backward induction', {'weight': 0.6})
('jacques philippe marie binet', 'golden section search', {'weight': 0.6})
('jacques philippe marie binet', 'edit distance', {'weight': 0.6})
('jacques philippe marie binet', 'tree structure', {'weight': 0.6})
('jacques philippe marie binet', 'exchange algorithm', {'weight': 0.6})
('jacques philippe marie binet', 'dover publications', {'weight': 0.6})
('jacques philippe marie binet', 'seam carving', {'weight': 0.6})
('jacques philippe marie binet', 'recursive least squares', {'weight': 0.6})
('jacques philippe marie binet', 'metaheuristic', {'weight': 0.6})
('jacques philippe marie binet', 'quasi-newton method', {'weight': 0.6})
('jacques philippe marie binet', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('jacques philippe marie binet', 'robert e. lucas', {'weight': 0.6})
('jacques philippe marie binet', 'non-convexity (economics)', {'weight': 0.6})
('jacques philippe marie binet', 'sr1 formula', {'weight': 0.6})
('jacques philippe marie binet', 'mathematical reviews', {'weight': 0.6})
('jacques philippe marie binet', 'puzzle', {'weight': 0.6})
('jacques philippe marie binet', 'associative array', {'weight': 0.6})
('jacques philippe marie binet', 'shortest path problem', {'weight': 0.6})
('jacques philippe marie binet', 'dynamic algorithm', {'weight': 0.6})
('jacques philippe marie binet', 'augmented lagrangian method', {'weight': 0.6})
('jacques philippe marie binet', 'charles delisi', {'weight': 0.6})
('jacques philippe marie binet', 'greedy algorithm', {'weight': 0.6})
('jacques philippe marie binet', "karmarkar's algorithm", {'weight': 0.6})
('jacques philippe marie binet', 'lattice models', {'weight': 0.6})
('jacques philippe marie binet', 'utility', {'weight': 0.6})
('jacques philippe marie binet', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('jacques philippe marie binet', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('jacques philippe marie binet', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('jacques philippe marie binet', 'international standard book number', {'weight': 0.6})
('jacques philippe marie binet', 'undirected graph', {'weight': 0.6})
('jacques philippe marie binet', 'scheme (programming language)', {'weight': 0.6})
('jacques philippe marie binet', 'rna structure', {'weight': 0.6})
('jacques philippe marie binet', 'hanoi', {'weight': 0.6})
('jacques philippe marie binet', 'perl', {'weight': 0.6})
('jacques philippe marie binet', 'digital object identifier', {'weight': 0.6})
('jacques philippe marie binet', 'sequential quadratic programming', {'weight': 0.6})
('jacques philippe marie binet', "dinic's algorithm", {'weight': 0.6})
('jacques philippe marie binet', 'pseudo-polynomial time', {'weight': 0.6})
('jacques philippe marie binet', 'partition problem', {'weight': 0.6})
('jacques philippe marie binet', 'stochastic programming', {'weight': 0.6})
('jacques philippe marie binet', 'coll\xe3\xa8ge de france faculty', {'weight': 0.5})
('jacques philippe marie binet', '1856 deaths', {'weight': 0.5})
('jacques philippe marie binet', 'hill climbing', {'weight': 0.6})
('jacques philippe marie binet', 'top-down', {'weight': 0.6})
('jacques philippe marie binet', 'de boor algorithm', {'weight': 0.6})
('jacques philippe marie binet', 'optimization algorithm', {'weight': 0.6})
('jacques philippe marie binet', "kruskal's algorithm", {'weight': 0.6})
('jacques philippe marie binet', 'jacques philippe marie binet', {'weight': 1})
('jacques philippe marie binet', 'tabu search', {'weight': 0.6})
('jacques philippe marie binet', 'divide and conquer algorithm', {'weight': 0.6})
('jacques philippe marie binet', "johnson's algorithm", {'weight': 0.6})
('jacques philippe marie binet', 'evolutionary algorithm', {'weight': 0.6})
('jacques philippe marie binet', 'clique-width', {'weight': 0.6})
('jacques philippe marie binet', 'dynamic programming', {'weight': 0.6})
('jacques philippe marie binet', 'subroutine', {'weight': 0.6})
('jacques philippe marie binet', 'simulated annealing', {'weight': 0.6})
('jacques philippe marie binet', 'tower of hanoi', {'weight': 0.6})
('jacques philippe marie binet', 'branch and bound', {'weight': 0.6})
('jacques philippe marie binet', '\xe3\x89cole polytechnique alumni', {'weight': 0.5})
('jacques philippe marie binet', 'engineering', {'weight': 0.6})
('jacques philippe marie binet', 'matroid', {'weight': 0.6})
('jacques philippe marie binet', 'viterbi algorithm', {'weight': 0.6})
('jacques philippe marie binet', "lemke's algorithm", {'weight': 0.6})
('jacques philippe marie binet', 'simplex algorithm', {'weight': 0.6})
('jacques philippe marie binet', 'local search (optimization)', {'weight': 0.6})
('jacques philippe marie binet', 'hessian matrix', {'weight': 0.6})
('jacques philippe marie binet', 'ibm system r', {'weight': 0.6})
('jacques philippe marie binet', 'penalty method', {'weight': 0.6})
('jacques philippe marie binet', 'prolog', {'weight': 0.6})
('jacques philippe marie binet', 'time-invariant system', {'weight': 0.6})
('jacques philippe marie binet', 'criss-cross algorithm', {'weight': 0.6})
('jacques philippe marie binet', 'revised simplex algorithm', {'weight': 0.6})
('jacques philippe marie binet', 'the mathematical association of america', {'weight': 0.6})
('jacques philippe marie binet', 'line search', {'weight': 0.6})
('jacques philippe marie binet', 'j (programming language)', {'weight': 0.6})
('jacques philippe marie binet', 'word wrap', {'weight': 0.6})
('jacques philippe marie binet', 'subset sum problem', {'weight': 0.6})
('jacques philippe marie binet', 'integer programming', {'weight': 0.6})
('jacques philippe marie binet', 'nucleosome', {'weight': 0.6})
('jacques philippe marie binet', 'earley algorithm', {'weight': 0.6})
('jacques philippe marie binet', 'referential transparency (computer science)', {'weight': 0.6})
('jacques philippe marie binet', 'recursion', {'weight': 0.6})
('jacques philippe marie binet', 'mathematica', {'weight': 0.6})
('jacques philippe marie binet', 'quicksort', {'weight': 0.6})
('jacques philippe marie binet', 'recursion (computer science)', {'weight': 0.6})
('jacques philippe marie binet', 'checkerboard', {'weight': 0.6})
('jacques philippe marie binet', 'computer science', {'weight': 0.6})
('jacques philippe marie binet', 'brute-force search', {'weight': 0.6})
('jacques philippe marie binet', 'mathematics', {'weight': 0.6})
('jacques philippe marie binet', 'depth-first search', {'weight': 0.6})
('jacques philippe marie binet', 'top-down and bottom-up design', {'weight': 0.6})
('jacques philippe marie binet', 'correspondence problem', {'weight': 0.6})
('jacques philippe marie binet', 'transcription factor', {'weight': 0.6})
('jacques philippe marie binet', 'tree decomposition', {'weight': 0.6})
('jacques philippe marie binet', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('jacques philippe marie binet', 'structural alignment', {'weight': 0.6})
('jacques philippe marie binet', 'local convergence', {'weight': 0.6})
('jacques philippe marie binet', 'knapsack problem', {'weight': 0.6})
('jacques philippe marie binet', 'graph algorithm', {'weight': 0.6})
('jacques philippe marie binet', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('jacques philippe marie binet', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('jacques philippe marie binet', 'hidden markov model', {'weight': 0.6})
('jacques philippe marie binet', 'string (computer science)', {'weight': 0.6})
('jacques philippe marie binet', 'bioinformatics', {'weight': 0.6})
('jacques philippe marie binet', 'genetics', {'weight': 0.6})
('jacques philippe marie binet', 'mathematical optimization', {'weight': 0.6})
('jacques philippe marie binet', 'artificial neural networks', {'weight': 0.6})
('jacques philippe marie binet', 'introduction to algorithms', {'weight': 0.6})
('jacques philippe marie binet', 'thomas h. cormen', {'weight': 0.6})
('jacques philippe marie binet', 'music information retrieval', {'weight': 0.6})
('jacques philippe marie binet', 'beat (music)', {'weight': 0.6})
('jacques philippe marie binet', 'longest common subsequence problem', {'weight': 0.6})
('jacques philippe marie binet', 'convex minimization', {'weight': 0.6})
('jacques philippe marie binet', 'successive parabolic interpolation', {'weight': 0.6})
('jacques philippe marie binet', 'fibonacci sequence', {'weight': 0.6})
('jacques philippe marie binet', 'maximum subarray problem', {'weight': 0.6})
('jacques philippe marie binet', 'convex optimization', {'weight': 0.6})
('jacques philippe marie binet', 'memoization', {'weight': 0.6})
('jacques philippe marie binet', 'richard bellman', {'weight': 0.6})
('jacques philippe marie binet', 'exponential growth', {'weight': 0.6})
('jacques philippe marie binet', 'charles e. leiserson', {'weight': 0.6})
('jacques philippe marie binet', 'charles erwin wilson', {'weight': 0.6})
('jacques philippe marie binet', 'interval scheduling', {'weight': 0.6})
('jacques philippe marie binet', 'chart parser', {'weight': 0.6})
('jacques philippe marie binet', 'travelling salesman problem', {'weight': 0.6})
('jacques philippe marie binet', 'bellman equation', {'weight': 0.6})
('evolutionary algorithm', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('evolutionary algorithm', 'photoshop', {'weight': 0.6})
('evolutionary algorithm', 'sequence alignment', {'weight': 0.6})
('evolutionary algorithm', 'flow network', {'weight': 0.6})
('evolutionary algorithm', 'fitness approximation', {'weight': 0.7})
('evolutionary algorithm', 'ellipsoid method', {'weight': 0.6})
('evolutionary algorithm', 'chain matrix multiplication', {'weight': 0.6})
('evolutionary algorithm', 'ieee', {'weight': 0.6})
('evolutionary algorithm', 'backtracking', {'weight': 0.6})
('evolutionary algorithm', 'nonlinear conjugate gradient method', {'weight': 0.6})
('evolutionary algorithm', 'dynamic problem', {'weight': 0.6})
('evolutionary algorithm', 'trust region', {'weight': 0.6})
('evolutionary algorithm', 'function (mathematics)', {'weight': 0.6})
('evolutionary algorithm', 'evolutionary computation', {'weight': 0.7})
('evolutionary algorithm', 'minimum spanning tree', {'weight': 0.6})
('evolutionary algorithm', 'context-free grammar', {'weight': 0.6})
('evolutionary algorithm', 'evolutionary robotics', {'weight': 0.7})
('evolutionary algorithm', 'branch and cut', {'weight': 0.6})
('evolutionary algorithm', 'state variable', {'weight': 0.6})
('evolutionary algorithm', 'treewidth', {'weight': 0.6})
('evolutionary algorithm', 'optimization algorithms and methods', {'weight': 0.5})
('evolutionary algorithm', 'overlapping subproblem', {'weight': 0.6})
('evolutionary algorithm', 'taylor & francis', {'weight': 0.6})
('evolutionary algorithm', 'evolution', {'weight': 0.5})
('evolutionary algorithm', 'cutting-plane method', {'weight': 0.6})
('evolutionary algorithm', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('evolutionary algorithm', 'method of undetermined coefficients', {'weight': 0.6})
('evolutionary algorithm', 'combinatorial optimization', {'weight': 0.6})
('evolutionary algorithm', "newton's method in optimization", {'weight': 0.6})
('evolutionary algorithm', 'developmental biology', {'weight': 0.7})
('evolutionary algorithm', 'matrix chain multiplication', {'weight': 0.6})
('evolutionary algorithm', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('evolutionary algorithm', 'dynamic time warping', {'weight': 0.6})
('evolutionary algorithm', 'dynamic programming language', {'weight': 0.6})
('evolutionary algorithm', 'call-by-need', {'weight': 0.6})
('evolutionary algorithm', 'big-o notation', {'weight': 0.6})
('evolutionary algorithm', 'comparison of optimization software', {'weight': 0.6})
('evolutionary algorithm', 'quadratic programming', {'weight': 0.6})
('evolutionary algorithm', 'common lisp', {'weight': 0.6})
('evolutionary algorithm', 'barrier function', {'weight': 0.6})
('evolutionary algorithm', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('evolutionary algorithm', 'fitness function', {'weight': 0.7})
('evolutionary algorithm', 'gradient descent', {'weight': 0.6})
('evolutionary algorithm', 'patricia selinger', {'weight': 0.6})
('evolutionary algorithm', 'discounting', {'weight': 0.6})
('evolutionary algorithm', 'fitness landscape', {'weight': 0.7})
('evolutionary algorithm', 'ronald l. rivest', {'weight': 0.6})
('evolutionary algorithm', 'iterative method', {'weight': 0.6})
('evolutionary algorithm', 'augmented lagrangian method', {'weight': 0.6})
('evolutionary algorithm', 'limited-memory bfgs', {'weight': 0.6})
('evolutionary algorithm', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('evolutionary algorithm', 'longest common substring problem', {'weight': 0.6})
('evolutionary algorithm', 'clifford stein', {'weight': 0.6})
('evolutionary algorithm', 'computer chess', {'weight': 0.6})
('evolutionary algorithm', 'linear programming', {'weight': 0.6})
('evolutionary algorithm', 'bitonic tour', {'weight': 0.6})
('evolutionary algorithm', 'linear search problem', {'weight': 0.6})
('evolutionary algorithm', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('evolutionary algorithm', 'systems analysis', {'weight': 0.6})
('evolutionary algorithm', 'capital (economics)', {'weight': 0.6})
('evolutionary algorithm', 'levenshtein distance', {'weight': 0.6})
('evolutionary algorithm', 'nonlinear programming', {'weight': 0.6})
('evolutionary algorithm', 'computational complexity of mathematical operations', {'weight': 0.6})
('evolutionary algorithm', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('evolutionary algorithm', 'gradient', {'weight': 0.6})
('evolutionary algorithm', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('evolutionary algorithm', 'bulletin of the american mathematical society', {'weight': 0.6})
('evolutionary algorithm', 'program synthesis', {'weight': 0.7})
('evolutionary algorithm', 'u.s. english', {'weight': 0.6})
('evolutionary algorithm', 'refutation table', {'weight': 0.6})
('evolutionary algorithm', 'heuristic algorithm', {'weight': 0.6})
('evolutionary algorithm', 'successive linear programming', {'weight': 0.6})
('evolutionary algorithm', 'optimal substructure', {'weight': 0.6})
('evolutionary algorithm', 'programming language', {'weight': 0.6})
('evolutionary algorithm', 'map of evolutionary algorithms', {'weight': 0.7})
('evolutionary algorithm', 'mergesort', {'weight': 0.6})
('evolutionary algorithm', "dijkstra's algorithm", {'weight': 0.6})
('evolutionary algorithm', 'subgradient method', {'weight': 0.6})
('evolutionary algorithm', 'call-by-name', {'weight': 0.6})
('evolutionary algorithm', 'list of digital organism simulators', {'weight': 0.7})
('evolutionary algorithm', 'longest increasing subsequence problem', {'weight': 0.6})
('evolutionary algorithm', 'edward prescott', {'weight': 0.6})
('evolutionary algorithm', 'genetic operators', {'weight': 0.7})
('evolutionary algorithm', 'exponential time', {'weight': 0.6})
('evolutionary algorithm', 'principle of optimality', {'weight': 0.6})
('evolutionary algorithm', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('evolutionary algorithm', 'mathematical game', {'weight': 0.6})
('evolutionary algorithm', 'nancy stokey', {'weight': 0.6})
('evolutionary algorithm', 'approximation algorithm', {'weight': 0.6})
('evolutionary algorithm', 'discrete-time', {'weight': 0.6})
('evolutionary algorithm', 'cyk algorithm', {'weight': 0.6})
('evolutionary algorithm', 'markov decision process', {'weight': 0.6})
('evolutionary algorithm', 'evolutionary algorithms', {'weight': 0.5})
('evolutionary algorithm', "powell's method", {'weight': 0.6})
('evolutionary algorithm', 'wolfe conditions', {'weight': 0.6})
('evolutionary algorithm', 'convexity in economics', {'weight': 0.6})
('evolutionary algorithm', 'transposition table', {'weight': 0.6})
('evolutionary algorithm', 'economics', {'weight': 0.6})
('evolutionary algorithm', 'backward induction', {'weight': 0.6})
('evolutionary algorithm', 'golden section search', {'weight': 0.6})
('evolutionary algorithm', 'edit distance', {'weight': 0.6})
('evolutionary algorithm', 'tree structure', {'weight': 0.6})
('evolutionary algorithm', 'artificial development', {'weight': 0.7})
('evolutionary algorithm', 'exchange algorithm', {'weight': 0.6})
('evolutionary algorithm', 'dover publications', {'weight': 0.6})
('evolutionary algorithm', 'seam carving', {'weight': 0.6})
('evolutionary algorithm', 'recursive least squares', {'weight': 0.6})
('evolutionary algorithm', 'metaheuristic', {'weight': 0.6})
('evolutionary algorithm', 'quasi-newton method', {'weight': 0.6})
('evolutionary algorithm', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('evolutionary algorithm', 'robert e. lucas', {'weight': 0.6})
('evolutionary algorithm', 'non-convexity (economics)', {'weight': 0.6})
('evolutionary algorithm', 'sr1 formula', {'weight': 0.6})
('evolutionary algorithm', 'mathematical reviews', {'weight': 0.6})
('evolutionary algorithm', 'puzzle', {'weight': 0.6})
('evolutionary algorithm', 'associative array', {'weight': 0.6})
('evolutionary algorithm', 'shortest path problem', {'weight': 0.6})
('evolutionary algorithm', 'dynamic algorithm', {'weight': 0.6})
('evolutionary algorithm', 'cybernetics', {'weight': 0.5})
('evolutionary algorithm', 'charles delisi', {'weight': 0.6})
('evolutionary algorithm', 'greedy algorithm', {'weight': 0.6})
('evolutionary algorithm', "karmarkar's algorithm", {'weight': 0.6})
('evolutionary algorithm', 'lattice models', {'weight': 0.6})
('evolutionary algorithm', 'utility', {'weight': 0.6})
('evolutionary algorithm', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('evolutionary algorithm', 'estimation of distribution algorithm', {'weight': 0.7})
('evolutionary algorithm', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('evolutionary algorithm', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('evolutionary algorithm', 'international standard book number', {'weight': 0.6})
('evolutionary algorithm', 'undirected graph', {'weight': 0.6})
('evolutionary algorithm', 'scheme (programming language)', {'weight': 0.6})
('evolutionary algorithm', 'rna structure', {'weight': 0.6})
('evolutionary algorithm', 'hanoi', {'weight': 0.6})
('evolutionary algorithm', 'perl', {'weight': 0.6})
('evolutionary algorithm', 'digital object identifier', {'weight': 0.6})
('evolutionary algorithm', 'sequential quadratic programming', {'weight': 0.6})
('evolutionary algorithm', "dinic's algorithm", {'weight': 0.6})
('evolutionary algorithm', 'pseudo-polynomial time', {'weight': 0.6})
('evolutionary algorithm', 'artificial intelligence portal', {'weight': 0.7})
('evolutionary algorithm', 'partition problem', {'weight': 0.6})
('evolutionary algorithm', 'stochastic programming', {'weight': 0.6})
('evolutionary algorithm', 'hill climbing', {'weight': 0.6})
('evolutionary algorithm', 'top-down', {'weight': 0.6})
('evolutionary algorithm', 'de boor algorithm', {'weight': 0.6})
('evolutionary algorithm', 'optimization algorithm', {'weight': 0.6})
('evolutionary algorithm', "kruskal's algorithm", {'weight': 0.6})
('evolutionary algorithm', 'digital organism', {'weight': 0.7})
('evolutionary algorithm', 'jacques philippe marie binet', {'weight': 0.6})
('evolutionary algorithm', 'tabu search', {'weight': 0.6})
('evolutionary algorithm', 'divide and conquer algorithm', {'weight': 0.6})
('evolutionary algorithm', "johnson's algorithm", {'weight': 0.6})
('evolutionary algorithm', 'evolutionary algorithm', {'weight': 1})
('evolutionary algorithm', 'clique-width', {'weight': 0.6})
('evolutionary algorithm', 'dynamic programming', {'weight': 0.6})
('evolutionary algorithm', 'subroutine', {'weight': 0.6})
('evolutionary algorithm', 'simulated annealing', {'weight': 0.6})
('evolutionary algorithm', 'tower of hanoi', {'weight': 0.6})
('evolutionary algorithm', 'branch and bound', {'weight': 0.6})
('evolutionary algorithm', 'test functions for optimization', {'weight': 0.7})
('evolutionary algorithm', 'engineering', {'weight': 0.6})
('evolutionary algorithm', 'matroid', {'weight': 0.6})
('evolutionary algorithm', 'viterbi algorithm', {'weight': 0.6})
('evolutionary algorithm', "lemke's algorithm", {'weight': 0.6})
('evolutionary algorithm', 'simplex algorithm', {'weight': 0.6})
('evolutionary algorithm', 'local search (optimization)', {'weight': 0.6})
('evolutionary algorithm', 'hessian matrix', {'weight': 0.6})
('evolutionary algorithm', 'ibm system r', {'weight': 0.6})
('evolutionary algorithm', 'penalty method', {'weight': 0.6})
('evolutionary algorithm', 'interactive evolutionary computation', {'weight': 0.7})
('evolutionary algorithm', 'prolog', {'weight': 0.6})
('evolutionary algorithm', 'time-invariant system', {'weight': 0.6})
('evolutionary algorithm', 'criss-cross algorithm', {'weight': 0.6})
('evolutionary algorithm', 'revised simplex algorithm', {'weight': 0.6})
('evolutionary algorithm', 'the mathematical association of america', {'weight': 0.6})
('evolutionary algorithm', 'line search', {'weight': 0.6})
('evolutionary algorithm', 'j (programming language)', {'weight': 0.6})
('evolutionary algorithm', 'word wrap', {'weight': 0.6})
('evolutionary algorithm', 'subset sum problem', {'weight': 0.6})
('evolutionary algorithm', 'integer programming', {'weight': 0.6})
('evolutionary algorithm', 'nucleosome', {'weight': 0.6})
('evolutionary algorithm', 'earley algorithm', {'weight': 0.6})
('evolutionary algorithm', 'referential transparency (computer science)', {'weight': 0.6})
('evolutionary algorithm', 'recursion', {'weight': 0.6})
('evolutionary algorithm', 'mathematica', {'weight': 0.6})
('evolutionary algorithm', 'quicksort', {'weight': 0.6})
('evolutionary algorithm', 'recursion (computer science)', {'weight': 0.6})
('evolutionary algorithm', 'checkerboard', {'weight': 0.6})
('evolutionary algorithm', 'computer science', {'weight': 0.6})
('evolutionary algorithm', 'brute-force search', {'weight': 0.6})
('evolutionary algorithm', 'mathematics', {'weight': 0.6})
('evolutionary algorithm', 'depth-first search', {'weight': 0.6})
('evolutionary algorithm', 'top-down and bottom-up design', {'weight': 0.6})
('evolutionary algorithm', 'correspondence problem', {'weight': 0.6})
('evolutionary algorithm', 'transcription factor', {'weight': 0.6})
('evolutionary algorithm', 'tree decomposition', {'weight': 0.6})
('evolutionary algorithm', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('evolutionary algorithm', 'structural alignment', {'weight': 0.6})
('evolutionary algorithm', 'local convergence', {'weight': 0.6})
('evolutionary algorithm', 'no free lunch in search and optimization', {'weight': 0.7})
('evolutionary algorithm', 'knapsack problem', {'weight': 0.6})
('evolutionary algorithm', 'graph algorithm', {'weight': 0.6})
('evolutionary algorithm', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('evolutionary algorithm', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('evolutionary algorithm', 'hidden markov model', {'weight': 0.6})
('evolutionary algorithm', 'string (computer science)', {'weight': 0.6})
('evolutionary algorithm', 'bioinformatics', {'weight': 0.6})
('evolutionary algorithm', 'genetics', {'weight': 0.6})
('evolutionary algorithm', 'mathematical optimization', {'weight': 0.6})
('evolutionary algorithm', 'artificial neural networks', {'weight': 0.6})
('evolutionary algorithm', 'introduction to algorithms', {'weight': 0.6})
('evolutionary algorithm', 'thomas h. cormen', {'weight': 0.6})
('evolutionary algorithm', 'music information retrieval', {'weight': 0.6})
('evolutionary algorithm', 'beat (music)', {'weight': 0.6})
('evolutionary algorithm', 'longest common subsequence problem', {'weight': 0.6})
('evolutionary algorithm', 'convex minimization', {'weight': 0.6})
('evolutionary algorithm', 'successive parabolic interpolation', {'weight': 0.6})
('evolutionary algorithm', 'fibonacci sequence', {'weight': 0.6})
('evolutionary algorithm', 'maximum subarray problem', {'weight': 0.6})
('evolutionary algorithm', 'convex optimization', {'weight': 0.6})
('evolutionary algorithm', 'memoization', {'weight': 0.6})
('evolutionary algorithm', 'richard bellman', {'weight': 0.6})
('evolutionary algorithm', 'exponential growth', {'weight': 0.6})
('evolutionary algorithm', 'charles e. leiserson', {'weight': 0.6})
('evolutionary algorithm', 'charles erwin wilson', {'weight': 0.6})
('evolutionary algorithm', 'interval scheduling', {'weight': 0.6})
('evolutionary algorithm', 'chart parser', {'weight': 0.6})
('evolutionary algorithm', 'travelling salesman problem', {'weight': 0.6})
('evolutionary algorithm', 'bellman equation', {'weight': 0.6})
('dynamic programming', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('dynamic programming', 'photoshop', {'weight': 0.6})
('dynamic programming', 'sequence alignment', {'weight': 0.6})
('dynamic programming', 'flow network', {'weight': 0.6})
('dynamic programming', 'charles erwin wilson', {'weight': 0.6})
('dynamic programming', 'ellipsoid method', {'weight': 0.6})
('dynamic programming', 'chain matrix multiplication', {'weight': 0.6})
('dynamic programming', 'ieee', {'weight': 0.6})
('dynamic programming', 'backtracking', {'weight': 0.6})
('dynamic programming', 'nonlinear conjugate gradient method', {'weight': 0.6})
('dynamic programming', 'dynamic problem', {'weight': 0.6})
('dynamic programming', 'trust region', {'weight': 0.6})
('dynamic programming', 'function (mathematics)', {'weight': 0.6})
('dynamic programming', 'minimum spanning tree', {'weight': 0.6})
('dynamic programming', 'context-free grammar', {'weight': 0.6})
('dynamic programming', 'tabu search', {'weight': 0.6})
('dynamic programming', 'branch and cut', {'weight': 0.6})
('dynamic programming', 'state variable', {'weight': 0.6})
('dynamic programming', 'treewidth', {'weight': 0.6})
('dynamic programming', 'optimization algorithms and methods', {'weight': 0.5})
('dynamic programming', 'overlapping subproblem', {'weight': 0.6})
('dynamic programming', 'taylor & francis', {'weight': 0.6})
('dynamic programming', 'cutting-plane method', {'weight': 0.6})
('dynamic programming', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('dynamic programming', 'method of undetermined coefficients', {'weight': 0.6})
('dynamic programming', 'combinatorial optimization', {'weight': 0.6})
('dynamic programming', "newton's method in optimization", {'weight': 0.6})
('dynamic programming', 'matrix chain multiplication', {'weight': 0.6})
('dynamic programming', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('dynamic programming', 'dynamic time warping', {'weight': 0.6})
('dynamic programming', 'dynamic programming language', {'weight': 0.6})
('dynamic programming', 'call-by-need', {'weight': 0.6})
('dynamic programming', 'big-o notation', {'weight': 0.6})
('dynamic programming', 'comparison of optimization software', {'weight': 0.6})
('dynamic programming', 'quadratic programming', {'weight': 0.6})
('dynamic programming', 'common lisp', {'weight': 0.6})
('dynamic programming', 'barrier function', {'weight': 0.6})
('dynamic programming', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('dynamic programming', 'gradient descent', {'weight': 0.6})
('dynamic programming', 'patricia selinger', {'weight': 0.6})
('dynamic programming', 'discounting', {'weight': 0.6})
('dynamic programming', 'ronald l. rivest', {'weight': 0.6})
('dynamic programming', 'iterative method', {'weight': 0.6})
('dynamic programming', 'limited-memory bfgs', {'weight': 0.6})
('dynamic programming', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('dynamic programming', 'longest common substring problem', {'weight': 0.6})
('dynamic programming', 'clifford stein', {'weight': 0.6})
('dynamic programming', 'computer chess', {'weight': 0.6})
('dynamic programming', 'linear programming', {'weight': 0.6})
('dynamic programming', 'bitonic tour', {'weight': 0.6})
('dynamic programming', 'linear search problem', {'weight': 0.6})
('dynamic programming', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('dynamic programming', 'systems analysis', {'weight': 0.6})
('dynamic programming', 'capital (economics)', {'weight': 0.6})
('dynamic programming', 'levenshtein distance', {'weight': 0.6})
('dynamic programming', 'nonlinear programming', {'weight': 0.6})
('dynamic programming', 'computational complexity of mathematical operations', {'weight': 0.6})
('dynamic programming', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('dynamic programming', 'gradient', {'weight': 0.6})
('dynamic programming', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('dynamic programming', 'bulletin of the american mathematical society', {'weight': 0.6})
('dynamic programming', 'u.s. english', {'weight': 0.6})
('dynamic programming', 'refutation table', {'weight': 0.6})
('dynamic programming', 'heuristic algorithm', {'weight': 0.6})
('dynamic programming', 'successive linear programming', {'weight': 0.6})
('dynamic programming', 'optimal substructure', {'weight': 0.6})
('dynamic programming', 'programming language', {'weight': 0.6})
('dynamic programming', 'mergesort', {'weight': 0.6})
('dynamic programming', "dijkstra's algorithm", {'weight': 0.6})
('dynamic programming', 'subgradient method', {'weight': 0.6})
('dynamic programming', 'call-by-name', {'weight': 0.6})
('dynamic programming', 'longest increasing subsequence problem', {'weight': 0.6})
('dynamic programming', 'edward prescott', {'weight': 0.6})
('dynamic programming', 'exponential time', {'weight': 0.6})
('dynamic programming', 'principle of optimality', {'weight': 0.6})
('dynamic programming', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('dynamic programming', 'mathematical game', {'weight': 0.6})
('dynamic programming', 'nancy stokey', {'weight': 0.6})
('dynamic programming', 'approximation algorithm', {'weight': 0.6})
('dynamic programming', 'discrete-time', {'weight': 0.6})
('dynamic programming', 'cyk algorithm', {'weight': 0.6})
('dynamic programming', 'markov decision process', {'weight': 0.6})
('dynamic programming', "powell's method", {'weight': 0.6})
('dynamic programming', 'wolfe conditions', {'weight': 0.6})
('dynamic programming', 'convexity in economics', {'weight': 0.7})
('dynamic programming', 'transposition table', {'weight': 0.6})
('dynamic programming', 'economics', {'weight': 0.6})
('dynamic programming', 'backward induction', {'weight': 0.6})
('dynamic programming', 'golden section search', {'weight': 0.6})
('dynamic programming', 'edit distance', {'weight': 0.6})
('dynamic programming', 'tree structure', {'weight': 0.6})
('dynamic programming', 'exchange algorithm', {'weight': 0.6})
('dynamic programming', 'undirected graph', {'weight': 0.6})
('dynamic programming', 'seam carving', {'weight': 0.6})
('dynamic programming', 'recursive least squares', {'weight': 0.6})
('dynamic programming', 'metaheuristic', {'weight': 0.6})
('dynamic programming', 'quasi-newton method', {'weight': 0.6})
('dynamic programming', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('dynamic programming', 'robert e. lucas', {'weight': 0.6})
('dynamic programming', 'optimal control', {'weight': 0.5})
('dynamic programming', 'non-convexity (economics)', {'weight': 0.7})
('dynamic programming', 'sr1 formula', {'weight': 0.6})
('dynamic programming', 'mathematical reviews', {'weight': 0.6})
('dynamic programming', 'puzzle', {'weight': 0.6})
('dynamic programming', 'associative array', {'weight': 0.6})
('dynamic programming', 'shortest path problem', {'weight': 0.6})
('dynamic programming', 'dynamic algorithm', {'weight': 0.6})
('dynamic programming', 'augmented lagrangian method', {'weight': 0.6})
('dynamic programming', 'charles delisi', {'weight': 0.6})
('dynamic programming', 'greedy algorithm', {'weight': 0.7})
('dynamic programming', "karmarkar's algorithm", {'weight': 0.6})
('dynamic programming', 'lattice models', {'weight': 0.6})
('dynamic programming', 'utility', {'weight': 0.6})
('dynamic programming', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('dynamic programming', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('dynamic programming', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('dynamic programming', 'international standard book number', {'weight': 0.6})
('dynamic programming', 'equations', {'weight': 0.5})
('dynamic programming', 'scheme (programming language)', {'weight': 0.6})
('dynamic programming', 'rna structure', {'weight': 0.6})
('dynamic programming', 'hanoi', {'weight': 0.6})
('dynamic programming', 'perl', {'weight': 0.6})
('dynamic programming', 'digital object identifier', {'weight': 0.6})
('dynamic programming', 'sequential quadratic programming', {'weight': 0.6})
('dynamic programming', "dinic's algorithm", {'weight': 0.6})
('dynamic programming', 'pseudo-polynomial time', {'weight': 0.6})
('dynamic programming', 'partition problem', {'weight': 0.6})
('dynamic programming', 'operations research', {'weight': 0.5})
('dynamic programming', 'systems engineering', {'weight': 0.5})
('dynamic programming', 'hill climbing', {'weight': 0.6})
('dynamic programming', 'top-down', {'weight': 0.6})
('dynamic programming', 'de boor algorithm', {'weight': 0.6})
('dynamic programming', 'optimization algorithm', {'weight': 0.6})
('dynamic programming', "kruskal's algorithm", {'weight': 0.6})
('dynamic programming', 'jacques philippe marie binet', {'weight': 0.6})
('dynamic programming', 'dover publications', {'weight': 0.6})
('dynamic programming', 'computer science portal', {'weight': 0.7})
('dynamic programming', 'divide and conquer algorithm', {'weight': 0.6})
('dynamic programming', "johnson's algorithm", {'weight': 0.6})
('dynamic programming', 'evolutionary algorithm', {'weight': 0.6})
('dynamic programming', 'clique-width', {'weight': 0.6})
('dynamic programming', 'dynamic programming', {'weight': 1})
('dynamic programming', 'subroutine', {'weight': 0.6})
('dynamic programming', 'simulated annealing', {'weight': 0.6})
('dynamic programming', 'tower of hanoi', {'weight': 0.6})
('dynamic programming', 'branch and bound', {'weight': 0.6})
('dynamic programming', 'engineering', {'weight': 0.6})
('dynamic programming', 'matroid', {'weight': 0.6})
('dynamic programming', 'viterbi algorithm', {'weight': 0.6})
('dynamic programming', "lemke's algorithm", {'weight': 0.6})
('dynamic programming', 'simplex algorithm', {'weight': 0.6})
('dynamic programming', 'stochastic programming', {'weight': 0.7})
('dynamic programming', 'hessian matrix', {'weight': 0.6})
('dynamic programming', 'ibm system r', {'weight': 0.6})
('dynamic programming', 'penalty method', {'weight': 0.6})
('dynamic programming', 'prolog', {'weight': 0.6})
('dynamic programming', 'time-invariant system', {'weight': 0.6})
('dynamic programming', 'criss-cross algorithm', {'weight': 0.6})
('dynamic programming', 'revised simplex algorithm', {'weight': 0.6})
('dynamic programming', 'the mathematical association of america', {'weight': 0.6})
('dynamic programming', 'line search', {'weight': 0.6})
('dynamic programming', 'j (programming language)', {'weight': 0.6})
('dynamic programming', 'word wrap', {'weight': 0.6})
('dynamic programming', 'subset sum problem', {'weight': 0.6})
('dynamic programming', 'integer programming', {'weight': 0.6})
('dynamic programming', 'nucleosome', {'weight': 0.6})
('dynamic programming', 'earley algorithm', {'weight': 0.6})
('dynamic programming', 'referential transparency (computer science)', {'weight': 0.6})
('dynamic programming', 'recursion', {'weight': 0.6})
('dynamic programming', 'mathematica', {'weight': 0.6})
('dynamic programming', 'quicksort', {'weight': 0.6})
('dynamic programming', 'recursion (computer science)', {'weight': 0.6})
('dynamic programming', 'computer science', {'weight': 0.6})
('dynamic programming', 'brute-force search', {'weight': 0.6})
('dynamic programming', 'mathematics', {'weight': 0.6})
('dynamic programming', 'depth-first search', {'weight': 0.6})
('dynamic programming', 'top-down and bottom-up design', {'weight': 0.6})
('dynamic programming', 'correspondence problem', {'weight': 0.6})
('dynamic programming', 'transcription factor', {'weight': 0.6})
('dynamic programming', 'tree decomposition', {'weight': 0.6})
('dynamic programming', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('dynamic programming', 'structural alignment', {'weight': 0.6})
('dynamic programming', 'local convergence', {'weight': 0.6})
('dynamic programming', 'knapsack problem', {'weight': 0.6})
('dynamic programming', 'graph algorithm', {'weight': 0.6})
('dynamic programming', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('dynamic programming', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('dynamic programming', 'hidden markov model', {'weight': 0.6})
('dynamic programming', 'string (computer science)', {'weight': 0.6})
('dynamic programming', 'bioinformatics', {'weight': 0.6})
('dynamic programming', 'genetics', {'weight': 0.6})
('dynamic programming', 'mathematical optimization', {'weight': 0.6})
('dynamic programming', 'local search (optimization)', {'weight': 0.6})
('dynamic programming', 'artificial neural networks', {'weight': 0.6})
('dynamic programming', 'introduction to algorithms', {'weight': 0.6})
('dynamic programming', 'thomas h. cormen', {'weight': 0.6})
('dynamic programming', 'music information retrieval', {'weight': 0.6})
('dynamic programming', 'beat (music)', {'weight': 0.6})
('dynamic programming', 'longest common subsequence problem', {'weight': 0.6})
('dynamic programming', 'convex minimization', {'weight': 0.6})
('dynamic programming', 'successive parabolic interpolation', {'weight': 0.6})
('dynamic programming', 'fibonacci sequence', {'weight': 0.6})
('dynamic programming', 'maximum subarray problem', {'weight': 0.6})
('dynamic programming', 'convex optimization', {'weight': 0.6})
('dynamic programming', 'memoization', {'weight': 0.6})
('dynamic programming', 'richard bellman', {'weight': 0.6})
('dynamic programming', 'exponential growth', {'weight': 0.6})
('dynamic programming', 'charles e. leiserson', {'weight': 0.6})
('dynamic programming', 'checkerboard', {'weight': 0.6})
('dynamic programming', 'interval scheduling', {'weight': 0.6})
('dynamic programming', 'chart parser', {'weight': 0.6})
('dynamic programming', 'travelling salesman problem', {'weight': 0.6})
('dynamic programming', 'bellman equation', {'weight': 0.6})
('tower of hanoi', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('tower of hanoi', 'photoshop', {'weight': 0.6})
('tower of hanoi', 'sequence alignment', {'weight': 0.6})
('tower of hanoi', 'flow network', {'weight': 0.6})
('tower of hanoi', 'mechanical puzzles', {'weight': 0.5})
('tower of hanoi', 'ellipsoid method', {'weight': 0.6})
('tower of hanoi', 'chain matrix multiplication', {'weight': 0.6})
('tower of hanoi', 'ieee', {'weight': 0.6})
('tower of hanoi', 'backtracking', {'weight': 0.6})
('tower of hanoi', 'nonlinear conjugate gradient method', {'weight': 0.6})
('tower of hanoi', 'dynamic problem', {'weight': 0.6})
('tower of hanoi', 'trust region', {'weight': 0.6})
('tower of hanoi', 'function (mathematics)', {'weight': 0.6})
('tower of hanoi', 'minimum spanning tree', {'weight': 0.6})
('tower of hanoi', 'context-free grammar', {'weight': 0.6})
('tower of hanoi', 'branch and cut', {'weight': 0.6})
('tower of hanoi', 'state variable', {'weight': 0.6})
('tower of hanoi', 'treewidth', {'weight': 0.6})
('tower of hanoi', 'overlapping subproblem', {'weight': 0.6})
('tower of hanoi', 'taylor & francis', {'weight': 0.6})
('tower of hanoi', 'cutting-plane method', {'weight': 0.6})
('tower of hanoi', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('tower of hanoi', 'method of undetermined coefficients', {'weight': 0.6})
('tower of hanoi', 'combinatorial optimization', {'weight': 0.6})
('tower of hanoi', "newton's method in optimization", {'weight': 0.6})
('tower of hanoi', 'matrix chain multiplication', {'weight': 0.6})
('tower of hanoi', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('tower of hanoi', 'dynamic time warping', {'weight': 0.6})
('tower of hanoi', 'dynamic programming language', {'weight': 0.6})
('tower of hanoi', 'call-by-need', {'weight': 0.6})
('tower of hanoi', 'big-o notation', {'weight': 0.6})
('tower of hanoi', 'comparison of optimization software', {'weight': 0.6})
('tower of hanoi', 'quadratic programming', {'weight': 0.6})
('tower of hanoi', 'common lisp', {'weight': 0.6})
('tower of hanoi', 'barrier function', {'weight': 0.6})
('tower of hanoi', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('tower of hanoi', 'gradient descent', {'weight': 0.6})
('tower of hanoi', 'patricia selinger', {'weight': 0.6})
('tower of hanoi', 'discounting', {'weight': 0.6})
('tower of hanoi', 'ronald l. rivest', {'weight': 0.6})
('tower of hanoi', 'iterative method', {'weight': 0.6})
('tower of hanoi', 'limited-memory bfgs', {'weight': 0.6})
('tower of hanoi', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('tower of hanoi', 'longest common substring problem', {'weight': 0.6})
('tower of hanoi', 'clifford stein', {'weight': 0.6})
('tower of hanoi', 'computer chess', {'weight': 0.6})
('tower of hanoi', 'linear programming', {'weight': 0.6})
('tower of hanoi', 'bitonic tour', {'weight': 0.6})
('tower of hanoi', 'linear search problem', {'weight': 0.6})
('tower of hanoi', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('tower of hanoi', 'systems analysis', {'weight': 0.6})
('tower of hanoi', 'capital (economics)', {'weight': 0.6})
('tower of hanoi', 'levenshtein distance', {'weight': 0.6})
('tower of hanoi', 'nonlinear programming', {'weight': 0.6})
('tower of hanoi', 'computational complexity of mathematical operations', {'weight': 0.6})
('tower of hanoi', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('tower of hanoi', 'gradient', {'weight': 0.6})
('tower of hanoi', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('tower of hanoi', 'bulletin of the american mathematical society', {'weight': 0.6})
('tower of hanoi', 'u.s. english', {'weight': 0.6})
('tower of hanoi', 'refutation table', {'weight': 0.6})
('tower of hanoi', 'heuristic algorithm', {'weight': 0.6})
('tower of hanoi', 'successive linear programming', {'weight': 0.6})
('tower of hanoi', 'optimal substructure', {'weight': 0.6})
('tower of hanoi', 'programming language', {'weight': 0.6})
('tower of hanoi', 'mergesort', {'weight': 0.6})
('tower of hanoi', "dijkstra's algorithm", {'weight': 0.6})
('tower of hanoi', 'subgradient method', {'weight': 0.6})
('tower of hanoi', 'call-by-name', {'weight': 0.6})
('tower of hanoi', 'longest increasing subsequence problem', {'weight': 0.6})
('tower of hanoi', 'edward prescott', {'weight': 0.6})
('tower of hanoi', 'exponential time', {'weight': 0.6})
('tower of hanoi', 'principle of optimality', {'weight': 0.6})
('tower of hanoi', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('tower of hanoi', 'mathematical game', {'weight': 0.6})
('tower of hanoi', 'nancy stokey', {'weight': 0.6})
('tower of hanoi', 'approximation algorithm', {'weight': 0.6})
('tower of hanoi', 'discrete-time', {'weight': 0.6})
('tower of hanoi', 'cyk algorithm', {'weight': 0.6})
('tower of hanoi', 'markov decision process', {'weight': 0.6})
('tower of hanoi', "powell's method", {'weight': 0.6})
('tower of hanoi', 'wolfe conditions', {'weight': 0.6})
('tower of hanoi', 'convexity in economics', {'weight': 0.6})
('tower of hanoi', 'transposition table', {'weight': 0.6})
('tower of hanoi', 'economics', {'weight': 0.6})
('tower of hanoi', 'backward induction', {'weight': 0.6})
('tower of hanoi', 'golden section search', {'weight': 0.6})
('tower of hanoi', 'edit distance', {'weight': 0.6})
('tower of hanoi', 'tree structure', {'weight': 0.6})
('tower of hanoi', 'backup rotation scheme', {'weight': 0.7})
('tower of hanoi', 'exchange algorithm', {'weight': 0.6})
('tower of hanoi', 'dover publications', {'weight': 0.6})
('tower of hanoi', 'seam carving', {'weight': 0.6})
('tower of hanoi', 'recursive least squares', {'weight': 0.6})
('tower of hanoi', 'metaheuristic', {'weight': 0.6})
('tower of hanoi', 'quasi-newton method', {'weight': 0.6})
('tower of hanoi', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('tower of hanoi', 'robert e. lucas', {'weight': 0.6})
('tower of hanoi', 'non-convexity (economics)', {'weight': 0.6})
('tower of hanoi', 'sr1 formula', {'weight': 0.6})
('tower of hanoi', 'mathematical reviews', {'weight': 0.6})
('tower of hanoi', 'puzzle', {'weight': 0.6})
('tower of hanoi', 'associative array', {'weight': 0.6})
('tower of hanoi', 'baguenaudier', {'weight': 0.7})
('tower of hanoi', 'shortest path problem', {'weight': 0.6})
('tower of hanoi', 'dynamic algorithm', {'weight': 0.6})
('tower of hanoi', 'augmented lagrangian method', {'weight': 0.6})
('tower of hanoi', 'charles delisi', {'weight': 0.6})
('tower of hanoi', 'greedy algorithm', {'weight': 0.6})
('tower of hanoi', "karmarkar's algorithm", {'weight': 0.6})
('tower of hanoi', 'lattice models', {'weight': 0.6})
('tower of hanoi', 'utility', {'weight': 0.6})
('tower of hanoi', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('tower of hanoi', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('tower of hanoi', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('tower of hanoi', 'international standard book number', {'weight': 0.6})
('tower of hanoi', 'undirected graph', {'weight': 0.6})
('tower of hanoi', 'scheme (programming language)', {'weight': 0.6})
('tower of hanoi', 'rna structure', {'weight': 0.6})
('tower of hanoi', 'hanoi', {'weight': 0.6})
('tower of hanoi', 'perl', {'weight': 0.6})
('tower of hanoi', 'digital object identifier', {'weight': 0.6})
('tower of hanoi', 'sequential quadratic programming', {'weight': 0.6})
('tower of hanoi', "dinic's algorithm", {'weight': 0.6})
('tower of hanoi', 'pseudo-polynomial time', {'weight': 0.6})
('tower of hanoi', 'partition problem', {'weight': 0.6})
('tower of hanoi', 'stochastic programming', {'weight': 0.6})
('tower of hanoi', 'hill climbing', {'weight': 0.6})
('tower of hanoi', 'top-down', {'weight': 0.6})
('tower of hanoi', 'de boor algorithm', {'weight': 0.6})
('tower of hanoi', 'optimization algorithm', {'weight': 0.6})
('tower of hanoi', "kruskal's algorithm", {'weight': 0.6})
('tower of hanoi', 'jacques philippe marie binet', {'weight': 0.6})
('tower of hanoi', 'tabu search', {'weight': 0.6})
('tower of hanoi', 'divide and conquer algorithm', {'weight': 0.6})
('tower of hanoi', "johnson's algorithm", {'weight': 0.6})
('tower of hanoi', 'evolutionary algorithm', {'weight': 0.6})
('tower of hanoi', 'clique-width', {'weight': 0.6})
('tower of hanoi', 'dynamic programming', {'weight': 0.6})
('tower of hanoi', 'subroutine', {'weight': 0.6})
('tower of hanoi', 'simulated annealing', {'weight': 0.6})
('tower of hanoi', 'tower of hanoi', {'weight': 1})
('tower of hanoi', 'branch and bound', {'weight': 0.6})
('tower of hanoi', 'engineering', {'weight': 0.6})
('tower of hanoi', 'matroid', {'weight': 0.6})
('tower of hanoi', 'viterbi algorithm', {'weight': 0.6})
('tower of hanoi', "lemke's algorithm", {'weight': 0.6})
('tower of hanoi', 'simplex algorithm', {'weight': 0.6})
('tower of hanoi', 'local search (optimization)', {'weight': 0.6})
('tower of hanoi', 'hessian matrix', {'weight': 0.6})
('tower of hanoi', 'ibm system r', {'weight': 0.6})
('tower of hanoi', 'penalty method', {'weight': 0.6})
('tower of hanoi', 'prolog', {'weight': 0.6})
('tower of hanoi', 'time-invariant system', {'weight': 0.6})
('tower of hanoi', 'criss-cross algorithm', {'weight': 0.6})
('tower of hanoi', 'revised simplex algorithm', {'weight': 0.6})
('tower of hanoi', 'the mathematical association of america', {'weight': 0.6})
('tower of hanoi', 'line search', {'weight': 0.6})
('tower of hanoi', 'j (programming language)', {'weight': 0.6})
('tower of hanoi', 'word wrap', {'weight': 0.6})
('tower of hanoi', 'subset sum problem', {'weight': 0.6})
('tower of hanoi', 'integer programming', {'weight': 0.6})
('tower of hanoi', 'nucleosome', {'weight': 0.6})
('tower of hanoi', 'earley algorithm', {'weight': 0.6})
('tower of hanoi', 'referential transparency (computer science)', {'weight': 0.6})
('tower of hanoi', 'recursion', {'weight': 0.6})
('tower of hanoi', 'mathematica', {'weight': 0.6})
('tower of hanoi', 'quicksort', {'weight': 0.6})
('tower of hanoi', 'recursion (computer science)', {'weight': 0.7})
('tower of hanoi', 'checkerboard', {'weight': 0.6})
('tower of hanoi', 'computer science', {'weight': 0.6})
('tower of hanoi', 'brute-force search', {'weight': 0.6})
('tower of hanoi', 'mathematics', {'weight': 0.6})
('tower of hanoi', 'depth-first search', {'weight': 0.6})
('tower of hanoi', 'top-down and bottom-up design', {'weight': 0.6})
('tower of hanoi', 'correspondence problem', {'weight': 0.6})
('tower of hanoi', 'transcription factor', {'weight': 0.6})
('tower of hanoi', 'tree decomposition', {'weight': 0.6})
('tower of hanoi', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('tower of hanoi', 'structural alignment', {'weight': 0.6})
('tower of hanoi', 'local convergence', {'weight': 0.6})
('tower of hanoi', 'knapsack problem', {'weight': 0.6})
('tower of hanoi', 'graph algorithm', {'weight': 0.6})
('tower of hanoi', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('tower of hanoi', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('tower of hanoi', 'hidden markov model', {'weight': 0.6})
('tower of hanoi', 'string (computer science)', {'weight': 0.6})
('tower of hanoi', 'bioinformatics', {'weight': 0.6})
('tower of hanoi', 'genetics', {'weight': 0.6})
('tower of hanoi', 'mathematical optimization', {'weight': 0.6})
('tower of hanoi', 'artificial neural networks', {'weight': 0.6})
('tower of hanoi', 'introduction to algorithms', {'weight': 0.6})
('tower of hanoi', 'thomas h. cormen', {'weight': 0.6})
('tower of hanoi', 'music information retrieval', {'weight': 0.6})
('tower of hanoi', 'beat (music)', {'weight': 0.6})
('tower of hanoi', 'longest common subsequence problem', {'weight': 0.6})
('tower of hanoi', 'convex minimization', {'weight': 0.6})
('tower of hanoi', 'successive parabolic interpolation', {'weight': 0.6})
('tower of hanoi', 'fibonacci sequence', {'weight': 0.6})
('tower of hanoi', 'maximum subarray problem', {'weight': 0.6})
('tower of hanoi', 'convex optimization', {'weight': 0.6})
('tower of hanoi', 'memoization', {'weight': 0.6})
('tower of hanoi', 'richard bellman', {'weight': 0.6})
('tower of hanoi', 'exponential growth', {'weight': 0.6})
('tower of hanoi', 'charles e. leiserson', {'weight': 0.6})
('tower of hanoi', 'charles erwin wilson', {'weight': 0.6})
('tower of hanoi', 'interval scheduling', {'weight': 0.6})
('tower of hanoi', 'chart parser', {'weight': 0.6})
('tower of hanoi', 'travelling salesman problem', {'weight': 0.6})
('tower of hanoi', 'bellman equation', {'weight': 0.6})
('stochastic programming', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('stochastic programming', 'photoshop', {'weight': 0.6})
('stochastic programming', 'sequence alignment', {'weight': 0.6})
('stochastic programming', 'flow network', {'weight': 0.6})
('stochastic programming', 'ellipsoid method', {'weight': 0.6})
('stochastic programming', 'chain matrix multiplication', {'weight': 0.6})
('stochastic programming', 'ieee', {'weight': 0.6})
('stochastic programming', 'backtracking', {'weight': 0.6})
('stochastic programming', 'scenario optimization', {'weight': 0.7})
('stochastic programming', 'nonlinear conjugate gradient method', {'weight': 0.6})
('stochastic programming', 'dynamic problem', {'weight': 0.6})
('stochastic programming', 'trust region', {'weight': 0.6})
('stochastic programming', 'stochastic algorithms', {'weight': 0.5})
('stochastic programming', 'function (mathematics)', {'weight': 0.6})
('stochastic programming', 'minimum spanning tree', {'weight': 0.6})
('stochastic programming', 'context-free grammar', {'weight': 0.6})
('stochastic programming', 'recursive least squares', {'weight': 0.6})
('stochastic programming', 'branch and cut', {'weight': 0.6})
('stochastic programming', 'state variable', {'weight': 0.6})
('stochastic programming', 'treewidth', {'weight': 0.6})
('stochastic programming', 'overlapping subproblem', {'weight': 0.6})
('stochastic programming', 'taylor & francis', {'weight': 0.6})
('stochastic programming', 'cutting-plane method', {'weight': 0.6})
('stochastic programming', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('stochastic programming', 'method of undetermined coefficients', {'weight': 0.6})
('stochastic programming', 'combinatorial optimization', {'weight': 0.6})
('stochastic programming', "newton's method in optimization", {'weight': 0.6})
('stochastic programming', 'matrix chain multiplication', {'weight': 0.6})
('stochastic programming', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('stochastic programming', 'dynamic time warping', {'weight': 0.6})
('stochastic programming', 'dynamic programming language', {'weight': 0.6})
('stochastic programming', 'call-by-need', {'weight': 0.6})
('stochastic programming', 'big-o notation', {'weight': 0.6})
('stochastic programming', 'comparison of optimization software', {'weight': 0.6})
('stochastic programming', 'quadratic programming', {'weight': 0.6})
('stochastic programming', 'common lisp', {'weight': 0.6})
('stochastic programming', 'barrier function', {'weight': 0.6})
('stochastic programming', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('stochastic programming', 'gradient descent', {'weight': 0.6})
('stochastic programming', 'patricia selinger', {'weight': 0.6})
('stochastic programming', 'discounting', {'weight': 0.6})
('stochastic programming', 'ronald l. rivest', {'weight': 0.6})
('stochastic programming', 'iterative method', {'weight': 0.6})
('stochastic programming', 'limited-memory bfgs', {'weight': 0.6})
('stochastic programming', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('stochastic programming', 'longest common substring problem', {'weight': 0.6})
('stochastic programming', 'clifford stein', {'weight': 0.6})
('stochastic programming', 'computer chess', {'weight': 0.6})
('stochastic programming', 'probabilistic-based design optimization', {'weight': 0.7})
('stochastic programming', 'linear programming', {'weight': 0.6})
('stochastic programming', 'bitonic tour', {'weight': 0.6})
('stochastic programming', 'linear search problem', {'weight': 0.6})
('stochastic programming', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('stochastic programming', 'systems analysis', {'weight': 0.6})
('stochastic programming', 'capital (economics)', {'weight': 0.6})
('stochastic programming', 'levenshtein distance', {'weight': 0.6})
('stochastic programming', 'nonlinear programming', {'weight': 0.6})
('stochastic programming', 'computational complexity of mathematical operations', {'weight': 0.6})
('stochastic programming', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('stochastic programming', 'gradient', {'weight': 0.6})
('stochastic programming', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('stochastic programming', 'bulletin of the american mathematical society', {'weight': 0.6})
('stochastic programming', 'u.s. english', {'weight': 0.6})
('stochastic programming', 'refutation table', {'weight': 0.6})
('stochastic programming', 'heuristic algorithm', {'weight': 0.6})
('stochastic programming', 'successive linear programming', {'weight': 0.6})
('stochastic programming', 'optimal substructure', {'weight': 0.6})
('stochastic programming', 'programming language', {'weight': 0.6})
('stochastic programming', 'mergesort', {'weight': 0.6})
('stochastic programming', "dijkstra's algorithm", {'weight': 0.6})
('stochastic programming', 'subgradient method', {'weight': 0.6})
('stochastic programming', 'call-by-name', {'weight': 0.6})
('stochastic programming', 'longest increasing subsequence problem', {'weight': 0.6})
('stochastic programming', 'edward prescott', {'weight': 0.6})
('stochastic programming', 'exponential time', {'weight': 0.6})
('stochastic programming', 'principle of optimality', {'weight': 0.6})
('stochastic programming', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('stochastic programming', 'mathematical game', {'weight': 0.6})
('stochastic programming', 'nancy stokey', {'weight': 0.6})
('stochastic programming', 'approximation algorithm', {'weight': 0.6})
('stochastic programming', 'discrete-time', {'weight': 0.6})
('stochastic programming', 'cyk algorithm', {'weight': 0.6})
('stochastic programming', 'markov decision process', {'weight': 0.6})
('stochastic programming', "powell's method", {'weight': 0.6})
('stochastic programming', 'wolfe conditions', {'weight': 0.6})
('stochastic programming', 'convexity in economics', {'weight': 0.6})
('stochastic programming', 'transposition table', {'weight': 0.6})
('stochastic programming', 'economics', {'weight': 0.6})
('stochastic programming', 'backward induction', {'weight': 0.6})
('stochastic programming', 'golden section search', {'weight': 0.6})
('stochastic programming', 'edit distance', {'weight': 0.6})
('stochastic programming', 'tree structure', {'weight': 0.6})
('stochastic programming', 'exchange algorithm', {'weight': 0.6})
('stochastic programming', 'dover publications', {'weight': 0.6})
('stochastic programming', 'seam carving', {'weight': 0.6})
('stochastic programming', 'stochastic optimization', {'weight': 0.7})
('stochastic programming', 'metaheuristic', {'weight': 0.6})
('stochastic programming', 'quasi-newton method', {'weight': 0.6})
('stochastic programming', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('stochastic programming', 'robert e. lucas', {'weight': 0.6})
('stochastic programming', 'non-convexity (economics)', {'weight': 0.6})
('stochastic programming', 'sr1 formula', {'weight': 0.6})
('stochastic programming', 'mathematical reviews', {'weight': 0.6})
('stochastic programming', 'puzzle', {'weight': 0.6})
('stochastic programming', 'associative array', {'weight': 0.6})
('stochastic programming', 'shortest path problem', {'weight': 0.6})
('stochastic programming', 'dynamic algorithm', {'weight': 0.6})
('stochastic programming', 'augmented lagrangian method', {'weight': 0.6})
('stochastic programming', 'charles delisi', {'weight': 0.6})
('stochastic programming', 'greedy algorithm', {'weight': 0.6})
('stochastic programming', "karmarkar's algorithm", {'weight': 0.6})
('stochastic programming', 'lattice models', {'weight': 0.6})
('stochastic programming', 'utility', {'weight': 0.6})
('stochastic programming', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('stochastic programming', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('stochastic programming', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('stochastic programming', 'international standard book number', {'weight': 0.6})
('stochastic programming', 'undirected graph', {'weight': 0.6})
('stochastic programming', 'scheme (programming language)', {'weight': 0.6})
('stochastic programming', 'rna structure', {'weight': 0.6})
('stochastic programming', 'hanoi', {'weight': 0.6})
('stochastic programming', 'perl', {'weight': 0.6})
('stochastic programming', 'digital object identifier', {'weight': 0.6})
('stochastic programming', 'sequential quadratic programming', {'weight': 0.6})
('stochastic programming', "dinic's algorithm", {'weight': 0.6})
('stochastic programming', 'pseudo-polynomial time', {'weight': 0.6})
('stochastic programming', 'partition problem', {'weight': 0.6})
('stochastic programming', 'operations research', {'weight': 0.5})
('stochastic programming', 'hill climbing', {'weight': 0.6})
('stochastic programming', 'top-down', {'weight': 0.6})
('stochastic programming', 'de boor algorithm', {'weight': 0.6})
('stochastic programming', 'optimization algorithm', {'weight': 0.6})
('stochastic programming', "kruskal's algorithm", {'weight': 0.6})
('stochastic programming', 'jacques philippe marie binet', {'weight': 0.6})
('stochastic programming', 'tabu search', {'weight': 0.6})
('stochastic programming', 'computer science portal', {'weight': 0.7})
('stochastic programming', 'divide and conquer algorithm', {'weight': 0.6})
('stochastic programming', "johnson's algorithm", {'weight': 0.6})
('stochastic programming', 'evolutionary algorithm', {'weight': 0.6})
('stochastic programming', 'clique-width', {'weight': 0.6})
('stochastic programming', 'dynamic programming', {'weight': 0.6})
('stochastic programming', 'subroutine', {'weight': 0.6})
('stochastic programming', 'simulated annealing', {'weight': 0.6})
('stochastic programming', 'tower of hanoi', {'weight': 0.6})
('stochastic programming', 'branch and bound', {'weight': 0.6})
('stochastic programming', 'engineering', {'weight': 0.6})
('stochastic programming', 'matroid', {'weight': 0.6})
('stochastic programming', 'viterbi algorithm', {'weight': 0.6})
('stochastic programming', "lemke's algorithm", {'weight': 0.6})
('stochastic programming', 'simplex algorithm', {'weight': 0.6})
('stochastic programming', 'stochastic programming', {'weight': 1})
('stochastic programming', 'hessian matrix', {'weight': 0.6})
('stochastic programming', 'ibm system r', {'weight': 0.6})
('stochastic programming', 'penalty method', {'weight': 0.6})
('stochastic programming', 'prolog', {'weight': 0.6})
('stochastic programming', 'time-invariant system', {'weight': 0.6})
('stochastic programming', 'criss-cross algorithm', {'weight': 0.6})
('stochastic programming', 'revised simplex algorithm', {'weight': 0.6})
('stochastic programming', 'the mathematical association of america', {'weight': 0.6})
('stochastic programming', 'line search', {'weight': 0.6})
('stochastic programming', 'j (programming language)', {'weight': 0.6})
('stochastic programming', 'word wrap', {'weight': 0.6})
('stochastic programming', 'subset sum problem', {'weight': 0.6})
('stochastic programming', 'integer programming', {'weight': 0.6})
('stochastic programming', 'nucleosome', {'weight': 0.6})
('stochastic programming', 'earley algorithm', {'weight': 0.6})
('stochastic programming', 'referential transparency (computer science)', {'weight': 0.6})
('stochastic programming', 'recursion', {'weight': 0.6})
('stochastic programming', 'mathematica', {'weight': 0.6})
('stochastic programming', 'quicksort', {'weight': 0.6})
('stochastic programming', 'recursion (computer science)', {'weight': 0.6})
('stochastic programming', 'checkerboard', {'weight': 0.6})
('stochastic programming', 'computer science', {'weight': 0.6})
('stochastic programming', 'brute-force search', {'weight': 0.6})
('stochastic programming', 'mathematics', {'weight': 0.6})
('stochastic programming', 'depth-first search', {'weight': 0.6})
('stochastic programming', 'top-down and bottom-up design', {'weight': 0.6})
('stochastic programming', 'correspondence problem', {'weight': 0.6})
('stochastic programming', 'transcription factor', {'weight': 0.6})
('stochastic programming', 'tree decomposition', {'weight': 0.6})
('stochastic programming', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('stochastic programming', 'structural alignment', {'weight': 0.6})
('stochastic programming', 'local convergence', {'weight': 0.6})
('stochastic programming', 'knapsack problem', {'weight': 0.6})
('stochastic programming', 'graph algorithm', {'weight': 0.6})
('stochastic programming', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('stochastic programming', 'sampl algebraic modeling language', {'weight': 0.7})
('stochastic programming', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('stochastic programming', 'hidden markov model', {'weight': 0.6})
('stochastic programming', 'string (computer science)', {'weight': 0.6})
('stochastic programming', 'bioinformatics', {'weight': 0.6})
('stochastic programming', 'genetics', {'weight': 0.6})
('stochastic programming', 'mathematical optimization', {'weight': 0.6})
('stochastic programming', 'local search (optimization)', {'weight': 0.6})
('stochastic programming', 'artificial neural networks', {'weight': 0.6})
('stochastic programming', 'introduction to algorithms', {'weight': 0.6})
('stochastic programming', 'thomas h. cormen', {'weight': 0.6})
('stochastic programming', 'music information retrieval', {'weight': 0.6})
('stochastic programming', 'beat (music)', {'weight': 0.6})
('stochastic programming', 'longest common subsequence problem', {'weight': 0.6})
('stochastic programming', 'convex minimization', {'weight': 0.6})
('stochastic programming', 'successive parabolic interpolation', {'weight': 0.6})
('stochastic programming', 'fibonacci sequence', {'weight': 0.6})
('stochastic programming', 'maximum subarray problem', {'weight': 0.6})
('stochastic programming', 'convex optimization', {'weight': 0.6})
('stochastic programming', 'memoization', {'weight': 0.6})
('stochastic programming', 'richard bellman', {'weight': 0.6})
('stochastic programming', 'exponential growth', {'weight': 0.6})
('stochastic programming', 'charles e. leiserson', {'weight': 0.6})
('stochastic programming', 'charles erwin wilson', {'weight': 0.6})
('stochastic programming', 'interval scheduling', {'weight': 0.6})
('stochastic programming', 'chart parser', {'weight': 0.6})
('stochastic programming', 'travelling salesman problem', {'weight': 0.6})
('stochastic programming', 'bellman equation', {'weight': 0.6})
('ibm system r', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('ibm system r', 'photoshop', {'weight': 0.6})
('ibm system r', 'sequence alignment', {'weight': 0.6})
('ibm system r', 'flow network', {'weight': 0.6})
('ibm system r', 'ellipsoid method', {'weight': 0.6})
('ibm system r', 'chain matrix multiplication', {'weight': 0.6})
('ibm system r', 'ieee', {'weight': 0.6})
('ibm system r', 'backtracking', {'weight': 0.6})
('ibm system r', 'nonlinear conjugate gradient method', {'weight': 0.6})
('ibm system r', 'dynamic problem', {'weight': 0.6})
('ibm system r', 'trust region', {'weight': 0.6})
('ibm system r', 'function (mathematics)', {'weight': 0.6})
('ibm system r', 'minimum spanning tree', {'weight': 0.6})
('ibm system r', 'context-free grammar', {'weight': 0.6})
('ibm system r', 'branch and cut', {'weight': 0.6})
('ibm system r', 'state variable', {'weight': 0.6})
('ibm system r', 'treewidth', {'weight': 0.6})
('ibm system r', 'overlapping subproblem', {'weight': 0.6})
('ibm system r', 'taylor & francis', {'weight': 0.6})
('ibm system r', 'cutting-plane method', {'weight': 0.6})
('ibm system r', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('ibm system r', 'method of undetermined coefficients', {'weight': 0.6})
('ibm system r', 'combinatorial optimization', {'weight': 0.6})
('ibm system r', "newton's method in optimization", {'weight': 0.6})
('ibm system r', 'matrix chain multiplication', {'weight': 0.6})
('ibm system r', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('ibm system r', 'dynamic time warping', {'weight': 0.6})
('ibm system r', 'dynamic programming language', {'weight': 0.6})
('ibm system r', 'call-by-need', {'weight': 0.6})
('ibm system r', 'big-o notation', {'weight': 0.6})
('ibm system r', 'comparison of optimization software', {'weight': 0.6})
('ibm system r', 'quadratic programming', {'weight': 0.6})
('ibm system r', 'common lisp', {'weight': 0.6})
('ibm system r', 'barrier function', {'weight': 0.6})
('ibm system r', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('ibm system r', 'gradient descent', {'weight': 0.6})
('ibm system r', 'patricia selinger', {'weight': 0.6})
('ibm system r', 'discounting', {'weight': 0.6})
('ibm system r', 'ronald l. rivest', {'weight': 0.6})
('ibm system r', 'iterative method', {'weight': 0.6})
('ibm system r', 'limited-memory bfgs', {'weight': 0.6})
('ibm system r', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('ibm system r', 'longest common substring problem', {'weight': 0.6})
('ibm system r', 'clifford stein', {'weight': 0.6})
('ibm system r', 'computer chess', {'weight': 0.6})
('ibm system r', 'linear programming', {'weight': 0.6})
('ibm system r', 'bitonic tour', {'weight': 0.6})
('ibm system r', 'linear search problem', {'weight': 0.6})
('ibm system r', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('ibm system r', 'systems analysis', {'weight': 0.6})
('ibm system r', 'capital (economics)', {'weight': 0.6})
('ibm system r', 'levenshtein distance', {'weight': 0.6})
('ibm system r', 'nonlinear programming', {'weight': 0.6})
('ibm system r', 'computational complexity of mathematical operations', {'weight': 0.6})
('ibm system r', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('ibm system r', 'gradient', {'weight': 0.6})
('ibm system r', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('ibm system r', 'bulletin of the american mathematical society', {'weight': 0.6})
('ibm system r', 'u.s. english', {'weight': 0.6})
('ibm system r', 'refutation table', {'weight': 0.6})
('ibm system r', 'heuristic algorithm', {'weight': 0.6})
('ibm system r', 'successive linear programming', {'weight': 0.6})
('ibm system r', 'optimal substructure', {'weight': 0.6})
('ibm system r', 'programming language', {'weight': 0.6})
('ibm system r', 'mergesort', {'weight': 0.6})
('ibm system r', "dijkstra's algorithm", {'weight': 0.6})
('ibm system r', 'subgradient method', {'weight': 0.6})
('ibm system r', 'call-by-name', {'weight': 0.6})
('ibm system r', 'longest increasing subsequence problem', {'weight': 0.6})
('ibm system r', 'edward prescott', {'weight': 0.6})
('ibm system r', 'exponential time', {'weight': 0.6})
('ibm system r', 'principle of optimality', {'weight': 0.6})
('ibm system r', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('ibm system r', 'mathematical game', {'weight': 0.6})
('ibm system r', 'nancy stokey', {'weight': 0.6})
('ibm system r', 'approximation algorithm', {'weight': 0.6})
('ibm system r', 'discrete-time', {'weight': 0.6})
('ibm system r', 'cyk algorithm', {'weight': 0.6})
('ibm system r', 'markov decision process', {'weight': 0.6})
('ibm system r', "powell's method", {'weight': 0.6})
('ibm system r', 'wolfe conditions', {'weight': 0.6})
('ibm system r', 'convexity in economics', {'weight': 0.6})
('ibm system r', 'transposition table', {'weight': 0.6})
('ibm system r', 'economics', {'weight': 0.6})
('ibm system r', 'backward induction', {'weight': 0.6})
('ibm system r', 'golden section search', {'weight': 0.6})
('ibm system r', 'edit distance', {'weight': 0.6})
('ibm system r', 'tree structure', {'weight': 0.6})
('ibm system r', 'exchange algorithm', {'weight': 0.6})
('ibm system r', 'dover publications', {'weight': 0.6})
('ibm system r', 'seam carving', {'weight': 0.6})
('ibm system r', 'recursive least squares', {'weight': 0.6})
('ibm system r', 'metaheuristic', {'weight': 0.6})
('ibm system r', 'quasi-newton method', {'weight': 0.6})
('ibm system r', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('ibm system r', 'robert e. lucas', {'weight': 0.6})
('ibm system r', 'non-convexity (economics)', {'weight': 0.6})
('ibm system r', 'sr1 formula', {'weight': 0.6})
('ibm system r', 'mathematical reviews', {'weight': 0.6})
('ibm system r', 'puzzle', {'weight': 0.6})
('ibm system r', 'associative array', {'weight': 0.6})
('ibm system r', 'shortest path problem', {'weight': 0.6})
('ibm system r', 'dynamic algorithm', {'weight': 0.6})
('ibm system r', 'augmented lagrangian method', {'weight': 0.6})
('ibm system r', 'charles delisi', {'weight': 0.6})
('ibm system r', 'greedy algorithm', {'weight': 0.6})
('ibm system r', "karmarkar's algorithm", {'weight': 0.6})
('ibm system r', 'lattice models', {'weight': 0.6})
('ibm system r', 'utility', {'weight': 0.6})
('ibm system r', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('ibm system r', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('ibm system r', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('ibm system r', 'international standard book number', {'weight': 0.6})
('ibm system r', 'undirected graph', {'weight': 0.6})
('ibm system r', 'scheme (programming language)', {'weight': 0.6})
('ibm system r', 'rna structure', {'weight': 0.6})
('ibm system r', 'hanoi', {'weight': 0.6})
('ibm system r', 'perl', {'weight': 0.6})
('ibm system r', 'digital object identifier', {'weight': 0.6})
('ibm system r', 'sequential quadratic programming', {'weight': 0.6})
('ibm system r', "dinic's algorithm", {'weight': 0.6})
('ibm system r', 'pseudo-polynomial time', {'weight': 0.6})
('ibm system r', 'partition problem', {'weight': 0.6})
('ibm system r', 'stochastic programming', {'weight': 0.6})
('ibm system r', 'hill climbing', {'weight': 0.6})
('ibm system r', 'top-down', {'weight': 0.6})
('ibm system r', 'de boor algorithm', {'weight': 0.6})
('ibm system r', 'optimization algorithm', {'weight': 0.6})
('ibm system r', "kruskal's algorithm", {'weight': 0.6})
('ibm system r', 'jacques philippe marie binet', {'weight': 0.6})
('ibm system r', 'tabu search', {'weight': 0.6})
('ibm system r', 'divide and conquer algorithm', {'weight': 0.6})
('ibm system r', "johnson's algorithm", {'weight': 0.6})
('ibm system r', 'evolutionary algorithm', {'weight': 0.6})
('ibm system r', 'clique-width', {'weight': 0.6})
('ibm system r', 'dynamic programming', {'weight': 0.6})
('ibm system r', 'subroutine', {'weight': 0.6})
('ibm system r', 'simulated annealing', {'weight': 0.6})
('ibm system r', 'tower of hanoi', {'weight': 0.6})
('ibm system r', 'branch and bound', {'weight': 0.6})
('ibm system r', 'engineering', {'weight': 0.6})
('ibm system r', 'matroid', {'weight': 0.6})
('ibm system r', 'viterbi algorithm', {'weight': 0.6})
('ibm system r', "lemke's algorithm", {'weight': 0.6})
('ibm system r', 'simplex algorithm', {'weight': 0.6})
('ibm system r', 'local search (optimization)', {'weight': 0.6})
('ibm system r', 'hessian matrix', {'weight': 0.6})
('ibm system r', 'ibm system r', {'weight': 1})
('ibm system r', 'penalty method', {'weight': 0.6})
('ibm system r', 'prolog', {'weight': 0.6})
('ibm system r', 'time-invariant system', {'weight': 0.6})
('ibm system r', 'criss-cross algorithm', {'weight': 0.6})
('ibm system r', 'revised simplex algorithm', {'weight': 0.6})
('ibm system r', 'the mathematical association of america', {'weight': 0.6})
('ibm system r', 'line search', {'weight': 0.6})
('ibm system r', 'j (programming language)', {'weight': 0.6})
('ibm system r', 'word wrap', {'weight': 0.6})
('ibm system r', 'subset sum problem', {'weight': 0.6})
('ibm system r', 'integer programming', {'weight': 0.6})
('ibm system r', 'nucleosome', {'weight': 0.6})
('ibm system r', 'earley algorithm', {'weight': 0.6})
('ibm system r', 'referential transparency (computer science)', {'weight': 0.6})
('ibm system r', 'recursion', {'weight': 0.6})
('ibm system r', 'mathematica', {'weight': 0.6})
('ibm system r', 'quicksort', {'weight': 0.6})
('ibm system r', 'recursion (computer science)', {'weight': 0.6})
('ibm system r', 'checkerboard', {'weight': 0.6})
('ibm system r', 'computer science', {'weight': 0.6})
('ibm system r', 'brute-force search', {'weight': 0.6})
('ibm system r', 'mathematics', {'weight': 0.6})
('ibm system r', 'depth-first search', {'weight': 0.6})
('ibm system r', 'top-down and bottom-up design', {'weight': 0.6})
('ibm system r', 'correspondence problem', {'weight': 0.6})
('ibm system r', 'transcription factor', {'weight': 0.6})
('ibm system r', 'tree decomposition', {'weight': 0.6})
('ibm system r', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('ibm system r', 'structural alignment', {'weight': 0.6})
('ibm system r', 'local convergence', {'weight': 0.6})
('ibm system r', 'knapsack problem', {'weight': 0.6})
('ibm system r', 'graph algorithm', {'weight': 0.6})
('ibm system r', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('ibm system r', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('ibm system r', 'hidden markov model', {'weight': 0.6})
('ibm system r', 'string (computer science)', {'weight': 0.6})
('ibm system r', 'bioinformatics', {'weight': 0.6})
('ibm system r', 'genetics', {'weight': 0.6})
('ibm system r', 'mathematical optimization', {'weight': 0.6})
('ibm system r', 'artificial neural networks', {'weight': 0.6})
('ibm system r', 'introduction to algorithms', {'weight': 0.6})
('ibm system r', 'thomas h. cormen', {'weight': 0.6})
('ibm system r', 'music information retrieval', {'weight': 0.6})
('ibm system r', 'beat (music)', {'weight': 0.6})
('ibm system r', 'longest common subsequence problem', {'weight': 0.6})
('ibm system r', 'convex minimization', {'weight': 0.6})
('ibm system r', 'successive parabolic interpolation', {'weight': 0.6})
('ibm system r', 'fibonacci sequence', {'weight': 0.6})
('ibm system r', 'maximum subarray problem', {'weight': 0.6})
('ibm system r', 'convex optimization', {'weight': 0.6})
('ibm system r', 'memoization', {'weight': 0.6})
('ibm system r', 'richard bellman', {'weight': 0.6})
('ibm system r', 'exponential growth', {'weight': 0.6})
('ibm system r', 'charles e. leiserson', {'weight': 0.6})
('ibm system r', 'charles erwin wilson', {'weight': 0.6})
('ibm system r', 'interval scheduling', {'weight': 0.6})
('ibm system r', 'chart parser', {'weight': 0.6})
('ibm system r', 'travelling salesman problem', {'weight': 0.6})
('ibm system r', 'bellman equation', {'weight': 0.6})
('penalty method', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('penalty method', 'photoshop', {'weight': 0.6})
('penalty method', 'sequence alignment', {'weight': 0.6})
('penalty method', 'flow network', {'weight': 0.6})
('penalty method', 'ellipsoid method', {'weight': 0.6})
('penalty method', 'chain matrix multiplication', {'weight': 0.6})
('penalty method', 'ieee', {'weight': 0.6})
('penalty method', 'backtracking', {'weight': 0.6})
('penalty method', 'nonlinear conjugate gradient method', {'weight': 0.6})
('penalty method', 'dynamic problem', {'weight': 0.6})
('penalty method', 'trust region', {'weight': 0.6})
('penalty method', 'function (mathematics)', {'weight': 0.6})
('penalty method', 'minimum spanning tree', {'weight': 0.6})
('penalty method', 'context-free grammar', {'weight': 0.6})
('penalty method', 'branch and cut', {'weight': 0.6})
('penalty method', 'state variable', {'weight': 0.6})
('penalty method', 'treewidth', {'weight': 0.6})
('penalty method', 'optimization algorithms and methods', {'weight': 0.5})
('penalty method', 'overlapping subproblem', {'weight': 0.6})
('penalty method', 'taylor & francis', {'weight': 0.6})
('penalty method', 'cutting-plane method', {'weight': 0.6})
('penalty method', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('penalty method', 'method of undetermined coefficients', {'weight': 0.6})
('penalty method', 'combinatorial optimization', {'weight': 0.6})
('penalty method', "newton's method in optimization", {'weight': 0.6})
('penalty method', 'matrix chain multiplication', {'weight': 0.6})
('penalty method', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('penalty method', 'dynamic time warping', {'weight': 0.6})
('penalty method', 'dynamic programming language', {'weight': 0.6})
('penalty method', 'call-by-need', {'weight': 0.6})
('penalty method', 'big-o notation', {'weight': 0.6})
('penalty method', 'comparison of optimization software', {'weight': 0.6})
('penalty method', 'quadratic programming', {'weight': 0.6})
('penalty method', 'common lisp', {'weight': 0.6})
('penalty method', 'barrier function', {'weight': 0.7})
('penalty method', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('penalty method', 'gradient descent', {'weight': 0.6})
('penalty method', 'patricia selinger', {'weight': 0.6})
('penalty method', 'discounting', {'weight': 0.6})
('penalty method', 'ronald l. rivest', {'weight': 0.6})
('penalty method', 'iterative method', {'weight': 0.6})
('penalty method', 'limited-memory bfgs', {'weight': 0.6})
('penalty method', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('penalty method', 'longest common substring problem', {'weight': 0.6})
('penalty method', 'clifford stein', {'weight': 0.6})
('penalty method', 'computer chess', {'weight': 0.6})
('penalty method', 'linear programming', {'weight': 0.6})
('penalty method', 'bitonic tour', {'weight': 0.6})
('penalty method', 'linear search problem', {'weight': 0.6})
('penalty method', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('penalty method', 'systems analysis', {'weight': 0.6})
('penalty method', 'capital (economics)', {'weight': 0.6})
('penalty method', 'levenshtein distance', {'weight': 0.6})
('penalty method', 'nonlinear programming', {'weight': 0.6})
('penalty method', 'computational complexity of mathematical operations', {'weight': 0.6})
('penalty method', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('penalty method', 'gradient', {'weight': 0.6})
('penalty method', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('penalty method', 'bulletin of the american mathematical society', {'weight': 0.6})
('penalty method', 'u.s. english', {'weight': 0.6})
('penalty method', 'refutation table', {'weight': 0.6})
('penalty method', 'heuristic algorithm', {'weight': 0.6})
('penalty method', 'successive linear programming', {'weight': 0.6})
('penalty method', 'optimal substructure', {'weight': 0.6})
('penalty method', 'programming language', {'weight': 0.6})
('penalty method', 'mergesort', {'weight': 0.6})
('penalty method', "dijkstra's algorithm", {'weight': 0.6})
('penalty method', 'subgradient method', {'weight': 0.6})
('penalty method', 'call-by-name', {'weight': 0.6})
('penalty method', 'longest increasing subsequence problem', {'weight': 0.6})
('penalty method', 'edward prescott', {'weight': 0.6})
('penalty method', 'exponential time', {'weight': 0.6})
('penalty method', 'principle of optimality', {'weight': 0.6})
('penalty method', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('penalty method', 'mathematical game', {'weight': 0.6})
('penalty method', 'nancy stokey', {'weight': 0.6})
('penalty method', 'approximation algorithm', {'weight': 0.6})
('penalty method', 'discrete-time', {'weight': 0.6})
('penalty method', 'cyk algorithm', {'weight': 0.6})
('penalty method', 'markov decision process', {'weight': 0.6})
('penalty method', "powell's method", {'weight': 0.6})
('penalty method', 'wolfe conditions', {'weight': 0.6})
('penalty method', 'convexity in economics', {'weight': 0.6})
('penalty method', 'transposition table', {'weight': 0.6})
('penalty method', 'economics', {'weight': 0.6})
('penalty method', 'backward induction', {'weight': 0.6})
('penalty method', 'golden section search', {'weight': 0.6})
('penalty method', 'edit distance', {'weight': 0.6})
('penalty method', 'tree structure', {'weight': 0.6})
('penalty method', 'exchange algorithm', {'weight': 0.6})
('penalty method', 'dover publications', {'weight': 0.6})
('penalty method', 'seam carving', {'weight': 0.6})
('penalty method', 'recursive least squares', {'weight': 0.6})
('penalty method', 'metaheuristic', {'weight': 0.6})
('penalty method', 'quasi-newton method', {'weight': 0.6})
('penalty method', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('penalty method', 'robert e. lucas', {'weight': 0.6})
('penalty method', 'non-convexity (economics)', {'weight': 0.6})
('penalty method', 'sr1 formula', {'weight': 0.6})
('penalty method', 'mathematical reviews', {'weight': 0.6})
('penalty method', 'puzzle', {'weight': 0.6})
('penalty method', 'associative array', {'weight': 0.6})
('penalty method', 'shortest path problem', {'weight': 0.6})
('penalty method', 'interior point method', {'weight': 0.7})
('penalty method', 'dynamic algorithm', {'weight': 0.6})
('penalty method', 'augmented lagrangian method', {'weight': 0.7})
('penalty method', 'charles delisi', {'weight': 0.6})
('penalty method', 'greedy algorithm', {'weight': 0.6})
('penalty method', "karmarkar's algorithm", {'weight': 0.6})
('penalty method', 'lattice models', {'weight': 0.6})
('penalty method', 'utility', {'weight': 0.6})
('penalty method', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('penalty method', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('penalty method', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('penalty method', 'international standard book number', {'weight': 0.6})
('penalty method', 'undirected graph', {'weight': 0.6})
('penalty method', 'scheme (programming language)', {'weight': 0.6})
('penalty method', 'rna structure', {'weight': 0.6})
('penalty method', 'hanoi', {'weight': 0.6})
('penalty method', 'perl', {'weight': 0.6})
('penalty method', 'digital object identifier', {'weight': 0.6})
('penalty method', 'sequential quadratic programming', {'weight': 0.6})
('penalty method', "dinic's algorithm", {'weight': 0.6})
('penalty method', 'pseudo-polynomial time', {'weight': 0.6})
('penalty method', 'partition problem', {'weight': 0.6})
('penalty method', 'stochastic programming', {'weight': 0.6})
('penalty method', 'hill climbing', {'weight': 0.6})
('penalty method', 'top-down', {'weight': 0.6})
('penalty method', 'de boor algorithm', {'weight': 0.6})
('penalty method', 'optimization algorithm', {'weight': 0.6})
('penalty method', "kruskal's algorithm", {'weight': 0.6})
('penalty method', 'jacques philippe marie binet', {'weight': 0.6})
('penalty method', 'tabu search', {'weight': 0.6})
('penalty method', 'divide and conquer algorithm', {'weight': 0.6})
('penalty method', "johnson's algorithm", {'weight': 0.6})
('penalty method', 'evolutionary algorithm', {'weight': 0.6})
('penalty method', 'clique-width', {'weight': 0.6})
('penalty method', 'dynamic programming', {'weight': 0.6})
('penalty method', 'subroutine', {'weight': 0.6})
('penalty method', 'simulated annealing', {'weight': 0.6})
('penalty method', 'tower of hanoi', {'weight': 0.6})
('penalty method', 'branch and bound', {'weight': 0.6})
('penalty method', 'engineering', {'weight': 0.6})
('penalty method', 'matroid', {'weight': 0.6})
('penalty method', 'viterbi algorithm', {'weight': 0.6})
('penalty method', "lemke's algorithm", {'weight': 0.6})
('penalty method', 'simplex algorithm', {'weight': 0.6})
('penalty method', 'local search (optimization)', {'weight': 0.6})
('penalty method', 'hessian matrix', {'weight': 0.6})
('penalty method', 'ibm system r', {'weight': 0.6})
('penalty method', 'penalty method', {'weight': 1})
('penalty method', 'prolog', {'weight': 0.6})
('penalty method', 'time-invariant system', {'weight': 0.6})
('penalty method', 'criss-cross algorithm', {'weight': 0.6})
('penalty method', 'revised simplex algorithm', {'weight': 0.6})
('penalty method', 'the mathematical association of america', {'weight': 0.6})
('penalty method', 'line search', {'weight': 0.6})
('penalty method', 'j (programming language)', {'weight': 0.6})
('penalty method', 'word wrap', {'weight': 0.6})
('penalty method', 'subset sum problem', {'weight': 0.6})
('penalty method', 'integer programming', {'weight': 0.6})
('penalty method', 'nucleosome', {'weight': 0.6})
('penalty method', 'earley algorithm', {'weight': 0.6})
('penalty method', 'referential transparency (computer science)', {'weight': 0.6})
('penalty method', 'recursion', {'weight': 0.6})
('penalty method', 'mathematica', {'weight': 0.6})
('penalty method', 'quicksort', {'weight': 0.6})
('penalty method', 'recursion (computer science)', {'weight': 0.6})
('penalty method', 'checkerboard', {'weight': 0.6})
('penalty method', 'computer science', {'weight': 0.6})
('penalty method', 'brute-force search', {'weight': 0.6})
('penalty method', 'mathematics', {'weight': 0.6})
('penalty method', 'depth-first search', {'weight': 0.6})
('penalty method', 'top-down and bottom-up design', {'weight': 0.6})
('penalty method', 'correspondence problem', {'weight': 0.6})
('penalty method', 'transcription factor', {'weight': 0.6})
('penalty method', 'tree decomposition', {'weight': 0.6})
('penalty method', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('penalty method', 'structural alignment', {'weight': 0.6})
('penalty method', 'local convergence', {'weight': 0.6})
('penalty method', 'knapsack problem', {'weight': 0.6})
('penalty method', 'graph algorithm', {'weight': 0.6})
('penalty method', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('penalty method', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('penalty method', 'hidden markov model', {'weight': 0.6})
('penalty method', 'string (computer science)', {'weight': 0.6})
('penalty method', 'bioinformatics', {'weight': 0.6})
('penalty method', 'genetics', {'weight': 0.6})
('penalty method', 'mathematical optimization', {'weight': 0.6})
('penalty method', 'artificial neural networks', {'weight': 0.6})
('penalty method', 'introduction to algorithms', {'weight': 0.6})
('penalty method', 'thomas h. cormen', {'weight': 0.6})
('penalty method', 'music information retrieval', {'weight': 0.6})
('penalty method', 'beat (music)', {'weight': 0.6})
('penalty method', 'longest common subsequence problem', {'weight': 0.6})
('penalty method', 'convex minimization', {'weight': 0.6})
('penalty method', 'successive parabolic interpolation', {'weight': 0.6})
('penalty method', 'fibonacci sequence', {'weight': 0.6})
('penalty method', 'maximum subarray problem', {'weight': 0.6})
('penalty method', 'convex optimization', {'weight': 0.6})
('penalty method', 'memoization', {'weight': 0.6})
('penalty method', 'richard bellman', {'weight': 0.6})
('penalty method', 'exponential growth', {'weight': 0.6})
('penalty method', 'charles e. leiserson', {'weight': 0.6})
('penalty method', 'charles erwin wilson', {'weight': 0.6})
('penalty method', 'interval scheduling', {'weight': 0.6})
('penalty method', 'chart parser', {'weight': 0.6})
('penalty method', 'travelling salesman problem', {'weight': 0.6})
('penalty method', 'bellman equation', {'weight': 0.6})
('engineering', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('engineering', 'photoshop', {'weight': 0.6})
('engineering', 'sequence alignment', {'weight': 0.6})
('engineering', 'flow network', {'weight': 0.6})
('engineering', 'ellipsoid method', {'weight': 0.6})
('engineering', 'chain matrix multiplication', {'weight': 0.6})
('engineering', 'ieee', {'weight': 0.6})
('engineering', 'backtracking', {'weight': 0.6})
('engineering', 'nonlinear conjugate gradient method', {'weight': 0.6})
('engineering', 'dynamic problem', {'weight': 0.6})
('engineering', 'trust region', {'weight': 0.6})
('engineering', 'function (mathematics)', {'weight': 0.6})
('engineering', 'minimum spanning tree', {'weight': 0.6})
('engineering', 'context-free grammar', {'weight': 0.6})
('engineering', 'branch and cut', {'weight': 0.6})
('engineering', 'state variable', {'weight': 0.6})
('engineering', 'treewidth', {'weight': 0.6})
('engineering', 'overlapping subproblem', {'weight': 0.6})
('engineering', 'taylor & francis', {'weight': 0.6})
('engineering', 'cutting-plane method', {'weight': 0.6})
('engineering', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('engineering', 'method of undetermined coefficients', {'weight': 0.6})
('engineering', 'combinatorial optimization', {'weight': 0.6})
('engineering', "newton's method in optimization", {'weight': 0.6})
('engineering', 'matrix chain multiplication', {'weight': 0.6})
('engineering', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('engineering', 'dynamic time warping', {'weight': 0.6})
('engineering', 'dynamic programming language', {'weight': 0.6})
('engineering', 'call-by-need', {'weight': 0.6})
('engineering', 'big-o notation', {'weight': 0.6})
('engineering', 'comparison of optimization software', {'weight': 0.6})
('engineering', 'quadratic programming', {'weight': 0.6})
('engineering', 'common lisp', {'weight': 0.6})
('engineering', 'barrier function', {'weight': 0.6})
('engineering', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('engineering', 'gradient descent', {'weight': 0.6})
('engineering', 'patricia selinger', {'weight': 0.6})
('engineering', 'discounting', {'weight': 0.6})
('engineering', 'ronald l. rivest', {'weight': 0.6})
('engineering', 'iterative method', {'weight': 0.6})
('engineering', 'limited-memory bfgs', {'weight': 0.6})
('engineering', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('engineering', 'longest common substring problem', {'weight': 0.6})
('engineering', 'clifford stein', {'weight': 0.6})
('engineering', 'computer chess', {'weight': 0.6})
('engineering', 'linear programming', {'weight': 0.6})
('engineering', 'bitonic tour', {'weight': 0.6})
('engineering', 'linear search problem', {'weight': 0.6})
('engineering', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('engineering', 'systems analysis', {'weight': 0.6})
('engineering', 'capital (economics)', {'weight': 0.6})
('engineering', 'levenshtein distance', {'weight': 0.6})
('engineering', 'nonlinear programming', {'weight': 0.6})
('engineering', 'computational complexity of mathematical operations', {'weight': 0.6})
('engineering', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('engineering', 'gradient', {'weight': 0.6})
('engineering', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('engineering', 'bulletin of the american mathematical society', {'weight': 0.6})
('engineering', 'u.s. english', {'weight': 0.6})
('engineering', 'refutation table', {'weight': 0.6})
('engineering', 'heuristic algorithm', {'weight': 0.6})
('engineering', 'successive linear programming', {'weight': 0.6})
('engineering', 'optimal substructure', {'weight': 0.6})
('engineering', 'programming language', {'weight': 0.6})
('engineering', 'mergesort', {'weight': 0.6})
('engineering', "dijkstra's algorithm", {'weight': 0.6})
('engineering', 'subgradient method', {'weight': 0.6})
('engineering', 'call-by-name', {'weight': 0.6})
('engineering', 'longest increasing subsequence problem', {'weight': 0.6})
('engineering', 'edward prescott', {'weight': 0.6})
('engineering', 'exponential time', {'weight': 0.6})
('engineering', 'principle of optimality', {'weight': 0.6})
('engineering', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('engineering', 'mathematical game', {'weight': 0.6})
('engineering', 'nancy stokey', {'weight': 0.6})
('engineering', 'approximation algorithm', {'weight': 0.6})
('engineering', 'discrete-time', {'weight': 0.6})
('engineering', 'cyk algorithm', {'weight': 0.6})
('engineering', 'markov decision process', {'weight': 0.6})
('engineering', "powell's method", {'weight': 0.6})
('engineering', 'wolfe conditions', {'weight': 0.6})
('engineering', 'convexity in economics', {'weight': 0.6})
('engineering', 'transposition table', {'weight': 0.6})
('engineering', 'economics', {'weight': 0.6})
('engineering', 'backward induction', {'weight': 0.6})
('engineering', 'golden section search', {'weight': 0.6})
('engineering', 'edit distance', {'weight': 0.6})
('engineering', 'tree structure', {'weight': 0.6})
('engineering', 'exchange algorithm', {'weight': 0.6})
('engineering', 'dover publications', {'weight': 0.6})
('engineering', 'seam carving', {'weight': 0.6})
('engineering', 'recursive least squares', {'weight': 0.6})
('engineering', 'metaheuristic', {'weight': 0.6})
('engineering', 'theoretical computer science', {'weight': 0.5})
('engineering', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('engineering', 'robert e. lucas', {'weight': 0.6})
('engineering', 'non-convexity (economics)', {'weight': 0.6})
('engineering', 'sr1 formula', {'weight': 0.6})
('engineering', 'mathematical reviews', {'weight': 0.6})
('engineering', 'puzzle', {'weight': 0.6})
('engineering', 'associative array', {'weight': 0.6})
('engineering', 'shortest path problem', {'weight': 0.6})
('engineering', 'dynamic algorithm', {'weight': 0.6})
('engineering', 'augmented lagrangian method', {'weight': 0.6})
('engineering', 'charles delisi', {'weight': 0.6})
('engineering', 'greedy algorithm', {'weight': 0.6})
('engineering', "karmarkar's algorithm", {'weight': 0.6})
('engineering', 'lattice models', {'weight': 0.6})
('engineering', 'utility', {'weight': 0.6})
('engineering', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('engineering', 'quasi-newton method', {'weight': 0.6})
('engineering', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('engineering', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('engineering', 'international standard book number', {'weight': 0.6})
('engineering', 'undirected graph', {'weight': 0.6})
('engineering', 'scheme (programming language)', {'weight': 0.6})
('engineering', 'rna structure', {'weight': 0.6})
('engineering', 'hanoi', {'weight': 0.6})
('engineering', 'perl', {'weight': 0.6})
('engineering', 'digital object identifier', {'weight': 0.6})
('engineering', 'sequential quadratic programming', {'weight': 0.6})
('engineering', "dinic's algorithm", {'weight': 0.6})
('engineering', 'pseudo-polynomial time', {'weight': 0.6})
('engineering', 'partition problem', {'weight': 0.6})
('engineering', 'stochastic programming', {'weight': 0.6})
('engineering', 'hill climbing', {'weight': 0.6})
('engineering', 'top-down', {'weight': 0.6})
('engineering', 'de boor algorithm', {'weight': 0.6})
('engineering', 'optimization algorithm', {'weight': 0.6})
('engineering', "kruskal's algorithm", {'weight': 0.6})
('engineering', 'jacques philippe marie binet', {'weight': 0.6})
('engineering', 'tabu search', {'weight': 0.6})
('engineering', 'divide and conquer algorithm', {'weight': 0.6})
('engineering', "johnson's algorithm", {'weight': 0.6})
('engineering', 'evolutionary algorithm', {'weight': 0.6})
('engineering', 'clique-width', {'weight': 0.6})
('engineering', 'dynamic programming', {'weight': 0.6})
('engineering', 'subroutine', {'weight': 0.6})
('engineering', 'simulated annealing', {'weight': 0.6})
('engineering', 'tower of hanoi', {'weight': 0.6})
('engineering', 'branch and bound', {'weight': 0.6})
('engineering', 'engineering', {'weight': 1})
('engineering', 'matroid', {'weight': 0.6})
('engineering', 'viterbi algorithm', {'weight': 0.6})
('engineering', "lemke's algorithm", {'weight': 0.6})
('engineering', 'simplex algorithm', {'weight': 0.6})
('engineering', 'local search (optimization)', {'weight': 0.6})
('engineering', 'hessian matrix', {'weight': 0.6})
('engineering', 'ibm system r', {'weight': 0.6})
('engineering', 'penalty method', {'weight': 0.6})
('engineering', 'prolog', {'weight': 0.6})
('engineering', 'time-invariant system', {'weight': 0.6})
('engineering', 'criss-cross algorithm', {'weight': 0.6})
('engineering', 'revised simplex algorithm', {'weight': 0.6})
('engineering', 'the mathematical association of america', {'weight': 0.6})
('engineering', 'line search', {'weight': 0.6})
('engineering', 'j (programming language)', {'weight': 0.6})
('engineering', 'word wrap', {'weight': 0.6})
('engineering', 'subset sum problem', {'weight': 0.6})
('engineering', 'integer programming', {'weight': 0.6})
('engineering', 'nucleosome', {'weight': 0.6})
('engineering', 'earley algorithm', {'weight': 0.6})
('engineering', 'referential transparency (computer science)', {'weight': 0.6})
('engineering', 'recursion', {'weight': 0.6})
('engineering', 'mathematica', {'weight': 0.6})
('engineering', 'quicksort', {'weight': 0.6})
('engineering', 'recursion (computer science)', {'weight': 0.6})
('engineering', 'checkerboard', {'weight': 0.6})
('engineering', 'computer science', {'weight': 0.6})
('engineering', 'brute-force search', {'weight': 0.6})
('engineering', 'mathematics', {'weight': 0.6})
('engineering', 'depth-first search', {'weight': 0.6})
('engineering', 'top-down and bottom-up design', {'weight': 0.6})
('engineering', 'correspondence problem', {'weight': 0.6})
('engineering', 'transcription factor', {'weight': 0.6})
('engineering', 'tree decomposition', {'weight': 0.6})
('engineering', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('engineering', 'structural alignment', {'weight': 0.6})
('engineering', 'local convergence', {'weight': 0.6})
('engineering', 'knapsack problem', {'weight': 0.6})
('engineering', 'graph algorithm', {'weight': 0.6})
('engineering', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('engineering', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('engineering', 'hidden markov model', {'weight': 0.6})
('engineering', 'string (computer science)', {'weight': 0.6})
('engineering', 'bioinformatics', {'weight': 0.6})
('engineering', 'genetics', {'weight': 0.6})
('engineering', 'mathematical optimization', {'weight': 0.6})
('engineering', 'artificial neural networks', {'weight': 0.6})
('engineering', 'introduction to algorithms', {'weight': 0.6})
('engineering', 'thomas h. cormen', {'weight': 0.6})
('engineering', 'music information retrieval', {'weight': 0.6})
('engineering', 'beat (music)', {'weight': 0.6})
('engineering', 'longest common subsequence problem', {'weight': 0.6})
('engineering', 'convex minimization', {'weight': 0.6})
('engineering', 'successive parabolic interpolation', {'weight': 0.6})
('engineering', 'fibonacci sequence', {'weight': 0.6})
('engineering', 'maximum subarray problem', {'weight': 0.6})
('engineering', 'convex optimization', {'weight': 0.6})
('engineering', 'memoization', {'weight': 0.6})
('engineering', 'richard bellman', {'weight': 0.6})
('engineering', 'exponential growth', {'weight': 0.6})
('engineering', 'charles e. leiserson', {'weight': 0.6})
('engineering', 'charles erwin wilson', {'weight': 0.6})
('engineering', 'interval scheduling', {'weight': 0.6})
('engineering', 'chart parser', {'weight': 0.6})
('engineering', 'travelling salesman problem', {'weight': 0.6})
('engineering', 'bellman equation', {'weight': 0.6})
('word wrap', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('word wrap', 'photoshop', {'weight': 0.6})
('word wrap', 'sequence alignment', {'weight': 0.6})
('word wrap', 'flow network', {'weight': 0.6})
('word wrap', 'ellipsoid method', {'weight': 0.6})
('word wrap', 'chain matrix multiplication', {'weight': 0.6})
('word wrap', 'ieee', {'weight': 0.6})
('word wrap', 'backtracking', {'weight': 0.6})
('word wrap', 'unicode algorithms', {'weight': 0.5})
('word wrap', 'nonlinear conjugate gradient method', {'weight': 0.6})
('word wrap', 'dynamic problem', {'weight': 0.6})
('word wrap', 'trust region', {'weight': 0.6})
('word wrap', 'function (mathematics)', {'weight': 0.6})
('word wrap', 'minimum spanning tree', {'weight': 0.6})
('word wrap', 'context-free grammar', {'weight': 0.6})
('word wrap', 'branch and cut', {'weight': 0.6})
('word wrap', 'state variable', {'weight': 0.6})
('word wrap', 'treewidth', {'weight': 0.6})
('word wrap', 'overlapping subproblem', {'weight': 0.6})
('word wrap', 'taylor & francis', {'weight': 0.6})
('word wrap', 'cutting-plane method', {'weight': 0.6})
('word wrap', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('word wrap', 'method of undetermined coefficients', {'weight': 0.6})
('word wrap', 'combinatorial optimization', {'weight': 0.6})
('word wrap', "newton's method in optimization", {'weight': 0.6})
('word wrap', 'matrix chain multiplication', {'weight': 0.6})
('word wrap', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('word wrap', 'dynamic time warping', {'weight': 0.6})
('word wrap', 'dynamic programming language', {'weight': 0.6})
('word wrap', 'call-by-need', {'weight': 0.6})
('word wrap', 'big-o notation', {'weight': 0.6})
('word wrap', 'comparison of optimization software', {'weight': 0.6})
('word wrap', 'quadratic programming', {'weight': 0.6})
('word wrap', 'common lisp', {'weight': 0.6})
('word wrap', 'barrier function', {'weight': 0.6})
('word wrap', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('word wrap', 'gradient descent', {'weight': 0.6})
('word wrap', 'patricia selinger', {'weight': 0.6})
('word wrap', 'discounting', {'weight': 0.6})
('word wrap', 'ronald l. rivest', {'weight': 0.6})
('word wrap', 'iterative method', {'weight': 0.6})
('word wrap', 'limited-memory bfgs', {'weight': 0.6})
('word wrap', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('word wrap', 'longest common substring problem', {'weight': 0.6})
('word wrap', 'clifford stein', {'weight': 0.6})
('word wrap', 'text editor features', {'weight': 0.5})
('word wrap', 'linear programming', {'weight': 0.6})
('word wrap', 'bitonic tour', {'weight': 0.6})
('word wrap', 'linear search problem', {'weight': 0.6})
('word wrap', 'typography', {'weight': 0.5})
('word wrap', 'systems analysis', {'weight': 0.6})
('word wrap', 'capital (economics)', {'weight': 0.6})
('word wrap', 'successive linear programming', {'weight': 0.6})
('word wrap', 'levenshtein distance', {'weight': 0.6})
('word wrap', 'nonlinear programming', {'weight': 0.6})
('word wrap', 'computational complexity of mathematical operations', {'weight': 0.6})
('word wrap', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('word wrap', 'gradient', {'weight': 0.6})
('word wrap', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('word wrap', 'bulletin of the american mathematical society', {'weight': 0.6})
('word wrap', 'u.s. english', {'weight': 0.6})
('word wrap', 'refutation table', {'weight': 0.6})
('word wrap', 'heuristic algorithm', {'weight': 0.6})
('word wrap', 'computer chess', {'weight': 0.6})
('word wrap', 'optimal substructure', {'weight': 0.6})
('word wrap', 'programming language', {'weight': 0.6})
('word wrap', 'mergesort', {'weight': 0.6})
('word wrap', "dijkstra's algorithm", {'weight': 0.6})
('word wrap', 'subgradient method', {'weight': 0.6})
('word wrap', 'call-by-name', {'weight': 0.6})
('word wrap', 'longest increasing subsequence problem', {'weight': 0.6})
('word wrap', 'edward prescott', {'weight': 0.6})
('word wrap', 'exponential time', {'weight': 0.6})
('word wrap', 'principle of optimality', {'weight': 0.6})
('word wrap', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('word wrap', 'mathematical game', {'weight': 0.6})
('word wrap', 'nancy stokey', {'weight': 0.6})
('word wrap', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('word wrap', 'approximation algorithm', {'weight': 0.6})
('word wrap', 'discrete-time', {'weight': 0.6})
('word wrap', 'cyk algorithm', {'weight': 0.6})
('word wrap', 'markov decision process', {'weight': 0.6})
('word wrap', "powell's method", {'weight': 0.6})
('word wrap', 'wolfe conditions', {'weight': 0.6})
('word wrap', 'convexity in economics', {'weight': 0.6})
('word wrap', 'transposition table', {'weight': 0.6})
('word wrap', 'economics', {'weight': 0.6})
('word wrap', 'backward induction', {'weight': 0.6})
('word wrap', 'golden section search', {'weight': 0.6})
('word wrap', 'edit distance', {'weight': 0.6})
('word wrap', 'tree structure', {'weight': 0.6})
('word wrap', 'exchange algorithm', {'weight': 0.6})
('word wrap', 'dover publications', {'weight': 0.6})
('word wrap', 'seam carving', {'weight': 0.6})
('word wrap', 'recursive least squares', {'weight': 0.6})
('word wrap', 'metaheuristic', {'weight': 0.6})
('word wrap', 'quasi-newton method', {'weight': 0.6})
('word wrap', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('word wrap', 'robert e. lucas', {'weight': 0.6})
('word wrap', 'non-convexity (economics)', {'weight': 0.6})
('word wrap', 'sr1 formula', {'weight': 0.6})
('word wrap', 'mathematical reviews', {'weight': 0.6})
('word wrap', 'puzzle', {'weight': 0.6})
('word wrap', 'associative array', {'weight': 0.6})
('word wrap', 'shortest path problem', {'weight': 0.6})
('word wrap', 'dynamic algorithm', {'weight': 0.6})
('word wrap', 'augmented lagrangian method', {'weight': 0.6})
('word wrap', 'charles delisi', {'weight': 0.6})
('word wrap', 'greedy algorithm', {'weight': 0.6})
('word wrap', "karmarkar's algorithm", {'weight': 0.6})
('word wrap', 'lattice models', {'weight': 0.6})
('word wrap', 'utility', {'weight': 0.6})
('word wrap', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('word wrap', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('word wrap', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('word wrap', 'international standard book number', {'weight': 0.6})
('word wrap', 'undirected graph', {'weight': 0.6})
('word wrap', 'scheme (programming language)', {'weight': 0.6})
('word wrap', 'rna structure', {'weight': 0.6})
('word wrap', 'hanoi', {'weight': 0.6})
('word wrap', 'perl', {'weight': 0.6})
('word wrap', 'digital object identifier', {'weight': 0.6})
('word wrap', 'sequential quadratic programming', {'weight': 0.6})
('word wrap', "dinic's algorithm", {'weight': 0.6})
('word wrap', 'pseudo-polynomial time', {'weight': 0.6})
('word wrap', 'partition problem', {'weight': 0.6})
('word wrap', 'stochastic programming', {'weight': 0.6})
('word wrap', 'hill climbing', {'weight': 0.6})
('word wrap', 'top-down', {'weight': 0.6})
('word wrap', 'de boor algorithm', {'weight': 0.6})
('word wrap', 'optimization algorithm', {'weight': 0.6})
('word wrap', "kruskal's algorithm", {'weight': 0.6})
('word wrap', 'jacques philippe marie binet', {'weight': 0.6})
('word wrap', 'tabu search', {'weight': 0.6})
('word wrap', 'divide and conquer algorithm', {'weight': 0.6})
('word wrap', "johnson's algorithm", {'weight': 0.6})
('word wrap', 'evolutionary algorithm', {'weight': 0.6})
('word wrap', 'clique-width', {'weight': 0.6})
('word wrap', 'dynamic programming', {'weight': 0.6})
('word wrap', 'subroutine', {'weight': 0.6})
('word wrap', 'zero-width space', {'weight': 0.7})
('word wrap', 'simulated annealing', {'weight': 0.6})
('word wrap', 'tower of hanoi', {'weight': 0.6})
('word wrap', 'branch and bound', {'weight': 0.6})
('word wrap', 'engineering', {'weight': 0.6})
('word wrap', 'matroid', {'weight': 0.6})
('word wrap', 'viterbi algorithm', {'weight': 0.6})
('word wrap', "lemke's algorithm", {'weight': 0.6})
('word wrap', 'simplex algorithm', {'weight': 0.6})
('word wrap', 'local search (optimization)', {'weight': 0.6})
('word wrap', 'hessian matrix', {'weight': 0.6})
('word wrap', 'ibm system r', {'weight': 0.6})
('word wrap', 'penalty method', {'weight': 0.6})
('word wrap', 'non-breaking space', {'weight': 0.7})
('word wrap', 'prolog', {'weight': 0.6})
('word wrap', 'time-invariant system', {'weight': 0.6})
('word wrap', 'criss-cross algorithm', {'weight': 0.6})
('word wrap', 'revised simplex algorithm', {'weight': 0.6})
('word wrap', 'the mathematical association of america', {'weight': 0.6})
('word wrap', 'line search', {'weight': 0.6})
('word wrap', 'j (programming language)', {'weight': 0.6})
('word wrap', 'word wrap', {'weight': 1})
('word wrap', 'subset sum problem', {'weight': 0.6})
('word wrap', 'integer programming', {'weight': 0.6})
('word wrap', 'nucleosome', {'weight': 0.6})
('word wrap', 'earley algorithm', {'weight': 0.6})
('word wrap', 'referential transparency (computer science)', {'weight': 0.6})
('word wrap', 'recursion', {'weight': 0.6})
('word wrap', 'mathematica', {'weight': 0.6})
('word wrap', 'quicksort', {'weight': 0.6})
('word wrap', 'recursion (computer science)', {'weight': 0.6})
('word wrap', 'checkerboard', {'weight': 0.6})
('word wrap', 'computer science', {'weight': 0.6})
('word wrap', 'word divider', {'weight': 0.7})
('word wrap', 'brute-force search', {'weight': 0.6})
('word wrap', 'mathematics', {'weight': 0.6})
('word wrap', 'depth-first search', {'weight': 0.6})
('word wrap', 'top-down and bottom-up design', {'weight': 0.6})
('word wrap', 'correspondence problem', {'weight': 0.6})
('word wrap', 'transcription factor', {'weight': 0.6})
('word wrap', 'tree decomposition', {'weight': 0.6})
('word wrap', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('word wrap', 'structural alignment', {'weight': 0.6})
('word wrap', 'local convergence', {'weight': 0.6})
('word wrap', 'knapsack problem', {'weight': 0.6})
('word wrap', 'graph algorithm', {'weight': 0.6})
('word wrap', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('word wrap', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('word wrap', 'hidden markov model', {'weight': 0.6})
('word wrap', 'string (computer science)', {'weight': 0.6})
('word wrap', 'bioinformatics', {'weight': 0.6})
('word wrap', 'genetics', {'weight': 0.6})
('word wrap', 'mathematical optimization', {'weight': 0.6})
('word wrap', 'artificial neural networks', {'weight': 0.6})
('word wrap', 'introduction to algorithms', {'weight': 0.6})
('word wrap', 'thomas h. cormen', {'weight': 0.6})
('word wrap', 'music information retrieval', {'weight': 0.6})
('word wrap', 'beat (music)', {'weight': 0.6})
('word wrap', 'longest common subsequence problem', {'weight': 0.6})
('word wrap', 'convex minimization', {'weight': 0.6})
('word wrap', 'successive parabolic interpolation', {'weight': 0.6})
('word wrap', 'fibonacci sequence', {'weight': 0.6})
('word wrap', 'maximum subarray problem', {'weight': 0.6})
('word wrap', 'convex optimization', {'weight': 0.6})
('word wrap', 'memoization', {'weight': 0.6})
('word wrap', 'richard bellman', {'weight': 0.6})
('word wrap', 'exponential growth', {'weight': 0.6})
('word wrap', 'charles e. leiserson', {'weight': 0.6})
('word wrap', 'charles erwin wilson', {'weight': 0.6})
('word wrap', 'interval scheduling', {'weight': 0.6})
('word wrap', 'chart parser', {'weight': 0.6})
('word wrap', 'travelling salesman problem', {'weight': 0.6})
('word wrap', 'bellman equation', {'weight': 0.6})
('edward prescott', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('edward prescott', 'photoshop', {'weight': 0.6})
('edward prescott', 'sequence alignment', {'weight': 0.6})
('edward prescott', 'flow network', {'weight': 0.6})
('edward prescott', 'ellipsoid method', {'weight': 0.6})
('edward prescott', 'chain matrix multiplication', {'weight': 0.6})
('edward prescott', 'ieee', {'weight': 0.6})
('edward prescott', 'backtracking', {'weight': 0.6})
('edward prescott', 'nonlinear conjugate gradient method', {'weight': 0.6})
('edward prescott', 'dynamic problem', {'weight': 0.6})
('edward prescott', 'trust region', {'weight': 0.6})
('edward prescott', 'function (mathematics)', {'weight': 0.6})
('edward prescott', 'minimum spanning tree', {'weight': 0.6})
('edward prescott', 'context-free grammar', {'weight': 0.6})
('edward prescott', 'branch and cut', {'weight': 0.6})
('edward prescott', 'state variable', {'weight': 0.6})
('edward prescott', 'treewidth', {'weight': 0.6})
('edward prescott', 'overlapping subproblem', {'weight': 0.6})
('edward prescott', 'taylor & francis', {'weight': 0.6})
('edward prescott', 'cutting-plane method', {'weight': 0.6})
('edward prescott', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('edward prescott', 'method of undetermined coefficients', {'weight': 0.6})
('edward prescott', 'combinatorial optimization', {'weight': 0.6})
('edward prescott', "newton's method in optimization", {'weight': 0.6})
('edward prescott', 'matrix chain multiplication', {'weight': 0.6})
('edward prescott', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('edward prescott', 'dynamic time warping', {'weight': 0.6})
('edward prescott', 'dynamic programming language', {'weight': 0.6})
('edward prescott', 'call-by-need', {'weight': 0.6})
('edward prescott', 'big-o notation', {'weight': 0.6})
('edward prescott', 'comparison of optimization software', {'weight': 0.6})
('edward prescott', 'quadratic programming', {'weight': 0.6})
('edward prescott', 'common lisp', {'weight': 0.6})
('edward prescott', 'barrier function', {'weight': 0.6})
('edward prescott', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('edward prescott', 'gradient descent', {'weight': 0.6})
('edward prescott', 'patricia selinger', {'weight': 0.6})
('edward prescott', 'discounting', {'weight': 0.6})
('edward prescott', 'ronald l. rivest', {'weight': 0.6})
('edward prescott', 'iterative method', {'weight': 0.6})
('edward prescott', 'limited-memory bfgs', {'weight': 0.6})
('edward prescott', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('edward prescott', 'longest common substring problem', {'weight': 0.6})
('edward prescott', 'clifford stein', {'weight': 0.6})
('edward prescott', 'computer chess', {'weight': 0.6})
('edward prescott', 'linear programming', {'weight': 0.6})
('edward prescott', 'bitonic tour', {'weight': 0.6})
('edward prescott', 'linear search problem', {'weight': 0.6})
('edward prescott', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('edward prescott', 'systems analysis', {'weight': 0.6})
('edward prescott', 'capital (economics)', {'weight': 0.6})
('edward prescott', 'levenshtein distance', {'weight': 0.6})
('edward prescott', 'nonlinear programming', {'weight': 0.6})
('edward prescott', 'computational complexity of mathematical operations', {'weight': 0.6})
('edward prescott', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('edward prescott', 'gradient', {'weight': 0.6})
('edward prescott', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('edward prescott', 'bulletin of the american mathematical society', {'weight': 0.6})
('edward prescott', 'u.s. english', {'weight': 0.6})
('edward prescott', 'refutation table', {'weight': 0.6})
('edward prescott', 'heuristic algorithm', {'weight': 0.6})
('edward prescott', 'successive linear programming', {'weight': 0.6})
('edward prescott', 'optimal substructure', {'weight': 0.6})
('edward prescott', 'programming language', {'weight': 0.6})
('edward prescott', 'mergesort', {'weight': 0.6})
('edward prescott', "dijkstra's algorithm", {'weight': 0.6})
('edward prescott', 'subgradient method', {'weight': 0.6})
('edward prescott', 'call-by-name', {'weight': 0.6})
('edward prescott', 'longest increasing subsequence problem', {'weight': 0.6})
('edward prescott', 'edward prescott', {'weight': 1})
('edward prescott', 'exponential time', {'weight': 0.6})
('edward prescott', 'principle of optimality', {'weight': 0.6})
('edward prescott', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('edward prescott', 'mathematical game', {'weight': 0.6})
('edward prescott', 'nancy stokey', {'weight': 0.6})
('edward prescott', 'approximation algorithm', {'weight': 0.6})
('edward prescott', 'discrete-time', {'weight': 0.6})
('edward prescott', 'cyk algorithm', {'weight': 0.6})
('edward prescott', 'markov decision process', {'weight': 0.6})
('edward prescott', "powell's method", {'weight': 0.6})
('edward prescott', 'wolfe conditions', {'weight': 0.6})
('edward prescott', 'convexity in economics', {'weight': 0.6})
('edward prescott', 'transposition table', {'weight': 0.6})
('edward prescott', 'economics', {'weight': 0.6})
('edward prescott', 'backward induction', {'weight': 0.6})
('edward prescott', 'golden section search', {'weight': 0.6})
('edward prescott', 'edit distance', {'weight': 0.6})
('edward prescott', 'tree structure', {'weight': 0.6})
('edward prescott', 'exchange algorithm', {'weight': 0.6})
('edward prescott', 'dover publications', {'weight': 0.6})
('edward prescott', 'seam carving', {'weight': 0.6})
('edward prescott', 'recursive least squares', {'weight': 0.6})
('edward prescott', 'metaheuristic', {'weight': 0.6})
('edward prescott', 'quasi-newton method', {'weight': 0.6})
('edward prescott', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('edward prescott', 'robert e. lucas', {'weight': 0.6})
('edward prescott', 'non-convexity (economics)', {'weight': 0.6})
('edward prescott', 'sr1 formula', {'weight': 0.6})
('edward prescott', 'mathematical reviews', {'weight': 0.6})
('edward prescott', 'puzzle', {'weight': 0.6})
('edward prescott', 'associative array', {'weight': 0.6})
('edward prescott', 'shortest path problem', {'weight': 0.6})
('edward prescott', 'dynamic algorithm', {'weight': 0.6})
('edward prescott', 'augmented lagrangian method', {'weight': 0.6})
('edward prescott', 'charles delisi', {'weight': 0.6})
('edward prescott', 'greedy algorithm', {'weight': 0.6})
('edward prescott', "karmarkar's algorithm", {'weight': 0.6})
('edward prescott', 'lattice models', {'weight': 0.6})
('edward prescott', 'utility', {'weight': 0.6})
('edward prescott', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('edward prescott', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('edward prescott', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('edward prescott', 'international standard book number', {'weight': 0.6})
('edward prescott', 'undirected graph', {'weight': 0.6})
('edward prescott', 'scheme (programming language)', {'weight': 0.6})
('edward prescott', 'rna structure', {'weight': 0.6})
('edward prescott', 'hanoi', {'weight': 0.6})
('edward prescott', 'perl', {'weight': 0.6})
('edward prescott', 'digital object identifier', {'weight': 0.6})
('edward prescott', 'sequential quadratic programming', {'weight': 0.6})
('edward prescott', "dinic's algorithm", {'weight': 0.6})
('edward prescott', 'pseudo-polynomial time', {'weight': 0.6})
('edward prescott', 'partition problem', {'weight': 0.6})
('edward prescott', 'stochastic programming', {'weight': 0.6})
('edward prescott', 'hill climbing', {'weight': 0.6})
('edward prescott', 'top-down', {'weight': 0.6})
('edward prescott', 'de boor algorithm', {'weight': 0.6})
('edward prescott', 'optimization algorithm', {'weight': 0.6})
('edward prescott', "kruskal's algorithm", {'weight': 0.6})
('edward prescott', 'jacques philippe marie binet', {'weight': 0.6})
('edward prescott', 'tabu search', {'weight': 0.6})
('edward prescott', 'divide and conquer algorithm', {'weight': 0.6})
('edward prescott', "johnson's algorithm", {'weight': 0.6})
('edward prescott', 'evolutionary algorithm', {'weight': 0.6})
('edward prescott', 'clique-width', {'weight': 0.6})
('edward prescott', 'dynamic programming', {'weight': 0.6})
('edward prescott', 'subroutine', {'weight': 0.6})
('edward prescott', 'simulated annealing', {'weight': 0.6})
('edward prescott', 'tower of hanoi', {'weight': 0.6})
('edward prescott', 'branch and bound', {'weight': 0.6})
('edward prescott', 'engineering', {'weight': 0.6})
('edward prescott', 'matroid', {'weight': 0.6})
('edward prescott', 'viterbi algorithm', {'weight': 0.6})
('edward prescott', "lemke's algorithm", {'weight': 0.6})
('edward prescott', 'simplex algorithm', {'weight': 0.6})
('edward prescott', 'local search (optimization)', {'weight': 0.6})
('edward prescott', 'hessian matrix', {'weight': 0.6})
('edward prescott', 'ibm system r', {'weight': 0.6})
('edward prescott', 'penalty method', {'weight': 0.6})
('edward prescott', 'prolog', {'weight': 0.6})
('edward prescott', 'time-invariant system', {'weight': 0.6})
('edward prescott', 'criss-cross algorithm', {'weight': 0.6})
('edward prescott', 'revised simplex algorithm', {'weight': 0.6})
('edward prescott', 'the mathematical association of america', {'weight': 0.6})
('edward prescott', 'line search', {'weight': 0.6})
('edward prescott', 'j (programming language)', {'weight': 0.6})
('edward prescott', 'word wrap', {'weight': 0.6})
('edward prescott', 'subset sum problem', {'weight': 0.6})
('edward prescott', 'integer programming', {'weight': 0.6})
('edward prescott', 'nucleosome', {'weight': 0.6})
('edward prescott', 'earley algorithm', {'weight': 0.6})
('edward prescott', 'referential transparency (computer science)', {'weight': 0.6})
('edward prescott', 'recursion', {'weight': 0.6})
('edward prescott', 'mathematica', {'weight': 0.6})
('edward prescott', 'quicksort', {'weight': 0.6})
('edward prescott', 'recursion (computer science)', {'weight': 0.6})
('edward prescott', 'checkerboard', {'weight': 0.6})
('edward prescott', 'computer science', {'weight': 0.6})
('edward prescott', 'brute-force search', {'weight': 0.6})
('edward prescott', 'mathematics', {'weight': 0.6})
('edward prescott', 'depth-first search', {'weight': 0.6})
('edward prescott', 'top-down and bottom-up design', {'weight': 0.6})
('edward prescott', 'correspondence problem', {'weight': 0.6})
('edward prescott', 'transcription factor', {'weight': 0.6})
('edward prescott', 'tree decomposition', {'weight': 0.6})
('edward prescott', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('edward prescott', 'structural alignment', {'weight': 0.6})
('edward prescott', 'local convergence', {'weight': 0.6})
('edward prescott', 'knapsack problem', {'weight': 0.6})
('edward prescott', 'graph algorithm', {'weight': 0.6})
('edward prescott', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('edward prescott', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('edward prescott', 'hidden markov model', {'weight': 0.6})
('edward prescott', 'string (computer science)', {'weight': 0.6})
('edward prescott', 'bioinformatics', {'weight': 0.6})
('edward prescott', 'genetics', {'weight': 0.6})
('edward prescott', 'mathematical optimization', {'weight': 0.6})
('edward prescott', 'artificial neural networks', {'weight': 0.6})
('edward prescott', 'introduction to algorithms', {'weight': 0.6})
('edward prescott', 'thomas h. cormen', {'weight': 0.6})
('edward prescott', 'music information retrieval', {'weight': 0.6})
('edward prescott', 'beat (music)', {'weight': 0.6})
('edward prescott', 'longest common subsequence problem', {'weight': 0.6})
('edward prescott', 'convex minimization', {'weight': 0.6})
('edward prescott', 'successive parabolic interpolation', {'weight': 0.6})
('edward prescott', 'fibonacci sequence', {'weight': 0.6})
('edward prescott', 'maximum subarray problem', {'weight': 0.6})
('edward prescott', 'convex optimization', {'weight': 0.6})
('edward prescott', 'memoization', {'weight': 0.6})
('edward prescott', 'richard bellman', {'weight': 0.6})
('edward prescott', 'exponential growth', {'weight': 0.6})
('edward prescott', 'charles e. leiserson', {'weight': 0.6})
('edward prescott', 'charles erwin wilson', {'weight': 0.6})
('edward prescott', 'interval scheduling', {'weight': 0.6})
('edward prescott', 'chart parser', {'weight': 0.6})
('edward prescott', 'travelling salesman problem', {'weight': 0.6})
('edward prescott', 'bellman equation', {'weight': 0.6})
('referential transparency (computer science)', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('referential transparency (computer science)', 'photoshop', {'weight': 0.6})
('referential transparency (computer science)', 'sequence alignment', {'weight': 0.6})
('referential transparency (computer science)', 'flow network', {'weight': 0.6})
('referential transparency (computer science)', 'ellipsoid method', {'weight': 0.6})
('referential transparency (computer science)', 'chain matrix multiplication', {'weight': 0.6})
('referential transparency (computer science)', 'ieee', {'weight': 0.6})
('referential transparency (computer science)', 'backtracking', {'weight': 0.6})
('referential transparency (computer science)', 'nonlinear conjugate gradient method', {'weight': 0.6})
('referential transparency (computer science)', 'dynamic problem', {'weight': 0.6})
('referential transparency (computer science)', 'trust region', {'weight': 0.6})
('referential transparency (computer science)', 'function (mathematics)', {'weight': 0.6})
('referential transparency (computer science)', 'minimum spanning tree', {'weight': 0.6})
('referential transparency (computer science)', 'context-free grammar', {'weight': 0.6})
('referential transparency (computer science)', 'branch and cut', {'weight': 0.6})
('referential transparency (computer science)', 'state variable', {'weight': 0.6})
('referential transparency (computer science)', 'treewidth', {'weight': 0.6})
('referential transparency (computer science)', 'overlapping subproblem', {'weight': 0.6})
('referential transparency (computer science)', 'taylor & francis', {'weight': 0.6})
('referential transparency (computer science)', 'cutting-plane method', {'weight': 0.6})
('referential transparency (computer science)', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('referential transparency (computer science)', 'method of undetermined coefficients', {'weight': 0.6})
('referential transparency (computer science)', 'combinatorial optimization', {'weight': 0.6})
('referential transparency (computer science)', "newton's method in optimization", {'weight': 0.6})
('referential transparency (computer science)', 'matrix chain multiplication', {'weight': 0.6})
('referential transparency (computer science)', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('referential transparency (computer science)', 'dynamic time warping', {'weight': 0.6})
('referential transparency (computer science)', 'dynamic programming language', {'weight': 0.6})
('referential transparency (computer science)', 'call-by-need', {'weight': 0.6})
('referential transparency (computer science)', 'big-o notation', {'weight': 0.6})
('referential transparency (computer science)', 'comparison of optimization software', {'weight': 0.6})
('referential transparency (computer science)', 'quadratic programming', {'weight': 0.6})
('referential transparency (computer science)', 'common lisp', {'weight': 0.6})
('referential transparency (computer science)', 'barrier function', {'weight': 0.6})
('referential transparency (computer science)', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('referential transparency (computer science)', 'gradient descent', {'weight': 0.6})
('referential transparency (computer science)', 'patricia selinger', {'weight': 0.6})
('referential transparency (computer science)', 'discounting', {'weight': 0.6})
('referential transparency (computer science)', 'ronald l. rivest', {'weight': 0.6})
('referential transparency (computer science)', 'iterative method', {'weight': 0.6})
('referential transparency (computer science)', 'limited-memory bfgs', {'weight': 0.6})
('referential transparency (computer science)', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('referential transparency (computer science)', 'longest common substring problem', {'weight': 0.6})
('referential transparency (computer science)', 'clifford stein', {'weight': 0.6})
('referential transparency (computer science)', 'computer chess', {'weight': 0.6})
('referential transparency (computer science)', 'linear programming', {'weight': 0.6})
('referential transparency (computer science)', 'bitonic tour', {'weight': 0.6})
('referential transparency (computer science)', 'linear search problem', {'weight': 0.6})
('referential transparency (computer science)', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('referential transparency (computer science)', 'systems analysis', {'weight': 0.6})
('referential transparency (computer science)', 'capital (economics)', {'weight': 0.6})
('referential transparency (computer science)', 'programming language theory', {'weight': 0.5})
('referential transparency (computer science)', 'levenshtein distance', {'weight': 0.6})
('referential transparency (computer science)', 'nonlinear programming', {'weight': 0.6})
('referential transparency (computer science)', 'computational complexity of mathematical operations', {'weight': 0.6})
('referential transparency (computer science)', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('referential transparency (computer science)', 'gradient', {'weight': 0.6})
('referential transparency (computer science)', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('referential transparency (computer science)', 'bulletin of the american mathematical society', {'weight': 0.6})
('referential transparency (computer science)', 'u.s. english', {'weight': 0.6})
('referential transparency (computer science)', 'refutation table', {'weight': 0.6})
('referential transparency (computer science)', 'heuristic algorithm', {'weight': 0.6})
('referential transparency (computer science)', 'successive linear programming', {'weight': 0.6})
('referential transparency (computer science)', 'optimal substructure', {'weight': 0.6})
('referential transparency (computer science)', 'programming language', {'weight': 0.6})
('referential transparency (computer science)', 'mergesort', {'weight': 0.6})
('referential transparency (computer science)', "dijkstra's algorithm", {'weight': 0.6})
('referential transparency (computer science)', 'subgradient method', {'weight': 0.6})
('referential transparency (computer science)', 'call-by-name', {'weight': 0.6})
('referential transparency (computer science)', 'longest increasing subsequence problem', {'weight': 0.6})
('referential transparency (computer science)', 'edward prescott', {'weight': 0.6})
('referential transparency (computer science)', 'exponential time', {'weight': 0.6})
('referential transparency (computer science)', 'principle of optimality', {'weight': 0.6})
('referential transparency (computer science)', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('referential transparency (computer science)', 'mathematical game', {'weight': 0.6})
('referential transparency (computer science)', 'nancy stokey', {'weight': 0.6})
('referential transparency (computer science)', 'approximation algorithm', {'weight': 0.6})
('referential transparency (computer science)', 'discrete-time', {'weight': 0.6})
('referential transparency (computer science)', 'cyk algorithm', {'weight': 0.6})
('referential transparency (computer science)', 'markov decision process', {'weight': 0.6})
('referential transparency (computer science)', "powell's method", {'weight': 0.6})
('referential transparency (computer science)', 'wolfe conditions', {'weight': 0.6})
('referential transparency (computer science)', 'convexity in economics', {'weight': 0.6})
('referential transparency (computer science)', 'transposition table', {'weight': 0.6})
('referential transparency (computer science)', 'economics', {'weight': 0.6})
('referential transparency (computer science)', 'backward induction', {'weight': 0.6})
('referential transparency (computer science)', 'golden section search', {'weight': 0.6})
('referential transparency (computer science)', 'edit distance', {'weight': 0.6})
('referential transparency (computer science)', 'tree structure', {'weight': 0.6})
('referential transparency (computer science)', 'exchange algorithm', {'weight': 0.6})
('referential transparency (computer science)', 'idempotence in computer science', {'weight': 0.7})
('referential transparency (computer science)', 'dover publications', {'weight': 0.6})
('referential transparency (computer science)', 'seam carving', {'weight': 0.6})
('referential transparency (computer science)', 'recursive least squares', {'weight': 0.6})
('referential transparency (computer science)', 'metaheuristic', {'weight': 0.6})
('referential transparency (computer science)', 'quasi-newton method', {'weight': 0.6})
('referential transparency (computer science)', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('referential transparency (computer science)', 'robert e. lucas', {'weight': 0.6})
('referential transparency (computer science)', 'non-convexity (economics)', {'weight': 0.6})
('referential transparency (computer science)', 'sr1 formula', {'weight': 0.6})
('referential transparency (computer science)', 'mathematical reviews', {'weight': 0.6})
('referential transparency (computer science)', 'puzzle', {'weight': 0.6})
('referential transparency (computer science)', 'associative array', {'weight': 0.6})
('referential transparency (computer science)', 'shortest path problem', {'weight': 0.6})
('referential transparency (computer science)', 'dynamic algorithm', {'weight': 0.6})
('referential transparency (computer science)', 'augmented lagrangian method', {'weight': 0.6})
('referential transparency (computer science)', 'charles delisi', {'weight': 0.6})
('referential transparency (computer science)', 'greedy algorithm', {'weight': 0.6})
('referential transparency (computer science)', "karmarkar's algorithm", {'weight': 0.6})
('referential transparency (computer science)', 'lattice models', {'weight': 0.6})
('referential transparency (computer science)', 'utility', {'weight': 0.6})
('referential transparency (computer science)', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('referential transparency (computer science)', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('referential transparency (computer science)', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('referential transparency (computer science)', 'international standard book number', {'weight': 0.6})
('referential transparency (computer science)', 'undirected graph', {'weight': 0.6})
('referential transparency (computer science)', 'scheme (programming language)', {'weight': 0.6})
('referential transparency (computer science)', 'rna structure', {'weight': 0.6})
('referential transparency (computer science)', 'hanoi', {'weight': 0.6})
('referential transparency (computer science)', 'perl', {'weight': 0.6})
('referential transparency (computer science)', 'digital object identifier', {'weight': 0.6})
('referential transparency (computer science)', 'sequential quadratic programming', {'weight': 0.6})
('referential transparency (computer science)', "dinic's algorithm", {'weight': 0.6})
('referential transparency (computer science)', 'pseudo-polynomial time', {'weight': 0.6})
('referential transparency (computer science)', 'partition problem', {'weight': 0.6})
('referential transparency (computer science)', 'stochastic programming', {'weight': 0.6})
('referential transparency (computer science)', 'hill climbing', {'weight': 0.6})
('referential transparency (computer science)', 'top-down', {'weight': 0.6})
('referential transparency (computer science)', 'de boor algorithm', {'weight': 0.6})
('referential transparency (computer science)', 'optimization algorithm', {'weight': 0.6})
('referential transparency (computer science)', "kruskal's algorithm", {'weight': 0.6})
('referential transparency (computer science)', 'jacques philippe marie binet', {'weight': 0.6})
('referential transparency (computer science)', 'tabu search', {'weight': 0.6})
('referential transparency (computer science)', 'divide and conquer algorithm', {'weight': 0.6})
('referential transparency (computer science)', "johnson's algorithm", {'weight': 0.6})
('referential transparency (computer science)', 'evolutionary algorithm', {'weight': 0.6})
('referential transparency (computer science)', 'clique-width', {'weight': 0.6})
('referential transparency (computer science)', 'dynamic programming', {'weight': 0.6})
('referential transparency (computer science)', 'subroutine', {'weight': 0.6})
('referential transparency (computer science)', 'simulated annealing', {'weight': 0.6})
('referential transparency (computer science)', 'tower of hanoi', {'weight': 0.6})
('referential transparency (computer science)', 'branch and bound', {'weight': 0.6})
('referential transparency (computer science)', 'engineering', {'weight': 0.6})
('referential transparency (computer science)', 'matroid', {'weight': 0.6})
('referential transparency (computer science)', 'viterbi algorithm', {'weight': 0.6})
('referential transparency (computer science)', "lemke's algorithm", {'weight': 0.6})
('referential transparency (computer science)', 'simplex algorithm', {'weight': 0.6})
('referential transparency (computer science)', 'local search (optimization)', {'weight': 0.6})
('referential transparency (computer science)', 'hessian matrix', {'weight': 0.6})
('referential transparency (computer science)', 'ibm system r', {'weight': 0.6})
('referential transparency (computer science)', 'penalty method', {'weight': 0.6})
('referential transparency (computer science)', 'prolog', {'weight': 0.6})
('referential transparency (computer science)', 'time-invariant system', {'weight': 0.6})
('referential transparency (computer science)', 'criss-cross algorithm', {'weight': 0.6})
('referential transparency (computer science)', 'rewrite rule', {'weight': 0.7})
('referential transparency (computer science)', 'revised simplex algorithm', {'weight': 0.6})
('referential transparency (computer science)', 'the mathematical association of america', {'weight': 0.6})
('referential transparency (computer science)', 'line search', {'weight': 0.6})
('referential transparency (computer science)', 'j (programming language)', {'weight': 0.6})
('referential transparency (computer science)', 'word wrap', {'weight': 0.6})
('referential transparency (computer science)', 'subset sum problem', {'weight': 0.6})
('referential transparency (computer science)', 'integer programming', {'weight': 0.6})
('referential transparency (computer science)', 'nucleosome', {'weight': 0.6})
('referential transparency (computer science)', 'earley algorithm', {'weight': 0.6})
('referential transparency (computer science)', 'referential transparency (computer science)', {'weight': 1})
('referential transparency (computer science)', 'recursion', {'weight': 0.6})
('referential transparency (computer science)', 'mathematica', {'weight': 0.6})
('referential transparency (computer science)', 'quicksort', {'weight': 0.6})
('referential transparency (computer science)', 'recursion (computer science)', {'weight': 0.6})
('referential transparency (computer science)', 'checkerboard', {'weight': 0.6})
('referential transparency (computer science)', 'computer science', {'weight': 0.6})
('referential transparency (computer science)', 'brute-force search', {'weight': 0.6})
('referential transparency (computer science)', 'mathematics', {'weight': 0.6})
('referential transparency (computer science)', 'depth-first search', {'weight': 0.6})
('referential transparency (computer science)', 'top-down and bottom-up design', {'weight': 0.6})
('referential transparency (computer science)', 'correspondence problem', {'weight': 0.6})
('referential transparency (computer science)', 'transcription factor', {'weight': 0.6})
('referential transparency (computer science)', 'tree decomposition', {'weight': 0.6})
('referential transparency (computer science)', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('referential transparency (computer science)', 'structural alignment', {'weight': 0.6})
('referential transparency (computer science)', 'local convergence', {'weight': 0.6})
('referential transparency (computer science)', 'knapsack problem', {'weight': 0.6})
('referential transparency (computer science)', 'graph algorithm', {'weight': 0.6})
('referential transparency (computer science)', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('referential transparency (computer science)', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('referential transparency (computer science)', 'hidden markov model', {'weight': 0.6})
('referential transparency (computer science)', 'string (computer science)', {'weight': 0.6})
('referential transparency (computer science)', 'bioinformatics', {'weight': 0.6})
('referential transparency (computer science)', 'genetics', {'weight': 0.6})
('referential transparency (computer science)', 'mathematical optimization', {'weight': 0.6})
('referential transparency (computer science)', 'artificial neural networks', {'weight': 0.6})
('referential transparency (computer science)', 'introduction to algorithms', {'weight': 0.6})
('referential transparency (computer science)', 'thomas h. cormen', {'weight': 0.6})
('referential transparency (computer science)', 'music information retrieval', {'weight': 0.6})
('referential transparency (computer science)', 'beat (music)', {'weight': 0.6})
('referential transparency (computer science)', 'longest common subsequence problem', {'weight': 0.6})
('referential transparency (computer science)', 'convex minimization', {'weight': 0.6})
('referential transparency (computer science)', 'successive parabolic interpolation', {'weight': 0.6})
('referential transparency (computer science)', 'fibonacci sequence', {'weight': 0.6})
('referential transparency (computer science)', 'maximum subarray problem', {'weight': 0.6})
('referential transparency (computer science)', 'convex optimization', {'weight': 0.6})
('referential transparency (computer science)', 'memoization', {'weight': 0.6})
('referential transparency (computer science)', 'richard bellman', {'weight': 0.6})
('referential transparency (computer science)', 'exponential growth', {'weight': 0.6})
('referential transparency (computer science)', 'charles e. leiserson', {'weight': 0.6})
('referential transparency (computer science)', 'charles erwin wilson', {'weight': 0.6})
('referential transparency (computer science)', 'interval scheduling', {'weight': 0.6})
('referential transparency (computer science)', 'chart parser', {'weight': 0.6})
('referential transparency (computer science)', 'travelling salesman problem', {'weight': 0.6})
('referential transparency (computer science)', 'bellman equation', {'weight': 0.6})
('charles e. leiserson', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('charles e. leiserson', 'photoshop', {'weight': 0.6})
('charles e. leiserson', 'sequence alignment', {'weight': 0.6})
('charles e. leiserson', 'flow network', {'weight': 0.6})
('charles e. leiserson', 'ellipsoid method', {'weight': 0.6})
('charles e. leiserson', 'chain matrix multiplication', {'weight': 0.6})
('charles e. leiserson', 'ieee', {'weight': 0.6})
('charles e. leiserson', 'backtracking', {'weight': 0.6})
('charles e. leiserson', 'nonlinear conjugate gradient method', {'weight': 0.6})
('charles e. leiserson', 'dynamic problem', {'weight': 0.6})
('charles e. leiserson', 'trust region', {'weight': 0.6})
('charles e. leiserson', 'function (mathematics)', {'weight': 0.6})
('charles e. leiserson', 'minimum spanning tree', {'weight': 0.6})
('charles e. leiserson', 'context-free grammar', {'weight': 0.6})
('charles e. leiserson', 'branch and cut', {'weight': 0.6})
('charles e. leiserson', 'state variable', {'weight': 0.6})
('charles e. leiserson', 'treewidth', {'weight': 0.6})
('charles e. leiserson', 'overlapping subproblem', {'weight': 0.6})
('charles e. leiserson', 'taylor & francis', {'weight': 0.6})
('charles e. leiserson', 'cutting-plane method', {'weight': 0.6})
('charles e. leiserson', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('charles e. leiserson', 'method of undetermined coefficients', {'weight': 0.6})
('charles e. leiserson', 'combinatorial optimization', {'weight': 0.6})
('charles e. leiserson', "newton's method in optimization", {'weight': 0.6})
('charles e. leiserson', 'matrix chain multiplication', {'weight': 0.6})
('charles e. leiserson', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('charles e. leiserson', 'dynamic time warping', {'weight': 0.6})
('charles e. leiserson', 'dynamic programming language', {'weight': 0.6})
('charles e. leiserson', 'call-by-need', {'weight': 0.6})
('charles e. leiserson', 'big-o notation', {'weight': 0.6})
('charles e. leiserson', 'comparison of optimization software', {'weight': 0.6})
('charles e. leiserson', 'quadratic programming', {'weight': 0.6})
('charles e. leiserson', 'common lisp', {'weight': 0.6})
('charles e. leiserson', 'barrier function', {'weight': 0.6})
('charles e. leiserson', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('charles e. leiserson', 'gradient descent', {'weight': 0.6})
('charles e. leiserson', 'patricia selinger', {'weight': 0.6})
('charles e. leiserson', 'discounting', {'weight': 0.6})
('charles e. leiserson', 'ronald l. rivest', {'weight': 0.6})
('charles e. leiserson', 'iterative method', {'weight': 0.6})
('charles e. leiserson', 'limited-memory bfgs', {'weight': 0.6})
('charles e. leiserson', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('charles e. leiserson', 'longest common substring problem', {'weight': 0.6})
('charles e. leiserson', 'clifford stein', {'weight': 0.6})
('charles e. leiserson', 'computer chess', {'weight': 0.6})
('charles e. leiserson', 'linear programming', {'weight': 0.6})
('charles e. leiserson', 'bitonic tour', {'weight': 0.6})
('charles e. leiserson', 'linear search problem', {'weight': 0.6})
('charles e. leiserson', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('charles e. leiserson', 'systems analysis', {'weight': 0.6})
('charles e. leiserson', 'capital (economics)', {'weight': 0.6})
('charles e. leiserson', 'levenshtein distance', {'weight': 0.6})
('charles e. leiserson', 'nonlinear programming', {'weight': 0.6})
('charles e. leiserson', 'computational complexity of mathematical operations', {'weight': 0.6})
('charles e. leiserson', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('charles e. leiserson', 'gradient', {'weight': 0.6})
('charles e. leiserson', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('charles e. leiserson', 'bulletin of the american mathematical society', {'weight': 0.6})
('charles e. leiserson', 'u.s. english', {'weight': 0.6})
('charles e. leiserson', 'refutation table', {'weight': 0.6})
('charles e. leiserson', 'heuristic algorithm', {'weight': 0.6})
('charles e. leiserson', 'successive linear programming', {'weight': 0.6})
('charles e. leiserson', 'optimal substructure', {'weight': 0.6})
('charles e. leiserson', 'programming language', {'weight': 0.6})
('charles e. leiserson', 'mergesort', {'weight': 0.6})
('charles e. leiserson', "dijkstra's algorithm", {'weight': 0.6})
('charles e. leiserson', 'subgradient method', {'weight': 0.6})
('charles e. leiserson', 'call-by-name', {'weight': 0.6})
('charles e. leiserson', 'longest increasing subsequence problem', {'weight': 0.6})
('charles e. leiserson', 'edward prescott', {'weight': 0.6})
('charles e. leiserson', 'exponential time', {'weight': 0.6})
('charles e. leiserson', 'principle of optimality', {'weight': 0.6})
('charles e. leiserson', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('charles e. leiserson', 'mathematical game', {'weight': 0.6})
('charles e. leiserson', 'nancy stokey', {'weight': 0.6})
('charles e. leiserson', 'approximation algorithm', {'weight': 0.6})
('charles e. leiserson', 'discrete-time', {'weight': 0.6})
('charles e. leiserson', 'cyk algorithm', {'weight': 0.6})
('charles e. leiserson', 'markov decision process', {'weight': 0.6})
('charles e. leiserson', "powell's method", {'weight': 0.6})
('charles e. leiserson', 'wolfe conditions', {'weight': 0.6})
('charles e. leiserson', 'convexity in economics', {'weight': 0.6})
('charles e. leiserson', 'transposition table', {'weight': 0.6})
('charles e. leiserson', 'economics', {'weight': 0.6})
('charles e. leiserson', 'backward induction', {'weight': 0.6})
('charles e. leiserson', 'golden section search', {'weight': 0.6})
('charles e. leiserson', 'edit distance', {'weight': 0.6})
('charles e. leiserson', 'tree structure', {'weight': 0.6})
('charles e. leiserson', 'exchange algorithm', {'weight': 0.6})
('charles e. leiserson', 'dover publications', {'weight': 0.6})
('charles e. leiserson', 'seam carving', {'weight': 0.6})
('charles e. leiserson', 'recursive least squares', {'weight': 0.6})
('charles e. leiserson', 'metaheuristic', {'weight': 0.6})
('charles e. leiserson', 'quasi-newton method', {'weight': 0.6})
('charles e. leiserson', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('charles e. leiserson', 'robert e. lucas', {'weight': 0.6})
('charles e. leiserson', 'non-convexity (economics)', {'weight': 0.6})
('charles e. leiserson', 'sr1 formula', {'weight': 0.6})
('charles e. leiserson', 'mathematical reviews', {'weight': 0.6})
('charles e. leiserson', 'puzzle', {'weight': 0.6})
('charles e. leiserson', 'associative array', {'weight': 0.6})
('charles e. leiserson', 'shortest path problem', {'weight': 0.6})
('charles e. leiserson', 'dynamic algorithm', {'weight': 0.6})
('charles e. leiserson', 'augmented lagrangian method', {'weight': 0.6})
('charles e. leiserson', 'charles delisi', {'weight': 0.6})
('charles e. leiserson', 'greedy algorithm', {'weight': 0.6})
('charles e. leiserson', "karmarkar's algorithm", {'weight': 0.6})
('charles e. leiserson', 'lattice models', {'weight': 0.6})
('charles e. leiserson', 'utility', {'weight': 0.6})
('charles e. leiserson', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('charles e. leiserson', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('charles e. leiserson', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('charles e. leiserson', 'international standard book number', {'weight': 0.6})
('charles e. leiserson', 'undirected graph', {'weight': 0.6})
('charles e. leiserson', 'scheme (programming language)', {'weight': 0.6})
('charles e. leiserson', 'rna structure', {'weight': 0.6})
('charles e. leiserson', 'hanoi', {'weight': 0.6})
('charles e. leiserson', 'perl', {'weight': 0.6})
('charles e. leiserson', 'digital object identifier', {'weight': 0.6})
('charles e. leiserson', 'sequential quadratic programming', {'weight': 0.6})
('charles e. leiserson', "dinic's algorithm", {'weight': 0.6})
('charles e. leiserson', 'pseudo-polynomial time', {'weight': 0.6})
('charles e. leiserson', 'partition problem', {'weight': 0.6})
('charles e. leiserson', 'stochastic programming', {'weight': 0.6})
('charles e. leiserson', 'hill climbing', {'weight': 0.6})
('charles e. leiserson', 'top-down', {'weight': 0.6})
('charles e. leiserson', 'de boor algorithm', {'weight': 0.6})
('charles e. leiserson', 'optimization algorithm', {'weight': 0.6})
('charles e. leiserson', "kruskal's algorithm", {'weight': 0.6})
('charles e. leiserson', 'jacques philippe marie binet', {'weight': 0.6})
('charles e. leiserson', 'tabu search', {'weight': 0.6})
('charles e. leiserson', 'divide and conquer algorithm', {'weight': 0.6})
('charles e. leiserson', "johnson's algorithm", {'weight': 0.6})
('charles e. leiserson', 'evolutionary algorithm', {'weight': 0.6})
('charles e. leiserson', 'clique-width', {'weight': 0.6})
('charles e. leiserson', 'dynamic programming', {'weight': 0.6})
('charles e. leiserson', 'subroutine', {'weight': 0.6})
('charles e. leiserson', 'simulated annealing', {'weight': 0.6})
('charles e. leiserson', 'tower of hanoi', {'weight': 0.6})
('charles e. leiserson', 'branch and bound', {'weight': 0.6})
('charles e. leiserson', 'engineering', {'weight': 0.6})
('charles e. leiserson', 'matroid', {'weight': 0.6})
('charles e. leiserson', 'viterbi algorithm', {'weight': 0.6})
('charles e. leiserson', "lemke's algorithm", {'weight': 0.6})
('charles e. leiserson', 'simplex algorithm', {'weight': 0.6})
('charles e. leiserson', 'local search (optimization)', {'weight': 0.6})
('charles e. leiserson', 'hessian matrix', {'weight': 0.6})
('charles e. leiserson', 'ibm system r', {'weight': 0.6})
('charles e. leiserson', 'penalty method', {'weight': 0.6})
('charles e. leiserson', 'prolog', {'weight': 0.6})
('charles e. leiserson', 'time-invariant system', {'weight': 0.6})
('charles e. leiserson', 'criss-cross algorithm', {'weight': 0.6})
('charles e. leiserson', 'revised simplex algorithm', {'weight': 0.6})
('charles e. leiserson', 'the mathematical association of america', {'weight': 0.6})
('charles e. leiserson', 'line search', {'weight': 0.6})
('charles e. leiserson', 'j (programming language)', {'weight': 0.6})
('charles e. leiserson', 'word wrap', {'weight': 0.6})
('charles e. leiserson', 'subset sum problem', {'weight': 0.6})
('charles e. leiserson', 'integer programming', {'weight': 0.6})
('charles e. leiserson', 'nucleosome', {'weight': 0.6})
('charles e. leiserson', 'earley algorithm', {'weight': 0.6})
('charles e. leiserson', 'referential transparency (computer science)', {'weight': 0.6})
('charles e. leiserson', 'recursion', {'weight': 0.6})
('charles e. leiserson', 'mathematica', {'weight': 0.6})
('charles e. leiserson', 'quicksort', {'weight': 0.6})
('charles e. leiserson', 'recursion (computer science)', {'weight': 0.6})
('charles e. leiserson', 'checkerboard', {'weight': 0.6})
('charles e. leiserson', 'computer science', {'weight': 0.6})
('charles e. leiserson', 'brute-force search', {'weight': 0.6})
('charles e. leiserson', 'mathematics', {'weight': 0.6})
('charles e. leiserson', 'depth-first search', {'weight': 0.6})
('charles e. leiserson', 'top-down and bottom-up design', {'weight': 0.6})
('charles e. leiserson', 'correspondence problem', {'weight': 0.6})
('charles e. leiserson', 'transcription factor', {'weight': 0.6})
('charles e. leiserson', 'tree decomposition', {'weight': 0.6})
('charles e. leiserson', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('charles e. leiserson', 'structural alignment', {'weight': 0.6})
('charles e. leiserson', 'local convergence', {'weight': 0.6})
('charles e. leiserson', 'knapsack problem', {'weight': 0.6})
('charles e. leiserson', 'graph algorithm', {'weight': 0.6})
('charles e. leiserson', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('charles e. leiserson', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('charles e. leiserson', 'hidden markov model', {'weight': 0.6})
('charles e. leiserson', 'string (computer science)', {'weight': 0.6})
('charles e. leiserson', 'bioinformatics', {'weight': 0.6})
('charles e. leiserson', 'genetics', {'weight': 0.6})
('charles e. leiserson', 'mathematical optimization', {'weight': 0.6})
('charles e. leiserson', 'artificial neural networks', {'weight': 0.6})
('charles e. leiserson', 'introduction to algorithms', {'weight': 0.6})
('charles e. leiserson', 'thomas h. cormen', {'weight': 0.6})
('charles e. leiserson', 'music information retrieval', {'weight': 0.6})
('charles e. leiserson', 'beat (music)', {'weight': 0.6})
('charles e. leiserson', 'longest common subsequence problem', {'weight': 0.6})
('charles e. leiserson', 'convex minimization', {'weight': 0.6})
('charles e. leiserson', 'successive parabolic interpolation', {'weight': 0.6})
('charles e. leiserson', 'fibonacci sequence', {'weight': 0.6})
('charles e. leiserson', 'maximum subarray problem', {'weight': 0.6})
('charles e. leiserson', 'convex optimization', {'weight': 0.6})
('charles e. leiserson', 'memoization', {'weight': 0.6})
('charles e. leiserson', 'richard bellman', {'weight': 0.6})
('charles e. leiserson', 'exponential growth', {'weight': 0.6})
('charles e. leiserson', 'charles e. leiserson', {'weight': 1})
('charles e. leiserson', 'charles erwin wilson', {'weight': 0.6})
('charles e. leiserson', 'interval scheduling', {'weight': 0.6})
('charles e. leiserson', 'chart parser', {'weight': 0.6})
('charles e. leiserson', 'travelling salesman problem', {'weight': 0.6})
('charles e. leiserson', 'bellman equation', {'weight': 0.6})
('mathematica', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('mathematica', 'photoshop', {'weight': 0.6})
('mathematica', 'sequence alignment', {'weight': 0.6})
('mathematica', 'flow network', {'weight': 0.6})
('mathematica', 'mathematics literature', {'weight': 0.5})
('mathematica', 'charles erwin wilson', {'weight': 0.6})
('mathematica', 'begriffsschrift', {'weight': 0.7})
('mathematica', 'ellipsoid method', {'weight': 0.6})
('mathematica', '1912 books', {'weight': 0.5})
('mathematica', 'ieee', {'weight': 0.6})
('mathematica', 'backtracking', {'weight': 0.6})
('mathematica', 'nonlinear conjugate gradient method', {'weight': 0.6})
('mathematica', 'dynamic problem', {'weight': 0.6})
('mathematica', 'large-scale mathematical formalization projects', {'weight': 0.5})
('mathematica', 'trust region', {'weight': 0.6})
('mathematica', 'function (mathematics)', {'weight': 0.6})
('mathematica', 'analytic philosophy literature', {'weight': 0.5})
('mathematica', 'minimum spanning tree', {'weight': 0.6})
('mathematica', 'context-free grammar', {'weight': 0.6})
('mathematica', 'branch and cut', {'weight': 0.6})
('mathematica', 'state variable', {'weight': 0.6})
('mathematica', 'axiomatic set theory', {'weight': 0.7})
('mathematica', 'treewidth', {'weight': 0.6})
('mathematica', 'overlapping subproblem', {'weight': 0.6})
('mathematica', 'taylor & francis', {'weight': 0.6})
('mathematica', 'cutting-plane method', {'weight': 0.6})
('mathematica', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('mathematica', "dijkstra's algorithm", {'weight': 0.6})
('mathematica', 'combinatorial optimization', {'weight': 0.6})
('mathematica', "newton's method in optimization", {'weight': 0.6})
('mathematica', 'matrix chain multiplication', {'weight': 0.6})
('mathematica', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('mathematica', 'dynamic time warping', {'weight': 0.6})
('mathematica', 'dynamic programming language', {'weight': 0.6})
('mathematica', 'call-by-need', {'weight': 0.6})
('mathematica', 'big-o notation', {'weight': 0.6})
('mathematica', 'information processing language', {'weight': 0.7})
('mathematica', 'comparison of optimization software', {'weight': 0.6})
('mathematica', 'quadratic programming', {'weight': 0.6})
('mathematica', 'common lisp', {'weight': 0.6})
('mathematica', 'barrier function', {'weight': 0.6})
('mathematica', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('mathematica', 'gradient descent', {'weight': 0.6})
('mathematica', 'patricia selinger', {'weight': 0.6})
('mathematica', 'discounting', {'weight': 0.6})
('mathematica', 'ronald l. rivest', {'weight': 0.6})
('mathematica', 'iterative method', {'weight': 0.6})
('mathematica', 'augmented lagrangian method', {'weight': 0.6})
('mathematica', '1913 books', {'weight': 0.5})
('mathematica', 'limited-memory bfgs', {'weight': 0.6})
('mathematica', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('mathematica', 'longest common substring problem', {'weight': 0.6})
('mathematica', 'clifford stein', {'weight': 0.6})
('mathematica', 'mathematics books', {'weight': 0.5})
('mathematica', 'computer chess', {'weight': 0.6})
('mathematica', '1913 in science', {'weight': 0.5})
('mathematica', 'bitonic tour', {'weight': 0.6})
('mathematica', 'linear search problem', {'weight': 0.6})
('mathematica', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('mathematica', 'systems analysis', {'weight': 0.6})
('mathematica', 'capital (economics)', {'weight': 0.6})
('mathematica', 'books by bertrand russell', {'weight': 0.5})
('mathematica', 'levenshtein distance', {'weight': 0.6})
('mathematica', 'nonlinear programming', {'weight': 0.6})
('mathematica', 'chain matrix multiplication', {'weight': 0.6})
('mathematica', 'computational complexity of mathematical operations', {'weight': 0.6})
('mathematica', '1912 in science', {'weight': 0.5})
('mathematica', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('mathematica', 'gradient', {'weight': 0.6})
('mathematica', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('mathematica', 'bulletin of the american mathematical society', {'weight': 0.6})
('mathematica', 'lattice models', {'weight': 0.6})
('mathematica', 'refutation table', {'weight': 0.6})
('mathematica', 'heuristic algorithm', {'weight': 0.6})
('mathematica', 'successive linear programming', {'weight': 0.6})
('mathematica', 'optimal substructure', {'weight': 0.6})
('mathematica', 'programming language', {'weight': 0.6})
('mathematica', 'mergesort', {'weight': 0.6})
('mathematica', 'simulated annealing', {'weight': 0.6})
('mathematica', 'subgradient method', {'weight': 0.6})
('mathematica', 'hessian matrix', {'weight': 0.6})
('mathematica', 'call-by-name', {'weight': 0.6})
('mathematica', 'longest increasing subsequence problem', {'weight': 0.6})
('mathematica', 'edward prescott', {'weight': 0.6})
('mathematica', 'exponential time', {'weight': 0.6})
('mathematica', 'principle of optimality', {'weight': 0.6})
('mathematica', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('mathematica', 'mathematical game', {'weight': 0.6})
('mathematica', 'nancy stokey', {'weight': 0.6})
('mathematica', 'approximation algorithm', {'weight': 0.6})
('mathematica', 'discrete-time', {'weight': 0.6})
('mathematica', 'cyk algorithm', {'weight': 0.6})
('mathematica', 'markov decision process', {'weight': 0.6})
('mathematica', 'method of undetermined coefficients', {'weight': 0.6})
('mathematica', "powell's method", {'weight': 0.6})
('mathematica', 'wolfe conditions', {'weight': 0.6})
('mathematica', 'convexity in economics', {'weight': 0.6})
('mathematica', 'transposition table', {'weight': 0.6})
('mathematica', 'economics', {'weight': 0.6})
('mathematica', 'backward induction', {'weight': 0.6})
('mathematica', 'golden section search', {'weight': 0.6})
('mathematica', 'edit distance', {'weight': 0.6})
('mathematica', 'tree structure', {'weight': 0.6})
('mathematica', 'exchange algorithm', {'weight': 0.6})
('mathematica', 'dover publications', {'weight': 0.6})
('mathematica', 'seam carving', {'weight': 0.6})
('mathematica', 'recursive least squares', {'weight': 0.6})
('mathematica', 'metaheuristic', {'weight': 0.6})
('mathematica', 'quasi-newton method', {'weight': 0.6})
('mathematica', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('mathematica', 'robert e. lucas', {'weight': 0.6})
('mathematica', 'non-convexity (economics)', {'weight': 0.6})
('mathematica', '1910 books', {'weight': 0.5})
('mathematica', 'sr1 formula', {'weight': 0.6})
('mathematica', 'mathematical reviews', {'weight': 0.6})
('mathematica', 'hanoi', {'weight': 0.6})
('mathematica', 'puzzle', {'weight': 0.6})
('mathematica', 'associative array', {'weight': 0.6})
('mathematica', 'shortest path problem', {'weight': 0.6})
('mathematica', 'dynamic algorithm', {'weight': 0.6})
('mathematica', 'mathematical logic', {'weight': 0.5})
('mathematica', 'charles delisi', {'weight': 0.6})
('mathematica', 'greedy algorithm', {'weight': 0.6})
('mathematica', "karmarkar's algorithm", {'weight': 0.6})
('mathematica', 'u.s. english', {'weight': 0.6})
('mathematica', 'utility', {'weight': 0.6})
('mathematica', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('mathematica', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('mathematica', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('mathematica', 'international standard book number', {'weight': 0.6})
('mathematica', 'undirected graph', {'weight': 0.6})
('mathematica', 'scheme (programming language)', {'weight': 0.6})
('mathematica', 'rna structure', {'weight': 0.6})
('mathematica', 'works by alfred north whitehead', {'weight': 0.5})
('mathematica', 'perl', {'weight': 0.6})
('mathematica', 'digital object identifier', {'weight': 0.6})
('mathematica', 'sequential quadratic programming', {'weight': 0.6})
('mathematica', "dinic's algorithm", {'weight': 0.6})
('mathematica', 'pseudo-polynomial time', {'weight': 0.6})
('mathematica', 'linear programming', {'weight': 0.6})
('mathematica', 'stochastic programming', {'weight': 0.6})
('mathematica', 'hill climbing', {'weight': 0.6})
('mathematica', 'top-down', {'weight': 0.6})
('mathematica', 'de boor algorithm', {'weight': 0.6})
('mathematica', 'optimization algorithm', {'weight': 0.6})
('mathematica', "kruskal's algorithm", {'weight': 0.6})
('mathematica', 'boolean algebra (logic)', {'weight': 0.7})
('mathematica', 'jacques philippe marie binet', {'weight': 0.6})
('mathematica', 'tabu search', {'weight': 0.6})
('mathematica', 'divide and conquer algorithm', {'weight': 0.6})
('mathematica', "johnson's algorithm", {'weight': 0.6})
('mathematica', 'evolutionary algorithm', {'weight': 0.6})
('mathematica', 'clique-width', {'weight': 0.6})
('mathematica', 'logic books', {'weight': 0.5})
('mathematica', 'dynamic programming', {'weight': 0.6})
('mathematica', 'subroutine', {'weight': 0.6})
('mathematica', 'tower of hanoi', {'weight': 0.6})
('mathematica', 'branch and bound', {'weight': 0.6})
('mathematica', 'engineering', {'weight': 0.6})
('mathematica', 'matroid', {'weight': 0.6})
('mathematica', 'viterbi algorithm', {'weight': 0.6})
('mathematica', "lemke's algorithm", {'weight': 0.6})
('mathematica', 'simplex algorithm', {'weight': 0.6})
('mathematica', 'local search (optimization)', {'weight': 0.6})
('mathematica', 'partition problem', {'weight': 0.6})
('mathematica', 'ibm system r', {'weight': 0.6})
('mathematica', 'penalty method', {'weight': 0.6})
('mathematica', 'prolog', {'weight': 0.6})
('mathematica', 'time-invariant system', {'weight': 0.6})
('mathematica', 'criss-cross algorithm', {'weight': 0.6})
('mathematica', 'revised simplex algorithm', {'weight': 0.6})
('mathematica', 'the mathematical association of america', {'weight': 0.6})
('mathematica', '1910 in science', {'weight': 0.5})
('mathematica', 'line search', {'weight': 0.6})
('mathematica', 'j (programming language)', {'weight': 0.6})
('mathematica', 'word wrap', {'weight': 0.6})
('mathematica', 'subset sum problem', {'weight': 0.6})
('mathematica', 'integer programming', {'weight': 0.6})
('mathematica', 'nucleosome', {'weight': 0.6})
('mathematica', 'earley algorithm', {'weight': 0.6})
('mathematica', 'referential transparency (computer science)', {'weight': 0.6})
('mathematica', 'recursion', {'weight': 0.6})
('mathematica', 'mathematica', {'weight': 1})
('mathematica', 'quicksort', {'weight': 0.6})
('mathematica', 'recursion (computer science)', {'weight': 0.6})
('mathematica', 'computer science', {'weight': 0.6})
('mathematica', 'brute-force search', {'weight': 0.6})
('mathematica', 'mathematics', {'weight': 0.6})
('mathematica', 'depth-first search', {'weight': 0.6})
('mathematica', 'top-down and bottom-up design', {'weight': 0.6})
('mathematica', 'correspondence problem', {'weight': 0.6})
('mathematica', 'transcription factor', {'weight': 0.6})
('mathematica', 'tree decomposition', {'weight': 0.6})
('mathematica', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('mathematica', 'structural alignment', {'weight': 0.6})
('mathematica', 'local convergence', {'weight': 0.6})
('mathematica', 'knapsack problem', {'weight': 0.6})
('mathematica', 'graph algorithm', {'weight': 0.6})
('mathematica', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('mathematica', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('mathematica', 'hidden markov model', {'weight': 0.6})
('mathematica', 'string (computer science)', {'weight': 0.6})
('mathematica', 'bioinformatics', {'weight': 0.6})
('mathematica', 'genetics', {'weight': 0.6})
('mathematica', 'mathematical optimization', {'weight': 0.6})
('mathematica', 'artificial neural networks', {'weight': 0.6})
('mathematica', 'introduction to algorithms', {'weight': 0.6})
('mathematica', 'thomas h. cormen', {'weight': 0.6})
('mathematica', 'music information retrieval', {'weight': 0.6})
('mathematica', 'beat (music)', {'weight': 0.6})
('mathematica', 'longest common subsequence problem', {'weight': 0.6})
('mathematica', 'convex minimization', {'weight': 0.6})
('mathematica', 'successive parabolic interpolation', {'weight': 0.6})
('mathematica', 'fibonacci sequence', {'weight': 0.6})
('mathematica', 'maximum subarray problem', {'weight': 0.6})
('mathematica', 'convex optimization', {'weight': 0.6})
('mathematica', 'memoization', {'weight': 0.6})
('mathematica', 'richard bellman', {'weight': 0.6})
('mathematica', 'exponential growth', {'weight': 0.6})
('mathematica', 'charles e. leiserson', {'weight': 0.6})
('mathematica', 'checkerboard', {'weight': 0.6})
('mathematica', 'interval scheduling', {'weight': 0.6})
('mathematica', 'chart parser', {'weight': 0.6})
('mathematica', 'travelling salesman problem', {'weight': 0.6})
('mathematica', 'bellman equation', {'weight': 0.6})
('trust region', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('trust region', 'photoshop', {'weight': 0.6})
('trust region', 'sequence alignment', {'weight': 0.6})
('trust region', 'flow network', {'weight': 0.6})
('trust region', 'ellipsoid method', {'weight': 0.6})
('trust region', 'chain matrix multiplication', {'weight': 0.6})
('trust region', 'ieee', {'weight': 0.6})
('trust region', 'backtracking', {'weight': 0.6})
('trust region', 'nonlinear conjugate gradient method', {'weight': 0.6})
('trust region', 'dynamic problem', {'weight': 0.6})
('trust region', 'trust region', {'weight': 1})
('trust region', 'function (mathematics)', {'weight': 0.6})
('trust region', 'minimum spanning tree', {'weight': 0.6})
('trust region', 'context-free grammar', {'weight': 0.6})
('trust region', 'branch and cut', {'weight': 0.6})
('trust region', 'state variable', {'weight': 0.6})
('trust region', 'treewidth', {'weight': 0.6})
('trust region', 'optimization algorithms and methods', {'weight': 0.5})
('trust region', 'overlapping subproblem', {'weight': 0.6})
('trust region', 'taylor & francis', {'weight': 0.6})
('trust region', 'cutting-plane method', {'weight': 0.6})
('trust region', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('trust region', 'method of undetermined coefficients', {'weight': 0.6})
('trust region', 'combinatorial optimization', {'weight': 0.6})
('trust region', "newton's method in optimization", {'weight': 0.6})
('trust region', 'matrix chain multiplication', {'weight': 0.6})
('trust region', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('trust region', 'dynamic time warping', {'weight': 0.6})
('trust region', 'dynamic programming language', {'weight': 0.6})
('trust region', 'call-by-need', {'weight': 0.6})
('trust region', 'big-o notation', {'weight': 0.6})
('trust region', 'comparison of optimization software', {'weight': 0.6})
('trust region', 'quadratic programming', {'weight': 0.6})
('trust region', 'common lisp', {'weight': 0.6})
('trust region', 'barrier function', {'weight': 0.6})
('trust region', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('trust region', 'gradient descent', {'weight': 0.6})
('trust region', 'patricia selinger', {'weight': 0.6})
('trust region', 'discounting', {'weight': 0.6})
('trust region', 'ronald l. rivest', {'weight': 0.6})
('trust region', 'iterative method', {'weight': 0.6})
('trust region', 'limited-memory bfgs', {'weight': 0.6})
('trust region', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('trust region', 'longest common substring problem', {'weight': 0.6})
('trust region', 'clifford stein', {'weight': 0.6})
('trust region', 'computer chess', {'weight': 0.6})
('trust region', 'linear programming', {'weight': 0.6})
('trust region', 'bitonic tour', {'weight': 0.6})
('trust region', 'linear search problem', {'weight': 0.6})
('trust region', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('trust region', 'systems analysis', {'weight': 0.6})
('trust region', 'capital (economics)', {'weight': 0.6})
('trust region', 'levenshtein distance', {'weight': 0.6})
('trust region', 'nonlinear programming', {'weight': 0.6})
('trust region', 'computational complexity of mathematical operations', {'weight': 0.6})
('trust region', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('trust region', 'gradient', {'weight': 0.6})
('trust region', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('trust region', 'bulletin of the american mathematical society', {'weight': 0.6})
('trust region', 'u.s. english', {'weight': 0.6})
('trust region', 'refutation table', {'weight': 0.6})
('trust region', 'heuristic algorithm', {'weight': 0.6})
('trust region', 'successive linear programming', {'weight': 0.6})
('trust region', 'optimal substructure', {'weight': 0.6})
('trust region', 'programming language', {'weight': 0.6})
('trust region', 'mergesort', {'weight': 0.6})
('trust region', "dijkstra's algorithm", {'weight': 0.6})
('trust region', 'subgradient method', {'weight': 0.6})
('trust region', 'call-by-name', {'weight': 0.6})
('trust region', 'longest increasing subsequence problem', {'weight': 0.6})
('trust region', 'edward prescott', {'weight': 0.6})
('trust region', 'exponential time', {'weight': 0.6})
('trust region', 'principle of optimality', {'weight': 0.6})
('trust region', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('trust region', 'mathematical game', {'weight': 0.6})
('trust region', 'nancy stokey', {'weight': 0.6})
('trust region', 'approximation algorithm', {'weight': 0.6})
('trust region', 'discrete-time', {'weight': 0.6})
('trust region', 'cyk algorithm', {'weight': 0.6})
('trust region', 'markov decision process', {'weight': 0.6})
('trust region', "powell's method", {'weight': 0.6})
('trust region', 'wolfe conditions', {'weight': 0.6})
('trust region', 'convexity in economics', {'weight': 0.6})
('trust region', 'transposition table', {'weight': 0.6})
('trust region', 'economics', {'weight': 0.6})
('trust region', 'backward induction', {'weight': 0.6})
('trust region', 'golden section search', {'weight': 0.6})
('trust region', 'edit distance', {'weight': 0.6})
('trust region', 'tree structure', {'weight': 0.6})
('trust region', 'exchange algorithm', {'weight': 0.6})
('trust region', 'dover publications', {'weight': 0.6})
('trust region', 'seam carving', {'weight': 0.6})
('trust region', 'recursive least squares', {'weight': 0.6})
('trust region', 'metaheuristic', {'weight': 0.6})
('trust region', 'quasi-newton method', {'weight': 0.6})
('trust region', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('trust region', 'robert e. lucas', {'weight': 0.6})
('trust region', 'non-convexity (economics)', {'weight': 0.6})
('trust region', 'sr1 formula', {'weight': 0.6})
('trust region', 'mathematical reviews', {'weight': 0.6})
('trust region', 'puzzle', {'weight': 0.6})
('trust region', 'associative array', {'weight': 0.6})
('trust region', 'shortest path problem', {'weight': 0.6})
('trust region', 'dynamic algorithm', {'weight': 0.6})
('trust region', 'augmented lagrangian method', {'weight': 0.6})
('trust region', 'charles delisi', {'weight': 0.6})
('trust region', 'greedy algorithm', {'weight': 0.6})
('trust region', "karmarkar's algorithm", {'weight': 0.6})
('trust region', 'lattice models', {'weight': 0.6})
('trust region', 'utility', {'weight': 0.6})
('trust region', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('trust region', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('trust region', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('trust region', 'international standard book number', {'weight': 0.6})
('trust region', 'undirected graph', {'weight': 0.6})
('trust region', 'scheme (programming language)', {'weight': 0.6})
('trust region', 'rna structure', {'weight': 0.6})
('trust region', 'hanoi', {'weight': 0.6})
('trust region', 'perl', {'weight': 0.6})
('trust region', 'digital object identifier', {'weight': 0.6})
('trust region', 'sequential quadratic programming', {'weight': 0.6})
('trust region', "dinic's algorithm", {'weight': 0.6})
('trust region', 'pseudo-polynomial time', {'weight': 0.6})
('trust region', 'partition problem', {'weight': 0.6})
('trust region', 'stochastic programming', {'weight': 0.6})
('trust region', 'hill climbing', {'weight': 0.6})
('trust region', 'top-down', {'weight': 0.6})
('trust region', 'de boor algorithm', {'weight': 0.6})
('trust region', 'optimization algorithm', {'weight': 0.6})
('trust region', "kruskal's algorithm", {'weight': 0.6})
('trust region', 'jacques philippe marie binet', {'weight': 0.6})
('trust region', 'tabu search', {'weight': 0.6})
('trust region', 'divide and conquer algorithm', {'weight': 0.6})
('trust region', "johnson's algorithm", {'weight': 0.6})
('trust region', 'evolutionary algorithm', {'weight': 0.6})
('trust region', 'clique-width', {'weight': 0.6})
('trust region', 'dynamic programming', {'weight': 0.6})
('trust region', 'subroutine', {'weight': 0.6})
('trust region', 'simulated annealing', {'weight': 0.6})
('trust region', 'tower of hanoi', {'weight': 0.6})
('trust region', 'branch and bound', {'weight': 0.6})
('trust region', 'engineering', {'weight': 0.6})
('trust region', 'matroid', {'weight': 0.6})
('trust region', 'viterbi algorithm', {'weight': 0.6})
('trust region', "lemke's algorithm", {'weight': 0.6})
('trust region', 'simplex algorithm', {'weight': 0.6})
('trust region', 'local search (optimization)', {'weight': 0.6})
('trust region', 'hessian matrix', {'weight': 0.6})
('trust region', 'ibm system r', {'weight': 0.6})
('trust region', 'penalty method', {'weight': 0.6})
('trust region', 'prolog', {'weight': 0.6})
('trust region', 'time-invariant system', {'weight': 0.6})
('trust region', 'criss-cross algorithm', {'weight': 0.6})
('trust region', 'revised simplex algorithm', {'weight': 0.6})
('trust region', 'the mathematical association of america', {'weight': 0.6})
('trust region', 'line search', {'weight': 0.6})
('trust region', 'j (programming language)', {'weight': 0.6})
('trust region', 'word wrap', {'weight': 0.6})
('trust region', 'subset sum problem', {'weight': 0.6})
('trust region', 'integer programming', {'weight': 0.6})
('trust region', 'nucleosome', {'weight': 0.6})
('trust region', 'earley algorithm', {'weight': 0.6})
('trust region', 'referential transparency (computer science)', {'weight': 0.6})
('trust region', 'recursion', {'weight': 0.6})
('trust region', 'mathematica', {'weight': 0.6})
('trust region', 'quicksort', {'weight': 0.6})
('trust region', 'recursion (computer science)', {'weight': 0.6})
('trust region', 'checkerboard', {'weight': 0.6})
('trust region', 'computer science', {'weight': 0.6})
('trust region', 'brute-force search', {'weight': 0.6})
('trust region', 'mathematics', {'weight': 0.6})
('trust region', 'depth-first search', {'weight': 0.6})
('trust region', 'top-down and bottom-up design', {'weight': 0.6})
('trust region', 'correspondence problem', {'weight': 0.6})
('trust region', 'transcription factor', {'weight': 0.6})
('trust region', 'tree decomposition', {'weight': 0.6})
('trust region', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('trust region', 'structural alignment', {'weight': 0.6})
('trust region', 'local convergence', {'weight': 0.6})
('trust region', 'knapsack problem', {'weight': 0.6})
('trust region', 'graph algorithm', {'weight': 0.6})
('trust region', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('trust region', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('trust region', 'hidden markov model', {'weight': 0.6})
('trust region', 'string (computer science)', {'weight': 0.6})
('trust region', 'bioinformatics', {'weight': 0.6})
('trust region', 'genetics', {'weight': 0.6})
('trust region', 'mathematical optimization', {'weight': 0.6})
('trust region', 'artificial neural networks', {'weight': 0.6})
('trust region', 'introduction to algorithms', {'weight': 0.6})
('trust region', 'thomas h. cormen', {'weight': 0.6})
('trust region', 'music information retrieval', {'weight': 0.6})
('trust region', 'beat (music)', {'weight': 0.6})
('trust region', 'longest common subsequence problem', {'weight': 0.6})
('trust region', 'convex minimization', {'weight': 0.6})
('trust region', 'successive parabolic interpolation', {'weight': 0.6})
('trust region', 'fibonacci sequence', {'weight': 0.6})
('trust region', 'maximum subarray problem', {'weight': 0.6})
('trust region', 'convex optimization', {'weight': 0.6})
('trust region', 'memoization', {'weight': 0.6})
('trust region', 'richard bellman', {'weight': 0.6})
('trust region', 'exponential growth', {'weight': 0.6})
('trust region', 'charles e. leiserson', {'weight': 0.6})
('trust region', 'charles erwin wilson', {'weight': 0.6})
('trust region', 'interval scheduling', {'weight': 0.6})
('trust region', 'chart parser', {'weight': 0.6})
('trust region', 'travelling salesman problem', {'weight': 0.6})
('trust region', 'bellman equation', {'weight': 0.6})
('computer science', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('computer science', 'photoshop', {'weight': 0.6})
('computer science', 'sequence alignment', {'weight': 0.6})
('computer science', 'flow network', {'weight': 0.6})
('computer science', 'informatics (academic field)', {'weight': 0.7})
('computer science', 'ellipsoid method', {'weight': 0.6})
('computer science', 'chain matrix multiplication', {'weight': 0.6})
('computer science', 'ieee', {'weight': 0.6})
('computer science', 'backtracking', {'weight': 0.6})
('computer science', 'women in computing', {'weight': 0.7})
('computer science', 'nonlinear conjugate gradient method', {'weight': 0.6})
('computer science', 'dynamic problem', {'weight': 0.6})
('computer science', 'trust region', {'weight': 0.6})
('computer science', 'function (mathematics)', {'weight': 0.6})
('computer science', 'minimum spanning tree', {'weight': 0.6})
('computer science', 'context-free grammar', {'weight': 0.6})
('computer science', 'outline of computer science', {'weight': 0.7})
('computer science', 'branch and cut', {'weight': 0.6})
('computer science', 'state variable', {'weight': 0.6})
('computer science', 'treewidth', {'weight': 0.6})
('computer science', 'overlapping subproblem', {'weight': 0.6})
('computer science', 'taylor & francis', {'weight': 0.6})
('computer science', 'list of software engineering topics', {'weight': 0.7})
('computer science', 'cutting-plane method', {'weight': 0.6})
('computer science', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('computer science', 'method of undetermined coefficients', {'weight': 0.6})
('computer science', 'combinatorial optimization', {'weight': 0.6})
('computer science', "newton's method in optimization", {'weight': 0.6})
('computer science', 'matrix chain multiplication', {'weight': 0.6})
('computer science', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('computer science', 'dynamic time warping', {'weight': 0.6})
('computer science', 'dynamic programming language', {'weight': 0.6})
('computer science', 'call-by-need', {'weight': 0.6})
('computer science', 'big-o notation', {'weight': 0.6})
('computer science', 'comparison of optimization software', {'weight': 0.6})
('computer science', 'quadratic programming', {'weight': 0.6})
('computer science', 'common lisp', {'weight': 0.6})
('computer science', 'barrier function', {'weight': 0.6})
('computer science', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('computer science', 'computer engineering', {'weight': 0.5})
('computer science', 'patricia selinger', {'weight': 0.6})
('computer science', 'discounting', {'weight': 0.6})
('computer science', 'ronald l. rivest', {'weight': 0.6})
('computer science', 'iterative method', {'weight': 0.6})
('computer science', 'limited-memory bfgs', {'weight': 0.6})
('computer science', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('computer science', 'longest common substring problem', {'weight': 0.6})
('computer science', 'clifford stein', {'weight': 0.6})
('computer science', 'computer chess', {'weight': 0.6})
('computer science', 'linear programming', {'weight': 0.6})
('computer science', 'bitonic tour', {'weight': 0.6})
('computer science', 'linear search problem', {'weight': 0.6})
('computer science', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('computer science', 'systems analysis', {'weight': 0.6})
('computer science', 'capital (economics)', {'weight': 0.6})
('computer science', 'wikipedia book', {'weight': 0.7})
('computer science', 'levenshtein distance', {'weight': 0.6})
('computer science', 'nonlinear programming', {'weight': 0.6})
('computer science', 'computational complexity of mathematical operations', {'weight': 0.6})
('computer science', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('computer science', 'gradient', {'weight': 0.6})
('computer science', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('computer science', 'gradient descent', {'weight': 0.6})
('computer science', 'bulletin of the american mathematical society', {'weight': 0.6})
('computer science', 'list of academic computer science departments', {'weight': 0.7})
('computer science', 'u.s. english', {'weight': 0.6})
('computer science', 'refutation table', {'weight': 0.6})
('computer science', 'heuristic algorithm', {'weight': 0.6})
('computer science', 'successive linear programming', {'weight': 0.6})
('computer science', 'optimal substructure', {'weight': 0.6})
('computer science', 'list of unsolved problems in computer science', {'weight': 0.7})
('computer science', 'programming language', {'weight': 0.6})
('computer science', 'mergesort', {'weight': 0.6})
('computer science', "dijkstra's algorithm", {'weight': 0.6})
('computer science', 'subgradient method', {'weight': 0.6})
('computer science', 'academic genealogy of computer scientists', {'weight': 0.7})
('computer science', 'call-by-name', {'weight': 0.6})
('computer science', 'longest increasing subsequence problem', {'weight': 0.6})
('computer science', 'edward prescott', {'weight': 0.6})
('computer science', 'exponential time', {'weight': 0.6})
('computer science', 'list of pioneers in computer science', {'weight': 0.7})
('computer science', 'principle of optimality', {'weight': 0.6})
('computer science', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('computer science', 'mathematical game', {'weight': 0.6})
('computer science', 'nancy stokey', {'weight': 0.6})
('computer science', 'technology transfer in computer science', {'weight': 0.7})
('computer science', 'approximation algorithm', {'weight': 0.6})
('computer science', 'discrete-time', {'weight': 0.6})
('computer science', 'cyk algorithm', {'weight': 0.6})
('computer science', 'markov decision process', {'weight': 0.6})
('computer science', "powell's method", {'weight': 0.6})
('computer science', 'wolfe conditions', {'weight': 0.6})
('computer science', 'convexity in economics', {'weight': 0.6})
('computer science', 'transposition table', {'weight': 0.6})
('computer science', 'economics', {'weight': 0.6})
('computer science', 'backward induction', {'weight': 0.6})
('computer science', 'golden section search', {'weight': 0.6})
('computer science', 'edit distance', {'weight': 0.6})
('computer science', 'tree structure', {'weight': 0.6})
('computer science', 'list of computer science conferences', {'weight': 0.7})
('computer science', 'exchange algorithm', {'weight': 0.6})
('computer science', 'dover publications', {'weight': 0.6})
('computer science', 'seam carving', {'weight': 0.6})
('computer science', 'recursive least squares', {'weight': 0.6})
('computer science', 'metaheuristic', {'weight': 0.6})
('computer science', 'quasi-newton method', {'weight': 0.6})
('computer science', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('computer science', 'robert e. lucas', {'weight': 0.6})
('computer science', 'non-convexity (economics)', {'weight': 0.6})
('computer science', 'sr1 formula', {'weight': 0.6})
('computer science', 'mathematical reviews', {'weight': 0.6})
('computer science', 'puzzle', {'weight': 0.6})
('computer science', 'associative array', {'weight': 0.6})
('computer science', 'shortest path problem', {'weight': 0.6})
('computer science', 'dynamic algorithm', {'weight': 0.6})
('computer science', 'augmented lagrangian method', {'weight': 0.6})
('computer science', 'charles delisi', {'weight': 0.6})
('computer science', 'greedy algorithm', {'weight': 0.6})
('computer science', "karmarkar's algorithm", {'weight': 0.6})
('computer science', 'lattice models', {'weight': 0.6})
('computer science', 'utility', {'weight': 0.6})
('computer science', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('computer science', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('computer science', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('computer science', 'international standard book number', {'weight': 0.6})
('computer science', 'undirected graph', {'weight': 0.6})
('computer science', 'scheme (programming language)', {'weight': 0.6})
('computer science', 'rna structure', {'weight': 0.6})
('computer science', 'hanoi', {'weight': 0.6})
('computer science', 'perl', {'weight': 0.6})
('computer science', 'digital object identifier', {'weight': 0.6})
('computer science', 'sequential quadratic programming', {'weight': 0.6})
('computer science', "dinic's algorithm", {'weight': 0.6})
('computer science', 'pseudo-polynomial time', {'weight': 0.6})
('computer science', 'partition problem', {'weight': 0.6})
('computer science', 'stochastic programming', {'weight': 0.6})
('computer science', 'hill climbing', {'weight': 0.6})
('computer science', 'top-down', {'weight': 0.6})
('computer science', 'de boor algorithm', {'weight': 0.6})
('computer science', 'optimization algorithm', {'weight': 0.6})
('computer science', "kruskal's algorithm", {'weight': 0.6})
('computer science', 'jacques philippe marie binet', {'weight': 0.6})
('computer science', 'tabu search', {'weight': 0.6})
('computer science', 'computer science portal', {'weight': 0.7})
('computer science', 'divide and conquer algorithm', {'weight': 0.6})
('computer science', "johnson's algorithm", {'weight': 0.6})
('computer science', 'list of publications in computer science', {'weight': 0.7})
('computer science', 'evolutionary algorithm', {'weight': 0.6})
('computer science', 'clique-width', {'weight': 0.6})
('computer science', 'dynamic programming', {'weight': 0.6})
('computer science', 'subroutine', {'weight': 0.6})
('computer science', 'simulated annealing', {'weight': 0.6})
('computer science', 'tower of hanoi', {'weight': 0.6})
('computer science', 'branch and bound', {'weight': 0.6})
('computer science', 'engineering', {'weight': 0.6})
('computer science', 'matroid', {'weight': 0.6})
('computer science', 'list of computer scientists', {'weight': 0.7})
('computer science', 'viterbi algorithm', {'weight': 0.6})
('computer science', "lemke's algorithm", {'weight': 0.6})
('computer science', 'simplex algorithm', {'weight': 0.6})
('computer science', 'local search (optimization)', {'weight': 0.6})
('computer science', 'hessian matrix', {'weight': 0.6})
('computer science', 'electrical engineering', {'weight': 0.5})
('computer science', 'ibm system r', {'weight': 0.6})
('computer science', 'penalty method', {'weight': 0.6})
('computer science', 'prolog', {'weight': 0.6})
('computer science', 'electronic engineering', {'weight': 0.5})
('computer science', 'time-invariant system', {'weight': 0.6})
('computer science', 'criss-cross algorithm', {'weight': 0.6})
('computer science', 'revised simplex algorithm', {'weight': 0.6})
('computer science', 'the mathematical association of america', {'weight': 0.6})
('computer science', 'line search', {'weight': 0.6})
('computer science', 'j (programming language)', {'weight': 0.6})
('computer science', 'word wrap', {'weight': 0.6})
('computer science', 'subset sum problem', {'weight': 0.6})
('computer science', 'integer programming', {'weight': 0.6})
('computer science', 'nucleosome', {'weight': 0.6})
('computer science', 'earley algorithm', {'weight': 0.6})
('computer science', 'referential transparency (computer science)', {'weight': 0.6})
('computer science', 'recursion', {'weight': 0.6})
('computer science', 'mathematica', {'weight': 0.6})
('computer science', 'quicksort', {'weight': 0.6})
('computer science', 'recursion (computer science)', {'weight': 0.6})
('computer science', 'checkerboard', {'weight': 0.6})
('computer science', 'computer science', {'weight': 1})
('computer science', 'brute-force search', {'weight': 0.6})
('computer science', 'mathematics', {'weight': 0.6})
('computer science', 'depth-first search', {'weight': 0.6})
('computer science', 'top-down and bottom-up design', {'weight': 0.6})
('computer science', 'correspondence problem', {'weight': 0.6})
('computer science', 'transcription factor', {'weight': 0.6})
('computer science', 'tree decomposition', {'weight': 0.6})
('computer science', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('computer science', 'structural alignment', {'weight': 0.6})
('computer science', 'local convergence', {'weight': 0.6})
('computer science', 'knapsack problem', {'weight': 0.6})
('computer science', 'graph algorithm', {'weight': 0.6})
('computer science', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('computer science', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('computer science', 'hidden markov model', {'weight': 0.6})
('computer science', 'string (computer science)', {'weight': 0.6})
('computer science', 'bioinformatics', {'weight': 0.6})
('computer science', 'genetics', {'weight': 0.6})
('computer science', 'mathematical optimization', {'weight': 0.6})
('computer science', 'artificial neural networks', {'weight': 0.6})
('computer science', 'introduction to algorithms', {'weight': 0.6})
('computer science', 'thomas h. cormen', {'weight': 0.6})
('computer science', 'music information retrieval', {'weight': 0.6})
('computer science', 'beat (music)', {'weight': 0.6})
('computer science', 'longest common subsequence problem', {'weight': 0.6})
('computer science', 'convex minimization', {'weight': 0.6})
('computer science', 'successive parabolic interpolation', {'weight': 0.6})
('computer science', 'fibonacci sequence', {'weight': 0.6})
('computer science', 'maximum subarray problem', {'weight': 0.6})
('computer science', 'convex optimization', {'weight': 0.6})
('computer science', 'memoization', {'weight': 0.6})
('computer science', 'richard bellman', {'weight': 0.6})
('computer science', 'exponential growth', {'weight': 0.6})
('computer science', 'charles e. leiserson', {'weight': 0.6})
('computer science', 'charles erwin wilson', {'weight': 0.6})
('computer science', 'interval scheduling', {'weight': 0.6})
('computer science', 'chart parser', {'weight': 0.6})
('computer science', 'travelling salesman problem', {'weight': 0.6})
('computer science', 'bellman equation', {'weight': 0.6})
('cutting-plane method', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('cutting-plane method', 'photoshop', {'weight': 0.6})
('cutting-plane method', 'sequence alignment', {'weight': 0.6})
('cutting-plane method', 'flow network', {'weight': 0.6})
('cutting-plane method', 'ellipsoid method', {'weight': 0.6})
('cutting-plane method', 'chain matrix multiplication', {'weight': 0.6})
('cutting-plane method', 'ieee', {'weight': 0.6})
('cutting-plane method', 'backtracking', {'weight': 0.6})
('cutting-plane method', 'nonlinear conjugate gradient method', {'weight': 0.6})
('cutting-plane method', 'dynamic problem', {'weight': 0.6})
('cutting-plane method', 'trust region', {'weight': 0.6})
('cutting-plane method', 'function (mathematics)', {'weight': 0.6})
('cutting-plane method', 'minimum spanning tree', {'weight': 0.6})
('cutting-plane method', 'context-free grammar', {'weight': 0.6})
('cutting-plane method', 'branch and cut', {'weight': 0.7})
('cutting-plane method', 'state variable', {'weight': 0.6})
('cutting-plane method', 'treewidth', {'weight': 0.6})
('cutting-plane method', 'optimization algorithms and methods', {'weight': 0.5})
('cutting-plane method', 'overlapping subproblem', {'weight': 0.6})
('cutting-plane method', 'taylor & francis', {'weight': 0.6})
('cutting-plane method', 'cutting-plane method', {'weight': 1})
('cutting-plane method', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('cutting-plane method', 'method of undetermined coefficients', {'weight': 0.6})
('cutting-plane method', 'combinatorial optimization', {'weight': 0.6})
('cutting-plane method', "newton's method in optimization", {'weight': 0.6})
('cutting-plane method', 'matrix chain multiplication', {'weight': 0.6})
('cutting-plane method', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('cutting-plane method', 'dynamic time warping', {'weight': 0.6})
('cutting-plane method', 'dynamic programming language', {'weight': 0.6})
('cutting-plane method', 'call-by-need', {'weight': 0.6})
('cutting-plane method', 'big-o notation', {'weight': 0.6})
('cutting-plane method', 'column generation', {'weight': 0.7})
('cutting-plane method', 'comparison of optimization software', {'weight': 0.6})
('cutting-plane method', 'quadratic programming', {'weight': 0.6})
('cutting-plane method', 'common lisp', {'weight': 0.6})
('cutting-plane method', 'barrier function', {'weight': 0.6})
('cutting-plane method', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('cutting-plane method', 'gradient descent', {'weight': 0.6})
('cutting-plane method', 'patricia selinger', {'weight': 0.6})
('cutting-plane method', 'discounting', {'weight': 0.6})
('cutting-plane method', 'ronald l. rivest', {'weight': 0.6})
('cutting-plane method', 'iterative method', {'weight': 0.6})
('cutting-plane method', "benders' decomposition", {'weight': 0.7})
('cutting-plane method', 'limited-memory bfgs', {'weight': 0.6})
('cutting-plane method', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('cutting-plane method', 'longest common substring problem', {'weight': 0.6})
('cutting-plane method', 'clifford stein', {'weight': 0.6})
('cutting-plane method', 'computer chess', {'weight': 0.6})
('cutting-plane method', 'linear programming', {'weight': 0.6})
('cutting-plane method', 'bitonic tour', {'weight': 0.6})
('cutting-plane method', 'linear search problem', {'weight': 0.6})
('cutting-plane method', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('cutting-plane method', 'systems analysis', {'weight': 0.6})
('cutting-plane method', 'capital (economics)', {'weight': 0.6})
('cutting-plane method', 'levenshtein distance', {'weight': 0.6})
('cutting-plane method', 'nonlinear programming', {'weight': 0.6})
('cutting-plane method', 'computational complexity of mathematical operations', {'weight': 0.6})
('cutting-plane method', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('cutting-plane method', 'gradient', {'weight': 0.6})
('cutting-plane method', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('cutting-plane method', 'bulletin of the american mathematical society', {'weight': 0.6})
('cutting-plane method', 'u.s. english', {'weight': 0.6})
('cutting-plane method', 'refutation table', {'weight': 0.6})
('cutting-plane method', 'heuristic algorithm', {'weight': 0.6})
('cutting-plane method', 'successive linear programming', {'weight': 0.6})
('cutting-plane method', 'optimal substructure', {'weight': 0.6})
('cutting-plane method', 'programming language', {'weight': 0.6})
('cutting-plane method', 'mergesort', {'weight': 0.6})
('cutting-plane method', "dijkstra's algorithm", {'weight': 0.6})
('cutting-plane method', 'subgradient method', {'weight': 0.6})
('cutting-plane method', 'call-by-name', {'weight': 0.6})
('cutting-plane method', 'longest increasing subsequence problem', {'weight': 0.6})
('cutting-plane method', 'edward prescott', {'weight': 0.6})
('cutting-plane method', 'exponential time', {'weight': 0.6})
('cutting-plane method', 'principle of optimality', {'weight': 0.6})
('cutting-plane method', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('cutting-plane method', 'mathematical game', {'weight': 0.6})
('cutting-plane method', 'nancy stokey', {'weight': 0.6})
('cutting-plane method', 'approximation algorithm', {'weight': 0.6})
('cutting-plane method', 'discrete-time', {'weight': 0.6})
('cutting-plane method', 'cyk algorithm', {'weight': 0.6})
('cutting-plane method', 'markov decision process', {'weight': 0.6})
('cutting-plane method', "powell's method", {'weight': 0.6})
('cutting-plane method', 'wolfe conditions', {'weight': 0.6})
('cutting-plane method', 'convexity in economics', {'weight': 0.6})
('cutting-plane method', 'transposition table', {'weight': 0.6})
('cutting-plane method', 'economics', {'weight': 0.6})
('cutting-plane method', 'backward induction', {'weight': 0.6})
('cutting-plane method', 'golden section search', {'weight': 0.6})
('cutting-plane method', 'edit distance', {'weight': 0.6})
('cutting-plane method', 'tree structure', {'weight': 0.6})
('cutting-plane method', 'exchange algorithm', {'weight': 0.6})
('cutting-plane method', 'dover publications', {'weight': 0.6})
('cutting-plane method', 'seam carving', {'weight': 0.6})
('cutting-plane method', 'recursive least squares', {'weight': 0.6})
('cutting-plane method', 'metaheuristic', {'weight': 0.6})
('cutting-plane method', 'quasi-newton method', {'weight': 0.6})
('cutting-plane method', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('cutting-plane method', 'robert e. lucas', {'weight': 0.6})
('cutting-plane method', 'non-convexity (economics)', {'weight': 0.6})
('cutting-plane method', 'sr1 formula', {'weight': 0.6})
('cutting-plane method', 'mathematical reviews', {'weight': 0.6})
('cutting-plane method', 'puzzle', {'weight': 0.6})
('cutting-plane method', 'associative array', {'weight': 0.6})
('cutting-plane method', 'shortest path problem', {'weight': 0.6})
('cutting-plane method', 'dynamic algorithm', {'weight': 0.6})
('cutting-plane method', 'augmented lagrangian method', {'weight': 0.6})
('cutting-plane method', 'charles delisi', {'weight': 0.6})
('cutting-plane method', 'greedy algorithm', {'weight': 0.6})
('cutting-plane method', "karmarkar's algorithm", {'weight': 0.6})
('cutting-plane method', 'lattice models', {'weight': 0.6})
('cutting-plane method', 'utility', {'weight': 0.6})
('cutting-plane method', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('cutting-plane method', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('cutting-plane method', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('cutting-plane method', 'international standard book number', {'weight': 0.6})
('cutting-plane method', 'undirected graph', {'weight': 0.6})
('cutting-plane method', 'scheme (programming language)', {'weight': 0.6})
('cutting-plane method', 'rna structure', {'weight': 0.6})
('cutting-plane method', 'hanoi', {'weight': 0.6})
('cutting-plane method', 'perl', {'weight': 0.6})
('cutting-plane method', 'digital object identifier', {'weight': 0.6})
('cutting-plane method', 'sequential quadratic programming', {'weight': 0.6})
('cutting-plane method', "dinic's algorithm", {'weight': 0.6})
('cutting-plane method', 'pseudo-polynomial time', {'weight': 0.6})
('cutting-plane method', 'partition problem', {'weight': 0.6})
('cutting-plane method', 'stochastic programming', {'weight': 0.6})
('cutting-plane method', 'hill climbing', {'weight': 0.6})
('cutting-plane method', 'top-down', {'weight': 0.6})
('cutting-plane method', 'de boor algorithm', {'weight': 0.6})
('cutting-plane method', 'optimization algorithm', {'weight': 0.6})
('cutting-plane method', "kruskal's algorithm", {'weight': 0.6})
('cutting-plane method', 'jacques philippe marie binet', {'weight': 0.6})
('cutting-plane method', 'tabu search', {'weight': 0.6})
('cutting-plane method', 'divide and conquer algorithm', {'weight': 0.6})
('cutting-plane method', "johnson's algorithm", {'weight': 0.6})
('cutting-plane method', 'evolutionary algorithm', {'weight': 0.6})
('cutting-plane method', 'clique-width', {'weight': 0.6})
('cutting-plane method', 'dynamic programming', {'weight': 0.6})
('cutting-plane method', 'subroutine', {'weight': 0.6})
('cutting-plane method', 'simulated annealing', {'weight': 0.6})
('cutting-plane method', 'tower of hanoi', {'weight': 0.6})
('cutting-plane method', 'branch and bound', {'weight': 0.7})
('cutting-plane method', 'engineering', {'weight': 0.6})
('cutting-plane method', 'matroid', {'weight': 0.6})
('cutting-plane method', 'viterbi algorithm', {'weight': 0.6})
('cutting-plane method', "lemke's algorithm", {'weight': 0.6})
('cutting-plane method', 'simplex algorithm', {'weight': 0.6})
('cutting-plane method', 'local search (optimization)', {'weight': 0.6})
('cutting-plane method', 'hessian matrix', {'weight': 0.6})
('cutting-plane method', 'ibm system r', {'weight': 0.6})
('cutting-plane method', 'penalty method', {'weight': 0.6})
('cutting-plane method', 'prolog', {'weight': 0.6})
('cutting-plane method', 'time-invariant system', {'weight': 0.6})
('cutting-plane method', 'criss-cross algorithm', {'weight': 0.6})
('cutting-plane method', 'revised simplex algorithm', {'weight': 0.6})
('cutting-plane method', 'the mathematical association of america', {'weight': 0.6})
('cutting-plane method', 'line search', {'weight': 0.6})
('cutting-plane method', 'j (programming language)', {'weight': 0.6})
('cutting-plane method', 'word wrap', {'weight': 0.6})
('cutting-plane method', 'subset sum problem', {'weight': 0.6})
('cutting-plane method', 'integer programming', {'weight': 0.6})
('cutting-plane method', 'nucleosome', {'weight': 0.6})
('cutting-plane method', 'earley algorithm', {'weight': 0.6})
('cutting-plane method', 'referential transparency (computer science)', {'weight': 0.6})
('cutting-plane method', 'recursion', {'weight': 0.6})
('cutting-plane method', 'mathematica', {'weight': 0.6})
('cutting-plane method', 'quicksort', {'weight': 0.6})
('cutting-plane method', 'recursion (computer science)', {'weight': 0.6})
('cutting-plane method', 'checkerboard', {'weight': 0.6})
('cutting-plane method', 'computer science', {'weight': 0.6})
('cutting-plane method', 'brute-force search', {'weight': 0.6})
('cutting-plane method', 'mathematics', {'weight': 0.6})
('cutting-plane method', 'depth-first search', {'weight': 0.6})
('cutting-plane method', 'top-down and bottom-up design', {'weight': 0.6})
('cutting-plane method', 'correspondence problem', {'weight': 0.6})
('cutting-plane method', 'transcription factor', {'weight': 0.6})
('cutting-plane method', 'tree decomposition', {'weight': 0.6})
('cutting-plane method', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('cutting-plane method', 'structural alignment', {'weight': 0.6})
('cutting-plane method', 'local convergence', {'weight': 0.6})
('cutting-plane method', 'knapsack problem', {'weight': 0.6})
('cutting-plane method', 'graph algorithm', {'weight': 0.6})
('cutting-plane method', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('cutting-plane method', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('cutting-plane method', 'hidden markov model', {'weight': 0.6})
('cutting-plane method', 'string (computer science)', {'weight': 0.6})
('cutting-plane method', 'bioinformatics', {'weight': 0.6})
('cutting-plane method', 'genetics', {'weight': 0.6})
('cutting-plane method', 'mathematical optimization', {'weight': 0.6})
('cutting-plane method', 'artificial neural networks', {'weight': 0.6})
('cutting-plane method', 'introduction to algorithms', {'weight': 0.6})
('cutting-plane method', 'thomas h. cormen', {'weight': 0.6})
('cutting-plane method', 'music information retrieval', {'weight': 0.6})
('cutting-plane method', 'beat (music)', {'weight': 0.6})
('cutting-plane method', 'longest common subsequence problem', {'weight': 0.6})
('cutting-plane method', 'convex minimization', {'weight': 0.6})
('cutting-plane method', 'successive parabolic interpolation', {'weight': 0.6})
('cutting-plane method', 'fibonacci sequence', {'weight': 0.6})
('cutting-plane method', 'maximum subarray problem', {'weight': 0.6})
('cutting-plane method', 'convex optimization', {'weight': 0.6})
('cutting-plane method', 'memoization', {'weight': 0.6})
('cutting-plane method', 'richard bellman', {'weight': 0.6})
('cutting-plane method', 'exponential growth', {'weight': 0.6})
('cutting-plane method', 'charles e. leiserson', {'weight': 0.6})
('cutting-plane method', 'charles erwin wilson', {'weight': 0.6})
('cutting-plane method', 'interval scheduling', {'weight': 0.6})
('cutting-plane method', 'chart parser', {'weight': 0.6})
('cutting-plane method', 'travelling salesman problem', {'weight': 0.6})
('cutting-plane method', 'dantzig-wolfe decomposition', {'weight': 0.7})
('cutting-plane method', 'bellman equation', {'weight': 0.6})
('mathematics', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('mathematics', 'photoshop', {'weight': 0.6})
('mathematics', 'sequence alignment', {'weight': 0.6})
('mathematics', 'flow network', {'weight': 0.6})
('mathematics', 'ellipsoid method', {'weight': 0.6})
('mathematics', 'chain matrix multiplication', {'weight': 0.6})
('mathematics', 'ieee', {'weight': 0.6})
('mathematics', 'backtracking', {'weight': 0.6})
('mathematics', 'nonlinear conjugate gradient method', {'weight': 0.6})
('mathematics', 'dynamic problem', {'weight': 0.6})
('mathematics', 'trust region', {'weight': 0.6})
('mathematics', 'function (mathematics)', {'weight': 0.6})
('mathematics', 'minimum spanning tree', {'weight': 0.6})
('mathematics', 'context-free grammar', {'weight': 0.6})
('mathematics', 'branch and cut', {'weight': 0.6})
('mathematics', 'state variable', {'weight': 0.6})
('mathematics', 'computational mathematics', {'weight': 0.5})
('mathematics', 'treewidth', {'weight': 0.6})
('mathematics', 'overlapping subproblem', {'weight': 0.6})
('mathematics', 'taylor & francis', {'weight': 0.6})
('mathematics', 'cutting-plane method', {'weight': 0.6})
('mathematics', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('mathematics', 'method of undetermined coefficients', {'weight': 0.6})
('mathematics', 'combinatorial optimization', {'weight': 0.6})
('mathematics', "newton's method in optimization", {'weight': 0.6})
('mathematics', 'matrix chain multiplication', {'weight': 0.6})
('mathematics', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('mathematics', 'dynamic time warping', {'weight': 0.6})
('mathematics', 'dynamic programming language', {'weight': 0.6})
('mathematics', 'call-by-need', {'weight': 0.6})
('mathematics', 'big-o notation', {'weight': 0.6})
('mathematics', 'comparison of optimization software', {'weight': 0.6})
('mathematics', 'quadratic programming', {'weight': 0.6})
('mathematics', 'common lisp', {'weight': 0.6})
('mathematics', 'barrier function', {'weight': 0.6})
('mathematics', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('mathematics', 'gradient descent', {'weight': 0.6})
('mathematics', 'patricia selinger', {'weight': 0.6})
('mathematics', 'discounting', {'weight': 0.6})
('mathematics', 'ronald l. rivest', {'weight': 0.6})
('mathematics', 'iterative method', {'weight': 0.6})
('mathematics', 'limited-memory bfgs', {'weight': 0.6})
('mathematics', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('mathematics', 'longest common substring problem', {'weight': 0.6})
('mathematics', 'clifford stein', {'weight': 0.6})
('mathematics', 'computer chess', {'weight': 0.6})
('mathematics', 'linear programming', {'weight': 0.6})
('mathematics', 'bitonic tour', {'weight': 0.6})
('mathematics', 'linear search problem', {'weight': 0.6})
('mathematics', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('mathematics', 'systems analysis', {'weight': 0.6})
('mathematics', 'capital (economics)', {'weight': 0.6})
('mathematics', 'levenshtein distance', {'weight': 0.6})
('mathematics', 'nonlinear programming', {'weight': 0.6})
('mathematics', 'genetics', {'weight': 0.6})
('mathematics', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('mathematics', 'gradient', {'weight': 0.6})
('mathematics', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('mathematics', 'bulletin of the american mathematical society', {'weight': 0.6})
('mathematics', 'u.s. english', {'weight': 0.6})
('mathematics', 'refutation table', {'weight': 0.6})
('mathematics', 'heuristic algorithm', {'weight': 0.6})
('mathematics', 'successive linear programming', {'weight': 0.6})
('mathematics', 'optimal substructure', {'weight': 0.6})
('mathematics', 'programming language', {'weight': 0.6})
('mathematics', 'mergesort', {'weight': 0.6})
('mathematics', "dijkstra's algorithm", {'weight': 0.6})
('mathematics', 'subgradient method', {'weight': 0.6})
('mathematics', 'call-by-name', {'weight': 0.6})
('mathematics', 'longest increasing subsequence problem', {'weight': 0.6})
('mathematics', 'edward prescott', {'weight': 0.6})
('mathematics', 'exponential time', {'weight': 0.6})
('mathematics', 'principle of optimality', {'weight': 0.6})
('mathematics', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('mathematics', 'mathematical game', {'weight': 0.6})
('mathematics', 'nancy stokey', {'weight': 0.6})
('mathematics', 'approximation algorithm', {'weight': 0.6})
('mathematics', 'discrete-time', {'weight': 0.6})
('mathematics', 'cyk algorithm', {'weight': 0.6})
('mathematics', 'markov decision process', {'weight': 0.6})
('mathematics', "powell's method", {'weight': 0.6})
('mathematics', 'wolfe conditions', {'weight': 0.6})
('mathematics', 'convexity in economics', {'weight': 0.6})
('mathematics', 'transposition table', {'weight': 0.6})
('mathematics', 'economics', {'weight': 0.6})
('mathematics', 'backward induction', {'weight': 0.6})
('mathematics', 'golden section search', {'weight': 0.6})
('mathematics', 'edit distance', {'weight': 0.6})
('mathematics', 'tree structure', {'weight': 0.6})
('mathematics', 'exchange algorithm', {'weight': 0.6})
('mathematics', 'dover publications', {'weight': 0.6})
('mathematics', 'seam carving', {'weight': 0.6})
('mathematics', 'recursive least squares', {'weight': 0.6})
('mathematics', 'metaheuristic', {'weight': 0.6})
('mathematics', 'quasi-newton method', {'weight': 0.6})
('mathematics', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('mathematics', 'robert e. lucas', {'weight': 0.6})
('mathematics', 'non-convexity (economics)', {'weight': 0.6})
('mathematics', 'sr1 formula', {'weight': 0.6})
('mathematics', 'mathematical reviews', {'weight': 0.6})
('mathematics', 'computational science', {'weight': 0.5})
('mathematics', 'puzzle', {'weight': 0.6})
('mathematics', 'associative array', {'weight': 0.6})
('mathematics', 'shortest path problem', {'weight': 0.6})
('mathematics', 'dynamic algorithm', {'weight': 0.6})
('mathematics', 'augmented lagrangian method', {'weight': 0.6})
('mathematics', 'charles delisi', {'weight': 0.6})
('mathematics', 'greedy algorithm', {'weight': 0.6})
('mathematics', "karmarkar's algorithm", {'weight': 0.6})
('mathematics', 'lattice models', {'weight': 0.6})
('mathematics', 'utility', {'weight': 0.6})
('mathematics', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('mathematics', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('mathematics', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('mathematics', 'international standard book number', {'weight': 0.6})
('mathematics', 'undirected graph', {'weight': 0.6})
('mathematics', 'scheme (programming language)', {'weight': 0.6})
('mathematics', 'rna structure', {'weight': 0.6})
('mathematics', 'hanoi', {'weight': 0.6})
('mathematics', 'perl', {'weight': 0.6})
('mathematics', 'digital object identifier', {'weight': 0.6})
('mathematics', 'sequential quadratic programming', {'weight': 0.6})
('mathematics', "dinic's algorithm", {'weight': 0.6})
('mathematics', 'pseudo-polynomial time', {'weight': 0.6})
('mathematics', 'partition problem', {'weight': 0.6})
('mathematics', 'stochastic programming', {'weight': 0.6})
('mathematics', 'hill climbing', {'weight': 0.6})
('mathematics', 'top-down', {'weight': 0.6})
('mathematics', 'de boor algorithm', {'weight': 0.6})
('mathematics', 'optimization algorithm', {'weight': 0.6})
('mathematics', "kruskal's algorithm", {'weight': 0.6})
('mathematics', 'jacques philippe marie binet', {'weight': 0.6})
('mathematics', 'tabu search', {'weight': 0.6})
('mathematics', 'divide and conquer algorithm', {'weight': 0.6})
('mathematics', "johnson's algorithm", {'weight': 0.6})
('mathematics', 'evolutionary algorithm', {'weight': 0.6})
('mathematics', 'clique-width', {'weight': 0.6})
('mathematics', 'dynamic programming', {'weight': 0.6})
('mathematics', 'subroutine', {'weight': 0.6})
('mathematics', 'simulated annealing', {'weight': 0.6})
('mathematics', 'tower of hanoi', {'weight': 0.6})
('mathematics', 'applied mathematics', {'weight': 0.5})
('mathematics', 'branch and bound', {'weight': 0.6})
('mathematics', 'engineering', {'weight': 0.6})
('mathematics', 'matroid', {'weight': 0.6})
('mathematics', 'viterbi algorithm', {'weight': 0.6})
('mathematics', "lemke's algorithm", {'weight': 0.6})
('mathematics', 'simplex algorithm', {'weight': 0.6})
('mathematics', 'local search (optimization)', {'weight': 0.6})
('mathematics', 'hessian matrix', {'weight': 0.6})
('mathematics', 'ibm system r', {'weight': 0.6})
('mathematics', 'penalty method', {'weight': 0.6})
('mathematics', 'prolog', {'weight': 0.6})
('mathematics', 'time-invariant system', {'weight': 0.6})
('mathematics', 'criss-cross algorithm', {'weight': 0.6})
('mathematics', 'revised simplex algorithm', {'weight': 0.6})
('mathematics', 'the mathematical association of america', {'weight': 0.6})
('mathematics', 'line search', {'weight': 0.6})
('mathematics', 'j (programming language)', {'weight': 0.6})
('mathematics', 'word wrap', {'weight': 0.6})
('mathematics', 'subset sum problem', {'weight': 0.6})
('mathematics', 'integer programming', {'weight': 0.6})
('mathematics', 'nucleosome', {'weight': 0.6})
('mathematics', 'earley algorithm', {'weight': 0.6})
('mathematics', 'referential transparency (computer science)', {'weight': 0.6})
('mathematics', 'recursion', {'weight': 0.6})
('mathematics', 'mathematica', {'weight': 0.6})
('mathematics', 'quicksort', {'weight': 0.6})
('mathematics', 'recursion (computer science)', {'weight': 0.6})
('mathematics', 'checkerboard', {'weight': 0.6})
('mathematics', 'computer science', {'weight': 0.6})
('mathematics', 'brute-force search', {'weight': 0.6})
('mathematics', 'mathematics', {'weight': 1})
('mathematics', 'depth-first search', {'weight': 0.6})
('mathematics', 'top-down and bottom-up design', {'weight': 0.6})
('mathematics', 'correspondence problem', {'weight': 0.6})
('mathematics', 'transcription factor', {'weight': 0.6})
('mathematics', 'tree decomposition', {'weight': 0.6})
('mathematics', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('mathematics', 'structural alignment', {'weight': 0.6})
('mathematics', 'local convergence', {'weight': 0.6})
('mathematics', 'knapsack problem', {'weight': 0.6})
('mathematics', 'graph algorithm', {'weight': 0.6})
('mathematics', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('mathematics', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('mathematics', 'hidden markov model', {'weight': 0.6})
('mathematics', 'string (computer science)', {'weight': 0.6})
('mathematics', 'bioinformatics', {'weight': 0.6})
('mathematics', 'computational complexity of mathematical operations', {'weight': 0.6})
('mathematics', 'mathematical optimization', {'weight': 0.6})
('mathematics', 'artificial neural networks', {'weight': 0.6})
('mathematics', 'introduction to algorithms', {'weight': 0.6})
('mathematics', 'thomas h. cormen', {'weight': 0.6})
('mathematics', 'music information retrieval', {'weight': 0.6})
('mathematics', 'beat (music)', {'weight': 0.6})
('mathematics', 'longest common subsequence problem', {'weight': 0.6})
('mathematics', 'convex minimization', {'weight': 0.6})
('mathematics', 'successive parabolic interpolation', {'weight': 0.6})
('mathematics', 'fibonacci sequence', {'weight': 0.6})
('mathematics', 'maximum subarray problem', {'weight': 0.6})
('mathematics', 'convex optimization', {'weight': 0.6})
('mathematics', 'memoization', {'weight': 0.6})
('mathematics', 'richard bellman', {'weight': 0.6})
('mathematics', 'exponential growth', {'weight': 0.6})
('mathematics', 'charles e. leiserson', {'weight': 0.6})
('mathematics', 'charles erwin wilson', {'weight': 0.6})
('mathematics', 'interval scheduling', {'weight': 0.6})
('mathematics', 'chart parser', {'weight': 0.6})
('mathematics', 'travelling salesman problem', {'weight': 0.6})
('mathematics', 'bellman equation', {'weight': 0.6})
('tree decomposition', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('tree decomposition', 'photoshop', {'weight': 0.6})
('tree decomposition', 'sequence alignment', {'weight': 0.6})
('tree decomposition', 'flow network', {'weight': 0.6})
('tree decomposition', 'graph minor theory', {'weight': 0.5})
('tree decomposition', 'ellipsoid method', {'weight': 0.6})
('tree decomposition', 'chain matrix multiplication', {'weight': 0.6})
('tree decomposition', 'ieee', {'weight': 0.6})
('tree decomposition', 'backtracking', {'weight': 0.6})
('tree decomposition', 'nonlinear conjugate gradient method', {'weight': 0.6})
('tree decomposition', 'dynamic problem', {'weight': 0.6})
('tree decomposition', 'trust region', {'weight': 0.6})
('tree decomposition', 'function (mathematics)', {'weight': 0.6})
('tree decomposition', 'minimum spanning tree', {'weight': 0.6})
('tree decomposition', 'context-free grammar', {'weight': 0.6})
('tree decomposition', 'branch and cut', {'weight': 0.6})
('tree decomposition', 'state variable', {'weight': 0.6})
('tree decomposition', 'treewidth', {'weight': 0.6})
('tree decomposition', 'overlapping subproblem', {'weight': 0.6})
('tree decomposition', 'taylor & francis', {'weight': 0.6})
('tree decomposition', 'cutting-plane method', {'weight': 0.6})
('tree decomposition', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('tree decomposition', 'method of undetermined coefficients', {'weight': 0.6})
('tree decomposition', 'combinatorial optimization', {'weight': 0.6})
('tree decomposition', "newton's method in optimization", {'weight': 0.6})
('tree decomposition', 'matrix chain multiplication', {'weight': 0.6})
('tree decomposition', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('tree decomposition', 'dynamic time warping', {'weight': 0.6})
('tree decomposition', 'dynamic programming language', {'weight': 0.6})
('tree decomposition', 'call-by-need', {'weight': 0.6})
('tree decomposition', 'big-o notation', {'weight': 0.6})
('tree decomposition', 'comparison of optimization software', {'weight': 0.6})
('tree decomposition', 'quadratic programming', {'weight': 0.6})
('tree decomposition', 'common lisp', {'weight': 0.6})
('tree decomposition', 'barrier function', {'weight': 0.6})
('tree decomposition', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('tree decomposition', 'gradient descent', {'weight': 0.6})
('tree decomposition', 'patricia selinger', {'weight': 0.6})
('tree decomposition', 'discounting', {'weight': 0.6})
('tree decomposition', 'ronald l. rivest', {'weight': 0.6})
('tree decomposition', 'iterative method', {'weight': 0.6})
('tree decomposition', 'limited-memory bfgs', {'weight': 0.6})
('tree decomposition', 'havens', {'weight': 0.7})
('tree decomposition', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('tree decomposition', 'longest common substring problem', {'weight': 0.6})
('tree decomposition', 'clifford stein', {'weight': 0.6})
('tree decomposition', 'computer chess', {'weight': 0.6})
('tree decomposition', 'trees (graph theory)', {'weight': 0.5})
('tree decomposition', 'linear programming', {'weight': 0.6})
('tree decomposition', 'bitonic tour', {'weight': 0.6})
('tree decomposition', 'linear search problem', {'weight': 0.6})
('tree decomposition', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('tree decomposition', 'systems analysis', {'weight': 0.6})
('tree decomposition', 'capital (economics)', {'weight': 0.6})
('tree decomposition', 'levenshtein distance', {'weight': 0.6})
('tree decomposition', 'nonlinear programming', {'weight': 0.6})
('tree decomposition', 'computational complexity of mathematical operations', {'weight': 0.6})
('tree decomposition', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('tree decomposition', 'gradient', {'weight': 0.6})
('tree decomposition', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('tree decomposition', 'bulletin of the american mathematical society', {'weight': 0.6})
('tree decomposition', 'u.s. english', {'weight': 0.6})
('tree decomposition', 'refutation table', {'weight': 0.6})
('tree decomposition', 'heuristic algorithm', {'weight': 0.6})
('tree decomposition', 'successive linear programming', {'weight': 0.6})
('tree decomposition', 'optimal substructure', {'weight': 0.6})
('tree decomposition', 'programming language', {'weight': 0.6})
('tree decomposition', 'mergesort', {'weight': 0.6})
('tree decomposition', "dijkstra's algorithm", {'weight': 0.6})
('tree decomposition', 'subgradient method', {'weight': 0.6})
('tree decomposition', 'call-by-name', {'weight': 0.6})
('tree decomposition', 'longest increasing subsequence problem', {'weight': 0.6})
('tree decomposition', 'edward prescott', {'weight': 0.6})
('tree decomposition', 'exponential time', {'weight': 0.6})
('tree decomposition', 'principle of optimality', {'weight': 0.6})
('tree decomposition', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('tree decomposition', 'mathematical game', {'weight': 0.6})
('tree decomposition', 'nancy stokey', {'weight': 0.6})
('tree decomposition', 'approximation algorithm', {'weight': 0.6})
('tree decomposition', 'branch-decomposition', {'weight': 0.7})
('tree decomposition', 'discrete-time', {'weight': 0.6})
('tree decomposition', 'cyk algorithm', {'weight': 0.6})
('tree decomposition', 'markov decision process', {'weight': 0.6})
('tree decomposition', "powell's method", {'weight': 0.6})
('tree decomposition', 'wolfe conditions', {'weight': 0.6})
('tree decomposition', 'convexity in economics', {'weight': 0.6})
('tree decomposition', 'transposition table', {'weight': 0.6})
('tree decomposition', 'economics', {'weight': 0.6})
('tree decomposition', 'backward induction', {'weight': 0.6})
('tree decomposition', 'golden section search', {'weight': 0.6})
('tree decomposition', 'edit distance', {'weight': 0.6})
('tree decomposition', 'tree structure', {'weight': 0.6})
('tree decomposition', 'graph theory objects', {'weight': 0.5})
('tree decomposition', 'exchange algorithm', {'weight': 0.6})
('tree decomposition', 'dover publications', {'weight': 0.6})
('tree decomposition', 'seam carving', {'weight': 0.6})
('tree decomposition', 'recursive least squares', {'weight': 0.6})
('tree decomposition', 'metaheuristic', {'weight': 0.6})
('tree decomposition', 'quasi-newton method', {'weight': 0.6})
('tree decomposition', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('tree decomposition', 'robert e. lucas', {'weight': 0.6})
('tree decomposition', 'non-convexity (economics)', {'weight': 0.6})
('tree decomposition', 'sr1 formula', {'weight': 0.6})
('tree decomposition', 'mathematical reviews', {'weight': 0.6})
('tree decomposition', 'puzzle', {'weight': 0.6})
('tree decomposition', 'associative array', {'weight': 0.6})
('tree decomposition', 'brambles', {'weight': 0.7})
('tree decomposition', 'shortest path problem', {'weight': 0.6})
('tree decomposition', 'dynamic algorithm', {'weight': 0.6})
('tree decomposition', 'augmented lagrangian method', {'weight': 0.6})
('tree decomposition', 'charles delisi', {'weight': 0.6})
('tree decomposition', 'greedy algorithm', {'weight': 0.6})
('tree decomposition', "karmarkar's algorithm", {'weight': 0.6})
('tree decomposition', 'lattice models', {'weight': 0.6})
('tree decomposition', 'utility', {'weight': 0.6})
('tree decomposition', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('tree decomposition', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('tree decomposition', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('tree decomposition', 'international standard book number', {'weight': 0.6})
('tree decomposition', 'undirected graph', {'weight': 0.6})
('tree decomposition', 'scheme (programming language)', {'weight': 0.6})
('tree decomposition', 'rna structure', {'weight': 0.6})
('tree decomposition', 'hanoi', {'weight': 0.6})
('tree decomposition', 'perl', {'weight': 0.6})
('tree decomposition', 'digital object identifier', {'weight': 0.6})
('tree decomposition', 'sequential quadratic programming', {'weight': 0.6})
('tree decomposition', "dinic's algorithm", {'weight': 0.6})
('tree decomposition', 'pseudo-polynomial time', {'weight': 0.6})
('tree decomposition', 'partition problem', {'weight': 0.6})
('tree decomposition', 'stochastic programming', {'weight': 0.6})
('tree decomposition', 'hill climbing', {'weight': 0.6})
('tree decomposition', 'top-down', {'weight': 0.6})
('tree decomposition', 'de boor algorithm', {'weight': 0.6})
('tree decomposition', 'optimization algorithm', {'weight': 0.6})
('tree decomposition', "kruskal's algorithm", {'weight': 0.6})
('tree decomposition', 'jacques philippe marie binet', {'weight': 0.6})
('tree decomposition', 'tabu search', {'weight': 0.6})
('tree decomposition', 'divide and conquer algorithm', {'weight': 0.6})
('tree decomposition', "johnson's algorithm", {'weight': 0.6})
('tree decomposition', 'evolutionary algorithm', {'weight': 0.6})
('tree decomposition', 'clique-width', {'weight': 0.6})
('tree decomposition', 'dynamic programming', {'weight': 0.6})
('tree decomposition', 'subroutine', {'weight': 0.6})
('tree decomposition', 'simulated annealing', {'weight': 0.6})
('tree decomposition', 'tower of hanoi', {'weight': 0.6})
('tree decomposition', 'branch and bound', {'weight': 0.6})
('tree decomposition', 'engineering', {'weight': 0.6})
('tree decomposition', 'matroid', {'weight': 0.6})
('tree decomposition', 'viterbi algorithm', {'weight': 0.6})
('tree decomposition', "lemke's algorithm", {'weight': 0.6})
('tree decomposition', 'simplex algorithm', {'weight': 0.6})
('tree decomposition', 'local search (optimization)', {'weight': 0.6})
('tree decomposition', 'hessian matrix', {'weight': 0.6})
('tree decomposition', 'ibm system r', {'weight': 0.6})
('tree decomposition', 'penalty method', {'weight': 0.6})
('tree decomposition', 'prolog', {'weight': 0.6})
('tree decomposition', 'time-invariant system', {'weight': 0.6})
('tree decomposition', 'criss-cross algorithm', {'weight': 0.6})
('tree decomposition', 'revised simplex algorithm', {'weight': 0.6})
('tree decomposition', 'the mathematical association of america', {'weight': 0.6})
('tree decomposition', 'line search', {'weight': 0.6})
('tree decomposition', 'j (programming language)', {'weight': 0.6})
('tree decomposition', 'word wrap', {'weight': 0.6})
('tree decomposition', 'subset sum problem', {'weight': 0.6})
('tree decomposition', 'integer programming', {'weight': 0.6})
('tree decomposition', 'nucleosome', {'weight': 0.6})
('tree decomposition', 'earley algorithm', {'weight': 0.6})
('tree decomposition', 'referential transparency (computer science)', {'weight': 0.6})
('tree decomposition', 'recursion', {'weight': 0.6})
('tree decomposition', 'mathematica', {'weight': 0.6})
('tree decomposition', 'quicksort', {'weight': 0.6})
('tree decomposition', 'recursion (computer science)', {'weight': 0.6})
('tree decomposition', 'checkerboard', {'weight': 0.6})
('tree decomposition', 'computer science', {'weight': 0.6})
('tree decomposition', 'brute-force search', {'weight': 0.6})
('tree decomposition', 'mathematics', {'weight': 0.6})
('tree decomposition', 'depth-first search', {'weight': 0.6})
('tree decomposition', 'top-down and bottom-up design', {'weight': 0.6})
('tree decomposition', 'correspondence problem', {'weight': 0.6})
('tree decomposition', 'transcription factor', {'weight': 0.6})
('tree decomposition', 'tree decomposition', {'weight': 1})
('tree decomposition', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('tree decomposition', 'structural alignment', {'weight': 0.6})
('tree decomposition', 'local convergence', {'weight': 0.6})
('tree decomposition', 'knapsack problem', {'weight': 0.6})
('tree decomposition', 'graph algorithm', {'weight': 0.6})
('tree decomposition', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('tree decomposition', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('tree decomposition', 'hidden markov model', {'weight': 0.6})
('tree decomposition', 'string (computer science)', {'weight': 0.6})
('tree decomposition', 'bioinformatics', {'weight': 0.6})
('tree decomposition', 'genetics', {'weight': 0.6})
('tree decomposition', 'mathematical optimization', {'weight': 0.6})
('tree decomposition', 'artificial neural networks', {'weight': 0.6})
('tree decomposition', 'introduction to algorithms', {'weight': 0.6})
('tree decomposition', 'thomas h. cormen', {'weight': 0.6})
('tree decomposition', 'music information retrieval', {'weight': 0.6})
('tree decomposition', 'beat (music)', {'weight': 0.6})
('tree decomposition', 'longest common subsequence problem', {'weight': 0.6})
('tree decomposition', 'convex minimization', {'weight': 0.6})
('tree decomposition', 'successive parabolic interpolation', {'weight': 0.6})
('tree decomposition', 'fibonacci sequence', {'weight': 0.6})
('tree decomposition', 'maximum subarray problem', {'weight': 0.6})
('tree decomposition', 'convex optimization', {'weight': 0.6})
('tree decomposition', 'memoization', {'weight': 0.6})
('tree decomposition', 'richard bellman', {'weight': 0.6})
('tree decomposition', 'exponential growth', {'weight': 0.6})
('tree decomposition', 'charles e. leiserson', {'weight': 0.6})
('tree decomposition', 'charles erwin wilson', {'weight': 0.6})
('tree decomposition', 'interval scheduling', {'weight': 0.6})
('tree decomposition', 'chart parser', {'weight': 0.6})
('tree decomposition', 'travelling salesman problem', {'weight': 0.6})
('tree decomposition', 'bellman equation', {'weight': 0.6})
('bioinformatics', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('bioinformatics', 'photoshop', {'weight': 0.6})
('bioinformatics', 'sequence alignment', {'weight': 0.6})
('bioinformatics', 'formal sciences', {'weight': 0.5})
('bioinformatics', 'biostatistics', {'weight': 0.5})
('bioinformatics', 'ellipsoid method', {'weight': 0.6})
('bioinformatics', 'chain matrix multiplication', {'weight': 0.6})
('bioinformatics', 'ieee', {'weight': 0.6})
('bioinformatics', 'backtracking', {'weight': 0.6})
('bioinformatics', 'nonlinear conjugate gradient method', {'weight': 0.6})
('bioinformatics', 'dynamic problem', {'weight': 0.6})
('bioinformatics', 'phylogenetics', {'weight': 0.7})
('bioinformatics', 'trust region', {'weight': 0.6})
('bioinformatics', 'function (mathematics)', {'weight': 0.6})
('bioinformatics', 'minimum spanning tree', {'weight': 0.6})
('bioinformatics', 'context-free grammar', {'weight': 0.6})
('bioinformatics', 'branch and cut', {'weight': 0.6})
('bioinformatics', 'state variable', {'weight': 0.6})
('bioinformatics', 'treewidth', {'weight': 0.6})
('bioinformatics', 'flow network', {'weight': 0.6})
('bioinformatics', 'overlapping subproblem', {'weight': 0.6})
('bioinformatics', 'taylor & francis', {'weight': 0.6})
('bioinformatics', 'health informatics', {'weight': 0.7})
('bioinformatics', 'cutting-plane method', {'weight': 0.6})
('bioinformatics', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('bioinformatics', 'method of undetermined coefficients', {'weight': 0.6})
('bioinformatics', 'combinatorial optimization', {'weight': 0.6})
('bioinformatics', "newton's method in optimization", {'weight': 0.6})
('bioinformatics', 'matrix chain multiplication', {'weight': 0.6})
('bioinformatics', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('bioinformatics', 'dynamic time warping', {'weight': 0.6})
('bioinformatics', 'dynamic programming language', {'weight': 0.6})
('bioinformatics', 'call-by-need', {'weight': 0.6})
('bioinformatics', 'big-o notation', {'weight': 0.6})
('bioinformatics', 'comparison of optimization software', {'weight': 0.6})
('bioinformatics', 'quadratic programming', {'weight': 0.6})
('bioinformatics', 'common lisp', {'weight': 0.6})
('bioinformatics', 'barrier function', {'weight': 0.6})
('bioinformatics', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('bioinformatics', 'jumping library', {'weight': 0.7})
('bioinformatics', 'gradient descent', {'weight': 0.6})
('bioinformatics', 'patricia selinger', {'weight': 0.6})
('bioinformatics', 'discounting', {'weight': 0.6})
('bioinformatics', 'margaret oakley dayhoff', {'weight': 0.7})
('bioinformatics', 'ronald l. rivest', {'weight': 0.6})
('bioinformatics', 'iterative method', {'weight': 0.6})
('bioinformatics', 'limited-memory bfgs', {'weight': 0.6})
('bioinformatics', 'bioinformatics companies', {'weight': 0.7})
('bioinformatics', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('bioinformatics', 'longest common substring problem', {'weight': 0.6})
('bioinformatics', 'clifford stein', {'weight': 0.6})
('bioinformatics', 'computer chess', {'weight': 0.6})
('bioinformatics', 'linear programming', {'weight': 0.6})
('bioinformatics', 'bitonic tour', {'weight': 0.6})
('bioinformatics', 'linear search problem', {'weight': 0.6})
('bioinformatics', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('bioinformatics', 'systems analysis', {'weight': 0.6})
('bioinformatics', 'capital (economics)', {'weight': 0.6})
('bioinformatics', 'biological engineering', {'weight': 0.5})
('bioinformatics', 'levenshtein distance', {'weight': 0.6})
('bioinformatics', 'nonlinear programming', {'weight': 0.6})
('bioinformatics', 'computational complexity of mathematical operations', {'weight': 0.6})
('bioinformatics', 'structural alignment', {'weight': 0.6})
('bioinformatics', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('bioinformatics', 'gradient', {'weight': 0.6})
('bioinformatics', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('bioinformatics', 'computational biomodeling', {'weight': 0.7})
('bioinformatics', 'bulletin of the american mathematical society', {'weight': 0.6})
('bioinformatics', 'structural bioinformatics', {'weight': 0.7})
('bioinformatics', 'u.s. english', {'weight': 0.6})
('bioinformatics', 'refutation table', {'weight': 0.6})
('bioinformatics', 'heuristic algorithm', {'weight': 0.6})
('bioinformatics', 'successive linear programming', {'weight': 0.6})
('bioinformatics', 'optimal substructure', {'weight': 0.6})
('bioinformatics', 'programming language', {'weight': 0.6})
('bioinformatics', 'mergesort', {'weight': 0.6})
('bioinformatics', "dijkstra's algorithm", {'weight': 0.6})
('bioinformatics', 'subgradient method', {'weight': 0.6})
('bioinformatics', 'call-by-name', {'weight': 0.6})
('bioinformatics', 'longest increasing subsequence problem', {'weight': 0.6})
('bioinformatics', 'edward prescott', {'weight': 0.6})
('bioinformatics', 'exponential time', {'weight': 0.6})
('bioinformatics', 'principle of optimality', {'weight': 0.6})
('bioinformatics', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('bioinformatics', 'mathematical game', {'weight': 0.6})
('bioinformatics', 'nancy stokey', {'weight': 0.6})
('bioinformatics', 'list of open-source bioinformatics software', {'weight': 0.7})
('bioinformatics', 'approximation algorithm', {'weight': 0.6})
('bioinformatics', 'discrete-time', {'weight': 0.6})
('bioinformatics', 'cyk algorithm', {'weight': 0.6})
('bioinformatics', 'markov decision process', {'weight': 0.6})
('bioinformatics', 'list of free online bioinformatics courses', {'weight': 0.7})
('bioinformatics', "powell's method", {'weight': 0.6})
('bioinformatics', 'wolfe conditions', {'weight': 0.6})
('bioinformatics', 'convexity in economics', {'weight': 0.6})
('bioinformatics', 'transposition table', {'weight': 0.6})
('bioinformatics', 'metabolomics', {'weight': 0.7})
('bioinformatics', 'economics', {'weight': 0.6})
('bioinformatics', 'backward induction', {'weight': 0.6})
('bioinformatics', 'list of scientific journals in bioinformatics', {'weight': 0.7})
('bioinformatics', 'golden section search', {'weight': 0.6})
('bioinformatics', 'edit distance', {'weight': 0.6})
('bioinformatics', 'tree structure', {'weight': 0.6})
('bioinformatics', 'exchange algorithm', {'weight': 0.6})
('bioinformatics', 'dover publications', {'weight': 0.6})
('bioinformatics', 'seam carving', {'weight': 0.6})
('bioinformatics', 'recursive least squares', {'weight': 0.6})
('bioinformatics', 'metaheuristic', {'weight': 0.6})
('bioinformatics', 'quasi-newton method', {'weight': 0.6})
('bioinformatics', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('bioinformatics', 'robert e. lucas', {'weight': 0.6})
('bioinformatics', 'non-convexity (economics)', {'weight': 0.6})
('bioinformatics', 'gene disease database', {'weight': 0.7})
('bioinformatics', 'sr1 formula', {'weight': 0.6})
('bioinformatics', 'mathematical reviews', {'weight': 0.6})
('bioinformatics', 'proteomics', {'weight': 0.7})
('bioinformatics', 'puzzle', {'weight': 0.6})
('bioinformatics', 'associative array', {'weight': 0.6})
('bioinformatics', 'shortest path problem', {'weight': 0.6})
('bioinformatics', 'dynamic algorithm', {'weight': 0.6})
('bioinformatics', 'augmented lagrangian method', {'weight': 0.6})
('bioinformatics', 'charles delisi', {'weight': 0.6})
('bioinformatics', 'greedy algorithm', {'weight': 0.6})
('bioinformatics', "karmarkar's algorithm", {'weight': 0.6})
('bioinformatics', 'lattice models', {'weight': 0.6})
('bioinformatics', 'utility', {'weight': 0.6})
('bioinformatics', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('bioinformatics', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('bioinformatics', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('bioinformatics', 'international standard book number', {'weight': 0.6})
('bioinformatics', 'undirected graph', {'weight': 0.6})
('bioinformatics', 'scheme (programming language)', {'weight': 0.6})
('bioinformatics', 'rna structure', {'weight': 0.6})
('bioinformatics', 'hanoi', {'weight': 0.6})
('bioinformatics', 'perl', {'weight': 0.6})
('bioinformatics', 'digital object identifier', {'weight': 0.6})
('bioinformatics', 'sequential quadratic programming', {'weight': 0.6})
('bioinformatics', 'mathematical and theoretical biology', {'weight': 0.5})
('bioinformatics', "dinic's algorithm", {'weight': 0.6})
('bioinformatics', 'pseudo-polynomial time', {'weight': 0.6})
('bioinformatics', 'partition problem', {'weight': 0.6})
('bioinformatics', 'stochastic programming', {'weight': 0.6})
('bioinformatics', 'computational genomics', {'weight': 0.7})
('bioinformatics', 'hill climbing', {'weight': 0.6})
('bioinformatics', 'top-down', {'weight': 0.6})
('bioinformatics', 'de boor algorithm', {'weight': 0.6})
('bioinformatics', 'optimization algorithm', {'weight': 0.6})
('bioinformatics', "kruskal's algorithm", {'weight': 0.6})
('bioinformatics', 'jacques philippe marie binet', {'weight': 0.6})
('bioinformatics', 'tabu search', {'weight': 0.6})
('bioinformatics', 'divide and conquer algorithm', {'weight': 0.6})
('bioinformatics', "johnson's algorithm", {'weight': 0.6})
('bioinformatics', 'evolutionary algorithm', {'weight': 0.6})
('bioinformatics', 'clique-width', {'weight': 0.6})
('bioinformatics', 'dynamic programming', {'weight': 0.6})
('bioinformatics', 'subroutine', {'weight': 0.6})
('bioinformatics', 'list of master of science in bioinformatics', {'weight': 0.7})
('bioinformatics', 'simulated annealing', {'weight': 0.6})
('bioinformatics', 'tower of hanoi', {'weight': 0.6})
('bioinformatics', 'branch and bound', {'weight': 0.6})
('bioinformatics', 'engineering', {'weight': 0.6})
('bioinformatics', 'matroid', {'weight': 0.6})
('bioinformatics', 'viterbi algorithm', {'weight': 0.6})
('bioinformatics', "lemke's algorithm", {'weight': 0.6})
('bioinformatics', 'simplex algorithm', {'weight': 0.6})
('bioinformatics', 'local search (optimization)', {'weight': 0.6})
('bioinformatics', 'hessian matrix', {'weight': 0.6})
('bioinformatics', 'ibm system r', {'weight': 0.6})
('bioinformatics', 'penalty method', {'weight': 0.6})
('bioinformatics', 'prolog', {'weight': 0.6})
('bioinformatics', 'time-invariant system', {'weight': 0.6})
('bioinformatics', 'criss-cross algorithm', {'weight': 0.6})
('bioinformatics', 'functional genomics', {'weight': 0.7})
('bioinformatics', 'revised simplex algorithm', {'weight': 0.6})
('bioinformatics', 'the mathematical association of america', {'weight': 0.6})
('bioinformatics', 'line search', {'weight': 0.6})
('bioinformatics', 'j (programming language)', {'weight': 0.6})
('bioinformatics', 'word wrap', {'weight': 0.6})
('bioinformatics', 'international society for computational biology', {'weight': 0.7})
('bioinformatics', 'subset sum problem', {'weight': 0.6})
('bioinformatics', 'integer programming', {'weight': 0.6})
('bioinformatics', 'nucleosome', {'weight': 0.6})
('bioinformatics', 'earley algorithm', {'weight': 0.6})
('bioinformatics', 'referential transparency (computer science)', {'weight': 0.6})
('bioinformatics', 'recursion', {'weight': 0.6})
('bioinformatics', 'mathematica', {'weight': 0.6})
('bioinformatics', 'quicksort', {'weight': 0.6})
('bioinformatics', 'recursion (computer science)', {'weight': 0.6})
('bioinformatics', 'checkerboard', {'weight': 0.6})
('bioinformatics', 'computer science', {'weight': 0.6})
('bioinformatics', 'brute-force search', {'weight': 0.6})
('bioinformatics', 'mathematics', {'weight': 0.6})
('bioinformatics', 'depth-first search', {'weight': 0.6})
('bioinformatics', 'top-down and bottom-up design', {'weight': 0.6})
('bioinformatics', 'correspondence problem', {'weight': 0.6})
('bioinformatics', 'transcription factor', {'weight': 0.6})
('bioinformatics', 'tree decomposition', {'weight': 0.6})
('bioinformatics', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('bioinformatics', 'computational biology', {'weight': 0.7})
('bioinformatics', 'local convergence', {'weight': 0.6})
('bioinformatics', 'biodiversity informatics', {'weight': 0.7})
('bioinformatics', 'knapsack problem', {'weight': 0.6})
('bioinformatics', 'graph algorithm', {'weight': 0.6})
('bioinformatics', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('bioinformatics', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('bioinformatics', 'hidden markov model', {'weight': 0.6})
('bioinformatics', 'string (computer science)', {'weight': 0.6})
('bioinformatics', 'bioinformatics', {'weight': 1})
('bioinformatics', 'genetics', {'weight': 0.6})
('bioinformatics', 'mathematical optimization', {'weight': 0.6})
('bioinformatics', 'artificial neural networks', {'weight': 0.6})
('bioinformatics', 'introduction to algorithms', {'weight': 0.6})
('bioinformatics', 'thomas h. cormen', {'weight': 0.6})
('bioinformatics', 'music information retrieval', {'weight': 0.6})
('bioinformatics', 'beat (music)', {'weight': 0.6})
('bioinformatics', 'longest common subsequence problem', {'weight': 0.6})
('bioinformatics', 'convex minimization', {'weight': 0.6})
('bioinformatics', 'successive parabolic interpolation', {'weight': 0.6})
('bioinformatics', 'fibonacci sequence', {'weight': 0.6})
('bioinformatics', 'maximum subarray problem', {'weight': 0.6})
('bioinformatics', 'convex optimization', {'weight': 0.6})
('bioinformatics', 'memoization', {'weight': 0.6})
('bioinformatics', 'richard bellman', {'weight': 0.6})
('bioinformatics', 'exponential growth', {'weight': 0.6})
('bioinformatics', 'charles e. leiserson', {'weight': 0.6})
('bioinformatics', 'charles erwin wilson', {'weight': 0.6})
('bioinformatics', 'interval scheduling', {'weight': 0.6})
('bioinformatics', 'chart parser', {'weight': 0.6})
('bioinformatics', 'travelling salesman problem', {'weight': 0.6})
('bioinformatics', 'bellman equation', {'weight': 0.6})
('string (computer science)', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('string (computer science)', 'photoshop', {'weight': 0.6})
('string (computer science)', 'sequence alignment', {'weight': 0.6})
('string (computer science)', 'flow network', {'weight': 0.6})
('string (computer science)', 'data types', {'weight': 0.5})
('string (computer science)', 'ellipsoid method', {'weight': 0.6})
('string (computer science)', 'chain matrix multiplication', {'weight': 0.6})
('string (computer science)', 'ieee', {'weight': 0.6})
('string (computer science)', 'backtracking', {'weight': 0.6})
('string (computer science)', 'nonlinear conjugate gradient method', {'weight': 0.6})
('string (computer science)', 'dynamic problem', {'weight': 0.6})
('string (computer science)', 'trust region', {'weight': 0.6})
('string (computer science)', 'function (mathematics)', {'weight': 0.6})
('string (computer science)', 'formal language', {'weight': 0.7})
('string (computer science)', 'minimum spanning tree', {'weight': 0.6})
('string (computer science)', 'context-free grammar', {'weight': 0.6})
('string (computer science)', 'recursive least squares', {'weight': 0.6})
('string (computer science)', 'branch and cut', {'weight': 0.6})
('string (computer science)', 'state variable', {'weight': 0.6})
('string (computer science)', 'treewidth', {'weight': 0.6})
('string (computer science)', 'overlapping subproblem', {'weight': 0.6})
('string (computer science)', 'taylor & francis', {'weight': 0.6})
('string (computer science)', 'cutting-plane method', {'weight': 0.6})
('string (computer science)', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('string (computer science)', 'method of undetermined coefficients', {'weight': 0.6})
('string (computer science)', 'combinatorial optimization', {'weight': 0.6})
('string (computer science)', "newton's method in optimization", {'weight': 0.6})
('string (computer science)', 'matrix chain multiplication', {'weight': 0.6})
('string (computer science)', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('string (computer science)', 'dynamic time warping', {'weight': 0.6})
('string (computer science)', 'dynamic programming language', {'weight': 0.6})
('string (computer science)', 'call-by-need', {'weight': 0.6})
('string (computer science)', 'big-o notation', {'weight': 0.6})
('string (computer science)', 'comparison of optimization software', {'weight': 0.6})
('string (computer science)', 'quadratic programming', {'weight': 0.6})
('string (computer science)', 'common lisp', {'weight': 0.6})
('string (computer science)', 'barrier function', {'weight': 0.6})
('string (computer science)', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('string (computer science)', 'gradient descent', {'weight': 0.6})
('string (computer science)', 'patricia selinger', {'weight': 0.6})
('string (computer science)', 'discounting', {'weight': 0.6})
('string (computer science)', 'ronald l. rivest', {'weight': 0.6})
('string (computer science)', 'iterative method', {'weight': 0.6})
('string (computer science)', 'limited-memory bfgs', {'weight': 0.6})
('string (computer science)', 'string.h', {'weight': 0.7})
('string (computer science)', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('string (computer science)', 'longest common substring problem', {'weight': 0.6})
('string (computer science)', 'clifford stein', {'weight': 0.6})
('string (computer science)', 'computer chess', {'weight': 0.6})
('string (computer science)', 'binary-safe', {'weight': 0.7})
('string (computer science)', 'linear programming', {'weight': 0.6})
('string (computer science)', 'bitonic tour', {'weight': 0.6})
('string (computer science)', 'linear search problem', {'weight': 0.6})
('string (computer science)', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('string (computer science)', 'systems analysis', {'weight': 0.6})
('string (computer science)', 'bitstring', {'weight': 0.7})
('string (computer science)', 'capital (economics)', {'weight': 0.6})
('string (computer science)', 'levenshtein distance', {'weight': 0.6})
('string (computer science)', 'nonlinear programming', {'weight': 0.6})
('string (computer science)', 'computational complexity of mathematical operations', {'weight': 0.6})
('string (computer science)', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('string (computer science)', 'gradient', {'weight': 0.6})
('string (computer science)', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('string (computer science)', 'bulletin of the american mathematical society', {'weight': 0.6})
('string (computer science)', 'u.s. english', {'weight': 0.6})
('string (computer science)', 'refutation table', {'weight': 0.6})
('string (computer science)', 'heuristic algorithm', {'weight': 0.6})
('string (computer science)', 'successive linear programming', {'weight': 0.6})
('string (computer science)', 'optimal substructure', {'weight': 0.6})
('string (computer science)', 'programming language', {'weight': 0.6})
('string (computer science)', 'mergesort', {'weight': 0.6})
('string (computer science)', "dijkstra's algorithm", {'weight': 0.6})
('string (computer science)', 'subgradient method', {'weight': 0.6})
('string (computer science)', 'call-by-name', {'weight': 0.6})
('string (computer science)', 'longest increasing subsequence problem', {'weight': 0.6})
('string (computer science)', 'edward prescott', {'weight': 0.6})
('string (computer science)', 'exponential time', {'weight': 0.6})
('string (computer science)', 'empty string', {'weight': 0.7})
('string (computer science)', 'algorithms on strings', {'weight': 0.5})
('string (computer science)', 'principle of optimality', {'weight': 0.6})
('string (computer science)', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('string (computer science)', 'mathematical game', {'weight': 0.6})
('string (computer science)', 'nancy stokey', {'weight': 0.6})
('string (computer science)', 'incompressible string', {'weight': 0.7})
('string (computer science)', 'approximation algorithm', {'weight': 0.6})
('string (computer science)', 'discrete-time', {'weight': 0.6})
('string (computer science)', 'cyk algorithm', {'weight': 0.6})
('string (computer science)', 'markov decision process', {'weight': 0.6})
('string (computer science)', "powell's method", {'weight': 0.6})
('string (computer science)', 'wolfe conditions', {'weight': 0.6})
('string (computer science)', 'convexity in economics', {'weight': 0.6})
('string (computer science)', 'transposition table', {'weight': 0.6})
('string (computer science)', 'string (c++)', {'weight': 0.7})
('string (computer science)', 'character encoding', {'weight': 0.5})
('string (computer science)', 'economics', {'weight': 0.6})
('string (computer science)', 'backward induction', {'weight': 0.6})
('string (computer science)', 'golden section search', {'weight': 0.6})
('string (computer science)', 'edit distance', {'weight': 0.6})
('string (computer science)', 'tree structure', {'weight': 0.6})
('string (computer science)', 'exchange algorithm', {'weight': 0.6})
('string (computer science)', 'dover publications', {'weight': 0.6})
('string (computer science)', 'seam carving', {'weight': 0.6})
('string (computer science)', 'syntactic entities', {'weight': 0.5})
('string (computer science)', 'metaheuristic', {'weight': 0.6})
('string (computer science)', 'quasi-newton method', {'weight': 0.6})
('string (computer science)', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('string (computer science)', 'robert e. lucas', {'weight': 0.6})
('string (computer science)', 'non-convexity (economics)', {'weight': 0.6})
('string (computer science)', 'sr1 formula', {'weight': 0.6})
('string (computer science)', 'mathematical reviews', {'weight': 0.6})
('string (computer science)', 'puzzle', {'weight': 0.6})
('string (computer science)', 'associative array', {'weight': 0.6})
('string (computer science)', 'shortest path problem', {'weight': 0.6})
('string (computer science)', 'dynamic algorithm', {'weight': 0.6})
('string (computer science)', 'string metric', {'weight': 0.7})
('string (computer science)', 'augmented lagrangian method', {'weight': 0.6})
('string (computer science)', 'charles delisi', {'weight': 0.6})
('string (computer science)', 'greedy algorithm', {'weight': 0.6})
('string (computer science)', "karmarkar's algorithm", {'weight': 0.6})
('string (computer science)', 'lattice models', {'weight': 0.6})
('string (computer science)', 'utility', {'weight': 0.6})
('string (computer science)', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('string (computer science)', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('string (computer science)', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('string (computer science)', 'international standard book number', {'weight': 0.6})
('string (computer science)', 'undirected graph', {'weight': 0.6})
('string (computer science)', 'scheme (programming language)', {'weight': 0.6})
('string (computer science)', 'rna structure', {'weight': 0.6})
('string (computer science)', 'hanoi', {'weight': 0.6})
('string (computer science)', 'perl', {'weight': 0.6})
('string (computer science)', 'digital object identifier', {'weight': 0.6})
('string (computer science)', 'sequential quadratic programming', {'weight': 0.6})
('string (computer science)', "dinic's algorithm", {'weight': 0.6})
('string (computer science)', 'pseudo-polynomial time', {'weight': 0.6})
('string (computer science)', 'partition problem', {'weight': 0.6})
('string (computer science)', 'stochastic programming', {'weight': 0.6})
('string (computer science)', 'analysis of algorithms', {'weight': 0.7})
('string (computer science)', 'hill climbing', {'weight': 0.6})
('string (computer science)', 'top-down', {'weight': 0.6})
('string (computer science)', 'de boor algorithm', {'weight': 0.6})
('string (computer science)', 'optimization algorithm', {'weight': 0.6})
('string (computer science)', "kruskal's algorithm", {'weight': 0.6})
('string (computer science)', 'jacques philippe marie binet', {'weight': 0.6})
('string (computer science)', 'tabu search', {'weight': 0.6})
('string (computer science)', 'divide and conquer algorithm', {'weight': 0.6})
('string (computer science)', 'connection string', {'weight': 0.7})
('string (computer science)', "johnson's algorithm", {'weight': 0.6})
('string (computer science)', 'evolutionary algorithm', {'weight': 0.6})
('string (computer science)', 'clique-width', {'weight': 0.6})
('string (computer science)', 'dynamic programming', {'weight': 0.6})
('string (computer science)', 'subroutine', {'weight': 0.6})
('string (computer science)', 'simulated annealing', {'weight': 0.6})
('string (computer science)', 'tower of hanoi', {'weight': 0.6})
('string (computer science)', 'branch and bound', {'weight': 0.6})
('string (computer science)', 'engineering', {'weight': 0.6})
('string (computer science)', 'matroid', {'weight': 0.6})
('string (computer science)', 'rope', {'weight': 0.7})
('string (computer science)', 'viterbi algorithm', {'weight': 0.6})
('string (computer science)', "lemke's algorithm", {'weight': 0.6})
('string (computer science)', 'simplex algorithm', {'weight': 0.6})
('string (computer science)', 'local search (optimization)', {'weight': 0.6})
('string (computer science)', 'hessian matrix', {'weight': 0.6})
('string (computer science)', 'ibm system r', {'weight': 0.6})
('string (computer science)', 'penalty method', {'weight': 0.6})
('string (computer science)', 'prolog', {'weight': 0.6})
('string (computer science)', 'time-invariant system', {'weight': 0.6})
('string (computer science)', 'criss-cross algorithm', {'weight': 0.6})
('string (computer science)', 'improper input validation', {'weight': 0.7})
('string (computer science)', 'revised simplex algorithm', {'weight': 0.6})
('string (computer science)', 'the mathematical association of america', {'weight': 0.6})
('string (computer science)', 'line search', {'weight': 0.6})
('string (computer science)', 'j (programming language)', {'weight': 0.6})
('string (computer science)', 'formal languages', {'weight': 0.5})
('string (computer science)', 'word wrap', {'weight': 0.6})
('string (computer science)', 'subset sum problem', {'weight': 0.6})
('string (computer science)', 'combinatorics on words', {'weight': 0.5})
('string (computer science)', 'integer programming', {'weight': 0.6})
('string (computer science)', 'nucleosome', {'weight': 0.6})
('string (computer science)', 'earley algorithm', {'weight': 0.6})
('string (computer science)', 'referential transparency (computer science)', {'weight': 0.6})
('string (computer science)', 'recursion', {'weight': 0.6})
('string (computer science)', 'mathematica', {'weight': 0.6})
('string (computer science)', 'quicksort', {'weight': 0.6})
('string (computer science)', 'recursion (computer science)', {'weight': 0.6})
('string (computer science)', 'checkerboard', {'weight': 0.6})
('string (computer science)', 'computer science', {'weight': 0.6})
('string (computer science)', 'brute-force search', {'weight': 0.6})
('string (computer science)', 'mathematics', {'weight': 0.6})
('string (computer science)', 'depth-first search', {'weight': 0.6})
('string (computer science)', 'top-down and bottom-up design', {'weight': 0.6})
('string (computer science)', 'correspondence problem', {'weight': 0.6})
('string (computer science)', 'transcription factor', {'weight': 0.6})
('string (computer science)', 'tree decomposition', {'weight': 0.6})
('string (computer science)', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('string (computer science)', 'structural alignment', {'weight': 0.6})
('string (computer science)', 'local convergence', {'weight': 0.6})
('string (computer science)', 'knapsack problem', {'weight': 0.6})
('string (computer science)', 'graph algorithm', {'weight': 0.6})
('string (computer science)', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('string (computer science)', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('string (computer science)', 'hidden markov model', {'weight': 0.6})
('string (computer science)', 'string (computer science)', {'weight': 1})
('string (computer science)', 'bioinformatics', {'weight': 0.6})
('string (computer science)', 'genetics', {'weight': 0.6})
('string (computer science)', 'mathematical optimization', {'weight': 0.6})
('string (computer science)', 'artificial neural networks', {'weight': 0.6})
('string (computer science)', 'introduction to algorithms', {'weight': 0.6})
('string (computer science)', 'thomas h. cormen', {'weight': 0.6})
('string (computer science)', 'music information retrieval', {'weight': 0.6})
('string (computer science)', 'beat (music)', {'weight': 0.6})
('string (computer science)', 'longest common subsequence problem', {'weight': 0.6})
('string (computer science)', 'convex minimization', {'weight': 0.6})
('string (computer science)', 'primitive types', {'weight': 0.5})
('string (computer science)', 'successive parabolic interpolation', {'weight': 0.6})
('string (computer science)', 'fibonacci sequence', {'weight': 0.6})
('string (computer science)', 'maximum subarray problem', {'weight': 0.6})
('string (computer science)', 'convex optimization', {'weight': 0.6})
('string (computer science)', 'memoization', {'weight': 0.6})
('string (computer science)', 'richard bellman', {'weight': 0.6})
('string (computer science)', 'exponential growth', {'weight': 0.6})
('string (computer science)', 'charles e. leiserson', {'weight': 0.6})
('string (computer science)', 'charles erwin wilson', {'weight': 0.6})
('string (computer science)', 'interval scheduling', {'weight': 0.6})
('string (computer science)', 'chart parser', {'weight': 0.6})
('string (computer science)', 'travelling salesman problem', {'weight': 0.6})
('string (computer science)', 'bellman equation', {'weight': 0.6})
('beat (music)', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('beat (music)', 'photoshop', {'weight': 0.6})
('beat (music)', 'sequence alignment', {'weight': 0.6})
('beat (music)', 'flow network', {'weight': 0.6})
('beat (music)', 'ellipsoid method', {'weight': 0.6})
('beat (music)', 'chain matrix multiplication', {'weight': 0.6})
('beat (music)', 'ieee', {'weight': 0.6})
('beat (music)', 'backtracking', {'weight': 0.6})
('beat (music)', 'nonlinear conjugate gradient method', {'weight': 0.6})
('beat (music)', 'dynamic problem', {'weight': 0.6})
('beat (music)', 'trust region', {'weight': 0.6})
('beat (music)', 'function (mathematics)', {'weight': 0.6})
('beat (music)', 'minimum spanning tree', {'weight': 0.6})
('beat (music)', 'context-free grammar', {'weight': 0.6})
('beat (music)', 'branch and cut', {'weight': 0.6})
('beat (music)', 'state variable', {'weight': 0.6})
('beat (music)', 'treewidth', {'weight': 0.6})
('beat (music)', 'overlapping subproblem', {'weight': 0.6})
('beat (music)', 'taylor & francis', {'weight': 0.6})
('beat (music)', 'cutting-plane method', {'weight': 0.6})
('beat (music)', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('beat (music)', 'method of undetermined coefficients', {'weight': 0.6})
('beat (music)', 'combinatorial optimization', {'weight': 0.6})
('beat (music)', "newton's method in optimization", {'weight': 0.6})
('beat (music)', 'matrix chain multiplication', {'weight': 0.6})
('beat (music)', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('beat (music)', 'dynamic time warping', {'weight': 0.6})
('beat (music)', 'dynamic programming language', {'weight': 0.6})
('beat (music)', 'call-by-need', {'weight': 0.6})
('beat (music)', 'correspondence problem', {'weight': 0.6})
('beat (music)', 'big-o notation', {'weight': 0.6})
('beat (music)', 'comparison of optimization software', {'weight': 0.6})
('beat (music)', 'quadratic programming', {'weight': 0.6})
('beat (music)', 'common lisp', {'weight': 0.6})
('beat (music)', 'barrier function', {'weight': 0.6})
('beat (music)', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('beat (music)', 'gradient descent', {'weight': 0.6})
('beat (music)', 'patricia selinger', {'weight': 0.6})
('beat (music)', 'discounting', {'weight': 0.6})
('beat (music)', 'ronald l. rivest', {'weight': 0.6})
('beat (music)', 'iterative method', {'weight': 0.6})
('beat (music)', 'limited-memory bfgs', {'weight': 0.6})
('beat (music)', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('beat (music)', 'longest common substring problem', {'weight': 0.6})
('beat (music)', 'clifford stein', {'weight': 0.6})
('beat (music)', 'computer chess', {'weight': 0.6})
('beat (music)', 'linear programming', {'weight': 0.6})
('beat (music)', 'bitonic tour', {'weight': 0.6})
('beat (music)', 'linear search problem', {'weight': 0.6})
('beat (music)', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('beat (music)', 'systems analysis', {'weight': 0.6})
('beat (music)', 'capital (economics)', {'weight': 0.6})
('beat (music)', 'levenshtein distance', {'weight': 0.6})
('beat (music)', 'nonlinear programming', {'weight': 0.6})
('beat (music)', 'computational complexity of mathematical operations', {'weight': 0.6})
('beat (music)', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('beat (music)', 'gradient', {'weight': 0.6})
('beat (music)', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('beat (music)', 'bulletin of the american mathematical society', {'weight': 0.6})
('beat (music)', 'u.s. english', {'weight': 0.6})
('beat (music)', 'refutation table', {'weight': 0.6})
('beat (music)', 'heuristic algorithm', {'weight': 0.6})
('beat (music)', 'successive linear programming', {'weight': 0.6})
('beat (music)', 'optimal substructure', {'weight': 0.6})
('beat (music)', 'programming language', {'weight': 0.6})
('beat (music)', 'mergesort', {'weight': 0.6})
('beat (music)', "dijkstra's algorithm", {'weight': 0.6})
('beat (music)', 'subgradient method', {'weight': 0.6})
('beat (music)', 'call-by-name', {'weight': 0.6})
('beat (music)', 'longest increasing subsequence problem', {'weight': 0.6})
('beat (music)', 'edward prescott', {'weight': 0.6})
('beat (music)', 'exponential time', {'weight': 0.6})
('beat (music)', 'principle of optimality', {'weight': 0.6})
('beat (music)', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('beat (music)', 'mathematical game', {'weight': 0.6})
('beat (music)', 'nancy stokey', {'weight': 0.6})
('beat (music)', 'approximation algorithm', {'weight': 0.6})
('beat (music)', 'discrete-time', {'weight': 0.6})
('beat (music)', 'cyk algorithm', {'weight': 0.6})
('beat (music)', 'markov decision process', {'weight': 0.6})
('beat (music)', "powell's method", {'weight': 0.6})
('beat (music)', 'wolfe conditions', {'weight': 0.6})
('beat (music)', 'convexity in economics', {'weight': 0.6})
('beat (music)', 'transposition table', {'weight': 0.6})
('beat (music)', 'economics', {'weight': 0.6})
('beat (music)', 'backward induction', {'weight': 0.6})
('beat (music)', 'golden section search', {'weight': 0.6})
('beat (music)', 'edit distance', {'weight': 0.6})
('beat (music)', 'tree structure', {'weight': 0.6})
('beat (music)', 'percussion performance techniques', {'weight': 0.5})
('beat (music)', 'exchange algorithm', {'weight': 0.6})
('beat (music)', 'dover publications', {'weight': 0.6})
('beat (music)', 'seam carving', {'weight': 0.6})
('beat (music)', 'recursive least squares', {'weight': 0.6})
('beat (music)', 'metaheuristic', {'weight': 0.6})
('beat (music)', 'quasi-newton method', {'weight': 0.6})
('beat (music)', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('beat (music)', 'robert e. lucas', {'weight': 0.6})
('beat (music)', 'non-convexity (economics)', {'weight': 0.6})
('beat (music)', 'sr1 formula', {'weight': 0.6})
('beat (music)', 'mathematical reviews', {'weight': 0.6})
('beat (music)', 'puzzle', {'weight': 0.6})
('beat (music)', 'associative array', {'weight': 0.6})
('beat (music)', 'shortest path problem', {'weight': 0.6})
('beat (music)', 'dynamic algorithm', {'weight': 0.6})
('beat (music)', 'augmented lagrangian method', {'weight': 0.6})
('beat (music)', 'charles delisi', {'weight': 0.6})
('beat (music)', 'greedy algorithm', {'weight': 0.6})
('beat (music)', "karmarkar's algorithm", {'weight': 0.6})
('beat (music)', 'lattice models', {'weight': 0.6})
('beat (music)', 'utility', {'weight': 0.6})
('beat (music)', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('beat (music)', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('beat (music)', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('beat (music)', 'international standard book number', {'weight': 0.6})
('beat (music)', 'undirected graph', {'weight': 0.6})
('beat (music)', 'scheme (programming language)', {'weight': 0.6})
('beat (music)', 'rna structure', {'weight': 0.6})
('beat (music)', 'hanoi', {'weight': 0.6})
('beat (music)', 'perl', {'weight': 0.6})
('beat (music)', 'digital object identifier', {'weight': 0.6})
('beat (music)', 'sequential quadratic programming', {'weight': 0.6})
('beat (music)', "dinic's algorithm", {'weight': 0.6})
('beat (music)', 'pseudo-polynomial time', {'weight': 0.6})
('beat (music)', 'partition problem', {'weight': 0.6})
('beat (music)', 'stochastic programming', {'weight': 0.6})
('beat (music)', 'popular music', {'weight': 0.5})
('beat (music)', 'top-down', {'weight': 0.6})
('beat (music)', 'de boor algorithm', {'weight': 0.6})
('beat (music)', 'optimization algorithm', {'weight': 0.6})
('beat (music)', "kruskal's algorithm", {'weight': 0.6})
('beat (music)', 'jacques philippe marie binet', {'weight': 0.6})
('beat (music)', 'tabu search', {'weight': 0.6})
('beat (music)', 'divide and conquer algorithm', {'weight': 0.6})
('beat (music)', "johnson's algorithm", {'weight': 0.6})
('beat (music)', 'evolutionary algorithm', {'weight': 0.6})
('beat (music)', 'clique-width', {'weight': 0.6})
('beat (music)', 'dynamic programming', {'weight': 0.6})
('beat (music)', 'subroutine', {'weight': 0.6})
('beat (music)', 'simulated annealing', {'weight': 0.6})
('beat (music)', 'tower of hanoi', {'weight': 0.6})
('beat (music)', 'branch and bound', {'weight': 0.6})
('beat (music)', 'engineering', {'weight': 0.6})
('beat (music)', 'matroid', {'weight': 0.6})
('beat (music)', 'viterbi algorithm', {'weight': 0.6})
('beat (music)', "lemke's algorithm", {'weight': 0.6})
('beat (music)', 'simplex algorithm', {'weight': 0.6})
('beat (music)', 'local search (optimization)', {'weight': 0.6})
('beat (music)', 'hessian matrix', {'weight': 0.6})
('beat (music)', 'ibm system r', {'weight': 0.6})
('beat (music)', 'penalty method', {'weight': 0.6})
('beat (music)', 'prolog', {'weight': 0.6})
('beat (music)', 'time-invariant system', {'weight': 0.6})
('beat (music)', 'criss-cross algorithm', {'weight': 0.6})
('beat (music)', 'revised simplex algorithm', {'weight': 0.6})
('beat (music)', 'the mathematical association of america', {'weight': 0.6})
('beat (music)', 'line search', {'weight': 0.6})
('beat (music)', 'j (programming language)', {'weight': 0.6})
('beat (music)', 'hill climbing', {'weight': 0.6})
('beat (music)', 'word wrap', {'weight': 0.6})
('beat (music)', 'subset sum problem', {'weight': 0.6})
('beat (music)', 'integer programming', {'weight': 0.6})
('beat (music)', 'nucleosome', {'weight': 0.6})
('beat (music)', 'earley algorithm', {'weight': 0.6})
('beat (music)', 'referential transparency (computer science)', {'weight': 0.6})
('beat (music)', 'recursion', {'weight': 0.6})
('beat (music)', 'mathematica', {'weight': 0.6})
('beat (music)', 'quicksort', {'weight': 0.6})
('beat (music)', 'recursion (computer science)', {'weight': 0.6})
('beat (music)', 'checkerboard', {'weight': 0.6})
('beat (music)', 'computer science', {'weight': 0.6})
('beat (music)', 'brute-force search', {'weight': 0.6})
('beat (music)', 'mathematics', {'weight': 0.6})
('beat (music)', 'depth-first search', {'weight': 0.6})
('beat (music)', 'top-down and bottom-up design', {'weight': 0.6})
('beat (music)', 'rhythm and meter', {'weight': 0.5})
('beat (music)', 'transcription factor', {'weight': 0.6})
('beat (music)', 'tree decomposition', {'weight': 0.6})
('beat (music)', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('beat (music)', 'structural alignment', {'weight': 0.6})
('beat (music)', 'local convergence', {'weight': 0.6})
('beat (music)', 'knapsack problem', {'weight': 0.6})
('beat (music)', 'graph algorithm', {'weight': 0.6})
('beat (music)', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('beat (music)', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('beat (music)', 'hidden markov model', {'weight': 0.6})
('beat (music)', 'string (computer science)', {'weight': 0.6})
('beat (music)', 'bioinformatics', {'weight': 0.6})
('beat (music)', 'genetics', {'weight': 0.6})
('beat (music)', 'mathematical optimization', {'weight': 0.6})
('beat (music)', 'artificial neural networks', {'weight': 0.6})
('beat (music)', 'introduction to algorithms', {'weight': 0.6})
('beat (music)', 'thomas h. cormen', {'weight': 0.6})
('beat (music)', 'music information retrieval', {'weight': 0.6})
('beat (music)', 'beat (music)', {'weight': 1})
('beat (music)', 'longest common subsequence problem', {'weight': 0.6})
('beat (music)', 'convex minimization', {'weight': 0.6})
('beat (music)', 'successive parabolic interpolation', {'weight': 0.6})
('beat (music)', 'fibonacci sequence', {'weight': 0.6})
('beat (music)', 'maximum subarray problem', {'weight': 0.6})
('beat (music)', 'convex optimization', {'weight': 0.6})
('beat (music)', 'memoization', {'weight': 0.6})
('beat (music)', 'richard bellman', {'weight': 0.6})
('beat (music)', 'exponential growth', {'weight': 0.6})
('beat (music)', 'charles e. leiserson', {'weight': 0.6})
('beat (music)', 'charles erwin wilson', {'weight': 0.6})
('beat (music)', 'interval scheduling', {'weight': 0.6})
('beat (music)', 'chart parser', {'weight': 0.6})
('beat (music)', 'travelling salesman problem', {'weight': 0.6})
('beat (music)', 'bellman equation', {'weight': 0.6})
('successive parabolic interpolation', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('successive parabolic interpolation', 'photoshop', {'weight': 0.6})
('successive parabolic interpolation', 'sequence alignment', {'weight': 0.6})
('successive parabolic interpolation', 'flow network', {'weight': 0.6})
('successive parabolic interpolation', 'ellipsoid method', {'weight': 0.6})
('successive parabolic interpolation', 'chain matrix multiplication', {'weight': 0.6})
('successive parabolic interpolation', 'ieee', {'weight': 0.6})
('successive parabolic interpolation', 'backtracking', {'weight': 0.6})
('successive parabolic interpolation', 'nonlinear conjugate gradient method', {'weight': 0.6})
('successive parabolic interpolation', 'dynamic problem', {'weight': 0.6})
('successive parabolic interpolation', 'trust region', {'weight': 0.6})
('successive parabolic interpolation', 'function (mathematics)', {'weight': 0.6})
('successive parabolic interpolation', 'minimum spanning tree', {'weight': 0.6})
('successive parabolic interpolation', 'context-free grammar', {'weight': 0.6})
('successive parabolic interpolation', 'branch and cut', {'weight': 0.6})
('successive parabolic interpolation', 'state variable', {'weight': 0.6})
('successive parabolic interpolation', 'treewidth', {'weight': 0.6})
('successive parabolic interpolation', 'optimization algorithms and methods', {'weight': 0.5})
('successive parabolic interpolation', 'overlapping subproblem', {'weight': 0.6})
('successive parabolic interpolation', 'taylor & francis', {'weight': 0.6})
('successive parabolic interpolation', 'cutting-plane method', {'weight': 0.6})
('successive parabolic interpolation', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('successive parabolic interpolation', 'method of undetermined coefficients', {'weight': 0.6})
('successive parabolic interpolation', 'combinatorial optimization', {'weight': 0.6})
('successive parabolic interpolation', "newton's method in optimization", {'weight': 0.6})
('successive parabolic interpolation', 'roots', {'weight': 0.7})
('successive parabolic interpolation', 'matrix chain multiplication', {'weight': 0.6})
('successive parabolic interpolation', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('successive parabolic interpolation', 'dynamic time warping', {'weight': 0.6})
('successive parabolic interpolation', 'dynamic programming language', {'weight': 0.6})
('successive parabolic interpolation', 'call-by-need', {'weight': 0.6})
('successive parabolic interpolation', 'big-o notation', {'weight': 0.6})
('successive parabolic interpolation', 'comparison of optimization software', {'weight': 0.6})
('successive parabolic interpolation', 'quadratic programming', {'weight': 0.6})
('successive parabolic interpolation', 'common lisp', {'weight': 0.6})
('successive parabolic interpolation', 'barrier function', {'weight': 0.6})
('successive parabolic interpolation', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('successive parabolic interpolation', 'gradient descent', {'weight': 0.6})
('successive parabolic interpolation', 'patricia selinger', {'weight': 0.6})
('successive parabolic interpolation', 'discounting', {'weight': 0.6})
('successive parabolic interpolation', 'ronald l. rivest', {'weight': 0.6})
('successive parabolic interpolation', 'iterative method', {'weight': 0.6})
('successive parabolic interpolation', 'limited-memory bfgs', {'weight': 0.6})
('successive parabolic interpolation', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('successive parabolic interpolation', 'longest common substring problem', {'weight': 0.6})
('successive parabolic interpolation', 'numerical analysis', {'weight': 0.5})
('successive parabolic interpolation', 'clifford stein', {'weight': 0.6})
('successive parabolic interpolation', 'computer chess', {'weight': 0.6})
('successive parabolic interpolation', 'linear programming', {'weight': 0.6})
('successive parabolic interpolation', 'inverse quadratic interpolation', {'weight': 0.7})
('successive parabolic interpolation', 'bitonic tour', {'weight': 0.6})
('successive parabolic interpolation', 'linear search problem', {'weight': 0.6})
('successive parabolic interpolation', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('successive parabolic interpolation', 'systems analysis', {'weight': 0.6})
('successive parabolic interpolation', 'capital (economics)', {'weight': 0.6})
('successive parabolic interpolation', 'levenshtein distance', {'weight': 0.6})
('successive parabolic interpolation', 'nonlinear programming', {'weight': 0.6})
('successive parabolic interpolation', 'computational complexity of mathematical operations', {'weight': 0.6})
('successive parabolic interpolation', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('successive parabolic interpolation', 'gradient', {'weight': 0.6})
('successive parabolic interpolation', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('successive parabolic interpolation', 'bulletin of the american mathematical society', {'weight': 0.6})
('successive parabolic interpolation', 'u.s. english', {'weight': 0.6})
('successive parabolic interpolation', 'refutation table', {'weight': 0.6})
('successive parabolic interpolation', 'heuristic algorithm', {'weight': 0.6})
('successive parabolic interpolation', 'successive linear programming', {'weight': 0.6})
('successive parabolic interpolation', 'optimal substructure', {'weight': 0.6})
('successive parabolic interpolation', 'programming language', {'weight': 0.6})
('successive parabolic interpolation', 'mergesort', {'weight': 0.6})
('successive parabolic interpolation', "dijkstra's algorithm", {'weight': 0.6})
('successive parabolic interpolation', 'subgradient method', {'weight': 0.6})
('successive parabolic interpolation', 'call-by-name', {'weight': 0.6})
('successive parabolic interpolation', 'longest increasing subsequence problem', {'weight': 0.6})
('successive parabolic interpolation', 'edward prescott', {'weight': 0.6})
('successive parabolic interpolation', 'exponential time', {'weight': 0.6})
('successive parabolic interpolation', 'principle of optimality', {'weight': 0.6})
('successive parabolic interpolation', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('successive parabolic interpolation', 'mathematical game', {'weight': 0.6})
('successive parabolic interpolation', 'nancy stokey', {'weight': 0.6})
('successive parabolic interpolation', 'approximation algorithm', {'weight': 0.6})
('successive parabolic interpolation', 'discrete-time', {'weight': 0.6})
('successive parabolic interpolation', 'cyk algorithm', {'weight': 0.6})
('successive parabolic interpolation', 'markov decision process', {'weight': 0.6})
('successive parabolic interpolation', "powell's method", {'weight': 0.6})
('successive parabolic interpolation', 'wolfe conditions', {'weight': 0.6})
('successive parabolic interpolation', 'convexity in economics', {'weight': 0.6})
('successive parabolic interpolation', 'transposition table', {'weight': 0.6})
('successive parabolic interpolation', 'economics', {'weight': 0.6})
('successive parabolic interpolation', 'backward induction', {'weight': 0.6})
('successive parabolic interpolation', 'golden section search', {'weight': 0.6})
('successive parabolic interpolation', 'edit distance', {'weight': 0.6})
('successive parabolic interpolation', 'tree structure', {'weight': 0.6})
('successive parabolic interpolation', 'exchange algorithm', {'weight': 0.6})
('successive parabolic interpolation', 'dover publications', {'weight': 0.6})
('successive parabolic interpolation', 'seam carving', {'weight': 0.6})
('successive parabolic interpolation', 'recursive least squares', {'weight': 0.6})
('successive parabolic interpolation', 'metaheuristic', {'weight': 0.6})
('successive parabolic interpolation', 'quasi-newton method', {'weight': 0.6})
('successive parabolic interpolation', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('successive parabolic interpolation', 'robert e. lucas', {'weight': 0.6})
('successive parabolic interpolation', 'non-convexity (economics)', {'weight': 0.6})
('successive parabolic interpolation', 'sr1 formula', {'weight': 0.6})
('successive parabolic interpolation', 'mathematical reviews', {'weight': 0.6})
('successive parabolic interpolation', 'puzzle', {'weight': 0.6})
('successive parabolic interpolation', 'associative array', {'weight': 0.6})
('successive parabolic interpolation', 'shortest path problem', {'weight': 0.6})
('successive parabolic interpolation', 'dynamic algorithm', {'weight': 0.6})
('successive parabolic interpolation', 'augmented lagrangian method', {'weight': 0.6})
('successive parabolic interpolation', 'charles delisi', {'weight': 0.6})
('successive parabolic interpolation', 'greedy algorithm', {'weight': 0.6})
('successive parabolic interpolation', "karmarkar's algorithm", {'weight': 0.6})
('successive parabolic interpolation', 'lattice models', {'weight': 0.6})
('successive parabolic interpolation', 'utility', {'weight': 0.6})
('successive parabolic interpolation', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('successive parabolic interpolation', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('successive parabolic interpolation', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('successive parabolic interpolation', 'international standard book number', {'weight': 0.6})
('successive parabolic interpolation', 'undirected graph', {'weight': 0.6})
('successive parabolic interpolation', 'scheme (programming language)', {'weight': 0.6})
('successive parabolic interpolation', 'rna structure', {'weight': 0.6})
('successive parabolic interpolation', 'hanoi', {'weight': 0.6})
('successive parabolic interpolation', 'perl', {'weight': 0.6})
('successive parabolic interpolation', 'digital object identifier', {'weight': 0.6})
('successive parabolic interpolation', 'sequential quadratic programming', {'weight': 0.6})
('successive parabolic interpolation', "dinic's algorithm", {'weight': 0.6})
('successive parabolic interpolation', 'pseudo-polynomial time', {'weight': 0.6})
('successive parabolic interpolation', "simpson's rule", {'weight': 0.7})
('successive parabolic interpolation', 'partition problem', {'weight': 0.6})
('successive parabolic interpolation', 'stochastic programming', {'weight': 0.6})
('successive parabolic interpolation', 'hill climbing', {'weight': 0.6})
('successive parabolic interpolation', 'top-down', {'weight': 0.6})
('successive parabolic interpolation', 'de boor algorithm', {'weight': 0.6})
('successive parabolic interpolation', 'optimization algorithm', {'weight': 0.6})
('successive parabolic interpolation', "kruskal's algorithm", {'weight': 0.6})
('successive parabolic interpolation', 'jacques philippe marie binet', {'weight': 0.6})
('successive parabolic interpolation', 'tabu search', {'weight': 0.6})
('successive parabolic interpolation', 'divide and conquer algorithm', {'weight': 0.6})
('successive parabolic interpolation', "johnson's algorithm", {'weight': 0.6})
('successive parabolic interpolation', 'evolutionary algorithm', {'weight': 0.6})
('successive parabolic interpolation', 'clique-width', {'weight': 0.6})
('successive parabolic interpolation', 'dynamic programming', {'weight': 0.6})
('successive parabolic interpolation', 'subroutine', {'weight': 0.6})
('successive parabolic interpolation', 'simulated annealing', {'weight': 0.6})
('successive parabolic interpolation', 'tower of hanoi', {'weight': 0.6})
('successive parabolic interpolation', 'branch and bound', {'weight': 0.6})
('successive parabolic interpolation', 'engineering', {'weight': 0.6})
('successive parabolic interpolation', 'matroid', {'weight': 0.6})
('successive parabolic interpolation', 'viterbi algorithm', {'weight': 0.6})
('successive parabolic interpolation', "lemke's algorithm", {'weight': 0.6})
('successive parabolic interpolation', 'simplex algorithm', {'weight': 0.6})
('successive parabolic interpolation', 'local search (optimization)', {'weight': 0.6})
('successive parabolic interpolation', 'hessian matrix', {'weight': 0.6})
('successive parabolic interpolation', 'ibm system r', {'weight': 0.6})
('successive parabolic interpolation', 'penalty method', {'weight': 0.6})
('successive parabolic interpolation', 'prolog', {'weight': 0.6})
('successive parabolic interpolation', 'time-invariant system', {'weight': 0.6})
('successive parabolic interpolation', 'criss-cross algorithm', {'weight': 0.6})
('successive parabolic interpolation', 'revised simplex algorithm', {'weight': 0.6})
('successive parabolic interpolation', 'the mathematical association of america', {'weight': 0.6})
('successive parabolic interpolation', 'line search', {'weight': 0.6})
('successive parabolic interpolation', 'j (programming language)', {'weight': 0.6})
('successive parabolic interpolation', 'word wrap', {'weight': 0.6})
('successive parabolic interpolation', 'subset sum problem', {'weight': 0.6})
('successive parabolic interpolation', 'integer programming', {'weight': 0.6})
('successive parabolic interpolation', 'nucleosome', {'weight': 0.6})
('successive parabolic interpolation', 'earley algorithm', {'weight': 0.6})
('successive parabolic interpolation', 'referential transparency (computer science)', {'weight': 0.6})
('successive parabolic interpolation', 'recursion', {'weight': 0.6})
('successive parabolic interpolation', 'mathematica', {'weight': 0.6})
('successive parabolic interpolation', 'quicksort', {'weight': 0.6})
('successive parabolic interpolation', 'recursion (computer science)', {'weight': 0.6})
('successive parabolic interpolation', 'checkerboard', {'weight': 0.6})
('successive parabolic interpolation', 'computer science', {'weight': 0.6})
('successive parabolic interpolation', 'brute-force search', {'weight': 0.6})
('successive parabolic interpolation', 'mathematics', {'weight': 0.6})
('successive parabolic interpolation', 'depth-first search', {'weight': 0.6})
('successive parabolic interpolation', 'top-down and bottom-up design', {'weight': 0.6})
('successive parabolic interpolation', 'correspondence problem', {'weight': 0.6})
('successive parabolic interpolation', 'transcription factor', {'weight': 0.6})
('successive parabolic interpolation', 'tree decomposition', {'weight': 0.6})
('successive parabolic interpolation', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('successive parabolic interpolation', 'structural alignment', {'weight': 0.6})
('successive parabolic interpolation', 'local convergence', {'weight': 0.6})
('successive parabolic interpolation', 'knapsack problem', {'weight': 0.6})
('successive parabolic interpolation', 'graph algorithm', {'weight': 0.6})
('successive parabolic interpolation', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('successive parabolic interpolation', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('successive parabolic interpolation', 'hidden markov model', {'weight': 0.6})
('successive parabolic interpolation', 'string (computer science)', {'weight': 0.6})
('successive parabolic interpolation', 'bioinformatics', {'weight': 0.6})
('successive parabolic interpolation', 'genetics', {'weight': 0.6})
('successive parabolic interpolation', 'mathematical optimization', {'weight': 0.6})
('successive parabolic interpolation', 'artificial neural networks', {'weight': 0.6})
('successive parabolic interpolation', 'introduction to algorithms', {'weight': 0.6})
('successive parabolic interpolation', 'thomas h. cormen', {'weight': 0.6})
('successive parabolic interpolation', 'music information retrieval', {'weight': 0.6})
('successive parabolic interpolation', 'beat (music)', {'weight': 0.6})
('successive parabolic interpolation', 'longest common subsequence problem', {'weight': 0.6})
('successive parabolic interpolation', 'convex minimization', {'weight': 0.6})
('successive parabolic interpolation', 'successive parabolic interpolation', {'weight': 1})
('successive parabolic interpolation', 'fibonacci sequence', {'weight': 0.6})
('successive parabolic interpolation', 'maximum subarray problem', {'weight': 0.6})
('successive parabolic interpolation', 'convex optimization', {'weight': 0.6})
('successive parabolic interpolation', 'memoization', {'weight': 0.6})
('successive parabolic interpolation', 'richard bellman', {'weight': 0.6})
('successive parabolic interpolation', 'exponential growth', {'weight': 0.6})
('successive parabolic interpolation', 'charles e. leiserson', {'weight': 0.6})
('successive parabolic interpolation', 'charles erwin wilson', {'weight': 0.6})
('successive parabolic interpolation', 'interval scheduling', {'weight': 0.6})
('successive parabolic interpolation', 'chart parser', {'weight': 0.6})
('successive parabolic interpolation', 'travelling salesman problem', {'weight': 0.6})
('successive parabolic interpolation', 'bellman equation', {'weight': 0.6})
('richard bellman', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('richard bellman', 'photoshop', {'weight': 0.6})
('richard bellman', 'sequence alignment', {'weight': 0.6})
('richard bellman', 'flow network', {'weight': 0.6})
('richard bellman', 'ellipsoid method', {'weight': 0.6})
('richard bellman', 'chain matrix multiplication', {'weight': 0.6})
('richard bellman', 'ieee', {'weight': 0.6})
('richard bellman', 'backtracking', {'weight': 0.6})
('richard bellman', 'nonlinear conjugate gradient method', {'weight': 0.6})
('richard bellman', 'dynamic problem', {'weight': 0.6})
('richard bellman', 'trust region', {'weight': 0.6})
('richard bellman', 'function (mathematics)', {'weight': 0.6})
('richard bellman', 'minimum spanning tree', {'weight': 0.6})
('richard bellman', 'context-free grammar', {'weight': 0.6})
('richard bellman', 'branch and cut', {'weight': 0.6})
('richard bellman', 'state variable', {'weight': 0.6})
('richard bellman', 'treewidth', {'weight': 0.6})
('richard bellman', 'overlapping subproblem', {'weight': 0.6})
('richard bellman', 'taylor & francis', {'weight': 0.6})
('richard bellman', 'cutting-plane method', {'weight': 0.6})
('richard bellman', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('richard bellman', 'method of undetermined coefficients', {'weight': 0.6})
('richard bellman', 'combinatorial optimization', {'weight': 0.6})
('richard bellman', "newton's method in optimization", {'weight': 0.6})
('richard bellman', 'matrix chain multiplication', {'weight': 0.6})
('richard bellman', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('richard bellman', 'dynamic time warping', {'weight': 0.6})
('richard bellman', 'dynamic programming language', {'weight': 0.6})
('richard bellman', 'call-by-need', {'weight': 0.6})
('richard bellman', 'big-o notation', {'weight': 0.6})
('richard bellman', 'comparison of optimization software', {'weight': 0.6})
('richard bellman', 'quadratic programming', {'weight': 0.6})
('richard bellman', 'common lisp', {'weight': 0.6})
('richard bellman', 'barrier function', {'weight': 0.6})
('richard bellman', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('richard bellman', 'gradient descent', {'weight': 0.6})
('richard bellman', 'patricia selinger', {'weight': 0.6})
('richard bellman', 'discounting', {'weight': 0.6})
('richard bellman', 'ronald l. rivest', {'weight': 0.6})
('richard bellman', 'iterative method', {'weight': 0.6})
('richard bellman', 'limited-memory bfgs', {'weight': 0.6})
('richard bellman', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('richard bellman', 'longest common substring problem', {'weight': 0.6})
('richard bellman', 'clifford stein', {'weight': 0.6})
('richard bellman', 'computer chess', {'weight': 0.6})
('richard bellman', 'linear programming', {'weight': 0.6})
('richard bellman', 'bitonic tour', {'weight': 0.6})
('richard bellman', 'linear search problem', {'weight': 0.6})
('richard bellman', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('richard bellman', 'systems analysis', {'weight': 0.6})
('richard bellman', 'capital (economics)', {'weight': 0.6})
('richard bellman', 'levenshtein distance', {'weight': 0.6})
('richard bellman', 'nonlinear programming', {'weight': 0.6})
('richard bellman', 'computational complexity of mathematical operations', {'weight': 0.6})
('richard bellman', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('richard bellman', 'gradient', {'weight': 0.6})
('richard bellman', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('richard bellman', 'bulletin of the american mathematical society', {'weight': 0.6})
('richard bellman', 'u.s. english', {'weight': 0.6})
('richard bellman', 'refutation table', {'weight': 0.6})
('richard bellman', 'heuristic algorithm', {'weight': 0.6})
('richard bellman', 'successive linear programming', {'weight': 0.6})
('richard bellman', 'optimal substructure', {'weight': 0.6})
('richard bellman', 'programming language', {'weight': 0.6})
('richard bellman', 'mergesort', {'weight': 0.6})
('richard bellman', "dijkstra's algorithm", {'weight': 0.6})
('richard bellman', 'subgradient method', {'weight': 0.6})
('richard bellman', 'call-by-name', {'weight': 0.6})
('richard bellman', 'longest increasing subsequence problem', {'weight': 0.6})
('richard bellman', 'edward prescott', {'weight': 0.6})
('richard bellman', 'exponential time', {'weight': 0.6})
('richard bellman', 'principle of optimality', {'weight': 0.6})
('richard bellman', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('richard bellman', 'mathematical game', {'weight': 0.6})
('richard bellman', 'nancy stokey', {'weight': 0.6})
('richard bellman', 'approximation algorithm', {'weight': 0.6})
('richard bellman', 'discrete-time', {'weight': 0.6})
('richard bellman', 'cyk algorithm', {'weight': 0.6})
('richard bellman', 'markov decision process', {'weight': 0.6})
('richard bellman', "powell's method", {'weight': 0.6})
('richard bellman', 'wolfe conditions', {'weight': 0.6})
('richard bellman', 'convexity in economics', {'weight': 0.6})
('richard bellman', 'transposition table', {'weight': 0.6})
('richard bellman', 'economics', {'weight': 0.6})
('richard bellman', 'backward induction', {'weight': 0.6})
('richard bellman', 'golden section search', {'weight': 0.6})
('richard bellman', 'edit distance', {'weight': 0.6})
('richard bellman', 'tree structure', {'weight': 0.6})
('richard bellman', 'exchange algorithm', {'weight': 0.6})
('richard bellman', 'dover publications', {'weight': 0.6})
('richard bellman', 'seam carving', {'weight': 0.6})
('richard bellman', 'recursive least squares', {'weight': 0.6})
('richard bellman', 'metaheuristic', {'weight': 0.6})
('richard bellman', 'quasi-newton method', {'weight': 0.6})
('richard bellman', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('richard bellman', 'robert e. lucas', {'weight': 0.6})
('richard bellman', 'non-convexity (economics)', {'weight': 0.6})
('richard bellman', 'sr1 formula', {'weight': 0.6})
('richard bellman', 'mathematical reviews', {'weight': 0.6})
('richard bellman', 'puzzle', {'weight': 0.6})
('richard bellman', 'associative array', {'weight': 0.6})
('richard bellman', 'shortest path problem', {'weight': 0.6})
('richard bellman', 'dynamic algorithm', {'weight': 0.6})
('richard bellman', 'augmented lagrangian method', {'weight': 0.6})
('richard bellman', 'charles delisi', {'weight': 0.6})
('richard bellman', 'greedy algorithm', {'weight': 0.6})
('richard bellman', "karmarkar's algorithm", {'weight': 0.6})
('richard bellman', 'lattice models', {'weight': 0.6})
('richard bellman', 'utility', {'weight': 0.6})
('richard bellman', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('richard bellman', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('richard bellman', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('richard bellman', 'international standard book number', {'weight': 0.6})
('richard bellman', 'undirected graph', {'weight': 0.6})
('richard bellman', 'scheme (programming language)', {'weight': 0.6})
('richard bellman', 'rna structure', {'weight': 0.6})
('richard bellman', 'hanoi', {'weight': 0.6})
('richard bellman', 'perl', {'weight': 0.6})
('richard bellman', 'digital object identifier', {'weight': 0.6})
('richard bellman', 'sequential quadratic programming', {'weight': 0.6})
('richard bellman', "dinic's algorithm", {'weight': 0.6})
('richard bellman', 'pseudo-polynomial time', {'weight': 0.6})
('richard bellman', 'partition problem', {'weight': 0.6})
('richard bellman', 'stochastic programming', {'weight': 0.6})
('richard bellman', 'hill climbing', {'weight': 0.6})
('richard bellman', 'top-down', {'weight': 0.6})
('richard bellman', 'de boor algorithm', {'weight': 0.6})
('richard bellman', 'optimization algorithm', {'weight': 0.6})
('richard bellman', "kruskal's algorithm", {'weight': 0.6})
('richard bellman', 'jacques philippe marie binet', {'weight': 0.6})
('richard bellman', 'tabu search', {'weight': 0.6})
('richard bellman', 'divide and conquer algorithm', {'weight': 0.6})
('richard bellman', "johnson's algorithm", {'weight': 0.6})
('richard bellman', 'evolutionary algorithm', {'weight': 0.6})
('richard bellman', 'clique-width', {'weight': 0.6})
('richard bellman', 'dynamic programming', {'weight': 0.6})
('richard bellman', 'subroutine', {'weight': 0.6})
('richard bellman', 'simulated annealing', {'weight': 0.6})
('richard bellman', 'tower of hanoi', {'weight': 0.6})
('richard bellman', 'branch and bound', {'weight': 0.6})
('richard bellman', 'engineering', {'weight': 0.6})
('richard bellman', 'matroid', {'weight': 0.6})
('richard bellman', 'viterbi algorithm', {'weight': 0.6})
('richard bellman', "lemke's algorithm", {'weight': 0.6})
('richard bellman', 'simplex algorithm', {'weight': 0.6})
('richard bellman', 'local search (optimization)', {'weight': 0.6})
('richard bellman', 'hessian matrix', {'weight': 0.6})
('richard bellman', 'ibm system r', {'weight': 0.6})
('richard bellman', 'penalty method', {'weight': 0.6})
('richard bellman', 'prolog', {'weight': 0.6})
('richard bellman', 'time-invariant system', {'weight': 0.6})
('richard bellman', 'criss-cross algorithm', {'weight': 0.6})
('richard bellman', 'revised simplex algorithm', {'weight': 0.6})
('richard bellman', 'the mathematical association of america', {'weight': 0.6})
('richard bellman', 'line search', {'weight': 0.6})
('richard bellman', 'j (programming language)', {'weight': 0.6})
('richard bellman', 'word wrap', {'weight': 0.6})
('richard bellman', 'subset sum problem', {'weight': 0.6})
('richard bellman', 'integer programming', {'weight': 0.6})
('richard bellman', 'nucleosome', {'weight': 0.6})
('richard bellman', 'earley algorithm', {'weight': 0.6})
('richard bellman', 'referential transparency (computer science)', {'weight': 0.6})
('richard bellman', 'recursion', {'weight': 0.6})
('richard bellman', 'mathematica', {'weight': 0.6})
('richard bellman', 'quicksort', {'weight': 0.6})
('richard bellman', 'recursion (computer science)', {'weight': 0.6})
('richard bellman', 'checkerboard', {'weight': 0.6})
('richard bellman', 'computer science', {'weight': 0.6})
('richard bellman', 'brute-force search', {'weight': 0.6})
('richard bellman', 'mathematics', {'weight': 0.6})
('richard bellman', 'depth-first search', {'weight': 0.6})
('richard bellman', 'top-down and bottom-up design', {'weight': 0.6})
('richard bellman', 'correspondence problem', {'weight': 0.6})
('richard bellman', 'transcription factor', {'weight': 0.6})
('richard bellman', 'tree decomposition', {'weight': 0.6})
('richard bellman', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('richard bellman', 'structural alignment', {'weight': 0.6})
('richard bellman', 'local convergence', {'weight': 0.6})
('richard bellman', 'knapsack problem', {'weight': 0.6})
('richard bellman', 'graph algorithm', {'weight': 0.6})
('richard bellman', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('richard bellman', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('richard bellman', 'hidden markov model', {'weight': 0.6})
('richard bellman', 'string (computer science)', {'weight': 0.6})
('richard bellman', 'bioinformatics', {'weight': 0.6})
('richard bellman', 'genetics', {'weight': 0.6})
('richard bellman', 'mathematical optimization', {'weight': 0.6})
('richard bellman', 'artificial neural networks', {'weight': 0.6})
('richard bellman', 'introduction to algorithms', {'weight': 0.6})
('richard bellman', 'thomas h. cormen', {'weight': 0.6})
('richard bellman', 'music information retrieval', {'weight': 0.6})
('richard bellman', 'beat (music)', {'weight': 0.6})
('richard bellman', 'longest common subsequence problem', {'weight': 0.6})
('richard bellman', 'convex minimization', {'weight': 0.6})
('richard bellman', 'successive parabolic interpolation', {'weight': 0.6})
('richard bellman', 'fibonacci sequence', {'weight': 0.6})
('richard bellman', 'maximum subarray problem', {'weight': 0.6})
('richard bellman', 'convex optimization', {'weight': 0.6})
('richard bellman', 'memoization', {'weight': 0.6})
('richard bellman', 'richard bellman', {'weight': 1})
('richard bellman', 'exponential growth', {'weight': 0.6})
('richard bellman', 'charles e. leiserson', {'weight': 0.6})
('richard bellman', 'charles erwin wilson', {'weight': 0.6})
('richard bellman', 'interval scheduling', {'weight': 0.6})
('richard bellman', 'chart parser', {'weight': 0.6})
('richard bellman', 'travelling salesman problem', {'weight': 0.6})
('richard bellman', 'bellman equation', {'weight': 0.6})
('interval scheduling', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('interval scheduling', 'photoshop', {'weight': 0.6})
('interval scheduling', 'sequence alignment', {'weight': 0.6})
('interval scheduling', 'flow network', {'weight': 0.6})
('interval scheduling', 'ellipsoid method', {'weight': 0.6})
('interval scheduling', 'chain matrix multiplication', {'weight': 0.6})
('interval scheduling', 'ieee', {'weight': 0.6})
('interval scheduling', 'backtracking', {'weight': 0.6})
('interval scheduling', 'nonlinear conjugate gradient method', {'weight': 0.6})
('interval scheduling', 'dynamic problem', {'weight': 0.6})
('interval scheduling', 'trust region', {'weight': 0.6})
('interval scheduling', 'function (mathematics)', {'weight': 0.6})
('interval scheduling', 'minimum spanning tree', {'weight': 0.6})
('interval scheduling', 'context-free grammar', {'weight': 0.6})
('interval scheduling', 'branch and cut', {'weight': 0.6})
('interval scheduling', 'state variable', {'weight': 0.6})
('interval scheduling', 'treewidth', {'weight': 0.6})
('interval scheduling', 'scheduling algorithms', {'weight': 0.5})
('interval scheduling', 'overlapping subproblem', {'weight': 0.6})
('interval scheduling', 'taylor & francis', {'weight': 0.6})
('interval scheduling', 'cutting-plane method', {'weight': 0.6})
('interval scheduling', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('interval scheduling', 'method of undetermined coefficients', {'weight': 0.6})
('interval scheduling', 'combinatorial optimization', {'weight': 0.6})
('interval scheduling', "newton's method in optimization", {'weight': 0.6})
('interval scheduling', 'matrix chain multiplication', {'weight': 0.6})
('interval scheduling', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('interval scheduling', 'dynamic time warping', {'weight': 0.6})
('interval scheduling', 'dynamic programming language', {'weight': 0.6})
('interval scheduling', 'call-by-need', {'weight': 0.6})
('interval scheduling', 'big-o notation', {'weight': 0.6})
('interval scheduling', 'comparison of optimization software', {'weight': 0.6})
('interval scheduling', 'quadratic programming', {'weight': 0.6})
('interval scheduling', 'common lisp', {'weight': 0.6})
('interval scheduling', 'barrier function', {'weight': 0.6})
('interval scheduling', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('interval scheduling', 'gradient descent', {'weight': 0.6})
('interval scheduling', 'patricia selinger', {'weight': 0.6})
('interval scheduling', 'discounting', {'weight': 0.6})
('interval scheduling', 'ronald l. rivest', {'weight': 0.6})
('interval scheduling', 'iterative method', {'weight': 0.6})
('interval scheduling', 'limited-memory bfgs', {'weight': 0.6})
('interval scheduling', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('interval scheduling', 'longest common substring problem', {'weight': 0.6})
('interval scheduling', 'scheduling (computing)', {'weight': 0.7})
('interval scheduling', 'clifford stein', {'weight': 0.6})
('interval scheduling', 'computer chess', {'weight': 0.6})
('interval scheduling', 'linear programming', {'weight': 0.6})
('interval scheduling', 'bitonic tour', {'weight': 0.6})
('interval scheduling', 'linear search problem', {'weight': 0.6})
('interval scheduling', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('interval scheduling', 'systems analysis', {'weight': 0.6})
('interval scheduling', 'capital (economics)', {'weight': 0.6})
('interval scheduling', 'levenshtein distance', {'weight': 0.6})
('interval scheduling', 'nonlinear programming', {'weight': 0.6})
('interval scheduling', 'computational complexity of mathematical operations', {'weight': 0.6})
('interval scheduling', 'earliest deadline first scheduling', {'weight': 0.7})
('interval scheduling', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('interval scheduling', 'gradient', {'weight': 0.6})
('interval scheduling', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('interval scheduling', 'bulletin of the american mathematical society', {'weight': 0.6})
('interval scheduling', 'u.s. english', {'weight': 0.6})
('interval scheduling', 'refutation table', {'weight': 0.6})
('interval scheduling', 'heuristic algorithm', {'weight': 0.6})
('interval scheduling', 'successive linear programming', {'weight': 0.6})
('interval scheduling', 'optimal substructure', {'weight': 0.6})
('interval scheduling', 'programming language', {'weight': 0.6})
('interval scheduling', 'mergesort', {'weight': 0.6})
('interval scheduling', "dijkstra's algorithm", {'weight': 0.6})
('interval scheduling', 'subgradient method', {'weight': 0.6})
('interval scheduling', 'call-by-name', {'weight': 0.6})
('interval scheduling', 'longest increasing subsequence problem', {'weight': 0.6})
('interval scheduling', 'edward prescott', {'weight': 0.6})
('interval scheduling', 'exponential time', {'weight': 0.6})
('interval scheduling', 'principle of optimality', {'weight': 0.6})
('interval scheduling', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('interval scheduling', 'mathematical game', {'weight': 0.6})
('interval scheduling', 'nancy stokey', {'weight': 0.6})
('interval scheduling', 'approximation algorithm', {'weight': 0.6})
('interval scheduling', 'discrete-time', {'weight': 0.6})
('interval scheduling', 'cyk algorithm', {'weight': 0.6})
('interval scheduling', 'markov decision process', {'weight': 0.6})
('interval scheduling', "powell's method", {'weight': 0.6})
('interval scheduling', 'wolfe conditions', {'weight': 0.6})
('interval scheduling', 'convexity in economics', {'weight': 0.6})
('interval scheduling', 'transposition table', {'weight': 0.6})
('interval scheduling', 'economics', {'weight': 0.6})
('interval scheduling', 'backward induction', {'weight': 0.6})
('interval scheduling', 'golden section search', {'weight': 0.6})
('interval scheduling', 'edit distance', {'weight': 0.6})
('interval scheduling', 'tree structure', {'weight': 0.6})
('interval scheduling', 'exchange algorithm', {'weight': 0.6})
('interval scheduling', 'dover publications', {'weight': 0.6})
('interval scheduling', 'seam carving', {'weight': 0.6})
('interval scheduling', 'recursive least squares', {'weight': 0.6})
('interval scheduling', 'metaheuristic', {'weight': 0.6})
('interval scheduling', 'quasi-newton method', {'weight': 0.6})
('interval scheduling', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('interval scheduling', 'robert e. lucas', {'weight': 0.6})
('interval scheduling', 'non-convexity (economics)', {'weight': 0.6})
('interval scheduling', 'sr1 formula', {'weight': 0.6})
('interval scheduling', 'mathematical reviews', {'weight': 0.6})
('interval scheduling', 'puzzle', {'weight': 0.6})
('interval scheduling', 'associative array', {'weight': 0.6})
('interval scheduling', 'shortest path problem', {'weight': 0.6})
('interval scheduling', 'dynamic algorithm', {'weight': 0.6})
('interval scheduling', 'augmented lagrangian method', {'weight': 0.6})
('interval scheduling', 'charles delisi', {'weight': 0.6})
('interval scheduling', 'greedy algorithm', {'weight': 0.6})
('interval scheduling', "karmarkar's algorithm", {'weight': 0.6})
('interval scheduling', 'lattice models', {'weight': 0.6})
('interval scheduling', 'utility', {'weight': 0.6})
('interval scheduling', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('interval scheduling', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('interval scheduling', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('interval scheduling', 'international standard book number', {'weight': 0.6})
('interval scheduling', 'undirected graph', {'weight': 0.6})
('interval scheduling', 'scheme (programming language)', {'weight': 0.6})
('interval scheduling', 'rna structure', {'weight': 0.6})
('interval scheduling', 'hanoi', {'weight': 0.6})
('interval scheduling', 'perl', {'weight': 0.6})
('interval scheduling', 'digital object identifier', {'weight': 0.6})
('interval scheduling', 'sequential quadratic programming', {'weight': 0.6})
('interval scheduling', "dinic's algorithm", {'weight': 0.6})
('interval scheduling', 'pseudo-polynomial time', {'weight': 0.6})
('interval scheduling', 'partition problem', {'weight': 0.6})
('interval scheduling', 'stochastic programming', {'weight': 0.6})
('interval scheduling', 'hill climbing', {'weight': 0.6})
('interval scheduling', 'top-down', {'weight': 0.6})
('interval scheduling', 'de boor algorithm', {'weight': 0.6})
('interval scheduling', 'optimization algorithm', {'weight': 0.6})
('interval scheduling', "kruskal's algorithm", {'weight': 0.6})
('interval scheduling', 'jacques philippe marie binet', {'weight': 0.6})
('interval scheduling', 'tabu search', {'weight': 0.6})
('interval scheduling', 'divide and conquer algorithm', {'weight': 0.6})
('interval scheduling', "johnson's algorithm", {'weight': 0.6})
('interval scheduling', 'evolutionary algorithm', {'weight': 0.6})
('interval scheduling', 'clique-width', {'weight': 0.6})
('interval scheduling', 'dynamic programming', {'weight': 0.6})
('interval scheduling', 'subroutine', {'weight': 0.6})
('interval scheduling', 'simulated annealing', {'weight': 0.6})
('interval scheduling', 'tower of hanoi', {'weight': 0.6})
('interval scheduling', 'branch and bound', {'weight': 0.6})
('interval scheduling', 'engineering', {'weight': 0.6})
('interval scheduling', 'matroid', {'weight': 0.6})
('interval scheduling', 'viterbi algorithm', {'weight': 0.6})
('interval scheduling', "lemke's algorithm", {'weight': 0.6})
('interval scheduling', 'simplex algorithm', {'weight': 0.6})
('interval scheduling', 'local search (optimization)', {'weight': 0.6})
('interval scheduling', 'hessian matrix', {'weight': 0.6})
('interval scheduling', 'ibm system r', {'weight': 0.6})
('interval scheduling', 'penalty method', {'weight': 0.6})
('interval scheduling', 'prolog', {'weight': 0.6})
('interval scheduling', 'time-invariant system', {'weight': 0.6})
('interval scheduling', 'criss-cross algorithm', {'weight': 0.6})
('interval scheduling', 'revised simplex algorithm', {'weight': 0.6})
('interval scheduling', 'the mathematical association of america', {'weight': 0.6})
('interval scheduling', 'line search', {'weight': 0.6})
('interval scheduling', 'j (programming language)', {'weight': 0.6})
('interval scheduling', 'word wrap', {'weight': 0.6})
('interval scheduling', 'subset sum problem', {'weight': 0.6})
('interval scheduling', 'integer programming', {'weight': 0.6})
('interval scheduling', 'nucleosome', {'weight': 0.6})
('interval scheduling', 'earley algorithm', {'weight': 0.6})
('interval scheduling', 'referential transparency (computer science)', {'weight': 0.6})
('interval scheduling', 'recursion', {'weight': 0.6})
('interval scheduling', 'mathematica', {'weight': 0.6})
('interval scheduling', 'quicksort', {'weight': 0.6})
('interval scheduling', 'recursion (computer science)', {'weight': 0.6})
('interval scheduling', 'checkerboard', {'weight': 0.6})
('interval scheduling', 'computer science', {'weight': 0.6})
('interval scheduling', 'brute-force search', {'weight': 0.6})
('interval scheduling', 'mathematics', {'weight': 0.6})
('interval scheduling', 'depth-first search', {'weight': 0.6})
('interval scheduling', 'top-down and bottom-up design', {'weight': 0.6})
('interval scheduling', 'correspondence problem', {'weight': 0.6})
('interval scheduling', 'transcription factor', {'weight': 0.6})
('interval scheduling', 'tree decomposition', {'weight': 0.6})
('interval scheduling', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('interval scheduling', 'structural alignment', {'weight': 0.6})
('interval scheduling', 'local convergence', {'weight': 0.6})
('interval scheduling', 'knapsack problem', {'weight': 0.6})
('interval scheduling', 'graph algorithm', {'weight': 0.6})
('interval scheduling', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('interval scheduling', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('interval scheduling', 'hidden markov model', {'weight': 0.6})
('interval scheduling', 'string (computer science)', {'weight': 0.6})
('interval scheduling', 'bioinformatics', {'weight': 0.6})
('interval scheduling', 'genetics', {'weight': 0.6})
('interval scheduling', 'mathematical optimization', {'weight': 0.6})
('interval scheduling', 'artificial neural networks', {'weight': 0.6})
('interval scheduling', 'introduction to algorithms', {'weight': 0.6})
('interval scheduling', 'thomas h. cormen', {'weight': 0.6})
('interval scheduling', 'music information retrieval', {'weight': 0.6})
('interval scheduling', 'beat (music)', {'weight': 0.6})
('interval scheduling', 'longest common subsequence problem', {'weight': 0.6})
('interval scheduling', 'convex minimization', {'weight': 0.6})
('interval scheduling', 'successive parabolic interpolation', {'weight': 0.6})
('interval scheduling', 'fibonacci sequence', {'weight': 0.6})
('interval scheduling', 'maximum subarray problem', {'weight': 0.6})
('interval scheduling', 'convex optimization', {'weight': 0.6})
('interval scheduling', 'memoization', {'weight': 0.6})
('interval scheduling', 'richard bellman', {'weight': 0.6})
('interval scheduling', 'exponential growth', {'weight': 0.6})
('interval scheduling', 'charles e. leiserson', {'weight': 0.6})
('interval scheduling', 'charles erwin wilson', {'weight': 0.6})
('interval scheduling', 'interval scheduling', {'weight': 1})
('interval scheduling', 'chart parser', {'weight': 0.6})
('interval scheduling', 'travelling salesman problem', {'weight': 0.6})
('interval scheduling', 'bellman equation', {'weight': 0.6})
('seam carving', 'smith\xe2\x80\x93waterman algorithm', {'weight': 0.6})
('seam carving', 'photoshop', {'weight': 0.6})
('seam carving', 'sequence alignment', {'weight': 0.6})
('seam carving', 'flow network', {'weight': 0.6})
('seam carving', 'ellipsoid method', {'weight': 0.6})
('seam carving', 'chain matrix multiplication', {'weight': 0.6})
('seam carving', 'ieee', {'weight': 0.6})
('seam carving', 'backtracking', {'weight': 0.6})
('seam carving', 'nonlinear conjugate gradient method', {'weight': 0.6})
('seam carving', 'dynamic problem', {'weight': 0.6})
('seam carving', 'inpainting', {'weight': 0.7})
('seam carving', 'trust region', {'weight': 0.6})
('seam carving', 'function (mathematics)', {'weight': 0.6})
('seam carving', 'minimum spanning tree', {'weight': 0.6})
('seam carving', 'context-free grammar', {'weight': 0.6})
('seam carving', 'texture synthesis', {'weight': 0.7})
('seam carving', 'branch and cut', {'weight': 0.6})
('seam carving', 'state variable', {'weight': 0.6})
('seam carving', 'treewidth', {'weight': 0.6})
('seam carving', 'overlapping subproblem', {'weight': 0.6})
('seam carving', 'taylor & francis', {'weight': 0.6})
('seam carving', 'cutting-plane method', {'weight': 0.6})
('seam carving', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('seam carving', 'method of undetermined coefficients', {'weight': 0.6})
('seam carving', 'combinatorial optimization', {'weight': 0.6})
('seam carving', "newton's method in optimization", {'weight': 0.6})
('seam carving', 'matrix chain multiplication', {'weight': 0.6})
('seam carving', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('seam carving', 'dynamic time warping', {'weight': 0.6})
('seam carving', 'dynamic programming language', {'weight': 0.6})
('seam carving', 'call-by-need', {'weight': 0.6})
('seam carving', 'big-o notation', {'weight': 0.6})
('seam carving', 'comparison of optimization software', {'weight': 0.6})
('seam carving', 'quadratic programming', {'weight': 0.6})
('seam carving', 'common lisp', {'weight': 0.6})
('seam carving', 'barrier function', {'weight': 0.6})
('seam carving', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('seam carving', 'gradient descent', {'weight': 0.6})
('seam carving', 'patricia selinger', {'weight': 0.6})
('seam carving', 'discounting', {'weight': 0.6})
('seam carving', 'ronald l. rivest', {'weight': 0.6})
('seam carving', 'iterative method', {'weight': 0.6})
('seam carving', 'limited-memory bfgs', {'weight': 0.6})
('seam carving', 'davidon\xe2\x80\x93fletcher\xe2\x80\x93powell formula', {'weight': 0.6})
('seam carving', 'longest common substring problem', {'weight': 0.6})
('seam carving', 'clifford stein', {'weight': 0.6})
('seam carving', 'computer chess', {'weight': 0.6})
('seam carving', 'linear programming', {'weight': 0.6})
('seam carving', 'bitonic tour', {'weight': 0.6})
('seam carving', 'linear search problem', {'weight': 0.6})
('seam carving', 'nelder\xe2\x80\x93mead method', {'weight': 0.6})
('seam carving', 'systems analysis', {'weight': 0.6})
('seam carving', 'capital (economics)', {'weight': 0.6})
('seam carving', 'levenshtein distance', {'weight': 0.6})
('seam carving', 'nonlinear programming', {'weight': 0.6})
('seam carving', 'computational complexity of mathematical operations', {'weight': 0.6})
('seam carving', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('seam carving', 'gradient', {'weight': 0.6})
('seam carving', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('seam carving', 'bulletin of the american mathematical society', {'weight': 0.6})
('seam carving', 'u.s. english', {'weight': 0.6})
('seam carving', 'refutation table', {'weight': 0.6})
('seam carving', 'heuristic algorithm', {'weight': 0.6})
('seam carving', 'successive linear programming', {'weight': 0.6})
('seam carving', 'optimal substructure', {'weight': 0.6})
('seam carving', 'programming language', {'weight': 0.6})
('seam carving', 'mergesort', {'weight': 0.6})
('seam carving', "dijkstra's algorithm", {'weight': 0.6})
('seam carving', 'subgradient method', {'weight': 0.6})
('seam carving', 'call-by-name', {'weight': 0.6})
('seam carving', 'longest increasing subsequence problem', {'weight': 0.6})
('seam carving', 'edward prescott', {'weight': 0.6})
('seam carving', 'exponential time', {'weight': 0.6})
('seam carving', 'principle of optimality', {'weight': 0.6})
('seam carving', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('seam carving', 'mathematical game', {'weight': 0.6})
('seam carving', 'nancy stokey', {'weight': 0.6})
('seam carving', 'approximation algorithm', {'weight': 0.6})
('seam carving', 'discrete-time', {'weight': 0.6})
('seam carving', 'cyk algorithm', {'weight': 0.6})
('seam carving', 'markov decision process', {'weight': 0.6})
('seam carving', "powell's method", {'weight': 0.6})
('seam carving', 'wolfe conditions', {'weight': 0.6})
('seam carving', 'convexity in economics', {'weight': 0.6})
('seam carving', 'transposition table', {'weight': 0.6})
('seam carving', 'economics', {'weight': 0.6})
('seam carving', 'backward induction', {'weight': 0.6})
('seam carving', 'golden section search', {'weight': 0.6})
('seam carving', 'edit distance', {'weight': 0.6})
('seam carving', 'tree structure', {'weight': 0.6})
('seam carving', 'exchange algorithm', {'weight': 0.6})
('seam carving', 'dover publications', {'weight': 0.6})
('seam carving', 'seam carving', {'weight': 1})
('seam carving', 'recursive least squares', {'weight': 0.6})
('seam carving', 'metaheuristic', {'weight': 0.6})
('seam carving', 'quasi-newton method', {'weight': 0.6})
('seam carving', 'on-line encyclopedia of integer sequences', {'weight': 0.6})
('seam carving', 'robert e. lucas', {'weight': 0.6})
('seam carving', 'non-convexity (economics)', {'weight': 0.6})
('seam carving', 'sr1 formula', {'weight': 0.6})
('seam carving', 'mathematical reviews', {'weight': 0.6})
('seam carving', 'puzzle', {'weight': 0.6})
('seam carving', 'associative array', {'weight': 0.6})
('seam carving', 'shortest path problem', {'weight': 0.6})
('seam carving', 'dynamic algorithm', {'weight': 0.6})
('seam carving', 'augmented lagrangian method', {'weight': 0.6})
('seam carving', 'charles delisi', {'weight': 0.6})
('seam carving', 'greedy algorithm', {'weight': 0.6})
('seam carving', "karmarkar's algorithm", {'weight': 0.6})
('seam carving', 'image processing', {'weight': 0.5})
('seam carving', 'lattice models', {'weight': 0.6})
('seam carving', 'utility', {'weight': 0.6})
('seam carving', 'broyden\xe2\x80\x93fletcher\xe2\x80\x93goldfarb\xe2\x80\x93shanno algorithm', {'weight': 0.6})
('seam carving', 'frank\xe2\x80\x93wolfe algorithm', {'weight': 0.6})
('seam carving', 'push-relabel maximum flow algorithm', {'weight': 0.6})
('seam carving', 'international standard book number', {'weight': 0.6})
('seam carving', 'undirected graph', {'weight': 0.6})
('seam carving', 'scheme (programming language)', {'weight': 0.6})
('seam carving', 'rna structure', {'weight': 0.6})
('seam carving', 'hanoi', {'weight': 0.6})
('seam carving', 'perl', {'weight': 0.6})
('seam carving', 'digital object identifier', {'weight': 0.6})
('seam carving', 'sequential quadratic programming', {'weight': 0.6})
('seam carving', "dinic's algorithm", {'weight': 0.6})
('seam carving', 'pseudo-polynomial time', {'weight': 0.6})
('seam carving', 'partition problem', {'weight': 0.6})
('seam carving', 'stochastic programming', {'weight': 0.6})
('seam carving', 'hill climbing', {'weight': 0.6})
('seam carving', 'top-down', {'weight': 0.6})
('seam carving', 'de boor algorithm', {'weight': 0.6})
('seam carving', 'optimization algorithm', {'weight': 0.6})
('seam carving', "kruskal's algorithm", {'weight': 0.6})
('seam carving', 'jacques philippe marie binet', {'weight': 0.6})
('seam carving', 'tabu search', {'weight': 0.6})
('seam carving', 'divide and conquer algorithm', {'weight': 0.6})
('seam carving', "johnson's algorithm", {'weight': 0.6})
('seam carving', 'evolutionary algorithm', {'weight': 0.6})
('seam carving', 'clique-width', {'weight': 0.6})
('seam carving', 'dynamic programming', {'weight': 0.6})
('seam carving', 'subroutine', {'weight': 0.6})
('seam carving', 'simulated annealing', {'weight': 0.6})
('seam carving', 'tower of hanoi', {'weight': 0.6})
('seam carving', 'branch and bound', {'weight': 0.6})
('seam carving', 'engineering', {'weight': 0.6})
('seam carving', 'matroid', {'weight': 0.6})
('seam carving', 'viterbi algorithm', {'weight': 0.6})
('seam carving', "lemke's algorithm", {'weight': 0.6})
('seam carving', 'simplex algorithm', {'weight': 0.6})
('seam carving', 'local search (optimization)', {'weight': 0.6})
('seam carving', 'hessian matrix', {'weight': 0.6})
('seam carving', 'ibm system r', {'weight': 0.6})
('seam carving', 'penalty method', {'weight': 0.6})
('seam carving', 'prolog', {'weight': 0.6})
('seam carving', 'time-invariant system', {'weight': 0.6})
('seam carving', 'criss-cross algorithm', {'weight': 0.6})
('seam carving', 'revised simplex algorithm', {'weight': 0.6})
('seam carving', 'the mathematical association of america', {'weight': 0.6})
('seam carving', 'line search', {'weight': 0.6})
('seam carving', 'j (programming language)', {'weight': 0.6})
('seam carving', 'word wrap', {'weight': 0.6})
('seam carving', 'subset sum problem', {'weight': 0.6})
('seam carving', 'integer programming', {'weight': 0.6})
('seam carving', 'nucleosome', {'weight': 0.6})
('seam carving', 'earley algorithm', {'weight': 0.6})
('seam carving', 'referential transparency (computer science)', {'weight': 0.6})
('seam carving', 'recursion', {'weight': 0.6})
('seam carving', 'mathematica', {'weight': 0.6})
('seam carving', 'quicksort', {'weight': 0.6})
('seam carving', 'recursion (computer science)', {'weight': 0.6})
('seam carving', 'checkerboard', {'weight': 0.6})
('seam carving', 'computer science', {'weight': 0.6})
('seam carving', 'brute-force search', {'weight': 0.6})
('seam carving', 'mathematics', {'weight': 0.6})
('seam carving', 'depth-first search', {'weight': 0.6})
('seam carving', 'top-down and bottom-up design', {'weight': 0.6})
('seam carving', 'correspondence problem', {'weight': 0.6})
('seam carving', 'transcription factor', {'weight': 0.6})
('seam carving', 'tree decomposition', {'weight': 0.6})
('seam carving', 'duckworth\xe2\x80\x93lewis method', {'weight': 0.6})
('seam carving', 'structural alignment', {'weight': 0.6})
('seam carving', 'local convergence', {'weight': 0.6})
('seam carving', 'knapsack problem', {'weight': 0.6})
('seam carving', 'graph algorithm', {'weight': 0.6})
('seam carving', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('seam carving', 'needleman\xe2\x80\x93wunsch algorithm', {'weight': 0.6})
('seam carving', 'hidden markov model', {'weight': 0.6})
('seam carving', 'string (computer science)', {'weight': 0.6})
('seam carving', 'bioinformatics', {'weight': 0.6})
('seam carving', 'genetics', {'weight': 0.6})
('seam carving', 'mathematical optimization', {'weight': 0.6})
('seam carving', 'artificial neural networks', {'weight': 0.6})
('seam carving', 'introduction to algorithms', {'weight': 0.6})
('seam carving', 'thomas h. cormen', {'weight': 0.6})
('seam carving', 'music information retrieval', {'weight': 0.6})
('seam carving', 'beat (music)', {'weight': 0.6})
('seam carving', 'longest common subsequence problem', {'weight': 0.6})
('seam carving', 'convex minimization', {'weight': 0.6})
('seam carving', 'successive parabolic interpolation', {'weight': 0.6})
('seam carving', 'fibonacci sequence', {'weight': 0.6})
('seam carving', 'maximum subarray problem', {'weight': 0.6})
('seam carving', 'convex optimization', {'weight': 0.6})
('seam carving', 'memoization', {'weight': 0.6})
('seam carving', 'richard bellman', {'weight': 0.6})
('seam carving', 'exponential growth', {'weight': 0.6})
('seam carving', 'charles e. leiserson', {'weight': 0.6})
('seam carving', 'charles erwin wilson', {'weight': 0.6})
('seam carving', 'interval scheduling', {'weight': 0.6})
('seam carving', 'chart parser', {'weight': 0.6})
('seam carving', 'travelling salesman problem', {'weight': 0.6})
('seam carving', 'bellman equation', {'weight': 0.6})
('seam carving', 'mitsubishi electric products, services and standards', {'weight': 0.5})
