('implementation', 'political science terms', {'weight': 0.5})
('implementation', 'object lifetime', {'weight': 0.6})
('implementation', 'encapsulation (object-oriented programming)', {'weight': 0.6})
('implementation', 'class (computer science)', {'weight': 0.6})
('implementation', 'design', {'weight': 0.5})
('implementation', 'procedure (computer science)', {'weight': 0.6})
('implementation', 'structured programming', {'weight': 0.6})
('implementation', 'java (programming language)', {'weight': 0.6})
('implementation', 'class (computer programming)', {'weight': 0.6})
('implementation', 'java language', {'weight': 0.6})
('implementation', 'common lisp object system', {'weight': 0.6})
('implementation', 'application software', {'weight': 0.7})
('implementation', 'international standard book number', {'weight': 0.6})
('implementation', 'implementation', {'weight': 1})
('implementation', 'modularity (programming)', {'weight': 0.6})
('implementation', 'interface (computer science)', {'weight': 0.6})
('implementation', 'polymorphism (computer science)', {'weight': 0.6})
('implementation', 'object-oriented programming', {'weight': 0.6})
('implementation', 'constructor (computer science)', {'weight': 0.6})
('implementation', 'computing terminology', {'weight': 0.5})
('implementation', 'meta-object protocol', {'weight': 0.6})
('implementation', 'revision control', {'weight': 0.6})
('implementation', 'virtual methods', {'weight': 0.6})
('implementation', 'destructor (computer science)', {'weight': 0.6})
('implementation', 'abstract data types', {'weight': 0.6})
('implementation', 'operator overloading', {'weight': 0.6})
('implementation', 'subroutine', {'weight': 0.6})
('implementation', 'database', {'weight': 0.6})
('implementation', 'meta-model', {'weight': 0.6})
('implementation', 'object creation', {'weight': 0.6})
('implementation', 'method overriding', {'weight': 0.6})
('implementation', 'balance (accounting)', {'weight': 0.6})
('implementation', 'abstraction layer', {'weight': 0.6})
('abstract data types', 'encapsulation (object-oriented programming)', {'weight': 0.6})
('abstract data types', 'liskov substitution principle', {'weight': 0.7})
('abstract data types', 'object lifetime', {'weight': 0.6})
('abstract data types', 'data types', {'weight': 0.5})
('abstract data types', 'class (computer science)', {'weight': 0.6})
('abstract data types', 'procedure (computer science)', {'weight': 0.6})
('abstract data types', 'structured programming', {'weight': 0.6})
('abstract data types', 'generalized algebraic data type', {'weight': 0.7})
('abstract data types', 'java (programming language)', {'weight': 0.6})
('abstract data types', 'class (computer programming)', {'weight': 0.6})
('abstract data types', 'functional specification', {'weight': 0.7})
('abstract data types', 'java language', {'weight': 0.6})
('abstract data types', 'common lisp object system', {'weight': 0.6})
('abstract data types', 'international standard book number', {'weight': 0.6})
('abstract data types', 'implementation', {'weight': 0.6})
('abstract data types', 'formal methods', {'weight': 0.7})
('abstract data types', 'modularity (programming)', {'weight': 0.6})
('abstract data types', 'type system', {'weight': 0.7})
('abstract data types', 'interface (computer science)', {'weight': 0.6})
('abstract data types', 'polymorphism (computer science)', {'weight': 0.6})
('abstract data types', 'object-oriented programming', {'weight': 0.7})
('abstract data types', 'constructor (computer science)', {'weight': 0.6})
('abstract data types', 'design by contract', {'weight': 0.7})
('abstract data types', 'meta-object protocol', {'weight': 0.6})
('abstract data types', 'revision control', {'weight': 0.6})
('abstract data types', 'virtual methods', {'weight': 0.6})
('abstract data types', 'destructor (computer science)', {'weight': 0.6})
('abstract data types', 'abstract data types', {'weight': 1})
('abstract data types', 'operator overloading', {'weight': 0.6})
('abstract data types', 'opaque data type', {'weight': 0.7})
('abstract data types', 'subroutine', {'weight': 0.6})
('abstract data types', 'database', {'weight': 0.6})
('abstract data types', 'concept (generic programming)', {'weight': 0.7})
('abstract data types', 'algebraic data type', {'weight': 0.7})
('abstract data types', 'meta-model', {'weight': 0.6})
('abstract data types', 'type theory', {'weight': 0.7})
('abstract data types', 'object creation', {'weight': 0.6})
('abstract data types', 'method overriding', {'weight': 0.6})
('abstract data types', 'balance (accounting)', {'weight': 0.6})
('abstract data types', 'initial algebra', {'weight': 0.7})
('abstract data types', 'abstraction layer', {'weight': 0.6})
('object creation', 'encapsulation (object-oriented programming)', {'weight': 0.6})
('object creation', 'resource acquisition is initialization', {'weight': 0.7})
('object creation', 'class (computer programming)', {'weight': 0.6})
('object creation', 'class (computer science)', {'weight': 0.6})
('object creation', 'procedure (computer science)', {'weight': 0.6})
('object creation', 'structured programming', {'weight': 0.6})
('object creation', 'java (programming language)', {'weight': 0.6})
('object creation', 'object lifetime', {'weight': 0.6})
('object creation', 'java language', {'weight': 0.6})
('object creation', 'common lisp object system', {'weight': 0.6})
('object creation', 'international standard book number', {'weight': 0.6})
('object creation', 'implementation', {'weight': 0.6})
('object creation', 'modularity (programming)', {'weight': 0.6})
('object creation', 'interface (computer science)', {'weight': 0.6})
('object creation', 'polymorphism (computer science)', {'weight': 0.6})
('object creation', 'object-oriented programming', {'weight': 0.6})
('object creation', 'object (computer science)', {'weight': 0.5})
('object creation', 'constructor (computer science)', {'weight': 0.6})
('object creation', 'meta-object protocol', {'weight': 0.6})
('object creation', 'revision control', {'weight': 0.6})
('object creation', 'virtual methods', {'weight': 0.6})
('object creation', 'destructor (computer science)', {'weight': 0.6})
('object creation', 'abstract data types', {'weight': 0.6})
('object creation', 'operator overloading', {'weight': 0.6})
('object creation', 'subroutine', {'weight': 0.6})
('object creation', 'database', {'weight': 0.6})
('object creation', 'meta-model', {'weight': 0.6})
('object creation', 'object creation', {'weight': 1})
('object creation', 'method overriding', {'weight': 0.6})
('object creation', 'balance (accounting)', {'weight': 0.6})
('object creation', 'abstraction layer', {'weight': 0.6})
('procedure (computer science)', 'encapsulation (object-oriented programming)', {'weight': 0.6})
('procedure (computer science)', 'object lifetime', {'weight': 0.6})
('procedure (computer science)', 'class (computer science)', {'weight': 0.6})
('procedure (computer science)', 'meta-model', {'weight': 0.6})
('procedure (computer science)', 'event handler', {'weight': 0.7})
('procedure (computer science)', 'coroutines', {'weight': 0.7})
('procedure (computer science)', 'procedure (computer science)', {'weight': 1})
('procedure (computer science)', 'structured programming', {'weight': 0.6})
('procedure (computer science)', 'java (programming language)', {'weight': 0.6})
('procedure (computer science)', 'class (computer programming)', {'weight': 0.6})
('procedure (computer science)', 'java language', {'weight': 0.6})
('procedure (computer science)', 'university of cambridge computer laboratory', {'weight': 0.5})
('procedure (computer science)', 'modular programming', {'weight': 0.7})
('procedure (computer science)', 'international standard book number', {'weight': 0.6})
('procedure (computer science)', 'implementation', {'weight': 0.6})
('procedure (computer science)', 'modularity (programming)', {'weight': 0.6})
('procedure (computer science)', 'command-query separation', {'weight': 0.7})
('procedure (computer science)', 'interface (computer science)', {'weight': 0.6})
('procedure (computer science)', 'subroutines', {'weight': 0.5})
('procedure (computer science)', 'polymorphism (computer science)', {'weight': 0.6})
('procedure (computer science)', 'object-oriented programming', {'weight': 0.6})
('procedure (computer science)', 'transclusion', {'weight': 0.7})
('procedure (computer science)', 'constructor (computer science)', {'weight': 0.6})
('procedure (computer science)', 'source code', {'weight': 0.5})
('procedure (computer science)', 'common lisp object system', {'weight': 0.6})
('procedure (computer science)', 'meta-object protocol', {'weight': 0.6})
('procedure (computer science)', 'revision control', {'weight': 0.6})
('procedure (computer science)', 'virtual methods', {'weight': 0.6})
('procedure (computer science)', 'destructor (computer science)', {'weight': 0.6})
('procedure (computer science)', 'method (computer programming)', {'weight': 0.7})
('procedure (computer science)', 'abstract data types', {'weight': 0.6})
('procedure (computer science)', 'interrupt', {'weight': 0.7})
('procedure (computer science)', 'holism', {'weight': 0.5})
('procedure (computer science)', 'operator overloading', {'weight': 0.7})
('procedure (computer science)', 'subroutine', {'weight': 0.6})
('procedure (computer science)', 'database', {'weight': 0.6})
('procedure (computer science)', 'function (mathematics)', {'weight': 0.7})
('procedure (computer science)', 'functional programming', {'weight': 0.7})
('procedure (computer science)', 'programming constructs', {'weight': 0.5})
('procedure (computer science)', 'object creation', {'weight': 0.6})
('procedure (computer science)', 'method overriding', {'weight': 0.6})
('procedure (computer science)', 'evaluation strategy', {'weight': 0.7})
('procedure (computer science)', 'balance (accounting)', {'weight': 0.6})
('procedure (computer science)', 'abstraction layer', {'weight': 0.6})
('class (computer science)', 'encapsulation (object-oriented programming)', {'weight': 0.6})
('class (computer science)', 'class-based programming', {'weight': 0.7})
('class (computer science)', 'object lifetime', {'weight': 0.6})
('class (computer science)', 'class (computer science)', {'weight': 1})
('class (computer science)', 'meta-model', {'weight': 0.6})
('class (computer science)', 'prototype-based programming', {'weight': 0.7})
('class (computer science)', 'programming language topics', {'weight': 0.5})
('class (computer science)', 'procedure (computer science)', {'weight': 0.6})
('class (computer science)', 'structured programming', {'weight': 0.6})
('class (computer science)', 'java (programming language)', {'weight': 0.6})
('class (computer science)', 'class (computer programming)', {'weight': 0.6})
('class (computer science)', 'java language', {'weight': 0.6})
('class (computer science)', 'common lisp object system', {'weight': 0.6})
('class (computer science)', 'international standard book number', {'weight': 0.6})
('class (computer science)', 'implementation', {'weight': 0.6})
('class (computer science)', 'modularity (programming)', {'weight': 0.6})
('class (computer science)', 'interface (computer science)', {'weight': 0.6})
('class (computer science)', 'polymorphism (computer science)', {'weight': 0.6})
('class (computer science)', 'object-oriented programming', {'weight': 0.7})
('class (computer science)', 'constructor (computer science)', {'weight': 0.6})
('class (computer science)', 'class diagram', {'weight': 0.7})
('class (computer science)', 'meta-object protocol', {'weight': 0.6})
('class (computer science)', 'revision control', {'weight': 0.6})
('class (computer science)', 'virtual methods', {'weight': 0.6})
('class (computer science)', 'destructor (computer science)', {'weight': 0.6})
('class (computer science)', 'abstract data types', {'weight': 0.6})
('class (computer science)', 'operator overloading', {'weight': 0.6})
('class (computer science)', 'subroutine', {'weight': 0.6})
('class (computer science)', 'database', {'weight': 0.6})
('class (computer science)', 'list of object-oriented programming languages', {'weight': 0.7})
('class (computer science)', 'programming constructs', {'weight': 0.5})
('class (computer science)', 'object creation', {'weight': 0.6})
('class (computer science)', 'method overriding', {'weight': 0.6})
('class (computer science)', 'balance (accounting)', {'weight': 0.6})
('class (computer science)', 'abstraction layer', {'weight': 0.6})
('modularity (programming)', 'encapsulation (object-oriented programming)', {'weight': 0.6})
('modularity (programming)', 'object lifetime', {'weight': 0.6})
('modularity (programming)', 'class (computer science)', {'weight': 0.6})
('modularity (programming)', 'library (computing)', {'weight': 0.7})
('modularity (programming)', 'list of system quality attributes', {'weight': 0.7})
('modularity (programming)', 'procedure (computer science)', {'weight': 0.6})
('modularity (programming)', 'structured programming', {'weight': 0.7})
('modularity (programming)', 'java (programming language)', {'weight': 0.6})
('modularity (programming)', 'class (computer programming)', {'weight': 0.6})
('modularity (programming)', 'java language', {'weight': 0.6})
('modularity (programming)', 'holism', {'weight': 0.5})
('modularity (programming)', 'international standard book number', {'weight': 0.6})
('modularity (programming)', 'implementation', {'weight': 0.6})
('modularity (programming)', 'modularity (programming)', {'weight': 1})
('modularity (programming)', 'information hiding', {'weight': 0.7})
('modularity (programming)', 'interface (computer science)', {'weight': 0.6})
('modularity (programming)', 'polymorphism (computer science)', {'weight': 0.6})
('modularity (programming)', 'object-oriented programming', {'weight': 0.6})
('modularity (programming)', 'constructor (computer science)', {'weight': 0.6})
('modularity (programming)', 'david parnas', {'weight': 0.7})
('modularity (programming)', 'architecture description language', {'weight': 0.7})
('modularity (programming)', 'meta-object protocol', {'weight': 0.6})
('modularity (programming)', 'revision control', {'weight': 0.6})
('modularity (programming)', 'programming paradigms', {'weight': 0.5})
('modularity (programming)', 'snippet (programming)', {'weight': 0.7})
('modularity (programming)', 'destructor (computer science)', {'weight': 0.6})
('modularity (programming)', 'abstract data types', {'weight': 0.6})
('modularity (programming)', 'component-based software engineering', {'weight': 0.7})
('modularity (programming)', 'plug-in (computing)', {'weight': 0.7})
('modularity (programming)', 'common lisp object system', {'weight': 0.6})
('modularity (programming)', 'operator overloading', {'weight': 0.6})
('modularity (programming)', 'coupling', {'weight': 0.7})
('modularity (programming)', 'structured design', {'weight': 0.7})
('modularity (programming)', 'subroutine', {'weight': 0.6})
('modularity (programming)', 'virtual methods', {'weight': 0.6})
('modularity (programming)', 'constructionist design methodology', {'weight': 0.7})
('modularity (programming)', 'database', {'weight': 0.6})
('modularity (programming)', "conway's law", {'weight': 0.7})
('modularity (programming)', 'meta-model', {'weight': 0.6})
('modularity (programming)', 'cohesion', {'weight': 0.7})
('modularity (programming)', 'object creation', {'weight': 0.6})
('modularity (programming)', 'method overriding', {'weight': 0.6})
('modularity (programming)', 'balance (accounting)', {'weight': 0.6})
('modularity (programming)', 'abstraction layer', {'weight': 0.6})
('revision control', 'encapsulation (object-oriented programming)', {'weight': 0.6})
('revision control', 'object lifetime', {'weight': 0.6})
('revision control', 'revision control systems', {'weight': 0.5})
('revision control', 'software configuration management', {'weight': 0.7})
('revision control', 'class (computer science)', {'weight': 0.6})
('revision control', 'software development process', {'weight': 0.5})
('revision control', 'change control', {'weight': 0.7})
('revision control', 'procedure (computer science)', {'weight': 0.6})
('revision control', 'structured programming', {'weight': 0.6})
('revision control', 'java (programming language)', {'weight': 0.6})
('revision control', 'class (computer programming)', {'weight': 0.6})
('revision control', 'technical communication', {'weight': 0.5})
('revision control', 'java language', {'weight': 0.6})
('revision control', 'common lisp object system', {'weight': 0.6})
('revision control', 'list of revision control software', {'weight': 0.7})
('revision control', 'international standard book number', {'weight': 0.6})
('revision control', 'implementation', {'weight': 0.6})
('revision control', 'modularity (programming)', {'weight': 0.6})
('revision control', 'interface (computer science)', {'weight': 0.6})
('revision control', 'object creation', {'weight': 0.6})
('revision control', 'polymorphism (computer science)', {'weight': 0.6})
('revision control', 'object-oriented programming', {'weight': 0.6})
('revision control', 'distributed revision control', {'weight': 0.7})
('revision control', 'versioning file system', {'weight': 0.7})
('revision control', 'constructor (computer science)', {'weight': 0.6})
('revision control', 'comparison of revision control software', {'weight': 0.7})
('revision control', 'meta-object protocol', {'weight': 0.6})
('revision control', 'revision control', {'weight': 1})
('revision control', 'virtual methods', {'weight': 0.6})
('revision control', 'destructor (computer science)', {'weight': 0.6})
('revision control', 'abstract data types', {'weight': 0.6})
('revision control', 'operator overloading', {'weight': 0.6})
('revision control', 'subroutine', {'weight': 0.6})
('revision control', 'software versioning', {'weight': 0.7})
('revision control', 'database', {'weight': 0.6})
('revision control', 'changelog', {'weight': 0.7})
('revision control', 'meta-model', {'weight': 0.6})
('revision control', 'distributed revision control systems', {'weight': 0.5})
('revision control', 'method overriding', {'weight': 0.6})
('revision control', 'balance (accounting)', {'weight': 0.6})
('revision control', 'abstraction layer', {'weight': 0.6})
('balance (accounting)', 'encapsulation (object-oriented programming)', {'weight': 0.6})
('balance (accounting)', 'object lifetime', {'weight': 0.6})
('balance (accounting)', 'class (computer science)', {'weight': 0.6})
('balance (accounting)', 'procedure (computer science)', {'weight': 0.6})
('balance (accounting)', 'structured programming', {'weight': 0.6})
('balance (accounting)', 'java (programming language)', {'weight': 0.6})
('balance (accounting)', 'class (computer programming)', {'weight': 0.6})
('balance (accounting)', 'accounting stubs', {'weight': 0.5})
('balance (accounting)', 'java language', {'weight': 0.6})
('balance (accounting)', 'common lisp object system', {'weight': 0.6})
('balance (accounting)', 'international standard book number', {'weight': 0.6})
('balance (accounting)', 'implementation', {'weight': 0.6})
('balance (accounting)', 'modularity (programming)', {'weight': 0.6})
('balance (accounting)', 'accounting terminology', {'weight': 0.5})
('balance (accounting)', 'interface (computer science)', {'weight': 0.6})
('balance (accounting)', 'polymorphism (computer science)', {'weight': 0.6})
('balance (accounting)', 'object-oriented programming', {'weight': 0.6})
('balance (accounting)', 'constructor (computer science)', {'weight': 0.6})
('balance (accounting)', 'meta-object protocol', {'weight': 0.6})
('balance (accounting)', 'revision control', {'weight': 0.6})
('balance (accounting)', 'virtual methods', {'weight': 0.6})
('balance (accounting)', 'destructor (computer science)', {'weight': 0.6})
('balance (accounting)', 'abstract data types', {'weight': 0.6})
('balance (accounting)', 'operator overloading', {'weight': 0.6})
('balance (accounting)', 'subroutine', {'weight': 0.6})
('balance (accounting)', 'database', {'weight': 0.6})
('balance (accounting)', 'meta-model', {'weight': 0.6})
('balance (accounting)', 'object creation', {'weight': 0.6})
('balance (accounting)', 'method overriding', {'weight': 0.6})
('balance (accounting)', 'balance (accounting)', {'weight': 1})
('balance (accounting)', 'abstraction layer', {'weight': 0.6})
('destructor (computer science)', 'encapsulation (object-oriented programming)', {'weight': 0.6})
('destructor (computer science)', 'resource acquisition is initialization', {'weight': 0.7})
('destructor (computer science)', 'object lifetime', {'weight': 0.7})
('destructor (computer science)', 'class (computer science)', {'weight': 0.6})
('destructor (computer science)', 'finalizer', {'weight': 0.7})
('destructor (computer science)', 'procedure (computer science)', {'weight': 0.6})
('destructor (computer science)', 'structured programming', {'weight': 0.6})
('destructor (computer science)', 'java (programming language)', {'weight': 0.6})
('destructor (computer science)', 'class (computer programming)', {'weight': 0.6})
('destructor (computer science)', 'java language', {'weight': 0.6})
('destructor (computer science)', 'common lisp object system', {'weight': 0.6})
('destructor (computer science)', 'international standard book number', {'weight': 0.6})
('destructor (computer science)', 'implementation', {'weight': 0.6})
('destructor (computer science)', 'modularity (programming)', {'weight': 0.6})
('destructor (computer science)', 'interface (computer science)', {'weight': 0.6})
('destructor (computer science)', 'polymorphism (computer science)', {'weight': 0.6})
('destructor (computer science)', 'object-oriented programming', {'weight': 0.6})
('destructor (computer science)', 'constructor (computer science)', {'weight': 0.6})
('destructor (computer science)', 'meta-object protocol', {'weight': 0.6})
('destructor (computer science)', 'revision control', {'weight': 0.6})
('destructor (computer science)', 'virtual methods', {'weight': 0.6})
('destructor (computer science)', 'destructor (computer science)', {'weight': 1})
('destructor (computer science)', 'method (computer programming)', {'weight': 0.5})
('destructor (computer science)', 'abstract data types', {'weight': 0.6})
('destructor (computer science)', 'operator overloading', {'weight': 0.6})
('destructor (computer science)', 'subroutine', {'weight': 0.6})
('destructor (computer science)', 'database', {'weight': 0.6})
('destructor (computer science)', 'meta-model', {'weight': 0.6})
('destructor (computer science)', 'c++', {'weight': 0.5})
('destructor (computer science)', 'object creation', {'weight': 0.6})
('destructor (computer science)', 'method overriding', {'weight': 0.6})
('destructor (computer science)', 'constructor', {'weight': 0.7})
('destructor (computer science)', 'balance (accounting)', {'weight': 0.6})
('destructor (computer science)', 'abstraction layer', {'weight': 0.6})
('common lisp object system', 'encapsulation (object-oriented programming)', {'weight': 0.6})
('common lisp object system', 'class (computer programming)', {'weight': 0.6})
('common lisp object system', 'class (computer science)', {'weight': 0.6})
('common lisp object system', 'procedure (computer science)', {'weight': 0.6})
('common lisp object system', 'structured programming', {'weight': 0.6})
('common lisp object system', 'java (programming language)', {'weight': 0.6})
('common lisp object system', 'object lifetime', {'weight': 0.6})
('common lisp object system', 'java language', {'weight': 0.6})
('common lisp object system', 'common lisp object system', {'weight': 1})
('common lisp object system', 'international standard book number', {'weight': 0.6})
('common lisp object system', 'implementation', {'weight': 0.6})
('common lisp object system', 'modularity (programming)', {'weight': 0.6})
('common lisp object system', 'interface (computer science)', {'weight': 0.6})
('common lisp object system', 'polymorphism (computer science)', {'weight': 0.6})
('common lisp object system', 'object-oriented programming', {'weight': 0.6})
('common lisp object system', 'constructor (computer science)', {'weight': 0.6})
('common lisp object system', 'meta-object protocol', {'weight': 0.6})
('common lisp object system', 'revision control', {'weight': 0.6})
('common lisp object system', 'virtual methods', {'weight': 0.6})
('common lisp object system', 'destructor (computer science)', {'weight': 0.6})
('common lisp object system', 'abstract data types', {'weight': 0.6})
('common lisp object system', 'operator overloading', {'weight': 0.6})
('common lisp object system', 'subroutine', {'weight': 0.6})
('common lisp object system', 'database', {'weight': 0.6})
('common lisp object system', 'meta-model', {'weight': 0.6})
('common lisp object system', 'object creation', {'weight': 0.6})
('common lisp object system', 'method overriding', {'weight': 0.6})
('common lisp object system', 'balance (accounting)', {'weight': 0.6})
('common lisp object system', 'abstraction layer', {'weight': 0.6})
('polymorphism (computer science)', 'lambda calculus', {'weight': 0.7})
('polymorphism (computer science)', 'encapsulation (object-oriented programming)', {'weight': 0.6})
('polymorphism (computer science)', 'object lifetime', {'weight': 0.6})
('polymorphism (computer science)', 'data types', {'weight': 0.5})
('polymorphism (computer science)', 'system f', {'weight': 0.7})
('polymorphism (computer science)', 'class (computer science)', {'weight': 0.6})
('polymorphism (computer science)', 'procedure (computer science)', {'weight': 0.6})
('polymorphism (computer science)', 'structured programming', {'weight': 0.6})
('polymorphism (computer science)', 'java (programming language)', {'weight': 0.6})
('polymorphism (computer science)', 'class (computer programming)', {'weight': 0.6})
('polymorphism (computer science)', 'java language', {'weight': 0.6})
('polymorphism (computer science)', 'common lisp object system', {'weight': 0.6})
('polymorphism (computer science)', 'international standard book number', {'weight': 0.6})
('polymorphism (computer science)', 'implementation', {'weight': 0.6})
('polymorphism (computer science)', 'modularity (programming)', {'weight': 0.6})
('polymorphism (computer science)', 'polymorphic code', {'weight': 0.7})
('polymorphism (computer science)', 'interface (computer science)', {'weight': 0.6})
('polymorphism (computer science)', 'operator overloading', {'weight': 0.6})
('polymorphism (computer science)', 'object-oriented programming', {'weight': 0.6})
('polymorphism (computer science)', 'virtual inheritance', {'weight': 0.7})
('polymorphism (computer science)', 'constructor (computer science)', {'weight': 0.6})
('polymorphism (computer science)', 'meta-object protocol', {'weight': 0.6})
('polymorphism (computer science)', 'duck typing', {'weight': 0.7})
('polymorphism (computer science)', 'type class', {'weight': 0.7})
('polymorphism (computer science)', 'programming language concepts', {'weight': 0.5})
('polymorphism (computer science)', 'revision control', {'weight': 0.6})
('polymorphism (computer science)', 'virtual methods', {'weight': 0.6})
('polymorphism (computer science)', 'destructor (computer science)', {'weight': 0.6})
('polymorphism (computer science)', 'abstract data types', {'weight': 0.6})
('polymorphism (computer science)', 'polymorphism (computer science)', {'weight': 1})
('polymorphism (computer science)', 'subroutine', {'weight': 0.6})
('polymorphism (computer science)', 'database', {'weight': 0.6})
('polymorphism (computer science)', 'functional programming', {'weight': 0.5})
('polymorphism (computer science)', 'meta-model', {'weight': 0.6})
('polymorphism (computer science)', 'type theory', {'weight': 0.7})
('polymorphism (computer science)', 'object creation', {'weight': 0.6})
('polymorphism (computer science)', 'method overriding', {'weight': 0.6})
('polymorphism (computer science)', 'balance (accounting)', {'weight': 0.6})
('polymorphism (computer science)', 'abstraction layer', {'weight': 0.6})
('object lifetime', 'encapsulation (object-oriented programming)', {'weight': 0.6})
('object lifetime', 'resource acquisition is initialization', {'weight': 0.7})
('object lifetime', 'class (computer programming)', {'weight': 0.6})
('object lifetime', 'class (computer science)', {'weight': 0.6})
('object lifetime', 'procedure (computer science)', {'weight': 0.6})
('object lifetime', 'structured programming', {'weight': 0.6})
('object lifetime', 'java (programming language)', {'weight': 0.6})
('object lifetime', 'object lifetime', {'weight': 1})
('object lifetime', 'java language', {'weight': 0.6})
('object lifetime', 'common lisp object system', {'weight': 0.6})
('object lifetime', 'international standard book number', {'weight': 0.6})
('object lifetime', 'implementation', {'weight': 0.6})
('object lifetime', 'modularity (programming)', {'weight': 0.6})
('object lifetime', 'interface (computer science)', {'weight': 0.6})
('object lifetime', 'polymorphism (computer science)', {'weight': 0.6})
('object lifetime', 'object-oriented programming', {'weight': 0.6})
('object lifetime', 'object (computer science)', {'weight': 0.5})
('object lifetime', 'constructor (computer science)', {'weight': 0.6})
('object lifetime', 'meta-object protocol', {'weight': 0.6})
('object lifetime', 'revision control', {'weight': 0.6})
('object lifetime', 'virtual methods', {'weight': 0.6})
('object lifetime', 'destructor (computer science)', {'weight': 0.6})
('object lifetime', 'abstract data types', {'weight': 0.6})
('object lifetime', 'operator overloading', {'weight': 0.6})
('object lifetime', 'subroutine', {'weight': 0.6})
('object lifetime', 'database', {'weight': 0.6})
('object lifetime', 'meta-model', {'weight': 0.6})
('object lifetime', 'object creation', {'weight': 0.6})
('object lifetime', 'method overriding', {'weight': 0.6})
('object lifetime', 'balance (accounting)', {'weight': 0.6})
('object lifetime', 'abstraction layer', {'weight': 0.6})
('structured programming', 'encapsulation (object-oriented programming)', {'weight': 0.6})
('structured programming', 'object lifetime', {'weight': 0.6})
('structured programming', 'drakon', {'weight': 0.7})
('structured programming', 'structure chart', {'weight': 0.7})
('structured programming', 'nassi\xe2\x80\x93shneiderman diagram', {'weight': 0.7})
('structured programming', 'class (computer science)', {'weight': 0.6})
('structured programming', 'procedure (computer science)', {'weight': 0.6})
('structured programming', 'structured programming', {'weight': 1})
('structured programming', 'java (programming language)', {'weight': 0.6})
('structured programming', 'class (computer programming)', {'weight': 0.6})
('structured programming', 'java language', {'weight': 0.6})
('structured programming', 'holism', {'weight': 0.5})
('structured programming', 'international standard book number', {'weight': 0.6})
('structured programming', 'implementation', {'weight': 0.6})
('structured programming', 'modularity (programming)', {'weight': 0.6})
('structured programming', 'switch statement', {'weight': 0.7})
('structured programming', 'interface (computer science)', {'weight': 0.6})
('structured programming', 'polymorphism (computer science)', {'weight': 0.6})
('structured programming', 'object-oriented programming', {'weight': 0.6})
('structured programming', 'constructor (computer science)', {'weight': 0.6})
('structured programming', 'meta-object protocol', {'weight': 0.6})
('structured programming', 'revision control', {'weight': 0.6})
('structured programming', 'programming paradigms', {'weight': 0.5})
('structured programming', 'minimal evaluation', {'weight': 0.7})
('structured programming', 'destructor (computer science)', {'weight': 0.6})
('structured programming', 'abstract data types', {'weight': 0.6})
('structured programming', 'common lisp object system', {'weight': 0.6})
('structured programming', 'operator overloading', {'weight': 0.6})
('structured programming', 'subroutine', {'weight': 0.6})
('structured programming', 'virtual methods', {'weight': 0.6})
('structured programming', 'database', {'weight': 0.6})
('structured programming', 'meta-model', {'weight': 0.6})
('structured programming', 'object creation', {'weight': 0.6})
('structured programming', 'method overriding', {'weight': 0.6})
('structured programming', 'balance (accounting)', {'weight': 0.6})
('structured programming', 'abstraction layer', {'weight': 0.6})
('java (programming language)', 'graal', {'weight': 0.7})
('java (programming language)', 'encapsulation (object-oriented programming)', {'weight': 0.6})
('java (programming language)', 'javaone', {'weight': 0.7})
('java (programming language)', 'statically typed programming languages', {'weight': 0.5})
('java (programming language)', 'object lifetime', {'weight': 0.6})
('java (programming language)', 'list of java apis', {'weight': 0.7})
('java (programming language)', 'sun microsystems', {'weight': 0.5})
('java (programming language)', 'class (computer science)', {'weight': 0.6})
('java (programming language)', 'list of jvm languages', {'weight': 0.7})
('java (programming language)', 'procedure (computer science)', {'weight': 0.6})
('java (programming language)', 'structured programming', {'weight': 0.6})
('java (programming language)', 'java (programming language)', {'weight': 1})
('java (programming language)', 'class (computer programming)', {'weight': 0.6})
('java (programming language)', 'cross-platform software', {'weight': 0.5})
('java (programming language)', 'java language', {'weight': 0.6})
('java (programming language)', 'common lisp object system', {'weight': 0.6})
('java (programming language)', 'international standard book number', {'weight': 0.6})
('java (programming language)', 'programming languages created in 1995', {'weight': 0.5})
('java (programming language)', 'modularity (programming)', {'weight': 0.6})
('java (programming language)', 'c programming language family', {'weight': 0.5})
('java (programming language)', 'interface (computer science)', {'weight': 0.6})
('java (programming language)', 'polymorphism (computer science)', {'weight': 0.6})
('java (programming language)', 'object-oriented programming', {'weight': 0.6})
('java (programming language)', 'comparison of programming languages', {'weight': 0.7})
('java (programming language)', 'constructor (computer science)', {'weight': 0.6})
('java (programming language)', 'javapedia', {'weight': 0.7})
('java (programming language)', 'class-based programming languages', {'weight': 0.5})
('java (programming language)', 'comparison of c# and java', {'weight': 0.7})
('java (programming language)', 'meta-object protocol', {'weight': 0.6})
('java (programming language)', 'revision control', {'weight': 0.6})
('java (programming language)', 'virtual methods', {'weight': 0.6})
('java (programming language)', 'comparison of java and c++', {'weight': 0.7})
('java (programming language)', 'list of java virtual machines', {'weight': 0.7})
('java (programming language)', 'destructor (computer science)', {'weight': 0.6})
('java (programming language)', 'abstract data types', {'weight': 0.6})
('java (programming language)', 'java specification requests', {'weight': 0.5})
('java (programming language)', 'concurrent programming languages', {'weight': 0.5})
('java (programming language)', 'jvm programming languages', {'weight': 0.5})
('java (programming language)', 'operator overloading', {'weight': 0.6})
('java (programming language)', 'subroutine', {'weight': 0.6})
('java (programming language)', 'database', {'weight': 0.6})
('java (programming language)', 'dalvik', {'weight': 0.7})
('java (programming language)', 'meta-model', {'weight': 0.6})
('java (programming language)', 'implementation', {'weight': 0.6})
('java (programming language)', 'object creation', {'weight': 0.6})
('java (programming language)', 'java platform', {'weight': 0.5})
('java (programming language)', 'method overriding', {'weight': 0.6})
('java (programming language)', 'balance (accounting)', {'weight': 0.6})
('java (programming language)', 'object-oriented programming languages', {'weight': 0.5})
('java (programming language)', 'abstraction layer', {'weight': 0.6})
('java language', 'graal', {'weight': 0.7})
('java language', 'encapsulation (object-oriented programming)', {'weight': 0.6})
('java language', 'javaone', {'weight': 0.7})
('java language', 'statically typed programming languages', {'weight': 0.5})
('java language', 'object lifetime', {'weight': 0.6})
('java language', 'list of java apis', {'weight': 0.7})
('java language', 'sun microsystems', {'weight': 0.5})
('java language', 'class (computer science)', {'weight': 0.6})
('java language', 'list of jvm languages', {'weight': 0.7})
('java language', 'procedure (computer science)', {'weight': 0.6})
('java language', 'structured programming', {'weight': 0.6})
('java language', 'java portal', {'weight': 0.7})
('java language', 'java (programming language)', {'weight': 0.6})
('java language', 'class (computer programming)', {'weight': 0.6})
('java language', 'cross-platform software', {'weight': 0.5})
('java language', 'java language', {'weight': 1})
('java language', 'common lisp object system', {'weight': 0.6})
('java language', 'international standard book number', {'weight': 0.6})
('java language', 'programming languages created in 1995', {'weight': 0.5})
('java language', 'modularity (programming)', {'weight': 0.6})
('java language', 'c programming language family', {'weight': 0.5})
('java language', 'interface (computer science)', {'weight': 0.6})
('java language', 'polymorphism (computer science)', {'weight': 0.6})
('java language', 'object-oriented programming', {'weight': 0.6})
('java language', 'comparison of programming languages', {'weight': 0.7})
('java language', 'constructor (computer science)', {'weight': 0.6})
('java language', 'javapedia', {'weight': 0.7})
('java language', 'class-based programming languages', {'weight': 0.5})
('java language', 'comparison of c# and java', {'weight': 0.7})
('java language', 'computer programming portal', {'weight': 0.7})
('java language', 'meta-object protocol', {'weight': 0.6})
('java language', 'revision control', {'weight': 0.6})
('java language', 'virtual methods', {'weight': 0.6})
('java language', 'comparison of java and c++', {'weight': 0.7})
('java language', 'list of java virtual machines', {'weight': 0.7})
('java language', 'destructor (computer science)', {'weight': 0.6})
('java language', 'abstract data types', {'weight': 0.6})
('java language', 'java specification requests', {'weight': 0.5})
('java language', 'concurrent programming languages', {'weight': 0.5})
('java language', 'jvm programming languages', {'weight': 0.5})
('java language', 'operator overloading', {'weight': 0.6})
('java language', 'subroutine', {'weight': 0.6})
('java language', 'database', {'weight': 0.6})
('java language', 'dalvik', {'weight': 0.7})
('java language', 'meta-model', {'weight': 0.6})
('java language', 'implementation', {'weight': 0.6})
('java language', 'object creation', {'weight': 0.6})
('java language', 'java platform', {'weight': 0.5})
('java language', 'method overriding', {'weight': 0.6})
('java language', 'balance (accounting)', {'weight': 0.6})
('java language', 'object-oriented programming languages', {'weight': 0.5})
('java language', 'abstraction layer', {'weight': 0.6})
('international standard book number', 'encapsulation (object-oriented programming)', {'weight': 0.6})
('international standard book number', 'bookselling', {'weight': 0.5})
('international standard book number', 'issn', {'weight': 0.7})
('international standard book number', 'class (computer programming)', {'weight': 0.6})
('international standard book number', 'universal identifiers', {'weight': 0.5})
('international standard book number', 'vd 16', {'weight': 0.7})
('international standard book number', 'estc', {'weight': 0.7})
('international standard book number', 'checksum algorithms', {'weight': 0.5})
('international standard book number', 'oclc', {'weight': 0.7})
('international standard book number', 'procedure (computer science)', {'weight': 0.6})
('international standard book number', 'structured programming', {'weight': 0.6})
('international standard book number', '1966 introductions', {'weight': 0.5})
('international standard book number', 'object lifetime', {'weight': 0.6})
('international standard book number', '[35]', {'weight': 0.7})
('international standard book number', 'asin', {'weight': 0.7})
('international standard book number', 'java language', {'weight': 0.6})
('international standard book number', 'common lisp object system', {'weight': 0.6})
('international standard book number', 'international standard book number', {'weight': 1})
('international standard book number', 'implementation', {'weight': 0.6})
('international standard book number', 'modularity (programming)', {'weight': 0.6})
('international standard book number', 'vd 17', {'weight': 0.7})
('international standard book number', 'iswn', {'weight': 0.7})
('international standard book number', 'interface (computer science)', {'weight': 0.6})
('international standard book number', 'sici', {'weight': 0.7})
('international standard book number', 'polymorphism (computer science)', {'weight': 0.6})
('international standard book number', 'object-oriented programming', {'weight': 0.6})
('international standard book number', 'list of group-0 isbn publisher codes', {'weight': 0.7})
('international standard book number', 'constructor (computer science)', {'weight': 0.6})
('international standard book number', 'special:booksources', {'weight': 0.7})
('international standard book number', 'coden', {'weight': 0.7})
('international standard book number', 'ismn', {'weight': 0.7})
('international standard book number', 'isan', {'weight': 0.7})
('international standard book number', 'book terminology', {'weight': 0.5})
('international standard book number', 'meta-object protocol', {'weight': 0.6})
('international standard book number', 'iso standards', {'weight': 0.5})
('international standard book number', 'virtual methods', {'weight': 0.6})
('international standard book number', 'istc', {'weight': 0.7})
('international standard book number', 'destructor (computer science)', {'weight': 0.6})
('international standard book number', 'class (computer science)', {'weight': 0.6})
('international standard book number', 'abstract data types', {'weight': 0.6})
('international standard book number', 'java (programming language)', {'weight': 0.6})
('international standard book number', 'isrc', {'weight': 0.7})
('international standard book number', 'list of group-1 isbn publisher codes', {'weight': 0.7})
('international standard book number', 'lccn', {'weight': 0.7})
('international standard book number', 'operator overloading', {'weight': 0.6})
('international standard book number', 'revision control', {'weight': 0.6})
('international standard book number', 'doi', {'weight': 0.7})
('international standard book number', 'subroutine', {'weight': 0.6})
('international standard book number', 'database', {'weight': 0.6})
('international standard book number', 'ettn', {'weight': 0.7})
('international standard book number', 'registration authority', {'weight': 0.7})
('international standard book number', 'iswc', {'weight': 0.7})
('international standard book number', 'identifiers', {'weight': 0.5})
('international standard book number', 'library science', {'weight': 0.5})
('international standard book number', 'meta-model', {'weight': 0.6})
('international standard book number', 'book publishing', {'weight': 0.5})
('international standard book number', 'object creation', {'weight': 0.6})
('international standard book number', 'method overriding', {'weight': 0.6})
('international standard book number', 'balance (accounting)', {'weight': 0.6})
('international standard book number', 'abstraction layer', {'weight': 0.6})
('constructor (computer science)', 'encapsulation (object-oriented programming)', {'weight': 0.6})
('constructor (computer science)', 'object lifetime', {'weight': 0.6})
('constructor (computer science)', 'class (computer science)', {'weight': 0.6})
('constructor (computer science)', 'procedure (computer science)', {'weight': 0.6})
('constructor (computer science)', 'structured programming', {'weight': 0.6})
('constructor (computer science)', 'java (programming language)', {'weight': 0.6})
('constructor (computer science)', 'class (computer programming)', {'weight': 0.6})
('constructor (computer science)', 'creational pattern', {'weight': 0.7})
('constructor (computer science)', '((constructor))', {'weight': 0.7})
('constructor (computer science)', 'java language', {'weight': 0.6})
('constructor (computer science)', 'common lisp object system', {'weight': 0.6})
('constructor (computer science)', 'international standard book number', {'weight': 0.6})
('constructor (computer science)', 'implementation', {'weight': 0.6})
('constructor (computer science)', 'modularity (programming)', {'weight': 0.6})
('constructor (computer science)', 'destructor', {'weight': 0.7})
('constructor (computer science)', 'interface (computer science)', {'weight': 0.6})
('constructor (computer science)', 'polymorphism (computer science)', {'weight': 0.6})
('constructor (computer science)', 'object-oriented programming', {'weight': 0.6})
('constructor (computer science)', 'constructor (computer science)', {'weight': 1})
('constructor (computer science)', 'meta-object protocol', {'weight': 0.6})
('constructor (computer science)', 'revision control', {'weight': 0.6})
('constructor (computer science)', 'virtual methods', {'weight': 0.6})
('constructor (computer science)', 'destructor (computer science)', {'weight': 0.6})
('constructor (computer science)', 'method (computer programming)', {'weight': 0.5})
('constructor (computer science)', 'abstract data types', {'weight': 0.6})
('constructor (computer science)', 'operator overloading', {'weight': 0.6})
('constructor (computer science)', 'subroutine', {'weight': 0.6})
('constructor (computer science)', 'database', {'weight': 0.6})
('constructor (computer science)', 'meta-model', {'weight': 0.6})
('constructor (computer science)', 'object creation', {'weight': 0.6})
('constructor (computer science)', 'method overriding', {'weight': 0.6})
('constructor (computer science)', 'global constructor', {'weight': 0.7})
('constructor (computer science)', 'balance (accounting)', {'weight': 0.6})
('constructor (computer science)', 'allocation site', {'weight': 0.7})
('constructor (computer science)', 'abstraction layer', {'weight': 0.6})
('method (computer programming)', 'encapsulation (object-oriented programming)', {'weight': 0.6})
('method (computer programming)', 'object lifetime', {'weight': 0.6})
('method (computer programming)', 'class (computer science)', {'weight': 0.6})
('method (computer programming)', 'procedure (computer science)', {'weight': 0.6})
('method (computer programming)', 'structured programming', {'weight': 0.6})
('method (computer programming)', 'java (programming language)', {'weight': 0.6})
('method (computer programming)', 'class (computer programming)', {'weight': 0.6})
('method (computer programming)', 'java language', {'weight': 0.6})
('method (computer programming)', 'common lisp object system', {'weight': 0.6})
('method (computer programming)', 'international standard book number', {'weight': 0.6})
('method (computer programming)', 'implementation', {'weight': 0.6})
('method (computer programming)', 'modularity (programming)', {'weight': 0.6})
('method (computer programming)', 'interface (computer science)', {'weight': 0.6})
('method (computer programming)', 'polymorphism (computer science)', {'weight': 0.6})
('method (computer programming)', 'object-oriented programming', {'weight': 0.6})
('method (computer programming)', 'constructor (computer science)', {'weight': 0.6})
('method (computer programming)', 'meta-object protocol', {'weight': 0.6})
('method (computer programming)', 'revision control', {'weight': 0.6})
('method (computer programming)', 'virtual methods', {'weight': 0.6})
('method (computer programming)', 'destructor (computer science)', {'weight': 0.6})
('method (computer programming)', 'method (computer programming)', {'weight': 1})
('method (computer programming)', 'abstract data types', {'weight': 0.6})
('method (computer programming)', 'operator overloading', {'weight': 0.6})
('method (computer programming)', 'subroutine', {'weight': 0.7})
('method (computer programming)', 'database', {'weight': 0.6})
('method (computer programming)', 'meta-model', {'weight': 0.6})
('method (computer programming)', 'object creation', {'weight': 0.6})
('method (computer programming)', 'method overriding', {'weight': 0.6})
('method (computer programming)', 'balance (accounting)', {'weight': 0.6})
('method (computer programming)', 'abstraction layer', {'weight': 0.6})
('operator overloading', 'encapsulation (object-oriented programming)', {'weight': 0.6})
('operator overloading', 'isbn', {'weight': 0.7})
('operator overloading', 'class (computer programming)', {'weight': 0.6})
('operator overloading', '1-57610-777-9', {'weight': 0.7})
('operator overloading', "comp.lang.java faq question 6.9: why isn't there operator overloading?", {'weight': 0.7})
('operator overloading', 'class (computer science)', {'weight': 0.6})
('operator overloading', 'operators in c and c++', {'weight': 0.7})
('operator overloading', 'java.sun.com', {'weight': 0.7})
('operator overloading', 'procedure (computer science)', {'weight': 0.6})
('operator overloading', 'structured programming', {'weight': 0.6})
('operator overloading', 'java (programming language)', {'weight': 0.6})
('operator overloading', 'object lifetime', {'weight': 0.6})
('operator overloading', 'java language', {'weight': 0.6})
('operator overloading', 'common lisp object system', {'weight': 0.6})
('operator overloading', 'international standard book number', {'weight': 0.6})
('operator overloading', 'implementation', {'weight': 0.6})
('operator overloading', 'modularity (programming)', {'weight': 0.6})
('operator overloading', 'interface (computer science)', {'weight': 0.6})
('operator overloading', 'polymorphism (computer science)', {'weight': 0.7})
('operator overloading', 'object-oriented programming', {'weight': 0.6})
('operator overloading', 'constructor (computer science)', {'weight': 0.6})
('operator overloading', 'a. van wijngaarden', {'weight': 0.7})
('operator overloading', 'operator (programming)', {'weight': 0.7})
('operator overloading', 'function overloading', {'weight': 0.7})
('operator overloading', 'c.h.a. koster', {'weight': 0.7})
('operator overloading', 'meta-object protocol', {'weight': 0.6})
('operator overloading', '"operator overloading, free pascal manual"', {'weight': 0.7})
('operator overloading', 'issues in overloading', {'weight': 0.7})
('operator overloading', 'revision control', {'weight': 0.6})
('operator overloading', 'virtual methods', {'weight': 0.6})
('operator overloading', '"implementing operators for your class"', {'weight': 0.7})
('operator overloading', 'destructor (computer science)', {'weight': 0.6})
('operator overloading', '"report on the algorithmic language algol 68, section 10.2.2."', {'weight': 0.7})
('operator overloading', 'abstract data types', {'weight': 0.6})
('operator overloading', 'subroutine', {'weight': 0.7})
('operator overloading', 'php magic methods overriding class properties', {'weight': 0.7})
('operator overloading', 'j.e.l. peck', {'weight': 0.7})
('operator overloading', 'operator overloading', {'weight': 1})
('operator overloading', '^', {'weight': 0.7})
('operator overloading', '"c++ faq lite: what are the benefits of operator overloading?"', {'weight': 0.7})
('operator overloading', 'b.j. mailloux', {'weight': 0.7})
('operator overloading', 'operators (programming)', {'weight': 0.5})
('operator overloading', 'database', {'weight': 0.6})
('operator overloading', 'no more operator overloading \xe2\x80\x93 features removed from c and c++', {'weight': 0.7})
('operator overloading', 'meta-model', {'weight': 0.6})
('operator overloading', '"a history of c++: 1979\xe2\x88\x921991 - page 12"', {'weight': 0.7})
('operator overloading', 'object creation', {'weight': 0.6})
('operator overloading', 'method overriding', {'weight': 0.6})
('operator overloading', 'balance (accounting)', {'weight': 0.6})
('operator overloading', 'link', {'weight': 0.7})
('operator overloading', '"why does go not support overloading of methods and operators?"', {'weight': 0.7})
('operator overloading', '"operator overloading, delphi manual"', {'weight': 0.7})
('operator overloading', 'abstraction layer', {'weight': 0.6})
('subroutine', 'encapsulation (object-oriented programming)', {'weight': 0.6})
('subroutine', 'object lifetime', {'weight': 0.6})
('subroutine', 'class (computer science)', {'weight': 0.6})
('subroutine', 'meta-model', {'weight': 0.6})
('subroutine', 'event handler', {'weight': 0.7})
('subroutine', 'coroutines', {'weight': 0.7})
('subroutine', 'procedure (computer science)', {'weight': 0.6})
('subroutine', 'structured programming', {'weight': 0.6})
('subroutine', 'java (programming language)', {'weight': 0.6})
('subroutine', 'class (computer programming)', {'weight': 0.6})
('subroutine', 'java language', {'weight': 0.6})
('subroutine', 'university of cambridge computer laboratory', {'weight': 0.5})
('subroutine', 'modular programming', {'weight': 0.7})
('subroutine', 'international standard book number', {'weight': 0.6})
('subroutine', 'implementation', {'weight': 0.6})
('subroutine', 'modularity (programming)', {'weight': 0.6})
('subroutine', 'command-query separation', {'weight': 0.7})
('subroutine', 'interface (computer science)', {'weight': 0.6})
('subroutine', 'subroutines', {'weight': 0.5})
('subroutine', 'polymorphism (computer science)', {'weight': 0.6})
('subroutine', 'object-oriented programming', {'weight': 0.6})
('subroutine', 'transclusion', {'weight': 0.7})
('subroutine', 'constructor (computer science)', {'weight': 0.6})
('subroutine', 'source code', {'weight': 0.5})
('subroutine', 'common lisp object system', {'weight': 0.6})
('subroutine', 'meta-object protocol', {'weight': 0.6})
('subroutine', 'revision control', {'weight': 0.6})
('subroutine', 'virtual methods', {'weight': 0.6})
('subroutine', 'destructor (computer science)', {'weight': 0.6})
('subroutine', 'method (computer programming)', {'weight': 0.7})
('subroutine', 'abstract data types', {'weight': 0.6})
('subroutine', 'interrupt', {'weight': 0.7})
('subroutine', 'holism', {'weight': 0.5})
('subroutine', 'operator overloading', {'weight': 0.7})
('subroutine', 'subroutine', {'weight': 1})
('subroutine', 'database', {'weight': 0.6})
('subroutine', 'function (mathematics)', {'weight': 0.7})
('subroutine', 'functional programming', {'weight': 0.7})
('subroutine', 'programming constructs', {'weight': 0.5})
('subroutine', 'object creation', {'weight': 0.6})
('subroutine', 'method overriding', {'weight': 0.6})
('subroutine', 'evaluation strategy', {'weight': 0.7})
('subroutine', 'balance (accounting)', {'weight': 0.6})
('subroutine', 'abstraction layer', {'weight': 0.6})
('method overriding', 'encapsulation (object-oriented programming)', {'weight': 0.6})
('method overriding', 'object lifetime', {'weight': 0.6})
('method overriding', 'class (computer science)', {'weight': 0.6})
('method overriding', 'procedure (computer science)', {'weight': 0.6})
('method overriding', 'structured programming', {'weight': 0.6})
('method overriding', 'java (programming language)', {'weight': 0.6})
('method overriding', 'class (computer programming)', {'weight': 0.6})
('method overriding', 'java language', {'weight': 0.6})
('method overriding', 'common lisp object system', {'weight': 0.6})
('method overriding', 'international standard book number', {'weight': 0.6})
('method overriding', 'implementation', {'weight': 0.6})
('method overriding', 'modularity (programming)', {'weight': 0.6})
('method overriding', 'interface (computer science)', {'weight': 0.6})
('method overriding', 'polymorphism (computer science)', {'weight': 0.6})
('method overriding', 'object-oriented programming', {'weight': 0.6})
('method overriding', 'virtual inheritance', {'weight': 0.7})
('method overriding', 'constructor (computer science)', {'weight': 0.6})
('method overriding', 'template method pattern', {'weight': 0.7})
('method overriding', 'method overloading', {'weight': 0.7})
('method overriding', 'meta-object protocol', {'weight': 0.6})
('method overriding', 'revision control', {'weight': 0.6})
('method overriding', 'virtual methods', {'weight': 0.6})
('method overriding', 'destructor (computer science)', {'weight': 0.6})
('method overriding', 'method (computer programming)', {'weight': 0.5})
('method overriding', 'abstract data types', {'weight': 0.6})
('method overriding', 'implementation inheritance', {'weight': 0.7})
('method overriding', 'operator overloading', {'weight': 0.6})
('method overriding', 'polymorphism in object-oriented programming', {'weight': 0.7})
('method overriding', 'subroutine', {'weight': 0.6})
('method overriding', 'inheritance semantics', {'weight': 0.7})
('method overriding', 'database', {'weight': 0.6})
('method overriding', 'meta-model', {'weight': 0.6})
('method overriding', 'object creation', {'weight': 0.6})
('method overriding', 'method overriding', {'weight': 1})
('method overriding', 'balance (accounting)', {'weight': 0.6})
('method overriding', 'abstraction layer', {'weight': 0.6})
('abstraction layer', 'encapsulation (object-oriented programming)', {'weight': 0.6})
('abstraction layer', 'class (computer programming)', {'weight': 0.6})
('abstraction layer', 'class (computer science)', {'weight': 0.6})
('abstraction layer', 'procedure (computer science)', {'weight': 0.6})
('abstraction layer', 'structured programming', {'weight': 0.6})
('abstraction layer', 'java (programming language)', {'weight': 0.6})
('abstraction layer', 'computer architecture', {'weight': 0.5})
('abstraction layer', 'java language', {'weight': 0.6})
('abstraction layer', 'object lifetime', {'weight': 0.6})
('abstraction layer', 'international standard book number', {'weight': 0.6})
('abstraction layer', 'implementation', {'weight': 0.6})
('abstraction layer', 'modularity (programming)', {'weight': 0.6})
('abstraction layer', 'interface (computer science)', {'weight': 0.6})
('abstraction layer', 'polymorphism (computer science)', {'weight': 0.6})
('abstraction layer', 'object-oriented programming', {'weight': 0.6})
('abstraction layer', 'constructor (computer science)', {'weight': 0.6})
('abstraction layer', 'meta-object protocol', {'weight': 0.6})
('abstraction layer', 'revision control', {'weight': 0.6})
('abstraction layer', 'virtual methods', {'weight': 0.6})
('abstraction layer', 'destructor (computer science)', {'weight': 0.6})
('abstraction layer', 'abstract data types', {'weight': 0.6})
('abstraction layer', 'common lisp object system', {'weight': 0.6})
('abstraction layer', 'operator overloading', {'weight': 0.6})
('abstraction layer', 'subroutine', {'weight': 0.6})
('abstraction layer', 'database', {'weight': 0.6})
('abstraction layer', 'meta-model', {'weight': 0.6})
('abstraction layer', 'object creation', {'weight': 0.6})
('abstraction layer', 'method overriding', {'weight': 0.6})
('abstraction layer', 'balance (accounting)', {'weight': 0.6})
('abstraction layer', 'abstraction layer', {'weight': 1})
('encapsulation (object-oriented programming)', 'encapsulation (object-oriented programming)', {'weight': 1})
('encapsulation (object-oriented programming)', 'class (computer programming)', {'weight': 0.6})
('encapsulation (object-oriented programming)', 'class (computer science)', {'weight': 0.6})
('encapsulation (object-oriented programming)', 'procedure (computer science)', {'weight': 0.6})
('encapsulation (object-oriented programming)', 'structured programming', {'weight': 0.6})
('encapsulation (object-oriented programming)', 'java (programming language)', {'weight': 0.6})
('encapsulation (object-oriented programming)', 'object lifetime', {'weight': 0.6})
('encapsulation (object-oriented programming)', 'java language', {'weight': 0.6})
('encapsulation (object-oriented programming)', 'common lisp object system', {'weight': 0.6})
('encapsulation (object-oriented programming)', 'international standard book number', {'weight': 0.6})
('encapsulation (object-oriented programming)', 'implementation', {'weight': 0.6})
('encapsulation (object-oriented programming)', 'modularity (programming)', {'weight': 0.6})
('encapsulation (object-oriented programming)', 'interface (computer science)', {'weight': 0.6})
('encapsulation (object-oriented programming)', 'polymorphism (computer science)', {'weight': 0.6})
('encapsulation (object-oriented programming)', 'object-oriented programming', {'weight': 0.6})
('encapsulation (object-oriented programming)', 'constructor (computer science)', {'weight': 0.6})
('encapsulation (object-oriented programming)', 'meta-object protocol', {'weight': 0.6})
('encapsulation (object-oriented programming)', 'revision control', {'weight': 0.6})
('encapsulation (object-oriented programming)', 'virtual methods', {'weight': 0.6})
('encapsulation (object-oriented programming)', 'destructor (computer science)', {'weight': 0.6})
('encapsulation (object-oriented programming)', 'abstract data types', {'weight': 0.6})
('encapsulation (object-oriented programming)', 'operator overloading', {'weight': 0.6})
('encapsulation (object-oriented programming)', 'subroutine', {'weight': 0.6})
('encapsulation (object-oriented programming)', 'database', {'weight': 0.6})
('encapsulation (object-oriented programming)', 'meta-model', {'weight': 0.6})
('encapsulation (object-oriented programming)', 'object creation', {'weight': 0.6})
('encapsulation (object-oriented programming)', 'method overriding', {'weight': 0.6})
('encapsulation (object-oriented programming)', 'balance (accounting)', {'weight': 0.6})
('encapsulation (object-oriented programming)', 'abstraction layer', {'weight': 0.6})
('class (computer programming)', 'encapsulation (object-oriented programming)', {'weight': 0.6})
('class (computer programming)', 'class-based programming', {'weight': 0.7})
('class (computer programming)', 'object lifetime', {'weight': 0.6})
('class (computer programming)', 'class (computer science)', {'weight': 0.6})
('class (computer programming)', 'meta-model', {'weight': 0.6})
('class (computer programming)', 'prototype-based programming', {'weight': 0.7})
('class (computer programming)', 'programming language topics', {'weight': 0.5})
('class (computer programming)', 'procedure (computer science)', {'weight': 0.6})
('class (computer programming)', 'structured programming', {'weight': 0.6})
('class (computer programming)', 'java (programming language)', {'weight': 0.6})
('class (computer programming)', 'class (computer programming)', {'weight': 1})
('class (computer programming)', 'java language', {'weight': 0.6})
('class (computer programming)', 'common lisp object system', {'weight': 0.6})
('class (computer programming)', 'international standard book number', {'weight': 0.6})
('class (computer programming)', 'implementation', {'weight': 0.6})
('class (computer programming)', 'modularity (programming)', {'weight': 0.6})
('class (computer programming)', 'interface (computer science)', {'weight': 0.6})
('class (computer programming)', 'polymorphism (computer science)', {'weight': 0.6})
('class (computer programming)', 'object-oriented programming', {'weight': 0.7})
('class (computer programming)', 'constructor (computer science)', {'weight': 0.6})
('class (computer programming)', 'class diagram', {'weight': 0.7})
('class (computer programming)', 'meta-object protocol', {'weight': 0.6})
('class (computer programming)', 'revision control', {'weight': 0.6})
('class (computer programming)', 'virtual methods', {'weight': 0.6})
('class (computer programming)', 'destructor (computer science)', {'weight': 0.6})
('class (computer programming)', 'abstract data types', {'weight': 0.6})
('class (computer programming)', 'operator overloading', {'weight': 0.6})
('class (computer programming)', 'subroutine', {'weight': 0.6})
('class (computer programming)', 'database', {'weight': 0.6})
('class (computer programming)', 'list of object-oriented programming languages', {'weight': 0.7})
('class (computer programming)', 'programming constructs', {'weight': 0.5})
('class (computer programming)', 'object creation', {'weight': 0.6})
('class (computer programming)', 'method overriding', {'weight': 0.6})
('class (computer programming)', 'balance (accounting)', {'weight': 0.6})
('class (computer programming)', 'abstraction layer', {'weight': 0.6})
('meta-model', 'encapsulation (object-oriented programming)', {'weight': 0.6})
('meta-model', 'object lifetime', {'weight': 0.6})
('meta-model', 'requirements analysis', {'weight': 0.7})
('meta-model', 'class (computer science)', {'weight': 0.6})
('meta-model', 'scientific modeling', {'weight': 0.5})
('meta-model', 'software design', {'weight': 0.5})
('meta-model', 'computer-aided software engineering', {'weight': 0.7})
('meta-model', 'data governance', {'weight': 0.7})
('meta-model', 'method engineering', {'weight': 0.7})
('meta-model', 'procedure (computer science)', {'weight': 0.6})
('meta-model', 'structured programming', {'weight': 0.6})
('meta-model', 'domain-specific modeling', {'weight': 0.7})
('meta-model', 'java (programming language)', {'weight': 0.6})
('meta-model', 'class (computer programming)', {'weight': 0.6})
('meta-model', 'metacase tool', {'weight': 0.7})
('meta-model', 'java language', {'weight': 0.6})
('meta-model', 'common lisp object system', {'weight': 0.6})
('meta-model', 'object process methodology', {'weight': 0.7})
('meta-model', 'model driven engineering', {'weight': 0.7})
('meta-model', 'international standard book number', {'weight': 0.6})
('meta-model', 'implementation', {'weight': 0.6})
('meta-model', 'modularity (programming)', {'weight': 0.6})
('meta-model', 'xml transformation language', {'weight': 0.7})
('meta-model', 'interface (computer science)', {'weight': 0.6})
('meta-model', 'polymorphism (computer science)', {'weight': 0.6})
('meta-model', 'object-oriented programming', {'weight': 0.6})
('meta-model', 'business reference model', {'weight': 0.7})
('meta-model', 'constructor (computer science)', {'weight': 0.6})
('meta-model', 'metadata', {'weight': 0.7})
('meta-model', 'meta-object protocol', {'weight': 0.6})
('meta-model', 'revision control', {'weight': 0.6})
('meta-model', 'virtual methods', {'weight': 0.6})
('meta-model', 'destructor (computer science)', {'weight': 0.6})
('meta-model', 'abstract data types', {'weight': 0.6})
('meta-model', 'generic eclipse modeling system', {'weight': 0.7})
('meta-model', 'operator overloading', {'weight': 0.6})
('meta-model', 'modaf meta-model', {'weight': 0.7})
('meta-model', 'domain specific language', {'weight': 0.7})
('meta-model', 'subroutine', {'weight': 0.6})
('meta-model', 'surrogate model', {'weight': 0.7})
('meta-model', 'database', {'weight': 0.6})
('meta-model', 'transformation language', {'weight': 0.7})
('meta-model', 'model-driven architecture', {'weight': 0.7})
('meta-model', 'meta-model', {'weight': 1})
('meta-model', 'object creation', {'weight': 0.6})
('meta-model', 'method overriding', {'weight': 0.6})
('meta-model', 'viatra', {'weight': 0.7})
('meta-model', 'balance (accounting)', {'weight': 0.6})
('meta-model', 'kermeta', {'weight': 0.7})
('meta-model', 'abstraction layer', {'weight': 0.6})
('meta-model', 'mof queries/views/transformations', {'weight': 0.7})
('interface (computer science)', 'encapsulation (object-oriented programming)', {'weight': 0.6})
('interface (computer science)', 'object lifetime', {'weight': 0.6})
('interface (computer science)', 'computer bus', {'weight': 0.7})
('interface (computer science)', 'class (computer science)', {'weight': 0.6})
('interface (computer science)', 'meta-model', {'weight': 0.6})
('interface (computer science)', 'implementation (computer science)', {'weight': 0.7})
('interface (computer science)', 'abstraction inversion', {'weight': 0.7})
('interface (computer science)', 'procedure (computer science)', {'weight': 0.6})
('interface (computer science)', 'structured programming', {'weight': 0.6})
('interface (computer science)', 'java (programming language)', {'weight': 0.6})
('interface (computer science)', 'class (computer programming)', {'weight': 0.6})
('interface (computer science)', 'java language', {'weight': 0.6})
('interface (computer science)', 'common lisp object system', {'weight': 0.6})
('interface (computer science)', 'application programming interface', {'weight': 0.7})
('interface (computer science)', 'modular programming', {'weight': 0.7})
('interface (computer science)', 'international standard book number', {'weight': 0.6})
('interface (computer science)', 'implementation', {'weight': 0.6})
('interface (computer science)', 'modularity (programming)', {'weight': 0.6})
('interface (computer science)', 'business interoperability interface', {'weight': 0.7})
('interface (computer science)', 'interface (computer science)', {'weight': 1})
('interface (computer science)', 'polymorphism (computer science)', {'weight': 0.6})
('interface (computer science)', 'object-oriented programming', {'weight': 0.6})
('interface (computer science)', 'virtual inheritance', {'weight': 0.7})
('interface (computer science)', 'constructor (computer science)', {'weight': 0.6})
('interface (computer science)', 'software componentry', {'weight': 0.7})
('interface (computer science)', 'interfaces', {'weight': 0.5})
('interface (computer science)', 'meta-object protocol', {'weight': 0.6})
('interface (computer science)', 'revision control', {'weight': 0.6})
('interface (computer science)', 'virtual methods', {'weight': 0.6})
('interface (computer science)', 'destructor (computer science)', {'weight': 0.6})
('interface (computer science)', 'abstract data types', {'weight': 0.6})
('interface (computer science)', 'implementation inheritance', {'weight': 0.7})
('interface (computer science)', 'operator overloading', {'weight': 0.6})
('interface (computer science)', 'subroutine', {'weight': 0.6})
('interface (computer science)', 'inheritance semantics', {'weight': 0.7})
('interface (computer science)', 'database', {'weight': 0.6})
('interface (computer science)', 'hard disk drive interface', {'weight': 0.7})
('interface (computer science)', 'programming constructs', {'weight': 0.5})
('interface (computer science)', 'application binary interface', {'weight': 0.7})
('interface (computer science)', 'object creation', {'weight': 0.6})
('interface (computer science)', 'method overriding', {'weight': 0.6})
('interface (computer science)', 'balance (accounting)', {'weight': 0.6})
('interface (computer science)', 'abstraction layer', {'weight': 0.6})
('object-oriented programming', 'encapsulation (object-oriented programming)', {'weight': 0.6})
('object-oriented programming', 'class (computer programming)', {'weight': 0.6})
('object-oriented programming', 'object database', {'weight': 0.7})
('object-oriented programming', 'class (computer science)', {'weight': 0.6})
('object-oriented programming', 'object-relational mapping', {'weight': 0.7})
('object-oriented programming', 'cades', {'weight': 0.7})
('object-oriented programming', 'object association', {'weight': 0.7})
('object-oriented programming', 'procedure (computer science)', {'weight': 0.6})
('object-oriented programming', 'structured programming', {'weight': 0.6})
('object-oriented programming', 'java (programming language)', {'weight': 0.6})
('object-oriented programming', 'object lifetime', {'weight': 0.6})
('object-oriented programming', 'java language', {'weight': 0.6})
('object-oriented programming', 'common lisp object system', {'weight': 0.6})
('object-oriented programming', 'international standard book number', {'weight': 0.6})
('object-oriented programming', 'implementation', {'weight': 0.6})
('object-oriented programming', 'modularity (programming)', {'weight': 0.6})
('object-oriented programming', 'interface description language', {'weight': 0.7})
('object-oriented programming', 'lepus3', {'weight': 0.7})
('object-oriented programming', 'interface (computer science)', {'weight': 0.6})
('object-oriented programming', 'the third manifesto', {'weight': 0.7})
('object-oriented programming', 'polymorphism (computer science)', {'weight': 0.6})
('object-oriented programming', 'object-oriented programming', {'weight': 1})
('object-oriented programming', 'jeroo', {'weight': 0.7})
('object-oriented programming', 'constructor (computer science)', {'weight': 0.6})
('object-oriented programming', 'design by contract', {'weight': 0.7})
('object-oriented programming', 'object modeling language', {'weight': 0.7})
('object-oriented programming', 'computer programming portal', {'weight': 0.7})
('object-oriented programming', 'meta-object protocol', {'weight': 0.6})
('object-oriented programming', 'revision control', {'weight': 0.6})
('object-oriented programming', 'programming paradigms', {'weight': 0.5})
('object-oriented programming', 'destructor (computer science)', {'weight': 0.6})
('object-oriented programming', 'common object request broker architecture', {'weight': 0.7})
('object-oriented programming', 'abstract data types', {'weight': 0.6})
('object-oriented programming', 'component-based software engineering', {'weight': 0.7})
('object-oriented programming', 'operator overloading', {'weight': 0.6})
('object-oriented programming', 'comparison of programming languages (object-oriented programming)', {'weight': 0.7})
('object-oriented programming', 'subroutine', {'weight': 0.6})
('object-oriented programming', 'virtual methods', {'weight': 0.6})
('object-oriented programming', 'distributed component object model', {'weight': 0.7})
('object-oriented programming', 'database', {'weight': 0.6})
('object-oriented programming', 'idef4', {'weight': 0.7})
('object-oriented programming', 'object-relational impedance mismatch', {'weight': 0.7})
('object-oriented programming', 'object-oriented analysis and design', {'weight': 0.7})
('object-oriented programming', 'meta-model', {'weight': 0.6})
('object-oriented programming', 'comparison of programming paradigms', {'weight': 0.7})
('object-oriented programming', 'object creation', {'weight': 0.6})
('object-oriented programming', 'method overriding', {'weight': 0.6})
('object-oriented programming', 'balance (accounting)', {'weight': 0.6})
('object-oriented programming', 'abstraction layer', {'weight': 0.6})
('meta-object protocol', 'encapsulation (object-oriented programming)', {'weight': 0.6})
('meta-object protocol', 'class (computer programming)', {'weight': 0.6})
('meta-object protocol', 'class (computer science)', {'weight': 0.6})
('meta-object protocol', 'openc++', {'weight': 0.7})
('meta-object protocol', 'joose javascript meta object system', {'weight': 0.7})
('meta-object protocol', 'procedure (computer science)', {'weight': 0.6})
('meta-object protocol', 'structured programming', {'weight': 0.6})
('meta-object protocol', 'java (programming language)', {'weight': 0.6})
('meta-object protocol', 'object lifetime', {'weight': 0.6})
('meta-object protocol', 'java language', {'weight': 0.6})
('meta-object protocol', 'common lisp object system', {'weight': 0.6})
('meta-object protocol', 'international standard book number', {'weight': 0.6})
('meta-object protocol', 'implementation', {'weight': 0.6})
('meta-object protocol', 'modularity (programming)', {'weight': 0.6})
('meta-object protocol', 'kind (type theory)', {'weight': 0.7})
('meta-object protocol', 'interface (computer science)', {'weight': 0.6})
('meta-object protocol', 'unified modeling language', {'weight': 0.7})
('meta-object protocol', 'polymorphism (computer science)', {'weight': 0.6})
('meta-object protocol', 'object-oriented programming', {'weight': 0.6})
('meta-object protocol', 'object (computer science)', {'weight': 0.5})
('meta-object protocol', 'constructor (computer science)', {'weight': 0.6})
('meta-object protocol', 'openjava', {'weight': 0.7})
('meta-object protocol', 'groovy', {'weight': 0.7})
('meta-object protocol', 'meta-object protocol', {'weight': 1})
('meta-object protocol', 'revision control', {'weight': 0.6})
('meta-object protocol', 'virtual methods', {'weight': 0.6})
('meta-object protocol', 'destructor (computer science)', {'weight': 0.6})
('meta-object protocol', 'abstract data types', {'weight': 0.6})
('meta-object protocol', 'operator overloading', {'weight': 0.6})
('meta-object protocol', 'moose perl meta object system', {'weight': 0.7})
('meta-object protocol', 'subroutine', {'weight': 0.6})
('meta-object protocol', 'database', {'weight': 0.6})
('meta-object protocol', 'metaclass', {'weight': 0.7})
('meta-object protocol', 'meta-model', {'weight': 0.6})
('meta-object protocol', 'object creation', {'weight': 0.6})
('meta-object protocol', 'method overriding', {'weight': 0.6})
('meta-object protocol', 'balance (accounting)', {'weight': 0.6})
('meta-object protocol', 'abstraction layer', {'weight': 0.6})
('meta-object protocol', 'javassist', {'weight': 0.7})
('database', 'encapsulation (object-oriented programming)', {'weight': 0.6})
('database', 'object lifetime', {'weight': 0.6})
('database', 'class (computer science)', {'weight': 0.6})
('database', 'procedure (computer science)', {'weight': 0.6})
('database', 'structured programming', {'weight': 0.6})
('database', 'java (programming language)', {'weight': 0.6})
('database', 'class (computer programming)', {'weight': 0.6})
('database', 'java language', {'weight': 0.6})
('database', 'common lisp object system', {'weight': 0.6})
('database', 'international standard book number', {'weight': 0.6})
('database', 'implementation', {'weight': 0.6})
('database', 'modularity (programming)', {'weight': 0.6})
('database', 'interface (computer science)', {'weight': 0.6})
('database', 'polymorphism (computer science)', {'weight': 0.6})
('database', 'object-oriented programming', {'weight': 0.6})
('database', 'constructor (computer science)', {'weight': 0.6})
('database', 'database theory', {'weight': 0.5})
('database', 'meta-object protocol', {'weight': 0.6})
('database', 'revision control', {'weight': 0.6})
('database', 'virtual methods', {'weight': 0.6})
('database', 'destructor (computer science)', {'weight': 0.6})
('database', 'abstract data types', {'weight': 0.6})
('database', 'operator overloading', {'weight': 0.6})
('database', 'subroutine', {'weight': 0.6})
('database', 'database management systems', {'weight': 0.5})
('database', 'database', {'weight': 1})
('database', 'meta-model', {'weight': 0.6})
('database', 'object creation', {'weight': 0.6})
('database', 'method overriding', {'weight': 0.6})
('database', 'databases', {'weight': 0.5})
('database', 'balance (accounting)', {'weight': 0.6})
('database', 'abstraction layer', {'weight': 0.6})
('virtual methods', 'encapsulation (object-oriented programming)', {'weight': 0.6})
('virtual methods', 'object lifetime', {'weight': 0.6})
('virtual methods', 'class (computer science)', {'weight': 0.6})
('virtual methods', 'superclass', {'weight': 0.7})
('virtual methods', 'procedure (computer science)', {'weight': 0.6})
('virtual methods', 'structured programming', {'weight': 0.6})
('virtual methods', 'java (programming language)', {'weight': 0.6})
('virtual methods', 'class (computer programming)', {'weight': 0.6})
('virtual methods', 'java language', {'weight': 0.6})
('virtual methods', 'common lisp object system', {'weight': 0.6})
('virtual methods', 'international standard book number', {'weight': 0.6})
('virtual methods', 'implementation', {'weight': 0.6})
('virtual methods', 'modularity (programming)', {'weight': 0.6})
('virtual methods', 'interface (computer science)', {'weight': 0.6})
('virtual methods', 'polymorphism (computer science)', {'weight': 0.6})
('virtual methods', 'object-oriented programming', {'weight': 0.6})
('virtual methods', 'virtual inheritance', {'weight': 0.7})
('virtual methods', 'constructor (computer science)', {'weight': 0.6})
('virtual methods', 'meta-object protocol', {'weight': 0.6})
('virtual methods', 'revision control', {'weight': 0.6})
('virtual methods', 'virtual methods', {'weight': 1})
('virtual methods', 'destructor (computer science)', {'weight': 0.6})
('virtual methods', 'method (computer programming)', {'weight': 0.5})
('virtual methods', 'abstract data types', {'weight': 0.6})
('virtual methods', 'operator overloading', {'weight': 0.6})
('virtual methods', 'subroutine', {'weight': 0.6})
('virtual methods', 'database', {'weight': 0.6})
('virtual methods', 'inheritance', {'weight': 0.7})
('virtual methods', 'meta-model', {'weight': 0.6})
('virtual methods', 'c++', {'weight': 0.5})
('virtual methods', 'object creation', {'weight': 0.6})
('virtual methods', 'method overriding', {'weight': 0.6})
('virtual methods', 'balance (accounting)', {'weight': 0.6})
('virtual methods', 'abstraction layer', {'weight': 0.6})
