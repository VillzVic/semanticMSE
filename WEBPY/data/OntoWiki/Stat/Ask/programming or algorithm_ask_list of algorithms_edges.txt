('adaptive-additive algorithm', 'sound synthesis', {'weight': 0.7})
('adaptive-additive algorithm', 'holography', {'weight': 0.7})
('adaptive-additive algorithm', 'fourier optics', {'weight': 0.7})
('adaptive-additive algorithm', 'gerchberg\xe2\x80\x93saxton algorithm', {'weight': 0.7})
('adaptive-additive algorithm', 'physical optics', {'weight': 0.5})
('adaptive-additive algorithm', 'digital signal processing', {'weight': 0.5})
('adaptive-additive algorithm', 'interferometry', {'weight': 0.7})
('entropy', 'orders of magnitude (entropy)', {'weight': 0.7})
('entropy', 'state functions', {'weight': 0.5})
('entropy', 'thermodynamic databases for pure substances', {'weight': 0.7})
('entropy', 'concepts in physics', {'weight': 0.5})
('entropy', 'entropy', {'weight': 1})
('entropy', 'entropy (information theory)', {'weight': 0.7})
('entropy', 'multiplicity function', {'weight': 0.7})
('entropy', 'philosophy of thermal and statistical physics', {'weight': 0.5})
('entropy', 'geometrical frustration', {'weight': 0.7})
('entropy', 'entropy (computing)', {'weight': 0.7})
('entropy', 'clausius\xe2\x80\x93duhem inequality', {'weight': 0.7})
('entropy', 'departure function', {'weight': 0.7})
('entropy', 'thermodynamic potential', {'weight': 0.7})
('entropy', 'entropy rate', {'weight': 0.7})
('entropy', 'entropy and life', {'weight': 0.7})
('entropy', "stirling's formula", {'weight': 0.7})
('entropy', 'configuration entropy', {'weight': 0.7})
('entropy', 'autocatalytic reactions and order creation', {'weight': 0.7})
('entropy', 'laws of thermodynamics', {'weight': 0.7})
('entropy', 'brownian ratchet', {'weight': 0.7})
('entropy', 'enthalpy', {'weight': 0.7})
('entropy', 'entropy (order and disorder)', {'weight': 0.7})
('binary splitting', 'computer arithmetic algorithms', {'weight': 0.5})
('computational geometry', 'computational geometry', {'weight': 1})
('computational geometry', 'digital geometry', {'weight': 0.7})
('computational geometry', 'list of numerical computational geometry topics', {'weight': 0.7})
('computational geometry', 'computational topology', {'weight': 0.7})
('computational geometry', 'robotics', {'weight': 0.7})
('computational geometry', 'tricomplex number', {'weight': 0.7})
('computational geometry', 'wikiversity:computer-aided geometric design', {'weight': 0.7})
('computational geometry', 'discrete geometry', {'weight': 0.7})
('computational geometry', 'cam', {'weight': 0.7})
('computational geometry', 'list of combinatorial computational geometry topics', {'weight': 0.7})
('computational geometry', 'wikiversity:topic:computational geometry', {'weight': 0.7})
('computational geometry', 'solid modeling', {'weight': 0.7})
('computational geometry', 'space partitioning', {'weight': 0.7})
('computational geometry', 'cae', {'weight': 0.7})
('computational geometry', 'cad', {'weight': 0.7})
('join (sql)', 'sql keywords', {'weight': 0.5})
('join (sql)', 'set_operations_(sql)', {'weight': 0.7})
('join (sql)', 'join (relational algebra)', {'weight': 0.7})
("dijkstra's algorithm", 'longest path problem', {'weight': 0.7})
("dijkstra's algorithm", 'search algorithms', {'weight': 0.5})
("dijkstra's algorithm", 'combinatorial optimization', {'weight': 0.5})
("dijkstra's algorithm", 'graph algorithms', {'weight': 0.5})
("dijkstra's algorithm", 'routing algorithms', {'weight': 0.5})
("dijkstra's algorithm", 'a* search algorithm', {'weight': 0.7})
("dijkstra's algorithm", 'euclidean shortest path', {'weight': 0.7})
("dijkstra's algorithm", 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.7})
("dijkstra's algorithm", 'flood fill', {'weight': 0.7})
("dijkstra's algorithm", 'computer science portal', {'weight': 0.7})
("dijkstra's algorithm", 'dutch inventions', {'weight': 0.5})
("dijkstra's algorithm", "johnson's algorithm", {'weight': 0.7})
("dijkstra's algorithm", 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.7})
("dijkstra's algorithm", '1959 in computer science', {'weight': 0.5})
("edmonds's algorithm", 'graph algorithms', {'weight': 0.5})
('graph drawing', 'graph drawing', {'weight': 1})
('gr\xe3\xb6bner basis', 'regular chains', {'weight': 0.7})
('gr\xe3\xb6bner basis', 'rewriting systems', {'weight': 0.5})
('gr\xe3\xb6bner basis', 'invariant theory', {'weight': 0.5})
('gr\xe3\xb6bner basis', 'commutative algebra', {'weight': 0.5})
('gr\xe3\xb6bner basis', 'algebraic geometry', {'weight': 0.5})
('gr\xe3\xb6bner basis', 'graver basis', {'weight': 0.7})
('gr\xe3\xb6bner basis', 'gr\xe3\xb6bner\xe2\x80\x93shirshov basis', {'weight': 0.7})
('gr\xe3\xb6bner basis', "faug\xe3\xa8re's f4 and f5 algorithms", {'weight': 0.7})
('gr\xe3\xb6bner basis', "buchberger's algorithm", {'weight': 0.7})
('gr\xe3\xb6bner basis', 'computer algebra', {'weight': 0.5})
('keyed-hash message authentication code', 'message authentication codes', {'weight': 0.5})
('keyed-hash message authentication code', 'hashing', {'weight': 0.5})
('earliest deadline first scheduling', 'dynamic priority scheduling', {'weight': 0.7})
('earliest deadline first scheduling', 'real-time computing', {'weight': 0.5})
('earliest deadline first scheduling', 'processor scheduling algorithms', {'weight': 0.5})
("karn's algorithm", 'transmission control protocol', {'weight': 0.5})
("karn's algorithm", 'networking algorithms', {'weight': 0.5})
('johnson algorithm', 'graph algorithms', {'weight': 0.5})
('jaccard index', "mountford's index of similarity", {'weight': 0.7})
('jaccard index', 'hamming distance', {'weight': 0.7})
('jaccard index', 'most frequent k characters', {'weight': 0.7})
('jaccard index', 'clustering criteria', {'weight': 0.5})
('jaccard index', "dice's coefficient", {'weight': 0.7})
('jaccard index', 'simple matching coefficient', {'weight': 0.7})
('jaccard index', 'metricated', {'weight': 0.7})
('jaccard index', 'tversky index', {'weight': 0.7})
('jaccard index', 's\xe3\xb8rensen similarity index', {'weight': 0.7})
('jaccard index', 'string similarity measures', {'weight': 0.5})
('jaccard index', 'correlation', {'weight': 0.7})
('jaccard index', 'mutual information', {'weight': 0.7})
('jaccard index', 'index numbers', {'weight': 0.5})
('jaccard index', 'measure theory', {'weight': 0.5})
('jump point search', 'algorithms and data structures stubs', {'weight': 0.5})
('jump point search', 'computer science stubs', {'weight': 0.5})
('jump point search', 'graph algorithms', {'weight': 0.5})
('jump point search', 'search algorithms', {'weight': 0.5})
('jump point search', 'game artificial intelligence', {'weight': 0.5})
('lenstra elliptic curve factorization', 'integer factorization algorithms', {'weight': 0.5})
('lenstra elliptic curve factorization', 'ubasic', {'weight': 0.7})
('lenstra elliptic curve factorization', 'finite fields', {'weight': 0.5})
('connected-component labeling', 'feature extraction', {'weight': 0.7})
('connected-component labeling', 'image analysis', {'weight': 0.7})
('connected-component labeling', 'computer vision', {'weight': 0.7})
('connected-component labeling', 'union find', {'weight': 0.7})
('connected-component labeling', 'flood fill', {'weight': 0.7})
('connected-component labeling', 'blob detection', {'weight': 0.7})
('connected-component labeling', 'graph traversal', {'weight': 0.7})
('connected-component labeling', 'connected component (graph theory)', {'weight': 0.7})
('computational linguistics', 'linguistics', {'weight': 0.5})
('computational linguistics', 'formal sciences', {'weight': 0.5})
('computational linguistics', 'mind and brain portal', {'weight': 0.7})
('computational linguistics', 'ai portal', {'weight': 0.7})
('computational linguistics', 'cognitive science', {'weight': 0.5})
('computational linguistics', 'computational linguistics', {'weight': 1})
('computational linguistics', 'applied linguistics', {'weight': 0.5})
('computus', 'christianity portal', {'weight': 0.7})
('computus', 'calendar algorithms', {'weight': 0.5})
('computus', 'easter date', {'weight': 0.5})
('computus', 'crucifixion darkness', {'weight': 0.7})
('computus', 'christian terminology', {'weight': 0.5})
('computus', 'reform of the date of easter', {'weight': 0.7})
('computus', 'christian zeller', {'weight': 0.7})
('beam search', 'search algorithms', {'weight': 0.5})
('biconjugate gradient method', 'conjugate gradient method', {'weight': 0.7})
('biconjugate gradient method', 'numerical linear algebra', {'weight': 0.5})
('biconjugate gradient method', 'gradient methods', {'weight': 0.5})
('biconjugate gradient method', 'biconjugate gradient stabilized method', {'weight': 0.7})
('algorithms', 'list of important publications in theoretical computer science - algorithms', {'weight': 0.7})
('algorithms', 'algorithmic composition', {'weight': 0.7})
('algorithms', 'computability theory', {'weight': 0.7})
('algorithms', 'algorithmic synthesis', {'weight': 0.7})
('algorithms', 'list of algorithm general topics', {'weight': 0.7})
('algorithms', 'algorithms', {'weight': 1})
('algorithms', 'algorithm engineering', {'weight': 0.7})
('algorithms', 'mathematical logic', {'weight': 0.5})
('algorithms', 'computational complexity theory', {'weight': 0.7})
('algorithms', 'algorithmic trading', {'weight': 0.7})
('algorithms', 'abstract machine', {'weight': 0.7})
('algorithms', 'theory of computation', {'weight': 0.7})
('algorithms', 'numerical mathematics consortium', {'weight': 0.7})
('algorithms', 'garbage in, garbage out', {'weight': 0.7})
('algorithms', 'introduction to algorithms', {'weight': 0.7})
('algorithms', 'theoretical computer science', {'weight': 0.5})
('hough transform', 'hough transform', {'weight': 1})
('hough transform', 'template matching', {'weight': 0.7})
('hough transform', 'randomized hough transform', {'weight': 0.7})
('hough transform', 'radon transform', {'weight': 0.7})
('hough transform', 'image processing', {'weight': 0.5})
('hough transform', 'outline of object recognition', {'weight': 0.7})
('interpolation search', 'search algorithms', {'weight': 0.5})
('interpolation search', 'ternary search', {'weight': 0.7})
('interpolation search', 'exponential search', {'weight': 0.7})
('interpolation search', 'hash table', {'weight': 0.7})
('interpolation search', 'binary search', {'weight': 0.7})
('interpolation search', 'linear search', {'weight': 0.7})
('gouraud shading', 'computer graphics algorithms', {'weight': 0.5})
('gouraud shading', 'computer graphics portal', {'weight': 0.7})
('gouraud shading', 'list of common shading algorithms', {'weight': 0.7})
('gouraud shading', 'blinn\xe2\x80\x93phong shading model', {'weight': 0.7})
('gouraud shading', 'virtual reality', {'weight': 0.5})
('gouraud shading', 'shading', {'weight': 0.5})
('gouraud shading', 'phong shading', {'weight': 0.7})
('k-means++', 'data clustering algorithms', {'weight': 0.5})
('k-means++', 'statistical algorithms', {'weight': 0.5})
('least squares', 'bayesian mmse estimator', {'weight': 0.7})
('least squares', 'least squares', {'weight': 1})
('least squares', 'squared deviations', {'weight': 0.7})
('least squares', 'proximal gradient methods for learning', {'weight': 0.7})
('least squares', 'regression analysis', {'weight': 0.5})
('least squares', 'measurement uncertainty', {'weight': 0.7})
('least squares', 'root mean square', {'weight': 0.7})
('least squares', 'best linear unbiased estimator', {'weight': 0.7})
('least squares', 'best linear unbiased prediction', {'weight': 0.7})
('least squares', 'adjustment of observations', {'weight': 0.7})
('least squares', 'least absolute deviation', {'weight': 0.7})
('least squares', 'quadratic loss function', {'weight': 0.7})
('least squares', 'mathematical optimization', {'weight': 0.5})
('least squares', 'single-equation methods (econometrics)', {'weight': 0.5})
('least squares', 'mathematical and quantitative methods (economics)', {'weight': 0.5})
('least squares', 'gauss\xe2\x80\x93markov theorem', {'weight': 0.7})
('least squares', 'l2 norm', {'weight': 0.7})
('alpha-beta pruning', 'pruning (algorithm)', {'weight': 0.7})
('alpha-beta pruning', 'search algorithms', {'weight': 0.5})
('alpha-beta pruning', 'game artificial intelligence', {'weight': 0.5})
('alpha-beta pruning', 'transposition table', {'weight': 0.7})
('alpha-beta pruning', 'optimization algorithms and methods', {'weight': 0.5})
('alpha-beta pruning', 'graph algorithms', {'weight': 0.5})
('alpha-beta pruning', 'branch and bound', {'weight': 0.7})
('alpha-beta pruning', 'negamax', {'weight': 0.7})
('alpha-beta pruning', 'combinatorial optimization', {'weight': 0.7})
('alpha-beta pruning', 'minimax', {'weight': 0.7})
('delta encoding', 'string-to-string correction problem', {'weight': 0.7})
('delta encoding', 'data differencing', {'weight': 0.7})
('delta encoding', 'xdelta', {'weight': 0.7})
('delta encoding', 'lossless compression algorithms', {'weight': 0.5})
('delta encoding', 'source code control system', {'weight': 0.7})
('delta encoding', 'interleaved deltas', {'weight': 0.7})
('hubs and authorities', 'link analysis', {'weight': 0.5})
('image compression', 'image compression', {'weight': 1})
("karmarkar's algorithm", 'optimization algorithms and methods', {'weight': 0.5})
("karmarkar's algorithm", 'software patent law', {'weight': 0.5})
('byzantine fault tolerance', 'distributed computing problems', {'weight': 0.5})
('byzantine fault tolerance', 'public-key cryptography', {'weight': 0.5})
('byzantine fault tolerance', 'quantum byzantine agreement', {'weight': 0.7})
('byzantine fault tolerance', 'failure', {'weight': 0.5})
('byzantine fault tolerance', 'byzantine paxos', {'weight': 0.7})
('byzantine fault tolerance', 'consensus (computer science)', {'weight': 0.7})
('byzantine fault tolerance', 'theory of computation', {'weight': 0.5})
('byzantine fault tolerance', 'atomic commit', {'weight': 0.7})
('byzantine fault tolerance', 'fault-tolerant computer systems', {'weight': 0.5})
('byzantine fault tolerance', 'brooks\xe2\x80\x93iyengar algorithm', {'weight': 0.7})
('byzantine fault tolerance', 'fault tolerance', {'weight': 0.5})
('arithmetic coding', 'lossless compression algorithms', {'weight': 0.5})
('arithmetic coding', 'data compression', {'weight': 0.7})
('fuzzy clustering', 'expectation-maximization algorithm', {'weight': 0.7})
('fuzzy clustering', 'cluster analysis', {'weight': 0.7})
('fuzzy clustering', 'flame clustering', {'weight': 0.7})
('fuzzy clustering', 'data clustering algorithms', {'weight': 0.5})
('duality (mathematics)', 'duality (optimization)', {'weight': 0.7})
('duality (mathematics)', 't-duality', {'weight': 0.7})
('duality (mathematics)', 'adjoint functor', {'weight': 0.7})
('duality (mathematics)', 'mirror symmetry', {'weight': 0.7})
('duality (mathematics)', 'dual abelian variety', {'weight': 0.7})
('duality (mathematics)', 'linear programming#duality', {'weight': 0.7})
('duality (mathematics)', 'dual numbers', {'weight': 0.7})
('duality (mathematics)', 'list of dualities', {'weight': 0.7})
('duality (mathematics)', 'autonomous category', {'weight': 0.7})
('duality (mathematics)', 'duality principle (disambiguation)', {'weight': 0.7})
('duality (mathematics)', 'duality (electrical engineering)', {'weight': 0.7})
('duality (mathematics)', 'duality theories', {'weight': 0.5})
('duality (mathematics)', 'lagrange duality', {'weight': 0.7})
('duality (mathematics)', 'dual lattice', {'weight': 0.7})
('duality (mathematics)', 'petrie duality', {'weight': 0.7})
('duality (mathematics)', 'dual basis', {'weight': 0.7})
('duality (mathematics)', 'langlands dual', {'weight': 0.7})
('duality (mathematics)', 'matlis duality', {'weight': 0.7})
('duality (mathematics)', 'dualizing module', {'weight': 0.7})
('duality (mathematics)', 'associative algebra', {'weight': 0.7})
('duality (mathematics)', 'dual code', {'weight': 0.7})
('duality (mathematics)', 'koszul duality', {'weight': 0.7})
('duality (mathematics)', 'dual (category theory)', {'weight': 0.7})
('exponential function', 'list of integrals of exponential functions', {'weight': 0.7})
('exponential function', 'special hypergeometric functions', {'weight': 0.5})
('exponential function', 'half-exponential function', {'weight': 0.7})
('exponential function', 'carlitz exponential', {'weight': 0.7})
('exponential function', 'list of exponential topics', {'weight': 0.7})
('exponential function', 'mathematics portal', {'weight': 0.7})
('exponential function', 'exponentiation', {'weight': 0.7})
('exponential function', 'exponential field', {'weight': 0.7})
('exponential function', 'exponential decay', {'weight': 0.7})
('exponential function', 'exponential growth', {'weight': 0.7})
('exponential function', 'approximating natural exponents (log base e)', {'weight': 0.7})
('exponential function', 'p-adic exponential function', {'weight': 0.7})
('exponential function', 'analytic functions', {'weight': 0.5})
('exponential function', 'pad\xe3\xa9 approximation', {'weight': 0.7})
('exponential function', 'tetration', {'weight': 0.7})
('exponential function', 'exponentials', {'weight': 0.5})
('exponential function', 'elementary special functions', {'weight': 0.5})
('exponential function', 'characterizations of the exponential function', {'weight': 0.7})
('exponential function', 'e (mathematical constant)', {'weight': 0.7})
('complete-linkage clustering', 'data clustering algorithms', {'weight': 0.5})
('distributed algorithm', 'distributed algorithms', {'weight': 0.5})
('interior point method', 'optimization algorithms and methods', {'weight': 0.5})
('interior point method', 'augmented lagrangian method', {'weight': 0.7})
('interior point method', 'penalty method', {'weight': 0.7})
('interior point method', 'karush\xe2\x80\x93kuhn\xe2\x80\x93tucker conditions', {'weight': 0.7})
('fractal dimension', 'multifractal analysis', {'weight': 0.7})
('fractal dimension', 'dynamical systems', {'weight': 0.5})
('fractal dimension', 'fractals', {'weight': 0.5})
('fractal dimension', 'dimension theory', {'weight': 0.5})
('fractal dimension', 'fractal derivative', {'weight': 0.7})
('fractal dimension', 'chaos theory', {'weight': 0.5})
('fractal dimension', 'lacunarity', {'weight': 0.7})
('fractal dimension', 'list of fractals by hausdorff dimension', {'weight': 0.7})
('force-based algorithms (graph drawing)', 'graph algorithms', {'weight': 0.5})
('force-based algorithms (graph drawing)', 'graph drawing', {'weight': 0.5})
('force-based algorithms (graph drawing)', 'graphviz', {'weight': 0.7})
('force-based algorithms (graph drawing)', 'tulip', {'weight': 0.7})
('force-based algorithms (graph drawing)', 'prefuse', {'weight': 0.7})
('force-based algorithms (graph drawing)', 'gephi', {'weight': 0.7})
('force-based algorithms (graph drawing)', 'cytoscape', {'weight': 0.7})
('force-based algorithms (graph drawing)', 'learndiscovery', {'weight': 0.7})
('goertzel algorithm', 'fft algorithms', {'weight': 0.5})
('goertzel algorithm', "bluestein's fft algorithm", {'weight': 0.7})
('goertzel algorithm', 'digital signal processing', {'weight': 0.5})
('goertzel algorithm', 'frequency-shift keying', {'weight': 0.7})
('goertzel algorithm', 'phase-shift keying', {'weight': 0.7})
('list of algorithms', 'adaptive-additive algorithm', {'weight': 0.6})
('list of algorithms', 'growcut algorithm', {'weight': 0.6})
('list of algorithms', 'half-toning', {'weight': 0.6})
('list of algorithms', 'kirkpatrick\xe2\x80\x93seidel algorithm', {'weight': 0.6})
('list of algorithms', 'elgamal encryption', {'weight': 0.6})
('list of algorithms', 'entropy', {'weight': 0.6})
('list of algorithms', 'daitch\xe2\x80\x93mokotoff soundex', {'weight': 0.6})
('list of algorithms', 'lesk algorithm', {'weight': 0.6})
('list of algorithms', 'binary splitting', {'weight': 0.6})
('list of algorithms', 'computational geometry', {'weight': 0.6})
('list of algorithms', 'doomsday algorithm', {'weight': 0.6})
('list of algorithms', 'feature detection', {'weight': 0.6})
('list of algorithms', 'boehm garbage collector', {'weight': 0.6})
('list of algorithms', 'addition-chain exponentiation', {'weight': 0.6})
('list of algorithms', 'fractal compression', {'weight': 0.6})
('list of algorithms', 'asymmetric key algorithm', {'weight': 0.6})
('list of algorithms', 'elliptic curve cryptography', {'weight': 0.6})
('list of algorithms', 'alpha max plus beta min algorithm', {'weight': 0.6})
('list of algorithms', "fermat's factorization method", {'weight': 0.6})
('list of algorithms', 'cantor\xe2\x80\x93zassenhaus algorithm', {'weight': 0.6})
('list of algorithms', 'intersection algorithm', {'weight': 0.6})
('list of algorithms', "dijkstra's algorithm", {'weight': 0.6})
('list of algorithms', "f\xe3\xbcrer's algorithm", {'weight': 0.6})
('list of algorithms', 'flow network', {'weight': 0.6})
('list of algorithms', "edmonds's algorithm", {'weight': 0.6})
('list of algorithms', 'lz77 and lz78', {'weight': 0.6})
('list of algorithms', 'gauss\xe2\x80\x93newton algorithm', {'weight': 0.6})
('list of algorithms', 'bisection method', {'weight': 0.6})
('list of algorithms', 'edmonds\xe2\x80\x93karp algorithm', {'weight': 0.6})
('list of algorithms', 'approximate counting algorithm', {'weight': 0.6})
('list of algorithms', 'feature space', {'weight': 0.6})
('list of algorithms', 'bentley\xe2\x80\x93ottmann algorithm', {'weight': 0.6})
('list of algorithms', 'gr\xe3\xb6bner basis', {'weight': 0.6})
('list of algorithms', "dixon's algorithm", {'weight': 0.6})
('list of algorithms', 'keyed-hash message authentication code', {'weight': 0.6})
('list of algorithms', 'inside-outside algorithm', {'weight': 0.6})
('list of algorithms', 'importance sampling', {'weight': 0.6})
('list of algorithms', 'dpll algorithm', {'weight': 0.6})
('list of algorithms', 'lzrw', {'weight': 0.6})
('list of algorithms', 'gilbert\xe2\x80\x93johnson\xe2\x80\x93keerthi distance algorithm', {'weight': 0.6})
('list of algorithms', 'disk scheduling', {'weight': 0.6})
('list of algorithms', "benson's algorithm", {'weight': 0.6})
('list of algorithms', 'hash join', {'weight': 0.6})
('list of algorithms', "chaitin's algorithm", {'weight': 0.6})
('list of algorithms', 'entropy encoding', {'weight': 0.6})
('list of algorithms', 'bcjr algorithm', {'weight': 0.6})
('list of algorithms', 'hamming distance', {'weight': 0.6})
('list of algorithms', 'lempel\xe2\x80\x93ziv\xe2\x80\x93storer\xe2\x80\x93szymanski', {'weight': 0.6})
('list of algorithms', 'crank-nicolson method', {'weight': 0.6})
('list of algorithms', 'coppersmith\xe2\x80\x93winograd algorithm', {'weight': 0.6})
('list of algorithms', "heap's algorithm", {'weight': 0.6})
('list of algorithms', "dice's coefficient", {'weight': 0.6})
('list of algorithms', 'kabsch algorithm', {'weight': 0.6})
('list of algorithms', 'adaptive huffman coding', {'weight': 0.6})
('list of algorithms', "karn's algorithm", {'weight': 0.6})
('list of algorithms', 'johnson algorithm', {'weight': 0.6})
('list of algorithms', 'golden section search', {'weight': 0.6})
('list of algorithms', 'fitness proportionate selection', {'weight': 0.6})
('list of algorithms', 'delaunay triangulation', {'weight': 0.6})
('list of algorithms', 'gauss\xe2\x80\x93legendre algorithm', {'weight': 0.6})
('list of algorithms', 'computer architecture', {'weight': 0.6})
('list of algorithms', 'computational science', {'weight': 0.6})
('list of algorithms', 'euler method', {'weight': 0.6})
('list of algorithms', 'jump point search', {'weight': 0.6})
('list of algorithms', 'lenstra elliptic curve factorization', {'weight': 0.6})
('list of algorithms', 'cone tracing', {'weight': 0.6})
('list of algorithms', 'bowyer\xe2\x80\x93watson algorithm', {'weight': 0.6})
('list of algorithms', 'association rule learning', {'weight': 0.6})
('list of algorithms', 'double metaphone', {'weight': 0.6})
('list of algorithms', 'lempel\xe2\x80\x93ziv\xe2\x80\x93markov chain algorithm', {'weight': 0.6})
('list of algorithms', 'abstract algebra', {'weight': 0.6})
('list of algorithms', "lamport's bakery algorithm", {'weight': 0.6})
('list of algorithms', 'felics', {'weight': 0.6})
('list of algorithms', 'connected-component labeling', {'weight': 0.6})
('list of algorithms', 'bkm algorithm', {'weight': 0.6})
('list of algorithms', 'cooley\xe2\x80\x93tukey fft algorithm', {'weight': 0.6})
('list of algorithms', 'knuth\xe2\x80\x93bendix completion algorithm', {'weight': 0.6})
('list of algorithms', 'bch code', {'weight': 0.6})
('list of algorithms', 'computational linguistics', {'weight': 0.6})
('list of algorithms', 'divide and conquer algorithm', {'weight': 0.6})
('list of algorithms', 'data encryption standard', {'weight': 0.6})
('list of algorithms', 'error diffusion', {'weight': 0.6})
('list of algorithms', 'computus', {'weight': 0.6})
('list of algorithms', 'genetic algorithms', {'weight': 0.6})
('list of algorithms', 'convex hull algorithms', {'weight': 0.6})
('list of algorithms', 'flood fill', {'weight': 0.6})
('list of algorithms', 'bead sort', {'weight': 0.6})
('list of algorithms', "cristian's algorithm", {'weight': 0.6})
('list of algorithms', 'll parser', {'weight': 0.6})
('list of algorithms', 'elementary function (differential algebra)', {'weight': 0.6})
('list of algorithms', 'lr parser', {'weight': 0.6})
('list of algorithms', 'gibbs sampling', {'weight': 0.6})
('list of algorithms', 'hash function', {'weight': 0.6})
('list of algorithms', 'b-spline', {'weight': 0.6})
('list of algorithms', 'algorithms for calculating variance', {'weight': 0.6})
('list of algorithms', 'birkhoff interpolation', {'weight': 0.6})
('list of algorithms', 'clock with adaptive replacement', {'weight': 0.6})
('list of algorithms', 'elias delta coding', {'weight': 0.6})
('list of algorithms', 'assignment problem', {'weight': 0.6})
('list of algorithms', 'block truncation coding', {'weight': 0.6})
('list of algorithms', 'evolution strategy', {'weight': 0.6})
('list of algorithms', 'euclidean minimum spanning tree', {'weight': 0.6})
('list of algorithms', 'constraint satisfaction', {'weight': 0.6})
('list of algorithms', 'conjugate gradient', {'weight': 0.6})
('list of algorithms', 'diffie\xe2\x80\x93hellman key exchange', {'weight': 0.6})
('list of algorithms', 'apriori algorithm', {'weight': 0.6})
('list of algorithms', 'computer graphics', {'weight': 0.6})
('list of algorithms', 'dancing links', {'weight': 0.6})
('list of algorithms', 'bioinformatics', {'weight': 0.6})
('list of algorithms', 'computational mathematics', {'weight': 0.6})
('list of algorithms', 'biconjugate gradient method', {'weight': 0.6})
('list of algorithms', 'brownboost', {'weight': 0.6})
('list of algorithms', 'exponentiating by squaring', {'weight': 0.6})
('list of algorithms', 'inverse iteration', {'weight': 0.6})
('list of algorithms', 'extrapolation', {'weight': 0.6})
('list of algorithms', 'algorithms', {'weight': 0.5})
('list of algorithms', 'dithering', {'weight': 0.6})
('list of algorithms', 'buddy memory allocation', {'weight': 0.6})
('list of algorithms', 'boyer\xe2\x80\x93moore\xe2\x80\x93horspool algorithm', {'weight': 0.6})
('list of algorithms', 'hough transform', {'weight': 0.6})
('list of algorithms', 'data clustering', {'weight': 0.6})
('list of algorithms', 'convex set', {'weight': 0.6})
('list of algorithms', 'international data encryption algorithm', {'weight': 0.6})
('list of algorithms', 'ellipsoid method', {'weight': 0.6})
('list of algorithms', 'chain matrix multiplication', {'weight': 0.6})
('list of algorithms', 'isosurface', {'weight': 0.6})
('list of algorithms', 'histogram equalization', {'weight': 0.6})
('list of algorithms', 'bubble sort', {'weight': 0.6})
('list of algorithms', "dekker's algorithm", {'weight': 0.6})
('list of algorithms', 'interpolation search', {'weight': 0.6})
('list of algorithms', 'fnn algorithm', {'weight': 0.6})
('list of algorithms', "kosaraju's algorithm", {'weight': 0.6})
('list of algorithms', 'algorithm x', {'weight': 0.6})
('list of algorithms', 'gouraud shading', {'weight': 0.6})
('list of algorithms', 'hermite interpolation', {'weight': 0.6})
('list of algorithms', 'hungarian method', {'weight': 0.6})
('list of algorithms', 'cyclic redundancy check', {'weight': 0.6})
('list of algorithms', 'k-means++', {'weight': 0.6})
('list of algorithms', 'least squares', {'weight': 0.6})
('list of algorithms', 'cycle sort', {'weight': 0.6})
('list of algorithms', 'cuthill\xe2\x80\x93mckee algorithm', {'weight': 0.6})
('list of algorithms', 'least slack time scheduling', {'weight': 0.6})
('list of algorithms', 'alpha-beta pruning', {'weight': 0.6})
('list of algorithms', 'gauss\xe2\x80\x93seidel method', {'weight': 0.6})
('list of algorithms', 'delta encoding', {'weight': 0.6})
('list of algorithms', 'antipodal point', {'weight': 0.6})
('list of algorithms', 'demon algorithm', {'weight': 0.6})
('list of algorithms', 'chomsky normal form', {'weight': 0.6})
('list of algorithms', 'hubs and authorities', {'weight': 0.6})
('list of algorithms', 'integer linear programming', {'weight': 0.6})
('list of algorithms', 'chakravala method', {'weight': 0.6})
('list of algorithms', 'best bin first', {'weight': 0.6})
('list of algorithms', "bruun's fft algorithm", {'weight': 0.6})
('list of algorithms', 'image compression', {'weight': 0.6})
('list of algorithms', 'list of terms relating to algorithms and data structures', {'weight': 0.7})
('list of algorithms', 'gordon\xe2\x80\x93newell theorem', {'weight': 0.6})
('list of algorithms', 'discrete fourier transform', {'weight': 0.6})
('list of algorithms', "karmarkar's algorithm", {'weight': 0.6})
('list of algorithms', 'damm algorithm', {'weight': 0.6})
('list of algorithms', 'dijkstra-scholten algorithm', {'weight': 0.6})
('list of algorithms', "de casteljau's algorithm", {'weight': 0.6})
('list of algorithms', 'error detection and correction', {'weight': 0.6})
('list of algorithms', 'binary gcd algorithm', {'weight': 0.6})
('list of algorithms', 'byzantine fault tolerance', {'weight': 0.6})
('list of algorithms', 'lzjb', {'weight': 0.6})
('list of algorithms', 'levenshtein distance', {'weight': 0.6})
('list of algorithms', 'fibonacci numbers', {'weight': 0.6})
('list of algorithms', 'dbscan', {'weight': 0.6})
('list of algorithms', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.6})
('list of algorithms', 'arithmetic coding', {'weight': 0.6})
('list of algorithms', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.6})
('list of algorithms', 'extended euclidean algorithm', {'weight': 0.6})
('list of algorithms', "featherstone's algorithm", {'weight': 0.6})
('list of algorithms', 'fuzzy clustering', {'weight': 0.6})
('list of algorithms', "bluestein's fft algorithm", {'weight': 0.6})
('list of algorithms', 'join (sql)', {'weight': 0.6})
('list of algorithms', 'k-medoids', {'weight': 0.6})
('list of algorithms', 'greedy randomized adaptive search procedure', {'weight': 0.6})
('list of algorithms', 'cordic', {'weight': 0.6})
('list of algorithms', "cannon's algorithm", {'weight': 0.6})
('list of algorithms', 'graham scan', {'weight': 0.6})
('list of algorithms', 'deflate (algorithm)', {'weight': 0.6})
('list of algorithms', 'lagged fibonacci generator', {'weight': 0.6})
('list of algorithms', 'exponential function', {'weight': 0.6})
('list of algorithms', 'kalman filter', {'weight': 0.6})
('list of algorithms', 'cyk algorithm', {'weight': 0.6})
('list of algorithms', 'global illumination', {'weight': 0.6})
('list of algorithms', "huang's algorithm", {'weight': 0.6})
('list of algorithms', 'complete-linkage clustering', {'weight': 0.6})
('list of algorithms', 'combinatorics', {'weight': 0.6})
('list of algorithms', 'dantzig\xe2\x80\x93wolfe decomposition', {'weight': 0.6})
('list of algorithms', "banker's algorithm", {'weight': 0.6})
('list of algorithms', 'distributed algorithm', {'weight': 0.6})
('list of algorithms', 'baby-step giant-step', {'weight': 0.6})
('list of algorithms', 'edge detection', {'weight': 0.6})
('list of algorithms', 'interior point method', {'weight': 0.6})
('list of algorithms', 'fractal dimension', {'weight': 0.6})
('list of algorithms', '3dc', {'weight': 0.6})
('list of algorithms', 'gram\xe2\x80\x93schmidt process', {'weight': 0.6})
('list of algorithms', 'image processing', {'weight': 0.6})
('list of algorithms', 'force-based algorithms (graph drawing)', {'weight': 0.6})
('list of algorithms', "gosper's algorithm", {'weight': 0.6})
('list of algorithms', 'collision detection', {'weight': 0.6})
('list of algorithms', 'context tree weighting', {'weight': 0.6})
('list of algorithms', 'ant colony optimization', {'weight': 0.6})
('list of algorithms', 'fibonacci search technique', {'weight': 0.6})
('list of algorithms', 'lamport ordering', {'weight': 0.6})
('list of algorithms', 'constraint algorithm', {'weight': 0.6})
('list of algorithms', 'best-first search', {'weight': 0.6})
('list of algorithms', 'hyperlink-induced topic search', {'weight': 0.6})
('list of algorithms', 'dynamic markov compression', {'weight': 0.6})
('list of algorithms', 'ac-3 algorithm', {'weight': 0.6})
('list of algorithms', 'davis\xe2\x80\x93putnam algorithm', {'weight': 0.6})
('list of algorithms', 'bicubic interpolation', {'weight': 0.6})
('list of algorithms', 'binary search algorithm', {'weight': 0.6})
('list of algorithms', 'bron\xe2\x80\x93kerbosch algorithm', {'weight': 0.6})
('list of algorithms', 'gaussian elimination', {'weight': 0.6})
('list of algorithms', 'cholesky decomposition', {'weight': 0.6})
('list of algorithms', 'astronomical algorithms', {'weight': 0.6})
('list of algorithms', 'jacobi eigenvalue algorithm', {'weight': 0.6})
('list of algorithms', "booth's multiplication algorithm", {'weight': 0.6})
('list of algorithms', 'general number field sieve', {'weight': 0.6})
('list of algorithms', 'kahan summation algorithm', {'weight': 0.6})
('list of algorithms', 'forward error correction', {'weight': 0.6})
('list of algorithms', 'cubic interpolation', {'weight': 0.6})
('list of algorithms', 'geoscience', {'weight': 0.6})
('list of algorithms', 'esc algorithm', {'weight': 0.6})
('list of algorithms', 'cross-entropy method', {'weight': 0.6})
('list of algorithms', 'gene expression programming', {'weight': 0.6})
('list of algorithms', 'berlekamp\xe2\x80\x93massey algorithm', {'weight': 0.6})
('list of algorithms', 'depth-first search', {'weight': 0.6})
('list of algorithms', 'canonical lr parser', {'weight': 0.6})
('list of algorithms', 'calculus', {'weight': 0.6})
('list of algorithms', 'exponential backoff', {'weight': 0.6})
('list of algorithms', 'levenberg\xe2\x80\x93marquardt algorithm', {'weight': 0.6})
('list of algorithms', 'bucket sort', {'weight': 0.6})
('list of algorithms', 'canny edge detector', {'weight': 0.6})
('list of algorithms', 'earliest deadline first scheduling', {'weight': 0.6})
('list of algorithms', 'euclidean algorithm', {'weight': 0.6})
('list of algorithms', 'eigenvalue algorithm', {'weight': 0.6})
('list of algorithms', 'adaboost', {'weight': 0.6})
('list of algorithms', 'basis function', {'weight': 0.6})
('list of algorithms', 'd*', {'weight': 0.6})
('list of algorithms', 'fast multipole method', {'weight': 0.6})
('list of algorithms', 'computational statistics', {'weight': 0.6})
('list of algorithms', 'gauss\xe2\x80\x93jordan elimination', {'weight': 0.6})
('list of algorithms', 'lempel\xe2\x80\x93ziv\xe2\x80\x93stac', {'weight': 0.6})
('list of algorithms', 'damerau\xe2\x80\x93levenshtein distance', {'weight': 0.6})
('list of algorithms', 'hidden surface determination', {'weight': 0.6})
('list of algorithms', 'backtracking', {'weight': 0.6})
('list of algorithms', 'basic local alignment search tool', {'weight': 0.6})
('list of algorithms', "lamport's distributed mutual exclusion algorithm", {'weight': 0.6})
('list of algorithms', 'differential equation', {'weight': 0.6})
('list of algorithms', 'causality', {'weight': 0.6})
('list of algorithms', 'breadth-first search', {'weight': 0.6})
('list of algorithms', 'boyer\xe2\x80\x93moore string search algorithm', {'weight': 0.6})
('list of algorithms', 'berkeley algorithm', {'weight': 0.6})
('list of algorithms', 'lempel\xe2\x80\x93ziv\xe2\x80\x93oberhumer', {'weight': 0.6})
('list of algorithms', 'boosting (meta-algorithm)', {'weight': 0.6})
('list of algorithms', 'cyrus\xe2\x80\x93beck', {'weight': 0.6})
('list of algorithms', 'context-free grammar', {'weight': 0.6})
('list of algorithms', 'fast cosine transform', {'weight': 0.6})
('list of algorithms', 'graph drawing', {'weight': 0.6})
('list of algorithms', 'adaptive histogram equalization', {'weight': 0.6})
('list of algorithms', 'k-means clustering', {'weight': 0.6})
('list of algorithms', 'graph theory', {'weight': 0.6})
('list of algorithms', 'cryptography', {'weight': 0.6})
('list of algorithms', "knight's tour", {'weight': 0.6})
('list of algorithms', 'bitonic sorter', {'weight': 0.6})
('list of algorithms', 'gnome sort', {'weight': 0.6})
('list of algorithms', 'lzwl', {'weight': 0.6})
('list of algorithms', 'constrained delaunay triangulation', {'weight': 0.6})
('list of algorithms', 'floyd\xe2\x80\x93warshall algorithm', {'weight': 0.6})
('list of algorithms', 'dynamic programming', {'weight': 0.6})
('list of algorithms', 'earley parser', {'weight': 0.6})
('list of algorithms', 'barnes\xe2\x80\x93hut simulation', {'weight': 0.6})
('list of algorithms', 'elias gamma coding', {'weight': 0.6})
('list of algorithms', 'lempel\xe2\x80\x93ziv', {'weight': 0.6})
('list of algorithms', 'golomb coding', {'weight': 0.6})
('list of algorithms', 'cycle detection', {'weight': 0.6})
('list of algorithms', 'fibonacci coding', {'weight': 0.6})
('list of algorithms', 'bandwidth (matrix theory)', {'weight': 0.6})
('list of algorithms', 'gradient descent', {'weight': 0.6})
('list of algorithms', 'code-excited linear prediction', {'weight': 0.6})
('list of algorithms', "bor\xe5\xafvka's algorithm", {'weight': 0.6})
('list of algorithms', 'lanczos resampling', {'weight': 0.6})
('list of algorithms', 'division algorithm', {'weight': 0.6})
('list of algorithms', 'elias omega coding', {'weight': 0.6})
('list of algorithms', 'list of machine learning algorithms', {'weight': 0.7})
('list of algorithms', "grover's algorithm", {'weight': 0.6})
('list of algorithms', 'analytical hierarchy', {'weight': 0.6})
('list of algorithms', 'dynamical system', {'weight': 0.6})
('list of algorithms', 'c3 linearization', {'weight': 0.6})
('list of algorithms', 'digital signature algorithm', {'weight': 0.6})
('list of algorithms', 'computational physics', {'weight': 0.6})
('list of algorithms', 'jaro\xe2\x80\x93winkler distance', {'weight': 0.6})
('list of algorithms', 'artificial neural network', {'weight': 0.6})
('list of algorithms', 'heuristic', {'weight': 0.7})
('list of algorithms', 'combinatorial optimization', {'weight': 0.6})
('list of algorithms', 'lempel\xe2\x80\x93ziv\xe2\x80\x93welch', {'weight': 0.6})
('list of algorithms', 'estimation theory', {'weight': 0.6})
('list of algorithms', 'deutsch-jozsa algorithm', {'weight': 0.6})
('list of algorithms', 'hamming(7,4)', {'weight': 0.6})
('list of algorithms', 'image-based lighting', {'weight': 0.6})
('list of algorithms', 'de bruijn graph', {'weight': 0.6})
('list of algorithms', 'levenshtein coding', {'weight': 0.6})
('list of algorithms', 'arithmetical hierarchy', {'weight': 0.6})
('list of algorithms', 'audio data compression', {'weight': 0.6})
('list of algorithms', 'branch and cut', {'weight': 0.6})
('list of algorithms', 'knuth\xe2\x80\x93morris\xe2\x80\x93pratt algorithm', {'weight': 0.6})
('list of algorithms', 'aks primality test', {'weight': 0.6})
('list of algorithms', 'differential evolution', {'weight': 0.6})
('list of algorithms', 'insertion sort', {'weight': 0.6})
('list of algorithms', "fortune's algorithm", {'weight': 0.6})
('list of algorithms', 'fast folding algorithm', {'weight': 0.6})
('list of algorithms', 'bees algorithm', {'weight': 0.6})
('list of algorithms', 'aho\xe2\x80\x93corasick string matching algorithm', {'weight': 0.6})
('list of algorithms', 'id3 algorithm', {'weight': 0.6})
('list of algorithms', 'dtmf', {'weight': 0.6})
('list of algorithms', 'finite difference method', {'weight': 0.6})
('list of algorithms', 'block nested loop', {'weight': 0.6})
('list of algorithms', 'data mining', {'weight': 0.6})
('list of algorithms', 'flame clustering', {'weight': 0.6})
('list of algorithms', 'computer algebra', {'weight': 0.6})
('list of algorithms', 'harmony search', {'weight': 0.6})
('list of algorithms', 'lanczos iteration', {'weight': 0.6})
('list of algorithms', 'gift wrapping algorithm', {'weight': 0.6})
('list of algorithms', 'hopcroft\xe2\x80\x93karp algorithm', {'weight': 0.6})
('list of algorithms', 'decision tree learning', {'weight': 0.6})
('list of algorithms', 'delayed column generation', {'weight': 0.6})
('list of algorithms', 'adaptive coding', {'weight': 0.6})
('list of algorithms', 'deterministic automaton', {'weight': 0.6})
('list of algorithms', 'bidirectional search', {'weight': 0.6})
('list of algorithms', 'fast clipping', {'weight': 0.6})
('list of algorithms', 'ambient occlusion', {'weight': 0.6})
('list of algorithms', 'bionics', {'weight': 0.6})
('list of algorithms', 'a-law algorithm', {'weight': 0.6})
('list of algorithms', "kruskal's algorithm", {'weight': 0.6})
('list of algorithms', 'list of data structures', {'weight': 0.7})
('list of algorithms', 'contour line', {'weight': 0.6})
('list of algorithms', 'convex hull', {'weight': 0.6})
('list of algorithms', 'geometric hashing', {'weight': 0.6})
('list of algorithms', 'beam tracing', {'weight': 0.6})
('list of algorithms', 'branch and bound', {'weight': 0.6})
('list of algorithms', 'laplacian smoothing', {'weight': 0.6})
('list of algorithms', 'garbage collection (computer science)', {'weight': 0.6})
('list of algorithms', 'elevator algorithm', {'weight': 0.6})
('list of algorithms', 'hopfield net', {'weight': 0.6})
('list of algorithms', 'chien search', {'weight': 0.6})
('list of algorithms', 'lzx', {'weight': 0.6})
('list of algorithms', 'hash tree (persistent data structure)', {'weight': 0.6})
('list of algorithms', 'goldschmidt division', {'weight': 0.6})
('list of algorithms', 'convex polygon', {'weight': 0.6})
('list of algorithms', "karger's algorithm", {'weight': 0.6})
('list of algorithms', 'beam search', {'weight': 0.6})
('list of algorithms', 'index calculus algorithm', {'weight': 0.6})
('list of algorithms', "cheney's algorithm", {'weight': 0.6})
('list of algorithms', 'huffman coding', {'weight': 0.6})
('list of algorithms', 'digital signal processing', {'weight': 0.6})
('list of algorithms', 'gray code', {'weight': 0.6})
('list of algorithms', 'glr parser', {'weight': 0.6})
('list of algorithms', 'fortuna (prng)', {'weight': 0.6})
('list of algorithms', "kadane's algorithm", {'weight': 0.6})
('list of algorithms', 'interpolation', {'weight': 0.6})
('list of algorithms', 'heapsort', {'weight': 0.6})
('list of algorithms', 'duality (mathematics)', {'weight': 0.6})
('list of algorithms', 'bfgs method', {'weight': 0.6})
('list of algorithms', 'hidden markov model', {'weight': 0.6})
('list of algorithms', 'euler integration', {'weight': 0.6})
('list of algorithms', 'lagrange interpolation', {'weight': 0.6})
('list of algorithms', 'database', {'weight': 0.6})
('list of algorithms', 'information theory', {'weight': 0.6})
('list of algorithms', 'adler-32', {'weight': 0.6})
('list of algorithms', 'greatest common divisor', {'weight': 0.6})
('list of algorithms', 'backpropagation', {'weight': 0.6})
('list of algorithms', 'clipping (computer graphics)', {'weight': 0.6})
('list of algorithms', 'all pairs shortest path', {'weight': 0.6})
('list of algorithms', 'hindley-milner type inference', {'weight': 0.6})
('list of algorithms', 'incremental encoding', {'weight': 0.6})
('list of algorithms', 'bogosort', {'weight': 0.6})
('list of algorithms', 'baum\xe2\x80\x93welch algorithm', {'weight': 0.6})
('list of algorithms', 'dictionary coder', {'weight': 0.6})
('list of algorithms', 'jump search', {'weight': 0.6})
('list of algorithms', 'lagrange polynomial', {'weight': 0.6})
('list of algorithms', 'burstsort', {'weight': 0.6})
('list of algorithms', 'distributed systems', {'weight': 0.6})
('list of algorithms', 'generalised hough transform', {'weight': 0.6})
('list of algorithms', 'cone algorithm', {'weight': 0.6})
('list of algorithms', 'fair-share scheduling', {'weight': 0.6})
('list of algorithms', 'bayesian statistics', {'weight': 0.6})
('list of algorithms', 'fast fourier transform', {'weight': 0.6})
('list of algorithms', 'adaptive replacement cache', {'weight': 0.6})
('list of algorithms', 'fatigue (material)', {'weight': 0.6})
('list of algorithms', 'evolutionary computation', {'weight': 0.6})
('list of algorithms', "chew's second algorithm", {'weight': 0.6})
('list of algorithms', 'jaccard index', {'weight': 0.6})
('list of algorithms', 'iterative deepening depth-first search', {'weight': 0.6})
('list of algorithms', 'bully algorithm', {'weight': 0.6})
('list of algorithms', 'beam stack search', {'weight': 0.6})
('list of algorithms', "halley's method", {'weight': 0.6})
('list of algorithms', 'flashsort', {'weight': 0.6})
('list of algorithms', 'algorithms for recovery and isolation exploiting semantics', {'weight': 0.6})
('list of algorithms', 'cache algorithms', {'weight': 0.6})
('list of algorithms', 'coding theory', {'weight': 0.6})
('list of algorithms', "buchberger's algorithm", {'weight': 0.6})
('list of algorithms', 'dynamic time warping', {'weight': 0.6})
('list of algorithms', 'blum blum shub', {'weight': 0.6})
('list of algorithms', 'level set method', {'weight': 0.6})
('list of algorithms', 'arnoldi iteration', {'weight': 0.6})
('list of algorithms', 'b\xe3\xa9zier curve', {'weight': 0.6})
('list of algorithms', 'c4.5 algorithm', {'weight': 0.6})
('list of algorithms', 'karplus-strong string synthesis', {'weight': 0.6})
('list of algorithms', 'difference-map algorithm', {'weight': 0.6})
('list of algorithms', 'counting sort', {'weight': 0.6})
('list of algorithms', 'b*', {'weight': 0.6})
('list of algorithms', 'lax-wendroff method', {'weight': 0.6})
('list of algorithms', 'affine transformation', {'weight': 0.6})
('list of algorithms', 'expectation-maximization algorithm', {'weight': 0.6})
('list of algorithms', "hirschberg's algorithm", {'weight': 0.6})
('list of algorithms', 'canopy clustering algorithm', {'weight': 0.6})
('list of algorithms', 'list of algorithm general topics', {'weight': 0.7})
('list of algorithms', 'k-nearest neighbors', {'weight': 0.6})
('list of algorithms', 'karatsuba algorithm', {'weight': 0.6})
('list of algorithms', 'bailey\xe2\x80\x93borwein\xe2\x80\x93plouffe formula', {'weight': 0.6})
('list of algorithms', 'girvan\xe2\x80\x93newman algorithm', {'weight': 0.6})
('list of algorithms', 'faug\xe3\xa8re f4 algorithm', {'weight': 0.6})
('list of algorithms', 'formal grammar', {'weight': 0.6})
('list of algorithms', 'conjunctive normal form', {'weight': 0.6})
('list of algorithms', 'bitap algorithm', {'weight': 0.6})
('list of algorithms', 'cohen\xe2\x80\x93sutherland', {'weight': 0.6})
('list of algorithms', 'double dabble', {'weight': 0.6})
('list of algorithms', 'forward-backward algorithm', {'weight': 0.6})
('list of algorithms', "chan's algorithm", {'weight': 0.6})
('list of algorithms', 'cryptographic hash function', {'weight': 0.6})
('list of algorithms', 'fisher\xe2\x80\x93yates shuffle', {'weight': 0.6})
('list of algorithms', 'backward euler method', {'weight': 0.6})
('list of algorithms', 'fowler\xe2\x80\x93noll\xe2\x80\x93vo hash function', {'weight': 0.6})
('list of algorithms', 'digital differential analyzer (graphics algorithm)', {'weight': 0.6})
('list of algorithms', 'byte pair encoding', {'weight': 0.6})
('list of algorithms', 'goertzel algorithm', {'weight': 0.6})
('list of algorithms', 'fault-tolerant system', {'weight': 0.6})
('list of algorithms', 'floyd\xe2\x80\x93steinberg dithering', {'weight': 0.6})
('list of algorithms', 'computing \xef\x80', {'weight': 0.6})
('list of algorithms', "fletcher's checksum", {'weight': 0.6})
('list of algorithms', "buzen's algorithm", {'weight': 0.6})
('list of algorithms', 'incremental heuristic search', {'weight': 0.6})
('list of algorithms', 'gerchberg\xe2\x80\x93saxton algorithm', {'weight': 0.6})
('list of algorithms', 'mathematics-related lists', {'weight': 0.5})
('list of algorithms', 'introsort', {'weight': 0.6})
('list of algorithms', 'coloring algorithm', {'weight': 0.6})
('list of algorithms', 'cryptographically secure pseudo-random number generator', {'weight': 0.6})
('list of algorithms', 'antiderivatives', {'weight': 0.6})
('list of algorithms', "dinic's algorithm", {'weight': 0.6})
('list of algorithms', 'christofides algorithm', {'weight': 0.6})
('list of algorithms', 'de boor algorithm', {'weight': 0.6})
('list of algorithms', 'euclidean distance map', {'weight': 0.6})
('list of algorithms', "floyd's cycle-finding algorithm", {'weight': 0.6})
('list of algorithms', 'closest pair problem', {'weight': 0.6})
('list of algorithms', 'bilinear interpolation', {'weight': 0.6})
('list of algorithms', 'coset', {'weight': 0.6})
('list of algorithms', 'discrete logarithm', {'weight': 0.6})
('list of algorithms', "freivalds' algorithm", {'weight': 0.6})
('list of algorithms', 'bloom filter', {'weight': 0.6})
('list of algorithms', 'integer factorization', {'weight': 0.6})
('list of algorithms', 'exponential-golomb coding', {'weight': 0.6})
('list of algorithms', 'bootstrap aggregating', {'weight': 0.6})
('list of algorithms', 'cnf-sat', {'weight': 0.6})
('list of algorithms', 'graph search algorithm', {'weight': 0.6})
('list of algorithms', 'arbitrary-precision arithmetic', {'weight': 0.6})
('list of algorithms', 'fermat primality test', {'weight': 0.6})
('list of algorithms', 'ground state', {'weight': 0.6})
('list of algorithms', 'difference map algorithm', {'weight': 0.6})
('list of algorithms', "bresenham's line algorithm", {'weight': 0.6})
('list of algorithms', 'hamming code', {'weight': 0.6})
('list of algorithms', 'levinson recursion', {'weight': 0.6})
('list of algorithms', 'congruence of squares', {'weight': 0.6})
('list of algorithms', 'alopex', {'weight': 0.6})
('list of algorithms', 'comb sort', {'weight': 0.6})
('list of algorithms', 'advanced encryption standard', {'weight': 0.6})
('list of algorithms', "borwein's algorithm", {'weight': 0.6})
('list of algorithms', 'computer science', {'weight': 0.6})
('list of algorithms', 'clock synchronization', {'weight': 0.6})
('list of algorithms', 'cutting-plane method', {'weight': 0.6})
('list of algorithms', 'embedded zerotree wavelet', {'weight': 0.6})
('list of algorithms', 'jump-and-walk algorithm', {'weight': 0.6})
('list of algorithms', 'a*', {'weight': 0.6})
('list of algorithms', 'general problem solver', {'weight': 0.6})
('list of algorithms', 'computational complexity theory', {'weight': 0.6})
('list of algorithms', 'false position method', {'weight': 0.6})
('list of algorithms', 'baillie-psw primality test', {'weight': 0.6})
('list of algorithms', 'chaff algorithm', {'weight': 0.6})
('list of algorithms', 'exact cover', {'weight': 0.6})
('list of algorithms', 'hamming weight', {'weight': 0.6})
('list of algorithms', 'cocktail sort', {'weight': 0.6})
('list of algorithms', 'burrows\xe2\x80\x93wheeler transform', {'weight': 0.6})
('list of algorithms', 'chs conversion', {'weight': 0.6})
('list of algorithms', 'lpboost', {'weight': 0.6})
('list of algorithms', 'hungarian algorithm', {'weight': 0.6})
('list of algorithms', 'espresso heuristic logic minimizer', {'weight': 0.6})
('list of algorithms', 'blowfish (cipher)', {'weight': 0.6})
('database', 'database theory', {'weight': 0.5})
('database', 'database management systems', {'weight': 0.5})
('database', 'databases', {'weight': 0.5})
('gaussian elimination', 'numerical linear algebra', {'weight': 0.5})
('gaussian elimination', 'exchange algorithms', {'weight': 0.5})
('gaussian elimination', 'german inventions', {'weight': 0.5})
('elevator algorithm', 'sorting algorithms', {'weight': 0.5})
('elevator algorithm', 'look', {'weight': 0.7})
('elevator algorithm', 'fcfs', {'weight': 0.7})
('elevator algorithm', 'n-step-scan', {'weight': 0.7})
('elevator algorithm', 'fscan', {'weight': 0.7})
('elevator algorithm', 'disk scheduling algorithms', {'weight': 0.5})
('elevator algorithm', 'shortest seek time first', {'weight': 0.7})
('constraint algorithm', 'molecular physics', {'weight': 0.5})
('constraint algorithm', 'numerical differential equations', {'weight': 0.5})
('constraint algorithm', 'computational chemistry', {'weight': 0.5})
('constraint algorithm', 'software for molecular mechanics modeling', {'weight': 0.7})
('constraint algorithm', 'computational physics', {'weight': 0.5})
('constraint algorithm', 'molecular dynamics', {'weight': 0.7})
('basis function', 'linear algebra', {'weight': 0.5})
('basis function', 'numerical analysis', {'weight': 0.5})
('basis function', 'types of functions', {'weight': 0.5})
('basis function', 'fourier analysis', {'weight': 0.5})
('basis function', 'numerical linear algebra', {'weight': 0.5})
('breadth-first search', 'search algorithms', {'weight': 0.5})
('breadth-first search', 'level structure', {'weight': 0.7})
('breadth-first search', 'graph algorithms', {'weight': 0.5})
('breadth-first search', 'lexicographic breadth-first search', {'weight': 0.7})
('breadth-first search', 'iterative deepening depth-first search', {'weight': 0.7})
('breadth-first search', 'depth-first search', {'weight': 0.7})
('fast cosine transform', 'discrete fourier transform', {'weight': 0.7})
('fast cosine transform', 'discrete wavelet transform', {'weight': 0.7})
('fast cosine transform', 'jpeg', {'weight': 0.7})
('fast cosine transform', 'discrete sine transform', {'weight': 0.7})
('fast cosine transform', 'modified discrete cosine transform', {'weight': 0.7})
('fast cosine transform', 'list of fourier-related transforms', {'weight': 0.7})
('fast cosine transform', 'discrete transforms', {'weight': 0.5})
('fast cosine transform', 'fourier analysis', {'weight': 0.5})
('fast cosine transform', 'digital signal processing', {'weight': 0.5})
('graph theory', 'gallery of named graphs', {'weight': 0.7})
('graph theory', 'tur\xe3\xa1n, p\xe3\xa1l', {'weight': 0.7})
('graph theory', 'extremal graph theory', {'weight': 0.7})
('graph theory', 'graph coloring', {'weight': 0.7})
('graph theory', 'probabilistic graph theory', {'weight': 0.7})
('graph theory', 'tutte, w. t.', {'weight': 0.7})
('graph theory', 'hypergraph', {'weight': 0.7})
('graph theory', 'breadth-first search', {'weight': 0.7})
('graph theory', 'bondy, adrian john', {'weight': 0.7})
('graph theory', 'heawood, percy john', {'weight': 0.7})
('graph theory', 'faudree, ralph', {'weight': 0.7})
('graph theory', 'symmetric graphs', {'weight': 0.7})
('graph theory', 'citation graph', {'weight': 0.7})
('graph theory', 'data structure', {'weight': 0.7})
('graph theory', 'entitative graph', {'weight': 0.7})
('graph theory', 'algebraic graph theory', {'weight': 0.7})
('graph theory', 'abstract simplicial complex', {'weight': 0.7})
('graph theory', 'logical graph', {'weight': 0.7})
('graph theory', 'euler, leonhard', {'weight': 0.7})
('graph theory', 'spectral graph theory', {'weight': 0.7})
('graph theory', "dijkstra's algorithm", {'weight': 0.7})
('graph theory', 'graph sandwich problem', {'weight': 0.7})
('graph theory', 'publications in graph theory', {'weight': 0.7})
('graph theory', 'whitney, hassler', {'weight': 0.7})
('graph theory', 'edit', {'weight': 0.7})
('graph theory', 'null graph', {'weight': 0.7})
('graph theory', 'ne\xe5\xa1et\xe5\x99il, jaroslav', {'weight': 0.7})
('graph theory', 'graph automorphism', {'weight': 0.7})
('graph theory', 'strongly regular graphs', {'weight': 0.7})
('graph theory', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.7})
('graph theory', 'bellman\xe2\x80\x93ford algorithm', {'weight': 0.7})
('graph theory', 'percolation', {'weight': 0.7})
('graph theory', 'bollob\xe3\xa1s, b\xe3\xa9la', {'weight': 0.7})
('graph theory', 'thomas, robin', {'weight': 0.7})
('graph theory', 'nearest neighbour algorithm', {'weight': 0.7})
('graph theory', 'ramsey theory', {'weight': 0.7})
('graph theory', 'graph algebras', {'weight': 0.7})
('graph theory', 'murty, u. s. r.', {'weight': 0.7})
('graph theory', 'random regular graphs', {'weight': 0.7})
('graph theory', 'chudnovsky, maria', {'weight': 0.7})
('graph theory', 'list of graph theory topics', {'weight': 0.7})
('graph theory', 'graph rewriting', {'weight': 0.7})
('graph theory', 'graph data structure', {'weight': 0.7})
('graph theory', 'r\xe3\xa9nyi, alfr\xe3\xa9d', {'weight': 0.7})
('graph theory', 'network theory', {'weight': 0.7})
('graph theory', 'combinatorics', {'weight': 0.7})
('graph theory', 'conceptual graph', {'weight': 0.7})
('graph theory', 'szemer\xe3\xa9di, endre', {'weight': 0.7})
('graph theory', 'glossary of graph theory', {'weight': 0.7})
('graph theory', 'group theory', {'weight': 0.7})
('graph theory', 'disjoint-set data structure', {'weight': 0.7})
('graph theory', 'pebble motion problems', {'weight': 0.7})
('graph theory', 'knot theory', {'weight': 0.7})
('graph theory', "kruskal's algorithm", {'weight': 0.7})
('graph theory', 'tree data structure', {'weight': 0.7})
('graph theory', 'graph property', {'weight': 0.7})
('graph theory', 'ringel, gerhard', {'weight': 0.7})
('graph theory', 'quantum graph', {'weight': 0.7})
('graph theory', 'graph drawing', {'weight': 0.7})
('graph theory', 'intersection graph', {'weight': 0.7})
('graph theory', 'k\xe5\x91nig, d\xe3\xa9nes', {'weight': 0.7})
('graph theory', 'harary, frank', {'weight': 0.7})
('graph theory', 'dirac, gabriel andrew', {'weight': 0.7})
('graph theory', 'loop', {'weight': 0.7})
('graph theory', 'topological graph theory', {'weight': 0.7})
('graph theory', 'graph theory', {'weight': 1})
('graph theory', 'graham, ronald', {'weight': 0.7})
('graph theory', 'erd\xe5\x91s, paul', {'weight': 0.7})
('graph theory', 'existential graph', {'weight': 0.7})
('graph theory', 'semantic networks', {'weight': 0.7})
('graph theory', "prim's algorithm", {'weight': 0.7})
('graph theory', 'chung, fan', {'weight': 0.7})
('graph theory', 'graph database', {'weight': 0.7})
('graph theory', 'berge, claude', {'weight': 0.7})
('graph theory', 'perfect graph', {'weight': 0.7})
('graph theory', 'thomassen, carsten', {'weight': 0.7})
('graph theory', 'depth-first search', {'weight': 0.7})
('graph theory', 'dual-phase evolution', {'weight': 0.7})
('graph theory', 'alon, noga', {'weight': 0.7})
('graph theory', 'geometric graph theory', {'weight': 0.7})
('graph theory', 'robertson, neil', {'weight': 0.7})
('graph theory', 'transitive reduction', {'weight': 0.7})
('graph theory', 'seymour, paul', {'weight': 0.7})
('graph theory', 'brightwell, graham', {'weight': 0.7})
('graph theory', 'lov\xe3\xa1sz, l\xe3\xa1szl\xe3\xb3', {'weight': 0.7})
('graph theory', 'golumbic, martin', {'weight': 0.7})
('graph theory', 'graph equation', {'weight': 0.7})
('graph theory', 'kotzig, anton', {'weight': 0.7})
('cryptography', 'list of cryptographers', {'weight': 0.7})
('cryptography', 'cryptography', {'weight': 1})
('cryptography', 'banking technology', {'weight': 0.5})
('cryptography', 'encyclopedia of cryptography and security', {'weight': 0.7})
('cryptography', 'list of important publications in cryptography', {'weight': 0.7})
('cryptography', 'strong cryptography', {'weight': 0.7})
('cryptography', 'global surveillance', {'weight': 0.7})
('cryptography', 'mathematical science occupations', {'weight': 0.5})
('cryptography', 'outline of cryptography', {'weight': 0.7})
('cryptography', 'list of multiple discoveries', {'weight': 0.7})
('cryptography', 'list of unsolved problems in computer science', {'weight': 0.7})
('cryptography', 'formal sciences', {'weight': 0.5})
('gradient descent', 'wolfe conditions', {'weight': 0.7})
('gradient descent', 'delta rule', {'weight': 0.7})
('gradient descent', 'conjugate gradient method', {'weight': 0.7})
('gradient descent', 'optimization algorithms and methods', {'weight': 0.5})
('gradient descent', 'first order methods', {'weight': 0.5})
('gradient descent', 'stochastic gradient descent', {'weight': 0.7})
('gradient descent', 'bfgs method', {'weight': 0.7})
('gradient descent', 'nelder\xe2\x80\x93mead method', {'weight': 0.7})
('gradient descent', 'gradient methods', {'weight': 0.5})
('gradient descent', 'rprop', {'weight': 0.7})
('gradient descent', 'preconditioning', {'weight': 0.7})
('gradient descent', 'extreme learning machines', {'weight': 0.7})
("bor\xe5\xafvka's algorithm", 'graph algorithms', {'weight': 0.5})
("bor\xe5\xafvka's algorithm", 'spanning tree', {'weight': 0.5})
('hamming(7,4)', 'coding theory', {'weight': 0.5})
('hamming(7,4)', 'computer arithmetic', {'weight': 0.5})
('hamming(7,4)', 'error detection and correction', {'weight': 0.5})
('image-based lighting', 'global illumination algorithms', {'weight': 0.5})
('arithmetical hierarchy', 'polynomial hierarchy', {'weight': 0.7})
('arithmetical hierarchy', 'hierarchy (mathematics)', {'weight': 0.7})
('arithmetical hierarchy', 'effective descriptive set theory', {'weight': 0.5})
('arithmetical hierarchy', 'mathematical logic hierarchies', {'weight': 0.5})
('arithmetical hierarchy', 'interpretability logic', {'weight': 0.7})
('arithmetical hierarchy', 'complexity classes', {'weight': 0.5})
('arithmetical hierarchy', 'hierarchy', {'weight': 0.5})
('arithmetical hierarchy', 'computability theory', {'weight': 0.5})
("fortune's algorithm", 'computational geometry', {'weight': 0.5})
('lanczos iteration', 'numerical linear algebra', {'weight': 0.5})
("heap's algorithm", 'combinatorial algorithms', {'weight': 0.5})
("heap's algorithm", 'permutations', {'weight': 0.5})
('a-law algorithm', 'audio codecs', {'weight': 0.5})
("kruskal's algorithm", "prim's algorithm", {'weight': 0.7})
("kruskal's algorithm", 'graph algorithms', {'weight': 0.5})
("kruskal's algorithm", 'reverse-delete algorithm', {'weight': 0.7})
("kruskal's algorithm", 'single-linkage clustering', {'weight': 0.7})
("kruskal's algorithm", "dijkstra's algorithm", {'weight': 0.7})
("kruskal's algorithm", 'spanning tree', {'weight': 0.5})
("kruskal's algorithm", "bor\xe5\xafvka's algorithm", {'weight': 0.7})
('contour line', 'topography', {'weight': 0.5})
('contour line', 'geologic map', {'weight': 0.7})
('contour line', 'curves', {'weight': 0.5})
('contour line', 'cartography', {'weight': 0.5})
('contour line', 'nautical chart', {'weight': 0.7})
('contour line', 'cartogram', {'weight': 0.7})
('contour line', 'marching squares', {'weight': 0.7})
('contour line', 'tercom', {'weight': 0.7})
('contour line', 'world map', {'weight': 0.7})
('contour line', 'road atlas', {'weight': 0.7})
('contour line', 'multivariable calculus', {'weight': 0.5})
('contour line', 'fantasy map', {'weight': 0.7})
('contour line', 'thematic map', {'weight': 0.7})
('contour line', 'reversed map', {'weight': 0.7})
('contour line', 'dymaxion map', {'weight': 0.7})
('contour line', 'plat', {'weight': 0.7})
('contour line', 'floor plan', {'weight': 0.7})
('contour line', 'planform', {'weight': 0.7})
('contour line', 'atlas portal', {'weight': 0.7})
('contour line', 'map design', {'weight': 0.7})
('contour line', 'estate map', {'weight': 0.7})
('contour line', 'street map', {'weight': 0.7})
('contour line', 'pictorial maps', {'weight': 0.7})
('contour line', 'compass rose', {'weight': 0.7})
('contour line', 'aeronautical chart', {'weight': 0.7})
('contour line', 'topographic map', {'weight': 0.7})
('beam tracing', 'global illumination algorithms', {'weight': 0.5})
('golden section search', 'fibonacci search technique', {'weight': 0.7})
('golden section search', 'optimization algorithms and methods', {'weight': 0.5})
('golden section search', 'golden ratio', {'weight': 0.5})
('golden section search', 'binary search', {'weight': 0.7})
('golden section search', "brent's method", {'weight': 0.7})
('golden section search', 'fibonacci numbers', {'weight': 0.5})
('computer graphics', 'computer graphics', {'weight': 1})
("kadane's algorithm", 'optimization algorithms and methods', {'weight': 0.5})
("kadane's algorithm", 'dynamic programming', {'weight': 0.5})
("kadane's algorithm", 'subset sum problem', {'weight': 0.7})
('euler integration', 'numerical differential equations', {'weight': 0.5})
('euler integration', 'linear multistep method', {'weight': 0.7})
('euler integration', 'first order methods', {'weight': 0.5})
('euler integration', 'gradient descent', {'weight': 0.7})
('euler integration', 'list of runge-kutta methods', {'weight': 0.7})
('euler integration', 'numerical methods for ordinary differential equations', {'weight': 0.7})
('euler integration', 'numerical integration', {'weight': 0.7})
('euler integration', 'dynamic errors of numerical methods of ode discretization', {'weight': 0.7})
('euler integration', 'runge\xe2\x80\x93kutta methods', {'weight': 0.5})
('computer architecture', 'floating point', {'weight': 0.7})
('computer architecture', 'comparison of cpu architectures', {'weight': 0.7})
('computer architecture', 'computing portal', {'weight': 0.7})
('computer architecture', 'computer architecture', {'weight': 1})
('computer architecture', 'software architecture', {'weight': 0.7})
('computer architecture', 'influence of the ibm pc on the personal computer market', {'weight': 0.7})
('computer architecture', 'electronics portal', {'weight': 0.7})
('computer architecture', 'orthogonal instruction set', {'weight': 0.7})
('computer architecture', 'von neumann architecture', {'weight': 0.7})
('computer architecture', 'computer science portal', {'weight': 0.7})
('computer architecture', 'computer hardware', {'weight': 0.7})
('computer architecture', 'harvard architecture', {'weight': 0.7})
('computer architecture', 'cpu design', {'weight': 0.7})
('computer architecture', 'central processing unit', {'weight': 0.5})
('evolutionary computation', 'estimation of distribution algorithm', {'weight': 0.7})
('evolutionary computation', 'evolution', {'weight': 0.5})
('evolutionary computation', 'evolutionary robotics', {'weight': 0.7})
('evolutionary computation', 'inferential programming', {'weight': 0.7})
('evolutionary computation', 'no free lunch in search and optimization', {'weight': 0.7})
('evolutionary computation', 'interactive evolutionary computation', {'weight': 0.7})
('evolutionary computation', 'evolutionary computation', {'weight': 1})
('evolutionary computation', 'universal darwinism', {'weight': 0.7})
('evolutionary computation', 'grammatical evolution', {'weight': 0.7})
('evolutionary computation', 'autoconstructive', {'weight': 0.7})
('evolutionary computation', 'computer science portal', {'weight': 0.7})
('evolutionary computation', 'fitness approximation', {'weight': 0.7})
('evolutionary computation', 'mutation testing', {'weight': 0.7})
('evolutionary computation', 'artificial intelligence portal', {'weight': 0.7})
('evolutionary computation', 'human-based evolutionary computation', {'weight': 0.7})
('blum blum shub', 'cryptographically secure pseudorandom number generators', {'weight': 0.5})
('blum blum shub', 'pseudorandom number generators', {'weight': 0.5})
('cone tracing', 'global illumination algorithms', {'weight': 0.5})
('cone tracing', 'computer graphics', {'weight': 0.5})
('c4.5 algorithm', 'decision trees', {'weight': 0.5})
('c4.5 algorithm', 'id3 algorithm', {'weight': 0.7})
('c4.5 algorithm', 'classification algorithms', {'weight': 0.5})
('counting sort', 'sorting algorithms', {'weight': 0.5})
('counting sort', 'stable sorts', {'weight': 0.5})
('affine transformation', 'homography', {'weight': 0.7})
('affine transformation', 'transformation (function)', {'weight': 0.5})
('affine transformation', '3d projection', {'weight': 0.7})
('affine transformation', 'flat (geometry)', {'weight': 0.7})
('affine transformation', 'affine geometry', {'weight': 0.7})
('affine transformation', 'the transformation matrix for an affine transformation', {'weight': 0.7})
('association rule learning', 'production system', {'weight': 0.7})
('association rule learning', 'sequence mining', {'weight': 0.7})
('association rule learning', 'data management', {'weight': 0.5})
('association rule learning', 'data mining', {'weight': 0.5})
('list of algorithm general topics', 'algorithms', {'weight': 0.5})
('list of algorithm general topics', 'mathematics-related lists', {'weight': 0.5})
('conjunctive normal form', 'horn clause', {'weight': 0.7})
('conjunctive normal form', 'disjunctive normal form', {'weight': 0.7})
('conjunctive normal form', 'normal forms (logic)', {'weight': 0.5})
('conjunctive normal form', 'algebraic normal form', {'weight': 0.7})
('conjunctive normal form', 'quine\xe2\x80\x93mccluskey algorithm', {'weight': 0.7})
('convex hull algorithms', 'orthogonal convex hull', {'weight': 0.7})
('convex hull algorithms', 'convex hull algorithms', {'weight': 1})
('forward-backward algorithm', 'bcjr algorithm', {'weight': 0.7})
('forward-backward algorithm', 'dynamic programming', {'weight': 0.5})
('forward-backward algorithm', 'markov models', {'weight': 0.5})
('forward-backward algorithm', 'error detection and correction', {'weight': 0.5})
('forward-backward algorithm', 'viterbi algorithm', {'weight': 0.7})
('forward-backward algorithm', 'baum-welch algorithm', {'weight': 0.7})
('forward-backward algorithm', 'machine learning algorithms', {'weight': 0.5})
('computing \xef\x80', 'pi', {'weight': 0.5})
('computing \xef\x80', 'approximations', {'weight': 0.5})
('computing \xef\x80', 'history of mathematics', {'weight': 0.5})
('computing \xef\x80', 'real transcendental numbers', {'weight': 0.5})
('combinatorics', 'combinatorial data analysis', {'weight': 0.7})
('combinatorics', 'combinatorics', {'weight': 1})
('combinatorics', 'phylogenetics', {'weight': 0.7})
('combinatorics', 'combinatorial chemistry', {'weight': 0.7})
('combinatorics', 'combinatorial biology', {'weight': 0.7})
('combinatorics', 'combinatorial game theory', {'weight': 0.7})
('combinatorics', 'combinatorial group theory', {'weight': 0.7})
('combinatorics', 'list of combinatorics topics', {'weight': 0.7})
('bilinear interpolation', 'bicubic interpolation', {'weight': 0.7})
('bilinear interpolation', 'trilinear interpolation', {'weight': 0.7})
('bilinear interpolation', 'multivariate interpolation', {'weight': 0.5})
('bilinear interpolation', 'stairstep interpolation', {'weight': 0.7})
('bilinear interpolation', 'barycentric coordinates - for interpolating within a triangle or tetrahedron', {'weight': 0.7})
('bilinear interpolation', 'lanczos resampling', {'weight': 0.7})
('bilinear interpolation', 'spline interpolation', {'weight': 0.7})
('coset', 'group theory', {'weight': 0.5})
('coset', 'coset enumeration', {'weight': 0.7})
('coset', 'quotient group', {'weight': 0.7})
('coset', "lagrange's theorem", {'weight': 0.7})
('coset', 'heap', {'weight': 0.7})
('coset', 'double coset', {'weight': 0.7})
('arbitrary-precision arithmetic', 'sch\xe3\xb6nhage\xe2\x80\x93strassen algorithm', {'weight': 0.7})
('arbitrary-precision arithmetic', 'toom\xe2\x80\x93cook multiplication', {'weight': 0.7})
('arbitrary-precision arithmetic', 'karatsuba algorithm', {'weight': 0.7})
('arbitrary-precision arithmetic', "f\xe3\xbcrer's algorithm", {'weight': 0.7})
('arbitrary-precision arithmetic', 'computer arithmetic algorithms', {'weight': 0.5})
('arbitrary-precision arithmetic', 'computer arithmetic', {'weight': 0.5})
('block nested loop', 'join algorithms', {'weight': 0.5})
('hamming code', 'hamming bound', {'weight': 0.7})
('hamming code', 'hamming distance', {'weight': 0.7})
('hamming code', 'reed\xe2\x80\x93solomon error correction', {'weight': 0.7})
('hamming code', 'golay code', {'weight': 0.7})
('hamming code', 'error detection and correction', {'weight': 0.5})
('hamming code', 'reed\xe2\x80\x93muller code', {'weight': 0.7})
('hamming code', 'american inventions', {'weight': 0.5})
('hamming code', 'turbo code', {'weight': 0.7})
('hamming code', 'coding theory', {'weight': 0.7})
('hamming code', 'computer science portal', {'weight': 0.7})
('hamming code', 'low-density parity-check code', {'weight': 0.7})
('hamming code', 'computer arithmetic', {'weight': 0.5})
('feature space', 'data mining', {'weight': 0.5})
('feature space', 'applied mathematics stubs', {'weight': 0.5})
('feature space', 'machine learning', {'weight': 0.5})
('comb sort', 'sorting algorithms', {'weight': 0.5})
('comb sort', 'comparison sorts', {'weight': 0.5})
('comb sort', 'bubble sort', {'weight': 0.7})
('comb sort', 'cocktail sort', {'weight': 0.7})
('computer science', 'electronic engineering', {'weight': 0.5})
('computer science', 'list of pioneers in computer science', {'weight': 0.7})
('computer science', 'informatics (academic field)', {'weight': 0.7})
('computer science', 'academic genealogy of computer scientists', {'weight': 0.7})
('computer science', 'technology transfer in computer science', {'weight': 0.7})
('computer science', 'list of publications in computer science', {'weight': 0.7})
('computer science', 'list of software engineering topics', {'weight': 0.7})
('computer science', 'wikipedia book', {'weight': 0.7})
('computer science', 'list of computer scientists', {'weight': 0.7})
('computer science', 'list of academic computer science departments', {'weight': 0.7})
('computer science', 'computer engineering', {'weight': 0.5})
('computer science', 'women in computing', {'weight': 0.7})
('computer science', 'computer science', {'weight': 1})
('computer science', 'computer science portal', {'weight': 0.7})
('computer science', 'outline of computer science', {'weight': 0.7})
('computer science', 'electrical engineering', {'weight': 0.5})
('computer science', 'list of computer science conferences', {'weight': 0.7})
('computer science', 'list of unsolved problems in computer science', {'weight': 0.7})
('fault-tolerant system', 'systems engineering', {'weight': 0.5})
('fault-tolerant system', 'elegant degradation', {'weight': 0.7})
('fault-tolerant system', 'control reconfiguration', {'weight': 0.7})
('fault-tolerant system', 'raid', {'weight': 0.5})
('fault-tolerant system', 'list of system quality attributes', {'weight': 0.7})
('fault-tolerant system', 'fault-tolerant computer systems', {'weight': 0.7})
('fault-tolerant system', 'safe-life design', {'weight': 0.7})
('fault-tolerant system', 'control engineering', {'weight': 0.5})
('fault-tolerant system', 'defence in depth', {'weight': 0.7})
('fault-tolerant system', 'error-tolerant design', {'weight': 0.7})
('fault-tolerant system', 'resilience (ecology)', {'weight': 0.7})
('fault-tolerant system', 'reliability engineering', {'weight': 0.5})
('fault-tolerant system', 'resilience (network)', {'weight': 0.7})
('fault-tolerant system', 'computer systems', {'weight': 0.5})
('fault-tolerant system', 'software quality', {'weight': 0.5})
('fault-tolerant system', 'fault tolerance', {'weight': 0.5})
('fault-tolerant system', 'software', {'weight': 0.5})
('chaff algorithm', 'formal methods stubs', {'weight': 0.5})
('chaff algorithm', 'constraint programming', {'weight': 0.5})
('chaff algorithm', 'boolean algebra', {'weight': 0.5})
('chaff algorithm', 'automated theorem proving', {'weight': 0.5})
('chaff algorithm', 'sat solvers', {'weight': 0.5})
('cocktail sort', 'sorting algorithms', {'weight': 0.5})
('cocktail sort', 'comparison sorts', {'weight': 0.5})
('cocktail sort', 'stable sorts', {'weight': 0.5})
('hungarian algorithm', 'combinatorial optimization', {'weight': 0.5})
('hungarian algorithm', 'matching', {'weight': 0.5})
('addition-chain exponentiation', 'exponentials', {'weight': 0.5})
('addition-chain exponentiation', 'addition chains', {'weight': 0.5})
('addition-chain exponentiation', 'computer arithmetic algorithms', {'weight': 0.5})
('asymmetric key algorithm', 'pretty good privacy', {'weight': 0.7})
('asymmetric key algorithm', 'pgp word list', {'weight': 0.7})
('asymmetric key algorithm', 'quantum cryptography', {'weight': 0.7})
('asymmetric key algorithm', 'public-key cryptography', {'weight': 0.5})
('asymmetric key algorithm', 'banking technology', {'weight': 0.5})
('asymmetric key algorithm', 'identity based encryption', {'weight': 0.7})
('asymmetric key algorithm', 'gnu privacy guard', {'weight': 0.7})
('asymmetric key algorithm', 'threshold cryptosystem', {'weight': 0.7})
('asymmetric key algorithm', 'books on cryptography', {'weight': 0.7})
('asymmetric key algorithm', 'symmetric-key cryptography', {'weight': 0.7})
('asymmetric key algorithm', 'public key infrastructure', {'weight': 0.7})
('asymmetric key algorithm', 'cryptography portal', {'weight': 0.7})
('asymmetric key algorithm', 'key-agreement protocol', {'weight': 0.7})
('asymmetric key algorithm', 'secure shell', {'weight': 0.7})
('asymmetric key algorithm', 'key escrow', {'weight': 0.7})
('asymmetric key algorithm', 'secure sockets layer', {'weight': 0.7})
('asymmetric key algorithm', 'public key fingerprint', {'weight': 0.7})
('asymmetric key algorithm', 'pseudonymity', {'weight': 0.7})
('alpha max plus beta min algorithm', 'approximation algorithms', {'weight': 0.5})
('alpha max plus beta min algorithm', 'root-finding algorithms', {'weight': 0.5})
('intersection algorithm', 'agreement algorithms', {'weight': 0.5})
("f\xe3\xbcrer's algorithm", 'algorithms and data structures stubs', {'weight': 0.5})
("f\xe3\xbcrer's algorithm", 'computer science stubs', {'weight': 0.5})
("f\xe3\xbcrer's algorithm", 'computer arithmetic algorithms', {'weight': 0.5})
("dixon's algorithm", 'integer factorization algorithms', {'weight': 0.5})
("grover's algorithm", 'amplitude amplification', {'weight': 0.7})
("grover's algorithm", 'search algorithms', {'weight': 0.5})
("grover's algorithm", 'quantum algorithms', {'weight': 0.5})
("grover's algorithm", "shor's algorithm", {'weight': 0.7})
("dice's coefficient", 'tversky index', {'weight': 0.7})
("dice's coefficient", "morisita's overlap index", {'weight': 0.7})
("dice's coefficient", 'hamming distance', {'weight': 0.7})
("dice's coefficient", 'kulczy\xe5\x84ski similarity index', {'weight': 0.7})
("dice's coefficient", 'most frequent k characters', {'weight': 0.7})
("dice's coefficient", 'hurlbert\xe2\x80\x99s index', {'weight': 0.7})
("dice's coefficient", 'jaccard index', {'weight': 0.7})
("dice's coefficient", 'olavi renkonen', {'weight': 0.7})
("dice's coefficient", 'string similarity measures', {'weight': 0.5})
("dice's coefficient", "pianka's index", {'weight': 0.7})
("dice's coefficient", 'horn\xe2\x80\x99s index', {'weight': 0.7})
("dice's coefficient", "macarthur and levin's index", {'weight': 0.7})
("dice's coefficient", 'renkonen similarity index', {'weight': 0.7})
("dice's coefficient", 'correlation', {'weight': 0.7})
("dice's coefficient", 'overlap coefficient', {'weight': 0.7})
("dice's coefficient", 'universal adaptive strategy theory (uast)', {'weight': 0.7})
("dice's coefficient", 'information retrieval', {'weight': 0.5})
("dice's coefficient", 'czekanowski similarity index', {'weight': 0.7})
("dice's coefficient", 'measure theory', {'weight': 0.5})
("dice's coefficient", 'mantel test', {'weight': 0.7})
("dice's coefficient", 'simplified morisita\xe2\x80\x99s index', {'weight': 0.7})
('kabsch algorithm', 'bioinformatics algorithms', {'weight': 0.5})
('delaunay triangulation', 'delaunay tessellation field estimator', {'weight': 0.7})
('delaunay triangulation', 'convex hull algorithms', {'weight': 0.7})
('delaunay triangulation', 'beta skeleton', {'weight': 0.7})
('delaunay triangulation', 'pitteway triangulation', {'weight': 0.7})
('delaunay triangulation', 'gradient pattern analysis', {'weight': 0.7})
('delaunay triangulation', 'triangulation (geometry)', {'weight': 0.5})
('delaunay triangulation', 'gabriel graph', {'weight': 0.7})
('delaunay triangulation', 'constrained delaunay triangulation', {'weight': 0.7})
('delaunay triangulation', 'voronoi diagram', {'weight': 0.7})
('delaunay triangulation', 'urquhart graph', {'weight': 0.7})
('delaunay triangulation', 'quasitriangulation', {'weight': 0.7})
('binary search algorithm', 'branch table', {'weight': 0.7})
('binary search algorithm', 'self-balancing binary search tree', {'weight': 0.7})
('binary search algorithm', 'search algorithms', {'weight': 0.5})
('binary search algorithm', 'run-time analysis', {'weight': 0.7})
('binary search algorithm', 'bisection method', {'weight': 0.7})
('binary search algorithm', 'interpolation search', {'weight': 0.7})
('binary search algorithm', 'index (information technology)', {'weight': 0.7})
('binary search algorithm', 'computer science portal', {'weight': 0.7})
('computational science', 'comparison of computer algebra systems', {'weight': 0.7})
('computational science', 'list of molecular modeling software', {'weight': 0.7})
('computational science', 'simulated reality', {'weight': 0.7})
('computational science', 'computing portal', {'weight': 0.7})
('computational science', 'computational science', {'weight': 1})
('computational science', 'mathematics portal', {'weight': 0.7})
('computational science', 'list of numerical analysis software', {'weight': 0.7})
('computational science', 'list of statistical packages', {'weight': 0.7})
('computational science', 'timeline of scientific computing', {'weight': 0.7})
('computational science', 'science portal', {'weight': 0.7})
('computational science', 'applied mathematics', {'weight': 0.5})
('computational science', 'computational science and engineering', {'weight': 0.7})
('euler method', 'numerical differential equations', {'weight': 0.5})
('euler method', 'linear multistep method', {'weight': 0.7})
('euler method', 'first order methods', {'weight': 0.5})
('euler method', 'gradient descent', {'weight': 0.7})
('euler method', 'list of runge-kutta methods', {'weight': 0.7})
('euler method', 'numerical methods for ordinary differential equations', {'weight': 0.7})
('euler method', 'numerical integration', {'weight': 0.7})
('euler method', 'dynamic errors of numerical methods of ode discretization', {'weight': 0.7})
('euler method', 'runge\xe2\x80\x93kutta methods', {'weight': 0.5})
('abstract algebra', 'publications in abstract algebra', {'weight': 0.7})
('abstract algebra', 'mathematics portal', {'weight': 0.7})
('abstract algebra', 'coding theory', {'weight': 0.7})
('abstract algebra', 'outline of abstract algebra', {'weight': 0.7})
('abstract algebra', 'abstract algebra', {'weight': 1})
('blowfish (cipher)', 'aes', {'weight': 0.7})
('blowfish (cipher)', 'block ciphers', {'weight': 0.5})
('blowfish (cipher)', 'feistel ciphers', {'weight': 0.5})
('blowfish (cipher)', 'twofish', {'weight': 0.7})
('blowfish (cipher)', 'free ciphers', {'weight': 0.5})
('blowfish (cipher)', 'macguffin', {'weight': 0.7})
('blowfish (cipher)', 'threefish', {'weight': 0.7})
('elementary function (differential algebra)', 'algebraic function', {'weight': 0.7})
('elementary function (differential algebra)', 'closed-form expression', {'weight': 0.7})
('elementary function (differential algebra)', 'types of functions', {'weight': 0.5})
('elementary function (differential algebra)', 'differential algebra', {'weight': 0.5})
('elementary function (differential algebra)', 'differential galois theory', {'weight': 0.7})
('elementary function (differential algebra)', 'transcendental function', {'weight': 0.7})
('elementary function (differential algebra)', 'computer algebra', {'weight': 0.5})
('lr parser', 'comparison of parser generators', {'weight': 0.7})
('lr parser', 'gnu bison', {'weight': 0.7})
('lr parser', 'dms software reengineering toolkit', {'weight': 0.7})
('lr parser', 'parsing algorithms', {'weight': 0.5})
('lr parser', 'asf+sdf meta environment', {'weight': 0.7})
('algorithms for calculating variance', 'algebraic formula for the variance', {'weight': 0.7})
('algorithms for calculating variance', 'kahan summation algorithm', {'weight': 0.7})
('algorithms for calculating variance', 'statistical deviation and dispersion', {'weight': 0.5})
('algorithms for calculating variance', 'statistical algorithms', {'weight': 0.5})
('birkhoff interpolation', 'interpolation', {'weight': 0.5})
('block truncation coding', 'lossy compression algorithms', {'weight': 0.5})
('block truncation coding', 'image compression', {'weight': 0.5})
('conjugate gradient', 'sparse matrix-vector multiplication', {'weight': 0.7})
('conjugate gradient', 'iterative method. linear systems', {'weight': 0.7})
('conjugate gradient', 'krylov subspace', {'weight': 0.7})
('conjugate gradient', 'nonlinear conjugate gradient', {'weight': 0.7})
('conjugate gradient', 'numerical linear algebra', {'weight': 0.5})
('conjugate gradient', 'gradient methods', {'weight': 0.5})
('conjugate gradient', 'gaussian belief propagation', {'weight': 0.7})
('conjugate gradient', 'conjugate residual method', {'weight': 0.7})
('conjugate gradient', 'preconditioning', {'weight': 0.7})
('conjugate gradient', 'biconjugate gradient method', {'weight': 0.7})
('gnome sort', 'sorting algorithms', {'weight': 0.5})
('gnome sort', 'comparison sorts', {'weight': 0.5})
('gnome sort', 'stable sorts', {'weight': 0.5})
('exponentiating by squaring', 'vectorial addition chain', {'weight': 0.7})
('exponentiating by squaring', 'non-adjacent form', {'weight': 0.7})
('exponentiating by squaring', 'addition chain', {'weight': 0.7})
('exponentiating by squaring', 'computer arithmetic algorithms', {'weight': 0.5})
('exponentiating by squaring', 'exponentials', {'weight': 0.5})
('exponentiating by squaring', 'modular exponentiation', {'weight': 0.7})
('exponentiating by squaring', 'montgomery reduction', {'weight': 0.7})
('exponentiating by squaring', 'computer arithmetic', {'weight': 0.5})
('buddy memory allocation', 'stack-based memory allocation', {'weight': 0.7})
('buddy memory allocation', 'memory management algorithms', {'weight': 0.5})
('buddy memory allocation', 'memory pool', {'weight': 0.7})
('isosurface', 'medical imaging', {'weight': 0.5})
('isosurface', 'surfaces', {'weight': 0.5})
('isosurface', '3d computer graphics', {'weight': 0.5})
('isosurface', 'triangulation (geometry)', {'weight': 0.7})
('bubble sort', 'sorting algorithms', {'weight': 0.5})
('bubble sort', 'comparison sorts', {'weight': 0.5})
('bubble sort', 'stable sorts', {'weight': 0.5})
("kosaraju's algorithm", 'graph algorithms', {'weight': 0.5})
("kosaraju's algorithm", 'graph connectivity', {'weight': 0.5})
('cycle sort', 'sorting algorithms', {'weight': 0.5})
('cycle sort', 'comparison sorts', {'weight': 0.5})
('cycle sort', 'online sorts', {'weight': 0.5})
('least slack time scheduling', 'scheduling algorithms', {'weight': 0.5})
('integer linear programming', 'combinatorial optimization', {'weight': 0.5})
('integer linear programming', 'operations research', {'weight': 0.5})
('best bin first', 'algorithms and data structures stubs', {'weight': 0.5})
('best bin first', 'computer science stubs', {'weight': 0.5})
('best bin first', 'search algorithms', {'weight': 0.5})
('list of terms relating to algorithms and data structures', 'algorithms and data structures', {'weight': 0.5})
('list of terms relating to algorithms and data structures', 'lists of computer terms', {'weight': 0.5})
('list of terms relating to algorithms and data structures', 'mathematics-related lists', {'weight': 0.5})
('binary gcd algorithm', 'computer programming portal', {'weight': 0.7})
('binary gcd algorithm', 'extended euclidean algorithm', {'weight': 0.7})
('binary gcd algorithm', 'euclidean algorithm', {'weight': 0.7})
('binary gcd algorithm', 'least common multiple', {'weight': 0.7})
('binary gcd algorithm', 'number theoretic algorithms', {'weight': 0.5})
("featherstone's algorithm", 'mechanics', {'weight': 0.5})
("featherstone's algorithm", 'computational physics', {'weight': 0.5})
("featherstone's algorithm", 'computer science stubs', {'weight': 0.5})
("featherstone's algorithm", 'algorithms and data structures stubs', {'weight': 0.5})
("featherstone's algorithm", 'computer physics engines', {'weight': 0.5})
("cannon's algorithm", 'distributed algorithms', {'weight': 0.5})
("cannon's algorithm", 'applied mathematics stubs', {'weight': 0.5})
("cannon's algorithm", 'matrix multiplication algorithms', {'weight': 0.5})
('lagged fibonacci generator', 'mersenne twister', {'weight': 0.7})
('lagged fibonacci generator', 'pike', {'weight': 0.7})
('lagged fibonacci generator', 'linear congruential generator', {'weight': 0.7})
('lagged fibonacci generator', 'fish (cipher)', {'weight': 0.7})
('lagged fibonacci generator', 'vic cipher', {'weight': 0.7})
('lagged fibonacci generator', 'pseudorandom number generators', {'weight': 0.5})
('lagged fibonacci generator', 'fibonacci numbers', {'weight': 0.5})
('kalman filter', 'kernel adaptive filter', {'weight': 0.7})
('kalman filter', 'fast kalman filter', {'weight': 0.7})
('kalman filter', 'invariant extended kalman filter', {'weight': 0.7})
('kalman filter', 'nonlinear filters', {'weight': 0.5})
('kalman filter', 'alpha beta filter', {'weight': 0.7})
('kalman filter', 'signal estimation', {'weight': 0.5})
('kalman filter', 'wiener filter', {'weight': 0.7})
('kalman filter', 'linear-quadratic-gaussian control', {'weight': 0.7})
('kalman filter', 'robot control', {'weight': 0.5})
('kalman filter', 'separation principle', {'weight': 0.7})
('kalman filter', 'predictor corrector', {'weight': 0.7})
('kalman filter', 'volterra series', {'weight': 0.7})
('kalman filter', 'bayesian mmse estimator', {'weight': 0.7})
('kalman filter', 'control theory', {'weight': 0.5})
('kalman filter', 'particle filter', {'weight': 0.7})
('kalman filter', 'hungarian inventions', {'weight': 0.5})
('kalman filter', 'ensemble kalman filter', {'weight': 0.7})
('kalman filter', 'zakai equation', {'weight': 0.7})
('kalman filter', 'linear filters', {'weight': 0.5})
('kalman filter', 'recursive least squares', {'weight': 0.7})
('kalman filter', 'schmidt\xe2\x80\x93kalman filter', {'weight': 0.7})
('kalman filter', 'non-linear filter', {'weight': 0.7})
('kalman filter', 'covariance intersection', {'weight': 0.7})
('kalman filter', 'extended kalman filter', {'weight': 0.7})
('kalman filter', 'generalized filtering', {'weight': 0.7})
('kalman filter', 'markov models', {'weight': 0.5})
('kalman filter', 'data assimilation', {'weight': 0.7})
('kalman filter', 'moving horizon estimation', {'weight': 0.7})
('kalman filter', 'sliding mode control', {'weight': 0.7})
('kalman filter', 'filtering problem (stochastic processes)', {'weight': 0.7})
('kalman filter', 'stochastic differential equations', {'weight': 0.7})
('baby-step giant-step', 'group theory', {'weight': 0.5})
('baby-step giant-step', 'number theoretic algorithms', {'weight': 0.5})
('bioinformatics', 'computational biomodeling', {'weight': 0.7})
('bioinformatics', 'formal sciences', {'weight': 0.5})
('bioinformatics', 'biostatistics', {'weight': 0.5})
('bioinformatics', 'functional genomics', {'weight': 0.7})
('bioinformatics', 'proteomics', {'weight': 0.7})
('bioinformatics', 'list of master of science in bioinformatics', {'weight': 0.7})
('bioinformatics', 'biological engineering', {'weight': 0.5})
('bioinformatics', 'international society for computational biology', {'weight': 0.7})
('bioinformatics', 'gene disease database', {'weight': 0.7})
('bioinformatics', 'phylogenetics', {'weight': 0.7})
('bioinformatics', 'structural bioinformatics', {'weight': 0.7})
('bioinformatics', 'mathematical and theoretical biology', {'weight': 0.5})
('bioinformatics', 'metabolomics', {'weight': 0.7})
('bioinformatics', 'computational genomics', {'weight': 0.7})
('bioinformatics', 'computational biology', {'weight': 0.7})
('bioinformatics', 'biodiversity informatics', {'weight': 0.7})
('bioinformatics', 'list of open-source bioinformatics software', {'weight': 0.7})
('bioinformatics', 'health informatics', {'weight': 0.7})
('bioinformatics', 'bioinformatics', {'weight': 1})
('bioinformatics', 'list of free online bioinformatics courses', {'weight': 0.7})
('bioinformatics', 'list of scientific journals in bioinformatics', {'weight': 0.7})
('bioinformatics', 'margaret oakley dayhoff', {'weight': 0.7})
('bioinformatics', 'jumping library', {'weight': 0.7})
('bioinformatics', 'bioinformatics companies', {'weight': 0.7})
('image processing', 'image smoothing', {'weight': 0.7})
('image processing', 'multidimensional systems', {'weight': 0.7})
('image processing', 'image sharpening', {'weight': 0.7})
('image processing', 'near sets', {'weight': 0.7})
('image processing', 'multidimensional signal processing', {'weight': 0.5})
('image processing', 'image processing', {'weight': 1})
('image processing', 'photo manipulation', {'weight': 0.7})
('canonical lr parser', 'parsing algorithms', {'weight': 0.5})
('astronomical algorithms', 'algorithms and data structures stubs', {'weight': 0.5})
('astronomical algorithms', 'calendar algorithms', {'weight': 0.5})
('astronomical algorithms', 'computer science stubs', {'weight': 0.5})
('astronomical algorithms', 'computational physics', {'weight': 0.5})
('astronomical algorithms', 'astrodynamics', {'weight': 0.5})
('astronomical algorithms', 'astronomy stubs', {'weight': 0.5})
('kahan summation algorithm', 'numerical analysis', {'weight': 0.5})
('kahan summation algorithm', 'algorithms for calculating variance', {'weight': 0.7})
('kahan summation algorithm', 'computer arithmetic', {'weight': 0.5})
('geoscience', 'geo-leo', {'weight': 0.7})
('geoscience', 'list of unsolved problems in geoscience', {'weight': 0.7})
('geoscience', 'science-related lists', {'weight': 0.5})
('geoscience', 'earth sciences graphics software', {'weight': 0.7})
('geoscience', 'environment portal', {'weight': 0.7})
('geoscience', 'earth sciences', {'weight': 0.5})
('geoscience', 'nanogeoscience', {'weight': 0.7})
('geoscience', 'outline of earth science', {'weight': 0.7})
('geoscience', 'earth sciences portal', {'weight': 0.7})
('geoscience', 'list of russian earth scientists', {'weight': 0.7})
('geoscience', 'ecology portal', {'weight': 0.7})
('geoscience', 'physical sciences', {'weight': 0.5})
('geoscience', 'environmental geoscience', {'weight': 0.7})
('geoscience', 'structure of the earth', {'weight': 0.7})
('geoscience', 'list of geoscience organizations', {'weight': 0.7})
('geoscience', 'glossary of geology terms', {'weight': 0.7})
('cross-entropy method', 'heuristics', {'weight': 0.5})
('cross-entropy method', 'importance sampling', {'weight': 0.7})
('cross-entropy method', 'monte carlo methods', {'weight': 0.5})
('cross-entropy method', 'randomized algorithm', {'weight': 0.7})
('cross-entropy method', 'cross entropy', {'weight': 0.7})
('cross-entropy method', 'optimization algorithms and methods', {'weight': 0.5})
('cross-entropy method', 'machine learning', {'weight': 0.5})
('cross-entropy method', 'kullback\xe2\x80\x93leibler divergence', {'weight': 0.7})
('fast multipole method', 'numerical differential equations', {'weight': 0.5})
('fast multipole method', 'computational science', {'weight': 0.5})
('fast multipole method', 'numerical analysis', {'weight': 0.5})
('computational statistics', 'machine learning', {'weight': 0.7})
('computational statistics', 'numerical analysis', {'weight': 0.5})
('computational statistics', 'computational statistics', {'weight': 1})
('computational statistics', 'list of statistical packages', {'weight': 0.7})
('computational statistics', 'free statistical software', {'weight': 0.7})
('differential equation', 'differential equations', {'weight': 0.5})
('differential equation', 'integral equations', {'weight': 0.7})
('differential equation', 'exact differential equation', {'weight': 0.7})
('differential equation', 'recurrence relation', {'weight': 0.7})
('differential equation', 'picard\xe2\x80\x93lindel\xe3\xb6f theorem', {'weight': 0.7})
('differential equation', 'initial condition', {'weight': 0.7})
('differential equation', 'numerical methods', {'weight': 0.7})
('differential equation', 'complex differential equation', {'weight': 0.7})
('bitonic sorter', 'sorting algorithms', {'weight': 0.5})
('bitonic sorter', 'batcher odd\xe2\x80\x93even mergesort', {'weight': 0.7})
('dancing links', 'donald knuth', {'weight': 0.5})
('dancing links', 'search algorithms', {'weight': 0.5})
('dancing links', 'linked lists', {'weight': 0.5})
('dancing links', 'sudoku', {'weight': 0.5})
('elias gamma coding', 'lossless compression algorithms', {'weight': 0.5})
('elias gamma coding', 'elias delta coding', {'weight': 0.7})
('elias gamma coding', 'numeral systems', {'weight': 0.5})
('elias gamma coding', 'elias omega coding', {'weight': 0.7})
('cycle detection', 'fixed points (mathematics)', {'weight': 0.5})
('cycle detection', 'combinatorial algorithms', {'weight': 0.5})
('lanczos resampling', 'bicubic interpolation', {'weight': 0.7})
('lanczos resampling', 'signal processing', {'weight': 0.5})
('lanczos resampling', 'multivariate interpolation', {'weight': 0.5})
('lanczos resampling', 'sinc filter', {'weight': 0.7})
('lanczos resampling', 'nearest-neighbor interpolation', {'weight': 0.7})
('lanczos resampling', 'bilinear interpolation', {'weight': 0.7})
('lanczos resampling', 'spline interpolation', {'weight': 0.7})
('division algorithm', 'binary arithmetic', {'weight': 0.5})
('division algorithm', 'computer arithmetic algorithms', {'weight': 0.5})
('division algorithm', 'division (mathematics)', {'weight': 0.5})
('division algorithm', 'multiplication algorithm', {'weight': 0.7})
('division algorithm', 'pentium fdiv bug', {'weight': 0.7})
('division algorithm', 'computer arithmetic', {'weight': 0.5})
('elias omega coding', 'lossless compression algorithms', {'weight': 0.5})
('elias omega coding', 'elias delta coding', {'weight': 0.7})
('elias omega coding', 'numeral systems', {'weight': 0.5})
('elias omega coding', 'elias gamma coding', {'weight': 0.7})
('dynamical system', 'system dynamics', {'weight': 0.7})
('dynamical system', 'oscillation', {'weight': 0.7})
('dynamical system', 'dynamical systems', {'weight': 0.5})
('dynamical system', 'feedback passivation', {'weight': 0.7})
('dynamical system', 'dynamical systems theory', {'weight': 0.7})
('dynamical system', 'systems theory', {'weight': 0.7})
('dynamical system', 'behavioral modeling', {'weight': 0.7})
('dynamical system', 'people in systems and control', {'weight': 0.7})
('dynamical system', 'systems', {'weight': 0.5})
('dynamical system', 'infinite compositions of analytic functions', {'weight': 0.7})
('dynamical system', "sharkovskii's theorem", {'weight': 0.7})
('dynamical system', 'list of dynamical system topics', {'weight': 0.7})
('dynamical system', 'systems science portal', {'weight': 0.7})
('dynamical system', 'cognitive modeling', {'weight': 0.7})
('c3 linearization', 'programming language implementation', {'weight': 0.5})
('c3 linearization', 'programming language topic stubs', {'weight': 0.5})
('c3 linearization', 'object-oriented programming', {'weight': 0.5})
('computational physics', 'mathematical', {'weight': 0.7})
('computational physics', 'important publications in computational physics', {'weight': 0.7})
('computational physics', 'theoretical physics', {'weight': 0.7})
('computational physics', 'division of computational physics (dcomp)', {'weight': 0.7})
('computational physics', 'timeline of computational physics', {'weight': 0.7})
('computational physics', 'cecam - centre europ\xe3\xa9en de calcul atomique et mol\xe3\xa9culaire', {'weight': 0.7})
('computational physics', 'computational physics', {'weight': 1})
('computational physics', 'american physical society', {'weight': 0.7})
('computational physics', 'open source physics', {'weight': 0.7})
('artificial neural network', '20q', {'weight': 0.7})
('artificial neural network', 'optical neural network', {'weight': 0.7})
('artificial neural network', 'autoencoder', {'weight': 0.7})
('artificial neural network', 'time delay neural network', {'weight': 0.7})
('artificial neural network', 'biological cybernetics', {'weight': 0.7})
('artificial neural network', 'computational statistics', {'weight': 0.5})
('artificial neural network', 'convolutional neural network', {'weight': 0.7})
('artificial neural network', 'neuroevolution', {'weight': 0.7})
('artificial neural network', 'encog', {'weight': 0.7})
('artificial neural network', 'spiking neural network', {'weight': 0.7})
('artificial neural network', 'habituation', {'weight': 0.7})
('artificial neural network', 'cognitive science', {'weight': 0.7})
('artificial neural network', 'systolic array', {'weight': 0.7})
('artificial neural network', 'neuroscience', {'weight': 0.7})
('artificial neural network', 'catastrophic interference', {'weight': 0.7})
('artificial neural network', 'self-organizing map', {'weight': 0.7})
('artificial neural network', 'digital morphogenesis', {'weight': 0.7})
('artificial neural network', 'recurrent neural networks', {'weight': 0.7})
('artificial neural network', 'connectomics', {'weight': 0.7})
('artificial neural network', 'nonlinear system identification', {'weight': 0.7})
('artificial neural network', 'adaline', {'weight': 0.7})
('artificial neural network', 'multilinear subspace learning', {'weight': 0.7})
('artificial neural network', 'in situ adaptive tabulation', {'weight': 0.7})
('artificial neural network', 'gene expression programming', {'weight': 0.7})
('artificial neural network', 'connectionist expert system', {'weight': 0.7})
('artificial neural network', 'beam robotics', {'weight': 0.7})
('artificial neural network', 'radial basis function network', {'weight': 0.7})
('artificial neural network', 'neural gas', {'weight': 0.7})
('artificial neural network', 'tensor product network', {'weight': 0.7})
('artificial neural network', 'ni1000', {'weight': 0.7})
('artificial neural network', 'cultured neuronal networks', {'weight': 0.7})
('artificial neural network', 'associative memory', {'weight': 0.7})
('artificial neural network', 'group method of data handling', {'weight': 0.7})
('artificial neural network', 'mathematical psychology', {'weight': 0.5})
('artificial neural network', 'models of neural computation', {'weight': 0.7})
('artificial neural network', 'genetic algorithm', {'weight': 0.7})
('artificial neural network', 'neural network software', {'weight': 0.7})
('artificial neural network', 'parallel constraint satisfaction processes', {'weight': 0.7})
('artificial neural network', 'neural coding', {'weight': 0.7})
('artificial neural network', 'adaptive resonance theory', {'weight': 0.7})
('artificial neural network', 'biologically inspired computing', {'weight': 0.7})
('artificial neural network', 'blue brain', {'weight': 0.7})
('artificial neural network', 'artificial neural networks', {'weight': 0.5})
('artificial neural network', 'fuzzy logic', {'weight': 0.7})
('artificial neural network', 'cognitive architecture', {'weight': 0.7})
('artificial neural network', 'computational neuroscience', {'weight': 0.5})
('artificial neural network', 'backpropagation', {'weight': 0.7})
('artificial neural network', 'artificial life', {'weight': 0.7})
('artificial neural network', 'deep learning', {'weight': 0.7})
('artificial neural network', 'parallel distributed processing', {'weight': 0.7})
('artificial neural network', 'classification algorithms', {'weight': 0.5})
('artificial neural network', 'cerebellar model articulation controller', {'weight': 0.7})
('combinatorial optimization', 'combinatorial optimization', {'weight': 1})
('combinatorial optimization', 'computational complexity theory', {'weight': 0.5})
('combinatorial optimization', 'theoretical computer science', {'weight': 0.5})
('de bruijn graph', 'kautz graph', {'weight': 0.7})
('de bruijn graph', 'automata theory', {'weight': 0.5})
('de bruijn graph', 'dynamical systems', {'weight': 0.5})
('de bruijn graph', 'directed graphs', {'weight': 0.5})
('de bruijn graph', 'hamming graph', {'weight': 0.7})
('de bruijn graph', 'parametric families of graphs', {'weight': 0.5})
('de bruijn graph', 'de bruijn torus', {'weight': 0.7})
('de bruijn graph', 'de bruijn sequence', {'weight': 0.7})
('branch and cut', 'combinatorial optimization', {'weight': 0.5})
('branch and cut', 'optimization algorithms and methods', {'weight': 0.5})
('differential evolution', 'evolutionary algorithms', {'weight': 0.5})
('differential evolution', 'evolution strategy', {'weight': 0.7})
('differential evolution', 'cma-es', {'weight': 0.7})
('differential evolution', '[14]', {'weight': 0.7})
('differential evolution', 'genetic algorithm', {'weight': 0.7})
('differential evolution', 'optimization algorithms and methods', {'weight': 0.5})
('differential evolution', 'differential search algorithm', {'weight': 0.7})
('differential evolution', 'artificial bee colony algorithm', {'weight': 0.7})
('differential evolution', 'mathematical optimization', {'weight': 0.5})
('differential evolution', 'biogeography-based optimization', {'weight': 0.7})
('differential evolution', 'operations research', {'weight': 0.5})
('data mining', 'data mining in agriculture', {'weight': 0.7})
('data mining', 'formal sciences', {'weight': 0.5})
('data mining', 'classification', {'weight': 0.7})
('data mining', 'decision tree', {'weight': 0.7})
('data mining', 'regression analysis', {'weight': 0.7})
('data mining', 'sequence mining', {'weight': 0.7})
('data mining', 'data mining', {'weight': 1})
('data mining', 'mass surveillance', {'weight': 0.7})
('data mining', 'information extraction', {'weight': 0.7})
('data mining', 'analytics', {'weight': 0.7})
('data mining', 'business intelligence', {'weight': 0.7})
('data mining', 'structured data analysis', {'weight': 0.7})
('data mining', 'surveillance', {'weight': 0.7})
('data mining', 'association rule learning', {'weight': 0.7})
('data mining', 'neural networks', {'weight': 0.7})
('data mining', 'police-enforced anpr in the uk', {'weight': 0.7})
('data mining', 'profiling (information science)', {'weight': 0.7})
('data mining', 'quantitative structure\xe2\x80\x93activity relationship', {'weight': 0.7})
('data mining', 'decision support system', {'weight': 0.7})
('data mining', 'customer analytics', {'weight': 0.7})
('data mining', 'multilinear subspace learning', {'weight': 0.7})
('data mining', 'information integration', {'weight': 0.7})
('data mining', 'anomaly/outlier/change detection', {'weight': 0.7})
('data mining', 'category:applied data mining', {'weight': 0.7})
('data mining', 'online analytical processing', {'weight': 0.7})
('data mining', 'text mining', {'weight': 0.7})
('data mining', 'factor analysis', {'weight': 0.7})
('data mining', 'data analysis', {'weight': 0.7})
('data mining', 'data warehouse', {'weight': 0.7})
('data mining', 'data transformation', {'weight': 0.7})
('data mining', 'web scraping', {'weight': 0.7})
('data mining', 'stellar wind', {'weight': 0.7})
('data mining', 'named-entity recognition', {'weight': 0.7})
('data mining', 'bioinformatics', {'weight': 0.7})
('data mining', 'data mining in meteorology', {'weight': 0.7})
('data mining', 'drug discovery', {'weight': 0.7})
('data mining', 'genetic algorithms', {'weight': 0.7})
('data mining', 'national security agency', {'weight': 0.7})
('data mining', 'intention mining', {'weight': 0.7})
('data mining', 'exploratory data analysis', {'weight': 0.7})
('data mining', 'electronic discovery', {'weight': 0.7})
('data mining', 'web mining', {'weight': 0.7})
('data mining', 'data integration', {'weight': 0.7})
('data mining', 'support vector machines', {'weight': 0.7})
('data mining', 'cluster analysis', {'weight': 0.7})
('data mining', 'educational data mining', {'weight': 0.7})
('data mining', 'predictive analytics', {'weight': 0.7})
('harmony search', 'evolutionary algorithms', {'weight': 0.5})
('harmony search', 'optimization algorithms and methods', {'weight': 0.5})
('harmony search', 'combinatorial optimization', {'weight': 0.5})
('delayed column generation', 'optimization algorithms and methods', {'weight': 0.5})
('delayed column generation', 'applied mathematics stubs', {'weight': 0.5})
('bidirectional search', 'graph algorithms', {'weight': 0.5})
('bidirectional search', 'search algorithms', {'weight': 0.5})
('ambient occlusion', 'global illumination', {'weight': 0.7})
('ambient occlusion', 'global illumination algorithms', {'weight': 0.5})
('ambient occlusion', 'ray tracing', {'weight': 0.7})
('ambient occlusion', 'photon mapping', {'weight': 0.7})
('ambient occlusion', 'screen space ambient occlusion', {'weight': 0.7})
('ambient occlusion', 'shading', {'weight': 0.5})
('ambient occlusion', 'reflection occlusion', {'weight': 0.7})
('ambient occlusion', 'radiosity', {'weight': 0.7})
('bionics', 'cyborg', {'weight': 0.7})
('bionics', 'index of environmental articles', {'weight': 0.7})
('bionics', 'bionics', {'weight': 1})
('bionics', 'implant', {'weight': 0.7})
('bionics', 'bionic woman (2007 tv series)', {'weight': 0.7})
('bionics', 'biomechatronics', {'weight': 0.7})
('bionics', 'biophysics', {'weight': 0.7})
('bionics', 'machine', {'weight': 0.7})
('bionics', 'the bionic woman', {'weight': 0.7})
('bionics', 'prosthesis', {'weight': 0.7})
('bionics', 'cyborg (novel)', {'weight': 0.7})
('bionics', 'biotechnology', {'weight': 0.7})
('bionics', 'biomimetics', {'weight': 0.7})
('bionics', 'the six million dollar man', {'weight': 0.7})
('bionics', 'biomedical engineering', {'weight': 0.7})
('bionics', 'bionic architecture', {'weight': 0.7})
('bionics', 'history of technology', {'weight': 0.7})
('difference map algorithm', 'search algorithms', {'weight': 0.5})
('difference map algorithm', 'constraint programming', {'weight': 0.5})
('bisection method', 'binary search algorithm', {'weight': 0.7})
('bisection method', 'root-finding algorithm', {'weight': 0.7})
('bisection method', 'secant method', {'weight': 0.7})
('bisection method', 'nested intervals', {'weight': 0.7})
('bisection method', "newton's method", {'weight': 0.7})
('bisection method', "brent's method", {'weight': 0.7})
('bisection method', 'lehmer\xe2\x80\x93schur algorithm', {'weight': 0.7})
('bisection method', 'root-finding algorithms', {'weight': 0.5})
('hash tree (persistent data structure)', 'hashing', {'weight': 0.5})
('hash tree (persistent data structure)', 'computer programming stubs', {'weight': 0.5})
('hash tree (persistent data structure)', 'functional data structures', {'weight': 0.5})
('goldschmidt division', 'binary arithmetic', {'weight': 0.5})
('goldschmidt division', 'computer arithmetic algorithms', {'weight': 0.5})
('goldschmidt division', 'division (mathematics)', {'weight': 0.5})
('goldschmidt division', 'multiplication algorithm', {'weight': 0.7})
('goldschmidt division', 'pentium fdiv bug', {'weight': 0.7})
('goldschmidt division', 'computer arithmetic', {'weight': 0.5})
('convex polygon', 'convex geometry', {'weight': 0.5})
('convex polygon', 'cyclic polygon', {'weight': 0.7})
('convex polygon', 'tangential polygon', {'weight': 0.7})
('convex polygon', 'polygons', {'weight': 0.5})
('convex polygon', 'convex hull', {'weight': 0.7})
('dithering', 'digital audio', {'weight': 0.7})
('dithering', 'jitter', {'weight': 0.7})
('dithering', 'quantization (signal processing)', {'weight': 0.7})
('dithering', 'anti-aliasing', {'weight': 0.7})
('dithering', 'lossy data compression', {'weight': 0.7})
('dithering', 'computer graphic artifacts', {'weight': 0.5})
('dithering', 'digital signal processing', {'weight': 0.5})
('dithering', 'audio engineering', {'weight': 0.5})
('adler-32', 'list of hash functions', {'weight': 0.7})
('adler-32', 'checksum algorithms', {'weight': 0.5})
('all pairs shortest path', 'polynomial-time problems', {'weight': 0.5})
('all pairs shortest path', 'graph algorithms', {'weight': 0.5})
('all pairs shortest path', 'shortest path tree', {'weight': 0.7})
('all pairs shortest path', 'computational problems in graph theory', {'weight': 0.5})
('all pairs shortest path', 'pathfinding', {'weight': 0.7})
('all pairs shortest path', 'euclidean shortest path', {'weight': 0.7})
('all pairs shortest path', 'ieee 802.1aq', {'weight': 0.7})
('all pairs shortest path', 'flow network', {'weight': 0.7})
('all pairs shortest path', 'bidirectional search', {'weight': 0.7})
('all pairs shortest path', 'min-plus matrix multiplication', {'weight': 0.7})
('all pairs shortest path', 'network theory', {'weight': 0.5})
('lagrange polynomial', 'the chebfun system', {'weight': 0.7})
('lagrange polynomial', 'lebesgue constant (interpolation)', {'weight': 0.7})
('lagrange polynomial', 'polynomials', {'weight': 0.5})
('lagrange polynomial', 'frobenius covariant', {'weight': 0.7})
('lagrange polynomial', "sylvester's formula", {'weight': 0.7})
('lagrange polynomial', 'bernstein form', {'weight': 0.7})
('lagrange polynomial', "neville's algorithm", {'weight': 0.7})
('lagrange polynomial', 'newton form', {'weight': 0.7})
('lagrange polynomial', 'table of newtonian series', {'weight': 0.7})
('lagrange polynomial', "carlson's theorem", {'weight': 0.7})
('lagrange polynomial', 'interpolation', {'weight': 0.5})
('bayesian statistics', 'bayesian statistics', {'weight': 1})
('adaptive replacement cache', 'virtual memory', {'weight': 0.5})
('adaptive replacement cache', 'memory management algorithms', {'weight': 0.5})
('adaptive replacement cache', 'clock with adaptive replacement', {'weight': 0.7})
('fatigue (material)', 'critical plane analysis', {'weight': 0.7})
('fatigue (material)', 'solid mechanics', {'weight': 0.5})
('fatigue (material)', 'vibration fatigue', {'weight': 0.7})
('fatigue (material)', 'materials degradation', {'weight': 0.5})
('fatigue (material)', 'fracture mechanics', {'weight': 0.7})
('fatigue (material)', 'embedment', {'weight': 0.7})
('fatigue (material)', 'thermo-mechanical fatigue', {'weight': 0.7})
('fatigue (material)', "paris' law", {'weight': 0.7})
('fatigue (material)', 'aviation safety', {'weight': 0.7})
('fatigue (material)', 'mechanical failure modes', {'weight': 0.5})
('fatigue (material)', 'forensic materials engineering', {'weight': 0.7})
('fatigue (material)', 'fractography', {'weight': 0.7})
('iterative deepening depth-first search', 'graph algorithms', {'weight': 0.5})
('iterative deepening depth-first search', 'search algorithms', {'weight': 0.5})
('beam stack search', 'algorithms and data structures stubs', {'weight': 0.5})
('beam stack search', 'computer science stubs', {'weight': 0.5})
('beam stack search', 'search algorithms', {'weight': 0.5})
('chomsky normal form', 'kuroda normal form', {'weight': 0.7})
('chomsky normal form', 'greibach normal form', {'weight': 0.7})
('chomsky normal form', 'noam chomsky', {'weight': 0.5})
('chomsky normal form', 'formal languages', {'weight': 0.5})
('chomsky normal form', 'pumping lemma for context-free languages', {'weight': 0.7})
('chomsky normal form', 'cyk algorithm', {'weight': 0.7})
('chomsky normal form', 'backus-naur form', {'weight': 0.7})
('b\xe3\xa9zier curve', 'b\xe3\xa9zier surface', {'weight': 0.7})
('b\xe3\xa9zier curve', 'b-spline', {'weight': 0.7})
('b\xe3\xa9zier curve', 'string art', {'weight': 0.7})
('b\xe3\xa9zier curve', 'curves', {'weight': 0.5})
('b\xe3\xa9zier curve', 'graphic design', {'weight': 0.5})
('b\xe3\xa9zier curve', 'variation diminishing property of b\xe3\xa9zier curves', {'weight': 0.7})
('b\xe3\xa9zier curve', 'hermite curve', {'weight': 0.7})
('b\xe3\xa9zier curve', 'nurbs', {'weight': 0.7})
('b\xe3\xa9zier curve', 'interpolation', {'weight': 0.5})
('expectation-maximization algorithm', 'density estimation', {'weight': 0.7})
('expectation-maximization algorithm', 'total absorption spectroscopy', {'weight': 0.7})
('expectation-maximization algorithm', 'optimization algorithms and methods', {'weight': 0.5})
('expectation-maximization algorithm', 'majorize-minimization (mm) algorithm', {'weight': 0.7})
('expectation-maximization algorithm', 'estimation theory', {'weight': 0.5})
('expectation-maximization algorithm', 'statistical algorithms', {'weight': 0.5})
('expectation-maximization algorithm', 'missing data', {'weight': 0.5})
('expectation-maximization algorithm', 'data clustering algorithms', {'weight': 0.5})
('expectation-maximization algorithm', '[29]', {'weight': 0.7})
('expectation-maximization algorithm', 'machine learning algorithms', {'weight': 0.5})
('distributed systems', 'distributed cache', {'weight': 0.7})
('distributed systems', 'distributed algorithmic mechanism design', {'weight': 0.7})
('distributed systems', 'distributed computing', {'weight': 0.5})
('distributed systems', 'folding@home', {'weight': 0.7})
('distributed systems', 'edsger w. dijkstra prize in distributed computing', {'weight': 0.7})
('distributed systems', 'decentralized computing', {'weight': 0.7})
('distributed systems', 'plan 9 from bell labs', {'weight': 0.7})
('distributed systems', 'jungle computing', {'weight': 0.7})
('distributed systems', 'boinc', {'weight': 0.7})
('distributed systems', 'layered queueing network', {'weight': 0.7})
('distributed systems', 'list of important publications in concurrent, parallel, and distributed computing', {'weight': 0.7})
('distributed systems', 'list of distributed computing conferences', {'weight': 0.7})
('distributed systems', 'code mobility', {'weight': 0.7})
('distributed systems', 'appscale', {'weight': 0.7})
('distributed systems', 'inferno', {'weight': 0.7})
('distributed systems', 'parallel distributed processing', {'weight': 0.7})
('distributed systems', 'distributed operating system', {'weight': 0.7})
('distributed systems', 'library oriented architecture - loa', {'weight': 0.7})
('distributed systems', 'parallel programming model', {'weight': 0.7})
('formal grammar', 'linguistics', {'weight': 0.5})
('formal grammar', 'categorial grammar', {'weight': 0.7})
('formal grammar', 'grammar', {'weight': 0.5})
('formal grammar', 'concrete syntax tree', {'weight': 0.7})
('formal grammar', 'automata theory', {'weight': 0.5})
('formal grammar', 'adaptive grammar', {'weight': 0.7})
('formal grammar', 'extended backus\xe2\x80\x93naur form (ebnf)', {'weight': 0.7})
('formal grammar', 'grammar framework', {'weight': 0.7})
('formal grammar', 'syntax', {'weight': 0.5})
('formal grammar', 'lojban', {'weight': 0.7})
('formal grammar', 'backus\xe2\x80\x93naur form (bnf)', {'weight': 0.7})
('formal grammar', 'post canonical system', {'weight': 0.7})
('formal grammar', 'formal languages', {'weight': 0.5})
('formal grammar', 'well-formed formula', {'weight': 0.7})
('formal grammar', 'mathematical logic', {'weight': 0.5})
('formal grammar', 'ambiguous grammar', {'weight': 0.7})
('formal grammar', 'shape grammar', {'weight': 0.7})
('formal grammar', 'abstract syntax tree', {'weight': 0.7})
('formal grammar', 'l-system', {'weight': 0.7})
('cryptographic hash function', 'cryptographic hash functions', {'weight': 0.5})
('cryptographic hash function', 'cryptographic primitives', {'weight': 0.5})
('cryptographic hash function', 'cryptography', {'weight': 0.5})
('cryptographic hash function', 'hashing', {'weight': 0.5})
('digital differential analyzer (graphics algorithm)', 'computer graphics algorithms', {'weight': 0.5})
('digital differential analyzer (graphics algorithm)', 'digital geometry', {'weight': 0.5})
('digital differential analyzer (graphics algorithm)', "bresenham's line algorithm", {'weight': 0.7})
('digital differential analyzer (graphics algorithm)', "xiaolin wu's line algorithm", {'weight': 0.7})
('deterministic automaton', 'theoretical computer science stubs', {'weight': 0.5})
('deterministic automaton', 'automata theory', {'weight': 0.5})
("dekker's algorithm", "peterson's algorithm", {'weight': 0.7})
("dekker's algorithm", 'concurrency control algorithms', {'weight': 0.5})
("dekker's algorithm", "lamport's bakery algorithm", {'weight': 0.7})
("dekker's algorithm", 'semaphores', {'weight': 0.7})
("dekker's algorithm", "szymanski's algorithm", {'weight': 0.7})
("dekker's algorithm", 'dutch inventions', {'weight': 0.5})
("dekker's algorithm", 'eisenberg & mcguire algorithm', {'weight': 0.7})
('incremental heuristic search', 'robot control', {'weight': 0.5})
('incremental heuristic search', 'search algorithms', {'weight': 0.5})
('incremental heuristic search', 'artificial intelligence', {'weight': 0.5})
("dinic's algorithm", 'graph algorithms', {'weight': 0.5})
("dinic's algorithm", 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.7})
("dinic's algorithm", 'network flow', {'weight': 0.5})
("dinic's algorithm", 'maximum flow problem', {'weight': 0.7})
('hamming weight', "two's complement", {'weight': 0.7})
('hamming weight', 'minimum weight', {'weight': 0.7})
('hamming weight', 'coding theory', {'weight': 0.5})
('hamming weight', 'most frequent k characters', {'weight': 0.7})
('euclidean distance map', 'digital geometry', {'weight': 0.5})
('euclidean distance map', 'image processing', {'weight': 0.5})
("freivalds' algorithm", 'schwartz\xe2\x80\x93zippel lemma', {'weight': 0.7})
("freivalds' algorithm", 'matrix multiplication algorithms', {'weight': 0.5})
("freivalds' algorithm", 'randomized algorithms', {'weight': 0.5})
("freivalds' algorithm", 'matrix theory', {'weight': 0.5})
('bloom filter', 'skip list', {'weight': 0.7})
('bloom filter', 'computer programming portal', {'weight': 0.7})
('bloom filter', 'lossy compression algorithms', {'weight': 0.5})
('bloom filter', 'minhash', {'weight': 0.7})
('bloom filter', 'count\xe2\x80\x93min sketch', {'weight': 0.7})
('bloom filter', 'feature hashing', {'weight': 0.7})
('bloom filter', 'quotient filter', {'weight': 0.7})
('bloom filter', 'probabilistic data structures', {'weight': 0.5})
('bloom filter', 'hashing', {'weight': 0.5})
('bootstrap aggregating', 'ensemble learning', {'weight': 0.5})
('bootstrap aggregating', 'bootstrapping (statistics)', {'weight': 0.7})
('bootstrap aggregating', 'random subspace method', {'weight': 0.7})
('bootstrap aggregating', 'cross-validation (statistics)', {'weight': 0.7})
('bootstrap aggregating', 'computational statistics', {'weight': 0.5})
('bootstrap aggregating', 'boosting (meta-algorithm)', {'weight': 0.7})
('bootstrap aggregating', 'machine learning algorithms', {'weight': 0.5})
('bootstrap aggregating', 'random forest', {'weight': 0.7})
('graph search algorithm', 'graph algorithms', {'weight': 0.5})
('ground state', 'quantum mechanics', {'weight': 0.5})
('digital signal processing', 'digital electronics', {'weight': 0.5})
('digital signal processing', 'digital signal processing', {'weight': 1})
('digital signal processing', 'radar signal processing', {'weight': 0.5})
('digital signal processing', 'telecommunication theory', {'weight': 0.5})
("borwein's algorithm", 'pi algorithms', {'weight': 0.5})
("borwein's algorithm", 'gauss\xe2\x80\x93legendre algorithm', {'weight': 0.7})
("borwein's algorithm", 'bailey\xe2\x80\x93borwein\xe2\x80\x93plouffe formula', {'weight': 0.7})
('clock synchronization', 'synchronization', {'weight': 0.5})
('clock synchronization', 'distributed computing problems', {'weight': 0.5})
('clock synchronization', 'time portal', {'weight': 0.7})
('clock synchronization', 'vector clocks', {'weight': 0.7})
('clock synchronization', 'international atomic time', {'weight': 0.7})
('clock synchronization', 'network time protocol', {'weight': 0.7})
('clock synchronization', 'einstein synchronisation', {'weight': 0.7})
('clock synchronization', 'clocks', {'weight': 0.5})
('clock synchronization', 'precision time protocol', {'weight': 0.7})
('clock synchronization', 'network identity and time zone', {'weight': 0.7})
('embedded zerotree wavelet', 'lossless compression algorithms', {'weight': 0.5})
('embedded zerotree wavelet', 'image compression', {'weight': 0.5})
('embedded zerotree wavelet', 'wavelets', {'weight': 0.5})
('embedded zerotree wavelet', 'trees (data structures)', {'weight': 0.5})
('false position method', 'secant method', {'weight': 0.7})
('false position method', "brent's method", {'weight': 0.7})
('false position method', "ridders' method", {'weight': 0.7})
('false position method', 'root-finding algorithms', {'weight': 0.5})
('half-toning', 'oversampled binary image sensor', {'weight': 0.7})
('half-toning', 'photographic techniques', {'weight': 0.5})
('half-toning', 'pulse-width modulation', {'weight': 0.7})
('half-toning', 'printing terminology', {'weight': 0.5})
('half-toning', 'ben-day dots', {'weight': 0.7})
('half-toning', 'raster image processor (rip)', {'weight': 0.7})
('half-toning', 'mezzotint', {'weight': 0.7})
('half-toning', 'error diffusion', {'weight': 0.7})
('half-toning', 'dot gain', {'weight': 0.7})
('half-toning', 'duotone', {'weight': 0.7})
('half-toning', 'screentone', {'weight': 0.7})
('elgamal encryption', 'homomorphic encryption', {'weight': 0.7})
('elgamal encryption', 'public-key encryption schemes', {'weight': 0.5})
('elgamal encryption', 'elgamal signature scheme', {'weight': 0.7})
('lesk algorithm', 'word-sense disambiguation', {'weight': 0.5})
('lesk algorithm', 'computational linguistics', {'weight': 0.5})
('lesk algorithm', 'semantics', {'weight': 0.5})
('lesk algorithm', 'natural language processing', {'weight': 0.5})
('boehm garbage collector', 'automatic memory management', {'weight': 0.5})
('boehm garbage collector', 'c++ libraries', {'weight': 0.5})
('boehm garbage collector', 'free compilers and interpreters', {'weight': 0.5})
('boehm garbage collector', 'memory management software', {'weight': 0.5})
('boehm garbage collector', 'c libraries', {'weight': 0.5})
("fermat's factorization method", 'integer factorization algorithms', {'weight': 0.5})
("fermat's factorization method", 'completing the square', {'weight': 0.7})
("fermat's factorization method", 'table of gaussian integer factorizations', {'weight': 0.7})
("fermat's factorization method", 'foil rule', {'weight': 0.7})
("fermat's factorization method", "euler's factorization method", {'weight': 0.7})
("fermat's factorization method", 'factorization', {'weight': 0.7})
("fermat's factorization method", 'integer factorization', {'weight': 0.7})
("fermat's factorization method", 'monoid factorisation', {'weight': 0.7})
("fermat's factorization method", 'factor theorem', {'weight': 0.7})
("fermat's factorization method", 'unique factorization', {'weight': 0.7})
("fermat's factorization method", 'prime factor', {'weight': 0.7})
("fermat's factorization method", 'program synthesis', {'weight': 0.7})
("fermat's factorization method", 'factorization of polynomials', {'weight': 0.7})
("fermat's factorization method", "pascal's triangle", {'weight': 0.7})
('flow network', 'oriented matroid', {'weight': 0.7})
('flow network', 'constructal theory', {'weight': 0.7})
('flow network', 'ford\xe2\x80\x93fulkerson algorithm', {'weight': 0.7})
('flow network', 'network flow', {'weight': 0.5})
('flow network', 'max-flow min-cut theorem', {'weight': 0.7})
('flow network', 'graph algorithms', {'weight': 0.5})
('flow network', 'flow (computer networking)', {'weight': 0.7})
('flow network', 'centrality', {'weight': 0.7})
('flow network', 'directed graphs', {'weight': 0.5})
('flow network', 'flow graph', {'weight': 0.7})
('flow network', "dinic's algorithm", {'weight': 0.7})
('flow network', 'shortest path problem', {'weight': 0.7})
('flow network', 'operations research', {'weight': 0.5})
('golomb coding', 'lossless compression algorithms', {'weight': 0.5})
('inside-outside algorithm', 'algorithms and data structures stubs', {'weight': 0.5})
('inside-outside algorithm', 'computer science stubs', {'weight': 0.5})
('inside-outside algorithm', 'parsing algorithms', {'weight': 0.5})
('k-medoids', 'data clustering algorithms', {'weight': 0.5})
('k-medoids', 'statistical algorithms', {'weight': 0.5})
('disk scheduling', 'disk scheduling algorithms', {'weight': 0.5})
('disk scheduling', 'native command queuing', {'weight': 0.7})
('disk scheduling', 'tagged command queuing', {'weight': 0.7})
("chaitin's algorithm", 'graph algorithms', {'weight': 0.5})
('code-excited linear prediction', 'comparison of audio coding formats', {'weight': 0.7})
('code-excited linear prediction', 'mpeg-4 part 3', {'weight': 0.7})
('code-excited linear prediction', 'celt', {'weight': 0.7})
('code-excited linear prediction', 'g.718', {'weight': 0.7})
('code-excited linear prediction', 'g.729.1', {'weight': 0.7})
('code-excited linear prediction', 'speech codecs', {'weight': 0.5})
('code-excited linear prediction', 'g.728', {'weight': 0.7})
('boosting (meta-algorithm)', 'ensemble learning', {'weight': 0.5})
('boosting (meta-algorithm)', 'classification algorithms', {'weight': 0.5})
('adaptive huffman coding', 'lossless compression algorithms', {'weight': 0.5})
("fletcher's checksum", 'checksum algorithms', {'weight': 0.5})
('chien search', 'finite fields', {'weight': 0.5})
('chien search', 'error detection and correction', {'weight': 0.5})
('clipping (computer graphics)', 'computer graphics', {'weight': 0.5})
('clipping (computer graphics)', 'pruning (decision trees)', {'weight': 0.7})
('clipping (computer graphics)', 'visibility (geometry)', {'weight': 0.7})
('clipping (computer graphics)', 'clipping (computer graphics)', {'weight': 1})
('clipping (computer graphics)', 'boolean operations on polygons', {'weight': 0.7})
('clipping (computer graphics)', 'bounding volume', {'weight': 0.7})
('clipping (computer graphics)', 'hidden surface determination', {'weight': 0.7})
("lamport's bakery algorithm", 'semaphores', {'weight': 0.7})
("lamport's bakery algorithm", "dekker's algorithm", {'weight': 0.7})
("lamport's bakery algorithm", 'concurrency control algorithms', {'weight': 0.5})
("lamport's bakery algorithm", "szymanski's algorithm", {'weight': 0.7})
("lamport's bakery algorithm", "peterson's algorithm", {'weight': 0.7})
("lamport's bakery algorithm", 'eisenberg & mcguire algorithm', {'weight': 0.7})
('adaptive histogram equalization', 'histogram equalization', {'weight': 0.7})
('adaptive histogram equalization', 'image processing', {'weight': 0.5})
('adaptive histogram equalization', 'shadow and highlight enhancement', {'weight': 0.7})
('divide and conquer algorithm', 'mathematical induction', {'weight': 0.7})
('divide and conquer algorithm', 'optimization algorithms and methods', {'weight': 0.5})
('divide and conquer algorithm', 'mapreduce', {'weight': 0.7})
('divide and conquer algorithm', 'fork\xe2\x80\x93join model', {'weight': 0.7})
('divide and conquer algorithm', 'akra\xe2\x80\x93bazzi method', {'weight': 0.7})
('divide and conquer algorithm', 'divide and rule', {'weight': 0.7})
('divide and conquer algorithm', 'algorithms', {'weight': 0.5})
('divide and conquer algorithm', 'computer science portal', {'weight': 0.7})
('divide and conquer algorithm', 'master theorem', {'weight': 0.7})
('divide and conquer algorithm', 'heuristic (computer science)', {'weight': 0.7})
('divide and conquer algorithm', 'operations research', {'weight': 0.5})
('data encryption standard', 'des supplementary material', {'weight': 0.7})
('data encryption standard', 'broken block ciphers', {'weight': 0.5})
('data encryption standard', 'symmetric key algorithm', {'weight': 0.7})
('data encryption standard', 'triple des', {'weight': 0.7})
('data encryption standard', 'cryptography portal', {'weight': 0.7})
('data encryption standard', 'block ciphers', {'weight': 0.5})
('data encryption standard', 'skipjack (cipher)', {'weight': 0.7})
('data encryption standard', 'data encryption standard', {'weight': 1})
('genetic algorithms', 'search algorithms', {'weight': 0.5})
('genetic algorithms', 'optimization algorithms and methods', {'weight': 0.5})
('genetic algorithms', 'list of genetic algorithm applications', {'weight': 0.7})
('genetic algorithms', 'digital organisms', {'weight': 0.5})
('genetic algorithms', 'universal darwinism', {'weight': 0.7})
('genetic algorithms', 'genetic algorithms', {'weight': 1})
('genetic algorithms', 'cybernetics', {'weight': 0.5})
('genetic algorithms', 'mathematical optimization', {'weight': 0.5})
('genetic algorithms', 'propagation of schema', {'weight': 0.7})
('genetic algorithms', 'metaheuristics', {'weight': 0.7})
('bead sort', 'sorting algorithms', {'weight': 0.5})
('hash function', 'cryptographic hash functions', {'weight': 0.5})
('hash function', 'cryptographic primitives', {'weight': 0.5})
('hash function', 'cryptography', {'weight': 0.5})
('hash function', 'hashing', {'weight': 0.5})
('b-spline', 'splines', {'weight': 0.5})
('b-spline', 't-spline', {'weight': 0.7})
('b-spline', 'de boor algorithm', {'weight': 0.7})
('b-spline', 'b\xe3\xa9zier curve', {'weight': 0.7})
('b-spline', 'spline wavelet', {'weight': 0.7})
('b-spline', 'i-spline', {'weight': 0.7})
('b-spline', 'interpolation', {'weight': 0.5})
('b-spline', 'box spline', {'weight': 0.7})
('b-spline', 'm-spline', {'weight': 0.7})
('elias delta coding', 'lossless compression algorithms', {'weight': 0.5})
('elias delta coding', 'elias omega coding', {'weight': 0.7})
('elias delta coding', 'numeral systems', {'weight': 0.5})
('elias delta coding', 'elias gamma coding', {'weight': 0.7})
('assignment problem', 'national resident matching program', {'weight': 0.7})
('assignment problem', 'polynomial-time problems', {'weight': 0.5})
('assignment problem', 'stable marriage problem', {'weight': 0.7})
('assignment problem', 'monge-kantorovich problem', {'weight': 0.7})
('assignment problem', 'quadratic assignment problem', {'weight': 0.7})
('assignment problem', 'combinatorial optimization', {'weight': 0.5})
('assignment problem', 'linear programming', {'weight': 0.5})
('assignment problem', 'stable roommates problem', {'weight': 0.7})
('assignment problem', 'generalized assignment problem', {'weight': 0.7})
('assignment problem', 'auction algorithm', {'weight': 0.7})
('assignment problem', 'linear bottleneck assignment problem', {'weight': 0.7})
('assignment problem', 'weapon target assignment problem', {'weight': 0.7})
('assignment problem', 'matching', {'weight': 0.5})
('evolution strategy', 'evolutionary algorithms', {'weight': 0.5})
('evolution strategy', 'genetic algorithm', {'weight': 0.7})
('evolution strategy', 'covariance matrix adaptation evolution strategy (cma-es)', {'weight': 0.7})
('evolution strategy', 'stochastic algorithms', {'weight': 0.5})
('evolution strategy', 'evolutionary computation', {'weight': 0.7})
('evolution strategy', 'natural evolution strategy', {'weight': 0.7})
('euclidean minimum spanning tree', 'geometric graphs', {'weight': 0.5})
('euclidean minimum spanning tree', 'rectilinear minimum spanning tree', {'weight': 0.7})
('euclidean minimum spanning tree', 'spanning tree', {'weight': 0.5})
('inverse iteration', 'numerical linear algebra', {'weight': 0.5})
('inverse iteration', 'rayleigh quotient iteration', {'weight': 0.7})
('inverse iteration', 'list of eigenvalue algorithms', {'weight': 0.7})
('inverse iteration', 'power iteration', {'weight': 0.7})
('extrapolation', 'dead reckoning', {'weight': 0.7})
('extrapolation', 'extrapolation domain analysis', {'weight': 0.7})
('extrapolation', 'forecasting', {'weight': 0.7})
('extrapolation', 'richardson extrapolation', {'weight': 0.7})
('extrapolation', 'multigrid method', {'weight': 0.7})
('extrapolation', 'regression analysis', {'weight': 0.7})
('extrapolation', 'prediction interval', {'weight': 0.7})
('extrapolation', 'static analysis', {'weight': 0.7})
('extrapolation', 'asymptotic analysis', {'weight': 0.5})
('extrapolation', 'fast extrapolation', {'weight': 0.7})
('extrapolation', 'trend estimation', {'weight': 0.7})
('extrapolation', 'interior reconstruction', {'weight': 0.7})
('extrapolation', 'minimum polynomial extrapolation', {'weight': 0.7})
('extrapolation', 'interpolation', {'weight': 0.7})
('chain matrix multiplication', 'optimization algorithms and methods', {'weight': 0.5})
('chain matrix multiplication', 'dynamic programming', {'weight': 0.5})
('chain matrix multiplication', 'matrices', {'weight': 0.5})
('glr parser', 'comparison of parser generators', {'weight': 0.7})
('glr parser', 'gnu bison', {'weight': 0.7})
('glr parser', 'dms software reengineering toolkit', {'weight': 0.7})
('glr parser', 'parsing algorithms', {'weight': 0.5})
('glr parser', 'asf+sdf meta environment', {'weight': 0.7})
('demon algorithm', 'computational physics', {'weight': 0.5})
('demon algorithm', 'monte carlo methods', {'weight': 0.7})
('demon algorithm', 'metropolis algorithm', {'weight': 0.7})
('demon algorithm', 'sampling techniques', {'weight': 0.5})
('chakravala method', 'indian mathematics', {'weight': 0.5})
('chakravala method', 'diophantine equations', {'weight': 0.5})
('chakravala method', 'brahmagupta', {'weight': 0.5})
('chakravala method', 'number theoretic algorithms', {'weight': 0.5})
('fibonacci numbers', 'recursion (computer science)#fibonacci', {'weight': 0.7})
('fibonacci numbers', 'fibonacci word', {'weight': 0.7})
('fibonacci numbers', 'practical number', {'weight': 0.7})
('fibonacci numbers', 'helicoid', {'weight': 0.7})
('fibonacci numbers', 'elliott wave principle', {'weight': 0.7})
('fibonacci numbers', 'engel expansion', {'weight': 0.7})
('fibonacci numbers', 'verner emil hoggatt, jr.', {'weight': 0.7})
('fibonacci numbers', 'hylomorphism (computer science)', {'weight': 0.7})
('fibonacci numbers', 'collatz conjecture', {'weight': 0.7})
('fibonacci numbers', 'the fibonacci association', {'weight': 0.7})
('fibonacci numbers', 'fibonacci numbers', {'weight': 1})
('hash join', 'join algorithms', {'weight': 0.5})
('hash join', 'hashing', {'weight': 0.5})
('graham scan', 'convex hull algorithms', {'weight': 0.5})
('cyk algorithm', 'glr parser', {'weight': 0.7})
('cyk algorithm', 'earley parser', {'weight': 0.7})
('cyk algorithm', 'parsing algorithms', {'weight': 0.5})
('cyk algorithm', 'packrat parser', {'weight': 0.7})
("huang's algorithm", 'termination algorithms', {'weight': 0.5})
('hidden markov model', 'hierarchical hidden markov model', {'weight': 0.7})
('hidden markov model', 'layered hidden markov model', {'weight': 0.7})
('hidden markov model', 'viterbi algorithm', {'weight': 0.7})
('hidden markov model', 'bayesian programming', {'weight': 0.7})
('hidden markov model', 'conditional random field', {'weight': 0.7})
('hidden markov model', 'markov models', {'weight': 0.5})
('hidden markov model', 'baum\xe2\x80\x93welch algorithm', {'weight': 0.7})
('hidden markov model', 'hhpred / hhsearch', {'weight': 0.7})
('hidden markov model', 'estimation theory', {'weight': 0.7})
('hidden markov model', 'andrey markov', {'weight': 0.7})
('hidden markov model', 'bayesian inference', {'weight': 0.7})
('hidden markov model', 'hidden semi-markov model', {'weight': 0.7})
('hidden markov model', 'poisson hidden markov model', {'weight': 0.7})
('hidden markov model', 'hidden markov models', {'weight': 0.5})
('hidden markov model', 'time series', {'weight': 0.7})
('hidden markov model', 'hmmer', {'weight': 0.7})
('hidden markov model', 'bioinformatics', {'weight': 0.5})
('hidden markov model', 'stochastic context-free grammar', {'weight': 0.7})
('hidden markov model', 'sequential dynamical system', {'weight': 0.7})
('hidden markov model', 'variable-order markov model', {'weight': 0.7})
('hidden markov model', 'hidden bernoulli model', {'weight': 0.7})
('edge detection', 'convolution#applications', {'weight': 0.7})
('edge detection', 'image derivatives', {'weight': 0.7})
('edge detection', 'image noise reduction', {'weight': 0.7})
('edge detection', 'gabor filter', {'weight': 0.7})
('edge detection', 'kirsch operator', {'weight': 0.7})
('edge detection', 'feature detection (computer vision)', {'weight': 0.7})
('edge detection', 'ridge detection', {'weight': 0.7})
('edge detection', 'image processing', {'weight': 0.5})
("gosper's algorithm", 'hypergeometric functions', {'weight': 0.5})
("gosper's algorithm", 'computer algebra', {'weight': 0.5})
('collision detection', 'physics engine', {'weight': 0.7})
('collision detection', 'video game development', {'weight': 0.5})
('collision detection', 'bounding volume', {'weight': 0.7})
('collision detection', 'computer physics engines', {'weight': 0.5})
('collision detection', 'gilbert\xe2\x80\x93johnson\xe2\x80\x93keerthi distance algorithm', {'weight': 0.7})
('collision detection', 'game physics', {'weight': 0.7})
('collision detection', 'computational physics', {'weight': 0.5})
('collision detection', 'lubachevsky-stillinger algorithm', {'weight': 0.7})
('collision detection', 'ragdoll physics', {'weight': 0.7})
('collision detection', 'hit-testing', {'weight': 0.7})
('ant colony optimization', 'stochastic optimization', {'weight': 0.5})
('best-first search', 'beam search', {'weight': 0.7})
('best-first search', "dijkstra's algorithm", {'weight': 0.7})
('best-first search', 'search algorithms', {'weight': 0.5})
('best-first search', 'a* search algorithm', {'weight': 0.7})
('bicubic interpolation', 'computer graphics portal', {'weight': 0.7})
('bicubic interpolation', 'spatial anti-aliasing', {'weight': 0.7})
('bicubic interpolation', 'multivariate interpolation', {'weight': 0.5})
('bicubic interpolation', 'bilinear interpolation', {'weight': 0.7})
('bicubic interpolation', 'mathematics portal', {'weight': 0.7})
('bicubic interpolation', 'cubic hermite spline', {'weight': 0.7})
('bicubic interpolation', 'natural neighbor interpolation', {'weight': 0.7})
('bicubic interpolation', 'b\xe3\xa9zier surface', {'weight': 0.7})
('bicubic interpolation', 'tricubic interpolation', {'weight': 0.7})
('bicubic interpolation', 'image processing', {'weight': 0.5})
('bicubic interpolation', 'sinc filter', {'weight': 0.7})
('bicubic interpolation', 'lanczos resampling', {'weight': 0.7})
('bicubic interpolation', 'spline interpolation', {'weight': 0.7})
('cholesky decomposition', "sylvester's law of inertia", {'weight': 0.7})
('cholesky decomposition', 'matrix square root', {'weight': 0.7})
('cholesky decomposition', 'symbolic cholesky decomposition', {'weight': 0.7})
('cholesky decomposition', 'matrix decompositions', {'weight': 0.5})
('cholesky decomposition', 'numerical linear algebra', {'weight': 0.5})
('cholesky decomposition', 'minimum degree algorithm', {'weight': 0.7})
('cholesky decomposition', 'matrix decomposition', {'weight': 0.7})
('cholesky decomposition', 'operator theory', {'weight': 0.5})
('cholesky decomposition', 'cycle rank', {'weight': 0.7})
('forward error correction', 'burst error-correcting code', {'weight': 0.7})
('forward error correction', 'soft-decision decoder', {'weight': 0.7})
('forward error correction', 'erasure codes', {'weight': 0.7})
('forward error correction', 'error detection and correction', {'weight': 0.7})
('forward error correction', 'error-correcting codes with feedback', {'weight': 0.7})
('forward error correction', 'code rate', {'weight': 0.7})
('exponential backoff', 'control theory', {'weight': 0.7})
('exponential backoff', 'ethernet', {'weight': 0.5})
('exponential backoff', 'networking algorithms', {'weight': 0.5})
('exponential backoff', 'scheduling algorithms', {'weight': 0.5})
('canny edge detector', 'feature extraction', {'weight': 0.7})
('canny edge detector', 'digital image processing', {'weight': 0.7})
('canny edge detector', 'scale space', {'weight': 0.7})
('canny edge detector', 'ridge detection', {'weight': 0.7})
('canny edge detector', 'computer vision', {'weight': 0.7})
('canny edge detector', 'feature detection (computer vision)', {'weight': 0.7})
('euclidean algorithm', 'euclidean rhythm', {'weight': 0.7})
('euclidean algorithm', 'euclid', {'weight': 0.5})
('euclidean algorithm', 'number theoretic algorithms', {'weight': 0.5})
('eigenvalue algorithm', 'numerical linear algebra', {'weight': 0.5})
('eigenvalue algorithm', 'list of eigenvalue algorithms', {'weight': 0.7})
('adaboost', 'ensemble learning', {'weight': 0.5})
('adaboost', 'brownboost', {'weight': 0.7})
('adaboost', 'gradient boosting', {'weight': 0.7})
('adaboost', 'bootstrap aggregating', {'weight': 0.7})
('adaboost', 'classification algorithms', {'weight': 0.5})
('adaboost', 'coboosting', {'weight': 0.7})
('backtracking', 'backjumping', {'weight': 0.7})
('backtracking', 'search algorithms', {'weight': 0.5})
('backtracking', "ariadne's thread (logic)", {'weight': 0.7})
('backtracking', 'recursion (computer science)', {'weight': 0.7})
('backtracking', 'pattern matching', {'weight': 0.5})
('backtracking', 'operations research', {'weight': 0.5})
('causality', 'causality', {'weight': 1})
('causality', 'concepts in metaphysics', {'weight': 0.5})
('causality', 'concepts in physics', {'weight': 0.5})
('causality', 'causal inference', {'weight': 0.5})
('causality', 'concepts in epistemology', {'weight': 0.5})
('causality', 'conditionals', {'weight': 0.5})
('causality', 'philosophy of science', {'weight': 0.5})
('context-free grammar', '1956 in computer science', {'weight': 0.5})
('context-free grammar', 'earley algorithm', {'weight': 0.7})
('context-free grammar', 'algorithms for context-free grammar generation', {'weight': 0.7})
('context-free grammar', 'll parser', {'weight': 0.7})
('context-free grammar', 'compiler construction', {'weight': 0.5})
('context-free grammar', 'glr parser', {'weight': 0.7})
('context-free grammar', 'formal languages', {'weight': 0.5})
('context-free grammar', 'programming language topics', {'weight': 0.5})
('context-free grammar', 'pumping lemma for context-free languages', {'weight': 0.7})
('context-free grammar', 'stochastic context-free grammar', {'weight': 0.7})
('context-free grammar', 'cyk algorithm', {'weight': 0.7})
('context-free grammar', 'parsing expression grammar', {'weight': 0.7})
("knight's tour", 'mathematical chess problems', {'weight': 0.5})
("knight's tour", 'george koltanowski', {'weight': 0.7})
("knight's tour", 'graph algorithms', {'weight': 0.5})
("knight's tour", 'mathematical problems', {'weight': 0.5})
("knight's tour", 'eight queens puzzle', {'weight': 0.7})
("knight's tour", 'hamiltonian paths and cycles', {'weight': 0.5})
("knight's tour", 'chess problems', {'weight': 0.5})
("knight's tour", 'abu-bakr muhammad ben yahya as-suli', {'weight': 0.7})
("knight's tour", "longest uncrossed knight's path", {'weight': 0.7})
('entropy encoding', 'lossless compression algorithms', {'weight': 0.5})
('entropy encoding', 'entropy and information', {'weight': 0.5})
('heuristic', 'heuristics', {'weight': 0.5})
('heuristic', 'social heuristics', {'weight': 0.7})
('heuristic', 'algorithm', {'weight': 0.7})
('heuristic', 'daniel kahneman', {'weight': 0.7})
('heuristic', 'neuroheuristics', {'weight': 0.7})
('heuristic', 'failure mode and effects analysis', {'weight': 0.7})
('heuristic', 'problem solving', {'weight': 0.7})
('heuristic', 'adaptive toolbox', {'weight': 0.7})
('heuristic', 'behavioral economics', {'weight': 0.7})
('heuristic', 'erudition', {'weight': 0.7})
('heuristic', 'list of biases in judgment and decision making', {'weight': 0.7})
('estimation theory', 'chebyshev center', {'weight': 0.7})
('estimation theory', 'completeness (statistics)', {'weight': 0.7})
('estimation theory', 'category:estimation theory', {'weight': 0.7})
('estimation theory', 'nuisance parameter', {'weight': 0.7})
('estimation theory', 'spectral density', {'weight': 0.7})
('estimation theory', 'minimum mean squared error', {'weight': 0.7})
('estimation theory', 'efficiency (statistics)', {'weight': 0.7})
('estimation theory', 'fermi problem', {'weight': 0.7})
('estimation theory', 'expectation-maximization algorithm', {'weight': 0.7})
('estimation theory', 'maximum likelihood', {'weight': 0.7})
('estimation theory', 'rao\xe2\x80\x93blackwell theorem', {'weight': 0.7})
('estimation theory', 'best linear unbiased estimator', {'weight': 0.7})
('estimation theory', 'markov chain monte carlo', {'weight': 0.7})
('estimation theory', 'nonlinear system identification', {'weight': 0.7})
('estimation theory', 'estimator bias', {'weight': 0.7})
('estimation theory', 'sufficiency (statistics)', {'weight': 0.7})
('estimation theory', 'wiener filter', {'weight': 0.7})
('estimation theory', 'spectral density estimation', {'weight': 0.7})
('estimation theory', 'grey box model', {'weight': 0.7})
('estimation theory', 'particle filter', {'weight': 0.7})
('estimation theory', 'least-squares spectral analysis', {'weight': 0.7})
('estimation theory', 'signal processing', {'weight': 0.5})
('estimation theory', 'statistical signal processing', {'weight': 0.7})
('estimation theory', 'estimation theory', {'weight': 1})
('estimation theory', 'detection theory', {'weight': 0.7})
('estimation theory', 'category:estimation for specific distributions', {'weight': 0.7})
('estimation theory', 'parametric equation', {'weight': 0.7})
('estimation theory', 'kalman filter', {'weight': 0.7})
('estimation theory', 'generalized method of moments', {'weight': 0.7})
('estimation theory', 'maximum entropy spectral estimation', {'weight': 0.7})
('estimation theory', 'matched filter', {'weight': 0.7})
('estimation theory', 'information theory', {'weight': 0.7})
('estimation theory', 'cram\xe3\xa9r\xe2\x80\x93rao bound', {'weight': 0.7})
('estimation theory', 'maximum a posteriori', {'weight': 0.7})
('estimation theory', 'estimator', {'weight': 0.7})
('estimation theory', 'method of moments', {'weight': 0.7})
('estimation theory', 'statistical inference', {'weight': 0.5})
('estimation theory', 'minimum variance unbiased estimator', {'weight': 0.7})
('jacobi eigenvalue algorithm', 'numerical linear algebra', {'weight': 0.5})
('audio data compression', 'compression artifact', {'weight': 0.7})
('audio data compression', 'video compression', {'weight': 0.5})
('audio data compression', 'dictionary coder', {'weight': 0.7})
('audio data compression', 'dynamic markov compression', {'weight': 0.7})
('audio data compression', 'canterbury corpus', {'weight': 0.7})
('audio data compression', 'kolmogorov complexity', {'weight': 0.7})
('audio data compression', 'range encoding', {'weight': 0.7})
('audio data compression', 'utility software types', {'weight': 0.5})
('audio data compression', 'http compression', {'weight': 0.7})
('audio data compression', 'film and video technology', {'weight': 0.5})
('audio data compression', 'auditory masking', {'weight': 0.7})
('audio data compression', 'digital television', {'weight': 0.5})
('audio data compression', 'distributed source coding', {'weight': 0.7})
('audio data compression', 'data compression symmetry', {'weight': 0.7})
('audio data compression', 'sub-band coding', {'weight': 0.7})
('audio data compression', 'entropy encoding', {'weight': 0.7})
('audio data compression', 'computer storage', {'weight': 0.5})
('audio data compression', 'dyadic distribution', {'weight': 0.7})
('audio data compression', 'context mixing', {'weight': 0.7})
('audio data compression', 'calgary corpus', {'weight': 0.7})
('audio data compression', 'universal code (data compression)', {'weight': 0.7})
('audio data compression', 'magic compression algorithm', {'weight': 0.7})
('audio data compression', 'elias gamma coding', {'weight': 0.7})
('audio data compression', 'minimum description length', {'weight': 0.7})
('audio data compression', 'digital audio', {'weight': 0.5})
('audio data compression', 'data compression', {'weight': 0.5})
('audio data compression', 'golomb coding', {'weight': 0.7})
('audio data compression', 'videotelephony', {'weight': 0.5})
('audio data compression', 'vector quantization', {'weight': 0.7})
('audio data compression', 'fibonacci coding', {'weight': 0.7})
('audio data compression', 'modulo-n code', {'weight': 0.7})
('audio data compression', 'audio engineering', {'weight': 0.5})
('aks primality test', 'finite fields', {'weight': 0.5})
('aks primality test', 'primality tests', {'weight': 0.5})
('insertion sort', 'sorting algorithms', {'weight': 0.5})
('insertion sort', 'comparison sorts', {'weight': 0.5})
('insertion sort', 'stable sorts', {'weight': 0.5})
('insertion sort', 'online sorts', {'weight': 0.5})
('insertion sort', 'adaptive sorts', {'weight': 0.5})
('finite difference method', 'finite differences', {'weight': 0.5})
('finite difference method', 'finite difference', {'weight': 0.7})
('finite difference method', 'numerical differential equations', {'weight': 0.5})
('finite difference method', 'lax\xe2\x80\x93richtmyer theorem', {'weight': 0.7})
('finite difference method', 'finite difference coefficients', {'weight': 0.7})
('finite difference method', 'finite difference methods for option pricing', {'weight': 0.7})
('finite difference method', 'finite element method', {'weight': 0.7})
('finite difference method', 'upwind differencing scheme for convection', {'weight': 0.7})
('finite difference method', 'stencil (numerical analysis)', {'weight': 0.7})
('finite difference method', 'five-point stencil', {'weight': 0.7})
('finite difference method', 'central differencing scheme', {'weight': 0.7})
('finite difference method', 'finite difference time domain', {'weight': 0.7})
('computer algebra', 'symbolic-numeric computation', {'weight': 0.7})
('computer algebra', 'model checker', {'weight': 0.7})
('computer algebra', 'symbolic simulation', {'weight': 0.7})
('computer algebra', 'automated theorem prover', {'weight': 0.7})
('computer algebra', 'proof checker', {'weight': 0.7})
('computer algebra', 'computer algebra system', {'weight': 0.7})
('computer algebra', 'computer-assisted proof', {'weight': 0.7})
('computer algebra', 'computer algebra', {'weight': 1})
('gift wrapping algorithm', 'convex hull algorithms', {'weight': 0.5})
('gift wrapping algorithm', 'polytopes', {'weight': 0.5})
('decision tree learning', 'binary decision diagram', {'weight': 0.7})
('decision tree learning', 'id3 algorithm', {'weight': 0.7})
('decision tree learning', 'decision stump', {'weight': 0.7})
('decision tree learning', 'chaid', {'weight': 0.7})
('decision tree learning', 'cart', {'weight': 0.7})
('decision tree learning', 'structured data analysis (statistics)', {'weight': 0.7})
('decision tree learning', 'decision trees', {'weight': 0.5})
('decision tree learning', 'alternating decision tree', {'weight': 0.7})
('decision tree learning', 'decision tree pruning', {'weight': 0.7})
('decision tree learning', 'c4.5 algorithm', {'weight': 0.7})
('decision tree learning', 'incremental decision tree', {'weight': 0.7})
('decision tree learning', 'classification algorithms', {'weight': 0.5})
('adaptive coding', 'lossless compression algorithms', {'weight': 0.5})
('list of data structures', 'data structures', {'weight': 0.5})
('list of data structures', 'computing-related lists', {'weight': 0.5})
('convex hull', 'computational geometry', {'weight': 0.5})
('convex hull', 'alpha shape', {'weight': 0.7})
('convex hull', 'convex analysis', {'weight': 0.5})
('convex hull', "helly's theorem", {'weight': 0.7})
('convex hull', 'oloid', {'weight': 0.7})
('convex hull', 'holomorphically convex hull', {'weight': 0.7})
('convex hull', 'choquet theory', {'weight': 0.7})
('convex hull', 'convex hulls', {'weight': 0.5})
('convex hull', 'orthogonal convex hull', {'weight': 0.7})
('convex hull', 'krein\xe2\x80\x93milman theorem', {'weight': 0.7})
('convex hull', 'affine hull', {'weight': 0.7})
('convex hull', 'closure operators', {'weight': 0.5})
('convex hull', 'concave set', {'weight': 0.7})
('convex hull', 'linear hull', {'weight': 0.7})
('branch and bound', 'optimization algorithms and methods', {'weight': 0.5})
('branch and bound', 'cutting plane', {'weight': 0.7})
('branch and bound', 'branch-and-cut', {'weight': 0.7})
('branch and bound', 'combinatorial optimization', {'weight': 0.5})
('branch and bound', 'backtracking', {'weight': 0.7})
('branch and bound', 'integer linear programs', {'weight': 0.7})
('laplacian smoothing', 'mesh generation', {'weight': 0.5})
('laplacian smoothing', 'geometry stubs', {'weight': 0.5})
('garbage collection (computer science)', 'international symposium on memory management', {'weight': 0.7})
('garbage collection (computer science)', 'automatic memory management', {'weight': 0.5})
('garbage collection (computer science)', 'computer programming portal', {'weight': 0.7})
('garbage collection (computer science)', 'solid-state computer storage', {'weight': 0.5})
('garbage collection (computer science)', 'destructor (computer programming)', {'weight': 0.7})
('garbage collection (computer science)', 'memory management', {'weight': 0.7})
('bully algorithm', 'distributed algorithms', {'weight': 0.5})
('bully algorithm', 'distributed computing#coordinator election', {'weight': 0.7})
('bully algorithm', 'chang and roberts algorithm', {'weight': 0.7})
('jump search', 'search algorithms', {'weight': 0.5})
("karger's algorithm", 'graph algorithms', {'weight': 0.5})
("karger's algorithm", 'graph connectivity', {'weight': 0.5})
("cheney's algorithm", 'automatic memory management', {'weight': 0.5})
('interpolation', 'video signal', {'weight': 0.5})
('interpolation', 'multivariate interpolation', {'weight': 0.7})
('interpolation', 'polynomial interpolation', {'weight': 0.7})
('interpolation', 'simple rational approximation', {'weight': 0.7})
('interpolation', "brahmagupta's interpolation formula", {'weight': 0.7})
('interpolation', 'missing data', {'weight': 0.7})
('interpolation', 'extrapolation', {'weight': 0.7})
('interpolation', 'video', {'weight': 0.5})
('interpolation', 'imputation (statistics)', {'weight': 0.7})
('interpolation', 'newton\xe2\x80\x93cotes formulas', {'weight': 0.7})
('interpolation', 'bilinear interpolation', {'weight': 0.7})
('interpolation', 'barycentric coordinates \xe2\x80\x93 for interpolating within on a triangle or tetrahedron', {'weight': 0.7})
('interpolation', 'interpolation', {'weight': 1})
('lagrange interpolation', 'the chebfun system', {'weight': 0.7})
('lagrange interpolation', 'lebesgue constant (interpolation)', {'weight': 0.7})
('lagrange interpolation', 'polynomials', {'weight': 0.5})
('lagrange interpolation', 'frobenius covariant', {'weight': 0.7})
('lagrange interpolation', "sylvester's formula", {'weight': 0.7})
('lagrange interpolation', 'bernstein form', {'weight': 0.7})
('lagrange interpolation', "neville's algorithm", {'weight': 0.7})
('lagrange interpolation', 'newton form', {'weight': 0.7})
('lagrange interpolation', 'table of newtonian series', {'weight': 0.7})
('lagrange interpolation', "carlson's theorem", {'weight': 0.7})
('lagrange interpolation', 'interpolation', {'weight': 0.5})
('incremental encoding', 'lossless compression algorithms', {'weight': 0.5})
('incremental encoding', 'database index techniques', {'weight': 0.5})
('incremental encoding', 'storage software stubs', {'weight': 0.5})
('cone algorithm', 'molecular modelling software', {'weight': 0.5})
('cone algorithm', 'geometric algorithms', {'weight': 0.5})
("chew's second algorithm", 'mesh generation', {'weight': 0.5})
("chew's second algorithm", 'triangulation (geometry)', {'weight': 0.5})
('flashsort', 'sorting algorithms', {'weight': 0.5})
('dynamic time warping', 'time series analysis', {'weight': 0.5})
('dynamic time warping', 'levenshtein distance', {'weight': 0.7})
('dynamic time warping', 'dynamic programming', {'weight': 0.5})
('dynamic time warping', 'machine learning algorithms', {'weight': 0.5})
('dynamic time warping', 'elastic matching', {'weight': 0.7})
('difference-map algorithm', 'search algorithms', {'weight': 0.5})
('difference-map algorithm', 'constraint programming', {'weight': 0.5})
('cache algorithms', 'cache (computing)', {'weight': 0.5})
('cache algorithms', 'locality of reference', {'weight': 0.7})
('cache algorithms', 'memory management algorithms', {'weight': 0.5})
('cache algorithms', 'distributed cache', {'weight': 0.7})
('cache algorithms', 'cache-oblivious algorithm', {'weight': 0.7})
('huffman coding', 'adaptive huffman coding', {'weight': 0.7})
('huffman coding', 'group 4 compression', {'weight': 0.7})
('huffman coding', '1952 in computer science', {'weight': 0.5})
('huffman coding', 'data compression', {'weight': 0.7})
('huffman coding', 'varicode', {'weight': 0.7})
('huffman coding', 'lempel\xe2\x80\x93ziv\xe2\x80\x93welch', {'weight': 0.7})
('huffman coding', 'binary trees', {'weight': 0.5})
('huffman coding', 'fax machines', {'weight': 0.7})
('huffman coding', 'lossless compression algorithms', {'weight': 0.5})
('huffman coding', 'huffyuv', {'weight': 0.7})
('huffman coding', 'shannon-fano coding', {'weight': 0.7})
('huffman coding', 'modified huffman coding', {'weight': 0.7})
('k-nearest neighbors', 'statistical classification', {'weight': 0.7})
('k-nearest neighbors', 'cluster hypothesis', {'weight': 0.7})
('k-nearest neighbors', 'search algorithms', {'weight': 0.5})
('k-nearest neighbors', 'instance-based learning', {'weight': 0.7})
('k-nearest neighbors', 'data clustering algorithms', {'weight': 0.5})
('k-nearest neighbors', 'dimension reduction', {'weight': 0.7})
('k-nearest neighbors', 'cluster analysis', {'weight': 0.7})
('k-nearest neighbors', 'principal component analysis', {'weight': 0.7})
('k-nearest neighbors', 'nearest centroid classifier', {'weight': 0.7})
('k-nearest neighbors', 'locality sensitive hashing', {'weight': 0.7})
('k-nearest neighbors', 'closest pair of points problem', {'weight': 0.7})
('k-nearest neighbors', 'minhash', {'weight': 0.7})
('k-nearest neighbors', 'statistics portal', {'weight': 0.7})
('k-nearest neighbors', 'computer science portal', {'weight': 0.7})
('k-nearest neighbors', 'data mining', {'weight': 0.7})
('k-nearest neighbors', 'machine learning portal', {'weight': 0.7})
('k-nearest neighbors', 'pattern recognition', {'weight': 0.7})
('k-nearest neighbors', 'nearest neighbor search', {'weight': 0.7})
('k-nearest neighbors', 'machine learning algorithms', {'weight': 0.5})
('k-nearest neighbors', 'curse of dimensionality', {'weight': 0.7})
('k-nearest neighbors', 'classification algorithms', {'weight': 0.5})
("chan's algorithm", 'convex hull algorithms', {'weight': 0.5})
('introsort', 'comparison sorts', {'weight': 0.5})
('christofides algorithm', 'approximation algorithms', {'weight': 0.5})
('christofides algorithm', 'travelling salesman problem', {'weight': 0.5})
('christofides algorithm', 'graph algorithms', {'weight': 0.5})
('christofides algorithm', 'spanning tree', {'weight': 0.5})
("floyd's cycle-finding algorithm", 'fixed points (mathematics)', {'weight': 0.5})
("floyd's cycle-finding algorithm", 'combinatorial algorithms', {'weight': 0.5})
('dynamic programming', 'systems engineering', {'weight': 0.5})
('dynamic programming', 'convexity in economics', {'weight': 0.7})
('dynamic programming', 'dynamic programming', {'weight': 1})
('dynamic programming', 'optimization algorithms and methods', {'weight': 0.5})
('dynamic programming', 'stochastic programming', {'weight': 0.7})
('dynamic programming', 'operations research', {'weight': 0.5})
('dynamic programming', 'computer science portal', {'weight': 0.7})
('dynamic programming', 'greedy algorithm', {'weight': 0.7})
('dynamic programming', 'mathematical optimization', {'weight': 0.5})
('dynamic programming', 'equations', {'weight': 0.5})
('dynamic programming', 'optimal control', {'weight': 0.5})
('dynamic programming', 'non-convexity (economics)', {'weight': 0.7})
('discrete logarithm', 'group theory', {'weight': 0.5})
('discrete logarithm', 'logarithms', {'weight': 0.5})
('discrete logarithm', 'modular arithmetic', {'weight': 0.5})
('discrete logarithm', 'unsolved problems in computer science', {'weight': 0.5})
('discrete logarithm', 'cryptography', {'weight': 0.5})
('discrete logarithm', 'binary operations', {'weight': 0.5})
('discrete logarithm', 'finite fields', {'weight': 0.5})
('discrete logarithm', 'computational hardness assumptions', {'weight': 0.5})
('levinson recursion', 'split levinson recursion', {'weight': 0.7})
('levinson recursion', 'autoregressive model', {'weight': 0.7})
('levinson recursion', 'numerical analysis', {'weight': 0.5})
('levinson recursion', 'matrices', {'weight': 0.5})
('levinson recursion', 'linear prediction', {'weight': 0.7})
('computational complexity theory', 'list of important publications in theoretical computer science', {'weight': 0.7})
('computational complexity theory', 'parameterized complexity', {'weight': 0.7})
('computational complexity theory', 'transcomputational problem', {'weight': 0.7})
('computational complexity theory', 'quantum complexity theory', {'weight': 0.7})
('computational complexity theory', 'proof complexity', {'weight': 0.7})
('computational complexity theory', 'context of computational complexity', {'weight': 0.7})
('computational complexity theory', 'category:computational problems', {'weight': 0.7})
('computational complexity theory', 'descriptive complexity theory', {'weight': 0.7})
('computational complexity theory', 'structural complexity theory', {'weight': 0.7})
('computational complexity theory', 'computational complexity theory', {'weight': 1})
('computational complexity theory', 'list of computability and complexity topics', {'weight': 0.7})
('computational complexity theory', 'game complexity', {'weight': 0.7})
('computational complexity theory', 'list of unsolved problems in computer science', {'weight': 0.7})
('computational complexity theory', 'list of complexity classes', {'weight': 0.7})
('doomsday algorithm', 'computus', {'weight': 0.7})
('doomsday algorithm', 'sat', {'weight': 0.7})
('doomsday algorithm', 'ordinal date', {'weight': 0.7})
('doomsday algorithm', 'wed', {'weight': 0.7})
('doomsday algorithm', 'julian calendar', {'weight': 0.5})
('doomsday algorithm', 'sun', {'weight': 0.7})
('doomsday algorithm', 'thu', {'weight': 0.7})
('doomsday algorithm', 'mental calculation', {'weight': 0.7})
('doomsday algorithm', 'calendar algorithms', {'weight': 0.5})
('doomsday algorithm', 'gregorian calendar', {'weight': 0.5})
('doomsday algorithm', '1973 introductions', {'weight': 0.5})
('doomsday algorithm', "zeller's congruence", {'weight': 0.7})
('doomsday algorithm', 'fri', {'weight': 0.7})
('doomsday algorithm', 'tue', {'weight': 0.7})
('doomsday algorithm', 'mon', {'weight': 0.7})
('feature detection', 'neurons', {'weight': 0.5})
('feature detection', 'neuroscience stubs', {'weight': 0.5})
('feature detection', 'perception', {'weight': 0.5})
('fractal compression', 'wavelet', {'weight': 0.7})
('fractal compression', 'lossy compression algorithms', {'weight': 0.5})
('fractal compression', 'image compression', {'weight': 0.7})
('fractal compression', 'fractals', {'weight': 0.5})
('fractal compression', 'iterated function system', {'weight': 0.7})
('elliptic curve cryptography', 'dnscurve', {'weight': 0.7})
('elliptic curve cryptography', 'quantum cryptography', {'weight': 0.7})
('elliptic curve cryptography', 'public-key cryptography', {'weight': 0.7})
('elliptic curve cryptography', 'elliptic curve cryptography', {'weight': 1})
('elliptic curve cryptography', 'ecdh', {'weight': 0.7})
('elliptic curve cryptography', 'ecc patents', {'weight': 0.7})
('elliptic curve cryptography', 'pairing-based cryptography', {'weight': 0.7})
('elliptic curve cryptography', 'ecmqv', {'weight': 0.7})
('elliptic curve cryptography', 'cryptocurrency', {'weight': 0.7})
('elliptic curve cryptography', 'elliptic curve digital signature algorithm', {'weight': 0.7})
('elliptic curve cryptography', 'elliptic curve point multiplication', {'weight': 0.7})
('elliptic curve cryptography', 'curve25519', {'weight': 0.7})
('elliptic curve cryptography', 'finite fields', {'weight': 0.5})
('elliptic curve cryptography', 'homomorphic signatures for network coding', {'weight': 0.7})
('approximate counting algorithm', 'randomized algorithms', {'weight': 0.5})
('importance sampling', 'rejection sampling', {'weight': 0.7})
('importance sampling', 'monte carlo methods', {'weight': 0.5})
('importance sampling', 'stratified sampling', {'weight': 0.7})
('importance sampling', 'vegas algorithm', {'weight': 0.7})
('importance sampling', 'monte carlo method', {'weight': 0.7})
('importance sampling', 'auxiliary field monte carlo', {'weight': 0.7})
('importance sampling', 'particle filter', {'weight': 0.7})
('importance sampling', 'variance reduction', {'weight': 0.7})
('importance sampling', 'recursive stratified sampling', {'weight': 0.7})
('importance sampling', 'stochastic simulation', {'weight': 0.5})
("benson's algorithm", 'optimization algorithms and methods', {'weight': 0.5})
("benson's algorithm", 'linear programming', {'weight': 0.5})
("benson's algorithm", 'applied mathematics stubs', {'weight': 0.5})
('flood fill', 'computer graphics algorithms', {'weight': 0.5})
('flood fill', "dijkstra's algorithm", {'weight': 0.7})
('flood fill', 'graph traversal', {'weight': 0.7})
('flood fill', 'connected-component labeling', {'weight': 0.7})
('hamming distance', 'string metric', {'weight': 0.7})
('hamming distance', 'closest string', {'weight': 0.7})
('hamming distance', 'cubes', {'weight': 0.5})
('hamming distance', 'word ladder', {'weight': 0.7})
('hamming distance', 'jaccard index', {'weight': 0.7})
('hamming distance', 'mathematics portal', {'weight': 0.7})
('hamming distance', 'metric geometry', {'weight': 0.5})
('hamming distance', 'euclidean distance', {'weight': 0.7})
('hamming distance', 'coding theory', {'weight': 0.5})
('hamming distance', 'damerau\xe2\x80\x93levenshtein distance', {'weight': 0.7})
('hamming distance', 's\xe3\xb8rensen similarity index', {'weight': 0.7})
('hamming distance', 'mahalanobis distance', {'weight': 0.7})
('hamming distance', 'string similarity measures', {'weight': 0.5})
("cristian's algorithm", 'distributed algorithms', {'weight': 0.5})
("cristian's algorithm", 'synchronization', {'weight': 0.5})
('error diffusion', 'printing terminology', {'weight': 0.5})
('error diffusion', 'floyd\xe2\x80\x93steinberg dithering', {'weight': 0.7})
('error diffusion', 'image processing', {'weight': 0.5})
('error diffusion', 'halftone', {'weight': 0.7})
('gibbs sampling', 'markov chain monte carlo', {'weight': 0.5})
('clock with adaptive replacement', 'virtual memory', {'weight': 0.5})
('clock with adaptive replacement', 'online algorithms', {'weight': 0.5})
('clock with adaptive replacement', 'memory management algorithms', {'weight': 0.5})
('constraint satisfaction', 'constraint (mathematics)', {'weight': 0.7})
('constraint satisfaction', 'constraint satisfaction problem', {'weight': 0.7})
('constraint satisfaction', 'satisfiability modulo theories', {'weight': 0.7})
('constraint satisfaction', 'constraint programming', {'weight': 0.5})
('constraint satisfaction', 'candidate solution', {'weight': 0.7})
('constraint satisfaction', 'boolean satisfiability problem', {'weight': 0.7})
('constraint satisfaction', 'knowledge-based configuration', {'weight': 0.7})
('constraint satisfaction', 'decision theory', {'weight': 0.7})
('apriori algorithm', 'data mining algorithms', {'weight': 0.5})
('computational mathematics', 'computational mathematics', {'weight': 1})
('computational mathematics', 'applied mathematics', {'weight': 0.5})
('computational mathematics', 'computational science', {'weight': 0.5})
('convex set', 'concave set', {'weight': 0.7})
('convex set', 'convex function', {'weight': 0.7})
('convex set', 'convex analysis', {'weight': 0.5})
('convex set', "helly's theorem", {'weight': 0.7})
('convex set', 'convex geometry', {'weight': 0.5})
('convex set', 'holomorphically convex hull', {'weight': 0.7})
('convex set', 'pseudoconvexity', {'weight': 0.7})
('convex set', 'convex optimization', {'weight': 0.7})
('convex set', 'shapley\xe2\x80\x93folkman lemma', {'weight': 0.7})
('convex set', "carath\xe3\xa9odory's theorem (convex hull)", {'weight': 0.7})
('convex set', 'convex metric space', {'weight': 0.7})
('convex set', 'convex curve', {'weight': 0.7})
('convex set', 'choquet theory', {'weight': 0.7})
('ellipsoid method', 'combinatorial optimization', {'weight': 0.5})
('ellipsoid method', 'linear programming', {'weight': 0.5})
('ellipsoid method', 'convex optimization', {'weight': 0.5})
('ellipsoid method', 'operations research', {'weight': 0.5})
('hermite interpolation', 'finite differences', {'weight': 0.7})
('hermite interpolation', 'factorial and binomial topics', {'weight': 0.5})
('hermite interpolation', 'polynomial interpolation', {'weight': 0.7})
('hermite interpolation', 'chinese remainder theorem - applications', {'weight': 0.7})
('hermite interpolation', 'cubic hermite spline', {'weight': 0.7})
('hermite interpolation', 'bernstein form', {'weight': 0.7})
('hermite interpolation', 'lagrange form', {'weight': 0.7})
('hermite interpolation', "neville's schema", {'weight': 0.7})
('hermite interpolation', 'newton series', {'weight': 0.7})
('hermite interpolation', 'interpolation', {'weight': 0.5})
('cyclic redundancy check', 'list of hash functions', {'weight': 0.7})
('cyclic redundancy check', 'lrc', {'weight': 0.7})
('cyclic redundancy check', 'header error correction', {'weight': 0.7})
('cyclic redundancy check', 'mathematics of cyclic redundancy checks', {'weight': 0.7})
('cyclic redundancy check', 'error detection and correction', {'weight': 0.7})
('cyclic redundancy check', 'binary arithmetic', {'weight': 0.5})
('cyclic redundancy check', 'computation of cyclic redundancy checks', {'weight': 0.7})
('cyclic redundancy check', 'cyclic redundancy checks', {'weight': 0.5})
('cyclic redundancy check', 'cksum', {'weight': 0.7})
('cyclic redundancy check', 'simple file verification', {'weight': 0.7})
('cyclic redundancy check', 'information security', {'weight': 0.7})
('cyclic redundancy check', 'finite fields', {'weight': 0.5})
('cyclic redundancy check', 'polynomial representations of cyclic redundancy checks', {'weight': 0.7})
('antipodal point', 'topology', {'weight': 0.5})
('error detection and correction', 'link adaptation', {'weight': 0.7})
('error detection and correction', 'forward error correction', {'weight': 0.7})
('error detection and correction', 'reliability (computer networking)', {'weight': 0.7})
('error detection and correction', 'computer errors', {'weight': 0.5})
('error detection and correction', 'list of error-correcting codes', {'weight': 0.7})
('error detection and correction', 'error detection and correction', {'weight': 1})
('error detection and correction', 'list of checksum algorithms', {'weight': 0.7})
('error detection and correction', 'list of algorithms for error detection and correction', {'weight': 0.7})
('error detection and correction', 'burst error-correcting code', {'weight': 0.7})
('fibonacci coding', 'golden ratio base', {'weight': 0.7})
('fibonacci coding', 'ostrowski numeration', {'weight': 0.7})
('fibonacci coding', "zeckendorf's theorem", {'weight': 0.7})
('fibonacci coding', 'varicode', {'weight': 0.7})
('fibonacci coding', 'lossless compression algorithms', {'weight': 0.5})
('fibonacci coding', 'non-standard positional numeral systems', {'weight': 0.5})
('fibonacci coding', 'universal code', {'weight': 0.7})
('fibonacci coding', 'fibonacci numbers', {'weight': 0.5})
('extended euclidean algorithm', 'euclid', {'weight': 0.5})
('extended euclidean algorithm', 'euclidean domain', {'weight': 0.7})
('extended euclidean algorithm', 'linear congruence theorem', {'weight': 0.7})
('extended euclidean algorithm', 'number theoretic algorithms', {'weight': 0.5})
('greedy randomized adaptive search procedure', 'combinatorial optimization', {'weight': 0.5})
('greedy randomized adaptive search procedure', 'combinatorics stubs', {'weight': 0.5})
('cordic', 'numerical analysis', {'weight': 0.5})
('cordic', 'trigonometry', {'weight': 0.5})
('global illumination', 'computer graphics portal', {'weight': 0.7})
('global illumination', 'global illumination algorithms', {'weight': 0.5})
('global illumination', 'category:global illumination software', {'weight': 0.7})
("banker's algorithm", 'concurrency control algorithms', {'weight': 0.5})
("banker's algorithm", 'dutch inventions', {'weight': 0.5})
('damm algorithm', 'group theory', {'weight': 0.5})
('damm algorithm', 'algebraic structures', {'weight': 0.5})
('damm algorithm', 'latin squares', {'weight': 0.5})
('damm algorithm', 'checksum algorithms', {'weight': 0.5})
('cryptographically secure pseudo-random number generator', 'cryptographic algorithms', {'weight': 0.5})
('cryptographically secure pseudo-random number generator', 'cryptographically secure pseudorandom number generators', {'weight': 0.5})
('cryptographically secure pseudo-random number generator', 'cryptographic primitives', {'weight': 0.5})
('fibonacci search technique', 'search algorithms', {'weight': 0.5})
("booth's multiplication algorithm", 'birkbeck, university of london', {'weight': 0.5})
("booth's multiplication algorithm", '1950 in science', {'weight': 0.5})
("booth's multiplication algorithm", 'redundant binary representation', {'weight': 0.7})
("booth's multiplication algorithm", 'non-adjacent form', {'weight': 0.7})
("booth's multiplication algorithm", 'multiplication alu', {'weight': 0.7})
("booth's multiplication algorithm", 'binary arithmetic', {'weight': 0.5})
("booth's multiplication algorithm", 'multiplication', {'weight': 0.5})
("booth's multiplication algorithm", '1950 in london', {'weight': 0.5})
("booth's multiplication algorithm", '1950 introductions', {'weight': 0.5})
("booth's multiplication algorithm", 'computer arithmetic', {'weight': 0.5})
('general number field sieve', 'integer factorization algorithms', {'weight': 0.5})
('general number field sieve', 'special number field sieve', {'weight': 0.7})
('cubic interpolation', 'bicubic interpolation', {'weight': 0.7})
('cubic interpolation', 'spline interpolation', {'weight': 0.7})
('cubic interpolation', 'multivariate interpolation', {'weight': 0.7})
('cubic interpolation', 'discrete spline interpolation', {'weight': 0.7})
('cubic interpolation', 'splines', {'weight': 0.5})
('cubic interpolation', 'hermite interpolation', {'weight': 0.7})
('cubic interpolation', 'interpolation', {'weight': 0.5})
('cubic interpolation', 'tricubic interpolation', {'weight': 0.7})
('gene expression programming', 'evolutionary algorithms', {'weight': 0.7})
('gene expression programming', 'genetic programming', {'weight': 0.7})
('gene expression programming', 'genetic algorithms', {'weight': 0.7})
('gene expression programming', 'neural networks', {'weight': 0.7})
('gene expression programming', 'decision trees', {'weight': 0.7})
('gene expression programming', 'machine learning', {'weight': 0.7})
('gene expression programming', 'evolutionary computation', {'weight': 0.5})
('gene expression programming', 'gene expression programming', {'weight': 1})
('gene expression programming', 'genexprotools', {'weight': 0.7})
('gene expression programming', 'artificial intelligence', {'weight': 0.7})
('algorithms for recovery and isolation exploiting semantics', 'database algorithms', {'weight': 0.5})
('depth-first search', 'search algorithms', {'weight': 0.5})
('depth-first search', 'breadth-first search', {'weight': 0.7})
('depth-first search', 'graph algorithms', {'weight': 0.5})
('depth-first search', 'tree traversal', {'weight': 0.7})
('depth-first search', 'search games', {'weight': 0.7})
('depth-first search', 'iterative deepening depth-first search', {'weight': 0.7})
('calculus', 'second-order logic', {'weight': 0.7})
('calculus', "tarski's world", {'weight': 0.7})
('calculus', 'relational algebra', {'weight': 0.7})
('calculus', 'higher-order logic', {'weight': 0.7})
('calculus', 'relational model', {'weight': 0.7})
('calculus', 'prenex normal form', {'weight': 0.7})
('calculus', 'predicate logic', {'weight': 0.5})
('calculus', 'type (model theory)', {'weight': 0.7})
('calculus', 'acl2', {'weight': 0.7})
('calculus', 'extension by definitions', {'weight': 0.7})
('calculus', 'skolem normal form', {'weight': 0.7})
('calculus', 'list of logic symbols', {'weight': 0.7})
('calculus', 'truth table', {'weight': 0.7})
('calculus', 'model theory', {'weight': 0.5})
('calculus', 'systems of formal logic', {'weight': 0.5})
('calculus', 'herbrandization', {'weight': 0.7})
('calculus', 'l\xe3\xb6wenheim number', {'weight': 0.7})
('calculus', 'equiconsistency', {'weight': 0.7})
('bucket sort', 'sorting algorithms', {'weight': 0.5})
('bucket sort', 'stable sorts', {'weight': 0.5})
('hidden surface determination', 'powervr', {'weight': 0.7})
('hidden surface determination', 'list of sega arcade system boards', {'weight': 0.7})
('hidden surface determination', '3d rendering', {'weight': 0.5})
('hidden surface determination', 'dreamcast', {'weight': 0.7})
('berkeley algorithm', 'distributed algorithms', {'weight': 0.5})
('k-means clustering', 'self-organizing map', {'weight': 0.7})
('k-means clustering', 'canopy clustering algorithm', {'weight': 0.7})
('k-means clustering', 'silhouette clustering', {'weight': 0.7})
('k-means clustering', 'centroidal voronoi tessellation', {'weight': 0.7})
('k-means clustering', 'linde\xe2\x80\x93buzo\xe2\x80\x93gray algorithm', {'weight': 0.7})
('k-means clustering', 'nearest centroid classifier', {'weight': 0.7})
('k-means clustering', 'statistical algorithms', {'weight': 0.5})
('k-means clustering', 'k q-flats', {'weight': 0.7})
('k-means clustering', 'data clustering algorithms', {'weight': 0.5})
('k-means clustering', 'head/tail breaks', {'weight': 0.7})
('data clustering', 'latent class analysis', {'weight': 0.7})
('data clustering', 'data mining', {'weight': 0.5})
('data clustering', 'clustering high-dimensional data', {'weight': 0.7})
('data clustering', 'structured data analysis', {'weight': 0.7})
('data clustering', 'spectral clustering', {'weight': 0.7})
('data clustering', 'neighbourhood components analysis', {'weight': 0.7})
('data clustering', 'artificial neural network', {'weight': 0.7})
('data clustering', 'nearest neighbor search', {'weight': 0.7})
('data clustering', 'multidimensional scaling', {'weight': 0.7})
('data clustering', 'conceptual clustering', {'weight': 0.7})
('data clustering', 'geostatistics', {'weight': 0.5})
('data clustering', 'principal component analysis', {'weight': 0.7})
('data clustering', 'sequence clustering', {'weight': 0.7})
('data clustering', 'data stream clustering', {'weight': 0.7})
('data clustering', 'dimension reduction', {'weight': 0.7})
('data clustering', 'curse of dimensionality', {'weight': 0.7})
('data clustering', 'cluster-weighted modeling', {'weight': 0.7})
('data clustering', 'consensus clustering', {'weight': 0.7})
('data clustering', 'parallel coordinates', {'weight': 0.7})
('data clustering', 'constrained clustering', {'weight': 0.7})
('data clustering', 'determining the number of clusters in a data set', {'weight': 0.7})
('data clustering', 'cluster analysis', {'weight': 0.5})
('earley parser', 'dynamic programming', {'weight': 0.5})
('earley parser', 'parsing algorithms', {'weight': 0.7})
('earley parser', 'cyk algorithm', {'weight': 0.7})
('earley parser', 'context-free grammar', {'weight': 0.7})
('bandwidth (matrix theory)', 'graph bandwidth', {'weight': 0.7})
('bandwidth (matrix theory)', 'sparse matrices', {'weight': 0.5})
('list of machine learning algorithms', 'machine learning algorithms', {'weight': 0.5})
('list of machine learning algorithms', 'artificial intelligence', {'weight': 0.5})
('list of machine learning algorithms', 'data mining', {'weight': 0.5})
('analytical hierarchy', 'effective descriptive set theory', {'weight': 0.5})
('analytical hierarchy', 'hierarchy', {'weight': 0.5})
('analytical hierarchy', 'computability theory', {'weight': 0.5})
('analytical hierarchy', 'mathematical logic hierarchies', {'weight': 0.5})
('exact cover', 'list of np-complete problems', {'weight': 0.7})
('exact cover', 'constraint satisfaction problem', {'weight': 0.7})
('exact cover', 'hitting set', {'weight': 0.7})
('exact cover', 'difference map algorithm', {'weight': 0.7})
('exact cover', 'dancing links', {'weight': 0.7})
('exact cover', 'perfect matching', {'weight': 0.7})
('exact cover', '3-dimensional matching', {'weight': 0.7})
('exact cover', 'np-complete problems', {'weight': 0.5})
('exact cover', "karp's 21 np-complete problems", {'weight': 0.7})
('exact cover', "knuth's algorithm x", {'weight': 0.7})
('exact cover', 'theoretical computer science', {'weight': 0.5})
('histogram equalization', 'normalization (image processing)', {'weight': 0.7})
('histogram equalization', 'histogram matching', {'weight': 0.7})
('histogram equalization', 'image processing', {'weight': 0.5})
('histogram equalization', 'adaptive histogram equalization', {'weight': 0.7})
('fast folding algorithm', 'algorithms and data structures stubs', {'weight': 0.5})
('fast folding algorithm', 'computer science stubs', {'weight': 0.5})
('fast folding algorithm', 'signal processing', {'weight': 0.5})
('levenshtein coding', 'lossless compression algorithms', {'weight': 0.5})
('levenshtein coding', 'elias omega coding', {'weight': 0.7})
('levenshtein coding', 'numeral systems', {'weight': 0.5})
('levenshtein coding', 'iterated logarithm', {'weight': 0.7})
('dtmf', 'broadcast engineering', {'weight': 0.5})
('dtmf', 'special information tones', {'weight': 0.7})
('dtmf', 'telephony signals', {'weight': 0.5})
('dtmf', 'selective calling', {'weight': 0.7})
('fast clipping', 'clipping (computer graphics)', {'weight': 0.7})
('hungarian method', 'combinatorial optimization', {'weight': 0.5})
('hungarian method', 'matching', {'weight': 0.5})
('geometric hashing', 'geometric data structures', {'weight': 0.5})
('geometric hashing', 'computer vision', {'weight': 0.5})
('geometric hashing', 'search algorithms', {'weight': 0.5})
('hopfield net', 'ising model', {'weight': 0.7})
('hopfield net', 'associative memory (disambiguation)', {'weight': 0.7})
('hopfield net', 'dynamical systems model of cognition', {'weight': 0.7})
('hopfield net', 'boltzmann machine', {'weight': 0.7})
('hopfield net', 'hebbian theory', {'weight': 0.7})
('hopfield net', 'artificial neural networks', {'weight': 0.5})
('hopfield net', 'autoassociative memory', {'weight': 0.7})
('index calculus algorithm', 'group theory', {'weight': 0.5})
('gray code', 'factorial number system', {'weight': 0.7})
('gray code', 'linear feedback shift register', {'weight': 0.7})
('gray code', 'steinhaus\xe2\x80\x93johnson\xe2\x80\x93trotter algorithm', {'weight': 0.7})
('gray code', 'gillham code', {'weight': 0.7})
('gray code', 'numeral systems', {'weight': 0.5})
('gray code', 'data transmission', {'weight': 0.5})
('gray code', 'de bruijn sequence', {'weight': 0.7})
('lamport ordering', 'distributed computing problems', {'weight': 0.5})
('heapsort', 'sorting algorithms', {'weight': 0.5})
('heapsort', 'comparison sorts', {'weight': 0.5})
('heapsort', 'heaps (data structures)', {'weight': 0.5})
('congruence of squares', 'integer factorization algorithms', {'weight': 0.5})
('congruence of squares', 'congruence relation', {'weight': 0.7})
('congruence of squares', 'modular arithmetic', {'weight': 0.5})
('information theory', 'information theory and measure theory', {'weight': 0.7})
('information theory', 'information field theory', {'weight': 0.7})
('information theory', 'encoder', {'weight': 0.7})
('information theory', 'formal sciences', {'weight': 0.5})
('information theory', 'network coding', {'weight': 0.7})
('information theory', 'self-information', {'weight': 0.7})
('information theory', 'ban (unit)', {'weight': 0.7})
('information theory', 'unicity distance', {'weight': 0.7})
('information theory', 'history of information theory', {'weight': 0.7})
('information theory', 'minimum description length', {'weight': 0.7})
('information theory', 'kolmogorov complexity', {'weight': 0.7})
('information theory', 'communication theory', {'weight': 0.7})
('information theory', 'cybernetics', {'weight': 0.7})
('information theory', 'logic of information', {'weight': 0.7})
('information theory', 'unsolved problems', {'weight': 0.7})
('information theory', 'minimum message length', {'weight': 0.7})
('information theory', 'philosophy of information', {'weight': 0.7})
('information theory', 'conditional entropy', {'weight': 0.7})
('information theory', 'redundancy', {'weight': 0.7})
('information theory', 'receiver (information theory)', {'weight': 0.7})
('information theory', 'hartley, r.v.l.', {'weight': 0.7})
('information theory', 'variety', {'weight': 0.7})
('information theory', 'inductive probability', {'weight': 0.7})
('information theory', 'algorithmic information theory', {'weight': 0.7})
('information theory', 'list of important publications', {'weight': 0.7})
('information theory', 'semiotic information theory', {'weight': 0.7})
('information theory', 'entropy in thermodynamics and information theory', {'weight': 0.7})
('information theory', 'estimation theory', {'weight': 0.7})
('information theory', 'active networking', {'weight': 0.7})
('information theory', 'intelligence (information gathering)', {'weight': 0.7})
('information theory', 'gambling', {'weight': 0.7})
('information theory', 'timeline of information theory', {'weight': 0.7})
('information theory', 'joint entropy', {'weight': 0.7})
('information theory', 'shannon, c.e.', {'weight': 0.7})
('information theory', 'channel (communications)', {'weight': 0.7})
('information theory', 'cryptography', {'weight': 0.7})
('information theory', 'quantum information science', {'weight': 0.7})
('information theory', 'mathematics portal', {'weight': 0.7})
('information theory', 'fisher information', {'weight': 0.7})
('information theory', 'covert channel', {'weight': 0.7})
('information theory', 'constructor theory', {'weight': 0.7})
('information theory', 'information geometry', {'weight': 0.7})
('information theory', 'cryptanalysis', {'weight': 0.7})
('information theory', 'differential entropy', {'weight': 0.7})
('information theory', 'coding theory', {'weight': 0.7})
('information theory', 'channel capacity', {'weight': 0.7})
('information theory', 'bayesian inference', {'weight': 0.7})
('information theory', 'yockey, h.p.', {'weight': 0.7})
('information theory', 'source coding', {'weight': 0.7})
('information theory', 'communication source', {'weight': 0.7})
('information theory', 'information asymmetry', {'weight': 0.7})
('information theory', 'r\xe3\xa9nyi entropy', {'weight': 0.7})
('information theory', 'mutual information', {'weight': 0.7})
('information theory', 'pointwise mutual information', {'weight': 0.7})
('information theory', 'information age', {'weight': 0.5})
('information theory', 'information entropy', {'weight': 0.7})
('information theory', 'information theory', {'weight': 1})
('information theory', 'kullback\xe2\x80\x93leibler divergence', {'weight': 0.7})
('information theory', 'information algebra', {'weight': 0.7})
('information theory', 'algorithmic probability', {'weight': 0.7})
('information theory', 'detection theory', {'weight': 0.7})
('information theory', 'seismic exploration', {'weight': 0.7})
('greatest common divisor', 'multiplicative functions', {'weight': 0.5})
('greatest common divisor', 'least common multiple', {'weight': 0.7})
('greatest common divisor', 'euclidean algorithm', {'weight': 0.7})
('greatest common divisor', 'lowest common denominator', {'weight': 0.7})
('greatest common divisor', 'bezout domain', {'weight': 0.7})
('greatest common divisor', 'extended euclidean algorithm', {'weight': 0.7})
('greatest common divisor', 'polynomial greatest common divisor', {'weight': 0.7})
('greatest common divisor', 'binary gcd algorithm', {'weight': 0.7})
('greatest common divisor', 'coprime', {'weight': 0.7})
('greatest common divisor', 'maximal common divisor', {'weight': 0.7})
('backpropagation', 'ensemble learning', {'weight': 0.7})
('backpropagation', 'overfitting', {'weight': 0.7})
('backpropagation', 'biological neural network', {'weight': 0.7})
('backpropagation', 'machine learning algorithms', {'weight': 0.5})
('backpropagation', 'catastrophic interference', {'weight': 0.7})
('backpropagation', 'ai portal', {'weight': 0.7})
('backpropagation', 'machine learning portal', {'weight': 0.7})
('backpropagation', 'artificial neural networks', {'weight': 0.5})
('backpropagation', 'artificial neural network', {'weight': 0.7})
('backpropagation', 'adaboost', {'weight': 0.7})
('bogosort', 'sorting algorithms', {'weight': 0.5})
('bogosort', 'comparison sorts', {'weight': 0.5})
('bogosort', 'stooge sort', {'weight': 0.7})
('bogosort', 'computer humor', {'weight': 0.5})
('bogosort', 'las vegas algorithm', {'weight': 0.7})
('dictionary coder', 'lossless compression algorithms', {'weight': 0.5})
('dictionary coder', 'entropy encoding', {'weight': 0.7})
('burstsort', 'sorting algorithms', {'weight': 0.5})
('burstsort', 'algorithms and data structures stubs', {'weight': 0.5})
('burstsort', 'computer science stubs', {'weight': 0.5})
('generalised hough transform', 'hough transform', {'weight': 0.7})
('generalised hough transform', 'template matching', {'weight': 0.7})
('generalised hough transform', 'randomized hough transform', {'weight': 0.7})
('generalised hough transform', 'radon transform', {'weight': 0.7})
('generalised hough transform', 'image processing', {'weight': 0.5})
('generalised hough transform', 'outline of object recognition', {'weight': 0.7})
('bees algorithm', 'l\xe3\xa9vy flight foraging hypothesis', {'weight': 0.7})
('bees algorithm', 'artificial bee colony algorithm', {'weight': 0.7})
('bees algorithm', 'particle swarm optimization', {'weight': 0.7})
('bees algorithm', 'manufacturing engineering centre', {'weight': 0.7})
('bees algorithm', 'optimization algorithms and methods', {'weight': 0.5})
('bees algorithm', 'swarm intelligence', {'weight': 0.7})
('bees algorithm', 'metaheuristic', {'weight': 0.7})
('bees algorithm', 'combinatorial algorithms', {'weight': 0.5})
('bees algorithm', 'collective intelligence', {'weight': 0.5})
('bees algorithm', 'bees', {'weight': 0.5})
('bees algorithm', 'ant colony optimization algorithms', {'weight': 0.7})
('bees algorithm', 'evolutionary computation', {'weight': 0.7})
('bees algorithm', 'mathematical optimization', {'weight': 0.7})
('bees algorithm', 'intelligent water drops', {'weight': 0.7})
('bees algorithm', 'artificial intelligence', {'weight': 0.5})
('fast fourier transform', 'overlap save', {'weight': 0.7})
('fast fourier transform', 'odlyzko\xe2\x80\x93sch\xe3\xb6nhage algorithm', {'weight': 0.7})
('fast fourier transform', 'multidimensional transform', {'weight': 0.7})
('fast fourier transform', 'goertzel algorithm', {'weight': 0.7})
('fast fourier transform', "rader's fft algorithm", {'weight': 0.7})
('fast fourier transform', 'prime-factor fft algorithm', {'weight': 0.7})
('fast fourier transform', 'digital signal processing', {'weight': 0.5})
('fast fourier transform', 'fast walsh\xe2\x80\x93hadamard transform', {'weight': 0.7})
('fast fourier transform', "bluestein's fft algorithm", {'weight': 0.7})
('fast fourier transform', 'spectral music', {'weight': 0.7})
('fast fourier transform', 'butterfly diagram', {'weight': 0.7})
('fast fourier transform', 'math kernel library', {'weight': 0.7})
('fast fourier transform', 'dirichlet series', {'weight': 0.7})
('fast fourier transform', 'fft algorithms', {'weight': 0.5})
('fast fourier transform', 'fftw', {'weight': 0.7})
('fast fourier transform', 'generalized distributive law', {'weight': 0.7})
('fast fourier transform', 'time series', {'weight': 0.7})
('fast fourier transform', 'ffts', {'weight': 0.7})
('fast fourier transform', 'overlap add', {'weight': 0.7})
('fast fourier transform', 'discrete transforms', {'weight': 0.5})
('fast fourier transform', "bruun's fft algorithm", {'weight': 0.7})
('fast fourier transform', 'fftpack', {'weight': 0.7})
('fast fourier transform', 'spectrum analyzers', {'weight': 0.7})
('context tree weighting', 'computer science stubs', {'weight': 0.5})
('context tree weighting', 'lossless compression algorithms', {'weight': 0.5})
("halley's method", 'root-finding algorithms', {'weight': 0.5})
('coding theory', 'hamming weight', {'weight': 0.7})
('coding theory', 'hamming distance', {'weight': 0.7})
('coding theory', 'list of algebraic coding theory topics', {'weight': 0.7})
('coding theory', 'coding gain', {'weight': 0.7})
('coding theory', 'spatial diversity coding', {'weight': 0.7})
('coding theory', 'abnnr and ael codes', {'weight': 0.7})
('coding theory', 'timeline of information theory, data compression, and error correcting codes', {'weight': 0.7})
('coding theory', 'information theory', {'weight': 0.7})
('coding theory', 'folded reed\xe2\x80\x93solomon codes', {'weight': 0.7})
('coding theory', 'error detection and correction', {'weight': 0.5})
('coding theory', 'covering code', {'weight': 0.7})
('coding theory', 'spatial interference cancellation coding', {'weight': 0.7})
('coding theory', 'lee distance', {'weight': 0.7})
('coding theory', 'coding theory', {'weight': 1})
('coding theory', 'error-correcting code', {'weight': 0.7})
('coding theory', 'spatial multiplex coding', {'weight': 0.7})
('coding theory', 'group testing', {'weight': 0.7})
('coding theory', 'mimo', {'weight': 0.7})
('coding theory', 'multiple antenna research', {'weight': 0.7})
("buchberger's algorithm", 'commutative algebra', {'weight': 0.5})
("buchberger's algorithm", 'rewriting systems', {'weight': 0.5})
("buchberger's algorithm", 'algebraic geometry', {'weight': 0.5})
("buchberger's algorithm", 'computer algebra', {'weight': 0.5})
('level set method', 'computer graphics algorithms', {'weight': 0.5})
('level set method', 'computational fluid dynamics', {'weight': 0.5})
('level set method', 'numerical analysis', {'weight': 0.5})
('level set method', 'lsm/m level set method for drawing parameter plane', {'weight': 0.7})
('level set method', 'image segmentation#level set methods', {'weight': 0.7})
('level set method', 'immersed boundary method', {'weight': 0.7})
('level set method', 'stochastic eulerian lagrangian method', {'weight': 0.7})
('level set method', 'volume of fluid method', {'weight': 0.7})
('level set method', 'level set (data structures)', {'weight': 0.7})
('level set method', 'lsm/j level set method for drawing dynamical plane', {'weight': 0.7})
('level set method', 'mathematical optimization', {'weight': 0.5})
('level set method', 'image processing', {'weight': 0.5})
('arnoldi iteration', 'numerical linear algebra', {'weight': 0.5})
("hirschberg's algorithm", 'dynamic programming', {'weight': 0.5})
("hirschberg's algorithm", 'bioinformatics algorithms', {'weight': 0.5})
("hirschberg's algorithm", 'smith waterman algorithm', {'weight': 0.7})
("hirschberg's algorithm", 'sequence alignment algorithms', {'weight': 0.5})
("hirschberg's algorithm", 'needleman-wunsch algorithm', {'weight': 0.7})
("hirschberg's algorithm", 'levenshtein distance', {'weight': 0.7})
("hirschberg's algorithm", 'longest common subsequence', {'weight': 0.7})
('canopy clustering algorithm', 'algorithms and data structures stubs', {'weight': 0.5})
('canopy clustering algorithm', 'computer science stubs', {'weight': 0.5})
('canopy clustering algorithm', 'data clustering algorithms', {'weight': 0.5})
('canopy clustering algorithm', 'statistical algorithms', {'weight': 0.5})
('karatsuba algorithm', 'multiplication', {'weight': 0.5})
('karatsuba algorithm', 'computer arithmetic algorithms', {'weight': 0.5})
('fitness proportionate selection', 'reward-based selection', {'weight': 0.7})
('fitness proportionate selection', 'genetic algorithms', {'weight': 0.5})
('fitness proportionate selection', 'stochastic universal sampling', {'weight': 0.7})
('fitness proportionate selection', 'tournament selection', {'weight': 0.7})
('bitap algorithm', 'string matching algorithms', {'weight': 0.5})
('double dabble', 'binary arithmetic', {'weight': 0.5})
('double dabble', 'computer arithmetic algorithms', {'weight': 0.5})
('byte pair encoding', 'lossless compression algorithms', {'weight': 0.5})
('discrete fourier transform', 'numerical analysis', {'weight': 0.5})
('discrete fourier transform', 'dft matrix', {'weight': 0.7})
('discrete fourier transform', 'multidimensional transform', {'weight': 0.7})
('discrete fourier transform', 'fftw', {'weight': 0.7})
('discrete fourier transform', 'fast fourier transform', {'weight': 0.7})
('discrete fourier transform', 'zak transform', {'weight': 0.7})
('discrete fourier transform', 'list of fourier-related transforms', {'weight': 0.7})
('discrete fourier transform', 'companion matrix', {'weight': 0.7})
('discrete fourier transform', 'generalizations of pauli matrices', {'weight': 0.7})
('discrete fourier transform', 'fftpack', {'weight': 0.7})
('discrete fourier transform', 'unitary operators', {'weight': 0.5})
('discrete fourier transform', 'discrete transforms', {'weight': 0.5})
('discrete fourier transform', 'fourier analysis', {'weight': 0.5})
('discrete fourier transform', 'digital signal processing', {'weight': 0.5})
("buzen's algorithm", 'stochastic processes', {'weight': 0.5})
("buzen's algorithm", 'queueing theory', {'weight': 0.5})
("buzen's algorithm", 'statistical algorithms', {'weight': 0.5})
('coloring algorithm', 'graph theory', {'weight': 0.5})
('coloring algorithm', 'graph coloring game', {'weight': 0.7})
('coloring algorithm', 'computational problems in graph theory', {'weight': 0.5})
('coloring algorithm', 'edge coloring', {'weight': 0.7})
('coloring algorithm', 'np-hard problems', {'weight': 0.5})
('coloring algorithm', 'haj\xe3\xb3s construction', {'weight': 0.7})
('coloring algorithm', 'extensions and generalizations of graphs', {'weight': 0.5})
('coloring algorithm', 'mathematics of sudoku', {'weight': 0.7})
('coloring algorithm', 'multipartite graph', {'weight': 0.7})
('coloring algorithm', 'critical graph', {'weight': 0.7})
('coloring algorithm', 'np-complete problems', {'weight': 0.5})
('coloring algorithm', 'circular coloring', {'weight': 0.7})
('coloring algorithm', 'graph coloring', {'weight': 0.5})
('coloring algorithm', 'uniquely colorable graph', {'weight': 0.7})
('coloring algorithm', 'graph homomorphism', {'weight': 0.7})
('fair-share scheduling', 'processor scheduling algorithms', {'weight': 0.5})
('antiderivatives', 'integral calculus', {'weight': 0.5})
('antiderivatives', 'area', {'weight': 0.7})
('antiderivatives', 'antiderivative (complex analysis)', {'weight': 0.7})
('antiderivatives', 'lists of integrals', {'weight': 0.7})
('antiderivatives', 'symbolic integration', {'weight': 0.7})
('antiderivatives', 'linear operators in calculus', {'weight': 0.5})
('closest pair problem', 'set cover problem', {'weight': 0.7})
('closest pair problem', 'nearest neighbor search', {'weight': 0.7})
('closest pair problem', 'gis', {'weight': 0.7})
('closest pair problem', 'geometric algorithms', {'weight': 0.5})
('integer factorization', 'integer factorization algorithms', {'weight': 0.5})
('integer factorization', 'unsolved problems in computer science', {'weight': 0.5})
('integer factorization', 'canonical representation of a positive integer', {'weight': 0.7})
('integer factorization', 'multiplicative partition', {'weight': 0.7})
('integer factorization', 'factorization', {'weight': 0.7})
('integer factorization', 'computational hardness assumptions', {'weight': 0.5})
('integer factorization', 'partition (number theory)', {'weight': 0.7})
('fermat primality test', 'modular arithmetic', {'weight': 0.5})
('fermat primality test', 'primality tests', {'weight': 0.5})
("bresenham's line algorithm", 'computer graphics algorithms', {'weight': 0.5})
("bresenham's line algorithm", 'digital geometry', {'weight': 0.5})
("bresenham's line algorithm", "xiaolin wu's line algorithm", {'weight': 0.7})
("bresenham's line algorithm", 'antialiasing', {'weight': 0.7})
("bresenham's line algorithm", 'digital differential analyzer (graphics algorithm)', {'weight': 0.7})
("bresenham's line algorithm", 'midpoint circle algorithm', {'weight': 0.7})
('cutting-plane method', 'optimization algorithms and methods', {'weight': 0.5})
('cutting-plane method', 'branch and bound', {'weight': 0.7})
('cutting-plane method', 'column generation', {'weight': 0.7})
('cutting-plane method', "benders' decomposition", {'weight': 0.7})
('cutting-plane method', 'branch and cut', {'weight': 0.7})
('cutting-plane method', 'dantzig-wolfe decomposition', {'weight': 0.7})
('espresso heuristic logic minimizer', 'electronics optimization', {'weight': 0.5})
('espresso heuristic logic minimizer', 'electronic design automation software', {'weight': 0.5})
